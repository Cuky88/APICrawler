{
  "344": {
    "api_url": "crowdpay.com", 
    "progweb_url": "https://www.programmableweb.com/api/goldstar-trust-crowdpay", 
    "progweb_date": "09.23.2016", 
    "progweb_descr": "The GoldStar Trust Crowdpay API integrates payments into applications. It is targeted to investors interested in crowdfunding offerings. Available in JSON architecture with token as authentication.", 
    "api_name": "GoldStar Trust Crowdpay", 
    "progweb_cat": "Payments,Banking", 
    "crawled_date": "2017-06-10T13:59:23.130625"
  }, 
  "0": {
    "link5": "https://paydock.com/developers/", 
    "link4": "https://paydock.com/gateway/securepay/", 
    "link1": "https://docs.paydock.com/", 
    "api_url": "paydock.com", 
    "link3": "https://paydock.com/gateway/payway/", 
    "link2": "https://paydock.com/powerful-api-documentation-developers/", 
    "progweb_url": "https://www.programmableweb.com/api/paydock", 
    "progweb_date": "05.11.2017",
    "progweb_descr": "The Paydock API integrates payments into applications and web services. It is available in REST architecture with Public API Key as the authentication method and JSON format to perform callbacks. Paydock is a smart payments platform. The company is based in Sydney, Australia.", 
    "api_name": "Paydock", 
    "progweb_cat": "Payments,Transactions", 
    "descr5": "menu featuresresourcesgatewayspartnerssandboxdeveloper docsteamblogcontactlog 3 developers 're happy arepaydock changes game developers agencies alikeworking payment gateways hard working large numbers payment gateways \\( juggling client requirements \\) even harder hear like know comes development profitability third party management tall order especially payments often barriers final delivery however fear paydock help providing single easy use interface across many payment gateways paydock removes pain dealing many payment gatewaysenhances available functionality built recurring notification processing engineimproves customer experience technical solutions realtime workflow enginesreduces sales friction enabling customers work preferred gateways limited small setremoves exposure bring gateway business gateway requirementsincreases team efficiency training gatewayincreases profit reduces cost gateway development effort reduced 50 become gateway ninjawe dedicated team support api docs simple easy use importantly developers love developers paydock journey enabling scalable profitable solutions across gateways geographies currencies payment types without usual issues efficient best practice compliant deliver rich feature set without get distracted building services love regardless gateway used let us know help via sales paydock comcontact us nowdownload developer info packwe developers agencies profits apps saas startupspaydock paydock easy use payments framework providing subscription one billing workflow capabilities regardless payment gateway connected reduce costs increase revenue gaining realtime insight customer payment activity tweets thepaydock get latest facebook updates twitter updates find morepartnersour teamdeveloper documentationtrial sandboxcareersprivacy policy recent posts paydock exhibits b2b technology conference cebit sydney simpler development paydock net sdk release boost revenue payment methods follow us paydock pci dss v3 2 level 1 service provider copyright paydock 1 155 clarence st sydney au ph 61 2 8218 2141 uk ph 44 20 3287 8218", 
    "descr4": "menu featuresresourcesgatewayspartnerssandboxdeveloper docsteamblogcontactlog select gateway choose gateway get help connecting read tips best map data select gateway assembly paymentsfortepaypal checkoutpaperless paymentssqidmerchant warriornabworldpaypayment expresssecurepayauthorize netezidebitpaywaybraintreepaypal payments proewaystripepin payments select featurechoose feature see gateways compatible paydock select features credit carddirect debitcredit carddirect debitsingle apimulti currencynotifications webhookspaypal classic paydock securepaywe making working securepay delightful use securepay one gateways paydock gain access following capabilities immediately notifications webhookssms notificationsone billingcredit cardrefunddirect debitrecurring billingcredit carddirect debitsingle api securepay \\? securepay australian post business specialising cost effective online payment solutions able integrate major shopping cart functionalities offered two plans securepay online payments payment gateway securepay online payments bundles payment gateway merchant account one package whilst payment gateway solution merchants need supply merchant account see securepay website information paydock \\? paydock universal payments adapter giving merchants complete control customer payments experience enable merchants offer customers payment methods drastically reduce cost payment gateway integration see information paydock features adding securepay paydock accountwe currently support securepay api need account registered pass sign process official site input gateway merchant password paydock please note securepay also supports direct debit payments credit card required process transactiongateway labelyou find text field gateway label connecting gateway paydock \\? field custom labels e g use several accounts one gateway describe wish avoid confusion \\( pin1 pin2 pin3 etc \\) helpful informationwe provided test card data official securepay documentation please bear mind may change convenience getting expected responses please contact securepay refer official documentation securepay supports direct debit payments test bsb account gateway refundscurrently securepay supports refunds credit cards transactions direct debit transactions refunded yet helpful linkssecure xml api pdfsecurexml api periodic triggered add pdfgetting setup securepayif existing securepay account get started straight away share developers agencies profits apps saas startupspaydock paydock easy use payments framework providing subscription one billing workflow capabilities regardless payment gateway connected reduce costs increase revenue gaining realtime insight customer payment activity tweets thepaydock get latest facebook updates twitter updates find morepartnersour teamdeveloper documentationtrial sandboxcareersprivacy policy recent posts paydock exhibits b2b technology conference cebit sydney simpler development paydock net sdk release boost revenue payment methods follow us paydock pci dss v3 2 level 1 service provider copyright paydock 1 155 clarence st sydney au ph 61 2 8218 2141 uk ph 44 20 3287 8218", 
    "descr3": "menu featuresresourcesgatewayspartnerssandboxdeveloper docsteamblogcontactlog select gateway choose gateway get help connecting read tips best map data select gateway assembly paymentsfortepaypal checkoutpaperless paymentssqidmerchant warriornabworldpaypayment expresssecurepayauthorize netezidebitpaywaybraintreepaypal payments proewaystripepin payments select featurechoose feature see gateways compatible paydock select features credit carddirect debitcredit carddirect debitsingle apimulti currencynotifications webhookspaypal classic paydock paywaywe making working payway simple use payway one gateways paydock gain access following capabilities immediately notifications webhookssms notificationsone billingcredit cardrefunddirect debitrecurring billingcredit carddirect debitsingle api payway \\? payway low cost westpac run payment gateway collect process customer payments payway supports direct debit credit card bpay australia post payments giving customers option pay counter online phone additionally payway also offers real time data access day settlement platform subject approvalsee westpac payway website information paydock \\? paydock universal payments adapter giving merchants complete control customer payments experience enable merchants offer customers payment methods drastically reduce cost payment gateway integration see information paydock features adding payway paydock accountadd merchant id customer username customer password \\( found payway security section \\) also need add https api paydock com v1 browser redirect urls gateway account settings clicking menu item rest api choose browser redirect urls note recurring billing storing vault activated westpac account need contact payway support \\( au 1300 727 111 \\) activate see transactions paydock gateway labelyou find text field gateway label connecting gateway paydock \\? field custom labels e g use several accounts one gateway describe wish avoid confusion \\( pin1 pin2 pin3 etc \\) helpful informationwe provided test card data official payway documentation please bear mind may change convenience getting expected responses please contact payway refer official documentation helpful linksrest api docs developers guidegetting setup paywayif existing account api module activated get started straight away api module activated need give payway ring get enabled interested using payway first time customer westpac customer wish add payway services payway enquiry page best bet share developers agencies profits apps saas startupspaydock paydock easy use payments framework providing subscription one billing workflow capabilities regardless payment gateway connected reduce costs increase revenue gaining realtime insight customer payment activity tweets thepaydock get latest facebook updates twitter updates find morepartnersour teamdeveloper documentationtrial sandboxcareersprivacy policy recent posts paydock exhibits b2b technology conference cebit sydney simpler development paydock net sdk release boost revenue payment methods follow us paydock pci dss v3 2 level 1 service provider copyright paydock 1 155 clarence st sydney au ph 61 2 8218 2141 uk ph 44 20 3287 8218", 
    "descr2": "menu featuresresourcesgatewayspartnerssandboxdeveloper docsteamblogcontactlog powerful api documentation developerswe made eliminating payments pain even easier ecommerce retailers online transactors better looking user friendly developer documentation jump https docs paydock com experience refreshed user interface comprehensive code snippets intuitive user experience top easy digest information navigating paydock api paydock js iframe experience want make developer experience using paydock painless possible also integrated entire domain also new chat tool technical non technical support entire paydock team message away afraid pop love paydock team 0 comments share leave comment cancel replywe developers agencies profits apps saas startupspaydock paydock easy use payments framework providing subscription one billing workflow capabilities regardless payment gateway connected reduce costs increase revenue gaining realtime insight customer payment activity tweets thepaydock get latest facebook updates twitter updates find morepartnersour teamdeveloper documentationtrial sandboxcareersprivacy policy recent posts paydock exhibits b2b technology conference cebit sydney simpler development paydock net sdk release boost revenue payment methods follow us paydock pci dss v3 2 level 1 service provider copyright paydock 1 155 clarence st sydney au ph 61 2 8218 2141 uk ph 44 20 3287 8218", 
    "descr1": "nav shell javascript php stuck \\? email us follow us twitter facebook introduction paydock platform designed simple easy use possible different ways interact paydock api rest api giving full control paydock js client side javscript library provides secure way transmitting payment information iframe drop iframe allows transmit payment information getting started get running using paydock api minutes start signing sandbox account give access admin portal admin portal add payment gateway need sign test account payment gateway chose one following gateways add gateway retrieve api public key admin portal need authenticate jump one recipes taking single payment able start taking payments adding customers production set billing details key concepts key concepts help understand get paydock platform endpoints paydock provides two different public environments access access different environments following urls throughout documentation urls provided relative base urls eg sandbox represents authentication authenticate api provided providing either api public key api secret key depending using paydock platform 40 character strings find web app public key provided different ways authentication using paydock js api public key set function call using iframe tthe api public key set querystring parameter using api api secret key added header response codes error codes paydock api follows rest principles status codes returned api addition api generally return detailed error message downstream errors see right panel examples paydock vault paydock provides pci compliant vault payment details vault enabled payment details stored vault vault enabled disabled across whole paydock account rather individual requests vault enabled time payment source added information stored vault commonly happens payment source added customer new customer created also visible response includes id vault token see example right \\( payment sources vault token \\) recipes number recipes cover common uses paydock platform taking single payment using iframe simplest use paydock platform also common taking payment example shows take credit card payment using iframe charges api use iframe collect payment details customer convert payment details one time token token submitted amount make call paydock api make payment getting set need page want display payment form paydock public key \\( see getting started \\) generating one time token using iframe example use iframe create one time token use make payment could also use paydock js generate one time token see taking single payment using paydock js need generate iframe link paydock admin portal example uses one test account case payment page lets someone select amount donate provides credit card details payment details donation page collected iframe means payment details never sent server page catches event sent iframe collect payment token appends payment token form submits form server taking payment take payment use one time token add charge customer submits form make donation sends token represents payment details server needs sent paydock along amount make payment taking single payment using paydock js recipe similar taking single payment using iframe main difference recipe uses paydock js collect payment details customer token submitted amount make call paydock api make payment charges api getting set need page want display payment form paydock public key \\( see getting started \\) generating one time token using paydock js example use paydock js create one time token use make payment could also use iframe generate one time token case payment page lets someone select amount donate provides credit card details payment details form submitted page uses jquery map form elements parameters passed paydock js although could done using plain javascript libraries jquery code catches submit event form find hidden input token stops form submitted sets parameters paydock makes call get token includes anonymous function append one time token hidden input form submits form taking payment take payment use one time token add charge customer submits form make donation sends token represents payment details server needs sent paydock along amount make payment api reference paydock api organized around rest api predictable resource oriented urls uses http response codes indicate api errors use built http features like http authentication http verbs understood shelf http clients json returned api responses including errors make api explorable possible accounts test mode live mode api keys switch changing modes use appropriate url perform live test transaction requests made test mode credentials never hit banking networks incur cost paydock users interact service number ways charges charge one time payment triggered customer connected gateways add charges create charge using one time token could generated using paydock js iframe credit card details direct debit details using bank account bsb existing customer existing customer non default payment source one time charge payments made using one time token credit card direct debit otherwise making payment existing customer simpler store payment source customer make payment using customer id see also required fields gateway get charges list returns charges account limited 100 records get charges list parameters retrieving data existing charges driven number action parameters set uri path get single charge retrieves data charge specified id refund charge post refund request specified transaction archive charge archive charge hide charges list still retrieve archived charges see get charges list parameters \\( get charges list parameters \\) get archived charges list get archived charges list customers customer represents individual make payments use vaulted tokens customers store one payment sources payment information need collected customers also associated subscriptions charges added customer must least one payment source \\( eg credit card \\) used payment add customer create customer using one time token could generated using paydock js iframe credit card details direct debit details using bank account bsb see also required fields gateway get customer list returns customers account limited 100 records get customer list parameters retrieving data existing customers driven number action parameters set uri path get customer item info retrieves data customer specified id update customer use api update customer information \\( eg email address \\) add payment sources customer similar creating adding customer creating charge add payment source using one time token could generated using paydock js iframe credit card details direct debit details using bank account bsb archive customer customer specified id archived retrieve archived customers using get customer list parameters subscriptions add subscription subscriptions recurring billing events set take scheduled payments customer without enter billing details order charge recurring subscription added credit card details bank account also create customer customer id one time token also create customer subscriptions run different intervals \\( ie daily weekly monthly etc \\) frequencies \\( ie every x days \\) also control start date subscription subscriptions also configured end certain number transactions amount \\( eg end reaching 1000 end reaching 1000 \\) date subscription created without customer id new customer created customer id returned response see also required fields gateway add subscription using customer id charges added company billing plan assigned customers add subscription using customer id add subscription one time token subscriptions added company billing plan assigned customers use credit card direct debit information directly creating one time token one time tokens created customer side using paydock js creating token api side also one time tokens created using iframe result iframe process customer get webhook payment source value parameter payment source used token future examples update subscription details updates existing subscription adjust payment schedule end conditions get subscription list returns subscriptions account limited 100 records get subscription list parameters retrieving data existing subscriptions driven number action parameters set uri path get subscription item details retrieves data subscription specified id delete subscription removes subscription specified id notifications notifications automated messages triggered response events within system within paydock notification triggers set fire different events notification triggers different \\( e webhook email sms \\) \\( e transaction success \\) notifications email sms require notification see also examples webhook payloads notification templates also provide swap values \\( eg \\) populated customer charge subscription triggered notification \\( see swap values templates full list \\) add new notification template create notification template \\( available email sms type notifications \\) edit notification template update notification template \\( available email sms type notifications \\) delete notification template delete notification template add notification trigger created trigger send notification customer endpoint send email sms customer use swap values \\( eg phone email \\) loaded customer \\( see swap values templates full list \\) get notification trigger list returns notification triggers account limited 100 records get notification trigger retrive details specific notification delete notification trigger remove notification get user notification log retrieve list notifications parameter list archive notification log archive remove notification log tokens one time token represents payment source information including credit ards direct debit account details disposable token creating charges subscriptions customers updating customers tokens also created using paydock js iframe example creating one time token using direct api request see also required fields gateway gateways paydock enables multiple gateways connected single paydock account see list supported gateways gateways added api third party gateway supports paydock admin portal assigning gateway company account registered required gateway system specific data found \\( gateway token merchant id etc \\) add new payment gateway add gateway account using different name time different gateways require different set parameters add see detailed list eway braintree ezidebit stripe paypal pin payway securepay authorize net payment express worldpay nab merchant warrior sqid promisepay forte ippayments get payment gateway retrieves data gateway specified id parametrs update gateway updates configuration gateway eway braintree ezidebit stripe paypal pin payway securepay authorize net payment express worldpay nab merchant warrior sqid promisepay forte ippayments name description details type string required name string required username string required password string required mode string optional get gateway list returns gateways account limited 100 records delete gateway removes gateway specified id gateway cannot removed subscriptions running iframe iframe solution collecting handling payment sources secure way two steps iframe configuration overall process first need generate url iframe admin interface making calls api iframe place collect payment details number sources javascript events iframe redirect webhook result see full working example look recipe creating configuration token web application generate iframe configuration token paydock admin portal also style preview iframe create configuration token api call rather using paydock admin portal automate creating configuration token using api useful custom usages iframe styling iframe form styles iframe configured encoded url parameters examples follows events sent iframe form events fired throughout lifecycle iframe event includes event data object containing data event note payment source configured disabled following events fired get handle redirect default iframe include one time token redirect configured send admin inteface setting parameter api request redirected include payment source url get handle webhook result result iframe process customer get webhook data object signature value signature used verify integrity data check data correct need make string customer data object encrypt secret key using sha 256 algorithm combine string customer data string encrypted secret key encrypt string using sha 256 algorithm customer get step 3 compare result signature value webhook paypal checkout paypal checkout allows customers pay using paypal paypal checkout process creates one time token used add payment source customer create customer charge customer process taking payment paypal checkout call v1 payment sources external checkout redirect url return custom paypal checkout link provide way customer visit url \\( eg pay pay pal button \\) customer visits url promoted log paypal account sent redirect url collect paypal token url call v1 payment sources tokens create single use token token used add payment source customer create customer charge customer create checkout link checkout link redirects user paypal website require accept agreements using paypal process transactions merchant place link site end user accept checkout token operations \\( create customers charges subscriptions update customer payment sources \\) create paydock one time token using paypal checkout token initiating call create one time token paypal user must created paypal checkout token using checkout link response returns one time token used creating customer update customer add charge add subscription afterpay checkout afterpay checkout allows customers pay using afterpay afterpay checkout process creates one time token used add direct payment process taking payment afterpay checkout call v1 payment sources external checkout redirect url return custom afterpay checkout link provide way customer visit url \\( eg pay pay pal button \\) customer visits url promoted log afterpay account sent redirect url collect afterpay token url call v1 payment sources tokens create single use token token used add direct payment create checkout link checkout link redirects user afterpay website require accept agreements using afterpay process transaction merchant place link site end user accept checkout token operation \\( create charge \\) create afterpay one time token using afterpay checkout token initiating call create one time token afterpay user must created afterpay checkout token using checkout link response returns one time token used add charge development sdks paydock provides sdks libaries different programming languages make integration simple possible client side client sdk solution convenient easy work iframe documentation client sdk also client sdk available npm detailed documentation classes methods available reference class paydock js paydock js client side library converting credit card direct debit credentials one time tokens securely sending information web form documentation client sdk net sdk net sdk available nuget also open sourced code available github welcome feedback sdk client sdk solution collecting handling payment sources secure way sdk create payment form widget independent part insert use inside form sdk supports methods customization widget needs \\( styling form fields etc \\) information work widget need public key \\( see authentication \\) also need added gateway \\( see api reference gateway \\) get started simple use begin including library page add script tag page get started url compressed version production full version development debug also download library production version development version library always available via global variable also advanced use library umd format thus used requirejs webpack etc package manager install package manager enter following command use es2015 typescript modules also use umd module \\( global visibility see \\) simple example container must create container widget inside tag widget initialized initialization write need 2 lines code js initialize widget full example advanced example customization example shows customize needs design customization html example shows set style texts html settings example shows use lot methods settings form full example paydock js paydock js client side library converting credit card direct debit credentials one time tokens securely sending information web form using library avoid sending credit card bank account details server reducing pci compliance requirements library wrapper around paydock api provides javasript friendly interface creating tokens overall process quick start easy start using paydock js add following script website set endpoint public key start making calls setting customer public key must set public key using paydock js identify website communicating paydock todo customer account paydock application website links credentials gathered customer account page paydock admin portal api endpoints production use method script send production endpoint sandbox use method script send sandbox endpoint one time token createtoken converts sensitive card data one time tokens use safely use trigger operations related pass customers creating charges subscription new customers updating customer payment source current customer create one time tokens using either credit card debit card details \\( see examples \\) parameters jquery example example uses jquery map elements form data sent using paydock js form includes customer details \\( email phone etc \\) optional creating token finally form appends hidden element storing one time token temp token form field would need handled server side create customer take payment create subscription resources required fields gateway different gateways require different fields see detailed listing select gateway braintree eway pin payway payway bank stripe paypal ezidebit card ezidebit direct debit securepay securepay bsb authorize net paymentexpress worldpay assembypayments forte sqid sqid bank ippayments card ippayments bank merchant card merchant bank nab card nab bank paperless promisepay card promisepay bank swap values templates notification templates used load parameters customer transaction notification also used populate destination \\( eg phone number sms \\) full list available swap values webhook event example paydock supports following webhook events \\( see payload examples right \\) transaction success subscription creation success subscription finished subscription updated refund requested refund success refund failure card expiration warning shell javascript php", 
    "crawled_date": "2017-06-10T13:59:23.022736"
  }, 
  "346": {
    "api_url": "aptx.cm", 
    "progweb_url": "https://www.programmableweb.com/api/aptexx-mobile-payments", 
    "progweb_date": "09.29.2016", 
    "progweb_descr": "The Aptexx Mobile Payments API provides developers a simple, mobile-optimized PCI-compliant payment processing system right out of the box. With this API, customers are given more payment options. Aptexx is a mobile payment and messaging service that works to empower property managers and residents with their services.", 
    "api_name": "Aptexx Mobile Payments", 
    "progweb_cat": "Payments,Banking", 
    "crawled_date": "2017-06-10T13:59:23.128523"
  }, 
  "347": {
    "link5": "https://developers.dwolla.com/", 
    "link4": "https://docs.dwolla.com/", 
    "link1": "https://www.dwolla.com/updates/dwollas-open-sourced-developer-documentation-portal/", 
    "api_url": "dwolla.com", 
    "link3": "https://docsv2.dwolla.com/", 
    "link2": "https://www.dwolla.com/updates/dwollas-open-sourced-developer-documentation-portal/dwolla-ach-api-documentation/", 
    "progweb_url": "https://www.programmableweb.com/api/dwolla-webhooks", 
    "progweb_date": "09.29.2016", 
    "progweb_descr": "The Dwolla Webhooks API is available in JSON architecture with OAuth as the authentication method. It aims to be helpful for developers interested in creating new webhook subscriptions. Dwolla is an ecommerce payments platform.", 
    "api_name": "Dwolla Webhooks", 
    "progweb_cat": "Webhooks,Banking", 
    "descr5": "using outdated browser please upgrade browser improve experience dwollalet 's talk menuabout products developers log sign let 's talkguides resources api docs sdksrawphprubypythonjavascriptlanguagerawphprubypythonjavascriptchoose guideplease select guidegetting started sandbox send money users receive money users transfer money users authorization webhooks migrate access apifollow stepsoverview send money usersoption 1 access apioption 2 transferfetch funding sourcescreate transfercheck transfer statusfollow stepsoverviewoption 1 access apioption 2 transfercheck transfer statusfollow stepsoverview transfer money usersobtain application access tokencreate verified customerattach unverified funding sourcecreate unverified customerattach verified funding sourcecreate transfercheck status transferin guideoverview authorizationauthorization code flow \\( transfer \\) oauth account creationclient credentials flow \\( access api webhooks \\) using access tokenfollow stepsoverview webhooksobtain authorizationcreate webhook subscriptionvalidating webhooksprocessing webhooksfollow stepsoverview migrate access apiaccess api principlesmaking requestsauthenticationsdk supportv1 access api endpoint changesother notable changesfaqin guideoverview site gatewaydirect submit optionserver server optionapi v1 resourcesoff site gatewayapi v1 reference docstoolssandbox dashboardtoken generatorchange logstatusarticlesaccount typestransfer accountsaccess api accountsbank transfer workflowprocessing timestransfer failuresfacilitator feeoauth refresh strategiespreemptively refresh authorizationrefresh demandrefresh best practicestesting sandboxaccess api articlescustomer verificationpersonal verified customersbusiness verified customershandling verification statusesdwolla jsadd bank accountinstant account verificationon demand bank transfersdwolla plaid integrationfunding source verificationmicro deposit verificationinstant account verificationsame day achwire transfer apiintroductionoauthcustomersdocumentsfunding sourcestransferseventswebhook subscriptionswebhookssimple powerful api ach transfersview guidestry outcopyraw php ruby python javascriptcopyraw php ruby python javascriptcopyraw php ruby python javascriptcopyraw php ruby python javascriptcopyraw php ruby python javascriptset sandboxget starteddeveloper communityget answersstay touch get api updatesstatus production operationalproductsaccess api transferfeaturesbank transfers mass payments day ach white label dashboard admin instant bank account verificationaccountsign log support security privacy legalcase studieson demand payouts ad platform marketplace payouts subscription billing rental collection savings tool investment platform b2b disbursementslearn moreabout us let 's talk developer docs updates press careersfinancial institutions play important role dwolla network dwolla inc agent veridian credit union compass bank funds associated account dwolla network held pooled accounts veridian credit union compass bank funds eligible individual insurance including fdic insurance may eligible share insurance national credit union share insurance fund dwolla inc operator software platform communicates user instructions funds transfers veridian credit union compass bank 2016 dwolla inc dwolla inc agent financial institution partner \\( \\)", 
    "descr4": "nav api version v1 v2 json php ruby python node js get api credentials get help sandbox environment documentation powered slate dwolla longer supports v1 api please consider new improved v2 api introduction api v1 continue function foreseeable future dwolla longer adding features supporting minor bug fixes maintaining sdk new api version version 2 features improved event driven notifications white label capabilities developer experiences intuitive dashboard admin interface v2 also provide functionality version 1 like masspay feel free sign developer newsletter remain informed ongoing changes checkout migration documentation join us developer forum helper libraries helper libraries api v1 longer officially supported dwolla please consider new improved v2 api includes updated sdks unsupported community maintained php dwolla php ruby dwolla ruby python dwolla python node js dwolla node java dwolla java clojure dwolla clojure scala dwolla scala windows 8 sdk phone xaml js ios dwolla ios os x cocoa dwolla cocoa perl webservice dwolla c net dwolla net making requests requests must json encoded body header requests parameters provided querysting requests must made https http requests met http 302 https equivalent remember url encode get querystring parameters responses happy response unsuccessful response responses always json encoded contained envelope means every api response contains boolean indicating whether call successful resulted error error message api call unsuccessful otherwise actual data returned api call api responses contain object contains links \\( uris \\) keys within links name link describe relationship current resource link facilitator fees enabling facilitator fee application feature set percentage flat fee incoming transactions transactions created via send endpoint transactions resulting site gateway checkout facilitator fee attached facilitator fees also attached money requests created application money request fulfilled facilitator fee paid facilitator fees 50 transaction amount must least 0 01 affect original transaction amount exist separate transaction resource unique transaction id metadata metadata supplied send masspay items money requests refunds checkouts metadata property property json object \\( collection key value pairs \\) maximum 10 key value pairs stored keys values must strings maximum length 255 characters visibility access metadata intended expansion existing field \\( string max length 255 \\) order allow applications store data resources unlike field visible application created transaction recipient sender transaction \\( dwolla com dashboard \\) future applications view transaction visible application created transaction application sender receiver may access metadata field warnings currently 2 bugs aware metadata collection contains two duplicate keys http 500 xml response thrown instead proper error response keys start number symbol \\( ex 10 10abc abc \\) rejected errors api request results error dwolla typically responds http status code response body containing json object containing error set however special cases uncaught exception system api request malformed \\( json syntax error duplicated keys \\) dwolla return http xml response body realize two different response formats errors far ideal something aim fix future versions api general errors following errors common across api endpoints authentication need provide application key secret initialize libraries invalid expired access token response interact api need api keys create consumer application order get application api endpoints require application \\( instance creating checkout looking user \\) require oauth endpoints require oauth access token included authorization http header like needless say replace oauth oauth dwolla api lets interact user dwolla account act behalf send money request money application first needs request authorization users dwolla implements oauth 2 0 standard facilitate authorization similar facebook twitter authentication flow user first presented permission dialog application point user either approve permissions requested reject user approves sent application exchanged pair used make api calls require user authentication like send list transactions token lifetimes access tokens short lived 1 hour refresh tokens long lived 60 days refresh token used within 60 days generate new access token refresh token pair long refresh authorization least every 60 days application maintain authorization indefinitely without requiring user authorize request authorization example initiation url start oauth process construct initiation url user visit order grant permission application describes permissions application requires \\( \\) client application \\( \\) user redirected grant deny permissions application \\( \\) url format remember url encode querystring parameters oauth scopes applications may request following permission scopes generating access token finish authorization successful response user returns application via specified querystring parameter appended url exchange authorization pair http request response parameters refresh authorization successful response invalid expired refresh token response use valid generate new pair note receive change every time exchange either new token pair recently issued allow receive new pair http request response parameters catalog response full user token contains send scheduled requests response direct user token contains send scheduled requests fetch list endpoints available user catalog endpoint initial step toward supporting hal currently includes links send create scheduled fulfill request endpoints future extended include endpoints available user use endpoint determine whether user needs provide pin order use send create scheduled fulfill request endpoints since direct users pin instance key included instead regular would see full users uri remains either case link withoutpin appended need ask user pin may omit parameter calling endpoint endpoint requires oauth access token require particular scope http request webhooks webhook notifications used notify application particular events occur relating transactions requests application facilitated created four kinds webhook notifications transactionstatus transactionreturned requestfulfilled requestcancelled webhook notifications json encoded post requests contain header currently way retrieve past webhook notifications security webhook notifications include header verify originated dwolla signature sha 1 hmac hash request body secret key application secret \\( \\) transactionstatus status transaction application facilitated changes \\( e g transaction clears successfully fails cancelled \\) dwolla send transactionstatus webhook transactionreturned notifies application bank funded transaction facilitated application returned financial institution requestfulfilled notifies application money request created application fulfilled requestcancelled notifies application money request created application cancelled send money successful receive response send money authorized user account dwolla account id phone number e mail address send money phone number email address recipient yet dwolla account sent sms email notifying payment prompting sign claim funds facilitator fees allow application facilitating payment take cut 50 payment amount default facilitator fee sent application owner account sent recipients declaring additional facilitator fees optional array http request endpoint requires oauth access token scope response successful response simply sender transaction id resulting payment read transactions errors checkouts create checkout site gateway checkout sessions must completed user within 15 minutes creation two types checkouts standard checkout standard checkout means payment placed automatically immediately user clicks submit button confirmation screen paylater checkout paylater checkout means user redirected back site clicking continue confirmation screen payment created yet 15 minutes complete checkout order place payment create paylater checkout set create checkout successful get back simply append resulting uri send user http request purchaseorder object errors retrieve checkout response fetch existing checkout get status details http request response parameters returns checkout additional information complete paylater checkout successful get back otherwise might get error like one finish paylater checkout attempt create payment http request response parameters funding sources dwolla accounts funding sources linked bank accounts line credit funds added bank funding source \\( \\) user account vice versa funds withdrawn user account balance bank funding source payments funded real time funding source user account balance fisync enabled bank account line clear instantly hand transactions funded ach bank funding sources require 2 5 business days funds made available recipient ach funding sources added verified via api important note id funding source arbitrary string identifer bank account number means need worry protecting standard would sensitive information like bank account number funding source types funding source resource list funding sources response enumerate user funding sources endpoint requires oauth access token scope http request request parameters following querystring parameters optional filtering funding sources limit results query funding sources particular user receive payment helpful instance user account trying send money opted accept payments funded via ach funding source another case select merchant accounts ability receive credit funded transaction credit would appear list funding sources filtered provide params request example want see funding sources user account id 812 713 9234 accept errors get funding source response look particular funding source funding source id endpoint includes additional parameter funding source type dwolla account balance funding source available funds returned otherwise ach fisync funding sources endpoint requires oauth access token scope http request errors withdraw funding source response withdraw funds user account balance one user bank funding sources new transaction type created result endpoint requires oauth access token scope http request request parameters errors add money funding source response add funds user bank funding source user dwolla account balance new transaction type created result endpoint requires oauth access token scope http request request parameters errors add new funding source response add new ach bank account funding source authenticated user created funding source need verified used two micro deposits made amounts must verified using verify endpoint manually user www dwolla com endpoint requires oauth access token scope http request request parameters errors verify funding source response verify amounts 2 micro deposits sent funding source endpoint requires oauth access token scope http request request parameters errors transactions movement money whether payment fee withdrawal adding funds dwolla balance recorded individual transaction instance adding money funding source dwolla account balance creates type transactions work payment sent 2 transactions created least one created credit recipient account balance another one debit sender account balance simple example let say bob sends 5 alice account balance action two created transaction credits alice account 5 transaction deducts 5 bob account important keep mind bob looks payment see credit transaction id called sender transaction id similarly alice looks payment see different transaction id call recipient transaction id additional transactions particular payment additional transactions created payment bank sourced fund payment facilitator fee learn correlate sender recipient transaction id guide transaction types transaction statuses initial transaction state real time \\( e g balance fisync credit \\) funded transfers always processed transaction resource list user transactions response retrieve transaction history authenticated user endpoint requires oauth access token scope http request example get latest 200 transactions type request parameters errors list app transactions response list transactions application created facilitated http request example get latest 200 transactions type request parameters get specific transaction response look particular transaction id \\( either sender recipient read transaction ids \\) either oauth access token supplied api application facilitated transaction supply application key secret instead endpoint take either oauth access token scope api application http request fetch transaction belongs authorized user fetch transaction belongs application errors search transactions response search user transactions filtering results based amount range date range transaction type transaction status individual name business name dwolla id email address phone number endpoint requires oauth access token scope http request fetch transaction belongs authorized user optional querystring parameters response scheduled payments payments scheduled created future date 3 years future scheduled payment created transaction created \\( thus funds transferred \\) scheduled payments one time recurring options recurring payments flexible create recurring payment pays weekly monthly daily every 2 weeks every week tuesdays fridays every 12th 18th 26th month error creating transaction scheduled payment bank sourced payments supported time scheduled payment resource create scheduled payment response create new scheduled payment behalf authorized user initial must fund payment bank funding source allows scheduling one time payment recurring payments use object endpoint requires oauth access token scope http request recurrence object errors list scheduled payments list authorized user scheduled payments created application endpoint requires oauth access token scope http request optional parameters response retrieve scheduled payment retrieve scheduled payment id endpoint requires oauth access token scope http request edit scheduled payment edit amount response edit existing scheduled payment partial editing allowed supply field \\( \\) change along sender pin note field cannot modified need change recurrence scheduled payment delete create new one endpoint requires oauth access token scope http request errors delete scheduled payment successful response contains id deleted scheduled payment delete pending scheduled payment created application status must cannot delete scheduled payment endpoint requires oauth access token scope http request querystring params errors delete scheduled payments successful response contains json array ids scheduled payments deleted delete authorized user pending scheduled payments created application delete scheduled payments endpoint requires oauth access token scope http request querystring params transaction stats response transaction statistics retrieved authenticated user currently report contains count transactions sum transactions given period time endpoint requires oauth access token scope http request request parameters errors users dwolla users looked via api account types get basic account info successful receive response retrieve basic information dwolla user given dwolla id email address http request must dwolla id email address example lookup user email response errors get full account info successful receive response retrieve information authorized user endpoint requires oauth access token scope http request response get email address successful receive response retrieve email address authorized user endpoint requires oauth access token scope http request response get avatar retrieve avatar image dwolla user given dwolla id requires authentication return 220px x 220px png file http request find nearby businesses successful receive response retrieve list dwolla business accounts \\( spots \\) near given location http request response errors find users nearby successful receive response retrieve list dwolla users near given location users must opt allowing location seen enabling setting dwolla mobile app example \\( web app \\) http request response errors contacts dwolla user user sends money receives money becomes user contact resource get user contacts successful receive response use following endpoint fetch authorized user contacts endpoint requires oauth access token scope http request optional paramters balance response fetch user account balance endpoint requires oauth access token scope http request masspay masspay allows easily send 5 000 payments single api request payments funded single user specified funding source processed asynchronously upon submission masspay queued processed service processes processed one ofter average rate 0 5 sec item therefore expect 1000 item masspay job completed 8 minutes masspay offers significant advantage repeatedly calling send endpoint individual transaction fact bank funded masspay job incurs single withdrawal bank account fund entire batch payments alternative approach incurs withdrawal bank funding source individual payment used approach reported incurring fees financial institutions excessive ach transactions create job response create new masspay job endpoint requires oauth access token scope http request request parameters items payment created masspay job represented json object following properties errors list jobs response list user existing masspay jobs endpoint requires oauth access token scope http request optionally provide querystring parameters limit number results returned offset results number items example retrieve first 20 results first 5 set results errors retrieve job response look particular masspay job id endpoint requires oauth access token scope http request errors list job items response retrieve items particular masspay job endpoint requires oauth access token scope http request optionally provide querystring parameters limit number results returned offset results number items example retrieve first 20 results first 5 set results item statuses response contain item corresponds success fail particular transaction masspay job item contain status either errors retrieve job item response retrieve particular masspay job item job id item id endpoint requires oauth access token scope http request errors refund response commercial non profit government type accounts refund payments received limit window time payment refunded individual accounts currently cannot refund payments refund creates new transaction refund amount total payment amount plus facilitator fees assumed sender refund api requires recipient transaction id provided endpoint requires oauth access token scope http request request parameters response parameters errors money requests money requests sent dwolla user another dwolla user phone number email address money request essentially invoice requesting payment recipient request money requests fulfilled amount request greater whenever payer decides fulfilled requestfulfilled webhook notification sent money requests also cancelled either sender request recipient request cancelled requestcancelled webhook notification sent money requests expire money request statuses money request resource create money request successful receive response send money request authorized user destination dwolla user email address phone number endpoint requires oauth access token scope http request errors list money requests successful receive response list authorized user pending requests endpoint requires oauth access token scope http request request parameters retrieve money request successful receive response retrieve single money request id endpoint requires oauth access token scope http request errors fulfill money request successful receive response fulfill authorized user pending money request request must status endpoint requires oauth access token scope http request errors cancel money request cancel money request authorized user created received request must status successful recieve response endpoint requires oauth access token scope http request account settings oauth scope set retrieve user account preferences currently account feature enable disable user via api auto withdrawal auto withdrawal enabled user payments received user automatically withdrawn bank funding source choice get auto withdrawal status enabled get disabled get response determine whether auto withdrawal enabled authorized user endpoint requires oauth access token scope http request enable disable auto withdrawal enabled get response enable disable auto withdrawal authorized user endpoint requires oauth access token scope http request json php ruby python node js", 
    "descr3": "dwolla let 's talk menu products developers log sign let 's talk guides resources api docs sdks raw php ruby python javascript language raw php ruby python javascript product access api transfer options get help sandbox environment introduction welcome dwolla access api documentation connect software banking infrastructure access api white label design however co branded experiences capabilities continue migrated legacy api v1 \\( longer supported \\) information transitioning v1 access api see migration guide making requests requests supply header requests must specify header request response bodies json encoded requests must made https non secure requests met redirect \\( http 302 \\) https equivalent uri copyauthorization requests require either oauth access token oauth access tokens passed via http header requests require client id client secret sent using content type via json body content type api host production https api dwolla com sandbox https api sandbox dwolla com idempotency key prevent operation performed dwolla supports passing header unique key value multiple idempotency key result multiple resources created example request initiate transfer fails due network connection issue reattempt request idempotency key guarantee single transfer created reattempt request value receive original response recommended use random value idempotency key like uuid \\( e \\) idempotency keys intented prevent conflicts short period time therefore keys expire 24 hours dwolla server still processing original receive error response subsequent request example transfer using idempotency keycopyerrors error responses use http status codes indicate type error json response body contain top level error code message detailed description error errors contain media type closely align spec example http 401 errorcopycommon errors following errors common across api endpoints validation errors responses top level error code returned possible correct specific problem request response include message validation error \\( \\) present see embedded errors list details least one possibly detailed error present list embedded errors multiple errors represented collection embedded error objects embedded json object field json pointer specific field request problem human readable description problem detailed error code one following values required invalid valid value field invalidformat chars amount field instance duplicate customer specified email already exists readonly field allowed modified notallowed value valid exists allowed used restricted account customer restricted activity insufficientfunds used source destination fields transfer endpoint requiresfundingsource used destination field transfer endpoint indicate customer needs bank filetoolarge used document upload example http 400 validation errorcopylinks relationships available actions resource represented links resources attribute minimum resources link indicates url resource links give url follow access related resources example customer resource link followed list customer available funding sources responses contain collection resources pagination links copytools following section outline development tools take advantage assist integration dwolla api available tools help improve testing development workflow well aide solving difficult problem \\( e g ui generation \\) integrating dwolla application dwolla hal forms dwolla hal forms extension hal spec created describe dwolla represents forms api extension starts media type media type used profile link part header request conjunction dwolla hal style media type including two media type identifiers accept header api knows looking form given resource example accept header value primary benefit ability dynamically generate ui based state particular resource application easily transition state without knowing dwolla business rules information needs included actual request transition state link relation returned resource application follow link making get request resource including header shown response include simple json response body contains information http method message content type request parameters used sending request dwolla api note currently forms returned creating editing customers looking forward expanding across existing future endpoints reference spec information properties returned dwolla hal forms response read blog post one developers building functionality sdk support dwolla access api officially maintained software packages make easier developers get started making requests api section provide basic instructions install packages get running recommend use posix standardized shell development machine assume already familiar set tools required specific technical ecosystem officially maintained sdks available ruby node js python php java sdks autogenerated swagger codegen versioned accordance api schema endpoint grouping assigned class operation use make request choose environment target \\( e g production vs sandbox \\) providing sdk different api host value libraries actively maintained therefore encourage community contribution api hosts rubydwollav2 ruby \\( recommended \\) available rubygems source code available github page information available project readme installationcopyquickstart let fetch page customers copydwollaswagger ruby available rubygems source code available github page information available project readme installationcopyquickstart let list objects copypythondwollav2 python \\( recommended \\) available pypi source code available github page information available project readme installationcopyquickstart let list objects copydwollaswagger python available pypi source code available github page information available project readme installationcopyquickstart let list objects copyphp available packagist source code available github page information available project readme installationcopyquickstart let list objects copyjava actively maintained dwolla however source code available github page community contribution encouraged information available project readme installation required install source please installed path copyquickstart let list objects copyjavascript available npm source code available github page information available project readme installationcopyquickstart let fetch page customers copy authorization dwolla utilizes oauth 2 protocol facilitate authorization oauth authorization framework enables third party application obtain access protected resources \\( transfers funding sources customers etc \\) dwolla api access dwolla api granted application either behalf user behalf application section covers application auth meant server server applications using access api creating application get started making oauth requests need first register application dwolla logging navigating applications page application registered obtain \\( aka client credentials \\) used identify application calling dwolla api sandbox environment provides created application signed account learn getting started guide remember client secret kept secret sure store client credentials securely token lifetime access tokens short lived 1 hour refresh authorization application access token application simply exchange client credentials new app access token invalidate previous token application authorization client credentials flow used application needs obtain permission act behalf application exchange application access token application access token used make calls dwolla api behalf application example create webhook subscription retrieve events make calls access api customer related endpoints primary reason obtaining application access token managing webhooks events however dwolla modified grant type allowing applications access access api customer related endpoints using application access token http request production sandbox including header request sent token endpoint following parameters request parameters response parameters requestcopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript successful responsecopy root root serves entry point api providing application ability fetch discover resources available based oauth provided request user account access token provided request api return links resources belong dwolla account user \\( e accounts customers \\) alternatively application access token provided request api return links resources belong dwolla application \\( e events webhook subscriptions \\) http request request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript accounts represents access api partner dwolla account established dwolla com migrating transfer user accounts access api customers dwolla offers seamless process migrating existing transfer user accounts managed via oauth platform access api customers user account maintain existing functionality dwolla com act separate access api customer upon completion migration learn upgrading access api please contact sales account links copyretrieve account details section shows retrieve basic account information belonging authorized user account http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript create funding source account section details add bank account dwolla account bank account status upon creation dwolla account eligible transfer money bank credit union account need verify ownership account via micro deposit verification information micro deposit verification reference funding source verification resource article http request request parameters errors request responsecopylist funding sources account retrieve list funding sources belong account default funding sources returned unless querystring parameter set request http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list search transfers account section covers retrieve account list transfers transaction search supported passing optional querystring parameters represents term search endpoint requires oauth account access token scope http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list mass payments account section covers retrieve account list previously created mass payments mass payments returned ordered date created recent mass payments appearing first http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript customers customer represents individual business intend transact programmatically created managed dwolla account via api order dwolla create manage customers application must obtain permission dwolla enabled production section outlines functionality access api premium product approved partners may access production learn entering access api agreement please contact sales verified unverified customers transfer money least one party must complete identity verification process either sender receiver decision party completes process based business model may want parties complete identity verification process cases customer sending funds receiving funds account customer remain unverified account already verified however need transfer funds customers least one need verified information access api account types reference account types resource article receive receive customers restricted payouts business model receive customer maintains limited functionality api eligible receive transfers attached bank account dwolla created migrating dwolla user accounts access api customers dwolla offers seamless process migrating existing user accounts managed via oauth platform access api customers user account maintain existing functionality dwolla com act separate access api customer upon completion migration learn upgrading access api please contact sales customer links customer resource customer statuses copycreate customer section details create new customer create need provide customer full name email address require additional information give dwolla ability confirm identity individual business verified customers include type businesses dwolla need verify information business authorized representative business provide customer full name value applicable information verified customers reference customer verification resource article endpoint requires oauth account access token scope http request request parameters unverified customer request parameters verified customer additional request parameters verified customer type business request parameters receive errors unverified customercopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript verified customercopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript receive customercopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list business classifications retrieve list industry classifications identify customer business industry classification required dwolla verifying order better analyze nature business http request request responsecopyretrieve business classification section shows retrieve business classification list industry classifications industry classification id needed order verify customer http request request parameters request responsecopyupdate customer endpoint used facilitate following use cases update customer information upgrade customer customer suspend customer deactivate customer update verified customer information verification http request update customer information limited set information updated existing created customer note customer information cannot updated status request parameters unverified customer request parameters verified customer request parameters verified customer type business addition table business verified customers update following fields upgrade unverified customer verified customer unverified customer upgraded verified customer supplying necessary information required create verified customer reference table required information suspend customer unverified verified customers suspended specifying status request need contact dwolla unsuspend customer request parameters deactivate customer unverified verified customers deactivated specifying status request customer cannot deactivated following conditions true customer verification status customer transfers funds available customer \\( verified customers \\) request parameters retry verification verified customer status information may miskeyed one opportunity correct mistakes using endpoint time need provide customer full ssn additional attempt fails resulting status either customer must retry state copyrequest responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript try customer retry state copyrequest parameters retry verified customer errors list search customers section outlines retrieve list created customers http request request parameters request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve customer section shows retrieve customer belonging authorized user account id part location resource developer pass either entire resource make request http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript create demand transfer authorization section outlines create demand bank transfer authorization customer demand authorization allows customers authorize dwolla transfer variable amounts bank account using ach later point time products services delivered demand authorization supplied along customer bank details creating new customer funding source demand authorization enabled application customer presented text add bank account screen user interface \\( ui \\) giving authorization dwolla future variable payments note demand payments come part access api requires additional approval getting started please contact sales information enabling http request http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript create funding source customer two methods available adding bank credit union account customer either collect customer bank account information pass dwolla via new customer funding source endpoint send customer instant account verification \\( iav \\) flow add verify bank account within seconds dwolla account access api customer eligible transfer money bank credit union account need verify ownership account either via instant account verification \\( iav \\) micro deposits information bank account verification reference funding source verification resource article new funding source customer create new funding source customer customers maximum 6 funding sources http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript instant account verification \\( iav \\) iav simple secure process requires server side client side interaction server requests single use token used represent customer adding verifying bank client side implementation includes dwolla js library page used render iav flow copygenerate iav token get single use iav token customer http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript initiate iav flow initiate instant account verification customer dwolla js javascript library gives ability render iav flow within specified container call function pass following arguments container want iav render customer single use iav token callback handle initiate http request asking dwolla load iav specified container customer successfully completes iav flow dwolla sends response includes either error link newly created verified funding source resource usage configurationinclude dwolla js development version production \\( minified \\) version configure dwolla jscopyexamplecopyresponse copyerrors list funding sources customer retrieve list funding sources belong customer default funding sources returned unless querystring parameter set request http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list search transfers customer section details retrieve customer list transfers transaction search supported passing optional querystring parameters represents term search http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list mass payments customer section covers retrieve verified customer list previously created mass payments mass payments returned ordered date created recent mass payments appearing first http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript documents verified customers type status require photos identifying documents uploaded manual review order verified currently sdk support document upload exists ruby node js python upload document using languages must use external http library information handling customer verifiation status reference customer verification resource article document resource copycreate document create document customer pending verification uploading photo document requires multipart form data post request file must either 10mb size http request request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list documents section contains information retrieve list documents belong customer http request request parameters request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve document section contains information retrieve document id http request request parameters request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript funding sources add retrieve ach bank account information via funding sources customers maximum 6 funding sources funding sources created accounts customers resources funding source resource copyretrieve funding source section covers retrieve funding source id http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript update funding source section covers update funding source optional attributes updated funding source status choose update name name routingnumber name accountnumber three attributes attribute updated remains prior update including funding source id attribute updated funding source either status http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve funding source balance section covers retrieve funding source funding source either type http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript initiate micro deposits section covers initiate micro deposits bank verification reference funding source verification resource article information micro deposit method bank account verification http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript verify micro deposits section covers verify micro deposits bank verification reference funding source verification resource article information micro deposit method bank account verification http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve micro deposits details section shows retrieve status micro deposits check micro deposits eligible verification status micro deposits object returned response body includes ach return code description http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript remove funding source remove funding source id removed funding source soft deleted still accessed retrieved http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript transfers transfer represents money transferred transfers available resources transfer resource copyamount json object initiate transfer section covers initiate transfer either dwolla account access api customer resource endpoint requires oauth account access token scope http request request parameters source destination types facilitator fee facilitator fee feature allowing flat rate amount removed payment fee sent creator dwolla application fee affect original payment amount exists separate transfer resource unique transfer id within transfer request specify optional request parameter array fee objects represent many unique fee transfers information collecting fees payments reference facilitator fee resource article fee json object fee object example copyhttp status error codes request response \\( using day ach \\) reference example shows request looks like sending transfer please note example using day clearing access api customer bank account part dwolla access api copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve transfer section covers retrieve transfer belonging account customer id endpoint requires oauth account access token scope http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list fees transfer section outlines retrieve fees charged created transfer fees visible charged fee well dwolla involved receiving fee endpoint requires oauth account access token scope http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve transfer failure reason bank transfer fails account customer dwolla returns link retrieving transfer id failure link used retrieve ach return code description reference list possible failure codes descriptions shown transfer failures resource article note transfer fails bank account automatically removed dwolla system ach return codes except endpoint requires oauth account access token scope http request request parameters request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript cancel transfer bank transfer eligible cancellation dwolla returns link getting transfer id cancel link used trigger cancellation preventing bank transfer processing bank transfer cancellable 4pm ct business day transfer initiated prior 4pm ct transfer initiated 4pm ct cancelled anytime 4pm ct following business day endpoint requires oauth account access token scope http request request parameters request responsecopy masspay dwolla masspay allows easily send 5 000 payments one api request payments funded single user specified funding source processed asynchronously upon submission mass payment initially pending processed service processes mass payment processed one rate 0 5 sec 1 sec item therefore expect 1000 item masspay completed 8 16 minutes masspay offers significant advantage repeatedly calling transfers endpoint individual transaction benefit fact bank funded masspay incurs single ach debit bank account fund entire batch payments alternative approach incur debit bank funding source individual payment used approach reported incurring fees financial institutions excessive ach transactions mass payment resource copyinitiate mass payment section covers initiate mass payment partner dwolla account verified customer resource mass payment contains list representing individual payments optionally mass payments contain mass payment well items contained mass payment used pass along additional information mass payment item respectively deferred mass payment mass payment created status allows create mass payment defer processing later time trigger processing deferred mass payment update mass payment status deferred mass payment cancelled updating mass payment status http request request parameters source destination values mass payment item item object example copyhttp status error codes request response \\( masspayment account customers \\) copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve mass payment section outlines retrieve mass payment id mass payments status upon creation move finally service runs recommended retrieve list mass payment items mass payment status determine items failed process successfully http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript update mass payment section covers update mass payment status triggers processing created deferred mass payment cancels created deferred mass payment http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list items mass payment mass payment contains list payments called distinct transfer creates item contain status either depending whether payment created dwolla service mass payment item status indication transfer successfully created mass payment items returned object list http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve mass payment item section covers retrieve mass payment item unique identifier item contain mass payment item belongs transfer created item destination user http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript events state resource changes dwolla creates new event resource record change event created webhook created deliver event urls specified active webhook subscriptions events resource copyevent topics \\( partner dwolla account \\) event topics \\( customers \\) list events retrieve list events application http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve event section covers retrieve event id http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript webhook subscriptions create webhook subscription receive requests dwolla \\( called webhooks \\) events associated application occur webhooks sent url provide creating webhook subscription refer events section list events trigger webhooks automatic pause webhook subscription dwolla automatically pause subscribed webhook endpoints longer reachable webhook subscription paused 400 consecutive failures help us ensure unavailable endpoints cause delays issues delivery notifications api partners webhook subscriptions unpaused calling endpoint acknowledgement retries application receives webhook respond http 2xx status code indicate successful receipt dwolla receives status code greater http 400 application fails respond within 20 seconds attempt another attempt made dwolla attempt delivery 8 times course 72 hours according backoff schedule webhook successfully received would like information call retrieve webhook id webhook subscription resource create webhook subscription section details create webhook subscription deliver webhooks specified url endpoint requires oauth application access token http request request parameters request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve webhook subscription section details retrieve webhook subscription id endpoint requires oauth application access token http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript update webhook subscription section details pause webhook subscription webhook subscription paused dwolla continue create webhooks send subscribed webhook url useful webhook endpoint unavailable want temporarily disable webhook requests endpoint requires oauth application access token http request request parameters request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list webhook subscriptions section covers retrieve list webhook subscriptions belong application endpoint requires oauth application access token http request request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript delete webhook subscription delete webhook subscription stop receiving webhooks url specified using sdk request successful unless exception thrown stating otherwise endpoint requires oauth application access token http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list webhooks webhook subscription section covers view fired webhooks webhook subscription endpoint requires oauth application access token http request request parameters request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript webhooks new event created active webhook subscription new webhook created order deliver event attempted deliveries recorded webhook property attempt includes recorded request response delivery attempt webhooks sent asynchronously guaranteed delivered order recommend applications protect duplicated events making event processing idempotent note webhooks containing event fired application valid refresh token dwolla user account event created webhook resource attempts json object request response json object retrieve webhook section covers retrieve single webhook endpoint requires oauth application access token http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retry webhook section details retry webhook id endpoint requires oauth application access token http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list retries webhook section covers retrieve webhook retries id endpoint requires oauth application access token http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript products access api transfer features bank transfers mass payments day ach white label dashboard admin instant bank account verification account sign log support security privacy legal case studies demand payouts ad platform marketplace payouts subscription billing rental collection savings tool investment platform b2b disbursements learn us let 's talk developer docs community updates press careers financial institutions play important role dwolla network dwolla inc agent veridian credit union compass bank funds associated account dwolla network held pooled accounts veridian credit union compass bank funds eligible individual insurance including fdic insurance may eligible share insurance national credit union share insurance fund dwolla inc operator software platform communicates user instructions funds transfers veridian credit union compass bank 2016 dwolla inc dwolla inc agent financial institution partner \\( \\)", 
    "descr2": "dwollacrqfrtufwsfuzzrxu contact sales menu products developers log sign let 's talk dwolla ach api documentation mariah young june 20 2016 twitter facebook facebook back posts products access api transfer features bank transfers mass payments day ach white label dashboard admin instant bank account verification account sign log support security privacy legal case studies demand payouts ad platform marketplace payouts subscription billing investment platform b2b disbursements learn us let 's talk developer docs blog press careers financial institutions play important role dwolla network dwolla inc agent veridian credit union compass bank funds associated account dwolla network held pooled accounts veridian credit union compass bank funds eligible individual insurance including fdic insurance may eligible share insurance national credit union share insurance fund dwolla inc operator software platform communicates user instructions funds transfers veridian credit union compass bank 2017 dwolla inc dwolla inc agent financial institution partner \\( \\)", 
    "descr1": "dwollacrqfrtufwsfuzzrxu contact sales menu products developers log sign let 's talk dwolla open sourced developer documentation portal ben milne february 16 2016 twitter facebook facebook dwolla developer docs gotten pretty darn good discovered really cool things working well wanted make best practices available anyone might find useful open sourced three repositories github today hope helpful developers building top dwolla apis make easier suggest changes docs developer portal one challenges past producing intuitive experience developer documentation code needed section getting started guides sdks technical documentation typically needs function bit differently content made supporting element primary portal see live docs https developers dwolla com find github repo https github com dwolla open source developer portal v1 documentation powered slate made great deal changes v1 documentation largely focused oauth api developers building dwolla com platform applications see live docs https docs dwolla com find github repo https github com dwolla v1 payment api v2 documentation powered slate made even changes one live inside primary developer portal currently v2 documentation largely focused white label ach integrations see live docs https docsv2 dwolla com find github repo https github com dwolla v2 ach api docs changes like see made \\? go github profile submit feedback pull requests interested learning ach api implementing custom white label integrations contact integration specialist get started sandbox environment interested business could utilizing access api within platform application \\? reach sales team back posts products access api transfer features bank transfers mass payments day ach white label dashboard admin instant bank account verification account sign log support security privacy legal case studies demand payouts ad platform marketplace payouts subscription billing investment platform b2b disbursements learn us let 's talk developer docs blog press careers financial institutions play important role dwolla network dwolla inc agent veridian credit union compass bank funds associated account dwolla network held pooled accounts veridian credit union compass bank funds eligible individual insurance including fdic insurance may eligible share insurance national credit union share insurance fund dwolla inc operator software platform communicates user instructions funds transfers veridian credit union compass bank 2017 dwolla inc dwolla inc agent financial institution partner \\( \\)", 
    "crawled_date": "2017-06-10T13:59:23.127118"
  }, 
  "340": {
    "api_url": "ucommerce.net", 
    "progweb_url": "https://www.programmableweb.com/api/ucommerce", 
    "progweb_date": "09.05.2016", 
    "progweb_descr": "uCommerce built in .NET, is available as an 80/20 API with libraries and context classes. It integrates eCommerce features such as order, catalog, transaction, search, and marketing.", 
    "api_name": "UCommerce", 
    "progweb_cat": "eCommerce,Marketing", 
    "crawled_date": "2017-06-10T13:59:23.134561"
  }, 
  "341": {
    "api_url": "captchaco.in", 
    "progweb_url": "https://www.programmableweb.com/api/captcha-coin", 
    "progweb_date": "09.14.2016", 
    "progweb_descr": "The Captcha Coin API allows developers to integrate Bitcoin wallet and Bitcoin pay captcha services into their websites and applications. A pay captcha is an alternative form of captcha that accepts payments and can be used to secure content and services for paid access. Both the wallet and captcha services are provided for free.", 
    "api_name": "Captcha Coin", 
    "progweb_cat": "Bitcoin,Captcha", 
    "crawled_date": "2017-06-10T13:59:23.133533"
  }, 
  "342": {
    "api_url": "simplepay.ng", 
    "progweb_url": "https://www.programmableweb.com/api/simplepay", 
    "progweb_date": "09.21.2016", 
    "progweb_descr": "This Javascript API allows you to access SimplePay, which can be used to create several types of payments for ecommerce.  It has a custom integration that includes credit card and more.  SimplePay's Gateway is an embeddable payment form for desktop and mobile devices.", 
    "api_name": "SimplePay", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:23.132558"
  }, 
  "343": {
    "api_url": "spid.no", 
    "progweb_url": "https://www.programmableweb.com/api/spid", 
    "progweb_date": "09.23.2016", 
    "progweb_descr": "The SPiD API integrates payments into applications, mainly located in Europe. Available with OAuth2 authentication, HTTP requests, and JSON responses.", 
    "api_name": "SPiD", 
    "progweb_cat": "Payments,European", 
    "crawled_date": "2017-06-10T13:59:23.131605"
  }, 
  "348": {
    "api_url": "simplybook.me", 
    "progweb_url": "https://www.programmableweb.com/api/simplybook", 
    "progweb_date": "10.04.2016", 
    "progweb_descr": "This API allows you to create your own booking interface from the simplest widget to a multifunctional application, with functionality customized according to your specific business.  Simplybook uses the JSON-RPC 2.0 protocol and returns employees, locations and more.   Simplybook.me is a booking system for service providers including; dentists, medical services, hair & beauty salons, repair services, event planners, rental agencies, educational services and more.", 
    "api_name": "SimplyBook", 
    "progweb_cat": "Booking,Payments", 
    "crawled_date": "2017-06-10T13:59:23.125938"
  }, 
  "349": {
    "api_url": "cayan.com", 
    "progweb_url": "https://www.programmableweb.com/api/cayan-genius-transaction-processing", 
    "progweb_date": "10.07.2016", 
    "progweb_descr": "This API allows you to integrate payments into your shopping cart with Authorize.Net. It provides a way for business to collect payment information and run transactions through the Virtual Terminal. This includes; Genius Certification Script, Implementation Review Outline, EMV Response message field and value documentation and more.  Cayan is a leading provider of payment technologies and merchant account services.", 
    "api_name": "Cayan Genius Transaction Processing", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:23.125054"
  }, 
  "298": {
    "api_url": "multiwebpay.com", 
    "progweb_url": "https://www.programmableweb.com/api/multiweb-pay", 
    "progweb_date": "03.08.2016", 
    "progweb_descr": "MultiWebPay is a payment service provider that offers multiple payment solutions for websites or applications. Payment methods include PayPal, Debit Cards, Bitcoin, Payza, Wire Transfers, Credit Cards and many more. MultiWebPay demonstrates how to integrate payments into merchant applications on the main API guide site. API methods include donation, subscription, price, values, and payment forms.", 
    "api_name": "MultiWeb Pay", 
    "progweb_cat": "Payments,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:26.406241"
  }, 
  "299": {
    "api_url": "gcx.io", 
    "progweb_url": "https://www.programmableweb.com/api/gcxio", 
    "progweb_date": "03.09.2016", 
    "progweb_descr": "The GCX.io API allows developers to integrate the ability to invest, trade, or pay with gold into their websites and applications. GCX allows users to possess \"digital gold\" that is fully backed by LBMA-approved physical gold. Users' gold holdings are auditable against physical bullion reserves held by Brinks at their facility in London, Heathrow.", 
    "api_name": "GCX.io", 
    "progweb_cat": "Financial,Currency", 
    "crawled_date": "2017-06-10T13:59:26.405276"
  }, 
  "296": {
    "api_url": "allmyles.com", 
    "progweb_url": "https://www.programmableweb.com/api/allmyles-payment", 
    "progweb_date": "02.14.2016", 
    "progweb_descr": "The Allmyles Double Clutch Payment API intends to provide online players to integrate bookable travel content to your web or native application as well as allows your audience to purchase travel services without any travel industry specific legal and technical prerequisites.", 
    "api_name": "Allmyles Payment", 
    "progweb_cat": "Payments,Air Travel", 
    "crawled_date": "2017-06-10T13:59:26.408373"
  }, 
  "297": {
    "api_url": "commercejs.com", 
    "progweb_url": "https://www.programmableweb.com/api/commercejs", 
    "progweb_date": "02.29.2016", 
    "progweb_descr": "CommerceJS is a powerful, cross device eCommerce API for developers and designers. CommerceJS allows developers to rapidly integrate checkout and product display functions into their own websites and applications. CommerceJS is powered by Chec, a service designed to make it easier for people to sell physical products, digital goods, and services online. Core features of the API include; built in fulfillment, tax support, fraud protection, payment gateways, order management, checkouts and helper functions. \r As a developer or designer you no longer need to compromise the design and functionality of your eCommerce solution as CommerceJS fits around your design and code. Choose to only enable the features and functionality you need for your project and rapidly implement the solution. As we are a cloud based service, once you're done with development you can hand off the project and let us take care of any updates or changes that need to be made. \r All of our API\u2019s are designed to work either alone or with each other. Our API\u2019s are organized around REST and are designed to have predictable, resource-oriented URLs that use HTTP response codes to indicate API errors.\r We're building the plumbing for eCommerce with our modular, decentralized approach to eCommerce solutions.", 
    "api_name": "CommerceJS", 
    "progweb_cat": "eCommerce,Payments", 
    "crawled_date": "2017-06-10T13:59:26.407243"
  }, 
  "294": {
    "api_url": "nuapay.com", 
    "progweb_url": "https://www.programmableweb.com/api/nuapay", 
    "progweb_date": "01.27.2016", 
    "progweb_descr": "NuaPay API allows merchants to collect payments using the SEPA (Single Euro Payments Area) Direct Debit payment method and to integrate this payment method into their systems. To implement, add the Mandate and the Direct Debit Schedule. Protocols available in HTTP, JSON, and REST. Access with authentication via basic authentication, Key, and OAuth2.", 
    "api_name": "NuaPay", 
    "progweb_cat": "Payments,Currency", 
    "crawled_date": "2017-06-10T13:59:26.410430"
  }, 
  "295": {
    "api_url": "gerencianet.com.br", 
    "progweb_url": "https://www.programmableweb.com/api/gerencianet", 
    "progweb_date": "01.28.2016", 
    "progweb_descr": "The Gerencianet API allows developers to integrate its services for handling billing, payments, and receipts into their own applications. Gerencianet is a Brazilian intermediary payments company that allows users to issue bills or payment books to their customers and to get receipts for payments received. The Gerencianet website and API documentation are provided solely in Portuguese.", 
    "api_name": "Gerencianet", 
    "progweb_cat": "Billing,Brazilian", 
    "crawled_date": "2017-06-10T13:59:26.409292"
  }, 
  "292": {
    "api_url": "cardpay.com", 
    "progweb_url": "https://www.programmableweb.com/api/cardpay-payment", 
    "progweb_date": "01.15.2016", 
    "progweb_descr": "CardPay's Payment API is a payment management platform where users can receive payments and check payment statuses. The API can operate via directing customers to CardPay\u2019s \"Payment Page\" or to a merchants \"External Payment Page\". Both methods are managed and verified by CardPay. CardPay is PCI DSS certified and compliant and all connections are secured through Thawte DV SSL certificates.", 
    "api_name": "CardPay Payment", 
    "progweb_cat": "Payments,Banking", 
    "crawled_date": "2017-06-10T13:59:26.412325"
  }, 
  "293": {
    "api_url": "arsenalpay.ru", 
    "progweb_url": "https://www.programmableweb.com/api/arsenalpay", 
    "progweb_date": "01.18.2016", 
    "progweb_descr": "ArsenalPay is a payment processing platform based in Russia. It features payment module integration, mobile notification tools, mobile integration, and social network support. Also, ArsenalPay offers several rates for legal entities, and individuals. For security, it offers load protection, network vulnerability scanning, and system logfile analysis. Developers need to register to access API documentation.", 
    "api_name": "ArsenalPay", 
    "progweb_cat": "Payments,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:26.411393"
  }, 
  "290": {
    "api_url": "getsnapscan.com", 
    "progweb_url": "https://www.programmableweb.com/api/snapscan", 
    "progweb_date": "01.05.2016", 
    "progweb_descr": "The SnapScan API is a RESTful-like API that provides authentication, error codes, pagination,and webhooks for developers utilizing the API's services. The SnapScan API provides tools for generating QR codes and URL structures, can query the status of payments that were made against merchant accounts, and mark the end of transaction periods and query all payments completed within associated periods. SnapScan is a mobile payments platform based in Cape Town, South Africa.", 
    "api_name": "SnapScan", 
    "progweb_cat": "Payments,African", 
    "crawled_date": "2017-06-10T13:59:26.414136"
  }, 
  "291": {
    "api_url": "switchpayments.com", 
    "progweb_url": "https://www.programmableweb.com/api/switch-payments", 
    "progweb_date": "01.15.2016", 
    "progweb_descr": "The Switch Payments API is an integrated payment platform. The Switch Payments API allows users to accept payments from upwards of 200 different Alternative Payment Methods (APM) from anywhere in the world. Users can create new payments, authorize or refund payments, check payments status, etc. Switch Payments API is available in 44 countries including the US, Canada, Europe, and parts of Asia. Client libraries include Python, Ruby, Php, Node and Java.", 
    "api_name": "Switch Payments", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:26.413230"
  }, 
  "199": {
    "api_url": "coinpayments.net", 
    "progweb_url": "https://www.programmableweb.com/api/coinpayments", 
    "progweb_date": "12.17.2013", 
    "progweb_descr": "CoinPayments is a checkout system for cryptocurrencies such as Bitcoin and Litecoin. Customers click on a link or button on the user's website and get directed to the CoinPayments checkout page to make the payment. Once the transaction is complete, CoinPayments sends the payment to the user, minus transaction fees. Users are notified of every step of the process via Instant Payment Notification (IPN) or polling. The CoinPayments API is designed to allow users to easily integrate the checkout system into their own websites.", 
    "api_name": "CoinPayments", 
    "progweb_cat": "Payments,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:33.649867"
  }, 
  "198": {
    "api_url": "thecurrencycloud.com", 
    "progweb_url": "https://www.programmableweb.com/api/thecurrencycloud", 
    "progweb_date": "12.16.2013", 
    "progweb_descr": "TheCurrencyCloud is an international payment provider that provides payment, conversion, and exchange services.  TheCurrencyCloud API allows users to make REST calls to get access to the API, execute a currency trade, create and maintain payment beneficiaries, make international payments, access exchange rate information, and group settled trades. The API will have access account management and contact information in the future. An account is required with service.", 
    "api_name": "TheCurrencyCloud", 
    "progweb_cat": "Financial,Currency", 
    "crawled_date": "2017-06-10T13:59:33.650907"
  }, 
  "195": {
    "api_url": "citypay.com", 
    "progweb_url": "https://www.programmableweb.com/api/citypay", 
    "progweb_date": "12.15.2013", 
    "progweb_descr": "CityPay is an online payment service that offers a secure payment gateway, enabling merchants to accept payments from a range of environments, from mobile phones and web browsers through to fully integrated solutions.   The CityPay PayPOST API is RESTful payment API used for server to server transactional processing. Merchants can use the API to integrate CityPay payment services into their own applications. The API provides a number of payment mechanisms including fraud protection, preauthorization, and Internet, MOTO, CA transaction processing. The API provides data in XML or JSON.", 
    "api_name": "CityPay", 
    "progweb_cat": "Payments,Merchants", 
    "crawled_date": "2017-06-10T13:59:33.655681"
  }, 
  "194": {
    "api_url": "achta.com", 
    "progweb_url": "https://www.programmableweb.com/api/achta-sepa", 
    "progweb_date": "12.13.2013", 
    "progweb_descr": "Achta is a company based in Ireland that offers cloud based SEPA services for IBAN validation, mandate management, and credit transfers. Achta has extensive experience in advising corporations on cash management payment solutions and how those solutions can be integrated into existing business processes.  Achta offers a realtime payment validation API for their Achtavate service, a cloud based, SEPA-ready payment solution. The API performs IBAN Validation, converts SortCodes and account numbers, checks BIC codes, and validates other payments reference data to ensure SEPA-compliance. An account with service it required.", 
    "api_name": "Achta Sepa", 
    "progweb_cat": "Financial,Accounting", 
    "crawled_date": "2017-06-10T13:59:33.656691"
  }, 
  "197": {
    "api_url": "lipisha.com", 
    "progweb_url": "https://www.programmableweb.com/api/lipisha", 
    "progweb_date": "12.15.2013", 
    "progweb_descr": "Based in Kenya, Lipisha offers a payment platform for businesses that enables them to collect, process and integrate payments from customers and clients using mobile money such as M-Pesa or Airtel Money.  The Lipisha API allows developers to integrate with the Lipisha payments system. The API carries out a number of activities including creating a new payment account, querying for transactions, Sending mobile money, charge a credit or debit card, transferring funds between different Lipisha accounts, and more.", 
    "api_name": "Lipisha", 
    "progweb_cat": "Payments,Mobile", 
    "crawled_date": "2017-06-10T13:59:33.653675"
  }, 
  "196": {
    "api_url": "conekta.io", 
    "progweb_url": "https://www.programmableweb.com/api/conekta", 
    "progweb_date": "12.15.2013", 
    "progweb_descr": "Conekta is an online payment platform for Latin American businesses that enables them to process online payments using both online and offline methods. Conekta can be used for any type of transaction such as selling physical products, charging for a service, taking donations, or enabling marketplaces for third parties.  Conekta offers a REST API that provides Merchants and  Marketplaces an easy way to start accepting payments through a website or application. API methods include Charges, Customers, Cards, Subscriptions, Plans and Events. All responses are in JSON, but sessions can be configured to receive responses in XML. An API key is required.", 
    "api_name": "Conekta", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:33.654682"
  }, 
  "191": {
    "link1": "http://networkx.github.io/documentation.html", 
    "api_url": "github.io", 
    "link2": "http://grails.github.io/grails-static-website/documentation.html", 
    "progweb_url": "https://www.programmableweb.com/api/evergreen", 
    "progweb_date": "12.03.2013", 
    "progweb_descr": "Evergreen is a asset-backed digital currency that allows users to exchange euros for evergreens, and use them as payment. The evergreens are exchanged at a 6:1 ratio with Euros, and are backed by a basket of currencies and environmental investments.  The Evergreen API uses REST calls and returns JSON. Users can make calls to interface between mobile apps and websites to manipulates wallets containing evergreens. An account is required with service.", 
    "api_name": "Evergreen", 
    "progweb_cat": "Payments,Merchants", 
    "descr2": "fork github socialize discuss mailing list discuss slack grails twitter events conferences source code github report issues github stack overflow questions using outdated browser please upgrade browser improve experience grails learnguidesdocumentationdownloadpluginscommunitysupport socialize documentationuser guideapi documentationdocumentation older versionsfaq improve doc documentationthe documentation available single page document feel free pick direct section also browse documentation older versions user guidedownloading grailsuser guideapi reference gormwebsitegorm hibernate user guideapi reference learning resourcesgrails guides focused tutorials samplesslack community discussionuser guide older versionsyou browse documentation previous versions grails since grails 1 2 0 select version3 3 0 m23 3 0 m13 2 93 2 83 2 73 2 63 2 53 2 43 2 33 2 23 2 103 2 13 2 0 rc23 2 0 rc13 2 0 m23 2 0 m13 2 03 1 93 1 83 1 73 1 63 1 53 1 43 1 33 1 23 1 163 1 153 1 143 1 133 1 123 1 113 1 103 1 13 1 0 rc23 1 0 rc13 1 0 m33 1 0 m23 1 03 0 93 0 83 0 73 0 63 0 53 0 43 0 33 0 23 0 173 0 163 0 153 0 143 0 133 0 123 0 113 0 103 0 13 0 02 5 62 5 52 5 42 5 32 5 22 5 12 5 02 4 52 4 42 4 32 4 22 4 12 4 02 3 92 3 82 3 72 3 62 3 52 3 42 3 32 3 22 3 112 3 102 3 12 3 02 2 52 2 42 2 32 2 22 2 12 2 02 1 52 1 42 1 32 1 22 1 12 1 02 0 42 0 32 0 22 0 12 0 01 3 91 3 81 3 71 3 61 3 51 3 41 3 31 3 21 3 11 3 01 2 51 2 41 2 31 2 21 2 11 2 0api older versionsyou browse api previous versions grails since grails 1 2 0 select version3 3 0 m23 3 0 m13 2 93 2 83 2 73 2 63 2 53 2 43 2 33 2 23 2 103 2 13 2 0 rc23 2 0 rc13 2 0 m23 2 0 m13 2 03 1 93 1 83 1 73 1 63 1 53 1 43 1 33 1 23 1 163 1 153 1 143 1 133 1 123 1 113 1 103 1 13 1 0 rc23 1 0 rc13 1 0 m33 1 0 m23 1 03 0 93 0 83 0 73 0 63 0 53 0 43 0 33 0 23 0 173 0 163 0 153 0 143 0 133 0 123 0 113 0 103 0 13 0 02 5 62 5 52 5 42 5 32 5 22 5 12 5 02 4 52 4 42 4 32 4 22 4 12 4 02 3 92 3 82 3 72 3 62 3 52 3 42 3 32 3 22 3 112 3 102 3 12 3 02 2 52 2 42 2 32 2 22 2 12 2 02 1 52 1 42 1 32 1 22 1 12 1 02 0 42 0 32 0 22 0 12 0 01 3 91 3 81 3 71 3 61 3 51 3 41 3 31 3 21 3 11 3 01 2 51 2 41 2 31 2 21 2 11 2 0 grails learnguidesdocumentationdownloadpluginscommunitysupport contributingsource codebuild statusbooksfaqsearch socialize discuss mailing listdiscuss slackgrails twitterevents conferencessource code githubreport issues githubstack overflow questions grails frameworkrepository hosted artifactorywebsite hosting provided pivotalyourkit supports grails java profiler 2005 2017 grails project grails open source apache 2 license", 
    "descr1": "networkx navigation next previous networkx home documentation download developer \\( github \\) versions latest release networkx 1 11 30 january 2016 downloads docs pdf development 2 0dev github docs pdf contact mailing list issue tracker documentation new networkx take look tutorial examples show simple complicated ways use networkx full documentation versions latest release development archived documentation documentation older versions avaiable following links networkx 1 11 networkx 1 10 networkx 1 10 networkx 1 9 1 networkx 1 9 networkx 1 8 1 networkx 1 8 networkx 1 7 older versions navigation next previous networkx home documentation download developer \\( github \\) copyright 2014 networkx developer team last updated may 01 2016 created using sphinx 1 4 1", 
    "crawled_date": "2017-06-10T13:59:33.659603"
  }, 
  "190": {
    "api_url": "mpowerpayments.com", 
    "progweb_url": "https://www.programmableweb.com/api/mpower", 
    "progweb_date": "11.26.2013", 
    "progweb_descr": "MPower is a payment service that interacts with digital wallets and bank accounts, offering end-to-end online and mobile payment solutions. The MPower API provides programmatic access to those solutions. The API is, for example, able to initiate payment requests, handle direct payments, redirect customers to MPower for checkout, add tax information or custom data to invoices, and  more.", 
    "api_name": "MPower", 
    "progweb_cat": "Payments,Invoicing", 
    "crawled_date": "2017-06-10T13:59:33.660702"
  }, 
  "193": {
    "api_url": "exchangeratelab.com", 
    "progweb_url": "https://www.programmableweb.com/api/exchange-rate-lab", 
    "progweb_date": "12.12.2013", 
    "progweb_descr": "Exchange Rate Lab is an exchange rate service that allows users to convert between currencies on the website, or integrate the interface into third-party apps for use in merchant shops and other applications. The Exchange rate Lab API allows users to lookup and perform currency conversions.  The API supports JSON and  JSONP, while using REST calls. The queried datasets updated hourly. An API Key is required with service.", 
    "api_name": "Exchange Rate Lab", 
    "progweb_cat": "Financial,Conversions", 
    "crawled_date": "2017-06-10T13:59:33.657702"
  }, 
  "192": {
    "api_url": "tipalti.com", 
    "progweb_url": "https://www.programmableweb.com/api/tipalti", 
    "progweb_date": "12.11.2013", 
    "progweb_descr": "Tipalti is a mass payment service. Tipalti allows businesses to pay out vendors, employees, and others globally via multiple methods from ACH to PayPal to wire transfer.  The Tipalti API allows developers to access and integrate the functionality of Tipalti with other applications. Public documentation is not available; API access comes with account service.", 
    "api_name": "Tipalti", 
    "progweb_cat": "Payments,Banking", 
    "crawled_date": "2017-06-10T13:59:33.658649"
  }, 
  "270": {
    "api_url": "paytabs.com", 
    "progweb_url": "https://www.programmableweb.com/api/paytabs", 
    "progweb_date": "11.23.2015", 
    "progweb_descr": "The PayTabs API allows to integrate payments features into web services, providing JSON and REST protocols accessible with an Api Key. In addition to payments, PayTabs offers eCommerce and invoicing services in the Middle East.", 
    "api_name": "PayTabs", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:26.434401"
  }, 
  "271": {
    "link1": "http://networkx.github.io/documentation.html", 
    "api_url": "github.io", 
    "link2": "http://grails.github.io/grails-static-website/documentation.html", 
    "progweb_url": "https://www.programmableweb.com/api/peanut-labs-publisher", 
    "progweb_date": "11.23.2015", 
    "progweb_descr": "The Peanut Labs allows developers to integrate publishing features into web projects. Once added, users will be able to engage with ad campaigns and surveys from Peanut Labs. The API provides requests in HTTP and responses in JSON and JSONP, and is accessible with a Key. PeanutLabs is based in San Francisco, California and offers monetization services targeted for websites and mobile applications.", 
    "api_name": "Peanut Labs Publisher", 
    "progweb_cat": "Monetization,Advertising", 
    "descr2": "fork github socialize discuss mailing list discuss slack grails twitter events conferences source code github report issues github stack overflow questions using outdated browser please upgrade browser improve experience grails learnguidesdocumentationdownloadpluginscommunitysupport socialize documentationuser guideapi documentationdocumentation older versionsfaq improve doc documentationthe documentation available single page document feel free pick direct section also browse documentation older versions user guidedownloading grailsuser guideapi reference gormwebsitegorm hibernate user guideapi reference learning resourcesgrails guides focused tutorials samplesslack community discussionuser guide older versionsyou browse documentation previous versions grails since grails 1 2 0 select version3 3 0 m23 3 0 m13 2 93 2 83 2 73 2 63 2 53 2 43 2 33 2 23 2 103 2 13 2 0 rc23 2 0 rc13 2 0 m23 2 0 m13 2 03 1 93 1 83 1 73 1 63 1 53 1 43 1 33 1 23 1 163 1 153 1 143 1 133 1 123 1 113 1 103 1 13 1 0 rc23 1 0 rc13 1 0 m33 1 0 m23 1 03 0 93 0 83 0 73 0 63 0 53 0 43 0 33 0 23 0 173 0 163 0 153 0 143 0 133 0 123 0 113 0 103 0 13 0 02 5 62 5 52 5 42 5 32 5 22 5 12 5 02 4 52 4 42 4 32 4 22 4 12 4 02 3 92 3 82 3 72 3 62 3 52 3 42 3 32 3 22 3 112 3 102 3 12 3 02 2 52 2 42 2 32 2 22 2 12 2 02 1 52 1 42 1 32 1 22 1 12 1 02 0 42 0 32 0 22 0 12 0 01 3 91 3 81 3 71 3 61 3 51 3 41 3 31 3 21 3 11 3 01 2 51 2 41 2 31 2 21 2 11 2 0api older versionsyou browse api previous versions grails since grails 1 2 0 select version3 3 0 m23 3 0 m13 2 93 2 83 2 73 2 63 2 53 2 43 2 33 2 23 2 103 2 13 2 0 rc23 2 0 rc13 2 0 m23 2 0 m13 2 03 1 93 1 83 1 73 1 63 1 53 1 43 1 33 1 23 1 163 1 153 1 143 1 133 1 123 1 113 1 103 1 13 1 0 rc23 1 0 rc13 1 0 m33 1 0 m23 1 03 0 93 0 83 0 73 0 63 0 53 0 43 0 33 0 23 0 173 0 163 0 153 0 143 0 133 0 123 0 113 0 103 0 13 0 02 5 62 5 52 5 42 5 32 5 22 5 12 5 02 4 52 4 42 4 32 4 22 4 12 4 02 3 92 3 82 3 72 3 62 3 52 3 42 3 32 3 22 3 112 3 102 3 12 3 02 2 52 2 42 2 32 2 22 2 12 2 02 1 52 1 42 1 32 1 22 1 12 1 02 0 42 0 32 0 22 0 12 0 01 3 91 3 81 3 71 3 61 3 51 3 41 3 31 3 21 3 11 3 01 2 51 2 41 2 31 2 21 2 11 2 0 grails learnguidesdocumentationdownloadpluginscommunitysupport contributingsource codebuild statusbooksfaqsearch socialize discuss mailing listdiscuss slackgrails twitterevents conferencessource code githubreport issues githubstack overflow questions grails frameworkrepository hosted artifactorywebsite hosting provided pivotalyourkit supports grails java profiler 2005 2017 grails project grails open source apache 2 license", 
    "descr1": "networkx navigation next previous networkx home documentation download developer \\( github \\) versions latest release networkx 1 11 30 january 2016 downloads docs pdf development 2 0dev github docs pdf contact mailing list issue tracker documentation new networkx take look tutorial examples show simple complicated ways use networkx full documentation versions latest release development archived documentation documentation older versions avaiable following links networkx 1 11 networkx 1 10 networkx 1 10 networkx 1 9 1 networkx 1 9 networkx 1 8 1 networkx 1 8 networkx 1 7 older versions navigation next previous networkx home documentation download developer \\( github \\) copyright 2014 networkx developer team last updated may 01 2016 created using sphinx 1 4 1", 
    "crawled_date": "2017-06-10T13:59:26.433015"
  }, 
  "272": {
    "link1": "http://networkx.github.io/documentation.html", 
    "api_url": "github.io", 
    "link2": "http://grails.github.io/grails-static-website/documentation.html", 
    "progweb_url": "https://www.programmableweb.com/api/peanut-labs-monetization", 
    "progweb_date": "11.23.2015", 
    "progweb_descr": "The Peanut Labs Monetization API allows developers to increase revenue by inviting users to the reward center. The reward  platform allows website users participating in Loyalty, E-commerce and gaming websites to earn valuable incentives in exchange for their engagement with surveys or campaigns. Requests available in HTTP and responses in JSON & JSONP. Authentication with Api Key.", 
    "api_name": "Peanut Labs Monetization", 
    "progweb_cat": "Monetization,Advertising", 
    "descr2": "fork github socialize discuss mailing list discuss slack grails twitter events conferences source code github report issues github stack overflow questions using outdated browser please upgrade browser improve experience grails learnguidesdocumentationdownloadpluginscommunitysupport socialize documentationuser guideapi documentationdocumentation older versionsfaq improve doc documentationthe documentation available single page document feel free pick direct section also browse documentation older versions user guidedownloading grailsuser guideapi reference gormwebsitegorm hibernate user guideapi reference learning resourcesgrails guides focused tutorials samplesslack community discussionuser guide older versionsyou browse documentation previous versions grails since grails 1 2 0 select version3 3 0 m23 3 0 m13 2 93 2 83 2 73 2 63 2 53 2 43 2 33 2 23 2 103 2 13 2 0 rc23 2 0 rc13 2 0 m23 2 0 m13 2 03 1 93 1 83 1 73 1 63 1 53 1 43 1 33 1 23 1 163 1 153 1 143 1 133 1 123 1 113 1 103 1 13 1 0 rc23 1 0 rc13 1 0 m33 1 0 m23 1 03 0 93 0 83 0 73 0 63 0 53 0 43 0 33 0 23 0 173 0 163 0 153 0 143 0 133 0 123 0 113 0 103 0 13 0 02 5 62 5 52 5 42 5 32 5 22 5 12 5 02 4 52 4 42 4 32 4 22 4 12 4 02 3 92 3 82 3 72 3 62 3 52 3 42 3 32 3 22 3 112 3 102 3 12 3 02 2 52 2 42 2 32 2 22 2 12 2 02 1 52 1 42 1 32 1 22 1 12 1 02 0 42 0 32 0 22 0 12 0 01 3 91 3 81 3 71 3 61 3 51 3 41 3 31 3 21 3 11 3 01 2 51 2 41 2 31 2 21 2 11 2 0api older versionsyou browse api previous versions grails since grails 1 2 0 select version3 3 0 m23 3 0 m13 2 93 2 83 2 73 2 63 2 53 2 43 2 33 2 23 2 103 2 13 2 0 rc23 2 0 rc13 2 0 m23 2 0 m13 2 03 1 93 1 83 1 73 1 63 1 53 1 43 1 33 1 23 1 163 1 153 1 143 1 133 1 123 1 113 1 103 1 13 1 0 rc23 1 0 rc13 1 0 m33 1 0 m23 1 03 0 93 0 83 0 73 0 63 0 53 0 43 0 33 0 23 0 173 0 163 0 153 0 143 0 133 0 123 0 113 0 103 0 13 0 02 5 62 5 52 5 42 5 32 5 22 5 12 5 02 4 52 4 42 4 32 4 22 4 12 4 02 3 92 3 82 3 72 3 62 3 52 3 42 3 32 3 22 3 112 3 102 3 12 3 02 2 52 2 42 2 32 2 22 2 12 2 02 1 52 1 42 1 32 1 22 1 12 1 02 0 42 0 32 0 22 0 12 0 01 3 91 3 81 3 71 3 61 3 51 3 41 3 31 3 21 3 11 3 01 2 51 2 41 2 31 2 21 2 11 2 0 grails learnguidesdocumentationdownloadpluginscommunitysupport contributingsource codebuild statusbooksfaqsearch socialize discuss mailing listdiscuss slackgrails twitterevents conferencessource code githubreport issues githubstack overflow questions grails frameworkrepository hosted artifactorywebsite hosting provided pivotalyourkit supports grails java profiler 2005 2017 grails project grails open source apache 2 license", 
    "descr1": "networkx navigation next previous networkx home documentation download developer \\( github \\) versions latest release networkx 1 11 30 january 2016 downloads docs pdf development 2 0dev github docs pdf contact mailing list issue tracker documentation new networkx take look tutorial examples show simple complicated ways use networkx full documentation versions latest release development archived documentation documentation older versions avaiable following links networkx 1 11 networkx 1 10 networkx 1 10 networkx 1 9 1 networkx 1 9 networkx 1 8 1 networkx 1 8 networkx 1 7 older versions navigation next previous networkx home documentation download developer \\( github \\) copyright 2014 networkx developer team last updated may 01 2016 created using sphinx 1 4 1", 
    "crawled_date": "2017-06-10T13:59:26.431504"
  }, 
  "273": {
    "api_url": "khipu.com", 
    "progweb_url": "https://www.programmableweb.com/api/khipu", 
    "progweb_date": "11.23.2015", 
    "progweb_descr": "The Khipu API allows developers integrate the ability to create charges and receive payments into their own websites and applications. Khipu is a Bolivian payment system that is based on simplified bank transfers. It is designed for use by both businesses and individuals. The website and API documentation are provided in Spanish.", 
    "api_name": "Khipu", 
    "progweb_cat": "Payments,Spanish", 
    "crawled_date": "2017-06-10T13:59:26.430368"
  }, 
  "274": {
    "link5": "https://developer.paypal.com/docs/classic/archive/", 
    "link4": "https://developer.paypal.com/docs/accept-payments/", 
    "link1": "https://developer.paypal.com/docs/api/", 
    "api_url": "paypal.com", 
    "link3": "https://developer.paypal.com/docs/", 
    "link2": "https://developer.paypal.com/docs/classic/api/", 
    "progweb_url": "https://www.programmableweb.com/api/paypal-express-checkout", 
    "progweb_date": "11.23.2015", 
    "progweb_descr": "The PayPal Express Checkout API allows merchants to streamline the checkout process. When customers check out, they are redirected to Paypal.com from the merchant's site and then returned to the merchant's site for payment confirmation. Developers will need to have a PayPal merchant account in order to use this service.", 
    "api_name": "PayPal Express Checkout", 
    "progweb_cat": "Payments", 
    "descr5": "docs api reference support log dashboard back docs documentation archive documentation page created previous versions paypal products content files might reflect current product functionality table contents account authentication adaptive accounts adaptive payments paypal buttons images express checkout invoicing order management instant payment notification \\( ipn \\) order management \\( ipn pdt \\) mass payments payflow paypal payments standard permissions latest documentation see nvp soap api documentation account authentication account authentication service getting started guide adaptive accounts adaptive accounts developer guide adaptive payments adaptive payments developer guide note see adaptive payments developer documentation latest documentation documentation provided html format paypal buttons images paypal buttons images express checkout merchant api reference archive getbillingagreementcustomerdetails \\( nvp soap \\) api operation deprecated starting version 54 0 later api setcustomerbillingagreement \\( nvp soap \\) api operation deprecated starting version 54 0 later api invoicing adaptive invoicing developer guide invoicing user 's guide invoicing service api guide note see invoicing developer documentation latest documentation documentation provided html format order management instant payment notification \\( ipn \\) instant payment notification guide order management order management integration guide mass payments mass payments user guide payflow note see payflow gateway development integration guides latest documentation payflow gateway developer guide pdf latest payflow gateway integration information see html version guide payflow link payflow link user 's guide payflow link fraud protection services user 's guide payflow link recurring billing service user 's guide payflow pro payflow pro developer 's guide payflow pro reporting developer 's guide website payments pro payflow edition website payments pro payflow edition developer 's guide website payments pro payflow edition fraud protection services user 's guide website payments pro payflow edition recurring billing service user 's guide paypal payments pro payflow edition recurring payments developer 's guide website payments pro payflow edition reporting developer 's guide website payments pro payflow edition xmlpay developer 's guide paypal payments standard paypal payments standard integration guide subscriptions recurring payments guide permissions permissions service guide note see permissions developer documentation latest documentation documentation provided html format docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr4": "docs api reference support log dashboard back docs accept payments paypal offers variety products solutions accepting payments choose solution best requirements whether goal get running quickly possible develop fully customized payment experience braintree direct braintree direct suitable type integration whether want quick easy payment solution completely customized payment experience drop ui available braintree direct enables start accepting payments little effort want build checkout experience braintree direct simplifies payment method details token never need worry method users choose pay learn get started braintree direct payment buttons paypal makes easy accept payments website whether mobile device tablet pc copy paste short html snippet website add payment button single item shopping cart see add payment buttons website information payments rest api payments rest api provides easy secure way accept online mobile payments take advantage great benefits paypal enabling customers make payments clicks payments made paypal credit cards depending country accept immediate payment authorize payment capture later payments overview explains get started payments rest api find detailed information paypal paypal sdks enable ios android apps interact credit card swipers merchants process person credit card transactions using mobile app native libraries paypal sdks enable interact paypal hardware also process card present transactions get started see integrating paypal sdks express checkout express checkout fast easy way buyers pay paypal express checkout makes easier buyers pay online enables accept paypal retaining control buyer overall checkout flow typical checkout flow buyer must provide shipping information billing payment information checking shopping cart page express checkout buyer check pay without entering shipping billing information paypal provides stored information simplifies expedites checkout process increase sales 18 percent learn see express checkout integration guide shopping carts paypal partners provide third party shopping carts allow seamlessly accept paypal payments whether need complete online store want add shopping cart existing website several options available paypal partners meet needs learn see using shopping carts already integrated third party shopping cart solution looking support search browse articles within shopping cart section paypal technical support faq paypal payments pro payflow gateway paypal payments pro customizable solution enables merchants keep buyers website entire checkout payment process merchants host customized checkout pages send transactions paypal paypal host checkout pages also manage security sales authorizations paypal payments pro accept paypal paypal credit payments well credit debit card payments paypal payments pro also includes optimized mobile checkout experience details see paypal payments pro payflow gateway secure open gateway utilized internally paypal payments pro services provides features including api allows merchants create host customized checkout pages paypal hosted checkout page using payflow gateway shared api merchants connect online store major payment processor bank card association choose connect directly paypal get started see payflow gateway website payments pro website payments pro legacy paypal product based soap nvp technology enables merchants accept credit debit cards paypal payments directly website using two paypal api based solutions direct payment express checkout payments immediate authorized later capture also recurring payments website payments pro also includes additional paypal solutions tools virtual terminal fraud management filters reference transactions mobile sdk paypal mobile sdks enable native apps easily accept paypal credit card payments native libraries paypal mobile sdks enable build fast responsive apps single payments \\( paypal credit card \\) future payments \\( paypal \\) learn get started paypal mobile sdks docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr3": "docs api reference support log dashboard paypal developer documentation view featured docs use documentation site learn implement paypal payment services choose solution bests suits needs featured documentation select docs find specific document express checkout simple way add paypal web app checkout web mobile web integration mobile app integration paypal payments standard ready made way accept cards paypal website payment buttons custom flexible way accept cards paypal app website braintree direct paypal payments pro store accept contactless payments chip mag stripe cards person paypal paydiant marketplace process split chained payments providers braintree marketplace invoicing create send manage professional customized invoices rest invoicing payouts send money hundreds recipients simultaneously payouts mass pay find looking \\? view product docs sdk libraries mobile sdks ios braintree android braintree ios paypal android paypal overview rest server sdks java php node python ruby net overview nvp soap api sdks java php ruby net overview third party products services shopping carts accept payments third party shopping cart software bigcommerce magento shopify stores specialty platforms alternative ways sell online specialty platforms marketplaces e junkie swappa jvzoo platforms financial management ready made solutions billing invoicing accounting xero aria quickbooks management ready start development \\? sign log using paypal account get credentials set test accounts sign log docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr2": "docs api reference support log dashboard view referencenvp soap apisapi referenceexpress checkoutendpointsoperations \\( alphabetical \\) operations \\( feature \\) payflow gatewayendpointsparametersadvanced parametersadditional featureswebsite payments proendpointsoperations \\( alphabetical \\) operations \\( feature \\) additional featureshosted solution \\( outside us \\) mass paymentsendpointsoperationadaptive accountsendpointsoperations \\( alphabetical \\) invoicingendpointsoperations \\( alphabetical \\) permissions serviceendpointsoperations \\( alphabetical \\) button managerendpointsoperations \\( alphabetical \\) nvp soap apps 101get startednvp basicssoap basicscredentialsendpointscurrency codescountry codesstate province codeslocale codesresponse codesapi error codes10000 100991000110002100031000410005100061000710008100091001010011100141006910100 1019910101101021010310200 102991020110202102031020410205102061020710209102101021110212102131021410215102161021710218102191022010300 10399103011030310304103051030610307103081030910310103111031210313103141031710320103211032710400 10499104001040110402104041040510406104071040810409104101041110412104131041410415104161041710418104191042010421104241042510426104271042810429104301043110432104331043410435104361043710438104391044010441104421044310444104451044610448104491045210457104581045910460104611046210463104641046510467104681046910470104711047210473104741047510476104771047810479104801048110482104851048610500 1059910500105011050210504105051050710508105091051010511105121051310519105201052110523105251052610527105341053510536105371053810539105401054110542105441054510546105471054810549105501055210553105541055510556105571055810560105611056210563105641056510566105671057010571105741057510576105771057810600 1069910600106011060210603106041060510606106071060810609106101061110612106131061410615106161061710618106191062010621106221062310624106251062610627106281062910630106311063210633106341063510700 1079910701107021070310704107051070610707107081070910710107111071210713107141071510716107171071810719107201072110722107231072410725107261072710728107291073010731107321073310734107351073610744107451074610747107481075010751107521075410755107561075810759107601076110762107631076410800 108991080011000 110991100111002110681108411089110911109411300 113991130211400 1149911401114031140411406114071145011451114521145311454114551145611457114581145911500 1159911501115021150311504115051150611507115081150911510115111151211514115151151611517115181151911520115211152211523115241153111543115441154611547115481155011551115521155311554115551155611557115581156011561115621156411567115681156911570115711157611577115781157911581115821158311584115851158611587115901159211600 11699116011160211603116041160711610116111161211614116151161611800 1189911800118011180211803118041180511806118071181011811118121181311814118151182011821118221182311824118251182611827118281182911830118311183211900 11999119001199612000 12099120001200112100 121991210912124121251212612200 1229912200122011220212203122041220512206122071220812300 123991230213100 1319913100131011310213103131041310513106131071310813109131101311113112131131311413115131161312213200 132991320013500 13599135131353113600 136991360113602136061360713700 13799137011375114001 14099140011400215001 1509915001150021500315004150051500615007150081500915010150111501217000 1709917004170051700617200 1729917200172031720418000 180991801419000 190991906581000 81099810008100181002810038100481100 8119981100811018110281103811048110581106811078110881109811108111181112811138111481115811168111781118811198112081121811228112381124811258112681127811288112981130811318113281133811348113581136811378113881139811408114181142811438114481145811468114781148811498115081200 812998120081201812038120581206812078120881209812108121181212812138121481215812198122081221812228122381224812258122681227812298123081232812348123581236812378123881239812438124481245812478124881249812508125199900 9999999998dodirectpayment processor response codesmasspay failed transactions ipn reason codessdksrelease notesadaptive accountsversion 1 2 0version 1 0 4version 1 0 3earlier versionsexpress checkout direct payment mass pay button managerversion 204version 203version 202version 201version 200version 124version 123version 122version 121version 120version 119version 117version 116version 115version 114version 113version 112version 111version 109version 108version 106version 104version 98version 94version 93version 92earlier nvp api versionsearlier soap api versionsinvoicing legacy apiversion 1 12 0version 1 11 0version 1 10 0version 1 8 0version 1 7 0version 1 6 0payflow apipermissions serviceversion 84 0version 74 0website payments pro hosted solution nvp soap api reference learn paypal name value pair \\( nvp \\) soap api endpoints operations express checkout express checkout commonly used paypal payments api payments made paypal hosted checkout page endpoint send api calls depends whether making nvp soap call use api make sure correct api credentials express checkout endpoints express checkout operations nvp soap nvp soap nvp nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap express checkout operations feature payflow gateway payflow gateway secure open payment gateway supports preferred integration method products paypal payments propaypal payments advanced paypal acquirer merchant bank payflow propayflow link choose processing platform merchant bank choose paypal host payment pages total control payment process website matter product select payflow gateway enables accept debit credit card payments paypal express checkout paypal credit \\( formerly bill later \\) payments within one api payflow gateway endpoints endpoint send api calls depends whether making live test call gateway transactions require user data parameters set account paypal manager payflow gateway parameters paypal host payment pages see configuring hosted checkout pages direct api calls click following api reference links payflow basic transaction parameters payflow credit card transaction parameters note transparent redirect information see pci compliance without hosted pages payflow gateway advanced parameters processors requiring additional parameters purchasing card level 2 3 transaction parameters telecheck parameters payflow gateway additional features payflow also offers following features fraud protection service recurring billing website payments pro note website payments pro deprecated replaced paypal payments pro website payments pro still supported existing merchants website payments pro endpoints endpoint send api calls depends whether making nvp soap call use api make sure correct api credentials website payments pro operations nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap website payments pro operations feature website payments pro additional features website payments pro also offers fraud management filters recurring payments website payments pro hosted solution \\( outside us \\) product merchants developers want integrate paypal 's hosted solution add transaction processing websites solution available australia france hong kong italy japan spain uk see integration guide country mass payments merchants use mass payments send money instantly 250 recipients send payments multiple recipients merchants need recipient 's paypal account email address payment amount currency code merchants manually upload file listing payments create programmatically using api send mass payments manually see using mass payments paypal account mass payments endpoints endpoint send api calls depends whether making nvp soap call use api make sure correct api credentials mass payments operation nvp soap adaptive accounts adaptive accounts api allows create manage paypal accounts paypal users make api call see adaptive accounts api call headers endpoints adaptive accounts endpoints make adaptive accounts api calls include api credentials sandbox testing specify adaptive accounts operations addbankaccount addpaymentcard checkcompliancestatus createaccount getuseragreement setfundingsourceconfirmed updatecompliancestatus invoicing use invoicing service api create send manage invoices using paypal invoicing endpoints make api calls invoicing service include api credentials sandbox testing specify invoicing operations cancelinvoice createandsendinvoice createinvoice deleteinvoice generateinvoicenumber getinvoicedetails markinvoiceaspaid markinvoiceasrefunded markinvoiceasunpaid remindinvoice searchinvoices sendinvoice updateinvoice permissions service permissions service enables obtain permission execute paypal api operations behalf paypal account holders permissions service endpoints make api calls permissions service include api credentials sandbox testing specify permissions service operations cancelpermissions getaccesstoken getadvancedpersonaldata getbasicpersonaldata getpermissions requestpermissions button manager advanced paypal button manipulation use api modify paypal buttons directly using html code see paypal button html variables reference paypal button image reference button manager endpoints send api calls one following endpoints depending whether making nvp soap call make sure correct api credentials use api button manager operations nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap additional information api credentials paypal name value pair api basics paypal soap api basics paypal developer documentation paypal credit \\( formerly bill later \\) api error codes user parameter data paypal manager docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr1": "docs api reference support log dashboard view reference rest apis api reference billing agreements api billing plans api identity api invoicing api payment experience api payments api payouts api vault api webhooks api overview authentication headers first rest call errors release notes sdks sdk quickstart service integrations rest api reference billing agreements api use billing plans billing agreements create agreement recurring credit card bank card paypal payment goods services create agreement reference active billing plan agreement inherits information also supply customer payment information optionally override referenced plan 's merchant preferences shipping fee tax information information see billing plans agreements billing agreements \\( resource group \\) use resource create agreement update agreement show agreement details cancel agreements also set bill balance agreement activate agreement suspend agreement list agreement transactions execute agreements create agreement post v1 payments billing agreements creates billing agreement json request body include object name description start date id plan base agreement customer shipping address information successful request returns http status code json response body shows billing agreement details update agreement patch v1 payments billing agreements updates details billing agreement id details include description shipping address start date successful request returns http status code json response body show agreement details get v1 payments billing agreements shows details billing agreement id successful request returns http status code json response body shows billing agreement details bill agreement balance post v1 payments billing agreements bill balance bills balance agreement id json request body include optional note describes reason billing action agreement amount currency successful request returns http status code json response body cancel agreement post v1 payments billing agreements cancel cancels billing agreement id json request body include object optional note describes reason cancellation agreement amount currency successful request returns http status code json response body activate agreement post v1 payments billing agreements activate activates suspended billing agreement id json request body include object note describes reason activation agreement amount currency successful request returns http status code json response body set agreement balance post v1 payments billing agreements set balance sets balance agreement id json request body specify balance currency type value successful request returns http status code json response body suspend agreement post v1 payments billing agreements suspend suspends billing agreement id successful request returns http status code json response body list agreement transactions get v1 payments billing agreements transactions lists transactions agreement id filter transactions appear response specify optional start end date query parameters successful request returns http status code json response body lists transactions details execute agreement post v1 payments billing agreements agreement execute executes billing agreement id customer approval successful request returns http status code json response body shows billing agreement details billing plans api use billing plans billing agreements create agreement recurring credit card bank card paypal payment goods services billing plan includes payment definitions details plan must include least one regular payment definition optionally trial payment definition definition determines often long customer charged plan specify type indicates whether payment definitions plan fixed infinite number payment cycles plan also defines merchant preferences including much costs set agreement urls customer approve cancel agreement action customer 's initial payment fails default plan active create activate update information see billing plans agreements billing plans \\( resource group \\) use resource create update show details list plans create plan post v1 payments billing plans creates billing plan json request body include plan details plan must include least one regular payment definition optionally trial payment definition payment definition specifies billing period determines often long customer charged plan specify fixed infinite number payment cycles payment definition optionally specify shipping fee tax amounts successful request returns http status code json response body shows plan details default state new plan create agreement plan must activate plan updating update plan patch v1 payments billing plans updates fields billing plan id json request body include patch object specifies operation perform one fields update new value updated field successful request returns http status code json response body show plan details get v1 payments billing plans shows details billing plan id successful request returns http status code json response body shows plan details list plans get v1 payments billing plans lists billing plans filter plans appear response specify one optional query pagination parameters successful request returns http status code json response body lists plans details identity api log paypal \\( formerly paypal access \\) commerce identity solution enables customers sign web site quickly securely using paypal login credentials log paypal utilizes latest security standards n't worry storing user data system information learn log paypal get user information get v1 identity openidconnect userinfo retrieve user profile attributes invoicing api use invoicing api create draft invoices send invoices manage invoices use invoices track payments send invoice invoice moves draft payable state paypal emails link invoice paypal website customer customers paypal account log pay paypal alternatively customers pay check debit card credit card information see invoicing overview invoices \\( resource group \\) use resource create update send invoices invoice reminders also generate invoice qr codes invoice numbers search list show invoice details delete draft invoices cancel sent invoices mark invoices fully partially paid refunded delete external payment refund invoice create invoice post v1 invoicing invoices creates draft invoice optionally create invoice template create invoice template invoice populated predefined data source template contains move invoice draft payable state must send invoice json request body include invoice details including merchant information object must include array note merchant specified invoice must paypal account good standing successful request returns http status code json response body shows invoice details send invoice post v1 invoicing invoices send sends invoice id customer note send invoice cannot resend optionally set query parameter also send merchant invoice update notification successful request returns http status code json response body update invoice put v1 invoicing invoices fully updates invoice id json request body include complete object call support partial updates successful request returns http status code json response body shows invoice details send invoice reminder post v1 invoicing invoices remind sends reminder payer invoice id json request body include object defines subject reminder details successful request returns http status code json response body delete draft invoice delete v1 invoicing invoices deletes draft invoice id deletes invoices draft state invoices already sent cancel invoice delete draft invoice longer use show details however reuse invoice number successful request returns http status code json response body cancel sent invoice post v1 invoicing invoices cancel cancels sent invoice id optionally sends notification cancellation payer merchant cc emails successful request returns http status code json response body mark invoice paid post v1 invoicing invoices record payment marks status invoice id paid include payment detail object defines payment method details json request body successful request returns http status code json response body mark invoice refunded post v1 invoicing invoices record refund marks status invoice id refunded json request body include payment detail object defines payment method details successful request returns http status code json response body list merchant invoices get v1 invoicing invoices lists merchant invoices filter invoices appear response specify one optional query parameters successful request returns http status code json response body lists invoices details search invoices post v1 invoicing search lists invoices match search criteria json request body include object specifies search criteria successful request returns http status code json response body lists invoices match search criteria show invoice details get v1 invoicing invoices shows details invoice id successful request returns http status code json response body shows invoice details generate qr code get v1 invoicing invoices qr code generates qr code invoice id qr code png image base64 encoded format corresponds invoice id generate qr code invoice add paper pdf invoice customer uses mobile device scan qr code redirected paypal mobile payment flow pay online paypal credit card get qr code must create invoice specify recipient email address object use customer email address want email invoice send invoice move invoice draft payable state specify recipient email address invoice emailed successful request returns http status code json response body shows qr code png image generate invoice number post v1 invoicing invoices next invoice number generates next invoice number available merchant successful request returns http status code json response body shows next invoice number templates \\( resource group \\) create template invoice enables create invoices predefined data use resource create list show details update delete templates note also use template settings dashboard create template invoice create template post v1 invoicing templates creates invoice template create invoice template invoice populated predefined data source template contains note use template settings dashboard instead api create invoice template update template put v1 invoicing templates updates template id json request body specify complete object update method support partial updates successful request returns http status code json response body shows template details list templates get v1 invoicing templates lists merchant created templates list shows emails addresses phone numbers merchant profile successful request returns http status code json response body lists invoices show template details get v1 invoicing templates shows details template id successful request returns http status code json response body shows template details delete template delete v1 invoicing templates deletes template id successful request returns http status code json response body payment experience api use payment experience api create seamless payment experience profiles information create paypal payment web experience profile see payment experience web profiles web profiles \\( resource group \\) use resource create show details list update partially update delete web experience profiles create web experience profile post v1 payment experience web profiles creates web experience profile json request body specify profile name details show web experience profile details get v1 payment experience web profiles shows details web experience profile id list web experience profiles get v1 payment experience web profiles lists web experience profiles merchant subject update web experience profile put v1 payment experience web profiles updates web experience profile id json request body specify profile details request omits profile parameters previously set values parameters removed partially update web experience profile patch v1 payment experience web profiles partially updates web experience profile id json request body specify patch object path profile location update needed new value complete operation delete web experience profile delete v1 payment experience web profiles deletes web experience profile id payments api use payments rest api easily securely accept online mobile payments payments namespace contains resource collections payments sales refunds authorizations captures orders enable customers make paypal credit card payments clicks depending country accept immediate payment authorize payment capture later show details completed payments refunds authorizations make full partial refunds also void authorize authorizations information see payments overview payments \\( resource group \\) use resource create sale authorized payment order sale direct credit card payment stored credit card payment paypal payment authorized payment places funds hold captured later order purchase customer approved funds placed hold also use resource execute approved paypal payments show details update list payments information see also payments create payment post v1 payments payment creates sale authorized payment captured later order create sale authorization order include payment details json request body set include payer transaction details paypal payments redirect urls combination determines type payment created information see payments rest api notes countries restrict direct credit card payment related features authorizations guaranteed three days though attempt capture authorization 29 days three day honor period authorization expires reauthorize payment execute approved paypal payment post v1 payments payment execute executes paypal payment customer approved optionally update one transactions execute payment successful request returns http status code json response body shows details executed payment important call works customer approved payment information learn paypal payments show payment details get v1 payments payment shows details payment id yet complete example shows details payment created approved failed successful request returns http status code json response body shows payment details update payment patch v1 payments payment partially updates payment id update amount shipping address invoice id custom data cannot update payment payment executes successful request returns http status code json response body shows payment details list payments get v1 payments payment lists payments created create payment call state list shows payments made merchant makes call filter payments appear response specify one optional query pagination parameters see filtering pagination successful request returns http status code json response body lists payments payment details sales \\( resource group \\) sale completed payment use resource show sale details refund sale information see also refund payments show sale details get v1 payments sale shows details sale id returns sales created rest api successful request returns http status code json response body shows sale details refund sale post v1 payments sale refund refunds sale id full refund include empty payload json request body partial refund include object json request body successful request returns http status code json response body shows details refunded sale refunds \\( resource group \\) use resource show details refund direct captured payments show refund details get v1 payments refund shows details refund id successful request returns http status code json response body shows refund details authorizations \\( resource group \\) use resource related sub resources act previously created authorization show details capture void reauthorize authorization show authorization details get v1 payments authorization shows details authorization id successful request returns http status code json response body shows authorization details capture authorization post v1 payments authorization capture captures processes authorization id use call original payment call must specify intent successful request returns http status code json response body shows details captured authorization void authorization post v1 payments authorization void voids cancels authorization id cannot void fully captured authorization successful request returns http status code json response body shows details voided authorization authorize payment post v1 payments authorization reauthorize authorizes paypal account payment authorization id ensure funds still available authorize payment initial three day honor period supports request parameter authorize payment four 29 days three day honor period original authorization expires 30 days passed original authorization must create new authorization instead authorized payment new three day honor period authorize transaction 115 originally authorized amount exceed increase 75 usd successful request returns http status code json response body shows details authorized authorization captures \\( resource group \\) use resource sub resources show details refund captured payments show captured payment details get v1 payments capture shows details captured payment id successful request returns http status code json response body shows details captured payment refund captured payment post v1 payments capture refund refunds captured payment id json request body include object successful request returns http status code json response body shows details captured payment orders \\( resource group \\) use resource authorize capture void show details order note cannot refund order directly instead must refund completed payment order integration information see orders refund payment information see also orders show order details get v1 payments orders shows details order id successful request returns http status code json response body shows details voided authorization authorize order post v1 payments orders authorize authorizes order id json request body include object successful request returns http status code json response body shows details authorized order capture order post v1 payments orders capture captures payment order id use call original payment call must specify intent json request body include payment amount indicate whether capture final capture authorization successful request returns http status code json response body shows details captured order void order post v1 payments orders void voids cancels order id cannot void order payment already partially fully captured successful request returns http status code json response body shows details voided order payouts api use payouts api make paypal payments multiple paypal accounts single api call specify recipients using paypal email addresses phone numbers encrypted paypal account numbers payouts api fast convenient way send commissions rebates rewards general disbursements payouts appear mass payments sender 's paypal account provided mass payment reports important use payouts api request access account alternatively contact account manager paypal customer support must paypal business account payouts api uses iso 8601 date time format information payouts api see payouts deprecation notice synchronous mode soon deprecated longer available new integrations continues supported existing integrations synchronous mode payout immediately returns results payout payouts \\( resource group \\) use resource create payouts show batch payout details create payouts post v1 payments payouts make payouts one paypal accounts show batch payout details get v1 payments payouts periodically shows latest status batch payout along transaction status data individual items payout item \\( resource group \\) use resource show details payout item cancel unclaimed payout item deprecation notice synchronous mode soon deprecated longer available new integrations continues supported existing integrations synchronous mode payout immediately returns results payout show payout item details get v1 payments payouts item shows details payout item review current status previously unclaimed pending payout item cancel unclaimed payout item post v1 payments payouts item cancel cancels unclaimed transaction one claims unclaimed item within 30 days funds automatically returned sender cancel unclaimed item automatic 30 day refund vault api merchants use vault api securely store customer credit cards paypal vault rather server use api store customer credit card api returns id vaulted card take payment vaulted card specify id vaulted card instead credit card details information see vault overview notes paypal validate credit card information store vault direct credit card payment related features restricted countries credit cards \\( resource group \\) use resource store credit card vault delete show details list update vaulted cards store credit card post v1 vault credit cards stores credit card details paypal vault use vaulted card make payment specify id vaulted card object include store credit card must include id object also use id vaulted credit card show details update delete vaulted card list vaulted credit cards get v1 vault credit cards lists vaulted credit cards filter cards response specify one optional query parameters show vaulted credit card details get v1 vault credit cards shows details vaulted credit card id update vaulted credit card patch v1 vault credit cards updates information vaulted credit card id json request body specify values update delete vaulted credit card delete v1 vault credit cards deletes vaulted credit card id webhooks api paypal rest apis use webhooks event notification webhooks http callbacks receive notification messages events configure webhook listener app create webhook subscribes webhook listener app events namespace contains resource collections webhooks webhooks \\( resource group \\) use resource create show details list update delete webhooks create webhook post v1 notifications webhooks subscribes webhook listener events successful request returns http status code json response body object includes webhook id later use show webhook details get v1 notifications webhooks shows details webhook id list webhooks get v1 notifications webhooks lists webhooks update webhook patch v1 notifications webhooks updates webhook id supports operation delete webhook delete v1 notifications webhooks deletes webhook id webhook event notifications \\( resource group \\) use resource show event notification details list event notifications resend notification event show event notification details get v1 notifications webhooks events shows details event notification id list event notifications get v1 notifications webhooks events lists webhook event notifications specify one optional query parameters filter response resend event notification post v1 notifications webhooks events resend resends event notification event id webhook events \\( resource group \\) use resource list events webhooks subscribe resource list event subscriptions webhook list available events get v1 notifications webhooks event types lists events app subscribe list webhook events see webhook events list event subscriptions webhook get v1 notifications webhooks event types lists event subscriptions webhook id simulate webhook event \\( resource group \\) use resource use sample payload simulate webhook event events call generates serve validate connection listener url show webhook events look note also use webhooks simulator simulate webhook events simulate webhook event post v1 notifications simulate event simulates webhook event simulate event specify sample payload request send mock event data url configured listen notification messages mock events serve validate connection listener url show webhook events look verify webhook signature \\( resource group \\) use resource verify webhook signature verify webhook signature post v1 notifications verify webhook signature verifies webhook signature docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "crawled_date": "2017-06-10T13:59:26.429218"
  }, 
  "275": {
    "api_url": "coinsecure.in", 
    "progweb_url": "https://www.programmableweb.com/api/coinsecure-livenet", 
    "progweb_date": "11.25.2015", 
    "progweb_descr": "CoinSecure is an API that aims to provide developers with a secure way to facilitate transactions with Bitcoin. The API intends to offer features such as security, trade free exchanges, and platform support.", 
    "api_name": "Coinsecure Livenet", 
    "progweb_cat": "Bitcoin,Financial", 
    "crawled_date": "2017-06-10T13:59:26.428330"
  }, 
  "276": {
    "api_url": "squareup.com", 
    "progweb_url": "https://www.programmableweb.com/api/square-connect", 
    "progweb_date": "11.27.2015", 
    "progweb_descr": "The Square Connect API is a money management tool for developers that allows for the management of transactions, sales, reporting and inventory. Square offers multiple APIs that all aim to provide snycing capabilities, sales reporting, and employee management for iOS platforms.", 
    "api_name": "Square Connect", 
    "progweb_cat": "API,Payments", 
    "crawled_date": "2017-06-10T13:59:26.427384"
  }, 
  "277": {
    "api_url": "gocardless.com", 
    "progweb_url": "https://www.programmableweb.com/api/gocardless-pro", 
    "progweb_date": "11.30.2015", 
    "progweb_descr": "The GoCardless Pro API allows developers to integrate a recurring payment system and is targeted to enterprises in Europe. API documentation includes how to make requests, time zones/dates, cursor pagination, response codes, and errors. Formats are available in JSON. Developers can authenticate with an API Key.", 
    "api_name": "GoCardless Pro", 
    "progweb_cat": "Payments,Enterprise", 
    "crawled_date": "2017-06-10T13:59:26.426456"
  }, 
  "278": {
    "api_url": "paysera.com", 
    "progweb_url": "https://www.programmableweb.com/api/paysera-notification", 
    "progweb_date": "11.30.2015", 
    "progweb_descr": "The Paysera Notification API allows developers to receive notifications from account events. Parameters include credit, currency, amount, beneficiary, and payment. A PHP library is available to support integration, in addition to JSON and REST protocols, which are part of Paysera Wallet API. Paysera provides secured and easy online money transfers via mobile phones.", 
    "api_name": "Paysera Notification", 
    "progweb_cat": "Notifications,Accounts", 
    "crawled_date": "2017-06-10T13:59:26.425538"
  }, 
  "279": {
    "api_url": "heartlandpaymentsystems.com", 
    "progweb_url": "https://www.programmableweb.com/api/heartland-payment-systems", 
    "progweb_date": "12.02.2015", 
    "progweb_descr": "The Heartland Payment Systems API allows to integrate payments and billing functionalities into web services. Tokens and keys available to authenticate. Also accessible examples in C#, PHP, Java, Ruby, Python, and Node.js. Industries that can benefit from integration include restaurants, education K-12, retail, campus, grocery, parking, laundry, and petroleum. Heartland provides payroll, gift cards, point of sale, mobile payments, school solutions, school nutrition, and mobile ordering services.", 
    "api_name": "Heartland Payment Systems", 
    "progweb_cat": "Payments,Billing", 
    "crawled_date": "2017-06-10T13:59:26.424507"
  }, 
  "108": {
    "api_url": "strongcoin.com", 
    "progweb_url": "https://www.programmableweb.com/api/strongcoin-merchants", 
    "progweb_date": "03.16.2013", 
    "progweb_descr": "Strongcoin is a hybrid wallet Bitcoin service. The wallet is browser encrypted to prevent anyone from having access to the Bitcoin address except the owner. The service does not require a specified Bitcoin address format, so users can move coins to and from to other services without needing to alter an address.  StrongCoin merchant API allows users to accept Bitcoins as payments on merchant websites. The API functions allow users to create orders and handle payment notifications.", 
    "api_name": "StrongCoin Merchants", 
    "progweb_cat": "Payments,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:37.945134"
  }, 
  "109": {
    "api_url": "ripple.com", 
    "progweb_url": "https://www.programmableweb.com/api/ripple", 
    "progweb_date": "03.17.2013", 
    "progweb_descr": "Ripple was created to provide a free, open-source, payment service that exist without a central authority. It is open-source, almost free to use, an can pay out in an currency.  The Ripple API allows users to integrate the Ripple payment system and platform into third-party projects. The API is available in numerous formats including an RCP API, a Wbsocket API, and a JSON API.", 
    "api_name": "Ripple", 
    "progweb_cat": "Payments,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:37.944179"
  }, 
  "102": {
    "api_url": "paymentevolution.com", 
    "progweb_url": "https://www.programmableweb.com/api/paymentevolution", 
    "progweb_date": "03.07.2013", 
    "progweb_descr": "PaymentEvolution is a secure online payroll service aimed at small and mid-sized businesses in Canada. The PaymentEvolution Payroll API supports calculations from simple federal/provincial deductions through to more complex custom benefits and earnings. Common API requests include simple deduction calculations based on current tax tables - users can input a standard set of  variables to receive the calculated result, custom deductions, benefits and earnings - to extend the API to include any number of custom calculations. An account is required with service.", 
    "api_name": "PaymentEvolution", 
    "progweb_cat": "Financial,Accounting", 
    "crawled_date": "2017-06-10T13:59:37.951092"
  }, 
  "103": {
    "api_url": "astutepayroll.com", 
    "progweb_url": "https://www.programmableweb.com/api/astutepayroll", 
    "progweb_date": "03.07.2013", 
    "progweb_descr": "Astutepayroll.com handles the payroll and timekeeping for businesses around the world, and offers a 99.9% uptime guarantee. The astutepayroll.com API can be used to integrate the astutepayroll.com application with third-party applications and data. The API\u00e2\u20ac\u2122s also provide mechanisms that enable the user to customize the astutepayroll.com user interface with custom components and validations. An account is required with service, and approved partners will be provided with an API key.", 
    "api_name": "AstutePayroll", 
    "progweb_cat": "Financial,Accounting", 
    "crawled_date": "2017-06-10T13:59:37.949938"
  }, 
  "100": {
    "api_url": "fiercepayroll.com", 
    "progweb_url": "https://www.programmableweb.com/api/fierce-payroll", 
    "progweb_date": "03.05.2013", 
    "progweb_descr": "Fierce Payroll is a web-based payroll service for small to mid-sized businesses that helps employers meet compliance and infrastructure needs.  The Fierce Payroll API enables users to import data directly into the Fierce Payroll system for processing. API functions include: Accessing account balance, submitting new deposit notifications, deposit searches, deposit statuses, submitting payment requests, accessing date range of payments, and payment searches. An account and API key are required with service.", 
    "api_name": "Fierce Payroll", 
    "progweb_cat": "Financial,Invoicing", 
    "crawled_date": "2017-06-10T13:59:37.953122"
  }, 
  "101": {
    "api_url": "keypay.com.au", 
    "progweb_url": "https://www.programmableweb.com/api/keypay-yourpayroll", 
    "progweb_date": "03.05.2013", 
    "progweb_descr": "KeyPay is a cloud-based payroll and accounting service for Australian employers. The service allows users to make automate simple functions, allows them the flexibility to configure the system, and integrate the services with other applications. The KeyPay YourPayroll API allows users to query for a list of businesses, locations, work types, employees, time sheets, pay categories, and other payroll information. The API uses REST calls and returns JSON. An account is required with service and authentication is preformed using SSL and API keys.", 
    "api_name": "KeyPay YourPayroll", 
    "progweb_cat": "Financial,Accounting", 
    "crawled_date": "2017-06-10T13:59:37.952099"
  }, 
  "106": {
    "api_url": "rixty.com", 
    "progweb_url": "https://www.programmableweb.com/api/rixty", 
    "progweb_date": "03.12.2013", 
    "progweb_descr": "Rixty is an alternative payment system that uses cash and coins rather than a credit card or other payment method that could expose sensitive information online. Users can convert their cash to digital currency in the form of a code at any of 75,000 stores in the US or nearly 500,000 locations worldwide. They can then spend that money on multiplayer online games, casual games, virtual worlds, and all types of digital content simply by redeeming the received code. Codes can also be redeemed on a publisher's website by using the Rixty payment API.", 
    "api_name": "Rixty", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:37.947078"
  }, 
  "107": {
    "api_url": "securetrading.com", 
    "progweb_url": "https://www.programmableweb.com/api/securetrading", 
    "progweb_date": "03.14.2013", 
    "progweb_descr": "SecureTrading is a UK based online secure payment service that processes billions of dollars annually.  The SecureTrading API allows users to automate refunds and authorization reversals and control settlement schedules. Users can also integrate a payment service into back-office or legacy system. The API uses REST protocols and returns XML.", 
    "api_name": "SecureTrading", 
    "progweb_cat": "Payments,Merchants", 
    "crawled_date": "2017-06-10T13:59:37.946146"
  }, 
  "104": {
    "api_url": "shoebooks.com.au", 
    "progweb_url": "https://www.programmableweb.com/api/shoebooks", 
    "progweb_date": "03.08.2013", 
    "progweb_descr": "Shoebooks is a fully featured online accounting and payroll solution that is based in Australia. The Shoebooks SOAP interface ensures that all business rules and data structure complies with the Shoebooks accounting and payroll system. The Shoebooks API allows users to create/edit customers, supplier or employee records, Create new invoices or bills, apply receipts to invoices and payments to bills, as well as create and lookup banking transactions.", 
    "api_name": "ShoeBooks", 
    "progweb_cat": "Financial,Invoicing", 
    "crawled_date": "2017-06-10T13:59:37.948986"
  }, 
  "105": {
    "api_url": "kashfx.com", 
    "progweb_url": "https://www.programmableweb.com/api/kashfx", 
    "progweb_date": "03.11.2013", 
    "progweb_descr": "KashFX is a we-based commodities, currency, futures, credit, and equity trading platform that offers browser-based front-end so that the entire service is accessible via the web. The service has a 3 millisecond transaction time in its futures markets, and also offers trading in energy markets. The KashFX API permits user to access and integrate the trading functionality of the KashFX platform with third-party applications. An account is required with service, the API uses SOAP protocols, and SSL and an API key are used for authentication.", 
    "api_name": "KashFX", 
    "progweb_cat": "Financial,Payments", 
    "crawled_date": "2017-06-10T13:59:37.948075"
  }, 
  "39": {
    "link5": "https://www.wazala.com/api/docs/", 
    "link4": "http://support.wazala.com/hc/en-us/articles/201094686-Wazala-API-Documentation", 
    "link1": "http://support.wazala.com/hc/en-us/sections/200276766--Analytics-Tracking-API-", 
    "api_url": "wazala.com", 
    "link3": "https://www.wazala.com/api/docs/admin/", 
    "link2": "http://support.wazala.com/hc/en-us/articles/201731243-Getting-Started-Guide", 
    "progweb_url": "https://www.programmableweb.com/api/wazala-store", 
    "progweb_date": "10.25.2010", 
    "progweb_descr": "Create an online store using Wazala, a hosted service that lets you embed a JavaScript widget in your site. The simple JavaScript API lets you interact with the shopping cart, then the user makes a purchase via Paypal or Google Checkout.", 
    "api_name": "Wazala Store", 
    "progweb_cat": "eCommerce,Payments", 
    "descr5": "wazala home intro features pricing sell online browse stores login wazala online store api documentation store javascript api store manager api order forward api terms privacy partners contact like us facebook follow wazala", 
    "descr4": "wazala home intro features pricing login submit request sign wazala help desk analytics tracking api wazala api documentation julia april 23 2014 14 58 follow offer different capabilities within api visit page find looking specifics cannot find please email support wazala com help article helpful \\? 0 0 found helpful questions \\? submit request blog terms privacy partners like us facebook follow wazala", 
    "descr3": "wazala home intro features pricing sell online browse stores login api info font size 11px color 909090 h3 margin bottom 10px wazala online store api documentation overview subscribing paid wazala online store 'll given unique authentication token find account tab store manager every api request make 'll need present token account login email using basic http authentication use account login email username api token password wazala api single point entry http www wazala com api calls made using rest ful interface send http post http www wazala com api parameters specified call 's example authenticated request made curl curl u account email api token http www wazala com api parameters admin api queries get products returns online store product list parameters method required parameter must set get products status \\( optional \\) filter product list one statuses set array possible values active back order coming soon sold hidden category \\( optional \\) filter product list one categories set array categories id 's example request curl u account email api token http www wazala com api method get products status active status 'coming soon' category 149 success response \\? xml version 1 0 encoding utf 8 \\? response status ok products total 14 product product id 1 product id name product name name description full product description description price 113 90 price status coming soon status tags toys kids speedcar racer tags shippable yes shippable downloadable downloadable taxable yes taxable categories category category id 149 toys category categories product products response error response \\? xml version 1 0 encoding utf 8 \\? response status fail error error message error response get categories returns online store category list parameters method required parameter must set get categories example request curl u account email api token http www wazala com api method get categories success response \\? xml version 1 0 encoding utf 8 \\? response status ok categories total 3 category category id 149 category id name toys name description full description description status active status category categories response error response \\? xml version 1 0 encoding utf 8 \\? response status fail error error message error response get coupons returns online store coupon list parameters method required parameter must set get coupons start date \\( optional \\) return coupons start date greater equal given parameter value must format expire date \\( optional \\) return coupons expiry date lower equal given parameter value must format discount type \\( optional \\) available values flat percent filter coupons list one discount types example request curl u account email api token http www wazala com api method get coupons start date 2011 01 24 expire date 2012 12 31 discount type percent success response \\? xml version 1 0 encoding utf 8 \\? response status ok coupons total 14 coupon assign single use coupon id 1300 coupon id code aaaaaa code discount type flat value discount type discount value 30 00 discount value start date 2011 02 01 start date expire date 2011 06 10 expire date coupon coupon assign product product id 12145 single use coupon id 1301 coupon id code aaaaaa code discount type percent discount type discount value 3 discount value start date 2011 02 09 start date expire date 2011 07 14 expire date product assigned product name product coupon coupon assign category category id 2232 single use coupon id 1306 coupon id code aaaaa code discount type percent discount type discount value 21 discount value start date 2011 06 07 start date expire date 2011 07 07 expire date category assigned category name category coupon coupons response error response \\? xml version 1 0 encoding utf 8 \\? response status fail error error message error response get customers returns online store customer list parameters method required parameter must set get customers last order date \\( optional \\) filter customers based last order date sent array first array element used start date range second element used end date range first element blank end date range used second element blank start date range used set date value filter set return customers last order date equal parameter value dates must set format orders \\( optional \\) filter customers based total number orders sent array first array element used minimum orders second element used maximum orders first element blank maximum range used second element blank minimum range used set number value filter set return customers total number orders equal parameter value amount \\( optional \\) filter customers based total amount orders sent array first array element used minimum orders amount second element used maximum orders amount first element blank maximum range used second element blank minimum range used set number value filter set return customers total orders amount equal parameter value search \\( optional \\) filter customers based given search term search made name email address fields example request curl u account email api token http www wazala com api method get customers last order date 2011 05 24 orders 50 orders 100 amount 300 search 'los angeles' success response \\? xml version 1 0 encoding utf 8 \\? response status ok customers total 4 customer customer id 10000 customer id name customer full name name email customer email email phone phone number phone last order date 2011 05 24 12 31 07 last order date orders 60 orders orders amount 5023 30 orders amount address street address street address extended address extended city los angeles city state ca state postal code postal code country code us country code customer customers response error response \\? xml version 1 0 encoding utf 8 \\? response status fail error error message error response get orders returns online store orders list parameters method required parameter must set get orders start date \\( optional \\) return orders created given parameter value must format end date \\( optional \\) return orders created given parameter value must format status \\( optional \\) filter order list one statuses set array possible values new hold shipped canceled pending search \\( optional \\) filter orders based given search term search made order customer name email address fields example request curl u account email api token http www wazala com api method get orders start date 2011 05 24 end date 2011 12 24 status new status pending search 'los angeles' success response \\? xml version 1 0 encoding utf 8 \\? response status ok orders total 17 order order id 14272 order id name client name name email client email email phone client phone phone purchase date 2011 07 26 23 41 32 purchase date order 100001 order status shipped status items total 124 00 items total shipping total 10 00 shipping total tax total 3 00 tax total order total 137 00 order total order orders response error response \\? xml version 1 0 encoding utf 8 \\? response status fail error error message error response get statistics returns online store statistic values parameters method required parameter must set get stats start date \\( optional \\) get statistics given value must format end date \\( optional \\) get statistics given value must format example request curl u account email api token http www wazala com api method get stats start date 2011 05 24 end date 2011 12 24 success response \\? xml version 1 0 encoding utf 8 \\? response status ok stats orders amount 932 44 42 orders favorites amount 29 3 13 favorites widget views 377 widget views stats response error response \\? xml version 1 0 encoding utf 8 \\? response status fail error error message error response need help questions email request back wazala online store api terms privacy partners contact like us facebook follow wazala", 
    "descr2": "wazala home intro features pricing login submit request sign wazala help desk getting started getting started guide lisa september 10 2015 05 43 follow welcome wazala congratulations making decision sell online want make sure setup quickly start selling right away chance really test wazala let get ball rolling adding products log wazala account get started click manager product tab click add first product form fill name product description make sure use search engine friendly terms feel customers search online add keywords describe product automatically create related products section underneath every product cross sell insert product price sale price running special state whether product shippable calculate shipping rates upload product images also arrange moving sideways selling digital goods check item downloadable upload digital files product offer different sizes colors use options feature create first name options like size add multiple values like small medium large product limited supply select track inventory prevent overselling note system automatically show items sold inventory depleted click save repeat open previous product click duplicate use options full documentation adding products found shipping optionsif offer shipping skip part ship products want charge need head manager shipping options area select allow customers pick order wish add tax shipping charges wish offer expedited shipping option extra cost express shipping edit default description provide something happy next move shipping regions add countries ship wazala process order country outside shipping regions already set usa international shipping delete one add next move shipping calculator offer different shipping calculators choose select shipping method prefer fill details save full documentation shipping found setting paymentsnext need configure payment options receive money orders made store head manager payment select currency wish sell please note different payment gateways work different currencies need make sure currency matches payment gateway currency set click merchant accounts merchants account take credit cards right within store website blog facebook page without directing customer elsewhere pay simply select one enter private keys provide save next paypal options paypal options directs customer paypal website pay notice paypal standard already configured made easy start accepting money right away using paypal email course delete payment option wish use full documentation payment found adding store websitenow store setup time add website every wazala account comes free store url profileurl also add wazala existing website pretty easily offer different ways 1 custom domain allows use custom domain name \\( example www domain com shop domain com \\) store url instead mystore wazala com need domain name host full documentation custom domain mapping found 2 store widget allows use wazala widget store part website many options available use wazala designed red button wazala pop site use button wazala pop site embed wazala page within website make seem like full documentation adding widget website found add wazala facebook pageyou add store facebook business page allow fans buy directly facebook say orders change make store immediately done facebook store never update anything set full documentation adding store facebook found go live set need take store live demo mode head manager settings uncheck put store demo mode option click save go live products store added site ready sell hope found helpful getting started understand every business may specific needs support staff always available help every step way simply fill form get touch us article helpful \\? 0 1 found helpful questions \\? submit request related articles add widget website go live allowing paypal calculate shipping shipping options \\? payment options blog terms privacy partners like us facebook follow wazala", 
    "descr1": "wazala home intro features pricing login submit request sign wazala help desk analytics tracking api analytics tracking api follow new articles new articles comments help analytics tracking wazala api google analytics cross domain tracking google analytics affiliate program support wazala api documentation order forwarding retrieving store data remotely blog terms privacy partners like us facebook follow wazala", 
    "crawled_date": "2017-06-10T13:59:47.721959"
  }, 
  "38": {
    "api_url": "cybersource.com", 
    "progweb_url": "https://www.programmableweb.com/api/cybersource-simple", 
    "progweb_date": "08.27.2010", 
    "progweb_descr": "CyberSource helps you accept payments on your website. The service supports payments by credit card, electronic check and PayPal. There are several methods that can be used and developer kits in a number of languages.", 
    "api_name": "CyberSource Simple", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:47.725150"
  }, 
  "33": {
    "link1": "https://developer.bill.com/hc/en-us", 
    "api_url": "bill.com", 
    "link2": "https://developer.bill.com/hc/en-us/articles/211360686-API-Mechanics", 
    "progweb_url": "https://www.programmableweb.com/api/billcom", 
    "progweb_date": "05.19.2010", 
    "progweb_descr": "Bill.com is designed to help ease the process of bill management and payments. The Bill.com API is design your functionality by building new applications like: Integrate and add new features to your accounting system, Sync information with Bill.com with your accounting package including vendors, accounts, departments, and money movements, Integrate your Accounts Receivable system with Bill.com, and Rebate processing.", 
    "api_name": "Bill.com", 
    "progweb_cat": "Financial,Payments", 
    "descr2": "toggle navigation get started faq sign support system status developer support get started overview api mechanics article describes mechanics bill com api end points request response formats end points login api requests production must use url example environments \\( see stage environment sandbox accounts \\) separate api end point url exists subsequent calls made \\( referred api end point url throughout document \\) returned login call entities \\( exceptions noted \\) created updated read set crud \\( create read update delete \\) operations api end point follows format operation one following create update read delete undelete response bill com api json described rest document request format api requests use http method three required parameters passed call \\( except listorgs login calls \\) request parameters specific operation contained within data variable string value pairs note names values name value pairs json objects case sensitive names must identical object definition api reference guide api parameters passed parameters content type set response format bill com api responses always three name value pairs 0 success 1 error success error returned information \\( e list records errors etc \\) operation specific response data described api reference section object types following table defines various data types bill com api works request response objects quick navigation businesses accounts payable accounts receivable pricing software integration sign ach payments works quickbooks accounting firms overview works accountant pricing explore resources accountant resource center accountant program sign banks overview learn company us leadership investors press news careers contact us resources blog faqs developers app center support file state complaint find us 2017 rights reserved privacy policy cookie policy terms service powered zendesk", 
    "descr1": "toggle navigation get started faq sign support system status harness power trusted b2b payments platform bill com largest business payments network 1 million members 26 million moved annually connect bill com easy use api access everything need send receive payments business get started leverage leading payments platform business integrate bill com end end automation payables receivables avoid double data entry software sync quickbooks xero netsuite intacct faster diverse choice payment solutions facilitate ap process electronic payments checks ar customers receive pay invoices digitally pay get paid half time paper based process benefit built regulatory compliance already partner 2 top 5 banksso leverage money transmitter licenses regulatory compliance expertise 42 forbes fintech 50 use bill com fintech leaders choose bill com understand importance efficient payments forefront mission eliminate 19 billion business checks year solve 1 trillion problem ren lacerte ceo founder bill com everything expect industry leader easy reconcilation get detailed overview cash flow forecasting ap ar automation look payment check anytime 3rd party integration automatically deduct payment customer 's account paperless workflow send payment reminders overdue notices automatically data security enjoy faster transactions collaboration within network network benefits create send digital invoices get paid faster check ach licensing leverage money movement transmitter licenses mass payment efficiencies process high volume payments simultaneously mobile approvals payments allow approvals payments go anytime anywhere zola innovative wedding registry transforming couples guests share buy ship wedding gifts ecommerce company mostly dropship previously uploading vendor invoices bill com via api able deeper integration system connect bills invoices vice versa well data extraction invoices created related bill stephane bailliez vp engineering zola result bill com 's api integration engineering team able build automated feature seamlessly approves inventory bills passing three way match bill total po total shipping confirmation integration significantly reduced time spent dot bo 's accounts payable department longer need manually perform three way match inventory invoices irene altman controller dot bo 30 world top 150 sharing economy firms use bill com today 30 world top 150 sharing economy companies use bill com number growing sharing economy companies need scale payments efficiently bill com enables companies transform entire market get levels 1 000 bills month sharing economy companies like customers taskrabbit classpass turo tapingo others build accounting product systems around payment efficiency bill com api enables sharing economy companies automate processes khan academy 38 5 million learners leading non profit organization online learning strives provide free world class education anyone anywhere chose bill com works great quickbooks online felt really met approval needs tina sachs controller khan academy tallie business software automates expense report process point purchase way accounting reimbursement user experience tallie bill com integration speaks said chris farrell ceo tallie together bill com raising expectations saas partnerships seamless data transfer customer service via single support desk chris farrell ceo tallie businesses accounts payable accounts receivable pricing software integration sign ach payments works quickbooks accounting firms overview works accountant pricing explore resources accountant resource center accountant program sign banks overview learn company us leadership investors press news careers contact us resources blog faqs developers app center support file state complaint find us 2017 rights reserved privacy policy cookie policy terms service powered zendesk", 
    "crawled_date": "2017-06-10T13:59:47.731900"
  }, 
  "32": {
    "link1": "http://paymentsgateway.com/developers.html", 
    "api_url": "paymentsgateway.com", 
    "link3": "http://paymentsgateway.com/developerDocumentation/Introduction1.html", 
    "link2": "http://paymentsgateway.com/developerDocumentation/bestpractices.html", 
    "progweb_url": "https://www.programmableweb.com/api/payments-gateway", 
    "progweb_date": "05.14.2010", 
    "progweb_descr": "Payments Gateway is a service from ACH Direct, Inc., one of the largest and fastest growing privately held payment processing companies in the United States.  The API provides a platform for customizable integration options to meet the payment processing needs of a variety of merchants. Often the API is used to build white label integrations.", 
    "api_name": "Payments Gateway", 
    "progweb_cat": "Payments,Financial", 
    "descr3": "", 
    "descr2": "", 
    "descr1": "button payments gateway brand new name whole new experience powerful solutions omni channel payment solutions merchants developers go follow us stay date latest pg news via rss twitter google 1 copyright copy 2012 payments gateway rights reserved privacy legal", 
    "crawled_date": "2017-06-10T13:59:47.733120"
  }, 
  "31": {
    "link4": "https://docs.playspan.com/exportword?pageId=8585224", 
    "link1": "https://docs.playspan.com/pages/viewpage.action?pageId=1868018", 
    "api_url": "playspan.com", 
    "link3": "https://docs.playspan.com/display/wiki/Microtransactions+API+Reference+Guide+%28MTX+Platform%29", 
    "link2": "https://docs.playspan.com/pages/viewpage.action?pageId=8585227", 
    "progweb_url": "https://www.programmableweb.com/api/playspan", 
    "progweb_date": "04.26.2010", 
    "progweb_descr": "PlaySpan provides monetization solutions for over 1,000 online games, virtual worlds, and social networks. The Player-to-Player Marketplace offers a secure solution for monetizing games through virtual goods sales either between gamers or between businesses and gamers.  The Player2Player is a hosted web service API enables  Marketplace deployment and ensures that purchased items are quickly delivered to the right player in-game. Players can choose Buy Now or Auction-based pricing. The Publisher2Player API also offers users analytics and reporting.   Public documentation is not available.", 
    "api_name": "PlaySpan", 
    "progweb_cat": "Payments,Social", 
    "descr4": "microtransactions api reference guide \\( mtx platform \\) using playspan mtx platform may download api reference guide", 
    "descr3": "browse pages blog labels attachments bookmarks mail advanced new space directory keyboard shortcuts confluence gadgets log dashboard playspan wiki welcome playspan docs integration guide microtransactions api reference guide \\( mtx platform \\) tools attachments \\( 1 \\) page history restrictions info link page view hierarchy view wiki markup export pdf export word microtransactions api reference guide \\( mtx platform \\) skip end metadata page restrictions apply attachments 1 added david coleman last edited david coleman jan 29 2015 \\( view change \\) comment go start metadata using playspan mtx platform may download api reference guide labels parameters labels none 2005 2013 playspan inc rights reserved home press careers us privacy policy merchant agreement", 
    "descr2": "browse pages blog labels attachments bookmarks mail advanced new space directory keyboard shortcuts confluence gadgets log dashboard playspan wiki microtransactions api reference guide \\( mtx \\) tools page history info view hierarchy view wiki markup export pdf microtransactions api reference guide \\( mtx \\) skip end metadata page restrictions apply added david coleman edited david coleman jan 29 2015 comment go start metadata viewing old version page view current version compare current view page history version 1 current using playspan mtx platform may download api reference guide microtransactions api reference guide november2014 pdf labels parameters labels none 2005 2013 playspan inc rights reserved home press careers us privacy policy merchant agreement", 
    "descr1": "browse pages blog labels attachments bookmarks mail advanced new space directory keyboard shortcuts confluence gadgets log dashboard playspan wiki welcome playspan documentation guide tools page history info view hierarchy view wiki markup export pdf welcome playspan documentation guide skip end metadata page restrictions apply added administrator edited kevin jenkins oct 23 2010 comment go start metadata viewing old version page view current version compare current view page history previous version 19 next take look left learn features playspan monetization service platform get started integration right away support contact info found bottom left menu option look forward assisting labels parameters labels none 2005 2013 playspan inc rights reserved home press careers us privacy policy merchant agreement", 
    "crawled_date": "2017-06-10T13:59:47.734271"
  }, 
  "30": {
    "api_url": "offerpalmedia.com", 
    "progweb_url": "https://www.programmableweb.com/api/offerpal", 
    "progweb_date": "03.27.2010", 
    "progweb_descr": "Offerpal Media is the leader in virtual currency monetization for online games, virtual worlds and social networks. The company\u00ef\u00bf\u00bds turnkey payment platform gives consumers the opportunity to earn or buy virtual currency by completing targeted advertising offers or by purchasing it through direct, global payment options.  Offerpal has issued more than 750 billion virtual points to over 150 million consumers across 2,000 publishers and 190 countries since its launch in 2007. The service is embeddable as an I-Frame or XML/JSON feed. No public documentation is available.", 
    "api_name": "Offerpal", 
    "progweb_cat": "Financial,Payments", 
    "crawled_date": "2017-06-10T13:59:47.735442"
  }, 
  "37": {
    "api_url": "bigdoor.com", 
    "progweb_url": "https://www.programmableweb.com/api/bigdoor", 
    "progweb_date": "07.16.2010", 
    "progweb_descr": "The BigDoor API offers web developers help building game-like mechanics and loyalty programs into their sites or applications through points, badges, levels, leaderboards, virtual currency and virtual goods.", 
    "api_name": "BigDoor", 
    "progweb_cat": "Other,Games", 
    "crawled_date": "2017-06-10T13:59:47.726599"
  }, 
  "36": {
    "link1": "http://networkx.github.io/documentation.html", 
    "api_url": "github.io", 
    "link2": "http://grails.github.io/grails-static-website/documentation.html", 
    "progweb_url": "https://www.programmableweb.com/api/checkfront", 
    "progweb_date": "06.30.2010", 
    "progweb_descr": "Checkfront is a booking service that allows businesses to manage their schedule based inventories, centralize reservations, and process payments online. It can be used to manage accommodation, events, rentals and professional service bookings.", 
    "api_name": "Checkfront", 
    "progweb_cat": "Enterprise,Booking", 
    "descr2": "fork github socialize discuss mailing list discuss slack grails twitter events conferences source code github report issues github stack overflow questions using outdated browser please upgrade browser improve experience grails learnguidesdocumentationdownloadpluginscommunitysupport socialize documentationuser guideapi documentationdocumentation older versionsfaq improve doc documentationthe documentation available single page document feel free pick direct section also browse documentation older versions user guidedownloading grailsuser guideapi reference gormwebsitegorm hibernate user guideapi reference learning resourcesgrails guides focused tutorials samplesslack community discussionuser guide older versionsyou browse documentation previous versions grails since grails 1 2 0 select version3 3 0 m23 3 0 m13 2 93 2 83 2 73 2 63 2 53 2 43 2 33 2 23 2 103 2 13 2 0 rc23 2 0 rc13 2 0 m23 2 0 m13 2 03 1 93 1 83 1 73 1 63 1 53 1 43 1 33 1 23 1 163 1 153 1 143 1 133 1 123 1 113 1 103 1 13 1 0 rc23 1 0 rc13 1 0 m33 1 0 m23 1 03 0 93 0 83 0 73 0 63 0 53 0 43 0 33 0 23 0 173 0 163 0 153 0 143 0 133 0 123 0 113 0 103 0 13 0 02 5 62 5 52 5 42 5 32 5 22 5 12 5 02 4 52 4 42 4 32 4 22 4 12 4 02 3 92 3 82 3 72 3 62 3 52 3 42 3 32 3 22 3 112 3 102 3 12 3 02 2 52 2 42 2 32 2 22 2 12 2 02 1 52 1 42 1 32 1 22 1 12 1 02 0 42 0 32 0 22 0 12 0 01 3 91 3 81 3 71 3 61 3 51 3 41 3 31 3 21 3 11 3 01 2 51 2 41 2 31 2 21 2 11 2 0api older versionsyou browse api previous versions grails since grails 1 2 0 select version3 3 0 m23 3 0 m13 2 93 2 83 2 73 2 63 2 53 2 43 2 33 2 23 2 103 2 13 2 0 rc23 2 0 rc13 2 0 m23 2 0 m13 2 03 1 93 1 83 1 73 1 63 1 53 1 43 1 33 1 23 1 163 1 153 1 143 1 133 1 123 1 113 1 103 1 13 1 0 rc23 1 0 rc13 1 0 m33 1 0 m23 1 03 0 93 0 83 0 73 0 63 0 53 0 43 0 33 0 23 0 173 0 163 0 153 0 143 0 133 0 123 0 113 0 103 0 13 0 02 5 62 5 52 5 42 5 32 5 22 5 12 5 02 4 52 4 42 4 32 4 22 4 12 4 02 3 92 3 82 3 72 3 62 3 52 3 42 3 32 3 22 3 112 3 102 3 12 3 02 2 52 2 42 2 32 2 22 2 12 2 02 1 52 1 42 1 32 1 22 1 12 1 02 0 42 0 32 0 22 0 12 0 01 3 91 3 81 3 71 3 61 3 51 3 41 3 31 3 21 3 11 3 01 2 51 2 41 2 31 2 21 2 11 2 0 grails learnguidesdocumentationdownloadpluginscommunitysupport contributingsource codebuild statusbooksfaqsearch socialize discuss mailing listdiscuss slackgrails twitterevents conferencessource code githubreport issues githubstack overflow questions grails frameworkrepository hosted artifactorywebsite hosting provided pivotalyourkit supports grails java profiler 2005 2017 grails project grails open source apache 2 license", 
    "descr1": "networkx navigation next previous networkx home documentation download developer \\( github \\) versions latest release networkx 1 11 30 january 2016 downloads docs pdf development 2 0dev github docs pdf contact mailing list issue tracker documentation new networkx take look tutorial examples show simple complicated ways use networkx full documentation versions latest release development archived documentation documentation older versions avaiable following links networkx 1 11 networkx 1 10 networkx 1 10 networkx 1 9 1 networkx 1 9 networkx 1 8 1 networkx 1 8 networkx 1 7 older versions navigation next previous networkx home documentation download developer \\( github \\) copyright 2014 networkx developer team last updated may 01 2016 created using sphinx 1 4 1", 
    "crawled_date": "2017-06-10T13:59:47.728149"
  }, 
  "35": {
    "link1": "https://app.aerapay.com/?_escaped_fragment_=%2Fterms", 
    "api_url": "aerapay.com", 
    "progweb_url": "https://www.programmableweb.com/api/aerapay", 
    "progweb_date": "06.22.2010", 
    "progweb_descr": "The service enables payment from a user's mobile device directly to an application provider. When the user approves payment, the service accesses the credit balance stored on the device and transfers the approved amount directly to the application's designated account. It aims to streamline e-commerce and online payments without delays or costs due to intermediaries.  API methods support submission and retrieval of customer information, products available for purchase, promotional contacts to generate sales, invoicing, and payment for purchases. Methods also handle account management and messaging configuration.", 
    "api_name": "Aerapay", 
    "progweb_cat": "Payments,Mobile", 
    "descr1": "using outdated browser please upgrade browser improve experience 2016 aerapay rights reserved division aerapass limited", 
    "crawled_date": "2017-06-10T13:59:47.729390"
  }, 
  "34": {
    "api_url": "plastyc.com", 
    "progweb_url": "https://www.programmableweb.com/api/plastyc", 
    "progweb_date": "05.27.2010", 
    "progweb_descr": "The Plastyc API allows businesses to enroll people into prepaid cards from their website or phone systems. Plastyc provides payment and money management services to anyone with Internet access through a platform that issues and maintains the UPside Visa prepaid card line of prepaid debit cards. The API allows companies to sign up users for UPside Visa prepaid cards, and then let users check their balances, share money card to card or suspend lost cards from within the companies\u00ef\u00bf\u00bd own websites. The API uses SOAP architecture and responses are formatted in XML.", 
    "api_name": "Plastyc", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:47.730667"
  }, 
  "339": {
    "api_url": "worldpay.com", 
    "progweb_url": "https://www.programmableweb.com/api/securenet-payos-rest", 
    "progweb_date": "09.04.2016", 
    "progweb_descr": "This API enables the user to run transactions in a credit card present (CP) or credit card not present (CNP) environment using Worldpay.  Functionality includes customer management tools for managing payment accounts and the ability to enable recurring billing to automatically bill customers at specified intervals.  Worldpay is a partner in payments processing that helps businesses accept all payment types in-person, online and on-the-go.", 
    "api_name": "SecureNet PayOS REST", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:23.135590"
  }, 
  "338": {
    "api_url": "aibms.com", 
    "progweb_url": "https://www.programmableweb.com/api/aibms-authipay-virtual-terminal-soap", 
    "progweb_date": "09.04.2016", 
    "progweb_descr": "This SAOP API provides access to a central location where you can manage everything related to transaction processing with Authipay.  Run secure transactions yourself, set up your web site to run transactions for you, review transaction reports and more.  Languages available in English, Dutch, French, German, Italian and Portuguese. AIB Merchant Services is a provider of payment solutions, with operations in Ireland and Britain, and with card processing capabilities throughout continental Europe.", 
    "api_name": "AIBMS Authipay Virtual Terminal Soap", 
    "progweb_cat": "Payments,Authorization", 
    "crawled_date": "2017-06-10T13:59:23.136804"
  }, 
  "335": {
    "link1": "http://networkx.github.io/documentation.html", 
    "api_url": "github.io", 
    "link2": "http://grails.github.io/grails-static-website/documentation.html", 
    "progweb_url": "https://www.programmableweb.com/api/neteller", 
    "progweb_date": "08.29.2016", 
    "progweb_descr": "The NETELLER API supports the secure management and processing of online payments. The API\u2019s RESTful orientation facilitates the deployment of resource-based URIs, effectively affording developers to simple implementation. Developers can use the endpoint for its sandbox environment to test the APIs integration prior to switching to its endpoint for live production. The API\u2019s authentication and accessibility requires valid OAUTH2 token that must be supplied with each request. Its access token is obtainable from the NETELLER OAUTH2 endpoint. The proprietary API is a full release that is accompanies by sufficient documentation.", 
    "api_name": "NETELLER", 
    "progweb_cat": "Financial,eCommerce", 
    "descr2": "fork github socialize discuss mailing list discuss slack grails twitter events conferences source code github report issues github stack overflow questions using outdated browser please upgrade browser improve experience grails learnguidesdocumentationdownloadpluginscommunitysupport socialize documentationuser guideapi documentationdocumentation older versionsfaq improve doc documentationthe documentation available single page document feel free pick direct section also browse documentation older versions user guidedownloading grailsuser guideapi reference gormwebsitegorm hibernate user guideapi reference learning resourcesgrails guides focused tutorials samplesslack community discussionuser guide older versionsyou browse documentation previous versions grails since grails 1 2 0 select version3 3 0 m23 3 0 m13 2 93 2 83 2 73 2 63 2 53 2 43 2 33 2 23 2 103 2 13 2 0 rc23 2 0 rc13 2 0 m23 2 0 m13 2 03 1 93 1 83 1 73 1 63 1 53 1 43 1 33 1 23 1 163 1 153 1 143 1 133 1 123 1 113 1 103 1 13 1 0 rc23 1 0 rc13 1 0 m33 1 0 m23 1 03 0 93 0 83 0 73 0 63 0 53 0 43 0 33 0 23 0 173 0 163 0 153 0 143 0 133 0 123 0 113 0 103 0 13 0 02 5 62 5 52 5 42 5 32 5 22 5 12 5 02 4 52 4 42 4 32 4 22 4 12 4 02 3 92 3 82 3 72 3 62 3 52 3 42 3 32 3 22 3 112 3 102 3 12 3 02 2 52 2 42 2 32 2 22 2 12 2 02 1 52 1 42 1 32 1 22 1 12 1 02 0 42 0 32 0 22 0 12 0 01 3 91 3 81 3 71 3 61 3 51 3 41 3 31 3 21 3 11 3 01 2 51 2 41 2 31 2 21 2 11 2 0api older versionsyou browse api previous versions grails since grails 1 2 0 select version3 3 0 m23 3 0 m13 2 93 2 83 2 73 2 63 2 53 2 43 2 33 2 23 2 103 2 13 2 0 rc23 2 0 rc13 2 0 m23 2 0 m13 2 03 1 93 1 83 1 73 1 63 1 53 1 43 1 33 1 23 1 163 1 153 1 143 1 133 1 123 1 113 1 103 1 13 1 0 rc23 1 0 rc13 1 0 m33 1 0 m23 1 03 0 93 0 83 0 73 0 63 0 53 0 43 0 33 0 23 0 173 0 163 0 153 0 143 0 133 0 123 0 113 0 103 0 13 0 02 5 62 5 52 5 42 5 32 5 22 5 12 5 02 4 52 4 42 4 32 4 22 4 12 4 02 3 92 3 82 3 72 3 62 3 52 3 42 3 32 3 22 3 112 3 102 3 12 3 02 2 52 2 42 2 32 2 22 2 12 2 02 1 52 1 42 1 32 1 22 1 12 1 02 0 42 0 32 0 22 0 12 0 01 3 91 3 81 3 71 3 61 3 51 3 41 3 31 3 21 3 11 3 01 2 51 2 41 2 31 2 21 2 11 2 0 grails learnguidesdocumentationdownloadpluginscommunitysupport contributingsource codebuild statusbooksfaqsearch socialize discuss mailing listdiscuss slackgrails twitterevents conferencessource code githubreport issues githubstack overflow questions grails frameworkrepository hosted artifactorywebsite hosting provided pivotalyourkit supports grails java profiler 2005 2017 grails project grails open source apache 2 license", 
    "descr1": "networkx navigation next previous networkx home documentation download developer \\( github \\) versions latest release networkx 1 11 30 january 2016 downloads docs pdf development 2 0dev github docs pdf contact mailing list issue tracker documentation new networkx take look tutorial examples show simple complicated ways use networkx full documentation versions latest release development archived documentation documentation older versions avaiable following links networkx 1 11 networkx 1 10 networkx 1 10 networkx 1 9 1 networkx 1 9 networkx 1 8 1 networkx 1 8 networkx 1 7 older versions navigation next previous networkx home documentation download developer \\( github \\) copyright 2014 networkx developer team last updated may 01 2016 created using sphinx 1 4 1", 
    "crawled_date": "2017-06-10T13:59:23.140458"
  }, 
  "334": {
    "api_url": "cloud-elements.com", 
    "progweb_url": "https://www.programmableweb.com/api/cloud-elements-payments-hub", 
    "progweb_date": "08.24.2016", 
    "progweb_descr": "The Cloud Elements Payments Hub API provides developers with integrated access to leading cloud-based online payment and subscription billing services such as Chargebee, Stripe, Chargify, and Expensify. This allows developers to use uniform API calls to manage their customers, subscriptions, and transactions across multiple cloud payment services.", 
    "api_name": "Cloud Elements Payments Hub", 
    "progweb_cat": "Payments,Billing", 
    "crawled_date": "2017-06-10T13:59:23.141373"
  }, 
  "337": {
    "api_url": "aibms.com", 
    "progweb_url": "https://www.programmableweb.com/api/aibms-authipay-connect-soap", 
    "progweb_date": "09.04.2016", 
    "progweb_descr": "This API manages all of your interactions with credit card processors, financial institutions and alternative payment providers. Examples are available in ASP and PHP.  Connect works in PayOnly mode, collects a minimum set of information for the transaction. PayPlus Mode, the gateway also collects a full set of billing information and FullPay Mode, collects all available information including; billing, shipping and more. AIB Merchant Services is a provider of payment solutions, with operations in Ireland and Britain, and with card processing capabilities throughout continental Europe.", 
    "api_name": "AIBMS Authipay Connect Soap", 
    "progweb_cat": "Payments,Authorization", 
    "crawled_date": "2017-06-10T13:59:23.138310"
  }, 
  "336": {
    "api_url": "aibms.com", 
    "progweb_url": "https://www.programmableweb.com/api/aibms-authipay-web-service-soap", 
    "progweb_date": "08.30.2016", 
    "progweb_descr": "This SOAP API allows you to connect your application with the First Data Internet Payment Gateway. The AIB Authipay API offers you a way to accept online payments using 3D Secure, a payments industry authentication standard for internet/eCommerce purchases.  AIB Merchant Services is a provider of payment solutions, with operations in Ireland and Britain, and with card processing capabilities throughout continental Europe.", 
    "api_name": "AIBMS Authipay Web Service SOAP", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:23.139421"
  }, 
  "331": {
    "api_url": "globalcollect.com", 
    "progweb_url": "https://www.programmableweb.com/api/ingenico-client", 
    "progweb_date": "08.09.2016", 
    "progweb_descr": "The Ingenico Client API allows developers to integrate Ingenico ePayments hosted data into their mobile phones, browsers, and apps. These API calls require a session ID that can be created using the Ingenico Server API. Ingenico ePayments is an online payment processing and data analytics service that allows users to handle online payments as well as make sense of the data associated with them.", 
    "api_name": "Ingenico Client", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:26.365556"
  }, 
  "330": {
    "api_url": "globalcollect.com", 
    "progweb_url": "https://www.programmableweb.com/api/ingenico-server", 
    "progweb_date": "08.09.2016", 
    "progweb_descr": "The Ingenico Server API allows developers to access payments, payouts, products, product groups, refunds, risk assessments, and more from their own applications. Ingenico ePayments is an online payment processing and data analytics service that allows users to handle online payments as well as make sense of the data associated with them.", 
    "api_name": "Ingenico Server", 
    "progweb_cat": "Payments,Analytics", 
    "crawled_date": "2017-06-10T13:59:26.367936"
  }, 
  "333": {
    "api_url": "payplug.com", 
    "progweb_url": "https://www.programmableweb.com/api/payplug", 
    "progweb_date": "08.18.2016", 
    "progweb_descr": "The PayPlug API integrates payments into websites. It allows to notify customers about new refunds. Requests and responses are available in JSON format with API Key authentication.", 
    "api_name": "PayPlug", 
    "progweb_cat": "Payments,Integration", 
    "crawled_date": "2017-06-10T13:59:26.358793"
  }, 
  "332": {
    "api_url": "kycsitescan.com", 
    "progweb_url": "https://www.programmableweb.com/api/kyc-sitescan", 
    "progweb_date": "08.10.2016", 
    "progweb_descr": "KYC SiteScan allows developers to automate the Know Your Customer and Know Your Vendor data collection and reporting processes. The API offers customer enrollment, underwriting, and compliance automation methods. KYC SiteScan offers an intelligent crawl of a prospect's web presence that searches for prohibited and required content.  KYC SiteScan also gathers information from many government and consumer sources to help clients such as merchant processors, banks, and companies who need to perform due diligence on their customers an automated way to do so.  This API uses JSON for data exchange, and HTTP Basic Auth for authentication.", 
    "api_name": "KYC SiteScan", 
    "progweb_cat": "Compliance,Authentication", 
    "crawled_date": "2017-06-10T13:59:26.362530"
  }, 
  "345": {
    "api_url": "w3.org", 
    "progweb_url": "https://www.programmableweb.com/api/w3c-web-payments-http", 
    "progweb_date": "09.27.2016", 
    "progweb_descr": "The W3C Web Payments HTTP API allows developers to register payment applications, create payment requests, and reply with payment responses. It allows web applications to initiate payments for products or services by serving an HTTP 402 Payment Required response along with sufficient data to start and complete the payment flow.", 
    "api_name": "W3C Web Payments HTTP", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:23.129659"
  }, 
  "6": {
    "api_url": "pensio.com", 
    "progweb_url": "https://www.programmableweb.com/api/pensio", 
    "progweb_date": "06.29.2013", 
    "progweb_descr": "Pensio is a payment management company that offers technical processing and complete end to end reconciliation of payments across Europe, Asia and the US. The Pensio technical payment gateway solution allows for the continuous addition of alternative payment methods and mechanisms, as well as certification into additional financial institutions across the world, allowing business to respond quickly to client requirements. Pensio offers an API for developers. Full documentation is available by request.", 
    "api_name": "Pensio", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:33.720804"
  }, 
  "99": {
    "api_url": "plastiq.com", 
    "progweb_url": "https://www.programmableweb.com/api/plastiq", 
    "progweb_date": "03.02.2013", 
    "progweb_descr": "Plastiq is a credit card payment processing and service provider. Plastiq allows merchants to accept credit card payments for their goods and services.   The Plastiq API allows developers to access and integrate the functionality of Plastiq with other applications. Public documentation is not available; API access comes with account service.", 
    "api_name": "Plastiq", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:37.954191"
  }, 
  "98": {
    "api_url": "geniecashbox.com", 
    "progweb_url": "https://www.programmableweb.com/api/genie-cashbox", 
    "progweb_date": "02.18.2013", 
    "progweb_descr": "Genie Cashbox is a communication and payment processing service that plends products and services to facilitate business operations and member to member payments. The Genie Cashbox API allows users to GET and POST transaction and payment information. The service uses REST calls and uses SSL for authentication. An account is required with service.", 
    "api_name": "Genie CashBox", 
    "progweb_cat": "Payments,Social", 
    "crawled_date": "2017-06-10T13:59:37.955264"
  }, 
  "91": {
    "api_url": "tinypass.com", 
    "progweb_url": "https://www.programmableweb.com/api/tinypass", 
    "progweb_date": "02.01.2013", 
    "progweb_descr": "Tinypass is an e-commerce platform. Tinypass allows website and application owners to integrate e-commerce services with their applications and websites to charge for content and services.  The Tinypass API allows developers to access and integrate the functionality of Tinypass with other applications and websites. Some example API methods include searching for subscriptions, managing subscriptions, and managing user accounts.", 
    "api_name": "Tinypass", 
    "progweb_cat": "eCommerce,Payments", 
    "crawled_date": "2017-06-10T13:59:37.962043"
  }, 
  "90": {
    "api_url": "walletkit.com", 
    "progweb_url": "https://www.programmableweb.com/api/walletkit", 
    "progweb_date": "01.29.2013", 
    "progweb_descr": "WalletKit is a service to create passes, tickets, coupons, and more for mobile wallets, such as PassBook. Developers can create passes and tickets for Apple's PassBook and other mobile wallets.  The WalletKit API allows developers to integrate the functionality of WalletKit with other applications and to create new applications. Some example API methods include creating and managing passes, retrieving pass templates, and posting passes.", 
    "api_name": "WalletKit", 
    "progweb_cat": "Payments,Coupons", 
    "crawled_date": "2017-06-10T13:59:37.962996"
  }, 
  "93": {
    "api_url": "billingorchard.com", 
    "progweb_url": "https://www.programmableweb.com/api/billingorchard", 
    "progweb_date": "02.06.2013", 
    "progweb_descr": "BillingOrchard is an online billing system. BillingOrchard offers automated billing, online invoicing and online payments, reporting, and integrations with other systems.  The BillingOrchard API allows developers to access and integrate the functionality of BillingOrchard with other applications. Some example API methods include managing functions, managing account information, and checking out methods.", 
    "api_name": "BillingOrchard", 
    "progweb_cat": "Payments,Billing", 
    "crawled_date": "2017-06-10T13:59:37.960085"
  }, 
  "92": {
    "api_url": "mpay24.com", 
    "progweb_url": "https://www.programmableweb.com/api/mpay24", 
    "progweb_date": "02.04.2013", 
    "progweb_descr": "mPAY24 is an online payment platform that combines many frequently-used and innovative payment systems within one interface. Available payment methods include credit and debit cards, national and international online banking payments, direct debit, prepaid systems, mpass, paybox, PayPal, and others.  mPAY24 also provides an intelligent transaction management and reporting tool that simplifies the validation, recording, and administration of all transactions processed through mPAY24. The entire system is easily integrated into most online shops and e-commerce systems using the mPAY24 SOAP API.  The mPAY24 website and documentation are provided in English, German, Hungarian, and Slovak.", 
    "api_name": "mPAY24", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:37.961065"
  }, 
  "95": {
    "api_url": "betalingsterminal.no", 
    "progweb_url": "https://www.programmableweb.com/api/netaxept", 
    "progweb_date": "02.12.2013", 
    "progweb_descr": "The service provides payment management for e-commerce and other merchants in Norway. The provider offers both hosted white-label checkout pages and full integration via a RESTful API. Payment processing can resolve through either the Visa or MasterCard networks.  API methods support the full payment process to complete financial transactions, beginning with authentication and submission of order number, product, and balance owed. Methods support pre-authorizing payment, user confirmation, transaction completion and funds capture. Options also include nullifying a pending transaction, crediting a refund for a cancelled sale, and inquiring about status of a pending payment.", 
    "api_name": "Netaxept", 
    "progweb_cat": "Payments,Nordic", 
    "crawled_date": "2017-06-10T13:59:37.958204"
  }, 
  "94": {
    "api_url": "goemerchant.com", 
    "progweb_url": "https://www.programmableweb.com/api/goemerchant", 
    "progweb_date": "02.12.2013", 
    "progweb_descr": "The service provides online payment processing for e-commerce vendors and integration with other applications. It aims to ensure PCI compliance with options for transparent redirects, white-label hosted checkout functions, or API integration. Payment options include credit and debit cards as well as automated clearinhouse (ACH) transfers.  API methods support submission of transaction information for payment, including vendor, product information, balanced owed, and credit card or other payment account information. Methods support pre-authorization of payment amount and final confirmation of funds transfer. The API also allows for scheduled recurring billing for subscriptions and other time-based payments.", 
    "api_name": "goEmerchant", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:37.959168"
  }, 
  "97": {
    "api_url": "yandex.com", 
    "progweb_url": "https://www.programmableweb.com/api/yandex-money", 
    "progweb_date": "02.18.2013", 
    "progweb_descr": "Yandex is a major Russia-based internet company and search engine with the stated mission of answering any question internet users may have. In 2012 Yandex handled the majority of all search traffic in Russia. \r Yandex.Money is an online payment system allowing merchants and customers to sell and purchase goods and services. The Yandex.Money API provides a developer interface for automating manipulation of Yandex.Money accounts. Exposed resources include payment, payment history analysis, and transaction history synchronization.", 
    "api_name": "Yandex Money", 
    "progweb_cat": "Payments,Russian", 
    "crawled_date": "2017-06-10T13:59:37.956309"
  }, 
  "96": {
    "api_url": "creditagricolestore.fr", 
    "progweb_url": "https://www.programmableweb.com/api/credit-agricole", 
    "progweb_date": "02.13.2013", 
    "progweb_descr": "The service provides financial functions and account management for applications used by customers to interact with the French bank. Functionality helps developers to register with the provider's CAS Store repository to display applications for smartphones and allow users to install them on their own devices. The service allows developers to implement credit card account management and other banking functions.  API methods support registration of new applications with the repository and update those listings over time. Methods support interactions with a user's credit card account and updates to bank account access credentials. The API implements its own geolocation service based on the city, street address, or longitude/latitude coordinates.", 
    "api_name": "Credit-Agricole", 
    "progweb_cat": "Financial,Payments", 
    "crawled_date": "2017-06-10T13:59:37.957248"
  }, 
  "238": {
    "api_url": "promisepay.com", 
    "progweb_url": "https://www.programmableweb.com/api/promisepay", 
    "progweb_date": "06.24.2015", 
    "progweb_descr": "The PromisePay REST API allows developers to access and integrate the functionality of PromisePay with other applications. Public documentation is not available; API access comes with account service. PromisePay is a digital payment platform for marketplaces.", 
    "api_name": "PromisePay", 
    "progweb_cat": "Payments,Marketplace", 
    "crawled_date": "2017-06-10T13:59:26.468529"
  }, 
  "239": {
    "api_url": "snapcard.io", 
    "progweb_url": "https://www.programmableweb.com/api/snapcard", 
    "progweb_date": "06.25.2015", 
    "progweb_descr": "SnapCard allows to abuy bitcoin with a bank account and access SnapCard to use digtal currencies. The SnapCard API allows developers to retrieve their merchant account info, retrieve exchange rates, retrieve payouts, and create, retrieve, cancel, & list invoices. SnapCard is a Bitcoin wallet that offers MassPay for sending money anywhere in the world.", 
    "api_name": "SnapCard", 
    "progweb_cat": "Cryptocurrency,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:26.466958"
  }, 
  "234": {
    "api_url": "veritrans.co.id", 
    "progweb_url": "https://www.programmableweb.com/api/veritrans", 
    "progweb_date": "02.20.2014", 
    "progweb_descr": "Veritrans is an online payment gateway for Indonesian markets. The service aims to provide services for credit cards, ClickPay Mandiri, CIMB Clicks, BRI e-Pay, Cash XL, Telkomsel T-Cash, and other payment options. The Veritran VT-Web API allows users to accept payment  and because the whole payment process is handled by Veritrans, Veritrans can take care of most of the information security compliance requirements from the bank (Veritrans is certified as a PCI-DSS Level 1 Service Provider). The API uses REST calls and returns JSON. Users can use the API to get requests that consist of payment status information. With this information, merchant server can update the transaction status in the merchant database", 
    "api_name": "Veritrans", 
    "progweb_cat": "Payments,Messaging", 
    "crawled_date": "2017-06-10T13:59:33.605860"
  }, 
  "235": {
    "api_url": "motleybunch.com", 
    "progweb_url": "https://www.programmableweb.com/api/motleybunch", 
    "progweb_date": "02.27.2014", 
    "progweb_descr": "MotleyBunch helps partners who have access to email inboxes to extract structured information out of them. MotleyBunch allows users to access all purchases into one place, track all shipping data, get insights into purchases, and share purchases with friends. Partners can extract information relating to purchases made by their users using the MotleyBunch API and integrate it into their own product. Using this API partners can extract receipts related to product purchases, travel, hotels, airlines, services etc. from the emails. Please email dhiraj.bansal@motleybunch.com for API access.", 
    "api_name": "MotleyBunch", 
    "progweb_cat": "eCommerce,Payments", 
    "crawled_date": "2017-06-10T13:59:33.602073"
  }, 
  "236": {
    "api_url": "bindo.com", 
    "progweb_url": "https://www.programmableweb.com/api/bindo", 
    "progweb_date": "06.05.2015", 
    "progweb_descr": "The Bindo API allows developers to integrate access to their stores, products, and payments into 3rd-party applications. Bindo is an e-commerce platform that provides users with real-time store data, 24/7 payment gateway access, and order tracking services. The API documentation is not public, but is available upon request.", 
    "api_name": "Bindo", 
    "progweb_cat": "eCommerce,Marketplace", 
    "crawled_date": "2017-06-10T13:59:26.470981"
  }, 
  "237": {
    "api_url": "lavu.com", 
    "progweb_url": "https://www.programmableweb.com/api/lavu", 
    "progweb_date": "06.15.2015", 
    "progweb_descr": "The Lavu REST API allows developers to access and integrate the functionality of Lavu with other applications. Public documentation is not available; API access comes with account service. Lavu is a point-of-sale platform specifically for restaurants and use on iPads.", 
    "api_name": "Lavu", 
    "progweb_cat": "Restaurants,Payments", 
    "crawled_date": "2017-06-10T13:59:26.469769"
  }, 
  "230": {
    "api_url": "northpole.ro", 
    "progweb_url": "https://www.programmableweb.com/api/coinmarket", 
    "progweb_date": "02.12.2014", 
    "progweb_descr": "coinmarketcap.northpole.ro is a crypto-currency data service that scrapes data from coinmarketcap.com. The API makes the data on the listed crypto-currencies available in a JSON format, accessible via REST calls. The API is free to use, and no account is required with service. Users can integrate the data into third-party applications that utilize crypto-currency data.", 
    "api_name": "CoinMarket", 
    "progweb_cat": "Financial,Payments", 
    "crawled_date": "2017-06-10T13:59:33.615289"
  }, 
  "231": {
    "api_url": "quickycoin.com", 
    "progweb_url": "https://www.programmableweb.com/api/quickycoin", 
    "progweb_date": "02.17.2014", 
    "progweb_descr": "QuickyCoin enables businesses to accept bitcoin, litecoin and other crypto-currencies as payment. The QuickyCoin API solution is tailored to a user's business enabling bitcoin, litecoin and other crypto-currencies users to actually make payments. The solution immediately enables businesses to receive litecoin payments and is scalable to include other crypto-currencies upon demand. An account is required with service.", 
    "api_name": "QuickyCoin", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:33.613383"
  }, 
  "232": {
    "api_url": "listselltrade.co.nz", 
    "progweb_url": "https://www.programmableweb.com/api/listselltrade", 
    "progweb_date": "02.17.2014", 
    "progweb_descr": "ListSellTrade is a merchant site that allows users to access online auctions, fixed price listings, business sale listings, classified advertising, recruitment, as well as to promote a users business. The ListSellTrade API allows users to automatically list entire product ranges and update it every 24 hours. An account and an API Key are required with service.", 
    "api_name": "ListSellTrade", 
    "progweb_cat": "eCommerce,Classifieds", 
    "crawled_date": "2017-06-10T13:59:33.611177"
  }, 
  "233": {
    "api_url": "tradevine.com", 
    "progweb_url": "https://www.programmableweb.com/api/tradevine", 
    "progweb_date": "02.17.2014", 
    "progweb_descr": "TradeVine is an ecommerce solutions service that facilitates TradeMe listing and interactions. TradeVine allows users to get notifications when listings change, create a unique ecommerce store, integrate with Xero, streamline purchases, and evaluate inventory, among other features. The TradeVine API allows users to use REST calls to retrieve data from the TradeMe platform. The API returns  JSON, uses SSL and OAuth for authentication, and an account is required with service.", 
    "api_name": "TradeVine", 
    "progweb_cat": "eCommerce,Merchants", 
    "crawled_date": "2017-06-10T13:59:33.608832"
  }, 
  "1": {
    "link5": "https://doc.gopay.com/cs/", 
    "link4": "https://www.gopay.com/en/integration.html", 
    "link1": "https://gopay.com/en/", 
    "api_url": "gopay.com", 
    "link3": "https://doc.gopay.com/en/", 
    "link2": "https://help.gopay.com/en/topic/integration-of-payment-gateway/integration-of-payment-gateway-1/integration-requirements-for-e-shop-platforms", 
    "progweb_url": "https://www.programmableweb.com/api/gopay", 
    "progweb_date": "04.21.2017", 
    "progweb_descr": "The GoPay REST API integrates payments into applications. It uses JSON formats and OAuth 2 authentication. With the API Available in English, Slovak, and Czech languages, developers can include payments in customized gateways.", 
    "api_name": "GoPay", 
    "progweb_cat": "Payments,Customer Service", 
    "descr5": "menu curl php python ios java android net www gopay cz www platebnibrana cz help gopay com dokumentace gopay rest api api endpoint testovac prost ed https gw sandbox gopay com api provozn prost ed https gate gopay cz api dostupn metody oauth2 token payments payment payments payment id payments payment id refund payments payment id create recurrence payments payment id void recurrence payments payment id void authorization payments payment id capture php sdk https github com gopaycommunity gopay php api po adavky instalace python sdk https github com gopaycommunity gopay python api po adavky instalace ios sdk https github com gopaycommunity gopay ios api po adavky instalace java sdk https github com gopaycommunity gopay java api po adavky instalace http mvnrepository com artifact cz gopay android api https github com gopaycommunity gopay android api po adavky instalace net api https github com gopaycommunity gopay dotnet api po adavky gopay rest api je dostupn v testovac prost ed na adrese provozn api se nach z na adrese pro kerou p choz odchoz komunikaci api je pou ito k dov n utf 8 detailn popis jednotliv ch krok nutn ch pro proveden standardn integrace naleznete v centru n pov dy oauth gopay rest api pou v pro autorizaci p stupu k api principu oauth2 0 konkr tn metodu klientsk autentizace viz http tools ietf org html rfc6749 section 4 4 p stupov token z kladn prvkem ker komunikace p es rest api je p stupov token kter je vytvo en na z klad p ed van ch p stupov ch daj form token je p ed v n jako autoriza n parametr v hlavi ce http dotazu prost ednictv z skan p stupov token je p ed v n pro ka dal po adavek na api ivotnost tokenu je v dy omezena na 30 minut po jeho vypr en je nutn vytvo nov p stupov token pokud je nem te client id client secret kontaktujte n na integrace gopay cz request request hlavi ka po adavku lo po adavku response response p stupov token pro scope payment create je ur en v hradn k zalo en platby dal funkcionality jako nap dotaz na stav refundace platby mus b doprov zeny tokenem kter je ur en pro obsluhov n operac platbami \\( scope payment \\) zalo en platby p ed vyvol n platebn br ny je nutn prov st zalo en platby v sledku vol n v zopakujeme parametry platby spolu parametrem kter pou ijete pro inicializaci inline nebo redirect platebn br ny p jemce platby je identifikov n v objektu target z sk te jej p integraci platebn br ny pro identifikaci konkr tn ho prodejn ho sta nap www goshop cz pokud je nem te goid kontaktujte n na integrace gopay cz plat c strana je v r mci platby pops na objektem payer kter identifikuje plat c ho p padn ur uje mno inu povolen ch platebn ch metod v etn metody defaultn standardn platba platba je ur ena pro hradu objedn vky platebn kartou bankovn p evodem gopay tem jin mi platebn mi metodami podrobn popis krok nutn ch pro proveden standardn platby naleznete v centru n pov dy request request hlavi ka po adavku lo po adavku response response pro vytvo en platby je nutn pou p stupov token vytvo en scope payment create nebo payment p edautorizovan platba p edautorizace umo n p platb kartou zablokovat po dobu 4 dn prost edky na tu z kazn ka blokovan prost edky lze n sledn strnout pomoc api vol n str en p edautorizovan platby p edautorizovanou platbu zalo te nastaven parametru na podrobn popis krok nutn ch k proveden p edautorizovan platby naleznete v centru n pov dy request request hlavi ka po adavku lo po adavku response response opakovan platba opakovan platba je funkcionalita kter umo uje p ij mat platby kartou od z kazn ka na pravideln b zi zalo en opakovan platby je roz eno parametr po sp n zalo en inicializa n platby jsou platby prov ny automatizovan nap denn periodou nebo na vy n podrobn popis krok nutn ch k proveden opakovan platby naleznete v centru n pov dy v p pad platby na vy n je n sledn platba provedena api vol n opakov n platby request request hlavi ka po adavku lo po adavku response response vyvol n platebn br ny pro vyvol n platebn br ny je mo n pou html formul kter pomoc javascriptu provede inicializaci platebn br ny inline varianta formul pro vyvol n inline platebn br ny inline platebn br na je vyvol na p mo nad port lem obchodn ka nedoch z tedy k p esm rov n url \\( action \\) formul e nastavte dle z vytvo en platby podrobn popis v ech krok nutn ch k vyvol n platebn br ny naleznete v na em centru n pov dy redirect varianta formul pro p esm rov n na redirect platebn br nu platebn br nu lze provozovat variant p esm rov n lze pou formul viz n e nebo prov st p esm rov n na url p edan p vytvo en platby dal platebn operace stav platby funkcionalita stav platby umo n prodejn mu stu zjistit jak je aktu ln stav vytvo en platby standardn je stav platby dotazov n po doru en notifikace zm n stavu platby podrobn j informace k dotazu na stav platby naleznete v na em centru n pov dy request request hlavi ka po adavku response response refundace platby \\( storno \\) refundace platby umo uje navr cen finan n ch prost edk za ji provedenou platbu zp z kazn kovi refundace lze prov dv zp soby pln refundace platby umo uje na z klad parametru vr cen cel stky zat mco ste n refundace specifikuje stku pro vr cen dopl uj c informace k refundaci plateb naleznete v na em centru n pov dy request request hlavi ka po adavku lo po adavku response response opakov n platby \\( na vy n \\) pomoc po adavku je mo n opakovat platbu na z klad zalo en opakovan platby v imu opakov n v tomto imu je zalo ena n sledn platba v libovoln stce proveden platby je prodejn sto informov formou notifikace zm n stavu platby podrobn informace k prov n opakovan ch plateb naleznete v na em centru n pov dy request request hlavi ka po adavku lo po adavku response response zru en opakov n platby umo uje zru opakov n vytvo en platby u ivatel stejnou mo nost v p ihl en gopay tu podrobn informace k prov n opakovan ch plateb naleznete v na em centru n pov dy request request hlavi ka po adavku response response zru en p edautorizace platby provede zru en p edautorizaci vytvo en platby podrobn informace k p edautorizovan platb naleznete v centru n pov dy request request hlavi ka po adavku response response str en p edautorizovan platby pomoc vol n je mo n strhnout p edautorizaci finan n ch prost edk vytvo en p edautorizovan platby podrobn informace k p edautorizovan platb naleznete v centru n pov dy request request hlavi ka po adavku response response z sk n seznamu povolen ch platebn ch metod metoda vrarc strukturu v ech povolen ch platebn ch metod na eshopov profilu v url po adavku je nutn p edat goid dotazovan ho eshopu k ny request request hlavi ka po adavku response response generov n v pisu obchodn ho tu funkcionalita umo uje generovat v pisy z gopay obchodn ho tu pro konkr tn e shop nu metoda vrac obsah souboru pou ho form tu v pisu podrobn popis jednotliv ch typ soubor generovan ch v pis naleznete v centru n pov dy request request hlavi ka po adavku lo po adavku response odpov typu application octet stream elektronick evidence tr eb \\( eet \\) pokud vyu v te variantu b pro funkcionalitu elektronick evidence tr eb \\( eet \\) viz popis varianty uveden v centru n pov dy skrze platebn br nu gopay je pro spr vnou funkcionalitu nutn na platebn br nu odes lat specifick po adavky pracuj c eet parametry popisovan n e pokud v gopay obchodn tu nastav te eet variantu b neprovedete zm nu integrace \\( viz specifick po adavky n e \\) nebude mo n od data aktivace \\( v nastaven provozovny \\) vytv et platby standardn platba po adavek zalo en platby vych z ze standardn ho po adavku kter je roz en objekt eet request request hlavi ka po adavku lo po adavku response response pro vytvo en platby je nutn pou p stupov token vytvo en scope payment create nebo payment opakovan platba po adavek zalo en opakovan platby vych z ze standardn ho po adavku kter je roz ren objekt eet podrobn popis krok nutn ch k proveden opakovan platby naleznete v centru n pov dy v p pad platby na vy n je n sledn platba provedena api vol n opakov n platby request request hlavi ka po adavku lo po adavku response response opakov n platby na vy n pomoc po adavku je mo n opakovat platbu na z klad zalo en opakovan platby v imu opakov n v tomto imu je zalo ena n sledn platba v libovoln stce proveden platby je prodejn sto informov formou notifikace zm n stavu platby podrobn informace k prov n opakovan ch plateb naleznete v na em centru n pov dy vol n se od standardn ho po adavku li objektem eet request request hlavi ka po adavku lo po adavku response response stav platby funkcionalita stav platby umo n prodejn mu stu zjistit jak je aktu ln stav vytvo en platby standardn je stav platby dotazov n po doru en notifikace zm n stavu platby podrobn j informace k dotazu na stav platby naleznete v na em centru n pov dy pro pot eby eet obsahuje odpov po adavku dotazu na stav platby objekt eet code obsahem objektu eet code jsou daje fisk ln identifika n k \\( fik \\) bezpe nostn k poplatn ka \\( bkp \\) podpisov k poplatn ka \\( pkp \\) request request hlavi ka po adavku response response refundace platby \\( storno \\) refundace platby umo uje navr cen finan n ch prost edk za ji provedenou platbu zp z kazn kovi po adavek proveden refundu pro elektronickou evidenci tr et \\( eet \\) se od standardn ho po adavku li hodnotou parametru content type v hlavi ce po adavku v l po adavku je nutn p edat objekt items objekt eet request request hlavi ka po adavku lo po adavku response response eet tenky platby funkcionalita vr seznam tenek pro danou platbu vrac tenku kter se vytvo ila p uhrazen platby p padn tenku vytvo enou p proveden refundace platby request request hlavi ka po adavku response response list eet tenek funkcionalita vr seznam v ech tenek za dan obdob pro konkr tn provozovnu maxim ln rozsah datum je 30 dn request request hlavi ka po adavku lo po adavku response response roz en mo nosti supercash roz en mo nosti platebn metody supercash umo uj vytvo hromadn skupinu \\( batch \\) kup n pro z sk n platebn ch daj v etn rov ch k z kazn k tak nep ich z styku platebn br nou gopay pot ebn daje pro platbu offline platebn metodou supercash je mo n z kazn kovi zobrazit p edem nap na fakturu za objedn vku na e shopu vytvo en supercash batche vol n vytvo skupinu \\( batch \\) supercash kup n po vytvo en v ech kupon bude zavol na url uveden v parametru batch completed notification url parametry kup n definuje objekt defaults p padn pole kup n v objektu coupons request request hlavi ka po adavku lo po adavku response response vytvo en supercash kup nu vol n vytvo supercash kup n po vytvo en kup nu bude zavol na url uveden v parametru notification url request request hlavi ka po adavku lo po adavku response response stav vytvo en batche umo uje zjistit stav vytv en ho supercash batche request request hlavi ka po adavku response response detaily supercash kup n batche funkcionalita vypisuje detaily supercash kup n dan ho batche uveden ho jako get parametr v url po adavku request request hlavi ka po adavku response response detaily supercash kup n platby funkcionalita vypisuje detaily supercash kup n pro konkr tn id platby uveden jako get parametr v url po adavku v ce id plateb je v url po adavku odd leno rkou request request hlavi ka po adavku response response detaily supercash kup nu funkcionalita vypisuje detaily konkr tn ho supercash kup nu request request hlavi ka po adavku response response objekty popis jednotliv ch objekt pou ch p komunikaci platebn br nou payer definice pl tce platby bank account daje bankovn tu pl tce payment card daje pou platebn kart contact z kaznick informace target identifikace p jemce platby items jednotliv polo ky objedn vky eet parametry pro elektronickou evidenci tr eb \\( eet \\) eet code eet k dy tenky callback definice n vratov notifika n url additional params dodate n parametry platby recurrence nastaven opakovan platby opakov n ka sedm den opakov n ka et den opakov n ka druh c groups n zev ka skupiny odpov k skupin group codes n zvy skupin platebn ch metod enabledpaymentinstruments n zev ka ho objektu odpov k platebn ch metod enabledswifts n zev ka ho objektu odpov swift k bank defaults v choz hodnoty supercash kup n coupons specifick hodnoty supercash kup n seln ky recurrence cycle cyklus opakovan platby currency na platby scope parametr popisuj c mno inu z skan ch pr v result v sledek operace stavy plateb platba e nab vat n sleduj c ch stav podstav plateb platba e nab vat n sleduj c ch podstav lang nastaven jazyka platebn br ny payment instrument k dy platebn ch metod swift k dy jednotliv ch bank format form souboru generovan ho v pisu type typ polo ky vat rate sazba dan pro pot eby eet state popis stavu eet tenky eet mode varianta eet viz popis variant stav supercash batche stav dokon en skupiny \\( batche \\) supercash kup n sub type typ supercash kup nu chyby http result k dy n vratov chyby p klad chybov odpov di field specific p klad chybov odpov di global detail chyby je pops n v body odpov di jako application json data n sleduj c struktury errors seln k chyb global authentication authorization payment curl php python ios java android net", 
    "descr4": "menusign ingopay business accountaccepting payments via gatewaygopay personal accountfor purchases transferssign upsign upsign ingopay business accountaccepting payments via gatewaygopay personal accountfor purchases transfershomefeaturespayment methodssupported businessesgateway typesgateway benefitspricingintegration securitycontactsimple integration robust apioauth restful api simple unified api options payment gateway online documentationhow integration works1immediatestartyou start programming even signing contract api documentation integration manual online 2testmodeafter mutual agreement prices provide login details sandbox test entire payment process 3integrationcheck upafter integration completed check payments url notifications sent correctly 4liveprocessingif everything works well switch live processing implementation made easyprumerna platba icononline documentationclear robus api options payment gateway datov zdroj 1githubpublicly available repositories gopay api php dotnet java android ios python gopay github cls 1 fill none stroke ea3c54 stroke linecap round stroke linejoin round cls 2 fill ea3c54 eeteet readydocumentation gopay 's link eet odvetvi iconcertified e shop suppliersthe gateway connected wide range eshop suppliers already solved integration become certified supplier integration faqsintegration manual gopay payment gatewaysandbox testing paymentshow integrate gopay payment gatewaytechnical description recurring paymentsgopay banners merchant websitestechnical description pre authorizationsbusinesspricefeaturesterms conditions gopay statushelp centredocumentationpersonalgopay personal accountcompanyaboutmediajobsblogcontactcontact 420 840 818 918 gopay gopay comin compliance withpci dss level 1 eskyslovenskyenglishpolskimagyar 2017 gopay r", 
    "descr3": "menu curl php python ios java android net www gopay cz www platebnibrana cz help gopay com gopay rest api documentation api endpoints test enviroment https gw sandbox gopay com api production enviroment https gate gopay cz api available methods oauth2 token payments payment payments payment id payments payment id refund payments payment id create recurrence payments payment id void recurrence payments payment id void authorization payments payment id capture php sdk https github com gopaycommunity gopay php api requirements installation python sdk https github com gopaycommunity gopay python api requirements installation ios sdk https github com gopaycommunity gopay ios api requirements installation java sdk https github com gopaycommunity gopay java api requirements installation http mvnrepository com artifact cz gopay android api https github com gopaycommunity gopay android api requirements installation net api https github com gopaycommunity gopay dotnet api requirements gopay rest api avaliable test mode production enviroment located comunication api encoded utf 8 find integration details help center oauth gopay uses rest api authorization access api principal oauth2 0 specific method client authentication see http tools ietf org html rfc6749 section 4 4 access token basic element communication via rest api access token created using access data form token set authorization parameter http request header token set every requirement api token expires 30 minutes expiry token necessary create new access token client id client secret please contact us e mail integrace gopay cz request request header request body request response response access token scope payment create intended exclusively establish payment functions query status payment refund payment must accompanied token intended servicing operations connected payments \\( scope payment \\) establishment payment initiating payment gateway necessary establish payment effect calling repeat parameters payment including parameter initiate inline redirect payment gateway payee payment identified object target get integrate payment gateway identification specific point sale e g www goshop cz goid contact us e mail integrace gopay cz within payment paying party described object payer identifies payer determines set permitted payment method including default method standard payment payment determined paying order credit card bank transfer gopay account payment methods information steps needed make base payment check help center request request header request body request response response creating payment need use token created scope payment create payment pre authorized payment via credit card block payment 4 days using pre authorization blocked funds received api calling transaction completed via pre autorized payment pre authorized payment created setting parameter additional information pre authorized payments find help center request request header request body request response response recurring payment recurring payment functionality allows accepting payment via credit cards customer regular basis establishment payment extended recurrence parameter successful establishment initiation payment payments made automatically e g daily basis demand another information recurring payments find help center case demand payment subsequent payment made api calling recurrence payment request request header request body request response response initiation payment gateway initiate payment gateway possible use html form using javascript initiates payment gateway inline option form initiate inline payment gateway inline payment gateway initiated directly point sale redirection url \\( action \\) form set according creation payment information steps needed make base payment check help center redirect option form redirect redirect payment gateway payment gateway also operated option redirection use form redirect url obtained creation payment payment operations status payment payment status funcionality allows point sale determine whether payment successfully paid default payment status queried receiving notification payment status change information payment state find help center request request header request response response refund payment \\( cancelation \\) refund payment functionality allows recovering funds already made payment customer refund done two ways fully refundable payment refunded based parameter full amount payment hand partially refundable payment specified amount refund find additional information refundations help center request request header request body request response response recurring payment demand functionality allows recur payment based previously established recurring payment mode recurring mode establishes subsequent payment point sale informed notification change payment status information reccuring payments find help center request request header request body request response response cancellation recurring payment functionality allows cancel recurrence previously created payment created payment user opportunity logged gopay account information recurring payments find help center request request header request response response cancellation pre authorized payment functionality allows cancel previously created pre authorized payment created payment information pre authorized payments find help center request request header request response response charge pre authorized payment functionality enables charging pre authorized funds previously created pre authorized payment additional information pre authorized payments find help center request request header request response response list avaliable payment methods retruns structure avaliable payment methods eshop profile goid eshop code currency must passed url request request header request response response generating account statement funcionality generates statements gopay business account specific e shop currency returns content account statement file information file types specification find help center request request hheader request body request response response type application octet stream registration sales standard payment request request header request body request response response creating payment need use token created scope payment create payment recurring payment request request header request body request response response recurring payment demand request request header request body request response response status payment request request header request response response refund payment \\( cancelation \\) request request header request body request response response eet payment receipts request request header request response response list eet receipts request request header request body request response response advanced features supercash advanced features supercash payment method allow create group \\( batch \\) coupons getting payment information including barcodes customer therefore operate gopay payment gateway display important information offline payment via supercash payment method example customer invoice order creation supercash batch function create group \\( batch \\) supercash coupons creation complete notification url specified batch completed notification url parameter called default parameters coupons specified defaults object specific parameters coupons object request request header request body request response response creation supercash coupon function create single supercash coupon creation complete notification url specified notification url called request request header request body request response response status batch funcionality allows determine status supercash batch request request header request response response details supercash coupons batch function lists details supercash coupons batch id batch specified get parameter request url request request header request response response details supercash coupons payment function lists details supercash coupons payment id payment specified get parameter request url payments separated comma separator request request header request response response details supercash coupon function lists details supercash coupons request request header request response response objects description object used within communication payment gateway payer definition payer payment bank account bank account information payment card payment card information contact customer information target identification payee items item order eet parameters registration sales eetcode information registration sales callback definition callback notification url additional params additional parameters payment recurrence setting recurring payment recurring seventh day recurring third day recurring second month groups name every group corresponds group codes group codes names payment method groups enabledpaymentinstruments name every object coresponds payment method codes enabledswifts name object coresponds swift codes defaults default values supercash coupons coupons specific values supercash coupons code lists recurrence cycle cycle recurring payment currency payment currency scope parameter describing group acquired rights result result operation payment status payment gain values following status payment substate payment gain values following substates lang setting language payment gateway payment instrument payment method codes swift bank swift codes format format account statement file type type row registration sales vat rate vat rate registration sales state eet mode state supercash batch sub type type supercash coupon errors http result codes return errors example error response field specific example error response global detail error described body response application json datas next structure errors list errors global authentication authorization payment curl php python ios java android net", 
    "descr2": "help center gopay gopay gopay account security payment gateway terms conditions integration payment gateway help center gopay gopay home folder content gopay account security payment gateway terms conditions integration payment gateway integration payment gateway folder content integration payment gateway refunds recurring payments integrate payment gateway \\? gopay banners essential guide integration integration payment gateway folder content scheme payment process state payment technical description recurring payment technical description pre authorized payment technical description refund function steps integration new gopay payment gateway implementing new design payment gateway pre authorized payments integration requirements e shop platforms testing payments sandbox integration requirements e shop platforms integration payment gateway integration requirements e shop platforms article find list requirements integrating gopay payment gateway e shop platforms individual requirements based gopay long term experiences integrations e shop solutions aim ensure optimal layout functioning gopay payment gateway end users achieve maximum conversion rate entire ordering process gopay tip want become certified e shop platform \\? integrate gopay according listed requirements let integration evaluated obtain certificate technical requirementsintegrate date version gopay payment gateway want make payment always submit items basket \\( see documentation \\) including quantity description final price url item ean item category known provide information well check payment status redirection customer back point sale also every time receive http notification according following article displaying available payment methods order use function get list allowed payment methods returns list currently accepted payment methods particular goid see documentation please ensure feature used one payment avoid excessive load payment system displaying payment gateway redirection back e shop occurs \\( e g case closing inline gateway via cross close \\) display final page order depending payment status selected payment method consider following situations page payment successful payment unsuccessful page gateway page non deleted basket created order sent e mail unpaid payment paid selected payment via bank transfer awaiting payment enable solution run secure pages solution running https possible open inline option payment gateway know customer e mail address telephone number pass information payment object payer parameter contact details see documentation make sure payment gateway displayed customers language language order requirements present payment methods orderwhen setting payment options e shop present possible payment methods separately example present card payments bank transfers separately one option recommendation apply online bank transfers present online bank transfers one aggregated option customer select specific bank gopay payment gateway selecting payment method order direct customer payment gateway page corresponds chosen payment method example customer chooses card payment order direct straight payment gateway page pay card details see example analogously follow principle payment methods use official logos present available payment methods order logos payment methods supported gopay downloaded logos official names payment methods also available gopay rest api requirements present payment methods administrationsurcharging forbidden please observe policy allow fees set administration use exact names test operation data e goid clientid clientsecret display date payment status orders make sure statuses displayed customers redirecting return url e shop see documentation requirements register gopayif possible enable gopay pass merchant operational data administration platform ideal solution provide access via logon customer domain www eshop cz gopay login logged gopay engineer able enter required data form make sure customers register gopay assigned registration form specific url registering form recognize customer uses solution distribute registration link visible place administration solution well website case provide information gopay suggestion make article better permalink share looking anything else \\? contact support specialist print article help center gopay gopay 2017 gopay electronic money institution rights reserved gopay com gopay status", 
    "descr1": "menusign ingopay business accountaccepting payments via gatewaygopay personal accountfor purchases transferssign upsign upsign ingopay business accountaccepting payments via gatewaygopay personal accountfor purchases transfershomefeaturespayment methodssupported businessesgateway typesgateway benefitspricingintegration securitycontact stitek fill 2e4048 fill rule evenodd eet stitekready eet portal fill none stroke ffffff stroke linecap round stroke linejoin round portal iconmore infothe payment gateway keeps customers siteso get completed orders find morehow get payment gateway \\? 1ask priceonce send us demand prepare quote 2start withthe integrationthe programming begin immediately documentation available online 3we check itall togetherin sandbox check payment gateway works 4start acceptpaymentsif everything works well go live integration payments accepted gopay \\? cls 1 fill none stroke ea3c54 stroke linecap round stroke linejoin round grow iconrapid increase completed ordersyour customer remains website entire payment process significant impact total number completed orders cls 1 fill none stroke ea3c54 stroke linecap round stroke linejoin round tojejedno55 payment methodscard bank payments included gopay online payment methods bitcoin cls 1 fill none stroke ea3c54 stroke linecap round stroke linejoin round money iconglobal gatewayabroad payments also supported gateway accepts czech crown us dollar euro british pound polish zloty hungarian forint cls 1 fill none stroke ea3c54 stroke linecap round stroke linejoin round thumbs iconone click paymentsgopay gateway remembers customer payments made single click 7 217 merchants already discovered magic gopaysign upwe looking payment gateway would allow convenient online subscription payments offer gopay best also met criteria especially appreciate quick communication adaptability individual requirements application demands gopay system jarom r glisn kchairman m7 group building diverse constantly developing e commerce projects one reasons chosen gopay payment gateway addition smooth functioning gopay projects appreciate professional approach excellent level communication jan fahounmanaging partner mms digitalbusinesspricefeaturesterms conditions gopay statushelp centredocumentationpersonalgopay personal accountcompanyaboutmediajobsblogcontactcontact 420 840 818 918 gopay gopay comin compliance withpci dss level 1 eskyslovenskyenglishpolskimagyar 2017 gopay r", 
    "crawled_date": "2017-06-10T13:59:23.034751"
  }, 
  "146": {
    "api_url": "inputs.io", 
    "progweb_url": "https://www.programmableweb.com/api/inputsio", 
    "progweb_date": "07.30.2013", 
    "progweb_descr": "Inputs.io is a secure payment service that allows users to store use Bitcoins for payment. The service uses two factor authentication for security and is designed to enable users to get a wallet and start utilizing it with speed and ease. The Inputs.io API uses REST calls, returns JSON, and allows users to get balances, get last transactions, send transactions, get transaction details, sign and verify messages, and generate/redeem vouchers. An account is required with service.", 
    "api_name": "Inputs.io", 
    "progweb_cat": "Financial,Currency", 
    "crawled_date": "2017-06-10T13:59:33.709661"
  }, 
  "147": {
    "api_url": "app55.com", 
    "progweb_url": "https://www.programmableweb.com/api/app55", 
    "progweb_date": "07.31.2013", 
    "progweb_descr": "App55 is a UK-based online payment service that enables merchants, websites and mobile application developers to offer their customers secure, one-click payments for products or services via any internet-enabled device.  App55 offers a restful API for access to their payment services. Use the API to send requests to the App55 platform in order to manage users, manage cards, and perform transactions. Responses are returned in JSON or JSONP. Authentication is via API key.", 
    "api_name": "App55", 
    "progweb_cat": "Payments,Mobile", 
    "crawled_date": "2017-06-10T13:59:33.708249"
  }, 
  "144": {
    "api_url": "usepaddle.com", 
    "progweb_url": "https://www.programmableweb.com/api/paddle", 
    "progweb_date": "07.15.2013", 
    "progweb_descr": "Paddle is an online and mobile payment application. Paddle allows merchants to accept payments via Paddle online and in applications and allows users to pay with Paddle, encrypting their credit card and delivery information in the cloud so they don't have to enter it each time.  The Paddle API allows developers to access and integrate the functionality of Paddle with other applications. Some example API methods include adding Paddle buttons on sites and applications, accepting payments, and reviewing transactions.", 
    "api_name": "Paddle", 
    "progweb_cat": "Payments,Merchants", 
    "crawled_date": "2017-06-10T13:59:33.711954"
  }, 
  "145": {
    "api_url": "coinjar.io", 
    "progweb_url": "https://www.programmableweb.com/api/coinjar-checkout", 
    "progweb_date": "07.17.2013", 
    "progweb_descr": "CoinJar is a digital currency wallet that aims to bridge the gap between fiat and alternative currencies. Coinjar Checkout offers same day transaction settlement, accurate exchange rates, a 1% fee and 0% charge back rate, and allows users to accept payment in Bitcoin as well as other currencies.  The CoinJar Checkout API provides functionality for merchants and vendors to accept payments and settle transaction in local currencies, as well as customize the interface on third-party websites.", 
    "api_name": "CoinJar Checkout", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:33.710809"
  }, 
  "142": {
    "api_url": "passverse.com", 
    "progweb_url": "https://www.programmableweb.com/api/passverse", 
    "progweb_date": "07.14.2013", 
    "progweb_descr": "PassVerse provides for generating and updating passes for Apple's Passbook. PassVerse allows developers to create and manage passes, tickets, coupons, and more for Passbook.  The PassVerse API allows developers to access and integrate the functionality of PassVerse with other applications. Some example API methods include creating passes, managing passes, and creating and managing pass templates.", 
    "api_name": "PassVerse", 
    "progweb_cat": "Payments,Mobile", 
    "crawled_date": "2017-06-10T13:59:33.714067"
  }, 
  "143": {
    "api_url": "judopay.com", 
    "progweb_url": "https://www.programmableweb.com/api/judo-pay", 
    "progweb_date": "07.15.2013", 
    "progweb_descr": "Judo Pay is a platform to build complete mobile payment solutions and applications. Judo Pay allows for mobile payment solution customization and addition of a variety of features.  The Judo Pay API allows developers to access the functionality of Judo Pay with other applications and create new applications. Some example API methods include retrieving transactions, listing transactions, and accepting transactions.", 
    "api_name": "Judo Pay", 
    "progweb_cat": "Payments,Merchants", 
    "crawled_date": "2017-06-10T13:59:33.713086"
  }, 
  "140": {
    "api_url": "shopgate.com", 
    "progweb_url": "https://www.programmableweb.com/api/shopgate-merchant", 
    "progweb_date": "07.09.2013", 
    "progweb_descr": "Shopgate provides mobile shopping solutions for commerce, providing merchants with tools to create mobile shopping websites and connecting shoppers to thousands of shopping apps with a single registration.  The Shopgate Merchant API provides a developer interface enabling orders and items to be manage automatically. Supported functions include order list retrieval with filtering, order details retrieval, and item or category manipulation. The API accepts HTTPS POST calls and returns JSON formatted responses", 
    "api_name": "Shopgate Merchant", 
    "progweb_cat": "eCommerce,Mobile", 
    "crawled_date": "2017-06-10T13:59:33.716051"
  }, 
  "141": {
    "api_url": "standardtreasury.com", 
    "progweb_url": "https://www.programmableweb.com/api/standard-treasury", 
    "progweb_date": "07.09.2013", 
    "progweb_descr": "Standard Treasury is a financial and banking service to connect developers and banks and the banking industry.  The Standard Treasury API allows developers to access and integrate the functionality of Standard Treasury with other applications. Some example API methods include accepting payments and transfers, sending remittances, and managing account information. Public documentation is not available; interested developers should email dan@standardtreasury.com for more information.", 
    "api_name": "Standard Treasury", 
    "progweb_cat": "Financial,Banking", 
    "crawled_date": "2017-06-10T13:59:33.715072"
  }, 
  "148": {
    "api_url": "atlassian.net", 
    "progweb_url": "https://www.programmableweb.com/api/slidepay", 
    "progweb_date": "07.31.2013", 
    "progweb_descr": "SlidePay is a credit card payment acceptance service. SlidePay allows merchants and users to accept swiped credit card payments in their applications on a variety of platforms.  The SlidePay API allows developers to access and integrate the functionality of SlidePay with other applications. Some example API methods include processing payments, retrieving payments, and sending receipts.", 
    "api_name": "SlidePay", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:33.706974"
  }, 
  "149": {
    "api_url": "ernglobal.com", 
    "progweb_url": "https://www.programmableweb.com/api/ern-global", 
    "progweb_date": "08.02.2013", 
    "progweb_descr": "ERN Global is a transactional big data platform. ERN Global offers features to capture, store, analyze, and manipulate transactional data. Consumers, merchants, credit card processors, and card issuers can all use ERN Global for various data needs.   The ERN Global API allows developers to access and integrate the functionality of ERN Global with other applications. Public documentation is not available; API access comes with account service.", 
    "api_name": "ERN Global", 
    "progweb_cat": "Enterprise,Big Data", 
    "crawled_date": "2017-06-10T13:59:33.705920"
  }, 
  "133": {
    "api_url": "bitcoin-contact.org", 
    "progweb_url": "https://www.programmableweb.com/api/bitcoin-contact", 
    "progweb_date": "06.22.2013", 
    "progweb_descr": "Bitcoin-Contact is a site that lets users receive and send messages to Bitcoin Addresses. They aim to all Bitcoin owners to validate the identity of those they are speaking/exchanging with, and simplify otherwise anonymous communication. The Bitcoin-Contact API allows users to make queries that return Bitcoin addresses associated with an email address, and return public information on identities associated with a Bitcoin address.", 
    "api_name": "Bitcoin-Contact", 
    "progweb_cat": "Email,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:37.913316"
  }, 
  "132": {
    "api_url": "bitmarket.eu", 
    "progweb_url": "https://www.programmableweb.com/api/bitmarket", 
    "progweb_date": "06.22.2013", 
    "progweb_descr": "BitMarket is a Bitcoin exchange platform that allows users to buy and sell Bitcoins in a variety of currencies. The BitMarket API allows users to submit REST requests to get the market volume, min and max prices for all currencies, get active currency offers, and get latest completed transactions. An account is required with service and SSL is used for authentication.", 
    "api_name": "BitMarket", 
    "progweb_cat": "Financial,Stocks", 
    "crawled_date": "2017-06-10T13:59:37.915161"
  }, 
  "131": {
    "api_url": "bitcoinjs.org", 
    "progweb_url": "https://www.programmableweb.com/api/bitcoinjs-wallet", 
    "progweb_date": "06.22.2013", 
    "progweb_descr": "BitcoinJS is a open-source resource for the development of Bitcoin projects. The site provides libraries of Bitcoin-related code that can be used for mobile, wallet, and trading services. The BitcoinJS Wallet Server API allows users to synchronize Bitcoin wallets between multiple clients and devices, and enhances security. The API accepts calls to create a wallet, log in to a wallet, check a pin, add and download items from the wallet, and several other calls.", 
    "api_name": "BitcoinJS Wallet", 
    "progweb_cat": "Financial,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:37.916988"
  }, 
  "130": {
    "link1": "https://github.com/zipmark/rspec_api_documentation", 
    "api_url": "github.com", 
    "link3": "https://github.com/documentationjs/documentation", 
    "link2": "https://github.com/tootsuite/documentation", 
    "progweb_url": "https://www.programmableweb.com/api/pikapay", 
    "progweb_date": "06.12.2013", 
    "progweb_descr": "PikaPay is a mobile virtual wallet for sending and receiving Bitcoin payments via Twitter. The PikaPay API provides a RESTful interface for the same wallet functionality as exposed through the PikaPay web interface. The API currently supports payments and payment requests, user details requests, and account setting management. More resources are under construction. All calls require HTTPS.", 
    "api_name": "PikaPay", 
    "progweb_cat": "Payments,Bitcoin", 
    "descr3": "skip content features business explore marketplace pricing sign sign watch 44 star 2 790 fork 169 documentationjs documentation code issues 117 pull requests 6 wiki insights pulse graphs documentation modern javascript http documentation js org documentation tool documentation jsdoc javascript babel 874 commits 25 branches 43 releases 51 contributors javascript 81 6 html 7 5 c 6 7 css 4 2 javascript html c css clone download clone https use git checkout svn using web url open desktop download zip find file branch master switch branches tags branches tags anchors links dangerous custom inference v1 dep upgrades greenkeeper babel traverse 6 25 0 greenkeeper babel traverse pin 6 24 1 greenkeeper chokidar 1 7 0 greenkeeper chokidar pin 1 6 1 greenkeeper eslint 4 0 0 greenkeeper flow bin 0 47 0 greenkeeper flow bin 0 48 0 greenkeeper fs extra pin 3 0 0 greenkeeper git url parse 7 0 0 greenkeeper highlight js 9 11 0 greenkeeper jest pin 20 0 3 greenkeeper js yaml pin 3 8 3 greenkeeper remark html 6 0 1 greenkeeper tiny lr 1 0 5 greenkeeper tiny lr pin 1 0 4 greenkeeper vfile 2 1 0 inline destructuring parameter docs master native nothing see special names utf8 test fixture nothing show v4 0 0 rc 1 v4 0 0 rc 0 v4 0 0 beta 19 v4 0 0 beta 18 v4 0 0 beta 17 v4 0 0 beta16 v4 0 0 beta15 v4 0 0 beta14 v4 0 0 beta13 v4 0 0 beta12 v4 0 0 beta11 v4 0 0 beta10 v4 0 0 beta9 v4 0 0 beta7 v4 0 0 beta6 v4 0 0 beta5 v4 0 0 beta4 v4 0 0 beta3 v4 0 0 beta2 v4 0 0 beta1 v4 0 0 beta v3 0 4 v3 0 3 v3 0 2 v3 0 1 v3 0 0 v2 1 0 alpha v2 0 1 v2 0 0 v2 0 0 alpha2 v1 4 0 v1 3 2 v1 3 1 v1 3 0 v1 2 0 v1 1 0 v1 0 7 v1 0 6 v1 0 5 v1 0 4 v1 0 3 v1 0 2 v1 0 1 nothing show new pull request latest commit 65f5a37 jun 8 2017 greenkeeper bot committed tmcw fix \\( package \\) update babel generator version 6 25 0 \\( 804 \\) permalink readme md documentation system modern javascript supports modern javascript es5 es2017 jsx flow type annotations infers parameters types membership write less documentation let computer write integrates github link directly documentation code refers customizable output html json markdown examples html output default template markdown json documentation getting started start usage use documentation js recipes tricks writing effective jsdoc docs node api documentation js 's self generated documentation configuring documentation js faq troubleshooting theming tips theming documentation output html see also list projects similar documentation js user guide globally install using npm package manager npm install g documentation installs command called path point jsdoc annotated source code generate human readable documentation first run option help usage generate markdown docs index js files references bin documentation js build index js f md generate html docs files src bin documentation js build src f html docs document index js ignoring files requires imports bin documentation js build index js f md shallow build serve html docs app js bin documentation js serve app js build serve live update html docs app js bin documentation js serve watch app js validate jsdoc syntax util js bin documentation js lint util js update api section readme md docs index js bin documentation js readme index js section api build docs values exported index js bin documentation js build document exported index js commands serve input generate update display html documentation build input build documentation lint input check common style uniformity mistakes readme input inject documentation readme md options version show version number boolean help show help boolean contributing plenty issues 'd love help robust complete support including typedefs strong support html markdown output documentation coverage statistics validation documentation open open source project means individuals making significant valuable contributions given commit access project contribute see fit project like open wiki standard guarded open source project contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "descr2": "skip content features business explore marketplace pricing sign sign watch 46 star 458 fork 286 tootsuite documentation code issues 13 pull requests 11 projects 0 insights pulse graphs full documentation repository mastodon https github com tootsuite mastodon mastodon 675 commits 2 branches 11 releases 203 contributors agpl 3 0 clone download clone https use git checkout svn using web url download zip find file branch master switch branches tags branches tags master revert 122 patch 1 nothing show v1 1 v1 0 v0 9 9 v0 9 v0 8 v0 7 v0 6 v0 1 2 v0 1 1 v0 1 0 last mastodon state nothing show new pull request latest commit eb317b3 jun 17 2017 foxsan48 committed wxcafe added missing info prod \\( 306 \\) added missing info changed login user creation corrected user creation login hopefully permalink readme md mastodon documentation mastodon free open source gnu social compatible social network server decentralized alternative commercial platforms avoids risks single company monopolizing communication anyone run mastodon participate social network seamlessly using mastodon frequently asked questions list mastodon instances apps user guide using api api documentation libraries streaming api documentation testing api curl oauth details tips app developers push notifications running mastodon please note highly recommended run tagged release mastodon run current branch resources needed production guide docker guide alternative running heroku development guide alternative development vagrant alternative development production nanobox administration guide maintenance tasks tuning mastodon system configuration alternatives contributing mastodon sponsors translate mastodon language report bugs submit ideas protocols list used specs rfcs federation extensions protocols contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "descr1": "skip content features business explore marketplace pricing sign sign watch 26 star 915 fork 229 zipmark rspec api documentation code issues 30 pull requests 8 projects 0 wiki insights pulse graphs automatically generate api documentation rspec 784 commits 4 branches 5 releases 61 contributors mit ruby 67 0 gherkin 26 2 html 5 8 1 0 ruby gherkin html clone download clone https use git checkout svn using web url open desktop download zip find file branch master switch branches tags branches tags gh pages master new dsl rename dsl methods nothing show v4 9 0 v4 8 0 v4 7 0 v4 4 0 5 0 0 nothing show new pull request latest commit 36a0c41 jun 6 2017 oestrich bump version permalink readme md rspec api doc generator generate pretty api docs rails apis check sample changes please see wiki latest changes installation add rspec api documentation gemfile bundle set specs require 'rails helper' require 'rspec api documentation dsl' resource orders get orders example listing orders request status 200 end end end generate docs viewers consider adding viewer enhance generated documentation rspec api documentation generate simple html viewers use generated json raddocs sinatra app apitome rails engine gemfile spec spec helper rb rspecapidocumentation configure config config format json end sample app see folder sample rails app documented configuration options values listed default values rspecapidocumentation configure config set application rack test uses config app rails application output folder config docs dir rails root join \\( doc api \\) array output format \\( \\) possible values json html combined text combined json json iodocs textile markdown append json slate api blueprint config format html location templates config template path inside gem filter example document type config filter filter example document type config exclusion filter nil used adding curl output docs config curl host nil used adding curl output docs allows filter headers needed curl request host cookie set array config curl headers filter nil default settings nil headers shown sometimes chatty setting parameters array headers render headers config request headers include nil config response headers include nil default examples resources ordered description set true keep source order config keep source order false change name api index pages config api name api documentation redefine method dsl thinks client useful need `let` client likely model config client method client change iodocs writer protocol config io docs protocol http define documentation groups well group allows generate multiple sets documentation config define group public config default group 's doc dir subfolder parent group based group 's name config docs dir rails root join \\( doc api public \\) change filter include public examples config filter public end change post body formatted default still override `raw post` json xml proc passed params config request body formatter proc new params params change response body formatted default proc called response content type response body default response content type `application json` pretty formated config response body formatter proc new response content type response body response body change embedded style html output file processed rspecapidocumentation plain css config html embedded css file nil removes dsl method `status` required parameter named status config disable dsl status removes dsl method `method` required parameter named method config disable dsl method end format json generates index file example files json html generates index file example files html combined text generates single file resource used raddocs command line docs combined json generates single file examples json iodocs generates docs style documentation textile generates index file example files textile markdown generates index file example files markdown api blueprint generates index file example files apiblueprint append json lets selectively run specs without destroying current documentation see section append json format cannot run formats delete entire documentation folder upon run format appends new examples index file writes run examples correct folder rake task allows format used easily rspec core raketask new \\( 'docs generate append' spec file \\) task args spec file task args spec file env doc format append json end pattern spec file 'spec acceptance spec rb' rspec opts format rspecapidocumentation apiformatter end env doc format json rspecapidocumentation configure config config format env doc format end rake docs generate append spec acceptance orders spec rb update current index 's examples include file examples inside rewritten api blueprint format \\( apib \\) additional functions apib groups urls together http verbs route orders orders collection get returns orders end delete deletes orders end end n't use param url states rest documentation apib attributes besides parameters use attributes exactly like 'd use \\( see documentation \\) filtering exclusion rspec api documentation lets determine examples get outputted final documentation filtering done via metadata key tag examples either single symbol array symbols also false make sure get outputted resource account get accounts parameter page page view default document example get list accounts request status 200 end n't actually document example purely testing purposes example get list page 2 document false request \\( page 2 \\) status 404 end example request ca n't change document example request get list page 3 page 3 status 404 end end post accounts parameter email user email example creating account document private request \\( email eric example com \\) status 201 end example creating account errors document private developers request status 422 end end end documents generated top folder document false examples never generated rspecapidocumentation configure config exclude document examples marked 'private' config define group non private config config exclusion filter private end document examples marked 'public' config define group public config config filter public end document examples marked 'developer' config define group developers config config filter developers end end dsl require dsl beginning acceptance spec rb file make sure require following pull dsl definitions require 'rspec api documentation dsl' example group methods resource create set documentation examples go together acts describe block resource orders end get head post put delete patch method sent along url resource orders post orders end get orders end head orders end put orders id let \\( id \\) order id example get order path orders 1 ` id` replaced value `id` end end delete orders id end patch orders id end end example rspec 's built example method hook metadata surrounding could also used resource orders post orders example creating order request make assertions end end end example request example except calls first step assertions required block similar pass hash last parameter passed along extra parameters become metadata like resource orders parameter name order name post orders example request creating order name name make assertions end end end explanation method takes string representing detailed explanation example resource orders post orders example creating order explanation method creates new order request make assertions end end end resource also explanation resource orders explanation orders top level business objects created post request post orders example creating order explanation method creates new order request make assertions end end end header method takes header name value value string symbol symbol symbol allowing header values resource orders header accept application json header x custom custom header let \\( custom header \\) dynamic get orders example request headers headers accept application json x custom dynamic end end end parameter method takes parameter name description optional hash extra metadata displayed raddocs extra columns method parameter name exists e g send returned value server url encoded data special values display red show 's required scope parameters hash scoping nested see example use specified method parameter value retrieving parameter value goes several steps option defined test case responds method method used test case responds scoped method method used overwise unscoped method used resource orders parameter auth token authentication token let \\( auth token \\) user authentication token post orders parameter name order name required true scope order parameter item order items scope order parameter item id item id scope order item method custom item id let \\( name \\) order let \\( order name \\) order let \\( item id \\) 1 let \\( custom item id \\) 1 let \\( order item item id \\) 1 example creating order params eq \\( order name order item item id 1 auth token auth token \\) end end end response field method takes response field name description optional hash extra metadata displayed raddocs extra columns special values scope response field hash resource orders response field page current page get orders example request getting orders expect \\( response body \\) eq \\( page 1 json \\) end end end also group metadata using options factor duplications resource orders post orders options scope order required true parameter name order name parameter item order items end options scope order response field id order id response field status order status end let \\( name \\) order let \\( item id \\) 1 example creating order expect \\( status \\) 201 end end end callback complicated see relish docs trigger callback pass method block evaluated cause application make request example methods callback url defines destination callback example see relish docs client returns test client makes requests documents responses resource order get orders example listing orders create order via api instead via factories client post orders order hash request status 200 end end end callback evaluate block passed cause application test make callback request see relish docs request sends request app parameters headers defined resource order get orders example listing orders request status 200 end end end doc wish make request via client included documentation inside doc block resource order get orders example listing orders doc create order via api instead via factories n't document client post orders order hash end request status 200 end end end params get hash parameters sent see documentation example header method takes header name value resource orders header accept application json end get orders example request headers headers accept application json end end end headers returns headers sent request see documentation example response body returns string containing response body previous request resource order get orders example listing orders request response body name order 1 json end end end response headers returns hash response headers previous request resource order get orders example listing orders request response headers content type application json end end end status response status returns numeric status code response eg 200 alias status status commonly parameter resource order get orders example listing orders request status 200 response status 200 end end end query string data sent query string instead post data used get requests resource orders parameter name let \\( name \\) order get orders example list orders query string name orders end end end raw post completely override gets sent parameters ing resource orders header content type application json parameter name let \\( name \\) order post orders let \\( raw post \\) params json example request create new order params get sent json end end end rake task gem contains railtie defines rake task generating docs easily rails loads files rake docs generate using rails use rake following task require 'rspec core rake task' desc 'generate api request documentation api specs' rspec core raketask new \\( 'docs generate' \\) pattern 'spec acceptance spec rb' rspec opts format rspecapidocumentation apiformatter end require 'rspec api documentation' load 'tasks docs rake' using rake rspec spec acceptance format rspecapidocumentation apiformatter uploading file example uploading file see gotchas rspec api documentation relies variable test client define please configure rspec api documentation use another one see configuration make heavy use rspec metadata actually use entire gem without dsl hand write metadata must use etc access data last response able use response object created contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "crawled_date": "2017-06-10T13:59:37.918842"
  }, 
  "137": {
    "api_url": "firstach.com", 
    "progweb_url": "https://www.programmableweb.com/api/firstach", 
    "progweb_date": "07.03.2013", 
    "progweb_descr": "FirstACH is a business and eCommerce payment solution. FirstACH can be integrated with business and account management software and applications to make and receive payments.  The FirstACH API allows developers to access and integrate the functionality of FirstACH with other applications and systems. Some example API methods include automating transactions, retrieving payment information, and managing account information.", 
    "api_name": "FirstACH", 
    "progweb_cat": "Payments,Billing", 
    "crawled_date": "2017-06-10T13:59:33.719319"
  }, 
  "136": {
    "api_url": "quickpay.net", 
    "progweb_url": "https://www.programmableweb.com/api/quickpay", 
    "progweb_date": "06.29.2013", 
    "progweb_descr": "Quickpay is an online payment solution for merchants that allows the secure integration of credit and debit cards with an arbitrary site on the Internet. The service works with all major credit cards as well as Paypal, Sofort Banking, and other e-banking facilities.  The QuickPay API enables merchants to handle payments in a simple manner. Based on SSL encrypted HTTP communication, all actions are performed by sending a HTTP POST request. Responses are sent as an XML document.", 
    "api_name": "Quickpay", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:37.904868"
  }, 
  "135": {
    "api_url": "envoyservices.com", 
    "progweb_url": "https://www.programmableweb.com/api/envoy-services-merchant", 
    "progweb_date": "06.29.2013", 
    "progweb_descr": "Envoy Services is a global payment gateway that provides access to over 200 local payment services. Envoy users can accept payments using services like eWallets, real-time bank transfers, vouchers, and prepaid cards. The Envoy payment gateway can be customized to suit the user's brand. Envoy Services also comes with fraud screening services to help protect merchants from fraudulent activity. The Merchants API provides Envoy users with access to their payment portals via SOAP calls.", 
    "api_name": "Envoy Services Merchant", 
    "progweb_cat": "Payments,International", 
    "crawled_date": "2017-06-10T13:59:37.908587"
  }, 
  "134": {
    "link1": "https://github.com/zipmark/rspec_api_documentation", 
    "api_url": "github.com", 
    "link3": "https://github.com/documentationjs/documentation", 
    "link2": "https://github.com/tootsuite/documentation", 
    "progweb_url": "https://www.programmableweb.com/api/sphereio", 
    "progweb_date": "06.22.2013", 
    "progweb_descr": "SPHERE.IO is the first and leading platform-as-a-Service eCommerce solution. Built to serve eCommerce and mCommerce that include features like product information management (PIM), customer management and order management. SPERE.IO allows developers to build any kind of eCommerce/multi-channel-application for web, mobile, app or in-app scenario.   The SPHERE.IO API allows developers to access and integrate the functionality of SPHERE.IO with other applications. Some example API methods include retrieving product information, managing product information, and managing account information.", 
    "api_name": "SPHERE.IO", 
    "progweb_cat": "eCommerce,Payments", 
    "descr3": "skip content features business explore marketplace pricing sign sign watch 44 star 2 790 fork 169 documentationjs documentation code issues 117 pull requests 6 wiki insights pulse graphs documentation modern javascript http documentation js org documentation tool documentation jsdoc javascript babel 874 commits 25 branches 43 releases 51 contributors javascript 81 6 html 7 5 c 6 7 css 4 2 javascript html c css clone download clone https use git checkout svn using web url open desktop download zip find file branch master switch branches tags branches tags anchors links dangerous custom inference v1 dep upgrades greenkeeper babel traverse 6 25 0 greenkeeper babel traverse pin 6 24 1 greenkeeper chokidar 1 7 0 greenkeeper chokidar pin 1 6 1 greenkeeper eslint 4 0 0 greenkeeper flow bin 0 47 0 greenkeeper flow bin 0 48 0 greenkeeper fs extra pin 3 0 0 greenkeeper git url parse 7 0 0 greenkeeper highlight js 9 11 0 greenkeeper jest pin 20 0 3 greenkeeper js yaml pin 3 8 3 greenkeeper remark html 6 0 1 greenkeeper tiny lr 1 0 5 greenkeeper tiny lr pin 1 0 4 greenkeeper vfile 2 1 0 inline destructuring parameter docs master native nothing see special names utf8 test fixture nothing show v4 0 0 rc 1 v4 0 0 rc 0 v4 0 0 beta 19 v4 0 0 beta 18 v4 0 0 beta 17 v4 0 0 beta16 v4 0 0 beta15 v4 0 0 beta14 v4 0 0 beta13 v4 0 0 beta12 v4 0 0 beta11 v4 0 0 beta10 v4 0 0 beta9 v4 0 0 beta7 v4 0 0 beta6 v4 0 0 beta5 v4 0 0 beta4 v4 0 0 beta3 v4 0 0 beta2 v4 0 0 beta1 v4 0 0 beta v3 0 4 v3 0 3 v3 0 2 v3 0 1 v3 0 0 v2 1 0 alpha v2 0 1 v2 0 0 v2 0 0 alpha2 v1 4 0 v1 3 2 v1 3 1 v1 3 0 v1 2 0 v1 1 0 v1 0 7 v1 0 6 v1 0 5 v1 0 4 v1 0 3 v1 0 2 v1 0 1 nothing show new pull request latest commit 65f5a37 jun 8 2017 greenkeeper bot committed tmcw fix \\( package \\) update babel generator version 6 25 0 \\( 804 \\) permalink readme md documentation system modern javascript supports modern javascript es5 es2017 jsx flow type annotations infers parameters types membership write less documentation let computer write integrates github link directly documentation code refers customizable output html json markdown examples html output default template markdown json documentation getting started start usage use documentation js recipes tricks writing effective jsdoc docs node api documentation js 's self generated documentation configuring documentation js faq troubleshooting theming tips theming documentation output html see also list projects similar documentation js user guide globally install using npm package manager npm install g documentation installs command called path point jsdoc annotated source code generate human readable documentation first run option help usage generate markdown docs index js files references bin documentation js build index js f md generate html docs files src bin documentation js build src f html docs document index js ignoring files requires imports bin documentation js build index js f md shallow build serve html docs app js bin documentation js serve app js build serve live update html docs app js bin documentation js serve watch app js validate jsdoc syntax util js bin documentation js lint util js update api section readme md docs index js bin documentation js readme index js section api build docs values exported index js bin documentation js build document exported index js commands serve input generate update display html documentation build input build documentation lint input check common style uniformity mistakes readme input inject documentation readme md options version show version number boolean help show help boolean contributing plenty issues 'd love help robust complete support including typedefs strong support html markdown output documentation coverage statistics validation documentation open open source project means individuals making significant valuable contributions given commit access project contribute see fit project like open wiki standard guarded open source project contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "descr2": "skip content features business explore marketplace pricing sign sign watch 46 star 458 fork 286 tootsuite documentation code issues 13 pull requests 11 projects 0 insights pulse graphs full documentation repository mastodon https github com tootsuite mastodon mastodon 675 commits 2 branches 11 releases 203 contributors agpl 3 0 clone download clone https use git checkout svn using web url download zip find file branch master switch branches tags branches tags master revert 122 patch 1 nothing show v1 1 v1 0 v0 9 9 v0 9 v0 8 v0 7 v0 6 v0 1 2 v0 1 1 v0 1 0 last mastodon state nothing show new pull request latest commit eb317b3 jun 17 2017 foxsan48 committed wxcafe added missing info prod \\( 306 \\) added missing info changed login user creation corrected user creation login hopefully permalink readme md mastodon documentation mastodon free open source gnu social compatible social network server decentralized alternative commercial platforms avoids risks single company monopolizing communication anyone run mastodon participate social network seamlessly using mastodon frequently asked questions list mastodon instances apps user guide using api api documentation libraries streaming api documentation testing api curl oauth details tips app developers push notifications running mastodon please note highly recommended run tagged release mastodon run current branch resources needed production guide docker guide alternative running heroku development guide alternative development vagrant alternative development production nanobox administration guide maintenance tasks tuning mastodon system configuration alternatives contributing mastodon sponsors translate mastodon language report bugs submit ideas protocols list used specs rfcs federation extensions protocols contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "descr1": "skip content features business explore marketplace pricing sign sign watch 26 star 915 fork 229 zipmark rspec api documentation code issues 30 pull requests 8 projects 0 wiki insights pulse graphs automatically generate api documentation rspec 784 commits 4 branches 5 releases 61 contributors mit ruby 67 0 gherkin 26 2 html 5 8 1 0 ruby gherkin html clone download clone https use git checkout svn using web url open desktop download zip find file branch master switch branches tags branches tags gh pages master new dsl rename dsl methods nothing show v4 9 0 v4 8 0 v4 7 0 v4 4 0 5 0 0 nothing show new pull request latest commit 36a0c41 jun 6 2017 oestrich bump version permalink readme md rspec api doc generator generate pretty api docs rails apis check sample changes please see wiki latest changes installation add rspec api documentation gemfile bundle set specs require 'rails helper' require 'rspec api documentation dsl' resource orders get orders example listing orders request status 200 end end end generate docs viewers consider adding viewer enhance generated documentation rspec api documentation generate simple html viewers use generated json raddocs sinatra app apitome rails engine gemfile spec spec helper rb rspecapidocumentation configure config config format json end sample app see folder sample rails app documented configuration options values listed default values rspecapidocumentation configure config set application rack test uses config app rails application output folder config docs dir rails root join \\( doc api \\) array output format \\( \\) possible values json html combined text combined json json iodocs textile markdown append json slate api blueprint config format html location templates config template path inside gem filter example document type config filter filter example document type config exclusion filter nil used adding curl output docs config curl host nil used adding curl output docs allows filter headers needed curl request host cookie set array config curl headers filter nil default settings nil headers shown sometimes chatty setting parameters array headers render headers config request headers include nil config response headers include nil default examples resources ordered description set true keep source order config keep source order false change name api index pages config api name api documentation redefine method dsl thinks client useful need `let` client likely model config client method client change iodocs writer protocol config io docs protocol http define documentation groups well group allows generate multiple sets documentation config define group public config default group 's doc dir subfolder parent group based group 's name config docs dir rails root join \\( doc api public \\) change filter include public examples config filter public end change post body formatted default still override `raw post` json xml proc passed params config request body formatter proc new params params change response body formatted default proc called response content type response body default response content type `application json` pretty formated config response body formatter proc new response content type response body response body change embedded style html output file processed rspecapidocumentation plain css config html embedded css file nil removes dsl method `status` required parameter named status config disable dsl status removes dsl method `method` required parameter named method config disable dsl method end format json generates index file example files json html generates index file example files html combined text generates single file resource used raddocs command line docs combined json generates single file examples json iodocs generates docs style documentation textile generates index file example files textile markdown generates index file example files markdown api blueprint generates index file example files apiblueprint append json lets selectively run specs without destroying current documentation see section append json format cannot run formats delete entire documentation folder upon run format appends new examples index file writes run examples correct folder rake task allows format used easily rspec core raketask new \\( 'docs generate append' spec file \\) task args spec file task args spec file env doc format append json end pattern spec file 'spec acceptance spec rb' rspec opts format rspecapidocumentation apiformatter end env doc format json rspecapidocumentation configure config config format env doc format end rake docs generate append spec acceptance orders spec rb update current index 's examples include file examples inside rewritten api blueprint format \\( apib \\) additional functions apib groups urls together http verbs route orders orders collection get returns orders end delete deletes orders end end n't use param url states rest documentation apib attributes besides parameters use attributes exactly like 'd use \\( see documentation \\) filtering exclusion rspec api documentation lets determine examples get outputted final documentation filtering done via metadata key tag examples either single symbol array symbols also false make sure get outputted resource account get accounts parameter page page view default document example get list accounts request status 200 end n't actually document example purely testing purposes example get list page 2 document false request \\( page 2 \\) status 404 end example request ca n't change document example request get list page 3 page 3 status 404 end end post accounts parameter email user email example creating account document private request \\( email eric example com \\) status 201 end example creating account errors document private developers request status 422 end end end documents generated top folder document false examples never generated rspecapidocumentation configure config exclude document examples marked 'private' config define group non private config config exclusion filter private end document examples marked 'public' config define group public config config filter public end document examples marked 'developer' config define group developers config config filter developers end end dsl require dsl beginning acceptance spec rb file make sure require following pull dsl definitions require 'rspec api documentation dsl' example group methods resource create set documentation examples go together acts describe block resource orders end get head post put delete patch method sent along url resource orders post orders end get orders end head orders end put orders id let \\( id \\) order id example get order path orders 1 ` id` replaced value `id` end end delete orders id end patch orders id end end example rspec 's built example method hook metadata surrounding could also used resource orders post orders example creating order request make assertions end end end example request example except calls first step assertions required block similar pass hash last parameter passed along extra parameters become metadata like resource orders parameter name order name post orders example request creating order name name make assertions end end end explanation method takes string representing detailed explanation example resource orders post orders example creating order explanation method creates new order request make assertions end end end resource also explanation resource orders explanation orders top level business objects created post request post orders example creating order explanation method creates new order request make assertions end end end header method takes header name value value string symbol symbol symbol allowing header values resource orders header accept application json header x custom custom header let \\( custom header \\) dynamic get orders example request headers headers accept application json x custom dynamic end end end parameter method takes parameter name description optional hash extra metadata displayed raddocs extra columns method parameter name exists e g send returned value server url encoded data special values display red show 's required scope parameters hash scoping nested see example use specified method parameter value retrieving parameter value goes several steps option defined test case responds method method used test case responds scoped method method used overwise unscoped method used resource orders parameter auth token authentication token let \\( auth token \\) user authentication token post orders parameter name order name required true scope order parameter item order items scope order parameter item id item id scope order item method custom item id let \\( name \\) order let \\( order name \\) order let \\( item id \\) 1 let \\( custom item id \\) 1 let \\( order item item id \\) 1 example creating order params eq \\( order name order item item id 1 auth token auth token \\) end end end response field method takes response field name description optional hash extra metadata displayed raddocs extra columns special values scope response field hash resource orders response field page current page get orders example request getting orders expect \\( response body \\) eq \\( page 1 json \\) end end end also group metadata using options factor duplications resource orders post orders options scope order required true parameter name order name parameter item order items end options scope order response field id order id response field status order status end let \\( name \\) order let \\( item id \\) 1 example creating order expect \\( status \\) 201 end end end callback complicated see relish docs trigger callback pass method block evaluated cause application make request example methods callback url defines destination callback example see relish docs client returns test client makes requests documents responses resource order get orders example listing orders create order via api instead via factories client post orders order hash request status 200 end end end callback evaluate block passed cause application test make callback request see relish docs request sends request app parameters headers defined resource order get orders example listing orders request status 200 end end end doc wish make request via client included documentation inside doc block resource order get orders example listing orders doc create order via api instead via factories n't document client post orders order hash end request status 200 end end end params get hash parameters sent see documentation example header method takes header name value resource orders header accept application json end get orders example request headers headers accept application json end end end headers returns headers sent request see documentation example response body returns string containing response body previous request resource order get orders example listing orders request response body name order 1 json end end end response headers returns hash response headers previous request resource order get orders example listing orders request response headers content type application json end end end status response status returns numeric status code response eg 200 alias status status commonly parameter resource order get orders example listing orders request status 200 response status 200 end end end query string data sent query string instead post data used get requests resource orders parameter name let \\( name \\) order get orders example list orders query string name orders end end end raw post completely override gets sent parameters ing resource orders header content type application json parameter name let \\( name \\) order post orders let \\( raw post \\) params json example request create new order params get sent json end end end rake task gem contains railtie defines rake task generating docs easily rails loads files rake docs generate using rails use rake following task require 'rspec core rake task' desc 'generate api request documentation api specs' rspec core raketask new \\( 'docs generate' \\) pattern 'spec acceptance spec rb' rspec opts format rspecapidocumentation apiformatter end require 'rspec api documentation' load 'tasks docs rake' using rake rspec spec acceptance format rspecapidocumentation apiformatter uploading file example uploading file see gotchas rspec api documentation relies variable test client define please configure rspec api documentation use another one see configuration make heavy use rspec metadata actually use entire gem without dsl hand write metadata must use etc access data last response able use response object created contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "crawled_date": "2017-06-10T13:59:37.910957"
  }, 
  "139": {
    "api_url": "coinjar.io", 
    "progweb_url": "https://www.programmableweb.com/api/coinjar-trade", 
    "progweb_date": "07.07.2013", 
    "progweb_descr": "CoinJar is a digital currency wallet that aims to bridge the gap between fiat and alternative currencies. The CoinJar Trade API allows users to make queries to retrieve account information, get a list of Bitcoin addresses, retrieve addresses, and generate addresses. Users can also get a list, retrieve, create, and delete contacts and payments as well as get a list of transactions and retrieve transaction details. The service uses REST calls, returns JSON and uses SSL and API keys for authentication.", 
    "api_name": "CoinJar Trade", 
    "progweb_cat": "Financial,Currency", 
    "crawled_date": "2017-06-10T13:59:33.717160"
  }, 
  "138": {
    "api_url": "mcxnow.com", 
    "progweb_url": "https://www.programmableweb.com/api/mcxnow", 
    "progweb_date": "07.07.2013", 
    "progweb_descr": "mcxNOW is a digital currency exchange platform where users can buy and trade multiple currencies. The site handles Bitcoin, among other currencies, and offers low trading fees, a C++ trading engine, anonymous trading, and 3 tier network security.  The mcxNOW API allows users to check the site order book for the last traded price, and the trading volume. The service uses REST calls and returns XML.", 
    "api_name": "mcxNOW", 
    "progweb_cat": "Financial,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:33.718163"
  }, 
  "24": {
    "link1": "https://status.chargify.io/incidents/hk84qq8khgc4", 
    "api_url": "chargify.io", 
    "link3": "http://status.chargify.io/incidents/kcfxzwcyhrbh", 
    "link2": "http://status.chargify.io/", 
    "progweb_url": "https://www.programmableweb.com/api/chargify", 
    "progweb_date": "09.27.2009", 
    "progweb_descr": "Chargify is an online payment service featuring recurring billing. The Chargify API allows developers to integrate the service into their application or website easily, featuring a RESTful interface.", 
    "api_name": "Chargify", 
    "progweb_cat": "Payments,eCommerce", 
    "descr3": "body background body background body background body background body background body layout content status status api section example container example opener color secondary grouped items selector background color ffffff primary font color primary font color primary font color primary font color body status color primary color primary hover layout content status index status day update title impact none layout content status index status day update title impact none hover layout content status index timeframes container timeframe active layout content status full history month incident container impact none layout content status status index incidents list incident title impact none incident history impact none layout content status grouped items selector inline grouped item active layout content status status full history history nav current layout content status status full history history nav \\( current \\) hover color 333333 layout content status status index components statuses component container name color 333333 color rgba \\( 51 51 51 8 \\) secondary font color secondary font color secondary font color secondary font color small layout content status table row date color secondary layout content status grouped items selector inline grouped item layout content status status full history history footer pagination disabled layout content status status full history history nav color aaaaaa border color border color border color border color border color border color body status layout content status border color hr tooltip base markdown display table border color e0e0e0 markdown display table td border top color e0e0e0 markdown display table td td markdown display table th th border left color e0e0e0 css reds css reds css reds css reds css reds css reds css reds layout content status status index status day update title impact critical layout content status status index status day update title impact critical hover layout content status status index page status status critical layout content status status index unresolved incident impact critical incident title flat button background red background color e74c3c layout content status index components statuses component container status red layout content status full history month incident container impact critical layout content status incident incident name impact critical layout content status status index incidents list incident title impact critical status red icon indicator incident history impact critical components container component inner container status red component status components container component inner container status red icon indicator color e74c3c layout content status status index unresolved incident impact critical updates border color e74c3c css oranges css oranges css oranges css oranges css oranges css oranges layout content status status index status day update title impact major layout content status status index status day update title impact major hover layout content status status index page status status major layout content status status index unresolved incident impact major incident title background color e67e22 layout content status index components statuses component container status orange layout content status full history month incident container impact major layout content status incident incident name impact major layout content status status index incidents list incident title impact major status orange icon indicator incident history impact major components container component inner container status orange component status components container component inner container status orange icon indicator color e67e22 layout content status status index unresolved incident impact major updates border color e67e22 css yellows css yellows css yellows css yellows css yellows css yellows layout content status status index status day update title impact minor layout content status status index status day update title impact minor hover layout content status status index page status status minor layout content status status index unresolved incident impact minor incident title layout content status status index scheduled incidents container tab background color f1c40f layout content status index components statuses component container status yellow layout content status full history month incident container impact minor layout content status incident incident name impact minor layout content status status index incidents list incident title impact minor status yellow icon indicator incident history impact minor components container component inner container status yellow component status components container component inner container status yellow icon indicator color f1c40f layout content status status index unresolved incident impact minor updates layout content status status index scheduled incidents container border color f1c40f css blues css blues css blues css blues css blues css blues layout content status status index status day update title impact maintenance layout content status status index status day update title impact maintenance hover layout content status status index page status status maintenance layout content status status index unresolved incident impact maintenance incident title layout content status status index scheduled incidents container tab background color 3498db layout content status index components statuses component container status blue layout content status full history month incident container impact maintenance layout content status incident incident name impact maintenance layout content status status index incidents list incident title impact maintenance status blue icon indicator incident history impact maintenance components container component inner container status blue component status components container component inner container status blue icon indicator color 3498db layout content status status index unresolved incident impact maintenance updates layout content status status index scheduled incidents container border color 3498db css greens css greens css greens css greens css greens css greens css greens layout content status status index page status status none background color 2fcc66 layout content status index components statuses component container status green status green icon indicator components container component inner container status green component status components container component inner container status green icon indicator color 2fcc66 css link color css link color css link color css link color css link color css link color hover layout content status index page footer span hover layout content status index timeframes container timeframe \\( active \\) hover layout content status incident subheader hover color 3498db flat button masthead updates dropdown container show updates dropdown layout content status full history show filter open background color 3498db availability legend availability time line legend legend item color aaaaaa opacity 0 8 availability time line legend legend item light color aaaaaa opacity 0 5 availability time line legend spacer background aaaaaa opacity 0 3 documentation outage incident report chargify resolved docs site restored posted 3 years ago apr 17 2014 15 24 cdt identified 've identified issue resulting failed deployment docs chargify io working expect resolved shortly posted 3 years ago apr 17 2014 15 22 cdt current status powered statuspage io subscribe incident", 
    "descr2": "welcome demo status page take tour x get email notifications whenever chargify creates updates incident get sms notifications whenever chargify creates resolves incident follow chargifystatus view profile twitter follow button margin bottom 6px visit support site get atom feed rss feed systems operational site get latest info chargify running 'll keep updated issues main application operational billing portal operational api operational chargify direct operational scheduled payment processing operational email sending operational documentation site \\? operational operational degraded performance partial outage major outage maintenance past incidents jun 17 2017 incidents reported today jun 16 2017 incidents reported jun 15 2017 incidents reported jun 14 2017 incidents reported jun 13 2017 incidents reported jun 12 2017 incidents reported jun 11 2017 incidents reported jun 10 2017 incidents reported jun 9 2017 incidents reported jun 8 2017 incidents reported jun 7 2017 incidents reported jun 6 2017 incidents reported jun 5 2017 incidents reported jun 4 2017 incidents reported jun 3 2017 incidents reported incident history powered statuspage", 
    "descr1": "body background body background body background body background body background body layout content status status api section example container example opener color secondary grouped items selector background color ffffff primary font color primary font color primary font color primary font color body status color primary color primary hover layout content status index status day update title impact none layout content status index status day update title impact none hover layout content status index timeframes container timeframe active layout content status full history month incident container impact none layout content status status index incidents list incident title impact none incident history impact none layout content status grouped items selector inline grouped item active layout content status status full history history nav current layout content status status full history history nav \\( current \\) hover color 333333 layout content status status index components statuses component container name color 333333 color rgba \\( 51 51 51 8 \\) secondary font color secondary font color secondary font color secondary font color small layout content status table row date color secondary layout content status grouped items selector inline grouped item layout content status status full history history footer pagination disabled layout content status status full history history nav color aaaaaa border color border color border color border color border color border color body status layout content status border color hr tooltip base markdown display table border color e0e0e0 markdown display table td border top color e0e0e0 markdown display table td td markdown display table th th border left color e0e0e0 css reds css reds css reds css reds css reds css reds css reds layout content status status index status day update title impact critical layout content status status index status day update title impact critical hover layout content status status index page status status critical layout content status status index unresolved incident impact critical incident title flat button background red background color e74c3c layout content status index components statuses component container status red layout content status full history month incident container impact critical layout content status incident incident name impact critical layout content status status index incidents list incident title impact critical status red icon indicator incident history impact critical components container component inner container status red component status components container component inner container status red icon indicator color e74c3c layout content status status index unresolved incident impact critical updates border color e74c3c css oranges css oranges css oranges css oranges css oranges css oranges layout content status status index status day update title impact major layout content status status index status day update title impact major hover layout content status status index page status status major layout content status status index unresolved incident impact major incident title background color e67e22 layout content status index components statuses component container status orange layout content status full history month incident container impact major layout content status incident incident name impact major layout content status status index incidents list incident title impact major status orange icon indicator incident history impact major components container component inner container status orange component status components container component inner container status orange icon indicator color e67e22 layout content status status index unresolved incident impact major updates border color e67e22 css yellows css yellows css yellows css yellows css yellows css yellows layout content status status index status day update title impact minor layout content status status index status day update title impact minor hover layout content status status index page status status minor layout content status status index unresolved incident impact minor incident title layout content status status index scheduled incidents container tab background color f1c40f layout content status index components statuses component container status yellow layout content status full history month incident container impact minor layout content status incident incident name impact minor layout content status status index incidents list incident title impact minor status yellow icon indicator incident history impact minor components container component inner container status yellow component status components container component inner container status yellow icon indicator color f1c40f layout content status status index unresolved incident impact minor updates layout content status status index scheduled incidents container border color f1c40f css blues css blues css blues css blues css blues css blues layout content status status index status day update title impact maintenance layout content status status index status day update title impact maintenance hover layout content status status index page status status maintenance layout content status status index unresolved incident impact maintenance incident title layout content status status index scheduled incidents container tab background color 3498db layout content status index components statuses component container status blue layout content status full history month incident container impact maintenance layout content status incident incident name impact maintenance layout content status status index incidents list incident title impact maintenance status blue icon indicator incident history impact maintenance components container component inner container status blue component status components container component inner container status blue icon indicator color 3498db layout content status status index unresolved incident impact maintenance updates layout content status status index scheduled incidents container border color 3498db css greens css greens css greens css greens css greens css greens css greens layout content status status index page status status none background color 2fcc66 layout content status index components statuses component container status green status green icon indicator components container component inner container status green component status components container component inner container status green icon indicator color 2fcc66 css link color css link color css link color css link color css link color css link color hover layout content status index page footer span hover layout content status index timeframes container timeframe \\( active \\) hover layout content status incident subheader hover color 3498db flat button masthead updates dropdown container show updates dropdown layout content status full history show filter open background color 3498db availability legend availability time line legend legend item color aaaaaa opacity 0 8 availability time line legend legend item light color aaaaaa opacity 0 5 availability time line legend spacer background aaaaaa opacity 0 3 returning documentation docs chargify com incident report chargify decided move documentation url back https docs chargify com 'll redirected automatically experience downtime posted 3 years ago may 19 2014 10 49 cdt current status powered statuspage io subscribe incident", 
    "crawled_date": "2017-06-10T13:59:47.744432"
  }, 
  "25": {
    "link4": "https://www.liqpay.com/en/doc", 
    "link1": "https://www.liqpay.com/ru/doc/checkout", 
    "api_url": "liqpay.com", 
    "link3": "https://www.liqpay.com/uk/doc/checkout", 
    "link2": "https://www.liqpay.com/en/faq", 
    "progweb_url": "https://www.programmableweb.com/api/liqpay", 
    "progweb_date": "10.31.2009", 
    "progweb_descr": "The LiqPAY API lets developers using their for managing payment and billing systems. Such as creating your custom payment system or an API for client authorization and identification using mobile phone.", 
    "api_name": "LiqPAY", 
    "progweb_cat": "Payments", 
    "descr4": "api ios aos sdk cms plugins ru uk en faq acquiring checkout 3 0 callback 3 0 pay payqr paysender paytoken paycash paytrack paylc paylc confirm hold hold completion subscribe unsubscribe bitcoin pay bitcoin refill bitcoin sale bitcoin p2p p2p p2p credit status refund auth data mpi errors reports reports compensation ticket verify 3ds verify otp verify invoices invoice send invoice bot invoice cancel partners shop create shop edit agent info user agent info merchant promo create ios oneclick aos oneclick", 
    "descr3": "api ios aos sdk cms plugins ru uk en faq acquiring checkout 3 0 callback 3 0 pay payqr paysender paytoken paycash paytrack paylc paylc confirm hold hold completion subscribe unsubscribe bitcoin pay bitcoin refill bitcoin sale bitcoin p2p p2p p2p credit status refund auth data mpi errors reports reports compensation ticket verify 3ds verify otp verify invoices invoice send invoice bot invoice cancel partners shop create shop edit agent info user agent info merchant promo create ios oneclick aos oneclick checkout 3 0 public liqpay client server www liqpay com html html post url https www liqpay com api 3 checkout data signature data base64 encode \\( json string \\) signature base64 encode \\( sha1 \\( private key data private key 1 \\) \\) request data signature bin bash public key 'your public key' private key 'your private key' json version 3 public key public key action pay amount 1 currency usd description description text order id order id 1 data besa64 encode result json string data \\( echo n json base64 \\) signature base64 encode result sha1 binary hash concatenate string private key data private key signature \\( echo n private key data private key openssl dgst binary sha1 base64 \\) echo data data echo signature signature data example eyaidmvyc2lvbiigoiazlcaichvibgljx2tlesigoiaiew91cl9wdwjsawnfa2v5iiwgimfjdglv biigoiaicgf5iiwgimftb3vudcigoiaxlcaiy3vycmvuy3kiidogilvtrcisicjkzxnjcmlwdglv biigoiaizgvzy3jpchrpb24gdgv4dcisicjvcmrlcl9pzcigoiaib3jkzxjfawrfmsigfq signature example qvjd5u9fg55pcx hdz6lzwtywci liqpay new liqpay \\( public key private key \\) html liqpay cnb form \\( array \\( 'action' 'pay' 'amount' '1' 'currency' 'usd' 'description' 'description text' 'order id' 'order id 1' 'version' '3' \\) \\) hashmap params new hashmap \\( \\) params put \\( action pay \\) params put \\( amount 1 \\) params put \\( currency usd \\) params put \\( description description text \\) params put \\( order id order id 1 \\) params put \\( version 3 \\) liqpay liqpay new liqpay \\( public key private key \\) string html liqpay cnb form \\( params \\) system println \\( html \\) liqpay liqpay \\( public key private key \\) html liqpay cnb form \\( action pay amount 1 currency usd description description text order id order id 1 version 3 \\) liqpay liqpay liqpay new \\( public key 'public key' private key 'private key' \\) html liqpay cnb form \\( action pay amount 1 currency usd description description text order id order id 1 version 3 \\) liqpay liqpay init \\( publickey privatekey \\) html liqpay cnb form \\( liqpay \\) var liqpay require \\( 'liqpay' \\) var liqpay new liqpay \\( public key private key \\) var html liqpay cnb form \\( 'action' 'pay' 'amount' '1' 'currency' 'usd' 'description' 'description text' 'order id' 'order id 1' 'version' '3' \\) liqpay liqpay new \\( public key private key \\) html liqpay cnb form \\( 'action' 'pay' 'amount' '1' 'currency' 'usd' 'description' 'description text' 'order id' 'order id 1' 'version' '3' \\) html form method post action https www liqpay com api 3 checkout accept charset utf 8 input type hidden name data value eyaidmvyc2lvbiigoiazlcaichvibgljx2tlesigoiaiew91cl9wdwjsawnfa2v5iiwgimfjdglv biigoiaicgf5iiwgimftb3vudcigoiaxlcaiy3vycmvuy3kiidogilvtrcisicjkzxnjcmlwdglv biigoiaizgvzy3jpchrpb24gdgv4dcisicjvcmrlcl9pzcigoiaib3jkzxjfawrfmsigfq input type hidden name signature value qvjd5u9fg55pcx hdz6lzwtywci input type image src static liqpay com buttons p1ru radius png form js div id liqpay checkout div script window liqpaycheckoutcallback function \\( \\) liqpaycheckout init \\( data eyaidmvyc2lvbiigoiazlcaichvibgljx2tlesigoiaiew91cl9wdwjsawnfa2v5iiwgimfjdglv biigoiaicgf5iiwgimftb3vudcigoiaxlcaiy3vycmvuy3kiidogilvtrcisicjkzxnjcmlwdglv biigoiaizgvzy3jpchrpb24gdgv4dcisicjvcmrlcl9pzcigoiaib3jkzxjfawrfmsigfq signature qvjd5u9fg55pcx hdz6lzwtywci embedto liqpay checkout mode embed embed popup \\) \\( liqpay callback function \\( data \\) console log \\( data status \\) console log \\( data \\) \\) \\( liqpay ready function \\( data \\) ready \\) \\( liqpay close function \\( data \\) close \\) script script src static liqpay com libjs checkout js async script", 
    "descr2": "usd 26 60 27 03 eur 28 60 29 15 rur 0 40 0 42 business personal developers log sign account import 1496327374877501 static css services css import 1496327374877501 static css faq media css frequently asked questions liqpay \\? liqpay web interface privatbank card holders mastercard visa around world pay goods services site well send money card card register liqpay \\? must go link www liqpay com 1 write mobile phone number 2 fill password sms received 3 fill personal information name address email done could send money accept payments website put invoices email need add card account cards already displayed account select main receive payments send payments card phone number \\? send money card phone number means liqpay web interface send payment need enter liqpay personal account using link https www liqpay com ru admin go send money option information instruction start accepting payments web site start accepting paynments web site need register shop liqpay 1 enter phone number 2 enter password sms received 3 go section business option shops press get internet acquring 4 enter information needed web site requisite details receive payments requisite details enter account card number privatbank ukrainian bank accoun number privatbank done use api liqpay settings start acceting payments web site registration shop chcked activated see shop details liqpay account section business option shops bank request company legal documents addition hereof noticed email entered shop registration information instruction questions regarding registration shop liqpay please contact online chat contact support via email support liqpay com payments tariffs liqpay \\? please see payments card card phone number using link bank charge additional fee card operatons merchants tariffs liqpay \\? commission outlet receipt money 2 75 payments made visa mastercard bank amount payments transfered merchant account excluding merchant commission within 1 working day need activate merchant \\? activation conditions merchant 1 \\) fully working site 100 2 \\) full description goods services site 3 \\) availability goods pricing 4 \\) ontact information performed conditions \\? period funds receive account store \\? privatbank account funds received 24 7 365 accounts banks funds received regulations bank need sign separate agreement receive payments \\? register store must accept rules legal offer contract link could accept payments online foreign currency \\? restriction regulated ukrainian law 'about payment systems money transfer ukraine' 05 04 2001 2346 iii countries connected internet acquiring liqpay \\? accept payments via internet acquiring liqpay merchants ukraine europe set liqpay payment api \\? liqpay offers merchants broad list public api payments acceptance use ready made html button section business option payment buttons set public api accept payments api public mark available use right shop registration liqpay activate api private mark please contact live chat support team via support liqpay com api documentation conduct test payment \\? personal account setting payment button switch test mode 'sandbox' using api accepting payments liq buy pass parameters sandbox value 1 read merchant id signature parameters indicated \\? merchant id unique setting public key shop liqpay example public key i33111011000 signature unique setting private key shop example signature 9ydlqkmsznmpbk6pihlplqrpqznxkcycn7coh7vm parameters viewed personal cabinet liqpay business section stores setting store cms plugins available liqpay \\? liqpay available cms following sites magento link documentation https github com liqpay plugin magento bitrix link documentation https github com liqpay sdk haskell oscommerce link documentation https github com liqpay plugin oscommerce opencart link documentation https github com liqpay plugin opencart prestashop link documentation https github com liqpay plugin prestashop example cms plugin setting site cms bitrix instruction cms oscommerce instruction cms opencart instruction technical documentation cms link safely use web interface liqpay \\? reliability liqpay certified godaddy secure web site verified visa mastercard securecode payments liqpay implemented within three stage scheme verification making transaction requested full card details payer \\( card number card expiry date code cvv \\) operation confirmed otp comes mobile phone use operation also confirmed using 3d secure learn possible one site implementat set personal merchants \\? yes possible must enclose agent agreement agency scheme work \\? 1 bank signs contract agent sub merchants 2 agent website connects sub merchants 3 client agent website choose goods service paying favor particular sub merchant 4 bank shall transfer refund directly account sub merchant 5 end month bank shall pay agent fee amount amount payment conducted card physical person favor sub merchants recharge account liqpay \\? opportunity recharge liqpay missing due decision nbu 378 use funds account liqpay lead connected card account make payment online store accept payments use bank card difference personal cabinet business \\? personal cabinet make transfers card phone number view payment history business cabinet connect merchant accept payments website view history payments merchant also issue invoice payment \\( invoice \\) put invoice payment product service \\? detailed instruction could individual receive payments liqpay \\? yes necessary checking site become familiar services products services may requested documents \\( certificates \\) permitting sale providing services products possible return payment \\? yes refund full amount payment even parcially refund available liqpay account also via api refund detailed instruction could delete card account \\? card deleted liqpay account could connect card issued another country account ukrainian phone number \\? country bank card issuer must coincide country mobile operator ask questions liqpay \\? questions liqpay ask online support project service \\( green button right \\) support liqpay com protected payment \\? protected payment guarantee safe payment internet shop liqpay checkout page company initiates protected payment well expiration period please pay attention purchasing information protected payment expiration date shown left side liqpay checkout page paying protected payment fuds automatically charged card control status protected payment liqpay personal account right payment terms settlement company 1 funds automatically transfered company upon expiration date n't confirm goods service received 2 confirm pressing button 'goods received' liqpay personal account funds automatically transfered company 3 n't confirm 'll create dispute case 'll request required documents company proving goods orservices fully provided dispute resolution 45 days 4 upon dispute resolution funds refunded transfered company find dispute status support team via chat online email support liqpay com want pay protection internet please ask company provide protected payment liqpay checkout page chugayster \\? lucky get 3 personalized offers partners liqpay checkout page purchasing internet shop personalized offers discounts vouchers certificates gifts specially designed successful payment liqpay checkout page show 'chugayster' widget list gifts gifts offered select one even partner 's offer contains unique promo code please save send email find terms promo code 'chugayster' widget partner 's website license 22 05 10 2011 en logos tariffs terms faq 2009 2017 liqpay", 
    "descr1": "api ios aos sdk cms plugins ru uk en faq acquiring checkout 3 0 callback 3 0 pay payqr paysender paytoken paycash paytrack paylc paylc confirm hold hold completion subscribe unsubscribe bitcoin pay bitcoin refill bitcoin sale bitcoin p2p p2p p2p credit status refund auth data mpi errors reports reports compensation ticket verify 3ds verify otp verify invoices invoice send invoice bot invoice cancel partners shop create shop edit agent info user agent info merchant promo create ios oneclick aos oneclick checkout 3 0 public liqpay client server www liqpay com html html post url https www liqpay com api 3 checkout data signature data base64 encode \\( json string \\) signature base64 encode \\( sha1 \\( private key data private key 1 \\) \\) request data signature bin bash public key 'your public key' private key 'your private key' json version 3 public key public key action pay amount 1 currency usd description description text order id order id 1 data besa64 encode result json string data \\( echo n json base64 \\) signature base64 encode result sha1 binary hash concatenate string private key data private key signature \\( echo n private key data private key openssl dgst binary sha1 base64 \\) echo data data echo signature signature data example eyaidmvyc2lvbiigoiazlcaichvibgljx2tlesigoiaiew91cl9wdwjsawnfa2v5iiwgimfjdglv biigoiaicgf5iiwgimftb3vudcigoiaxlcaiy3vycmvuy3kiidogilvtrcisicjkzxnjcmlwdglv biigoiaizgvzy3jpchrpb24gdgv4dcisicjvcmrlcl9pzcigoiaib3jkzxjfawrfmsigfq signature example qvjd5u9fg55pcx hdz6lzwtywci liqpay new liqpay \\( public key private key \\) html liqpay cnb form \\( array \\( 'action' 'pay' 'amount' '1' 'currency' 'usd' 'description' 'description text' 'order id' 'order id 1' 'version' '3' \\) \\) hashmap params new hashmap \\( \\) params put \\( action pay \\) params put \\( amount 1 \\) params put \\( currency usd \\) params put \\( description description text \\) params put \\( order id order id 1 \\) params put \\( version 3 \\) liqpay liqpay new liqpay \\( public key private key \\) string html liqpay cnb form \\( params \\) system println \\( html \\) liqpay liqpay \\( public key private key \\) html liqpay cnb form \\( action pay amount 1 currency usd description description text order id order id 1 version 3 \\) liqpay liqpay liqpay new \\( public key 'public key' private key 'private key' \\) html liqpay cnb form \\( action pay amount 1 currency usd description description text order id order id 1 version 3 \\) liqpay liqpay init \\( publickey privatekey \\) html liqpay cnb form \\( liqpay \\) var liqpay require \\( 'liqpay' \\) var liqpay new liqpay \\( public key private key \\) var html liqpay cnb form \\( 'action' 'pay' 'amount' '1' 'currency' 'usd' 'description' 'description text' 'order id' 'order id 1' 'version' '3' \\) liqpay liqpay new \\( public key private key \\) html liqpay cnb form \\( 'action' 'pay' 'amount' '1' 'currency' 'usd' 'description' 'description text' 'order id' 'order id 1' 'version' '3' \\) html form method post action https www liqpay com api 3 checkout accept charset utf 8 input type hidden name data value eyaidmvyc2lvbiigoiazlcaichvibgljx2tlesigoiaiew91cl9wdwjsawnfa2v5iiwgimfjdglv biigoiaicgf5iiwgimftb3vudcigoiaxlcaiy3vycmvuy3kiidogilvtrcisicjkzxnjcmlwdglv biigoiaizgvzy3jpchrpb24gdgv4dcisicjvcmrlcl9pzcigoiaib3jkzxjfawrfmsigfq input type hidden name signature value qvjd5u9fg55pcx hdz6lzwtywci input type image src static liqpay com buttons p1ru radius png form js div id liqpay checkout div script window liqpaycheckoutcallback function \\( \\) liqpaycheckout init \\( data eyaidmvyc2lvbiigoiazlcaichvibgljx2tlesigoiaiew91cl9wdwjsawnfa2v5iiwgimfjdglv biigoiaicgf5iiwgimftb3vudcigoiaxlcaiy3vycmvuy3kiidogilvtrcisicjkzxnjcmlwdglv biigoiaizgvzy3jpchrpb24gdgv4dcisicjvcmrlcl9pzcigoiaib3jkzxjfawrfmsigfq signature qvjd5u9fg55pcx hdz6lzwtywci embedto liqpay checkout mode embed embed popup \\) \\( liqpay callback function \\( data \\) console log \\( data status \\) console log \\( data \\) \\) \\( liqpay ready function \\( data \\) ready \\) \\( liqpay close function \\( data \\) close \\) script script src static liqpay com libjs checkout js async script", 
    "crawled_date": "2017-06-10T13:59:47.743334"
  }, 
  "26": {
    "link4": "https://docs.recurly.com/v1.0/docs/plans", 
    "link1": "https://dev.recurly.com/docs", 
    "api_url": "recurly.com", 
    "link3": "https://docs.recurly.com/docs", 
    "link2": "https://dev.recurly.com/", 
    "progweb_url": "https://www.programmableweb.com/api/recurly", 
    "progweb_date": "02.05.2010", 
    "progweb_descr": "The Recurly API provides a recurring subscription billing system for online businesses. It is available in REST architecture with JSON format, public key and token as authentication methods secured in SSL, and HTTP status codes. With the API, developers can integrate recurring billing features, including adjustments, invoices, plans, and subscriptions.", 
    "api_name": "Recurly", 
    "progweb_cat": "Payments,Billing", 
    "descr4": "loggedin false search token nmzlzju4nzcwogmznzvkngmyy2i4zmnhywjhmdi0ntq3zjdjowrkmwe3odi1zjbmztcwztzmyjnjyjmwnta5m3rhz0zpbhrlcnm9chjvamvjddo1njq1mgezndiymjlknze3mdaxmdkyogeskghpzgrlbjpub25llghpzgrlbjpmywxzzskskhzlcnnpb246bm9uzsx2zxjzaw9uoju2nduwytm0mjiyowq3mtcwmdewoti4zck filters tagfilters project 56450a342229d7170010928a \\( hidden none hidden false \\) \\( version none version 56450a342229d7170010928d \\) app t28ykfatpy modules landing false docs true examples true reference true blog true discuss false suggested edits true recurly documentationdocumentationdeveloper hubsupportcontactthe reference docs developer hubwelcome reference docs developer hub 'll find comprehensive guides documentation help start working reference docs quickly possible well support get stuck let 's jump right get started v1 0homedocumentationreferencereferenceannouncementssupportpage foundsearch state current \\( \\) params custompage documentationreferenceannouncements showtitle \\( \\) discardsave editssubmit suggested editssearch results search query results found search query guideguidereferenceannouncementsupportpageview resultsgetting started getting started recurly go live checklisthelp support frequently asked questions implementing recurly train team browser support powered recurly badge diy trainingsreference accountsshipping addresses countries provinces states billing models usage based billing subscriptions gift subscriptions invoices manual payments transactions adjustments charges credits analytics reporting \\( removed june 29 2017 \\) exports account acquisition data revenue recognition changelogconfiguration site settings plans add ons gift cards invoice settings coupons discountsbulk unique couponsmultiple coupons per account currencies taxeseuropean union vateu vat number validationtax location validation email templates renewal reminder trial ending emails payment gatewayspayment gateway merchant account overviewthe recurly gatewayadditional gatewayspaypal paymentsnew paypal featuresamazon payach bank paymentstest gatewayapple pay webadyen account updater hosted pageshosted payment pageshosted account management dunning management fraud management webhooks user management recurly account3rd party integrations partner integrations api keys recurly salesforcerecurly salesforce setuprecurly salesforce release notes quickbooks online integration avalara avatax pro netsuite integration kount fraud management mailchimpsecurity pci dss compliance pgp encryption two factor authenticationsupportrecent postschangelogarchiveapril 2016 \\( 1 \\) plans add onsa plan tells recurly often much charge customers plans created free trials optional products \\( called add ons \\) setup fees merchants create unlimited amount plans recurly site suggest edits dashboard plans dashboard contains list plans defined recurly account click plan name view detailed plan information edit plan link plan 's hosted payment page creating plan main plan page click new plan create new plan 'll need define following parameters plan name name describes plan appear hosted payment page subscriber 's invoice \\( 255 character limit \\) please note payment gateway may also place limitations subscription name may best avoid special characters without checking gateway provider plan code plan 's unique recurly identifier used hosted payment page urls fetch plans via api \\( alphanumeric characters 50 character limit \\) plan description description plan appear subscriber 's email invoice configured email templates \\( displayed default \\) accounting code value help identify plans internal invoice exports \\( lowercase alphanumeric characters 50 character limit \\) editable quantity \\? whether subscribers choose quantity billing cycles automatically terminate subscriptions defined number billing cycles charge base dollar amount charged plan 's subscribers billing interval frequency subscriber billed one time setup one time charge processed time sign free trial time subscriber allotted plan free definable days months paid subscription begin end trial period add ons optional products rolled recurring subscription 's invoice return url success recurly able successfully subscribe customer via hosted page redirect customer specific url use pass subscriber 's information e g return url cancel setting affects version 1 hosted payment page customer cancels subscription via hosted page recurly redirect customer specific url use pass subscriber 's information e g bypass recurly confirmation selected customer sent directly return url success upon success bypassing recurly 's hosted confirmation page add ons add charge billed billing period addition subscription base charge plan may one add ons associated define add ons creating editing plans subscribers use hosted payments pages view select available add ons api users specify add ons creating updating subscriptions add ons customized following properties add name describes add appear subscribers' invoices \\( 255 characters limit \\) add code identifies add recurly must unique per plan \\( 50 character limit \\) price amount bill add editable quantity \\? whether customer choose add quantity updating deleting plans editing plan change subscription terms new subscribers existing subscribers continue plan terms present time signup deleting plan prevent customers subscribing plan existing subscriptions continue renew setup fees setup fees one time transaction charged automatically beginning subscription billing cycle plans trial setup fee charged time signup setup fees increase quantity plan free trials plans optional trial period may specified days months paid subscription begin end trial period recurly processes new subscription request attempt charge full subscription price subscriptions without trial subscription trial recurly attempt validate credit card using 1 00 authorization \\( immediately void transaction \\) subscription canceled time end trial account charged subscription expire end trial otherwise subscription billed normally end trial free trials without billing information option plan level require require billing information plans free trials creating plan select trial length presented option configure plan require require billing information time sign plan must free trial order configure setting also edit existing plans free trials require billing information sign setup fees plan setup fee want require billing information free trial customer need either redeem coupon gift card credits cover total cost setup fee order bypass billing information step using free trial coupons free trial coupons redeemed plan however order bypass billing requirement subscription associated plan setting must configured require billing information free trial coupon redeemed plan requires billing information requirement enforced changing free trial settings editing subscription change trial setting requiring billing information requiring subsequent subscription sign ups respect new billing requirement setting future start date subscriptions free trials subscriptions respect billing setting place subscription activated example future start date subscription created require billing information plan setting changes require billing information subscription require billing information activation expire billing information present time renewal customer added billing information time subscription renewal subscription expire however case invoice renewal 0 \\( sufficient credits gift card credits cover cost invoice plan fee 0 00 \\) subscription renew without billing information trial ending email trial ending email allows automatically notify customers 3 days free trial ends \\( trial must greater 3 days order use email \\) unlike emails emails enabled per subscription plan basis checking respective send trial ending emails \\? checkbox creating editing plan enable email plan free trial billing information required send conditional version trial ending email based billing information present 3 days prior renewal billing information present text email body include information prompting user add billing information recommended enable email free trial plans require billing information sign wish use default template see customization subscriptions fields hosted payment page support use hosted pages able require require billing information subscriptions free trials checkout page still present billing information fields customers required provide billing information work provide better experience future hosted payment pages default every plan created inside recurly hosted payment page recurly hosted checkout page customers use purchase specific plan inspecting plan 's details page click view open plan 's hosted payment page please see hosted payment page documentation information configuring view table contents toc 1 table contents toc 1 media print webkit print color adjust exact print color adjust exact html body theme solid page docs wrapper container body container main content margin 0px 20px important padding 0 important header header header navbar brand navbar display block important background color 723080 important box shadow inset 0 0 0 1000px 723080 header header margin 0 auto 60px important header header h1 navbar brand width 178px important height 40px important display block important background url \\( https files readme io novlqxc0qhip1psgyw2y documentation png \\) repeat important background size contain important section left docs header nav display none important main content margin top 0px important padding top 0px important", 
    "descr3": "loggedin false search token nmzlzju4nzcwogmznzvkngmyy2i4zmnhywjhmdi0ntq3zjdjowrkmwe3odi1zjbmztcwztzmyjnjyjmwnta5m3rhz0zpbhrlcnm9chjvamvjddo1njq1mgezndiymjlknze3mdaxmdkyogeskghpzgrlbjpub25llghpzgrlbjpmywxzzskskhzlcnnpb246bm9uzsx2zxjzaw9uoju2nduwytm0mjiyowq3mtcwmdewoti4zck filters tagfilters project 56450a342229d7170010928a \\( hidden none hidden false \\) \\( version none version 56450a342229d7170010928d \\) app t28ykfatpy modules landing false docs true examples true reference true blog true discuss false suggested edits true recurly documentationdocumentationdeveloper hubsupportcontactthe reference docs developer hubwelcome reference docs developer hub 'll find comprehensive guides documentation help start working reference docs quickly possible well support get stuck let 's jump right get started v1 0homedocumentationreferencereferenceannouncementssupportpage foundsearch state current \\( \\) params custompage documentationreferenceannouncements showtitle \\( \\) discardsave editssubmit suggested editssearch results search query results found search query guideguidereferenceannouncementsupportpageview resultsgetting started getting started recurly go live checklisthelp support frequently asked questions implementing recurly train team browser support powered recurly badge diy trainingsreference accountsshipping addresses countries provinces states billing models usage based billing subscriptions gift subscriptions invoices manual payments transactions adjustments charges credits analytics reporting \\( removed june 29 2017 \\) exports account acquisition data revenue recognition changelogconfiguration site settings plans add ons gift cards invoice settings coupons discountsbulk unique couponsmultiple coupons per account currencies taxeseuropean union vateu vat number validationtax location validation email templates renewal reminder trial ending emails payment gatewayspayment gateway merchant account overviewthe recurly gatewayadditional gatewayspaypal paymentsnew paypal featuresamazon payach bank paymentstest gatewayapple pay webadyen account updater hosted pageshosted payment pageshosted account management dunning management fraud management webhooks user management recurly account3rd party integrations partner integrations api keys recurly salesforcerecurly salesforce setuprecurly salesforce release notes quickbooks online integration avalara avatax pro netsuite integration kount fraud management mailchimpsecurity pci dss compliance pgp encryption two factor authenticationsupportrecent postschangelogarchiveapril 2016 \\( 1 \\) getting started recurlythese pages serve guide set recurly account reference documentation working everything recurly offer suggest edits recurly delivers agile enterprise class subscription management thousands businesses worldwide whether 've integrated hosted payment pages recurly js embedded forms api documents help manage day day billing need assistance \\? 're stuck need additional assistance check support resources recurly support available 5 00am 5 00pm pacific time monday friday call staff available urgent weekend issues stackoverflow google group offer community supportwebinars help get speed learn featuresour resource center kinds great case studies white papers table contents toc 1 table contents toc 1 media print webkit print color adjust exact print color adjust exact html body theme solid page docs wrapper container body container main content margin 0px 20px important padding 0 important header header header navbar brand navbar display block important background color 723080 important box shadow inset 0 0 0 1000px 723080 header header margin 0 auto 60px important header header h1 navbar brand width 178px important height 40px important display block important background url \\( https files readme io novlqxc0qhip1psgyw2y documentation png \\) repeat important background size contain important section left docs header nav display none important main content margin top 0px important padding top 0px important", 
    "descr2": "recurly developer hub id 555fbba928249c1900618a82 name recurly developer hub subdomain recurly versions id 555fbba928249c1900618a85 releasedate 2015 05 22t23 28 41 830z deprecated false hidden true beta false stable false codename version clean 1 0 0 version 1 0 id 55c8bb66229b981900ed5f29 releasedate 2015 08 10t14 55 34 510z deprecated false hidden true beta false stable false codename version clean 2 0 0 aug10 version 2 0 aug10 id 55a94c1d02becf2d007aac7b releasedate 2015 07 17t18 40 29 953z deprecated false hidden true beta false stable false codename version clean 2 0 0 july17 version 2 0 july17 id 56130c94d2b2370d0096b8a7 releasedate 2015 10 05t23 49 40 584z deprecated false hidden true beta false stable false codename version clean 2 0 0 oct5 version 2 0 oct5 id 5595cb29d4c23b0d00adf6e3 releasedate 2015 07 02t23 37 13 529z deprecated false hidden false beta false stable false codename version clean 2 0 0 version 2 0 id 5788211e14b5952200e432a7 releasedate 2016 07 14t23 32 46 498z deprecated false hidden true beta false stable false codename 2016 07 14 version clean 2 1 0 2016 07 14 version 2 1 2016 07 14 id 56fd7e6b5a08190e00084f45 releasedate 2016 03 31t19 45 47 017z deprecated false hidden false beta false stable false codename version clean 2 1 0 version 2 1 id 578820ce14b5952200e4321a releasedate 2016 07 14t23 31 26 298z deprecated false hidden true beta false stable false codename version clean 2 2 0 2016 07 14 version 2 2 2016 07 14 id 57803084827bd50e006b0457 releasedate 2016 07 08t23 00 20 243z deprecated false hidden false beta false stable false codename version clean 2 2 0 version 2 2 id 57a22c2dd778850e0047e310 releasedate 2016 08 03t17 38 53 421z deprecated false hidden true beta false stable false codename 2016 08 03 version clean 2 3 0 2016 08 03 version 2 3 2016 08 03 id 578e7c59b434c30e0035bf25 releasedate 2016 07 19t19 15 37 356z deprecated false hidden false beta false stable false codename version clean 2 3 0 version 2 3 id 57a22c4bcd51b22d00f623a5 releasedate 2016 08 03t17 39 23 456z deprecated false hidden false beta false stable false codename version clean 2 4 0 version 2 4 id 5859a01eb32b9419009a9d5d releasedate 2016 12 20t21 18 22 764z deprecated false hidden false beta false stable false codename version clean 2 5 0 version 2 5 id 5919d93785b2570f00e41c39 releasedate 2017 05 15t16 37 11 228z deprecated false hidden false beta false stable true codename version clean 2 6 0 version 2 6 doc slug current version version clean 2 6 0 version 2 6 oauth enabled false api name url https subdomain recurly com v2 contenttype form auth basic explorer false proxyenabled true jwt false authextra headers id 55942ccc5c9eaa2300a862ac value application xml charset utf 8 key content type id 55942ccc5c9eaa2300a862ab value application xml key accept id 578e7bdb7d6eeb0e004fb788 value 2 4 key x api version object definitions apialt id 558209c4b806360d00244610 object definitions headers authextra jwt false proxyenabled true explorer true auth contenttype form url name new api settings plan details name business active true cost 199 versions 10000 custom domain true custom pages true whitelabel true errors true password true landing page true themebuilder true stylesheet true javascript true html true extra html true admins true apps true apps enabled false intercom intercom secure emailonly false flags allow hub2 false hub2 false migrationrun true oauth false swagger true correctnewlines false speedyrender true allowxframe true jwt false hidegoogleanalytics false stripe false autosslgeneration false ssl true asset base url v2 6 v v version latestbetaprivatedeprecatedview versionsdeveloper hubdocumentationsupportcontactjobsthe recurly developer hubwelcome recurly developer hub 'll find comprehensive guides documentation help start working recurly quickly possible well support get stuck let 's jump right get startedoverviewauthenticationapi versioningpaginationrate limitshttp status codesview 5integrationsintegrationswebhooks apicustomer importsview 3client librariesclient librariesphprubypython netiosandroidjava \\( unofficial \\) go \\( unofficial \\) node js \\( unofficial \\) view 10recurly jsrecurly js overviewhow worksgetting startedgetting tokenusing tokeneventspaypalpricingvalidationerrorsexamplessupportview 12accountsgetaccount objectgetlist accountspostcreate accountgetlookup accountputupdate accountdeleteclose accountputreopen accountgetlookup account balancegetlist account notesview 9shipping addressesgetlist account 's shipping addressgetlookup shipping addresspostcreate shipping addressputupdate shipping addressdeletedelete shipping addressview 5account acquisitionpostcreate account acquisitiongetlookup account acquisitionputupdate account acquisitiondeleteclear account acquisitionview 4adjustmentsgetadjustment objectgetlist account 's adjustmentspostcreate chargepostcreate creditgetlookup adjustmentdeletedelete adjustmentview 6billing infopostcreate account 's billing info \\( token \\) postcreate account 's billing info \\( credit card \\) postcreate account 's billing info \\( bank account \\) postcreate account 's billing info \\( external token \\) getlookup account 's billing infoputupdate account 's billing info \\( token \\) putupdate account 's billing info \\( credit card \\) putupdate account 's billing info \\( bank account \\) putupdate account 's billing info \\( using external token \\) deleteclear account 's billing infoview 10couponsgetlist couponspostcreate coupongetlookup couponpostgenerate unique codesdeleteexpire couponputedit couponputrestore coupongetlist unique coupon codesview 8coupon redemptionsgetcoupon redemption objectgetlist account 's coupon redemptionsgetlist invoice 's coupon redemptionsgetlist subscription 's coupon redemptionpostredeem coupon accountdeleteremove coupon redemption accountview 6gift cardsgetgift card objectgetlist gift cardspostpreview gift cardpostcreate gift cardgetlookup gift cardpostredeem gift card accountpostpreview subscription gift card redemptionpostcreate subscription gift card redemptionview 8invoicesgetlist invoicesgetlist account 's invoicespostpreview invoicepostpost invoice invoice pending charges accountgetlookup invoicegetretrieve pdf invoiceputmark invoice paid successfullyputmark invoice failed collectionpostrefund void line itemspostrefund void open amountpostenter offline payment manual invoiceputcollect invoiceview 12plansgetlist planspostcreate plangetlookup planputupdate plandeletedelete planview 5plan add onsgetplan add objectgetlist plan 's add onspostcreate plan add ongetlookup plan add onputupdate plan add ondeletedelete plan add onview 6measured unitsgetmeasured unit objectgetlist measured unitspostcreate measured unitgetlookup measured unitputupdate measured unitdeletedelete measured unitview 6subscriptionsgetlist subscriptionsgetlist account 's subscriptionspostpreview subscriptionpostcreate subscriptionpostcreate subscription add onsgetlookup subscriptionpostpreview subscription changeputupdate subscriptionputupdate subscription add onsputupdate subscription notesputcancel subscriptionputreactivate canceled subscriptionputterminate subscriptionputpostpone subscription extend trialview 14subscription usage recordsgetusage record objectgetlist subscription add 's usagepostlog usagegetlookup usage recordputupdate usage recorddeletedelete usage recordview 6transactionsgettransaction objectgetlist transactionsgetlist account 's transactionspostcreate transactiongetlookup transactiondeleterefund transaction \\( deprecated \\) transaction errorsview 7automated exportsgetlist export datesgetlist date 's export filesgetdownload export fileview 3purchasespostcreate purchasepostpreview purchaseview 2", 
    "descr1": "recurly developer hub id 555fbba928249c1900618a82 name recurly developer hub subdomain recurly versions id 555fbba928249c1900618a85 releasedate 2015 05 22t23 28 41 830z deprecated false hidden true beta false stable false codename version clean 1 0 0 version 1 0 id 55c8bb66229b981900ed5f29 releasedate 2015 08 10t14 55 34 510z deprecated false hidden true beta false stable false codename version clean 2 0 0 aug10 version 2 0 aug10 id 55a94c1d02becf2d007aac7b releasedate 2015 07 17t18 40 29 953z deprecated false hidden true beta false stable false codename version clean 2 0 0 july17 version 2 0 july17 id 56130c94d2b2370d0096b8a7 releasedate 2015 10 05t23 49 40 584z deprecated false hidden true beta false stable false codename version clean 2 0 0 oct5 version 2 0 oct5 id 5595cb29d4c23b0d00adf6e3 releasedate 2015 07 02t23 37 13 529z deprecated false hidden false beta false stable false codename version clean 2 0 0 version 2 0 id 5788211e14b5952200e432a7 releasedate 2016 07 14t23 32 46 498z deprecated false hidden true beta false stable false codename 2016 07 14 version clean 2 1 0 2016 07 14 version 2 1 2016 07 14 id 56fd7e6b5a08190e00084f45 releasedate 2016 03 31t19 45 47 017z deprecated false hidden false beta false stable false codename version clean 2 1 0 version 2 1 id 578820ce14b5952200e4321a releasedate 2016 07 14t23 31 26 298z deprecated false hidden true beta false stable false codename version clean 2 2 0 2016 07 14 version 2 2 2016 07 14 id 57803084827bd50e006b0457 releasedate 2016 07 08t23 00 20 243z deprecated false hidden false beta false stable false codename version clean 2 2 0 version 2 2 id 57a22c2dd778850e0047e310 releasedate 2016 08 03t17 38 53 421z deprecated false hidden true beta false stable false codename 2016 08 03 version clean 2 3 0 2016 08 03 version 2 3 2016 08 03 id 578e7c59b434c30e0035bf25 releasedate 2016 07 19t19 15 37 356z deprecated false hidden false beta false stable false codename version clean 2 3 0 version 2 3 id 57a22c4bcd51b22d00f623a5 releasedate 2016 08 03t17 39 23 456z deprecated false hidden false beta false stable false codename version clean 2 4 0 version 2 4 id 5859a01eb32b9419009a9d5d releasedate 2016 12 20t21 18 22 764z deprecated false hidden false beta false stable false codename version clean 2 5 0 version 2 5 id 5919d93785b2570f00e41c39 releasedate 2017 05 15t16 37 11 228z deprecated false hidden false beta false stable true codename version clean 2 6 0 version 2 6 doc slug current version version clean 2 6 0 version 2 6 oauth enabled false api name url https subdomain recurly com v2 contenttype form auth basic explorer false proxyenabled true jwt false authextra headers id 55942ccc5c9eaa2300a862ac value application xml charset utf 8 key content type id 55942ccc5c9eaa2300a862ab value application xml key accept id 578e7bdb7d6eeb0e004fb788 value 2 4 key x api version object definitions apialt id 558209c4b806360d00244610 object definitions headers authextra jwt false proxyenabled true explorer true auth contenttype form url name new api settings plan details name business active true cost 199 versions 10000 custom domain true custom pages true whitelabel true errors true password true landing page true themebuilder true stylesheet true javascript true html true extra html true admins true apps true apps enabled false intercom intercom secure emailonly false flags allow hub2 false hub2 false migrationrun true oauth false swagger true correctnewlines false speedyrender true allowxframe true jwt false hidegoogleanalytics false stripe false autosslgeneration false ssl true asset base url v2 6 v v version latestbetaprivatedeprecatedview versionsdeveloper hubdocumentationsupportcontactjobsoverviewauthenticationapi versioningpaginationrate limitshttp status codesintegrationsintegrationswebhooks apicustomer importsclient librariesclient librariesphprubypython netiosandroidjava \\( unofficial \\) go \\( unofficial \\) node js \\( unofficial \\) recurly jsrecurly js overviewhow worksgetting startedgetting tokenusing tokeneventspaypalpricingvalidationerrorsexamplessupportaccountsgetaccount objectgetlist accountspostcreate accountgetlookup accountputupdate accountdeleteclose accountputreopen accountgetlookup account balancegetlist account notesshipping addressesgetlist account 's shipping addressgetlookup shipping addresspostcreate shipping addressputupdate shipping addressdeletedelete shipping addressaccount acquisitionpostcreate account acquisitiongetlookup account acquisitionputupdate account acquisitiondeleteclear account acquisitionadjustmentsgetadjustment objectgetlist account 's adjustmentspostcreate chargepostcreate creditgetlookup adjustmentdeletedelete adjustmentbilling infopostcreate account 's billing info \\( token \\) postcreate account 's billing info \\( credit card \\) postcreate account 's billing info \\( bank account \\) postcreate account 's billing info \\( external token \\) getlookup account 's billing infoputupdate account 's billing info \\( token \\) putupdate account 's billing info \\( credit card \\) putupdate account 's billing info \\( bank account \\) putupdate account 's billing info \\( using external token \\) deleteclear account 's billing infocouponsgetlist couponspostcreate coupongetlookup couponpostgenerate unique codesdeleteexpire couponputedit couponputrestore coupongetlist unique coupon codescoupon redemptionsgetcoupon redemption objectgetlist account 's coupon redemptionsgetlist invoice 's coupon redemptionsgetlist subscription 's coupon redemptionpostredeem coupon accountdeleteremove coupon redemption accountgift cardsgetgift card objectgetlist gift cardspostpreview gift cardpostcreate gift cardgetlookup gift cardpostredeem gift card accountpostpreview subscription gift card redemptionpostcreate subscription gift card redemptioninvoicesgetlist invoicesgetlist account 's invoicespostpreview invoicepostpost invoice invoice pending charges accountgetlookup invoicegetretrieve pdf invoiceputmark invoice paid successfullyputmark invoice failed collectionpostrefund void line itemspostrefund void open amountpostenter offline payment manual invoiceputcollect invoiceplansgetlist planspostcreate plangetlookup planputupdate plandeletedelete planplan add onsgetplan add objectgetlist plan 's add onspostcreate plan add ongetlookup plan add onputupdate plan add ondeletedelete plan add onmeasured unitsgetmeasured unit objectgetlist measured unitspostcreate measured unitgetlookup measured unitputupdate measured unitdeletedelete measured unitsubscriptionsgetlist subscriptionsgetlist account 's subscriptionspostpreview subscriptionpostcreate subscriptionpostcreate subscription add onsgetlookup subscriptionpostpreview subscription changeputupdate subscriptionputupdate subscription add onsputupdate subscription notesputcancel subscriptionputreactivate canceled subscriptionputterminate subscriptionputpostpone subscription extend trialsubscription usage recordsgetusage record objectgetlist subscription add 's usagepostlog usagegetlookup usage recordputupdate usage recorddeletedelete usage recordtransactionsgettransaction objectgetlist transactionsgetlist account 's transactionspostcreate transactiongetlookup transactiondeleterefund transaction \\( deprecated \\) transaction errorsautomated exportsgetlist export datesgetlist date 's export filesgetdownload export filepurchasespostcreate purchasepostpreview purchase id 5919d94085b2570f00e41cb8 category 5919d93885b2570f00e41c3a next pages description order 0 type basic isreference false link external false user 5564a0073a61a72f0067cb22 v 0 createdat 2015 06 10t22 06 37 745z hidden false api results codes settings auth required params url link url project 555fbba928249c1900618a82 title authentication slug getting started sync unique updates 5595c7e9f44370190028891c 562aa244ed4bea0d00c11d8b 56bb4e10dabd992100b674f7 56f19a949791b22d0077ba0f version 5919d93785b2570f00e41c39 body block api header n n type basic n title api authentication \\( http basic \\) n n block nrecurly uses http basic authentication private api key \\( https app recurly com go developer api access \\) securely encrypted ssl channel n nif testing api calls via command line curl try n n``` ncurl h 'accept application xml' n h 'x api version 2 6' n h 'content type application xml charset utf 8' n u apikey n https subdomain recurly com v2 accounts n``` n nreplace ` apikey ` ` subdomain ` appropriate values site n block api header n n type basic n title calculating authorization header n n block nmost programming languages encode authorization header automatically http basic authentication `authorization` header string containing base 64 encoded username password case recurly api need specify username api key library requires password set empty string n n``` n authorization basic base64 encode \\( api key \\) n``` n n block api header n n type basic n title additional request headers n n block n accept header nrecurly api v2 returns results xml requests always include header requesting results xml n n``` naccept application xml n``` n n content type header nwhen sending data recurly post put request request must specify content type request n n``` ncontent type application xml charset utf 8 n``` n n x api version header nwhen sending data recurly request specify api version 're attempting interact n``` nx api version 2 6 n``` nyou learn different versions api versioning \\( doc versioning \\) section n block callout n n type info n title acceptable api versions n body recurly supports following api versions 2 0 \\( https dev recurly com v2 0 docs \\) 2 1 \\( https dev recurly com v2 1 docs \\) 2 2 \\( https dev recurly com v2 2 docs \\) 2 3 \\( https dev recurly com v2 3 docs \\) 2 4 \\( https dev recurly com v2 4 docs \\) 2 5 \\( https dev recurly com v2 5 docs \\) 2 6 \\( https dev recurly com v2 6 docs \\) n n block n n block api header n n type basic n title public api key n n block nrecurly uses two types api keys public private public api key used recurly js \\( doc recurlyjs \\) identify requests belonging recurly site key safely included javascript code n nrecurly provides site one public key public api key regenerated api credentials \\( https app recurly com go developer api access \\) page n block api header n n type basic n title private api keys n n block n n block callout n n type danger n title treat private api keys like passwords n body api key allows access site 's data include javascript code exposed browsers n n block nrecurly supports use multiple private api keys used integrate third party services using unique controlled credentials n n limits pricing nmerchants core grandfathered recurly plans merchants sandbox mode granted 5 private api keys merchants recurly professional plan granted 10 private api keys n n default key nyour default private api key used integrate recurly backend systems least one key active times n n additional keys nadditional private api keys used connect recurly data additional sources like analytics software accounting packages email tools recurly recommends clearly labeling name key identify associated vendor n n regenerating private api keys nyour api key regenerated clicking regenerate button api credentials \\( https app recurly com go developer api access \\) page generate private api key two options n n1 block old key immediately primarily recommended security key compromised n2 allow old key access 12 hours primarily used updating systems smooth transition keys needed n n private api key changed email alert sent recurly site technical contact n n read keys nwhen creating private key option set key read means api key may make get requests cannot put post delete requests excerpt githubsync parentdoc null childrenpages authentication api authentication \\( http basic \\) recurly uses http basic authentication private api key securely encrypted ssl channel testing api calls via command line curl try replace appropriate values site calculating authorization header programming languages encode authorization header automatically http basic authentication header string containing base 64 encoded username password case recurly api need specify username api key library requires password set empty string additional request headers accept header recurly api v2 returns results xml requests always include header requesting results xml content type header sending data recurly post put request request must specify content type request x api version header sending data recurly request specify api version 're attempting interact learn different versions api versioning section acceptable api versions recurly supports following api versions 2 0 2 1 2 2 2 3 2 4 2 5 2 6 public api key recurly uses two types api keys public private public api key used recurly js identify requests belonging recurly site key safely included javascript code recurly provides site one public key public api key regenerated api credentials page private api keys treat private api keys like passwords api key allows access site 's data include javascript code exposed browsers recurly supports use multiple private api keys used integrate third party services using unique controlled credentials limits pricing merchants core grandfathered recurly plans merchants sandbox mode granted 5 private api keys merchants recurly professional plan granted 10 private api keys default key default private api key used integrate recurly backend systems least one key active times additional keys additional private api keys used connect recurly data additional sources like analytics software accounting packages email tools recurly recommends clearly labeling name key identify associated vendor regenerating private api keys api key regenerated clicking regenerate button api credentials page generate private api key two options block old key immediately primarily recommended security key compromised allow old key access 12 hours primarily used updating systems smooth transition keys needed private api key changed email alert sent recurly site technical contact read keys creating private key option set key read means api key may make get requests cannot put post delete requests edit pagesuggest editsget accountsget accountspost accountsget accounts account codeput accounts account codedelete accounts account codeput accounts account code reopenget accounts account code balanceget accounts account code notesget accounts account code shipping addressesget accounts account code shipping addresses shipping address idpost accounts account code shipping addressesput accounts account code shipping addresses shipping address iddelete accounts account code shipping addresses shipping address idpost accounts account code acquisitionget accounts account code acquisitionput accounts account code acquisitiondelete accounts account code acquisitionget adjustmentsget accounts account code adjustmentspost accounts account code adjustmentspost accounts account code adjustmentsget adjustments uuiddelete adjustments uuidpost accounts account code billing infopost accounts account code billing infopost accounts account code billing infopost accounts account code billing infoget accounts account code billing infoput accounts account code billing infoput accounts account code billing infoput accounts account code billing infoput accounts account code billing infodelete accounts account code billing infoget couponspost couponsget coupons coupon codepost coupons coupon code generatedelete coupons coupon codeput coupons coupon codeput coupons coupon code restoreget coupons coupon code unique coupon codesget accounts account code redemptions redemption uuidget accounts account code redemptionsget invoices invoice number redemptionsget subscriptions uuid redemptionspost coupons coupon code redeemdelete accounts account code redemptions uuidget gift cardsget gift cardspost gift cards previewpost gift cardsget gift cards idpost gift cards redemption code redeempost subscriptions previewpost subscriptionsget invoicesget accounts account code invoicespost accounts account code invoices previewpost accounts account code invoicesget invoices invoice numberget invoices invoice numberput invoices invoice number mark successfulput invoices invoice number mark failedpost invoices invoice number refundpost invoices invoice number refundpost invoices invoice number transactionsput invoices invoice number collectget planspost plansget plans plan codeput plans plan codedelete plans plan codeget plans plan code add onsget plans plan code add onspost plans plan code add onsget plans plan code add ons add codeput plans plan code add ons add codedelete plans plan code add ons add codeget measured unitsget measured unitspost measured unitsget measured units measured unit idput measured units measured unit iddelete measured units measured units idget subscriptionsget accounts account code subscriptionspost subscriptions previewpost subscriptionspost subscriptionsget subscriptions uuidpost subscriptions uuid previewput subscriptions uuidput subscriptions uuidput subscriptions uuid notesput subscriptions uuid cancelput subscriptions uuid reactivateput subscriptions uuid terminate \\? refund refund type charge booleanput subscriptions uuid postpone \\? next renewal date next renewal date bulk bulkget subscriptions subscription uuid add ons add code usageget subscriptions subscription uuid add ons add code usage \\? query param valuepost subscriptions subscription uuid add ons add code usageget subscriptions subscription uuid add ons add code usage usage idput subscriptions subscription uuid add ons add code usage usage iddelete subscriptions subscription uuid add ons add code usage usage idget transactions uuidget transactionsget accounts account code transactionspost transactionsget transactions uuiddelete transactions uuidget export datesget export dates date export filesget export dates date export files file namepost purchasespost purchases previewview 116 endpoints id 5919d94085b2570f00e41cb9 user 559d85d26b21311700fb0b7b body recurly strives provide developers stable apis integrate still able provide new expanded functionality balance two goals provide different api versions add new features latest version api allows choose best time update integration take advantage new features n nrecurly offers following api versions 2 6 \\( https dev recurly com v2 6 docs \\) 2 5 \\( https dev recurly com v2 5 docs \\) 2 4 \\( https dev recurly com v2 4 docs \\) 2 3 \\( https dev recurly com v2 3 docs \\) 2 2 \\( https dev recurly com v2 2 docs \\) 2 1 \\( https dev recurly com v2 1 docs \\) 2 0 \\( https dev recurly com v2 0 docs \\) n n requesting version n nwhen making requests recurly request specify desired api version using `x api version` header n``` nx api version 2 6 n``` nfor backwards compatibility version specified default 2 0 n n deprecation n nto signal api version deprecated removed future recurly respond following headers n``` nrecurly deprecated true nrecurly sunset date 2018 06 01t00 00 00 00 00 n``` nthe sunset date iso 8601 date time version longer accessible n nyour integration check headers make updates timely fashion n n changes v2 6 n nroute changes n nrequest response changes n n changed plan request response n added ` trial requires billing info ` element n changed subscription response n added ` billing info reason ` element n added `post v2 purchases` n added `post v2 purchases preview` n changed subscription behavior n `post v2 subscriptions` n sending null `total billing cycles` attribute n override plan `total billing cycles` setting n make subscription renew forever omitting n attribute cause setting default n value plan `total billing cycles` n na complete list changes versions available api release notes \\( https dev recurly com page api release notes \\) page category 5919d93885b2570f00e41c3a hidden false slug versioning type basic api params url results codes status 200 language json code name status 400 language json code name settings auth required excerpt githubsync link external false parentdoc null sync unique title api versioning next pages description order 1 project 555fbba928249c1900618a82 v 0 createdat 2016 07 18t22 26 12 882z isreference false link url updates version 5919d93785b2570f00e41c39 childrenpages api versioning recurly strives provide developers stable apis integrate still able provide new expanded functionality balance two goals provide different api versions add new features latest version api allows choose best time update integration take advantage new features recurly offers following api versions 2 6 2 5 2 4 2 3 2 2 2 1 2 0 requesting version making requests recurly request specify desired api version using header backwards compatibility version specified default 2 0 deprecation signal api version deprecated removed future recurly respond following headers sunset date iso 8601 date time version longer accessible integration check headers make updates timely fashion changes v2 6 route changes request response changes changed plan request response added element changed subscription response added element added added changed subscription behavior sending null attributewill override plan settingand make subscription renew forever omittingthe attribute cause setting default tothe value plan complete list changes versions available api release notes page edit pagesuggest edits id 5919d94085b2570f00e41cba version 5919d93785b2570f00e41c39 v 0 api results codes status 200 language json code name code name status 400 language json settings auth required params url isreference false order 2 updates type basic excerpt githubsync next pages description parentdoc null project 555fbba928249c1900618a82 category 5919d93885b2570f00e41c3a slug pagination sync unique title pagination link url user 55648cf93b87582b003ab8b1 body block api header n n type basic n title number records n n block nendpoints return list resources include header indicating total number records available specified `x records` header e g endpoint 14 records n n``` nx records 14 n``` n block api header n n type basic n title next link n n block nthe amount records returns within single api request defaults 50 may changed maximum 200 using `per page` query parameter e g return 200 accounts time n n``` nhttps subdomain recurly com v2 accounts \\? per page 200 n``` n nwhen records remaining fit current response `link` header specified uri next page results n n``` nstatus 200 ok nx records 204 nlink https subdomain recurly com v2 accounts \\? cursor 1972702718353176814 3a1465932489 rel next netag a4b0568a2278bc591ceb64b31547eb78 n``` n nthe `cursor` parameter time based pointer indicating resume results using cursor instead page numbers api avoids returning duplicate records case additional resources added pagination requests n block api header n n type basic n title sorting filtering n n block n many endpoints support advanced pagination parameters n n `sort` string attribute used order records `created at` `updated at` defaults `created at` n `order` string order products returned `asc` ascending order `desc` descending order defaults `desc` n `begin time` datetime operates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time n `end time` datetime operates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time n nreview parameters endpoint details n block callout n n type info n body account updated `2016 01 19` `2016 03 23` would returned request `sort updated end time 2016 03 01` n title updated really means last updated n n block n n block api header n n type basic n title examples n n block nthis return accounts created 2016 01 01 0 00 utc descending order creation date n``` nhttps subdomain recurly com v2 accounts \\? sort created order desc end time 2016 01 01 n``` n nthis return accounts last updated 2016 07 01 10 30 01 mountain daylight time ascending order updated date n n``` nhttps subdomain recurly com v2 accounts \\? sort updated order asc begin time 2016 07 01t10 30 01 06 00 n``` n block callout n n type warning n body 's important aware paging records sorted `updated at` value order change modified n ascending order changes records previous pages cause move back end list meaning may see multiple times avoided using time pagination starts `end time` n descending order changes records later pages cause move beginning list meaning would miss results n title beware changes records sorting updated n n block n n block code n n codes n n code \\? php n accessing sub resource many one relation n parent model attribute returns recurly stub n example take account invoices n n account recurly account get \\( 'my account code' \\) n n calling invoices returns stub allows lazily loading list n invoices account invoices n nprint invoices n recurly stub invoices href https api recurly com v2 accounts account code invoices n n n prior 2 5 0 calling get \\( \\) would return first page n results 2 5 0 later results returned n nforeach \\( invoices get \\( \\) inv \\) n print inv invoice number n n n n n creating list object directly also allow iterate n pages n n invoices recurly invoicelist getforaccount \\( 'my account code' \\) n n prints invoices account nforeach \\( invoices inv \\) n print inv invoice number n n n n language php n gist 44632c432dce4f56a0fa n n n code accessing sub resource many one relation n parent model attribute returns recurly resource pager n example take account invoices n naccount recurly account find \\( 'my account code' \\) n nputs account invoices class n recurly resource pager n n pager used iterate given page naccount invoices invoice n puts invoice invoice number nend n n default page size 50 items wish page n use pager find find continues fetch pages n none left naccount invoices find invoice n puts invoice invoice number nend n n also create pager directly resource nputs recurly invoice paginate class n recurly resource pager n n paginate takes options nrecurly invoice paginate \\( per page 10 \\) invoice n puts invoice invoice number nend n n also use find directly resource nrecurly invoice find \\( per page 10 \\) invoice n puts invoice invoice number nend n n language ruby n n n code accessing sub resource many one relation n parent model attribute returns `relatiator` function n called returns recurly resource page n example take account invoices n naccount recurly account get \\( 'tester' \\) n nprint account invoices n function relatitator 0x1023628c0 n nprint account invoices \\( \\) class n class 'recurly resource page' n n page every invoice account nfor invoice account invoices \\( \\) n print invoice invoice number n n also call \\( \\) method n resource page every resource n site instance page n every invoice nfor invoice recurly invoice \\( \\) n print invoice invoice number n language python n name null n n n code using system linq n nvar accounts accounts list \\( \\) nwhile \\( accounts \\( \\) \\) n n foreach \\( var account accounts \\) n console writeline \\( account \\) n accounts accounts next n n language csharp n n n n block n n block callout n n type warning n body php `recurly pager` class sets iterator across relevant records provide pagination functionality default n title php pagination n n block createdat 2015 06 15t22 48 39 567z hidden false link external false childrenpages pagination number records endpoints return list resources include header indicating total number records available specified header e g endpoint 14 records next link amount records returns within single api request defaults 50 may changed maximum 200 using query parameter e g return 200 accounts time records remaining fit current response header specified uri next page results parameter time based pointer indicating resume results using cursor instead page numbers api avoids returning duplicate records case additional resources added pagination requests sorting filtering many endpoints support advanced pagination parameters string attribute used order records defaults string order products returned ascending order descending order defaults datetime operates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time datetime operates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time review parameters endpoint details updated really means last updated account updated would returned request examples return accounts created 2016 01 01 0 00 utc descending order creation date return accounts last updated 2016 07 01 10 30 01 mountain daylight time ascending order updated date beware changes records sorting updated 's important aware paging records sorted value order change modified ascending order changes records previous pages cause move back end list meaning may see multiple times avoided using time pagination starts descending order changes records later pages cause move beginning list meaning would miss results php ruby python c php pagination php class sets iterator across relevant records provide pagination functionality default edit pagesuggest edits id 5919d94085b2570f00e41cbb githubsync isreference false link url title rate limits version 5919d93785b2570f00e41c39 updates body order provide fast response time customers may rate limit excessive requests default new recurly sites following api rate limits n n sandbox sites 400 requests min requests count towards rate limit n production sites 1 000 requests min get head requests count towards rate limit n nonce site moves production mode recurly rate limit get head requests new subscriptions account modifications requests using post put delete methods count rate limit n nthe rate limit calculated sliding 5 minute window means production site could make 4 000 requests within one minute hit rate limit long site made less 1 000 requests prior 4 minutes n nwhen site reaches rate limit site technical contact receive email alerting issue email sent every three hours support team also notified please reach recurly support need assistance resolving issue n nif api request exceeds rate limit api returns 429 status code indicating `too many requests` business needs higher limit please contact support n block api header n n type basic n title http headers n n block nevery authenticated api request returns headers current rate limit information requests rate limit headers may look like n n``` nx ratelimit limit 5000 nx ratelimit remaining 4999 nx ratelimit reset 1414622019 n``` n nthe `x ratelimit limit` total request limit 5 minute window \\( e g requests min 5 min \\) `x ratelimit remaining` indicates number requests remaining requests denied finally `x ratelimit reset` header contains timestamp current window completely reset assuming api requests made category 5919d93885b2570f00e41c3a excerpt link external false order 3 type basic createdat 2015 06 15t22 49 59 038z parentdoc null project 555fbba928249c1900618a82 sync unique user 55648cf93b87582b003ab8b1 v 0 api url results codes status 200 language json code name status 400 language json code name settings auth required params hidden false next pages description slug rate limits childrenpages rate limits order provide fast response time customers may rate limit excessive requests default new recurly sites following api rate limits sandbox sites 400 requests min requests count towards rate limit production sites 1 000 requests min get head requests count towards rate limit site moves production mode recurly rate limit get head requests new subscriptions account modifications requests using post put delete methods count rate limit rate limit calculated sliding 5 minute window means production site could make 4 000 requests within one minute hit rate limit long site made less 1 000 requests prior 4 minutes site reaches rate limit site technical contact receive email alerting issue email sent every three hours support team also notified please reach recurly support need assistance resolving issue api request exceeds rate limit api returns 429 status code indicating business needs higher limit please contact support http headers every authenticated api request returns headers current rate limit information requests rate limit headers may look like total request limit 5 minute window \\( e g requests min 5 min \\) indicates number requests remaining requests denied finally header contains timestamp current window completely reset assuming api requests made edit pagesuggest edits id 5919d94085b2570f00e41cbc parentdoc null type basic updates 56cd46e949abf10b0036a1e6 createdat 2015 06 10t22 06 26 211z hidden false link external false order 4 v 0 slug welcome sync unique user 5564a0073a61a72f0067cb22 link url project 555fbba928249c1900618a82 api results codes status 200 language json code name status 400 language json code name settings auth required params url excerpt every request includes http status code result status code examined response error cases response body contain errors xml document details githubsync isreference false title http status codes version 5919d93785b2570f00e41c39 body successful status codes \\( 2xx \\) n`200 ok` nthe request successful n`201 created` nthe resource successfully created confirms success creating new account credit subscription etc n`204 content` nthe request successful response body n n client error status codes \\( 4xx \\) n`400 bad request` nthe request invalid could understood server resubmitting request likely result error commonly occurs xml invalid e g ampersands correctly encoded text request please inspect body response details regarding error n`401 unauthorized` nyour api key missing invalid n`402 payment required` nyour recurly account production mode good standing please pay outstanding invoices n`403 forbidden` nthe login attempting perform action privileges access verify login credentials appropriate account n`404 found` nthe resource found given identifier response body explain resource found n`405 method allowed` nthe requested method valid given url n`406 acceptable` nthe request 's accept header set application xml n`412 precondition failed` nthe request unsuccessful condition met example message may returned attempt cancel subscription account subscription n`422 unprocessable entity` ncould process post put request request invalid see response body details n`429 many requests` nyou made many api requests last hour future api requests ignored beginning next hour n n server error status codes \\( 5xx \\) n`500 internal server error` nthe server encountered error processing request failed n`502 gateway error` nthe load balancer web server trouble connecting recurly app please try request n`503 service unavailable` nthe service temporarily unavailable please try request n n future compatibility nfor future compatibility please interpret following status code ranges n n 200 299 success n 400 499 client request errors n 500 599 server errors n n block api header n n type basic n title 404 found responses n n block nwhen lookup update delete request requested object exist server returns `404 found` n n``` nstatus 404 found ncontent type application xml charset utf 8 n``` n n``` n \\? xml version 1 0 encoding utf 8 \\? n error n symbol found symbol n description record could located description n error n``` n block api header n n type basic n title 422 unprocessable entity responses n n block nif requested create update delete cannot performed due validation errors server returns `422 unprocessable entity` response array validation errors n n``` nstatus 422 unprocessable entity ncontent type application xml charset utf 8 n``` n n``` n \\? xml version 1 0 encoding utf 8 \\? n errors n error field model name field name symbol number lang en us number error n errors n``` category 5919d93885b2570f00e41c3a next description pages childrenpages http status codesevery request includes http status code result status code examined response error cases response body contain errors xml document details successful status codes \\( 2xx \\) request successful resource successfully created confirms success creating new account credit subscription etc request successful response body client error status codes \\( 4xx \\) request invalid could understood server resubmitting request likely result error commonly occurs xml invalid e g ampersands correctly encoded text request please inspect body response details regarding error api key missing invalid recurly account production mode good standing please pay outstanding invoices login attempting perform action privileges access verify login credentials appropriate account resource found given identifier response body explain resource found requested method valid given url request 's accept header set application xml request unsuccessful condition met example message may returned attempt cancel subscription account subscription could process post put request request invalid see response body details made many api requests last hour future api requests ignored beginning next hour server error status codes \\( 5xx \\) server encountered error processing request failed load balancer web server trouble connecting recurly app please try request service temporarily unavailable please try request future compatibility future compatibility please interpret following status code ranges 200 299 success 400 499 client request errors 500 599 server errors 404 found responses lookup update delete request requested object exist server returns 422 unprocessable entity responses requested create update delete cannot performed due validation errors server returns response array validation errors edit pagesuggest edits id 5919d93b85b2570f00e41c75 createdat 2015 06 26t18 21 30 595z githubsync isreference false link url parentdoc null version 5919d93785b2570f00e41c39 v 0 api url results codes status 200 language json code name status 400 language json code name settings auth required params order 0 title integrations user 55648cf93b87582b003ab8b1 category 5919d93885b2570f00e41c3b sync unique type basic body recurly variety integrations check n n webhooks api \\( https dev recurly com page webhooks \\) n n customer imports \\( https dev recurly com page customer imports \\) slug integrations link external false next pages description project 555fbba928249c1900618a82 updates excerpt hidden false childrenpages integrations recurly variety integrations check webhooks api customer imports edit pagesuggest edits id 5919d94085b2570f00e41cae isreference false order 0 updates 55940e20fd29b92300c262bf 55b2bfc0a74a380d00e290a6 55b2c0466862a10d00887adf 55bbb926a8400c2d00873f2a 565f689e413e06170093df6a 58d2b9a19c99c92f00646f8e version 5919d93785b2570f00e41c39 type basic user 55648cf93b87582b003ab8b1 v 0 link url next pages description slug client libraries sync unique link external false project 555fbba928249c1900618a82 title client libraries api results codes status 200 language json code name name status 400 language json code settings auth required params url body recurly variety official client libraries check n n php \\( https dev recurly com page php \\) n ruby \\( https dev recurly com page ruby \\) n python \\( https dev recurly com page python \\) n net \\( https dev recurly com page net \\) nios github \\( https github com recurly recurly client ios \\) documentation \\( http cocoadocs org docsets recurlysdk \\) n android \\( https github com recurly recurly client android \\) n nthere also unofficial libraries created users n n java \\( https github com killbilling recurly java library \\) n go \\( https github com cgerrior gorecurly \\) n node js \\( https github com cgerrior node recurly \\) createdat 2015 06 26t18 25 56 960z excerpt hidden false category 5919d93885b2570f00e41c3c githubsync parentdoc null childrenpages client libraries recurly variety official client libraries check phprubypython netios github documentationandroid also unofficial libraries created users javagonode js edit pagesuggest edits id 5919d93985b2570f00e41c58 parentdoc null project 555fbba928249c1900618a82 v 0 createdat 2016 03 04t22 51 11 649z hidden false link external false next pages description title recurly js overview user 5564a0073a61a72f0067cb22 version 5919d93785b2570f00e41c39 api params url results codes status 200 language json code name code name status 400 language json settings auth required body img src https files readme io kbrv8yrszoktvarqyp46 recurlyjs logo 594 png alt recurly js logo width 300 n n h3 customize checkout process accept payments securely h3 n nsecurely accept sensitive payment details within checkout process fully customizable user experience recurly js javascript library secures checkout forms create subscriptions process one time transactions update customer billing information worry free n n h3 pci compliance hosted fields h3 n nrecurly provides transparent iframes allow deliver customized customer checkout experience ensuring meet latest pci dss saq compliance requirements isreference false slug recurlyjs excerpt githubsync link url order 0 sync unique updates category 5919d93885b2570f00e41c3d type basic childrenpages recurly js overview customize checkout process accept payments securely securely accept sensitive payment details within checkout process fully customizable user experience recurly js javascript library secures checkout forms create subscriptions process one time transactions update customer billing information worry free pci compliance hosted fields recurly provides transparent iframes allow deliver customized customer checkout experience ensuring meet latest pci dss saq compliance requirements edit pagesuggest edits id 5919d93985b2570f00e41c59 githubsync order 1 parentdoc null type basic updates 570eb5f23160d10e0041df28 version 5919d93785b2570f00e41c39 api settings auth required params url results codes status 200 language json code name status 400 language json code name category 5919d93885b2570f00e41c3d isreference false link external false sync unique title works hidden false link url project 555fbba928249c1900618a82 user 55648cf93b87582b003ab8b1 v 0 body customer submits payment form recurly js sends customer payment information encrypted stored recurly gives authorization key complete subscription process using api n nwith authorization key \\( token \\) anything api requires payment information never handle sensitive payment information pci scope drastically reduced createdat 2016 03 01t03 19 34 724z excerpt next pages description slug works childrenpages works customer submits payment form recurly js sends customer payment information encrypted stored recurly gives authorization key complete subscription process using api authorization key \\( token \\) anything api requires payment information never handle sensitive payment information pci scope drastically reduced edit pagesuggest edits id 5919d93985b2570f00e41c5a body include n n` script src https js recurly com v4 recurly js script ` n nto begin 'll include recurly js script page n nthis exposes single global object `recurly` n n configure n n`recurly configure \\( 'sc abcdefghi123456789' \\) ` n nsimply call `recurly configure` anywhere page passing public key identifies site recurly servers find public key api access section \\( https app recurly com go developer api access \\) admin app n block callout n n type info n body sure replace `sc abcdefghi123456789` public key n title n n block n`recurly configure` accepts options detailed may refer source \\( https github com recurly recurly js blob master lib recurly js l76 l88 \\) detail n n build card form n nbuild form however like use data recurly attribute identify input field targets recurly js identify recurly js inject card data fields recommend using simple div elements n block code n n codes n n code form n input type text data recurly first name n input type text data recurly last name n div data recurly number div n div data recurly month div n div data recurly year div n div data recurly cvv div n input type hidden name recurly token data recurly token n button submit button n form n language html n n n n block nto collect card payment information customers 'll create form similar one recurly js uses `data recurly` attributes input tags gather customer information sending servers n block callout n n type info n body order recurly js inject card payment hosted fields form target elements must present document time make `recurly configure` call n n block n note card data present form merely given placeholder element recurly js must inject fields onto page within iframes ensure strict security customer card data customize checkout experience able pick use color placeholder text n nthis particular form contains minimum required input fields table demonstrates possible input fields n n card data n block parameters n n data n h 0 field name n h 1 example n h 2 description n 0 0 number n 1 0 month n 2 0 year n 3 0 first name n 4 0 last name n 5 0 cvv n 0 1 `4111 1111 1111 1111` n 1 1 `8` `02` n 2 1 `18` `2018` n 3 1 `pat` n 4 1 `smith` n 5 1 `123` n 0 2 credit card number required n 1 2 card expiration month number required n 2 2 card expiration year number required n 3 2 cardholder first name required n 4 2 cardholder last name required n 5 2 card security code n n cols 3 n rows 6 n n block ndepending 've configured billing address requirements \\( http docs recurly com site settings address requirements \\) following fields may required n n billing address n block parameters n n data n h 0 field name n h 1 example n h 2 description n 0 0 address1 n 0 1 `1313 main st ` n 0 2 first line street address n 1 0 address2 n 1 1 `unit 1` n 1 2 second line street address n 2 0 city n 2 1 `hope` n 2 2 town locality n 3 0 state n 3 1 `wa` n 3 2 province region n 4 0 postal code n 4 1 `98552` n 4 2 postal code n 5 0 country n 5 1 `us` n 5 2 iso 3166 1 alpha 2 \\( http en wikipedia org wiki iso 3166 1 alpha 2 \\) country code n 6 0 phone n 6 1 `555 867 5309` n 6 2 phone number n 7 0 vat number n 7 1 `se0000` n 7 2 customer vat number used vat exclusion n n cols 3 n rows 8 n n block n styling card fields n nsince card fields must injected within iframes font style information must passed recurly configure n block code n n codes n n code recurly configure \\( n n fields n n style n fontfamily 'droid sans' n fontsize '14px' n fontcolor 'green' n fontweight 'bold' n fontvariant 'small caps' n fontstyle 'italic' n lineheight '1em' n placeholder n color 'gray important' n fontweight 'bold' n n n n number n selector recurly number' n style n fontcolor 000000' n placeholder n content 'credit card number' n n n n month n selector recurly month' n style n fontcolor 'rgba \\( 20 200 10 0 5 \\) n placeholder n content 'month \\( mm \\) n n n n year n selector recurly year' n style n placeholder n content 'year \\( yy \\) n n n n cvv n selector recurly cvv' n style n fontsize '12px' n placeholder n content 'security code' n color 'red important' n n n n n \\) n language javascript n n n n block nsince recurly js must inject card data fields iframes default browser appearance fields likely match appearance fields payment form provide following css classes achieve look feel similar form using classes may specify field size colors full range appearance customization make injected card fields blend payment form n block parameters n n data n h 0 class name n h 1 description n 0 0 recurly hosted field n 1 0 recurly hosted field focus n 2 0 recurly hosted field number n 3 0 recurly hosted field month n 4 0 recurly hosted field year n 5 0 recurly hosted field cvv default styles div surrounding cvv field iframe n 3 1 default styles div surrounding month field iframe n 4 1 default styles div surrounding year field iframe n 2 1 default styles div surrounding month field iframe n 1 1 applied user focuses field n 0 1 default styles div surrounding field iframe n n cols 2 n rows 5 n n block n fonts n nyou may specify font placeholder text card fields `recurly configure` example call right demonstrates available style attributes may send `recurly configure` n ncustom fonts sourced google web fonts \\( https www google com fonts \\) simply use name font appears google web fonts site n n responsive styles n nall built field classes support respond media queries may call `recurly configure` change style properties thus may change property window size changes n n working bank accounts n njust like card form use data recurly attribute identify fields recurly js since recurly js need inject fields bank accounts fields may displayed inputs payment form n block code n n codes n n code form n input type text data recurly routing number n input type text data recurly account number n input type text data recurly account number confirmation n input type text data recurly account type n input type text data recurly name account n input type hidden name recurly token data recurly token n button submit button n form n language html n n n n block nas would card form collect bank account payment information customers identifying `data recurly` attributes input tags form demonstrates minimum required input fields table highlights possible input fields n n bank account data n block parameters n n data n h 0 field name n h 1 example n h 2 description n 0 0 routing number n 0 1 `123456789` n 0 2 routing number required n 1 0 account number n 2 0 account number confirmation n 3 0 account type n 4 0 name account n 4 1 `pat smith` n 3 1 `checking` `savings` n 2 1 `987654321` n 1 1 `987654321` n 1 2 account number required n 2 2 account number confirmation required n 3 2 account type required n 4 2 full name account required n n cols 3 n rows 5 n n block n billing address n n see card billing address category 5919d93885b2570f00e41c3d createdat 2016 03 01t03 21 56 345z excerpt githubsync isreference false link url project 555fbba928249c1900618a82 updates 57180cd7602b9c0e000dab2c 59095020269f1f2300349125 sync unique title getting started type basic hidden false next pages description user 55648cf93b87582b003ab8b1 v 0 api settings auth required params url results codes code name status 200 language json status 400 language json code name link external false order 2 parentdoc null slug getting started 1 version 5919d93785b2570f00e41c39 childrenpages getting started include begin 'll include recurly js script page exposes single global object configure simply call anywhere page passing public key identifies site recurly servers find public key api access section admin app sure replace public key accepts options detailed may refer source detail build card form build form however like use data recurly attribute identify input field targets recurly js identify recurly js inject card data fields recommend using simple div elements html collect card payment information customers 'll create form similar one recurly js uses attributes input tags gather customer information sending servers order recurly js inject card payment hosted fields form target elements must present document time make call note card data present form merely given placeholder element recurly js must inject fields onto page within iframes ensure strict security customer card data customize checkout experience able pick use color placeholder text particular form contains minimum required input fields table demonstrates possible input fields card data field name example description number credit card number required month card expiration month number required year card expiration year number required first name cardholder first name required last name cardholder last name required cvv card security code depending 've configured billing address requirements following fields may required billing address field name example description address1 first line street address address2 second line street address city town locality state province region postal code postal code country iso 3166 1 alpha 2 country code phone phone number vat number customer vat number used vat exclusion styling card fields since card fields must injected within iframes font style information must passed recurly configure javascript since recurly js must inject card data fields iframes default browser appearance fields likely match appearance fields payment form provide following css classes achieve look feel similar form using classes may specify field size colors full range appearance customization make injected card fields blend payment form class name description recurly hosted field default styles div surrounding field iframe recurly hosted field focus applied user focuses field recurly hosted field number default styles div surrounding month field iframe recurly hosted field month default styles div surrounding month field iframe recurly hosted field year default styles div surrounding year field iframe fonts may specify font placeholder text card fields example call right demonstrates available style attributes may send custom fonts sourced google web fonts simply use name font appears google web fonts site responsive styles built field classes support respond media queries may call change style properties thus may change property window size changes working bank accounts like card form use data recurly attribute identify fields recurly js since recurly js need inject fields bank accounts fields may displayed inputs payment form html would card form collect bank account payment information customers identifying attributes input tags form demonstrates minimum required input fields table highlights possible input fields bank account data field name example description routing number routing number required account number account number required account number confirmation account number confirmation required account type account type required name account full name account required billing address see card billing address edit pagesuggest edits id 5919d93985b2570f00e41c5b user 55648cf93b87582b003ab8b1 category 5919d93885b2570f00e41c3d title getting token createdat 2016 03 01t04 39 30 344z excerpt link external false link url next pages description order 3 v 0 body interrupt form submit send billing info recurly get secure token exchange token submit form server n block code n n codes n n code \\( 'form' \\) \\( 'submit' function \\( event \\) n var form n event preventdefault \\( \\) n recurly token \\( form function \\( err token \\) n \\( err \\) n handle error using err code err fields n else n recurly js filled 'token' field submit n form server alternatively access token id n processing wish n form submit \\( \\) n n \\) n \\) n language javascript n n n n block nrecurly js works tokens represent secure temporary storage customer 's sensitive billing information stored directly recurly servers reduce pci exposure n nwhen customers submit billing form 'll need interrupt submit ask recurly js create token form may noticed additional hidden field form `token` ask recurly js token submit automatically populate field get token submit servers use talk endpoint api accepts `billing info` n block callout n n type info n body example demonstrates jquery event binding dom library however may use library choose interact directly dom \\( hard mode \\) n n block n recurly token \\( api \\) n nyou must call recurly token form element n n`recurly token \\( document queryselector \\( 'form' \\) tokenhandler \\) ` n nusing handler function like one n block code n n codes n n code function tokenhandler \\( err token \\) n \\( err \\) n handle error using err code err fields n else n handle success using token id n n n language javascript n n n n block nsends billing information recurly store token sending token id back two ways call `recurly token` form object n nthe simplest pass form element containing form fields corresponding `data recurly` attributes n block parameters n n data n h 0 param n h 1 type n h 2 description n 0 0 form n 0 1 `htmlformelement` n 0 2 parent form containing `data recurly` fields n 1 0 callback n 1 1 `function` n 1 2 callback function accept returned token n n cols 3 n rows 2 n n block na callback always required n n callback arguments n block parameters n n data n h 0 param n h 1 type n h 2 description n 0 0 err n 1 0 token n 2 0 id n 0 1 `recurlyerror` `null` n 0 2 `recurlyerror` \\( errors \\) error occurred otherwise `null` n 1 1 `object` n 1 2 object containing token id n 2 1 `string` n 2 2 token id n n cols 3 n rows 3 n n block n returns n nnothing n n recurly bankaccount token \\( api \\) n nyou may call recurly bankaccount token form element n block code n n codes n n code recurly bankaccount token \\( document queryselector \\( 'form' \\) tokenhandler \\) n language javascript n n n n block object n block code n n codes n n code alternatively nvar billinginfo n required attributes n routing number '123456780' n account number '111111111' n account number confirmation '111111111' n account type 'checking' n name account 'pat smith' n n optional attributes n address1 '123 main st n address2 'unit 1' n city 'hope' n state 'wa' n postal code '98552' n country 'us' n vat number 'se0000' n n nrecurly bankaccount token \\( billinginfo tokenhandler \\) n language javascript n n n n block nboth methods require using handler function like one n block code n n codes n n code function tokenhandler \\( err token \\) n \\( err \\) n handle error using err code err fields n else n handle success using token id n n n language javascript n n n n block nsends bank account billing information recurly store token sending token id back card tokenization two ways call `recurly bankaccount token` form object n nthe simplest pass form element containing form fields corresponding `data recurly` attributes n n arguments \\( form \\) n block parameters n n data n 1 0 callback n 0 0 form n h 0 param n h 1 type n h 2 description n 0 1 `htmlformelement` n 0 2 parent form containing `data recurly` fields n 1 1 `function` n 1 2 callback function accept returned token n n cols 3 n rows 2 n n block nalternatively call `recurly bankaccount token` plain javascript object allows direct interface payment flow eliminating need use dom n n arguments \\( object \\) n block parameters n n data n 0 0 options n 1 0 callback n 0 1 `object` n 0 2 object billing information properties matching outlined n 1 1 `function` n 1 2 callback function accept returned token n h 0 param n h 1 type n h 2 description n n cols 3 n rows 2 n n block na callback always required n n callback arguments n block parameters n n data n h 0 param n h 1 type n h 2 description n 0 0 err n 1 0 token n 2 0 id n 2 1 `string` n 2 2 token id n 0 1 `recurlyerror` `null` n 0 2 `recurlyerror` \\( errors \\) error occurred otherwise `null` n 1 1 `object` n 1 2 object containing token id n n cols 3 n rows 3 n n block n returns n nnothing slug getting token type basic parentdoc null updates 583606faf50e460f009179cd api results codes status 200 language json code name status 400 language json code name settings auth required params url githubsync isreference false project 555fbba928249c1900618a82 sync unique version 5919d93785b2570f00e41c39 hidden false childrenpages getting token interrupt form submit send billing info recurly get secure token exchange token submit form server javascript recurly js works tokens represent secure temporary storage customer 's sensitive billing information stored directly recurly servers reduce pci exposure customers submit billing form 'll need interrupt submit ask recurly js create token form may noticed additional hidden field form ask recurly js token submit automatically populate field get token submit servers use talk endpoint api accepts example demonstrates jquery event binding dom library however may use library choose interact directly dom \\( hard mode \\) recurly token \\( api \\) must call recurly token form element using handler function like one javascript sends billing information recurly store token sending token id back two ways call form object simplest pass form element containing form fields corresponding attributes param type description form parent form containing fields callback callback function accept returned token callback always required callback arguments param type description err error occurred otherwise token object containing token id id token id returns nothing recurly bankaccount token \\( api \\) may call recurly bankaccount token form element javascript object javascript methods require using handler function like one javascript sends bank account billing information recurly store token sending token id back card tokenization two ways call form object simplest pass form element containing form fields corresponding attributes arguments \\( form \\) param type description form parent form containing fields callback callback function accept returned token alternatively call plain javascript object allows direct interface payment flow eliminating need use dom arguments \\( object \\) param type description options object billing information properties matching outlined callback callback function accept returned token callback always required callback arguments param type description err error occurred otherwise token object containing token id id token id returns nothing edit pagesuggest edits id 5919d93985b2570f00e41c5c hidden false parentdoc null updates 5718f243459f6f0e0075070c v 0 githubsync order 4 slug using token type basic user 55648cf93b87582b003ab8b1 version 5919d93785b2570f00e41c39 api url results codes status 200 language json code name status 400 language json code name settings auth required params body create new subscription token using one client libraries \\( http dev recurly com client libraries \\) api v2 \\( https dev recurly com \\) n block code n n codes n n code subscription new recurly subscription \\( \\) n subscription plan code 'monthly subscription' n n subscription account new recurly account \\( \\) n subscription account account code 'pat smith' n subscription account first name 'pat' n subscription account last name 'smith' n subscription account email 'pat enterpriseexecutive com' n n subscription account billing info new recurly billinginfo \\( \\) n subscription account billing info token id 'token id' n n subscription create \\( \\) n language php n n n code recurly subscription create plan code monthly subscription n account n account code 'pat smith' n billing info token id 'token id' n n language ruby n n n code subscription recurly subscription \\( n plan code 'monthly subscription' n account recurly account \\( n account code 'pat smith' n billing info recurly billinginfo \\( token id 'token id' \\) n \\) n \\) nsubscription save \\( \\) n language python n n n code var plan plans get \\( monthly subscription \\) nvar account new account \\( pat smith \\) nvar billinginfo new billinginfo \\( account \\) tokenid token id nvar subscription new subscription \\( account plan usd \\) n nsubscription create \\( \\) n language csharp n n n code curl https subdomain recurly com v2 subscriptions n u api key n x post n \\? xml version 1 0 encoding utf 8 \\? n subscription n plan code monthly subscription plan code n currency usd currency n account n account code pat smith account code n email pat enterpriseexecutive com email n first name pat first name n last name smith last name n billing info n token id token id token id n billing info n account n subscription n n language curl n n n n block nonce recurly js stored customer 's sensitive data given token reference 20 minutes use api \\( https dev recurly com \\) expired tokens permanently removed recurly servers n block callout n n type info n body tokens expire 20 minutes n n block ntokens used populate account billing info data api simply assign billing info 's `token id` property 'll rest n n endpoints accept tokens within billing info n n subscription `create` \\( https dev recurly com docs create subscription \\) n account `create` \\( https dev recurly com docs create account \\) `update` \\( https dev recurly com docs update account \\) n billing info `update` \\( https dev recurly com docs update accounts billing info token \\) n transaction `create` \\( https dev recurly com docs create transaction \\) n block callout n n type info n body use token attributes allowed billing info n request n n block link external false link url next description pages sync unique title using token category 5919d93885b2570f00e41c3d createdat 2016 03 01t04 28 39 561z excerpt isreference false project 555fbba928249c1900618a82 childrenpages using token create new subscription token using one client libraries api v2 php ruby python c curl recurly js stored customer 's sensitive data given token reference 20 minutes use api expired tokens permanently removed recurly servers tokens expire 20 minutes tokens used populate account billing info data api simply assign billing info 's property 'll rest endpoints accept tokens within billing info subscription account billing info transaction use token attributes allowed billing info request edit pagesuggest edits id 5919d93985b2570f00e41c5d sync unique type basic excerpt hidden false next pages description v 0 category 5919d93885b2570f00e41c3d project 555fbba928249c1900618a82 link external false order 5 slug events title events updates 59095077651f500f001dd3f6 createdat 2016 03 01t18 53 08 841z githubsync isreference false user 55648cf93b87582b003ab8b1 version 5919d93785b2570f00e41c39 link url parentdoc null api url results codes status 200 language json code name status 400 language json code name settings auth required params body listen events using emitter methods n block code n n codes n n code listen 'change' event nrecurly \\( 'change' changehandler \\) n n 're feeling indecisive today let 's detach event nrecurly \\( 'change' changehandler \\) n n listen one event detach nrecurly \\( 'field submit' function \\( \\) n \\( payment form' \\) submit \\( \\) n \\) n nfunction changehandler \\( state \\) n state fields n n language javascript n n n n block nexample recurlystate object n block code n n codes n n code var recurlystate n fields n number n valid false n firstsix '' n lastfour '' n brand 'unknown' n empty true n length 0 n focus false n n month n valid false n empty true n length 0 n focus false n n year n month n n cvv n month n n n n language javascript n n n n block na `recurly` instance event emitter emit events throughout lifecycle customer 's interaction payment form events attached using `recurly on` method removed using `recurly off` example right shows various ways attach remove events n n `change` n nthis event emitted whenever customer changes state hosted card fields may otherwise observe directly dom events example customer types '4' number field state number field change `change` event emit n nthe `change` event emits `recurlystate` object whose values demonstrated right give useful insight entire state recurly controlled components payment form n n `field submit` n nthis event emitted user presses `enter` key focused hosted field since action typically submits form recommend performing payment form submission event emitted n nnote detect brand credit card entered using brand field state object childrenpages events listen events using emitter methods javascript example recurlystate object javascript instance event emitter emit events throughout lifecycle customer 's interaction payment form events attached using method removed using example right shows various ways attach remove events event emitted whenever customer changes state hosted card fields may otherwise observe directly dom events example customer types '4' number field state number field change event emit event emits object whose values demonstrated right give useful insight entire state recurly controlled components payment form event emitted user presses key focused hosted field since action typically submits form recommend performing payment form submission event emitted note detect brand credit card entered using brand field state object edit pagesuggest edits id 5919d93985b2570f00e41c5e isreference false parentdoc null project 555fbba928249c1900618a82 slug paypal sync unique body paypal transaction handled entirely within paypal checkout flow new window customer authorize transaction within paypal recurly record authorization return recurly token payment methods need use token within api expires expired tokens cannot retrieved n nfirst place button page specifically checking paypal n block code n n codes n n code button checkout paypal button n language html n n n n block nnext create new `recurly paypal` instance n block code n n codes n n code var paypal recurly paypal \\( n display displayname product n \\) n language javascript n n n n block n 're processing paypal transactions braintree 'll pass client authorization \\( https developers braintreepayments com guides authorization tokenization key javascript v2 obtaining tokenization key \\) instantiation n block code n n codes n n code var paypal recurly paypal \\( n braintree clientauthorization client authorization n \\) n language javascript n n n n block nyour instance must set handle error scenarios start checkout flow n block code n n codes n n code paypal \\( 'error' function \\( err \\) n err code n err message n err cause embedded error n \\) n language javascript n n n n block nnext must bind listener user action button trigger `start` function `recurly paypal` instance open paypal checkout flow n block callout n n type info n body rest recurly js external dependencies example uses jquery demonstrate binding events done way wish n n block n n block code n n codes n n code \\( paypal button' \\) \\( 'click' function \\( \\) n paypal start \\( \\) n \\) n language javascript n n n n block n n block callout n n type warning n body `start` function must called within user initiated event like 'click' 'touchend' n n block nfinally add function receive token customer completes checkout flow point send token id server used recurly api create billing info account n block code n n codes n n code paypal \\( 'token' function \\( token \\) n token id n \\) n language javascript n n n n block n n block api header n n type fn n title recurly paypal n n block n arguments n block parameters n n data n h 0 param n h 1 type n h 2 description n 0 0 options n 0 1 object n 0 2 optional n 1 0 options braintree n 1 1 object n 1 2 optional braintree configuration n 2 0 options braintree clientauthorization n 2 1 string n 2 2 using braintree proces paypal transactions provide client authorization code n n cols 3 n rows 3 n n block n returns n na new `recurly paypal` instance n block api header n n type fn n title paypal start n n block n arguments n block parameters n n data n 0 0 options n 0 1 object n 0 2 optional n 1 0 options description n 1 1 string n 1 2 optional legacy paypal flows description displayed checkout flow n h 0 param n h 1 type n h 2 description n n cols 3 n rows 2 n n block n returns n nnothing n block api header n n type basic n title events n n block n `error` n nthis event emitted error encountered whether setup paypal flow checkout process useful display errors customer problem occurs paypal checkout n n signature n block parameters n n data n 0 0 error n 0 1 recurlyerror n 0 2 error describing issue occurred n h 0 param n h 1 type n h 2 description n n cols 3 n rows 1 n n block n `cancel` n nthis event emitted customer canceled paypal checkout flow completion may wish reset parts checkout experience occurs n n signature n nnone n n `token` n nthis event fired customer completed paypal checkout flow recurly received payment details generated token used api n n signature n block parameters n n data n 0 0 token n 0 1 object n 1 0 token id n 1 1 string n 1 2 token identifier sent api n n cols 3 n rows 2 n n block createdat 2016 03 01t18 54 55 886z githubsync link external false title paypal excerpt use recurly process paypal transactions using paypal business braintree hidden false order 6 type basic updates 59403323f84a32001ba5a47a version 5919d93785b2570f00e41c39 v 1 api url results codes status 200 language json code name status 400 language json code name settings auth required params category 5919d93885b2570f00e41c3d link url next pages description user 55648cf93b87582b003ab8b1 childrenpages paypaluse recurly process paypal transactions using paypal business braintree paypal transaction handled entirely within paypal checkout flow new window customer authorize transaction within paypal recurly record authorization return recurly token payment methods need use token within api expires expired tokens cannot retrieved first place button page specifically checking paypal html next create new instance javascript 're processing paypal transactions braintree 'll pass client authorization instantiation javascript instance must set handle error scenarios start checkout flow javascript next must bind listener user action button trigger function instance open paypal checkout flow rest recurly js external dependencies example uses jquery demonstrate binding events done way wish javascript function must called within user initiated event like 'click' 'touchend' finally add function receive token customer completes checkout flow point send token id server used recurly api create billing info account javascript fnrecurly paypal arguments param type description options object optional options braintree object optional braintree configuration options braintree clientauthorization string using braintree proces paypal transactions provide client authorization code returns new instance fnpaypal start arguments param type description options object optional options description string optional legacy paypal flows description displayed checkout flow returns nothing events event emitted error encountered whether setup paypal flow checkout process useful display errors customer problem occurs paypal checkout signature param type description error recurlyerror error describing issue occurred event emitted customer canceled paypal checkout flow completion may wish reset parts checkout experience occurs signature none event fired customer completed paypal checkout flow recurly received payment details generated token used api signature token object token id string token identifier sent api edit pagesuggest edits id 5919d93985b2570f00e41c5f v 0 api results codes status 200 language json code name status 400 language json code name settings auth required params url isreference false createdat 2016 03 01t18 58 37 649z next pages description sync unique type basic body recurly automates complicated subscriptions many factors influencing total subscription price mind recurly js provides robust pricing module designed make determining actual subscription costs simple flexible possible n na recurly js pricing module attached form created section page meant display subscription pricing let 's get specifics n block api header n n type fn n title recurly pricing n n block n n block code n n codes n n code var pricing recurly pricing \\( \\) n language javascript n n n n block ncreates `pricing` instance n n arguments n n returns n na new `recurly pricing` instance n block api header n n type fn n title pricing attach n n block n n block code n n codes n n code section id pricing n select data recurly plan n option value basic basic option n option value notbasic basic option n select n input type text data recurly coupon n section n language html n n n n block nuse pricing attach bind section pricing calculator n block code n n codes n n code var pricing recurly pricing \\( \\) n npricing attach \\( document queryselector \\( pricing' \\) \\) n language javascript n n n n block nthis simplest way use pricing module simply pass container element pricing module use elements valid `data recurly` attribute determine price value changes pricing module automatically update values allows customers manipulate pricing form able react dynamically number ways n n arguments n block parameters n n data n 0 0 container n 0 1 `htmlelement` n 0 2 parent element containing `data recurly` elements n h 0 param n h 1 type n h 2 description n n cols 3 n rows 1 n n block n returns n nnothing n n elements n nelements bound pricing module may either input output n ninput elements user manipulable elements like `input` `select` want input value let customer manipulate use ` input type hidden ` n n input elements n block parameters n n data n h 0 field name n h 1 example value n h 2 description n 0 0 plan n 0 1 `basic` n 1 0 plan quantity n 2 0 coupon n 3 0 addon n 4 0 currency n 5 0 country n 6 0 postal code n 7 0 tax code n 8 0 vat number n 1 1 `1` n 2 1 `15 off` n 3 1 `1` n 4 1 `usd` n 5 1 `us` n 5 2 iso 3166 1 alpha 2 \\( http en wikipedia org wiki iso 3166 1 alpha 2 \\) country code n 4 2 iso 4217 currency code \\( http docs recurly com currencies \\) n 3 2 addon quantity identify addon modified use `data recurly addon` attribute set addon code n 2 2 coupon code n 1 2 play quantity defaults 1 specified n 0 2 plan code n 6 2 customer postal code used primarily compute taxes n 7 2 product tax code n 8 2 customer vat number used vat exclusion n 6 1 `90210` n 7 1 `digital` n 8 1 `se0000` n 9 0 gift card n 9 1 `518822d87268c142` n 9 2 gift card 's redemption code n n cols 3 n rows 10 n n block noutput elements plain text elements like `output` `span` `div` n n output elements n block parameters n n data n h 0 field name n h 1 example output n h 2 description n 0 0 total n 1 0 subtotal n 2 0 addons n 3 0 discount n 4 0 setup fee n 5 0 tax n 6 0 currency code n 7 0 currency symbol n 7 1 ` ` ` ` n 7 2 symbolic representation `currency code` n 6 1 `usd` `eur` n 6 2 iso 4217 currency code n 5 1 `15 00` n 5 2 total subscription taxation n 4 1 `5 00` n 4 2 subscription setup fee total n 3 1 `5 00` n 3 2 amount discounted coupon use n 2 2 total addon cost n 2 1 `10 00` n 1 1 `90 00` n 1 2 subtotal following pricing components n 0 1 `100 00` n 0 2 total subscription cost due n 8 0 gift card n 9 0 gift card next n 8 1 `75 00` n 9 1 `25 00` n 8 2 gift card amount applied purchase today n 9 2 remainder gift card amount applied next renewal n n cols 3 n rows 10 n n block n n block callout n n type success n body `data recurly` values ending ` now` like `subtotal now` counterparts ending ` next` might expect correspond next billing cycle cost values especially useful plans trial periods n n block n events n nexample price object emitted `change` event n block code n n codes n n code var pricingstate n n subtotal '25 00' n addons '0 00' n discount '0 00' n setup fee '25 00' n tax '0 00' n total '25 00' n n next n subtotal '10 00' n addons '0 00' n discount '0 00' n tax '0 00' n total '10 00' n n base n plan n setup fee '25 00' n unit '10 00' n n addons n thing1 '14 00' cost one 'thing1' addon n thing2 '8 00' n n n currency n code 'usd' n symbol n n n language javascript n n n n block npricing instances emit events various values set price changes n na `pricing` instance behaves event emitter events attached using `pricing on` method removed using `pricing off` similarly events managed `recurly` n n `change` n nthis event emitted whenever pricing module updated pricing values use event update pricing display compute total shopping costs aggregate analytics etc n nchange emits price object shown detail right n n `set ` n n`set ` events emitted specific pricing objects change pricing module example customer changes plan pricing module send `set plan` especially useful updating checkout previews based customer selected one example n block parameters n n data n 0 0 `set plan` n 1 0 `set price` n 2 0 `set addon` n 5 0 `set currency` n 4 0 `set address` n 3 0 `set coupon` n 0 1 plan object n 1 1 price object n 2 1 addon object n 3 1 coupon object n 4 1 address object n 5 1 currency code n 6 0 `set tax` n 6 1 tax object n 7 0 `set gift card` n 7 1 gift card object n n cols 2 n rows 8 n n block n pricing api n block code n n codes n n code var pricing recurly pricing \\( \\) n npricing n plan \\( 'basic' quantity 1 \\) n currency \\( 'usd' \\) n addon \\( 'addon1' quantity 2 \\) n coupon \\( 'coop' \\) n giftcard \\( '518822d87268c142' \\) n address \\( n country 'us' n postal code '90210' n \\) n tax \\( n tax code 'digital' n vat number '' n \\) n catch \\( function \\( err \\) n err code n \\) n done \\( function \\( price \\) n price object emitted 'change' event n \\) n language javascript n n n n block nthe pricing module manipulated set direct method calls useful would like set complex pricing schema customers would like use programmatic method determining subscription price events fire normally would using `pricing attach` n nnote recurly js 's dom binding one way thus use pricing api pricing instance already attached container elements within update pricing api calls would like two way dom binding suggest using framework angularjs \\( https angularjs org \\) using pricing api without attaching container n block callout n n type success n body example right demonstrates ways pricing module manipulated directly n n block n pricingpromise n neach pricing api method return `pricingpromise` allows chain many asynchronous calls together without manage complex chain callbacks n nyou n't need worry much internals `pricingpromise` designed stay way facilitate asynchronous calls n nthe `catch` method shown example used handle error scenarios addon cannot applied selected plan n block callout n n type success n body end chain pricing method calls sure call ` done \\( \\) ` tells pricing module begin calculating gives subscription price n n block excerpt githubsync hidden false link external false parentdoc null project 555fbba928249c1900618a82 slug pricing user 55648cf93b87582b003ab8b1 category 5919d93885b2570f00e41c3d link url order 7 title pricing updates 59094f4fb662a10f00aeed9e version 5919d93785b2570f00e41c39 childrenpages pricing recurly automates complicated subscriptions many factors influencing total subscription price mind recurly js provides robust pricing module designed make determining actual subscription costs simple flexible possible recurly js pricing module attached form created section page meant display subscription pricing let 's get specifics fnrecurly pricing javascript creates instance arguments returns new instance fnpricing attach html use pricing attach bind pricing calculator javascript simplest way use pricing module simply pass container element pricing module use elements valid attribute determine price value changes pricing module automatically update values allows customers manipulate pricing form able react dynamically number ways arguments param type description container parent element containing elements returns nothing elements elements bound pricing module may either input output input elements user manipulable elements like want input value let customer manipulate use input elements field name example value description plan plan code plan quantity play quantity defaults 1 specified coupon coupon code addon addon quantity identify addon modified use attribute set addon code currency iso 4217 currency code country iso 3166 1 alpha 2 country code postal code customer postal code used primarily compute taxes tax code product tax code vat number customer vat number used vat exclusion gift card gift card 's redemption code output elements plain text elements like output elements field name example output description total total subscription cost due subtotal subtotal following pricing components addons total addon cost discount amount discounted coupon use setup fee subscription setup fee total tax total subscription taxation currency code iso 4217 currency code currency symbol symbolic representation gift card gift card amount applied purchase today gift card next remainder gift card amount applied next renewal values ending like counterparts ending might expect correspond next billing cycle cost values especially useful plans trial periods events example price object emitted event javascript pricing instances emit events various values set price changes instance behaves event emitter events attached using method removed using similarly events managed event emitted whenever pricing module updated pricing values use event update pricing display compute total shopping costs aggregate analytics etc change emits price object shown detail right events emitted specific pricing objects change pricing module example customer changes plan pricing module send especially useful updating checkout previews based customer selected one example plan object price object addon object coupon object address object currency code tax object gift card object pricing api javascript pricing module manipulated set direct method calls useful would like set complex pricing schema customers would like use programmatic method determining subscription price events fire normally would using note recurly js 's dom binding one way thus use pricing api pricing instance already attached container elements within update pricing api calls would like two way dom binding suggest using framework angularjs using pricing api without attaching container example right demonstrates ways pricing module manipulated directly pricingpromise pricing api method return allows chain many asynchronous calls together without manage complex chain callbacks n't need worry much internals designed stay way facilitate asynchronous calls method shown example used handle error scenarios addon cannot applied selected plan end chain pricing method calls sure call tells pricing module begin calculating gives subscription price edit pagesuggest edits id 5919d93985b2570f00e41c60 order 8 parentdoc null project 555fbba928249c1900618a82 v 0 link external false body recurly js bundles helpful methods validating payment information prior processing methods used generating tokens also use enhance form validations checkout flow n n recurly bankaccount bankinfo \\( api \\) n nget additional bank account info n block code n n codes n n code var lookupdata n routingnumber '123456780' n nrecurly bankaccount bankinfo \\( lookupdata infohandler \\) n language javascript n n n n block nthe bankinfo method requires handler like one n block code n n codes n n code function infohandler \\( err bankinfo \\) n \\( err \\) n handle error n else n handle success using bankinfo n n n language javascript n n n n block nlooks additional bank information based given routing number routing number supplied invalid `invalid routing number` error code returned n n lookup data n block parameters n n data n h 0 field name n h 1 example n h 2 description n 0 0 routingnumber n 0 1 `123456780` n 0 2 routing number bank n n cols 3 n rows 1 n n block n bank info data n block parameters n n data n h 0 field name n h 1 example n h 2 description n 0 0 bank name n 0 1 `bank recurly` n 0 2 name found bank n n cols 3 n rows 1 n n block createdat 2016 03 01t19 17 35 326z githubsync hidden false link url title validation api results codes name status 200 language json code status 400 language json code name settings auth required params url user 55648cf93b87582b003ab8b1 sync unique category 5919d93885b2570f00e41c3d next pages description slug validation type basic updates version 5919d93785b2570f00e41c39 excerpt isreference false childrenpages validation recurly js bundles helpful methods validating payment information prior processing methods used generating tokens also use enhance form validations checkout flow recurly bankaccount bankinfo \\( api \\) get additional bank account info javascript bankinfo method requires handler like one javascript looks additional bank information based given routing number routing number supplied invalid error code returned lookup data field name example description routingnumber routing number bank bank info data field name example description bank name name found bank edit pagesuggest edits id 5919d93985b2570f00e41c61 hidden false parentdoc null sync unique title errors updates api params url results codes status 200 language json code name status 400 language json code name settings auth required category 5919d93885b2570f00e41c3d createdat 2016 03 01t19 19 09 515z user 55648cf93b87582b003ab8b1 body example recurlyerror object n block code n n codes n n code n name 'validation' n code 'validation' n message 'there error validating request n fields n 'number' n 'year' n n n language json n n n n block nerrors encapsulated `recurlyerror` contains standard properties help diagnose error cases inform customers accordingly n nerrors thrown exception prevent proper execution error recovered passed proper error handling event listener callback `pricingpromise` handler inspect n n best practices n nthe `message` property contains diagnostic information intended help diagnose problems form recommend displaying contents customers n nto provide best customer experience recommend provide error text displayed based error code receive n n error codes n n configuration n block parameters n n data n h 0 code n h 1 description n 0 0 configured n 1 0 missing public key n 2 0 invalid public key n 3 0 already configured n 4 0 missing hosted field target n 5 0 n 0 1 error appears try perform operation without first calling `recurly configure` \\( configure \\) n 2 1 check `publickey` ensure matches admin app 's api access section \\( https app recurly com go developer api access \\) n 1 1 call `recurly configure` \\( configure \\) must `publickey` property n 3 1 recurly instance may configured excessive n 4 1 thrown target element hosted payment field cannot found page check error message check selector used check page ensure element present `recurly configure` called n 5 1 n n cols 2 n rows 5 n n block n tokenization n block parameters n n data n h 0 code n h 1 description n 0 0 validation n 1 0 invalid parameter n 2 0 api error n 3 0 n 1 1 occurs tokenization parameter pass internal validations check `fields` property determine fields caused error n 2 1 request recurly api encountered issue indicate many possible issues recommend inspecting `message` `fields` properties information n 3 1 n 0 1 request validation error occurred indicate many possible issues check `fields` property determine fields caused error n n cols 2 n rows 3 n n block n pricing n block parameters n n data n h 0 code n h 1 description n 0 0 found n 1 0 missing plan n 2 0 invalid addon n 3 0 invalid currency n 5 0 n 5 1 n 3 1 similarly currency requested valid selected plan n 2 1 occurs addon added `pricing` \\( pricing \\) instance valid instance 's selected plan n 1 1 `pricing` \\( pricing \\) instance emit plan specified trying set proeprty depends plan coupon addon n 0 1 happens nonexistent plan requested n 4 0 gift card currency mismatch n 4 1 occurs gift card redeemed currency n't match instance 's configured currency n n cols 2 n rows 5 n n block n paypal n block parameters n n data n 0 0 paypal configured n 0 1 order perform paypal transaction site must configured accept paypal reference n 1 1 customer canceled paypal agreement flow n 2 1 generic paypal error occurred inspect `message` learn n 3 1 bank routing number valid n 3 0 invalid routing number n 2 0 paypal error n 1 0 paypal canceled n h 0 code n h 1 description n n cols 2 n rows 4 n n block isreference false link url order 9 githubsync excerpt link external false next description pages project 555fbba928249c1900618a82 slug errors 1 type basic v 0 version 5919d93785b2570f00e41c39 childrenpages errors example recurlyerror object json errors encapsulated contains standard properties help diagnose error cases inform customers accordingly errors thrown exception prevent proper execution error recovered passed proper error handling event listener callback handler inspect best practices property contains diagnostic information intended help diagnose problems form recommend displaying contents customers provide best customer experience recommend provide error text displayed based error code receive error codes configuration code description configured error appears try perform operation without first calling missing public key call must property invalid public key check ensure matches admin app 's api access section already configured recurly instance may configured excessive missing hosted field target thrown target element hosted payment field cannot found page check error message check selector used check page ensure element present called tokenization code description validation request validation error occurred indicate many possible issues check property determine fields caused error invalid parameter occurs tokenization parameter pass internal validations check property determine fields caused error api error request recurly api encountered issue indicate many possible issues recommend inspecting properties information pricing code description found happens nonexistent plan requested missing plan instance emit plan specified trying set proeprty depends plan coupon addon invalid addon occurs addon added instance valid instance 's selected plan invalid currency similarly currency requested valid selected plan gift card currency mismatch occurs gift card redeemed currency n't match instance 's configured currency paypal code description paypal configured order perform paypal transaction site must configured accept paypal reference paypal canceled customer canceled paypal agreement flow paypal error generic paypal error occurred inspect learn invalid routing number bank routing number valid edit pagesuggest edits id 5919d93985b2570f00e41c62 createdat 2016 03 01t19 35 36 709z link url parentdoc null sync unique updates 582136261142c82700b03347 version 5919d93785b2570f00e41c39 githubsync project 555fbba928249c1900618a82 slug examples title examples type basic user 55648cf93b87582b003ab8b1 excerpt hidden false order 10 v 0 api params url results codes status 200 language json code name code name status 400 language json settings auth required body integration examples n nwe 've prepared full suite example integrations ruby node js python php using popular web frameworks language examples demonstrate simplest method integration frills ui n n code github \\( https github com recurly recurly js examples \\) category 5919d93885b2570f00e41c3d isreference false link external false next pages description childrenpages examples integration examples 've prepared full suite example integrations ruby node js python php using popular web frameworks language examples demonstrate simplest method integration frills ui code github edit pagesuggest edits id 5919d93985b2570f00e41c63 version 5919d93785b2570f00e41c39 body recurly js supports chrome firefox safari ios 6 ie 9 n nwe 're also lend hand recurly js integration questions get help us handful ways n n find us fellow developers recurly \\( irc chat freenode net 6697 recurly \\) freenode chat real time n browse post questions stackoverflow \\( http stackoverflow com questions tagged recurly \\) check regularly n take look code github \\( https github com recurly recurly js \\) welcome bug reports issues contributions pull requests n nfor recurly related questions please contact support recurly com \\( https support recurly com \\) help account general questions n nfor copies documentation previous versions recurly js please contact support next pages description order 11 slug support title support hidden false parentdoc null link url project 555fbba928249c1900618a82 user 55648cf93b87582b003ab8b1 api results codes language json code name status 200 status 400 language json code name settings auth required params url createdat 2016 03 01t19 37 11 437z excerpt githubsync link external false type basic updates v 0 category 5919d93885b2570f00e41c3d isreference false sync unique childrenpages support recurly js supports chrome firefox safari ios 6 ie 9 're also lend hand recurly js integration questions get help us handful ways find us fellow developers recurly freenode chat real time browse post questions stackoverflow check regularly take look code github welcome bug reports issues contributions pull requests recurly related questions please contact support recurly com help account general questions copies documentation previous versions recurly js please contact support edit pagesuggest edits id 5919d93f85b2570f00e41c9f link external false parentdoc null title account object type get excerpt accounts core managing customers inside recurly account object stores entire recurly history customer acts entry point working customer 's billing information subscription data transactions invoices hidden false order 0 project 555fbba928249c1900618a82 updates 56cec52444c5700b0095c02b user 55648cf93b87582b003ab8b1 category 5919d93885b2570f00e41c3e createdat 2015 08 31t20 16 33 273z githubsync isreference true link url body next pages description slug account object sync unique version 5919d93785b2570f00e41c39 v 0 api examples codes language text code method get results codes status 200 name code account href https subdomain recurly com v2 accounts 1 n adjustments href https subdomain recurly com v2 accounts 1 adjustments n billing info href https subdomain recurly com v2 accounts 1 billing info n invoices href https subdomain recurly com v2 accounts 1 invoices n redemptions href https subdomain recurly com v2 accounts 1 redemptions n subscriptions href https subdomain recurly com v2 accounts 1 subscriptions n transactions href https subdomain recurly com v2 accounts 1 transactions n account code 1 account code n state active state n username verena1234 username n email verena example com email n cc emails bob example com susan example com cc emails n first name verena first name n last name example last name n company name new company name company name n vat number nil nil n tax exempt type boolean false tax exempt n address n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n address n accept language nil nil n live subscription type boolean true live subscription n active subscription type boolean true active subscription n future subscription type boolean false future subscription n canceled subscription type boolean false canceled subscription n past due invoice type boolean false past due invoice n hosted login token 96e74bd5e14d18e6da463a0d638a2621 hosted login token n created type datetime 2016 07 08t20 59 43z created n updated type datetime 2016 07 11t17 56 24z updated n closed nil nil n account language xml settings auth required params ref body required false desc url adjustments specified account default type string name adjustments id 557f45d07eafa719001d1c2b body required false desc url account balance specified account default type string name account balance id 57a21cf65220910e002a1764 ref required false desc url billing info specified account default type string name billing info id 557f45d07eafa719001d1c2a ref body ref body required false desc url invoices specified account default type string name invoices id 557f45d07eafa719001d1c29 default type string name redemption id 55e4aa556f190c1900a40881 ref body required false desc url coupon redemption specified account body required false desc url subscriptions specified account default type string name subscriptions id 55e4aa556f190c1900a40880 ref desc url transactions specified account default type string name transactions id 55e4aa556f190c1900a4087f ref body required false id 55e4aa556f190c1900a4087e ref body required false desc unique identifier account default type string name account code id 55e4aa556f190c1900a4087d ref body required false desc state accounts return `active` `closed` default type string name state name username id 55e4aa556f190c1900a4087c ref body required false desc username account default type string type string name email id 55e4aa556f190c1900a4087b ref body required false desc email address account default desc additional email address receive account correspondence separated commas cc emails receive emails `email` field also receives default type array string name cc emails id 560b18973bcbd80d0077d0c0 ref body required false id 55e4aa556f190c1900a4087a ref body required false desc first name account default type string name first name id 55e4aa556f190c1900a40879 ref body required false desc last name account default type string name last name name company name id 55e4aa556f190c1900a40878 ref body required false desc company name account default type string type string name vat number id 55e4aa556f190c1900a40877 ref body required false desc vat number account \\( avoid vat applied \\) default required false desc tax status account `true` exempts tax account `false` applies tax account default type boolean name tax exempt id 55e4aa556f190c1900a40876 ref body type object name address id 55e4aa556f190c1900a40875 ref body required false desc nested address information account `address1` `address2` `city` `state` `zip` `country` `phone` default desc nested shipping address information account `first name` `last name` `company name` `email` `phone` `vat number` `address1` `address2` `city` `state` `zip` `country` `nickname` pass 20 account shipping addresses along request create new account providing shipping address following required first name last name address1 city state zip country default type object name shipping address id 57fffdd8c7609a0f0063caaf ref body required false name accept language id 55e4aa556f190c1900a40874 ref body required false desc iso 639 1 language code user 's browser indicating preferred language locale default type string type string name hosted login token id 55e4aa556f190c1900a40873 ref body required false desc unique token automatically logging account hosted management pages may automatically log user hosted management pages directing user `https subdomain recurly com account hosted login token` default required false desc date time account created recurly default type datetime name created id 55e4aa556f190c1900a40872 ref body type datetime name updated id 5783dc55359cd219005453ec ref body required false desc date time account billing info last updated default desc closed accounts date time closed default type datetime name closed id 5783dcff359cd219005453ee ref body required false id 58c8255f5cb4fe1b00ec5679 ref body required false desc true account least one live subscription default type boolean name live subscription name active subscription id 58c8255f5cb4fe1b00ec5678 ref body required false desc true account least one active subscription default type boolean ref body required false desc true account least one future subscription default type boolean name future subscription id 58c8255f5cb4fe1b00ec5677 default type boolean name canceled subscription id 58c8255f5cb4fe1b00ec5676 ref body required false desc true account least one canceled subscription default type boolean name past due invoice id 58c8255f5cb4fe1b00ec5675 ref body required false desc true account least one past due invoice url accounts childrenpages getaccount objectaccounts core managing customers inside recurly account object stores entire recurly history customer acts entry point working customer 's billing information subscription data transactions invoices body paramsadjustments stringthe url adjustments specified account account balance stringthe url account balance specified account billing info stringthe url billing info specified account invoices stringthe url invoices specified account redemption stringthe url coupon redemption specified account subscriptions stringthe url subscriptions specified account transactions stringthe url transactions specified account account code stringthe unique identifier account state stringthe state accounts return `active` `closed` username stringthe username account email stringthe email address account cc emails array stringsadditional email address receive account correspondence separated commas cc emails receive emails `email` field also receives first name stringthe first name account last name stringthe last name account company name stringthe company name account vat number stringthe vat number account \\( avoid vat applied \\) tax exempt booleanthe tax status account `true` exempts tax account `false` applies tax account address objectthe nested address information account `address1` `address2` `city` `state` `zip` `country` `phone` shipping address objectthe nested shipping address information account `first name` `last name` `company name` `email` `phone` `vat number` `address1` `address2` `city` `state` `zip` `country` `nickname` pass 20 account shipping addresses along request create new account providing shipping address following required first name last name address1 city state zip country accept language stringthe iso 639 1 language code user 's browser indicating preferred language locale hosted login token stringthe unique token automatically logging account hosted management pages may automatically log user hosted management pages directing user `https subdomain recurly com account hosted login token` created datetimethe date time account created recurly updated datetimethe date time account billing info last updated closed datetimefor closed accounts date time closed live subscription booleantrue account least one live subscription active subscription booleantrue account least one active subscription future subscription booleantrue account least one future subscription canceled subscription booleantrue account least one canceled subscription past due invoice booleantrue account least one past due invoice edit pagesuggest editsdefinition api url page api url result format200 ok id 5919d93f85b2570f00e41ca0 hidden false next pages description order 1 parentdoc null type get user 55648cf93b87582b003ab8b1 version 5919d93785b2570f00e41c39 body account query states n block parameters n n data n h 0 state n h 1 description n 0 0 `active` n 1 0 `closed` n 0 1 open accounts n 1 1 accounts open n 2 0 `subscriber` n 2 1 accounts subscriptions valid current time includes subscriptions trial period n 3 0 `non subscriber` n 3 1 accounts without subscriptions valid current time n 4 0 `past due` n 4 1 accounts invoices failed initial collection still collection attempts remaining n n cols 2 n rows 5 n n block n n block callout n n type warning n body please note queried state base state returned account may differ example querying `past due` account result list accounts `past due` state \\( either `active` `closed` \\) base states \\( `active` `closed` \\) present returned account records n n block createdat 2015 06 15t21 38 24 720z link url sync unique title list accounts api results codes code accounts type array n account href https subdomain recurly com v2 accounts 1 n adjustments href https subdomain recurly com v2 accounts 1 adjustments n account balance href https subdomain recurly com v2 accounts 1 balance n billing info href https subdomain recurly com v2 accounts 1 billing info n invoices href https subdomain recurly com v2 accounts 1 invoices n redemptions href https subdomain recurly com v2 accounts 1 redemptions n subscriptions href https subdomain recurly com v2 accounts 1 subscriptions n transactions href https subdomain recurly com v2 accounts 1 transactions n account code 1 account code n state active state n username verena1234 username n email verena example com email n cc emails bob example com susan example com cc emails n first name verena first name n last name example last name n company name recurly inc company name n vat number nil nil n tax exempt type boolean false tax exempt n address n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n address n accept language nil nil n hosted login token 71c122cb16fc90252ff845eacf5d7814 hosted login token n created type datetime 2016 08 03t15 44 05z created n updated type datetime 2016 08 03t16 26 26z updated n closed nil nil n account n accounts language xml status 200 name settings auth required params query required false desc state accounts return `active` `closed` `subscriber` `non subscriber` `past due` default type string name state id 56465088054d8f0d00bc76aa ref required false desc attribute used order records `created at` `updated at` default created type string name sort id 578ea5b0c93aac0e00ec8899 ref query type string name order id 578ea5b0c93aac0e00ec8898 ref query required false desc order products returned `asc` ascending order `desc` descending order default desc desc operates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time default type datetime name begin time id 578ea5b0c93aac0e00ec8897 ref query required false name end time id 578ea5b0c93aac0e00ec8896 ref query required false desc operates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time default type datetime ref query required false desc number records return per page maximum 200 default 50 type int name per page id 56d8bace7ce7550b00c81d77 query required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page default type int name cursor id 56d8bace7ce7550b00c81d78 ref url accounts examples codes name code \\? php n n accounts recurly accountlist getactive \\( \\) nforeach \\( accounts account \\) n print account account n n n language php code recurly account find account n puts account account inspect nend language ruby code client version 2 1 6 nfor account account \\( \\) n print 'account s' account n n client version 2 1 5 naccounts account \\( \\) nwhile accounts n account accounts n print 'account s' account n try n accounts accounts next page \\( \\) n except pageerror n accounts \\( \\) language python language csharp name null code using system linq n nvar accounts accounts list \\( \\) nwhile \\( accounts \\( \\) \\) n n tforeach \\( var account accounts \\) n tconsole writeline \\( account \\) n taccounts accounts next n method get excerpt returns list accounts site results ordered time created sorted newest first githubsync project 555fbba928249c1900618a82 updates 55f1f9abd4d3160d00439b6c v 0 category 5919d93885b2570f00e41c3e isreference true link external false slug list accounts childrenpages getlist accountsreturns list accounts site results ordered time created sorted newest first query paramsstate stringthe state accounts return `active` `closed` `subscriber` `non subscriber` `past due` sort stringcreated atthe attribute used order records `created at` `updated at` order stringdescthe order products returned `asc` ascending order `desc` descending order begin time datetimeoperates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time end time datetimeoperates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time per page integer50number records return per page maximum 200 cursor integersplits records across pages leave blank return first page follow uri first page 's link header fetch next page account query states state description open accounts accounts open accounts subscriptions valid current time includes subscriptions trial period accounts without subscriptions valid current time accounts invoices failed initial collection still collection attempts remaining please note queried state base state returned account may differ example querying account result list accounts state \\( either \\) base states \\( \\) present returned account records edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d93f85b2570f00e41ca1 hidden false type post v 0 api auth required params id 557f3209e211d20d00601425 ref body required true desc unique identifier used application identify account code may contain following characters z 0 9 may begin dot character max 50 characters default type string name account code id 557f3209e211d20d00601424 ref body required false desc username account ignore use usernames max 255 characters default type string name username id 557f3209e211d20d00601423 ref body required false desc email address account default type string name email id 557f32d1e211d20d00601430 ref body required false desc first name account max 255 characters default type string name first name name last name id 557f32d1e211d20d0060142f ref body required false desc last name account max 255 characters default type string ref body required false desc company name account max 50 characters default type string name company name id 557f32d1e211d20d0060142e body required false desc vat number avoid vat applied \\( applicable \\) default type string name vat number id 557f32d1e211d20d0060142d ref desc tax status account default type boolean name tax exempt id 557f32d1e211d20d0060142c ref body required false name entity use code id 557f32d1e211d20d0060142b ref body required false desc avalara avatax value passed identify customer type tax purposes range values r \\( info avalara \\) value case sensitive default type string ref body required false desc nested account acquisition information `cost cents` currency` `channel` `subchannel` `campaign` default type object name account acquisition id 58cffafa2cb80d1b005486a8 default type object name billing info id 557f32d1e211d20d0060142a ref body required false desc nested billing information present account created billing information validated default type object name address id 557f32d1e211d20d00601429 ref body required false desc nested address information account `address1` `address2` `city` `state` `zip` `country` `phone` default type object name shipping address id 58010a4657be4b1900eaf2a6 ref body required false desc nested shipping address information account `first name` `last name` `company name` `email` `phone` `vat number` `address1` `address2` `city` `state` `zip` `country` `nickname` pass 20 account shipping addresses along request create new account providing shipping address following required first name last name address1 city state zip country body required false desc iso 639 1 language code user 's browser indicating preferred language locale default type string name accept language id 557f32d1e211d20d00601428 ref desc additional email address receive account correspondence separated commas cc emails receive emails `email` field also receives default type array string name cc emails id 561c362cd308ee0d00749370 ref body required false url accounts examples codes name code \\? php n ntry n account new recurly account \\( 'b6f5783' \\) n account email 'verena example com' n account first name 'verena' n account last name 'example' n account create \\( \\) n n print account account n n n catch \\( recurly validationerror e \\) n print invalid account e n language php code account recurly account create \\( n account code '1' n email 'verena example com' n first name 'verena' n last name 'example' n shipping addresses n n nickname 'work' n first name 'verena' n last name 'example' n company 'recurly inc' n phone '555 222 1212' n email 'verena example com' n address1 '123 main st n address2 'suite 101' n city 'san francisco' n state 'ca' n zip '94105' n country 'us' n n n nickname 'home' n first name 'verena' n last name 'example' n phone '555 867 5309' n email 'verena example com' n address1 '123 fourth st n address2 'apt 101' n city 'san francisco' n state 'ca' n zip '94105' n country 'us' n n n \\) language ruby code account recurly account \\( account code '1' \\) naccount email 'verena example com' naccount first name 'verena' naccount last name 'example' naccount save \\( \\) language python code var account new account \\( 1 \\) n n email verena example com n firstname verena n lastname example n naccount create \\( \\) language csharp language xml code account n account code 1 account code n email verena example com email n first name verena first name n last name example last name n username verena1234 username n cc emails bob example com susan example com cc emails n company name recurly inc company name n address n address1 123 main st address1 n city san francisco city n state ca state n zip 94105 zip n country us country n address n shipping addresses n shipping address n nickname work nickname n first name verena first name n last name example last name n company recurly inc company n phone 555 222 1212 phone n email verena example com email n address1 123 main st address1 n address2 suite 101 address2 n city san francisco city n state ca state n zip 94105 zip n country us country n shipping address n shipping address n nickname home nickname n first name verena first name n last name example last name n phone 555 867 5309 phone n email verena example com email n address1 123 fourth st address1 n address2 apt 101 address2 n city san francisco city n state ca state n zip 94105 zip n country us country n shipping address n shipping addresses n account method post results codes name code account href https subdomain recurly com v2 accounts 1 n adjustments href https subdomain recurly com v2 accounts 1 adjustments n billing info href https subdomain recurly com v2 accounts 1 billing info n invoices href https subdomain recurly com v2 accounts 1 invoices n redemption href https subdomain recurly com v2 accounts 1 redemption n shipping addresses href https subdomain recurly com v2 accounts 1 shipping addresses n subscriptions href https subdomain recurly com v2 accounts 1 subscriptions n transactions href https subdomain recurly com v2 accounts 1 transactions n account code 1 account code n state active state n username verena1234 username n email verena example com email n cc emails bob example com susan example com cc emails n first name verena first name n last name example last name n company name recurly inc company name n vat number nil nil n address n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n address n accept language nil nil n hosted login token 3ed66441313a90bd7e8039b31985dee8 hosted login token n created type datetime 2016 06 14t16 08 41z created n closed nil nil n account language xml status 201 settings category 5919d93885b2570f00e41c3e createdat 2015 06 15t20 12 03 880z excerpt creates new account may optionally include billing information isreference true link external false link url project 555fbba928249c1900618a82 title create account body githubsync next pages description order 2 updates 562908002c0fd9190067da26 version 5919d93785b2570f00e41c39 parentdoc null slug create account sync unique user 55648cf93b87582b003ab8b1 childrenpages postcreate accountcreates new account may optionally include billing information body paramsaccount code requiredstringa unique identifier used application identify account code may contain following characters z 0 9 may begin dot character max 50 characters username stringthe username account ignore use usernames max 255 characters email stringthe email address account first name stringthe first name account max 255 characters last name stringthe last name account max 255 characters company name stringthe company name account max 50 characters vat number stringthe vat number avoid vat applied \\( applicable \\) tax exempt booleanthe tax status account entity use code stringthe avalara avatax value passed identify customer type tax purposes range values r \\( info avalara \\) value case sensitive account acquisition objectthe nested account acquisition information `cost cents` currency` `channel` `subchannel` `campaign`billing info objectthe nested billing information present account created billing information validated address objectthe nested address information account `address1` `address2` `city` `state` `zip` `country` `phone` shipping address objectthe nested shipping address information account `first name` `last name` `company name` `email` `phone` `vat number` `address1` `address2` `city` `state` `zip` `country` `nickname` pass 20 account shipping addresses along request create new account providing shipping address following required first name last name address1 city state zip country accept language stringthe iso 639 1 language code user 's browser indicating preferred language locale cc emails array stringsadditional email address receive account correspondence separated commas cc emails receive emails `email` field also receives edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format201 created id 5919d93f85b2570f00e41ca2 category 5919d93885b2570f00e41c3e hidden false parentdoc null project 555fbba928249c1900618a82 version 5919d93785b2570f00e41c39 user 55648cf93b87582b003ab8b1 v 0 api examples codes name language php code \\? php n ntry n account recurly account get \\( '1' \\) n print account account n n catch \\( recurly notfounderror e \\) n print account found n n language ruby code begin n account recurly account find '1' n puts account account inspect nrescue recurly resource notfound e n puts e message nend language python code try n account recurly account get \\( '1' \\) n print account account nexcept notfounderror n print account found n language csharp code try n n tvar account accounts get \\( 1 \\) n tconsole writeline \\( account account \\) n ncatch \\( notfoundexception e \\) n n tconsole writeline \\( account found \\) n method get results codes status 200 language xml code account href https subdomain recurly com v2 accounts 1 n adjustments href https subdomain recurly com v2 accounts 1 adjustments n account balance href https subdomain recurly com v2 accounts 1 balance n billing info href https subdomain recurly com v2 accounts 1 billing info n invoices href https subdomain recurly com v2 accounts 1 invoices n redemptions href https subdomain recurly com v2 accounts 1 redemptions n subscriptions href https subdomain recurly com v2 accounts 1 subscriptions n transactions href https subdomain recurly com v2 accounts 1 transactions n account code 1 account code n state active state n username verena1234 username n email verena example com email n cc emails bob example com susan example com cc emails n first name verena first name n last name example last name n company name recurly inc company name n vat number nil nil n tax exempt type boolean false tax exempt n address n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n address n accept language nil nil n hosted login token 71c122cb16fc90252ff845eacf5d7814 hosted login token n created type datetime 2016 08 03t15 44 05z created n updated type datetime 2016 08 03t16 26 26z updated n closed nil nil n account name settings auth required params type string name account code id 557f478deb75d80d00af4086 ref path required true desc account 's unique code default url accounts account code body link url slug get account updates 55bbdd4e1067fc1700510eed excerpt returns information single account githubsync link external false next pages description sync unique type get createdat 2015 06 15t21 45 49 420z isreference true order 3 title lookup account childrenpages getlookup accountreturns information single account path paramsaccount code requiredstringaccount 's unique code edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d93f85b2570f00e41ca3 sync unique version 5919d93785b2570f00e41c39 parentdoc null slug update account excerpt updates existing account hidden false link external false link url type put v 0 api results codes status 200 language xml code account href https subdomain recurly com v2 accounts 1 n adjustments href https subdomain recurly com v2 accounts 1 adjustments n account balance href https subdomain recurly com v2 accounts 1 balance n billing info href https subdomain recurly com v2 accounts 1 billing info n invoices href https subdomain recurly com v2 accounts 1 invoices n redemptions href https subdomain recurly com v2 accounts 1 redemptions n subscriptions href https subdomain recurly com v2 accounts 1 subscriptions n transactions href https subdomain recurly com v2 accounts 1 transactions n account code 1 account code n state active state n username verena1234 username n email verena example com email n cc emails bob example com susan example com cc emails n first name verena first name n last name example last name n company name new company name company name n vat number nil nil n tax exempt type boolean false tax exempt n address n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n address n accept language nil nil n hosted login token 71c122cb16fc90252ff845eacf5d7814 hosted login token n created type datetime 2016 08 03t15 44 05z created n updated type datetime 2016 08 03t16 30 50z updated n closed nil nil n account name settings auth required params id 557f4a527eafa719001d1c43 ref path required true desc account 's unique code default type string name account code id 557f4a527eafa719001d1c42 ref body required false desc username account ignore use usernames max 255 characters default type string name username name email id 557f4a527eafa719001d1c41 ref body required false desc email address account default type string type string name first name id 557f4a527eafa719001d1c40 ref body required false desc first name account max 255 characters default desc last name account max 255 characters default type string name last name id 557f4a527eafa719001d1c3f ref body required false name company name id 557f4a527eafa719001d1c3e ref body required false desc company name account max 50 characters default type string ref body required false desc vat number avoid vat applied \\( applicable \\) default type string name vat number id 557f4a527eafa719001d1c3d default type boolean name tax exempt id 557f4a527eafa719001d1c3c ref body required false desc tax status account `true` exempts tax account `false` applies tax account default type string name entity use code id 557f4a527eafa719001d1c3b ref body required false desc avalara avatax value passed identify customer type tax purposes range values r \\( info avalara \\) value case sensitive default type object name account acquisition id 58cffb3be865c00f00f93dfb ref body required false desc nested account acquisition information `cost cents` currency` `channel` `subchannel` `campaign` default type object name billing info id 557f4a527eafa719001d1c3a ref body required false desc nested billing information present account created billing information validated body required false desc nested address information account `address1` `address2` `city` `state` `zip` `country` `phone` default type object name address id 557f4a527eafa719001d1c39 ref desc iso 639 1 language code user 's browser indicating preferred language locale default type string name accept language id 557f4a527eafa719001d1c38 ref body required false name cc emails id 561c3606d468a60d00f51ebe ref body required false desc additional email address receive account correspondence separated commas cc emails receive emails `email` field also receives default type array string url accounts account code examples codes language php name code \\? php n ntry n account recurly account get \\( 'b6f5783' \\) n account company name 'new company name' n account update \\( \\) n n print account account n n catch \\( recurly notfounderror e \\) n print invalid account code e n code account recurly account find \\( 'account 1' \\) naccount company name 'new company name' naccount save language ruby code account recurly account get \\( 'account 1' \\) naccount company name 'new company name' naccount save \\( \\) language python code var account account get \\( account 1 \\) naccount companyname 'new company name' naccount update \\( \\) language csharp code account n company name new company name company name n account language xml method put order 4 user 55648cf93b87582b003ab8b1 createdat 2015 06 15t21 57 38 556z next pages description category 5919d93885b2570f00e41c3e githubsync isreference true project 555fbba928249c1900618a82 title update account updates 568ffb69769f210d00132584 body block callout n n type success n title please note n body may optionally include billing information updating account billing information provided billing information validated account updated billing information valid n n block childrenpages putupdate accountupdates existing account path paramsaccount code requiredstringaccount 's unique code body paramsusername stringthe username account ignore use usernames max 255 characters email stringthe email address account first name stringthe first name account max 255 characters last name stringthe last name account max 255 characters company name stringthe company name account max 50 characters vat number stringthe vat number avoid vat applied \\( applicable \\) tax exempt booleanthe tax status account `true` exempts tax account `false` applies tax account entity use code stringthe avalara avatax value passed identify customer type tax purposes range values r \\( info avalara \\) value case sensitive account acquisition objectthe nested account acquisition information `cost cents` currency` `channel` `subchannel` `campaign`billing info objectthe nested billing information present account created billing information validated address objectthe nested address information account `address1` `address2` `city` `state` `zip` `country` `phone` accept language stringthe iso 639 1 language code user 's browser indicating preferred language locale cc emails array stringsadditional email address receive account correspondence separated commas cc emails receive emails `email` field also receives please note may optionally include billing information updating account billing information provided billing information validated account updated billing information valid edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format200 ok id 5919d93f85b2570f00e41ca4 githubsync isreference true type delete parentdoc null project 555fbba928249c1900618a82 slug close account sync unique version 5919d93785b2570f00e41c39 category 5919d93885b2570f00e41c3e link url next pages description hidden false order 5 updates body block callout n n type success n title please note n body closing account permanently deletes billing information cancels active subscriptions \\( canceled subscriptions remain active end current billing cycle expiring \\) n n block excerpt marks account closed cancels active subscriptions link external false title close account user 55648cf93b87582b003ab8b1 v 0 api auth required params name account code id 55944ebb5c9eaa2300a86337 ref path required true desc account 's unique code default type string url accounts account code examples codes language php code \\? php n ntry n account recurly account get \\( 'b6f5783' \\) n account close \\( \\) n n print account account n catch \\( recurly notfounderror e \\) n print invalid account code e n name code account recurly account find \\( '1' \\) naccount destroy language ruby language python code account recurly account get \\( '1' \\) naccount delete \\( \\) language csharp code var account accounts get \\( 1 \\) naccount close \\( \\) method delete results codes status 200 language xml code name settings createdat 2015 06 15t22 00 42 004z childrenpages deleteclose accountmarks account closed cancels active subscriptions path paramsaccount code requiredstringaccount 's unique code please note closing account permanently deletes billing information cancels active subscriptions \\( canceled subscriptions remain active end current billing cycle expiring \\) edit pagesuggest editsdefinition api url page api url examplesphprubypythonc id 5919d93f85b2570f00e41ca5 githubsync hidden false link url order 6 parentdoc null title reopen account updates excerpt transitions closed account back active project 555fbba928249c1900618a82 user 55648cf93b87582b003ab8b1 version 5919d93785b2570f00e41c39 v 0 category 5919d93885b2570f00e41c3e isreference true link external false type put api params path required true desc account 's unique code default type string name account code id 55944ed45c9eaa2300a86339 ref url accounts account code reopen examples codes code \\? php n ntry n account recurly account get \\( 'b6f5783' \\) n account reopen \\( \\) n n fetch reopen one call n account recurly account reopenaccount \\( 'b6f5783' \\) n n print account account n catch \\( recurly notfounderror e \\) n print invalid account code e n catch \\( recurly validationerror e \\) n print account already open e n name language php language ruby code account recurly account find '1' naccount reopen language python code account recurly account get \\( '1' \\) naccount reopen \\( \\) language csharp code var account accounts get \\( 1 \\) naccount reopen \\( \\) method put results codes code account href https subdomain recurly com v2 accounts 1 n adjustments href https subdomain recurly com v2 accounts 1 adjustments n account balance href https subdomain recurly com v2 accounts 1 balance n invoices href https subdomain recurly com v2 accounts 1 invoices n redemptions href https subdomain recurly com v2 accounts 1 redemptions n subscriptions href https subdomain recurly com v2 accounts 1 subscriptions n transactions href https subdomain recurly com v2 accounts 1 transactions n account code 1 account code n state active state n username verena1234 username n email verena example com email n cc emails bob example com susan example com cc emails n first name verena first name n last name example last name n company name new company name company name n vat number nil nil n tax exempt type boolean false tax exempt n address n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n address n accept language nil nil n hosted login token 71c122cb16fc90252ff845eacf5d7814 hosted login token n created type datetime 2016 08 03t15 44 05z created n updated type datetime 2016 08 03t16 31 25z updated n closed nil nil n account language xml status 200 name settings auth required body block callout n n type success n title please note n body editing account creating account `account code` deleted account creating new transaction subscription also reopen account reopening account restore history reopening account modify previously canceled expired subscriptions billing information need provided customer continue billing n n block createdat 2015 06 15t22 03 14 174z next pages description slug reopen account sync unique childrenpages putreopen accounttransitions closed account back active path paramsaccount code requiredstringaccount 's unique code please note editing account creating account deleted account creating new transaction subscription also reopen account reopening account restore history reopening account modify previously canceled expired subscriptions billing information need provided customer continue billing edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d93f85b2570f00e41ca6 body next pages description title lookup account balance updates v 0 category 5919d93885b2570f00e41c3e isreference true sync unique version 5919d93785b2570f00e41c39 api url accounts account code balance examples codes method get results codes language xml status 200 name code account balance href https subdomain recurly com v2 accounts 1 balance n account href https subdomain recurly com v2 accounts 1 n past due type boolean false past due n balance cents n usd type integer 3000 usd n eur type integer 0 eur n balance cents n account balance status 400 name code error n symbol unavailable api version symbol n description request cannot completed using version api added version '2 3' description n error language json language text status 404 code error n symbol found symbol n description lang en us could n't find account account code 1 description n error settings auth required params query required true desc account 's unique code default type string name account code id 578e888a36baeb17003fd5fb ref createdat 2016 07 19t19 51 58 991z githubsync hidden false type get slug lookup account balance user 559d85d26b21311700fb0b7b excerpt returns account 's past due status balance site 's supported currencies link external false link url order 7 parentdoc null project 555fbba928249c1900618a82 childrenpages getlookup account balancereturns account 's past due status balance site 's supported currencies query paramsaccount code requiredstringaccount 's unique code edit pagesuggest editsdefinition api url page api url result format200 ok400 bad request404 found id 5919d93f85b2570f00e41ca7 api examples codes language php code \\? php n ntry n notes recurly notelist get \\( 'b6f5783' \\) n foreach \\( notes note \\) n print note note message n n n catch \\( recurly notfounderror e \\) n print invalid account code e n name language python code try n account recurly account get \\( '1' \\) n note account notes \\( \\) n print note note message nexcept notfounderror n print account found n language csharp code using system linq n nvar account accounts get \\( 1 \\) nvar notes account getnotes \\( \\) nwhile \\( notes \\( \\) \\) n n tforeach \\( var note notes \\) n tconsole writeline \\( note note message \\) n tnotes notes next n method get results codes status 200 language xml code notes type array n note n account href https subdomain recurly com v2 accounts 1 n message second note message n created type datetime 2015 06 14t16 08 41z created n note n note n account href https subdomain recurly com v2 accounts 1 n message first note message n created type datetime 2016 06 13t16 06 21z created n note n continued n notes name settings auth required params desc account 's unique code default type string name account code id 55944eddccc3052300569882 ref path required true id 5783c946ce802f0e0087d4bb ref query required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page default type string name cursor name sort id 578ea620c93aac0e00ec889d ref query required false desc attribute used order records `created at` `updated at` default created type string ref query required false desc order products returned `asc` ascending order `desc` descending order default desc type string name order id 578ea620c93aac0e00ec889c query required false desc operates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time default type datetime name begin time id 578ea620c93aac0e00ec889b ref desc default type datetime name end time id 578ea620c93aac0e00ec889a ref query required false name per page id 5783c946ce802f0e0087d4ba ref query required false desc number records return per page maximum 200 default 50 type int url accounts account code notes createdat 2015 06 15t22 04 40 352z link url updates user 55648cf93b87582b003ab8b1 version 5919d93785b2570f00e41c39 v 0 body category 5919d93885b2570f00e41c3e isreference true next description pages order 8 parentdoc null project 555fbba928249c1900618a82 type get sync unique title list account notes githubsync hidden false link external false slug list account notes excerpt returns list notes account sorted descending order \\( recently created first \\) childrenpages getlist account notesreturns list notes account sorted descending order \\( recently created first \\) path paramsaccount code requiredstringaccount 's unique code query paramscursor stringsplits records across pages leave blank return first page follow uri first page 's link header fetch next page sort stringcreated atthe attribute used order records `created at` `updated at` order stringdescthe order products returned `asc` ascending order `desc` descending order begin time datetimeoperates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time end time datetimeper page integer50number records return per page maximum 200 edit pagesuggest editsdefinition api url page api url examplesphppythonc result format200 ok id 5919d93e85b2570f00e41c9a parentdoc null project 555fbba928249c1900618a82 user 55ad15f7f93f0c0d005b88a2 v 0 category 5919d93885b2570f00e41c3f hidden false sync unique githubsync link url next pages description version 5919d93785b2570f00e41c39 api method get results codes code shipping addresses type array n shipping address href https subdomain recurly com v2 accounts 1 shipping addresses 1 n account href https subdomain recurly com v2 accounts 1 n subscriptions href https subdomain recurly com v2 accounts 1 shipping addresses 1 subscriptions n id 1 id n nickname work nickname n first name verena first name n last name example last name n company recurly inc company n phone 555 222 1212 phone n email verena example com email n address1 123 main st address1 n address2 suite 101 address2 n city san francisco city n state ca state n zip 94105 zip n country us country n created type datetime 2016 06 14t16 08 41z created n updated type datetime 2016 06 14t16 08 41z updated n shipping address n shipping address href https subdomain recurly com v2 accounts 1 shipping addresses 2 n account href https subdomain recurly com v2 accounts 1 n shipping address id 2 shipping address id n nickname home nickname n first name verena first name n last name example last name n phone 555 867 5309 phone n email verena example com email n address1 123 fourth st address1 n address2 apt 101 address2 n city san francisco city n state ca state n zip 94105 zip n country us country n created type datetime 2016 06 14t16 08 42z created n updated type datetime 2016 06 14t16 08 42z updated n shipping address n shipping addresses name status 200 language xml settings auth required params required true desc unique account identifier default type string name account code id 578d1aa09a98a41900717d95 ref path type string name cursor id 55821a9e5b7fa60d0068b420 ref query required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page default desc attribute used order records `created at` `updated at` default created type string name sort id 578ea7d5426c561700db8694 ref query required false name order id 578ea7d5426c561700db8693 ref query required false desc order products returned `asc` ascending order `desc` descending order default desc type string ref query required false desc operates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time default type datetime name begin time id 578ea7d5426c561700db8692 default type datetime name end time id 578ea7d5426c561700db8691 ref query required false desc operates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time query required false desc number records return per page maximum 200 default 50 type int name per page id 55821a9e5b7fa60d0068b41f ref url accounts account code shipping addresses examples codes code first get account naccount recurly account find \\( '1' \\) n n get shipping addresses nshipping addresses account shipping addresses n n want pass sorting filtering params nshipping addresses account shipping addresses \\( sort updated order asc \\) language ruby code first need account object naccount account get \\( '1' \\) n n shipping addresses method fetches shipping addresses n associated account nshipping addresses account shipping addresses \\( \\) language python isreference true link external false order 0 slug list accounts shipping address title list account 's shipping address type get body createdat 2016 10 14t17 02 21 737z excerpt returns list shipping addresses account updates childrenpages getlist account 's shipping addressreturns list shipping addresses account path paramsaccount code requiredstringunique account identifier query paramscursor stringsplits records across pages leave blank return first page follow uri first page 's link header fetch next page sort stringcreated atthe attribute used order records `created at` `updated at` order stringdescthe order products returned `asc` ascending order `desc` descending order begin time datetimeoperates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time end time datetimeoperates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time per page integer50number records return per page maximum 200 edit pagesuggest editsdefinition api url page api url examplesrubypythonresult format200 ok id 5919d93e85b2570f00e41c9b project 555fbba928249c1900618a82 slug lookup shipping address v 0 category 5919d93885b2570f00e41c3f createdat 2016 10 14t17 07 57 182z link external false link url parentdoc null sync unique title lookup shipping address type get updates version 5919d93785b2570f00e41c39 body githubsync hidden false isreference true next pages description api examples codes method get results codes name code shipping address href https subdomain recurly com v2 accounts 1 shipping addresses 1 n account href https subdomain recurly com v2 accounts 1 n id 1 id n nickname verena example nickname n first name verena first name n last name example last name n company recurly inc company n phone 555 222 124 phone n email verena example com email n vat number nil nil n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n created type datetime 2016 06 14t16 08 41z created n updated type datetime 2016 06 14t16 08 41z updated n shipping address language xml status 200 settings auth required params id 58011177d19a512d00a7ca56 ref path required true desc unique account identifier default type string name account code name shipping address id id 5783cda85cbce30e0074e228 ref path required true desc shipping address unique identifier default type string url accounts account code shipping addresses shipping address id excerpt lookup details account 's shipping address order 1 user 55ad15f7f93f0c0d005b88a2 childrenpages getlookup shipping addresslookup details account 's shipping address path paramsaccount code requiredstringunique account identifier shipping address id requiredstringshipping address unique identifier edit pagesuggest editsdefinition api url page api url result format200 ok id 5919d93e85b2570f00e41c9c slug create shipping address account type post updates version 5919d93785b2570f00e41c39 order 2 v 0 api settings auth required params type string name account code id 5801189ed1c26f0f00ac53b9 ref path required true desc unique account identifier default desc nickname shipping address defaults first name last name max 255 characters default type string name nickname id 5898d9b4372db21b008cb0e5 ref body required false id 557f32d1e211d20d00601430 ref body required true desc first name account max 255 characters default type string name first name id 557f32d1e211d20d0060142f ref body required true desc last name account max 255 characters default type string name last name id 557f32d1e211d20d0060142e ref body required false desc company name shipping address max 50 characters default type string name company name phone id 5898d9b4372db21b008cb0e4 ref body required false desc phone number shipping address default type string type string name email id 557f3209e211d20d00601423 ref body required false desc email address shipping address default required true desc address line 1 default type string name address1 id 557f32d1e211d20d00601429 ref body type string name address2 id 5898d9b4372db21b008cb0e3 ref body required true desc address line 2 default desc city default type string name city id 5898d9b4372db21b008cb0e2 ref body required true name state id 5898d9b4372db21b008cb0e1 ref body required true desc state region default type string ref body required true desc zip postal code default type string name zip id 5898d9b4372db21b008cb0e0 default type string name country id 5898d9b4372db21b008cb0df ref body required true desc country 2 letter iso code \\( http www iso org iso country names code elements \\) default type string name vat number id 557f32d1e211d20d0060142d ref body required false desc customer 's vat number \\( avoid vat applied applicable \\) url accounts account code shipping addresses examples codes language ruby code shipping addresses created 3 ways n 1 embed 1 many shipping address account creation n 2 embed 1 shipping address subscription creation n 3 create shipping address existing account n 1 2 see account subscription creation respectively n code example shows case 3 n n fetch existing account naccount recurly account find \\( '1' \\) n n call create shipping addresses association nshipping address account shipping addresses create \\( n nickname work n first name verena n last name example n company recurly inc n phone 555 555 5555 n email verena example com n address1 400 alabama st n city san francisco n state ca n zip 94110 n country us n \\) n code shipping address n nickname work nickname n first name verena first name n last name example last name n company recurly inc company n phone 555 222 1212 phone n email verena example com email n address1 123 main st address1 n address2 suite 101 address2 n city san francisco city n state ca state n zip 94105 zip n country us country n shipping address language xml language python code shipping addresses created 3 ways n 1 embed 1 many shipping address account creation n 2 embed 1 shipping address subscription creation n 3 create shipping address existing account n 1 2 see account subscription creation respectively n code example shows case 3 n n first find existing account naccount account get \\( '1' \\) n n create shipping address object nshad shippingaddress \\( \\) nshad nickname work nshad first name verena nshad last name example nshad company recurly inc nshad phone 555 555 5555 nshad email verena example com nshad address1 123 main st nshad city san francisco nshad state ca nshad zip 94110 nshad country us n n persist shipping address link account naccount create shipping address \\( shad \\) method post results codes name code shipping address href https subdomain recurly com v2 accounts 1 shipping addresses 1 n account href https subdomain recurly com v2 accounts 1 n id 1 id n nickname work nickname n first name verena first name n last name example last name n company recurly inc company n phone 555 222 1212 phone n email verena example com email n vat number nil nil n address1 123 main st address1 n address2 suite 101 address2 n city san francisco city n state ca state n zip 94105 zip n country us country n created type datetime 2016 06 14t16 08 41z created n updated type datetime 2016 06 14t16 08 41z updated n shipping address language xml status 201 body githubsync isreference true link url next pages description project 555fbba928249c1900618a82 sync unique user 55ad15f7f93f0c0d005b88a2 createdat 2016 10 14t17 14 41 338z hidden false link external false title create shipping address category 5919d93885b2570f00e41c3f excerpt creates new shipping address existing account parentdoc null childrenpages postcreate shipping addresscreates new shipping address existing account path paramsaccount code requiredstringunique account identifier body paramsnickname stringa nickname shipping address defaults first name last name max 255 characters first name requiredstringthe first name account max 255 characters last name requiredstringthe last name account max 255 characters company stringthe company name shipping address max 50 characters phone stringthe phone number shipping address email stringthe email address shipping address address1 requiredstringaddress line 1 address2 requiredstringaddress line 2 city requiredstringcitystate requiredstringstate regionzip requiredstringzip postal codecountry requiredstringcountry 2 letter iso code \\( http www iso org iso country names code elements \\) vat number stringcustomer 's vat number \\( avoid vat applied applicable \\) edit pagesuggest editsdefinition api url page api url examplesrubyxmlpythonresult format201 created id 5919d93e85b2570f00e41c9d parentdoc null slug edit shipping address existing account sync unique updates category 5919d93885b2570f00e41c3f next pages description link external false link url excerpt updates existing shipping address existing account githubsync order 3 project 555fbba928249c1900618a82 api method put results codes status 201 name code shipping address href https subdomain recurly com v2 accounts 1 shipping addresses 1 n account href https subdomain recurly com v2 accounts 1 n id 1 id n nickname newnick nickname n first name verena first name n last name example last name n company recurly inc company n phone 555 222 1234 phone n email verena example com email n vat number nil nil n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n created type datetime 2016 06 14t16 08 41z created n updated type datetime 2016 06 14t16 08 41z updated n shipping address language xml settings auth required params type string name account code id 5801189ed1c26f0f00ac53b9 ref path required true desc unique account identifier default desc shipping address unique identifier default type string name shipping address id id 58011c36d19a512d00a7ca6a ref path required true id 5898dbfbec49fb0f004c25e4 ref body required false desc nickname shipping address defaults first name last name max 255 characters default type string name nickname id 557f32d1e211d20d00601430 ref body required false desc first name account max 255 characters default type string name first name id 557f32d1e211d20d0060142f ref body required false desc last name account max 255 characters default type string name last name name company id 557f32d1e211d20d0060142e ref body required false desc company name account max 50 characters default type string type string name phone id 5898dbfbec49fb0f004c25e3 ref body required false desc phone number shipping address default required false desc email address account default type string name email id 557f3209e211d20d00601423 ref body ref body required false desc address line 1 default type string name address1 id 5898dbfbec49fb0f004c25e2 body required false desc address line 2 default type string name address2 id 5898dbfbec49fb0f004c25e1 ref required false desc city default type string name city id 5898dbfbec49fb0f004c25e0 ref body ref body required false desc state region default type string name state id 5898dbfbec49fb0f004c25df body required false desc zip postal code default type string name zip id 5898dbfbec49fb0f004c25de ref desc country 2 letter iso code \\( http www iso org iso country names code elements \\) default type string name country id 5898dbfbec49fb0f004c25dd ref body required false id 557f32d1e211d20d0060142d ref body required false desc vat number avoid vat applied \\( applicable \\) default type string name vat number url accounts account code shipping addresses shipping address id examples codes code call update attributes shipping address object nshipping address update attributes \\( n nickname 'newnick' n phone '555 222 1234' n \\) language ruby language xml code shipping address n nickname nickname n phone 555 222 1234 phone n address2 address2 n shipping address language python code mutate properties shipping address object nshipping address nickname 'newnickname' nshipping address phone '555 555 1234' n n call save nshipping address save \\( \\) body createdat 2016 10 14t17 54 09 840z hidden false isreference true title update shipping address type put user 55ad15f7f93f0c0d005b88a2 v 0 version 5919d93785b2570f00e41c39 childrenpages putupdate shipping addressupdates existing shipping address existing account path paramsaccount code requiredstringunique account identifier shipping address id requiredstringshipping address unique identifier body paramsnickname stringa nickname shipping address defaults first name last name max 255 characters first name stringthe first name account max 255 characters last name stringthe last name account max 255 characters company stringthe company name account max 50 characters phone stringthe phone number shipping address email stringthe email address account address1 stringaddress line 1 address2 stringaddress line 2 city stringcitystate stringstate regionzip stringzip postal codecountry stringcountry 2 letter iso code \\( http www iso org iso country names code elements \\) vat number stringthe vat number avoid vat applied \\( applicable \\) edit pagesuggest editsdefinition api url page api url examplesrubyxmlpythonresult format201 created id 5919d93e85b2570f00e41c9e v 0 api examples codes code call destroy shipping address object nshipping address destroy language ruby code shipping address n nickname nickname n phone 555 222 1234 phone n address2 address2 n shipping address language xml language python code call delete \\( \\) shipping address object nshipping address delete \\( \\) method delete results codes name code status 204 content language xml status 204 settings auth required params default type string name account code id 5801189ed1c26f0f00ac53b9 ref path required true desc unique account identifier default type string name shipping address id id 58011c36d19a512d00a7ca6a ref path required true desc shipping address unique identifier url accounts account code shipping addresses shipping address id excerpt deletes existing shipping address existing account githubsync next pages description project 555fbba928249c1900618a82 body createdat 2016 10 15t00 27 13 096z hidden false link external false sync unique link url order 4 parentdoc null slug delete shipping address existing account type delete updates user 55ad15f7f93f0c0d005b88a2 version 5919d93785b2570f00e41c39 category 5919d93885b2570f00e41c3f isreference true title delete shipping address childrenpages deletedelete shipping addressdeletes existing shipping address existing account path paramsaccount code requiredstringunique account identifier shipping address id requiredstringshipping address unique identifier edit pagesuggest editsdefinition api url page api url examplesrubyxmlpythonresult format204 content id 5919d93b85b2570f00e41c71 hidden false link url project 555fbba928249c1900618a82 slug create account acquisition title create account acquisition updates api examples codes code account acquisition n cost cents type integer 199 cost cents n currency usd currency n channel blog channel n subchannel whitepaper blog post subchannel n campaign mailchimp67a904de95 0914d8f4b4 campaign n account acquisition language xml code acquisition new recurly accountacquisition \\( \\) n acquisition account code '1' n acquisition cost cents 142 n acquisition currency 'usd' n acquisition channel 'paid search' n acquisition subchannel 'google ads' n acquisition campaign 'jse 2345' n acquisition create \\( \\) language php method post results codes status 200 language xml code account acquisition href https subdomain recurly com v2 accounts 1 acquisition n account href https subdomain recurly com v2 accounts 1 n cost cents type integer 199 cost cents n currency usd currency n channel blog channel n subchannel whitepaper blog post subchannel n campaign mailchimp67a904de95 0914d8f4b4 campaign n created type datetime 2016 08 12t19 45 14z created n updated type datetime 2016 08 12t19 45 14z updated n account acquisition name status 400 language json code name settings auth required params ref path required true desc account 's unique code default type string name account code id 57ae255c9af3430e00e17672 body required false desc total cost marketing activities acquire customer default type int name cost cents id 57ae27581a95170e000f2233 ref required false desc currency 3 letter iso code default type string name currency id 57ae27581a95170e000f2232 ref body type string name channel id 57ae27581a95170e000f2231 ref body required false desc method customer acquired allowed values `referral` `social media` `email` `paid search` `organic search` `direct traffic` `marketing content` `blog` `events` `outbound sales` `advertising` `public relations` `other` default desc free form field provide additional detail acquisition channel default type string name subchannel id 57ae27581a95170e000f2230 ref body required false name campaign id 57ae27581a95170e000f222f ref body required false desc identifier marketing campaign used convert account default type string url accounts account code acquisition category 5919d93885b2570f00e41c40 version 5919d93785b2570f00e41c39 githubsync parentdoc null type post createdat 2016 08 12t19 37 00 632z excerpt create update account 's acquisition data isreference true link external false next description pages order 0 sync unique v 0 body user 559d85d26b21311700fb0b7b childrenpages postcreate account acquisitioncreate update account 's acquisition data path paramsaccount code requiredstringaccount 's unique code body paramscost cents integertotal cost marketing activities acquire customer currency stringcurrency 3 letter iso code channel stringthe method customer acquired allowed values `referral` `social media` `email` `paid search` `organic search` `direct traffic` `marketing content` `blog` `events` `outbound sales` `advertising` `public relations` `other` subchannel stringa free form field provide additional detail acquisition channel campaign stringidentifier marketing campaign used convert account edit pagesuggest editsdefinition api url page api url examplesxmlphpresult format200 ok400 bad request id 5919d93b85b2570f00e41c72 hidden false link external false next pages description order 1 api params path required true desc account 's unique code default type string name account code id 57ae255c9af3430e00e17672 ref url accounts account code acquisition examples codes code recurly accountacquisition get \\( '1' \\) language php method get results codes status 200 language xml code account acquisition href https subdomain recurly com v2 accounts 1 acquisition n account href https subdomain recurly com v2 accounts 1 n cost cents type integer 199 cost cents n currency usd currency n channel blog channel n subchannel whitepaper blog post subchannel n campaign mailchimp67a904de95 0914d8f4b4 campaign n created type datetime 2016 08 12t19 45 14z created n updated type datetime 2016 08 12t19 45 14z updated n account acquisition name status 404 language xml code error n symbol found symbol n description lang en us could n't find accountacquisition account code 1 description n error name settings auth required createdat 2016 08 12t19 37 45 157z slug lookup account acquisition title lookup account acquisition version 5919d93785b2570f00e41c39 type get updates isreference true link url parentdoc null excerpt returns account 's acquisition data githubsync project 555fbba928249c1900618a82 sync unique user 559d85d26b21311700fb0b7b v 0 body category 5919d93885b2570f00e41c40 childrenpages getlookup account acquisitionreturns account 's acquisition data path paramsaccount code requiredstringaccount 's unique code edit pagesuggest editsdefinition api url page api url examplesphpresult format200 ok404 found id 5919d93b85b2570f00e41c73 parentdoc null slug update account acquisition body githubsync link url user 559d85d26b21311700fb0b7b version 5919d93785b2570f00e41c39 excerpt create update account 's acquisition data next pages description title update account acquisition createdat 2016 08 12t19 48 43 370z hidden false isreference true order 2 sync unique api auth required params name account code id 57ae255c9af3430e00e17672 ref path required true desc account 's unique code default type string ref body required false desc total cost marketing activities acquire customer default type int name cost cents id 57ae27581a95170e000f2233 body required false desc currency 3 letter iso code default type string name currency id 57ae27581a95170e000f2232 ref desc method customer acquired allowed values `referral` `social media` `email` `paid search` `organic search` `direct traffic` `marketing content` `blog` `events` `outbound sales` `advertising` `public relations` `other` default type string name channel id 57ae27581a95170e000f2231 ref body required false id 57ae27581a95170e000f2230 ref body required false desc free form field provide additional detail acquisition channel default type string name subchannel id 57ae27581a95170e000f222f ref body required false desc identifier marketing campaign used convert account default type string name campaign url accounts account code acquisition examples codes language xml code account acquisition n cost cents type integer 150 cost cents n currency eur currency n account acquisition language php code acquisition recurly accountacquisition get \\( account code \\) n acquisition currency 'eur' n acquisition cost cents 150 n acquisition update \\( \\) method put results codes status 200 language xml code account acquisition href https subdomain recurly com v2 accounts 1 acquisition n account href https subdomain recurly com v2 accounts 1 n cost cents type integer 150 cost cents n currency eur currency n channel blog channel n subchannel whitepaper blog post subchannel n campaign mailchimp67a904de95 0914d8f4b4 campaign n created type datetime 2016 08 12t19 49 43z created n updated type datetime 2016 08 12t19 49 55z updated n account acquisition name status 400 language json code name settings category 5919d93885b2570f00e41c40 type put updates v 0 link external false project 555fbba928249c1900618a82 childrenpages putupdate account acquisitioncreate update account 's acquisition data path paramsaccount code requiredstringaccount 's unique code body paramscost cents integertotal cost marketing activities acquire customer currency stringcurrency 3 letter iso code channel stringthe method customer acquired allowed values `referral` `social media` `email` `paid search` `organic search` `direct traffic` `marketing content` `blog` `events` `outbound sales` `advertising` `public relations` `other` subchannel stringa free form field provide additional detail acquisition channel campaign stringidentifier marketing campaign used convert account edit pagesuggest editsdefinition api url page api url examplesxmlphpresult format200 ok400 bad request id 5919d93b85b2570f00e41c74 order 3 parentdoc null project 555fbba928249c1900618a82 api method delete results codes status 204 language xml code name status 404 language xml code error n symbol found symbol n description lang en us could n't find accountacquisition account code 1 description n error name settings auth required params default type string name account code id 57ae255c9af3430e00e17672 ref path required true desc account 's unique code url accounts account code acquisition examples codes language php code recurly accountacquisition deleteforaccount \\( '1' \\) category 5919d93885b2570f00e41c40 createdat 2016 08 12t19 48 02 744z link url next pages description type delete updates title clear account acquisition body githubsync isreference true sync unique excerpt remove account 's acquisition data link external false slug clear account acquisition v 0 hidden false user 559d85d26b21311700fb0b7b version 5919d93785b2570f00e41c39 childrenpages deleteclear account acquisitionremove account 's acquisition data path paramsaccount code requiredstringaccount 's unique code edit pagesuggest editsdefinition api url page api url examplesphp id 5919d94085b2570f00e41ca8 api settings auth required params ref body required false desc url account specified adjustment default type string name account id 55f88d0560cc850d008a7bae body required false desc url invoice specified adjustment default type string name invoice id 55f88d0560cc850d008a7bad ref required false desc type adjustment return `charge` `credit` default type string name type id 55f8905559eace0d0087dc69 ref body type string name uuid id 55f88d0560cc850d008a7bac ref body required false desc unique identifier adjustment default desc state adjustments return `pending` `invoiced` default type string name state id 55f88d0560cc850d008a7bab ref body required false id 55f88d0560cc850d008a7baa ref body required false desc description adjustment adjustment max 255 characters default type string name description name accounting code id 55f88d0560cc850d008a7ba9 ref body required false desc accounting code max 20 characters default type string ref body required false desc origin adjustment return `plan` `plan trial` `setup fee` `add on` `add trial` `one time` `debit` `credit` `coupon` `carryforward` default type string name origin id 55f88d0560cc850d008a7ba8 body required false desc positive amount charge negative amount credit max 10000000 default type int name unit amount cents id 55f88d0560cc850d008a7ba7 ref desc quantity default 1 type string name quantity id 55f88d0560cc850d008a7ba6 ref body required false id 55f88d0560cc850d008a7ba5 ref body required false desc shows adjustment credit created another credit default type string name original adjustment uuid id 55f88d0560cc850d008a7ba4 ref body required false desc discount adjustment cents default type int name discount cents name tax cents id 55f88d0560cc850d008a7ba3 ref body required false desc tax adjustment cents default type int ref body required false desc total amount adjustment cents default type int name total cents id 55f88d0560cc850d008a7ba2 default type string name currency id 55f88d0560cc850d008a7ba1 ref body required false desc currency 3 letter iso code body required false desc `true` current adjustment taxable `false` default type boolean name taxable id 55f88d0560cc850d008a7ba0 ref required false desc tax type adjustment default type string name tax type id 55f88d0560cc850d008a7b9f ref body ref body required false desc tax region adjustment default type string name tax region id 55f88d0560cc850d008a7b9e body required false desc tax rate adjustment default type string name tax rate id 55f88d0560cc850d008a7b9d ref required false desc `true` exempts tax charge `false` applies tax charge defined defaults plan site settings attribute work credits \\( negative adjustments \\) credits always post tax pre tax discounts use coupons feature default type boolean name tax exempt id 55f88d0560cc850d008a7b9c ref body type array mixed name tax details id 55f88d0560cc850d008a7b9b ref body required false desc nested address information adjustment `name ` `type` `tax rate` `tax cents` default desc optional field eu vat merchants avalara avatax pro merchants using recurly 's eu vat feature use values `unknown` `physical` `digital` avatax account configured use avalara tax codes assign custom tax rules default type string name tax code id 55f88d2bb089b71700a8363c ref body required false id 55f88d0560cc850d008a7b9a ref body required false desc timestamp associated adjustment began default today type datetime name start date name end date id 55f88d0560cc850d008a7b99 ref body required false desc timestamp associated adjustment ended default type datetime ref body required false desc timestamp associated adjustment created default type datetime name created id 55f88d0560cc850d008a7b98 body required false desc plan related line items plan 's code add related line items add 's code default type string name product code id 58c821b8580c540f00af78a9 ref url adjustments examples codes method get results codes code adjustment href https subdomain recurly com v2 adjustments 37bff9dd3ec90471cf62bd4f6f80db3d type charge n account href https subdomain recurly com v2 accounts 1 n invoice href https subdomain recurly com v2 invoices 1006 n subscription href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 n uuid 37bff9dd3ec90471cf62bd4f6f80db3d uuid n state invoiced state n description refund setup fee gold plan description n accounting code nil nil n product code gold product code n origin setup fee origin n unit amount cents type integer 800 unit amount cents n quantity type integer 1 quantity n quantity remaining type integer 0 quantity remaining n original adjustment uuid 37bfef7af3cd23ee89d77a435aa1838d original adjustment uuid n discount cents type integer 0 discount cents n tax cents type integer 70 tax cents n total cents type integer 870 total cents n currency eur currency n taxable type boolean false taxable n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n tax exempt type boolean false tax exempt n tax code nil nil n tax details type array n tax detail n name nil nil n type state type n tax rate type float 0 065 tax rate n tax cents type integer 52 tax cents n tax detail n tax detail n name nil nil n type county type n tax rate type float 0 01 tax rate n tax cents type integer 8 tax cents n tax detail n tax detail n name nil nil n type city type n tax rate type float 0 0 tax rate n tax cents type integer 0 tax cents n tax detail n tax detail n name nil nil n type special type n tax rate type float 0 0125 tax rate n tax cents type integer 10 tax cents n tax detail n tax details n start date type datetime 2016 08 03t16 02 24z start date n end date nil nil n created type datetime 2016 08 03t16 13 44z created n updated type datetime 2016 08 03t16 13 44z updated n revenue schedule type evenly revenue schedule type n adjustment language xml status 200 name body excerpt history customer 's recurly account tracked adjustments made credits charges parentdoc null project 555fbba928249c1900618a82 sync unique v 0 hidden false link url next pages description slug adjustment object updates category 5919d93885b2570f00e41c41 createdat 2015 09 15t21 26 29 282z githubsync isreference true link external false order 0 user 55648cf93b87582b003ab8b1 version 5919d93785b2570f00e41c39 title adjustment object type get childrenpages getadjustment objectthe history customer 's recurly account tracked adjustments made credits charges body paramsaccount stringthe url account specified adjustment invoice stringthe url invoice specified adjustment type stringthe type adjustment return `charge` `credit` uuid stringthe unique identifier adjustment state stringthe state adjustments return `pending` `invoiced` description stringdescription adjustment adjustment max 255 characters accounting code stringaccounting code max 20 characters origin stringthe origin adjustment return `plan` `plan trial` `setup fee` `add on` `add trial` `one time` `debit` `credit` `coupon` `carryforward` unit amount cents integerpositive amount charge negative amount credit max 10000000 quantity string1quantity original adjustment uuid stringonly shows adjustment credit created another credit discount cents integerthe discount adjustment cents tax cents integerthe tax adjustment cents total cents integerthe total amount adjustment cents currency stringcurrency 3 letter iso code taxable boolean`true` current adjustment taxable `false` tax type stringthe tax type adjustment tax region stringthe tax region adjustment tax rate stringthe tax rate adjustment tax exempt boolean`true` exempts tax charge `false` applies tax charge defined defaults plan site settings attribute work credits \\( negative adjustments \\) credits always post tax pre tax discounts use coupons feature tax details array mixedthe nested address information adjustment `name ` `type` `tax rate` `tax cents` tax code stringoptional field eu vat merchants avalara avatax pro merchants using recurly 's eu vat feature use values `unknown` `physical` `digital` avatax account configured use avalara tax codes assign custom tax rules start date datetimetodaya timestamp associated adjustment began end date datetimea timestamp associated adjustment ended created datetimea timestamp associated adjustment created product code stringfor plan related line items plan 's code add related line items add 's code edit pagesuggest editsdefinition api url page api url result format200 ok id 5919d94085b2570f00e41ca9 type get v 0 body createdat 2015 06 15t22 21 48 674z hidden false isreference true link external false category 5919d93885b2570f00e41c41 link url githubsync parentdoc null slug list accounts adjustments user 55648cf93b87582b003ab8b1 title list account 's adjustments updates api settings auth required params ref path required true desc account 's unique code default type string name account code id 5783c9a7192dcf0e0099828e default created type string name sort id 578ea67ec93aac0e00ec88a5 ref query required false desc attribute used order records `created at` `updated at` query required false desc order products returned `asc` ascending order `desc` descending order default desc type string name order id 578ea67ec93aac0e00ec88a4 ref required false desc operates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time default type datetime name begin time id 578ea67ec93aac0e00ec88a3 ref query ref query required false desc operates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time default type datetime name end time id 578ea67ec93aac0e00ec88a2 default 50 type int name per page id 5783c9a7192dcf0e0099828c ref query required false desc number records return per page maximum 200 default type string name cursor id 5783c9a7192dcf0e0099828d ref query required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page url accounts account code adjustments examples codes name language php code \\? php n ntry n adjustments recurly adjustmentlist get \\( 'b6f5783' \\) n foreach \\( adjustments adjustment \\) n print adjustment adjustment n n n catch \\( recurly notfounderror e \\) n print invalid account code e n language ruby code account recurly account find \\( '1' \\) naccount adjustments find adjustment n puts adjustment adjustment inspect nend code client version 2 1 6 naccount account get \\( '1' \\) nfor adjustment account adjustments \\( \\) n print 'adjustment s' adjustment n n client version 2 1 5 naccount account get \\( '1' \\) nadjustments account adjustments \\( \\) nwhile adjustments n adjustment adjustments n print 'adjustment s' adjustment n try n adjustments adjustments next page \\( \\) n except pageerror n adjustments \\( \\) language python language csharp code using system linq n nvar account accounts get \\( 1 \\) nvar adjustments account getadjustments \\( \\) nwhile \\( adjustments \\( \\) \\) n n tforeach \\( var adjustment adjustments \\) n tconsole writeline \\( adjustment adjustment \\) n tadjustments adjustments next n method get results codes status 200 language xml code adjustments type array n adjustment href https subdomain recurly com v2 adjustments 37c0038fe1ffc9405019db4a11a99aa8 type credit n account href https subdomain recurly com v2 accounts 1 n uuid 37c0038fe1ffc9405019db4a11a99aa8 uuid n state pending state n description bonus great customer description n accounting code nil nil n product code nil nil n origin credit origin n unit amount cents type integer 2000 unit amount cents n quantity type integer 1 quantity n discount cents type integer 0 discount cents n tax cents type integer 0 tax cents n total cents type integer 2000 total cents n currency usd currency n taxable type boolean false taxable n tax exempt type boolean false tax exempt n tax code nil nil n start date type datetime 2016 08 03t16 24 20z start date n end date nil nil n created type datetime 2016 08 03t16 24 20z created n updated type datetime 2016 08 03t16 24 20z updated n revenue schedule type invoice revenue schedule type n adjustment n continued n adjustments name excerpt returns list adjustments given account results ordered time created sorted newest first next pages description order 1 project 555fbba928249c1900618a82 sync unique version 5919d93785b2570f00e41c39 childrenpages getlist account 's adjustmentsreturns list adjustments given account results ordered time created sorted newest first path paramsaccount code requiredstringaccount 's unique code query paramssort stringcreated atthe attribute used order records `created at` `updated at` order stringdescthe order products returned `asc` ascending order `desc` descending order begin time datetimeoperates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time end time datetimeoperates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time per page integer50number records return per page maximum 200 cursor stringsplits records across pages leave blank return first page follow uri first page 's link header fetch next page edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d94085b2570f00e41caa parentdoc null v 0 api examples codes language php code \\? php n ntry n charge new recurly adjustment \\( \\) n charge account code 'b6f5783' n charge description 'charge extra bandwidth' n charge unit amount cents 5000 50 00 n charge currency 'usd' n charge quantity 1 n charge accounting code 'bandwidth' n charge tax exempt false n charge create \\( \\) n n print charge charge n catch \\( recurly notfounderror e \\) n print account found e n name language ruby code account recurly account find \\( '1' \\) naccount adjustments create \\( n description 'charge extra bandwidth' n unit amount cents 50 00 n currency 'usd' n quantity 1 n accounting code 'bandwidth' n tax exempt false n \\) language python code account account get \\( '1' \\) ncharge adjustment \\( n description 'charge extra bandwidth' n unit amount cents 5000 n currency 'usd' n quantity 1 n accounting code 'bandwidth' n tax exempt false n \\) naccount charge \\( charge \\) language csharp code var account accounts get \\( 1 \\) nvar adjustment account newadjustment \\( n usd currency n t5000 unit amount cents n charge extra bandwidth description n t1 quantity n bandwidth accounting code n tfalse \\) tax exempt nadjustment create \\( \\) language xml code adjustment n description charge extra bandwidth description n unit amount cents 5000 unit amount cents n currency usd currency n quantity 1 quantity n accounting code bandwidth accounting code n tax exempt false tax exempt n revenue schedule type invoice revenue schedule type n adjustment method post results codes status 201 language xml code adjustment href https subdomain recurly com v2 adjustments 37c0031340577f993ff30b41738f52ff type charge n account href https subdomain recurly com v2 accounts 1 n uuid 37c0031340577f993ff30b41738f52ff uuid n state pending state n description charge extra bandwidth description n accounting code bandwidth accounting code n product code nil nil n origin debit origin n unit amount cents type integer 5000 unit amount cents n quantity type integer 1 quantity n discount cents type integer 0 discount cents n tax cents type integer 0 tax cents n total cents type integer 5000 total cents n currency usd currency n taxable type boolean false taxable n tax exempt type boolean false tax exempt n tax code nil nil n start date type datetime 2016 08 03t16 23 48z start date n end date nil nil n created type datetime 2016 08 03t16 23 48z created n updated type datetime 2016 08 03t16 23 48z updated n revenue schedule type invoice revenue schedule type n adjustment name settings auth required params ref body required true desc currency 3 letter iso code default type string name currency id 557f5188eb75d80d00af40a6 default type string name unit amount cents id 557f5188eb75d80d00af40a5 ref body required true desc positive amount charge negative amount credit max 10000000 path required true desc unique account identifier default type string name account code id 557f5188eb75d80d00af40a7 ref required false desc quantity default 1 type int name quantity id 557f5188eb75d80d00af40a3 ref body type string name description id 557f5188eb75d80d00af40a4 ref body required false desc description adjustment invoice default required false desc accounting code max 20 characters default type string name accounting code id 557f5188eb75d80d00af40a2 ref body type string name revenue schedule type id 578f782bdbb58b0e00bbdf86 ref body required false desc optional field setting revenue schedule type determine revenue associated charge recognized available schedule types `never` `at range start` `at invoice` `end date` set `evenly` `at range end` default required false desc `true` exempts tax charge `false` applies tax charge defined defaults plan site settings attribute work credits \\( negative adjustments \\) credits always post tax pre tax discounts use coupons feature default type boolean name tax exempt id 557f5188eb75d80d00af40a1 ref body type string name tax code id 557f5188eb75d80d00af40a0 ref body required false desc optional field eu vat merchants avalara avatax pro merchants using recurly 's eu vat feature use values `unknown` `physical` `digital` avatax account configured use avalara tax codes assign custom tax rules default required false desc timestamp associated charge began default type timestamp name start date id 55e09fbfa44fae0d0021473e ref body type timestamp name end date id 55e09fbfa44fae0d0021473d ref body required false desc timestamp associated charge ended default desc product code sku line item max 50 characters useful later reporting product purchases default type string name product code id 58a732d9e13fc22300154cf2 ref body required false url accounts account code adjustments excerpt creates one time charge account charges invoiced collected immediately non invoiced charges automatically invoices account 's subscription renews trigger collection posting invoice charges may removed account invoiced isreference true link url body next pages description order 2 sync unique category 5919d93885b2570f00e41c41 githubsync hidden false title create charge updates 55b2f1b5a96deb1900990c6f 565dc7d277f0090d0058196c user 55648cf93b87582b003ab8b1 createdat 2015 06 15t22 28 24 162z link external false project 555fbba928249c1900618a82 slug create charge type post version 5919d93785b2570f00e41c39 childrenpages postcreate chargecreates one time charge account charges invoiced collected immediately non invoiced charges automatically invoices account 's subscription renews trigger collection posting invoice charges may removed account invoiced path paramsaccount code requiredstringyour unique account identifier body paramscurrency requiredstringcurrency 3 letter iso code unit amount cents requiredstringpositive amount charge negative amount credit max 10000000 quantity integer1quantity description stringdescription adjustment invoice accounting code stringaccounting code max 20 characters revenue schedule type stringoptional field setting revenue schedule type determine revenue associated charge recognized available schedule types `never` `at range start` `at invoice` `end date` set `evenly` `at range end` tax exempt boolean`true` exempts tax charge `false` applies tax charge defined defaults plan site settings attribute work credits \\( negative adjustments \\) credits always post tax pre tax discounts use coupons feature tax code stringoptional field eu vat merchants avalara avatax pro merchants using recurly 's eu vat feature use values `unknown` `physical` `digital` avatax account configured use avalara tax codes assign custom tax rules start date timestampnowa timestamp associated charge began end date timestampa timestamp associated charge ended product code stringthe product code sku line item max 50 characters useful later reporting product purchases edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format201 created id 5919d94085b2570f00e41cab hidden false next pages description slug create credit user 55648cf93b87582b003ab8b1 version 5919d93785b2570f00e41c39 body block callout n n type warning n title tax custom credits n body custom credit adjustments calculate tax credit want create reflects charge previously billed tax recommend refund invoice instead making credit n n block createdat 2015 08 07t19 15 36 088z link url parentdoc null project 555fbba928249c1900618a82 sync unique title create credit githubsync isreference true link external false updates 563ce057913e650d00b65f47 v 0 api auth required params id 557f5188eb75d80d00af40a6 ref body required true desc currency 3 letter iso code default type string name currency id 557f5188eb75d80d00af40a7 ref path required true desc unique account identifier default type string name account code id 557f5188eb75d80d00af40a5 ref body required true desc positive amount charge negative amount credit max 10000000 default type string name unit amount cents name quantity id 557f5188eb75d80d00af40a3 ref body required false desc quantity default 1 type int ref body required false desc description adjustment invoice default type string name description id 557f5188eb75d80d00af40a4 default type string name accounting code id 557f5188eb75d80d00af40a2 ref body required false desc accounting code max 20 characters default type string name revenue schedule type id 578f7836dbb58b0e00bbdf87 ref body required false desc optional field setting revenue schedule type determine revenue associated credit recognized available schedule types `never` `at range start` `at invoice` `end date` set `evenly` `at range end` default type timestamp name start date id 55e0dcbda44fae0d0021491f ref body required false desc timestamp associated credit began default type timestamp name end date id 55e0dcbda44fae0d0021491e ref body required false desc timestamp associated credit ended default type string name origin id 57b50abbdc26980e00d04c9c ref body required false desc allowed gift cards feature enabled site `unit amount cents` negative value `external gift card` sets origin credit `external gift card` order track gift card credits external gift cards like incomm triggers logic require billing information gift credit redeemers default type string name product code id 58a732f1e29fd525004c9b85 ref body required false desc product code sku line item max 50 characters useful later reporting product purchases url accounts account code adjustments examples codes name code \\? php n n credit new recurly adjustment \\( \\) n credit account code '1' n credit description 'bonus great customer' n credit unit amount cents 2000 negative 20 00 n credit currency 'usd' n credit quantity 1 n credit create \\( \\) language php code account recurly account find \\( '1' \\) naccount adjustments create \\( n description 'bonus great customer' n unit amount cents 20 00 n currency 'usd' n quantity 1 n \\) language ruby code account account get \\( '1' \\) ncredit adjustment \\( n description 'bonus great customer' n unit amount cents 2000 n currency 'usd' n quantity 1 n \\) naccount charge \\( credit \\) language python code var account accounts get \\( 1 \\) nvar adjustment account newadjustment \\( n usd currency n 2000 unit amount cents n bonus great customer description n t1 \\) quantity \\( default 1 \\) nadjustment create \\( \\) language csharp code adjustment n description bonus great customer description n unit amount cents 2000 unit amount cents n currency usd currency n quantity 1 quantity n revenue schedule type invoice revenue schedule type n adjustment language xml method post results codes name code adjustment href https subdomain recurly com v2 adjustments 37c0038fe1ffc9405019db4a11a99aa8 type credit n account href https subdomain recurly com v2 accounts 1 n uuid 37c0038fe1ffc9405019db4a11a99aa8 uuid n state pending state n description bonus great customer description n accounting code nil nil n product code nil nil n origin credit origin n unit amount cents type integer 2000 unit amount cents n quantity type integer 1 quantity n discount cents type integer 0 discount cents n tax cents type integer 0 tax cents n total cents type integer 2000 total cents n currency usd currency n taxable type boolean false taxable n tax exempt type boolean false tax exempt n tax code nil nil n start date type datetime 2016 08 03t16 24 20z start date n end date nil nil n created type datetime 2016 08 03t16 24 20z created n updated type datetime 2016 08 03t16 24 20z updated n revenue schedule type invoice revenue schedule type n adjustment language xml status 201 settings category 5919d93885b2570f00e41c41 excerpt creates one time charge account charges invoiced collected immediately non invoiced charges automatically invoices account 's subscription renews trigger collection posting invoice charges may removed account invoiced order 3 type post childrenpages postcreate creditcreates one time charge account charges invoiced collected immediately non invoiced charges automatically invoices account 's subscription renews trigger collection posting invoice charges may removed account invoiced path paramsaccount code requiredstringyour unique account identifier body paramscurrency requiredstringcurrency 3 letter iso code unit amount cents requiredstringpositive amount charge negative amount credit max 10000000 quantity integer1quantity description stringdescription adjustment invoice accounting code stringaccounting code max 20 characters revenue schedule type stringoptional field setting revenue schedule type determine revenue associated credit recognized available schedule types `never` `at range start` `at invoice` `end date` set `evenly` `at range end` start date timestampnowa timestamp associated credit began end date timestampa timestamp associated credit ended origin stringonly allowed gift cards feature enabled site `unit amount cents` negative value `external gift card` sets origin credit `external gift card` order track gift card credits external gift cards like incomm triggers logic require billing information gift credit redeemers product code stringthe product code sku line item max 50 characters useful later reporting product purchases tax custom credits custom credit adjustments calculate tax credit want create reflects charge previously billed tax recommend refund invoice instead making credit edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format201 created id 5919d94085b2570f00e41cac updates 55b79c68aea7c8190058b98e createdat 2015 06 15t22 24 48 657z isreference true link external false link url next pages description project 555fbba928249c1900618a82 body excerpt returns information single adjustment githubsync parentdoc null sync unique user 55648cf93b87582b003ab8b1 version 5919d93785b2570f00e41c39 v 0 api url adjustments uuid examples codes language php code \\? php n ntry n adjustment recurly adjustment get \\( '2fded6a3e36e8b56b37007432f8c1b0d' \\) n print adjustment adjustment n catch \\( recurly notfounderror e \\) n print invalid adjustment uuid e n name language ruby code adjustment recurly adjustment find \\( '30498bb2d52bb9037b4d62480eb98b8f' \\) n language python code adjustment adjustment get \\( '30498bb2d52bb9037b4d62480eb98b8f' \\) n language csharp code var adjustment adjustments get \\( 30498bb2d52bb9037b4d62480eb98b8f \\) nconsole writeline \\( adjustment adjustment \\) method get results codes status 200 language xml code adjustment href https subdomain recurly com v2 adjustments 37c0057d2bc64f2dd6a1c944dc87fbb5 type charge n account href https subdomain recurly com v2 accounts 1 n invoice href https subdomain recurly com v2 invoices 1007 n subscription href https subdomain recurly com v2 subscriptions 37c0057cb105f67b6b8a1146f7b59c41 n uuid 37c0057d2bc64f2dd6a1c944dc87fbb5 uuid n state invoiced state n description gold plan description n accounting code nil nil n product code gold product code n origin plan origin n unit amount cents type integer 4500 unit amount cents n quantity type integer 1 quantity n discount cents type integer 450 discount cents n tax cents type integer 354 tax cents n total cents type integer 4404 total cents n currency eur currency n taxable type boolean false taxable n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n tax exempt type boolean false tax exempt n tax code nil nil n tax details type array n tax detail n name nil nil n type state type n tax rate type float 0 065 tax rate n tax cents type integer 263 tax cents n tax detail n tax detail n name nil nil n type county type n tax rate type float 0 01 tax rate n tax cents type integer 41 tax cents n tax detail n tax detail n name nil nil n type city type n tax rate type float 0 0 tax rate n tax cents type integer 0 tax cents n tax detail n tax detail n name nil nil n type special type n tax rate type float 0 0125 tax rate n tax cents type integer 51 tax cents n tax detail n tax details n start date type datetime 2016 08 03t16 26 26z start date n end date type datetime 2016 09 03t16 26 26z end date n created type datetime 2016 08 03t16 26 26z created n updated type datetime 2016 08 03t16 26 26z updated n revenue schedule type evenly revenue schedule type n adjustment name settings auth required params required true desc unique identifier adjustment default type string name uuid id 55944f4fccc3052300569883 ref path order 4 title lookup adjustment type get category 5919d93885b2570f00e41c41 hidden false slug get adjustment childrenpages getlookup adjustmentreturns information single adjustment path paramsuuid requiredstringthe unique identifier adjustment edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d94085b2570f00e41cad parentdoc null title delete adjustment updates githubsync link url link external false next pages description order 5 sync unique createdat 2015 06 15t23 21 38 993z excerpt delete adjustment account non invoiced adjustments deleted slug delete adjustment type delete user 55648cf93b87582b003ab8b1 version 5919d93785b2570f00e41c39 isreference true project 555fbba928249c1900618a82 api results codes status 204 language xml code status 204 content settings auth required params ref path required true desc unique identifier adjustment default type string name uuid id 55944f6a0c33bd0d0005964a url adjustments uuid examples codes language php code \\? php n ntry n adjustment recurly adjustment get \\( '626db120a84102b1809909071c701c60' \\) n adjustment delete \\( \\) n n print adjustment adjustment n catch \\( recurly notfounderror e \\) n notfounderror invalid uuid already deleted n print invalid adjustment uuid e n n name code adjustment recurly adjustment find \\( '945a4cb9afd64300b97b138407a51aef' \\) nadjustment destroy language ruby language python code adjustment adjustment get \\( '945a4cb9afd64300b97b138407a51aef' \\) nadjustment delete \\( \\) language csharp code var adjustment adjustments get \\( 945a4cb9afd64300b97b138407a51aef \\) nadjustment delete \\( method delete body block callout n n type success n title please note n body adjustment may deleted invoiced n n block category 5919d93885b2570f00e41c41 hidden false v 0 childrenpages deletedelete adjustmentdelete adjustment account non invoiced adjustments deleted path paramsuuid requiredstringthe unique identifier adjustment please note adjustment may deleted invoiced edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format204 content id 5919d93885b2570f00e41c4e sync unique body order 0 parentdoc null project 555fbba928249c1900618a82 user 55648cf93b87582b003ab8b1 v 0 createdat 2015 06 17t19 47 32 787z excerpt creates account 's billing information using token generated recurly js \\( https docs recurly com js getting token \\) returns account 's created billing information next pages description updates 56799b95239fac0d00c7e019 slug create accounts billing info token version 5919d93785b2570f00e41c39 api url accounts account code billing info examples codes language php code \\? php n ntry n billing info new recurly billinginfo \\( \\) n billing info account code 'b6f5783' n billing info token id '7z6furn4jvb9' recurly js n billing info create \\( \\) n n print billing info billing info n catch \\( recurly notfounderror e \\) n could find account token invalid expired n print found e n name code account recurly account find \\( '1' \\) naccount billing info n token id 'token id' n naccount billing info save language ruby language python code account account get \\( '1' \\) nbilling info account billing info nbilling info token id 'token id' naccount update billing info \\( billing info \\) language csharp code var account accounts get \\( 1 \\) nvar info new billinginfo \\( account \\) ninfo tokenid token id ninfo create \\( \\) code billing info n token id token id token id n billing info language xml method post results codes code billing info href https subdomain recurly com v2 accounts 1 billing info type credit card n account href https subdomain recurly com v2 accounts 1 n first name verena first name n last name example last name n company nil nil company n address1 123 main st address1 n address2 nil nil address2 n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil phone n vat number us1234567890 vat number n ip address 127 0 0 1 ip address n ip address country us ip address country n card type visa card type n year type integer 2019 year n month type integer 11 month n first six 411111 first six n last four 1111 last four n updated type datetime 2017 02 17t15 38 53z updated n billing info name status 201 language xml code error n symbol token invalid symbol n description token either invalid expired description n error language xml status 404 settings auth required params id 55944f99ccc3052300569885 ref path required true desc account 's unique code default type string name account code name token id id 5581ced4a5474a0d00d946a5 ref body required true desc token generated recurly js \\( https docs recurly com js getting token \\) default type string type string name currency id 56d0e86f40d36e1d00bc14c9 ref body required false desc currency invoices posted applicable account enrolled plan different currency site 's default default category 5919d93885b2570f00e41c42 hidden false isreference true link external false githubsync link url title create account 's billing info \\( token \\) type post childrenpages postcreate account 's billing info \\( token \\) creates account 's billing information using token generated recurly js \\( https docs recurly com js getting token \\) returns account 's created billing information path paramsaccount code requiredstringaccount 's unique code body paramstoken id requiredstringa token generated recurly js \\( https docs recurly com js getting token \\) currency stringcurrency invoices posted applicable account enrolled plan different currency site 's default edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format201 created404 found id 5919d93885b2570f00e41c4f parentdoc null type post createdat 2015 06 17t19 55 06 712z excerpt creates account 's billing information githubsync link external false next description pages order 1 user 55648cf93b87582b003ab8b1 isreference true link url slug create accounts billing info credit card updates 55d336260168850d0073f054 562944f61a92870d0002c301 56bb59bae59a312b00a15bac 57ed6ed3c4f64e17004e535d v 0 api params default type string name account code id 55944fab5c9eaa2300a8633c ref path required true desc account 's unique code body required true desc first name default type string name first name id 5581d09a8625220d00429e4d ref required true desc last name default type string name last name id 5581d09a8625220d00429e4c ref body type string name number id 5581d09a8625220d00429e42 ref body required true desc credit card number spaces dashes accepted default required true desc expiration month default type string name month id 5581d09a8625220d00429e41 ref body type string name year id 5581d09a8625220d00429e40 ref body required true desc expiration year default desc address line 1 recommended address validation default type string name address1 id 5581d09a8625220d00429e4b ref body required false id 5581d09a8625220d00429e4a ref body required false desc address line 2 default type string name address2 name city id 5581d09a8625220d00429e49 ref body required false desc city default type string ref body required false desc state default type string name state id 5581d09a8625220d00429e48 default type string name country id 5581d09a8625220d00429e47 ref body required false desc country 2 letter iso code \\( http www iso org iso country names code elements \\) strongly recommended default type string name zip id 5581d09a8625220d00429e46 ref body required false desc zip postal code recommended address validation default type string name phone id 5581d09a8625220d00429e45 ref body required false desc phone number body required false desc customer 's vat number default type string name vat number id 5581d09a8625220d00429e44 ref required false desc currency invoices posted applicable account enrolled plan different currency site 's default default type string name currency id 56c3c1ce70187b17005f4395 ref body type string name verification value id 5581d09a8625220d00429e3f ref body required false desc security code cvv 3 4 digits strongly recommended default required false desc customer 's ipv4 address updating billing information strongly recommended default type string name ip address id 5581d09a8625220d00429e43 ref body url accounts account code billing info examples codes name language php code \\? php n ntry n billing info new recurly billinginfo \\( \\) n billing info account code 'b6f5783' n billing info first name 'verena' n billing info last name 'example' n billing info number '4111 1111 1111 1111' n billing info verification value '123' n billing info month 11 n billing info year 2017 n billing info create \\( \\) n n print billing info billing info n catch \\( recurly validationerror e \\) n data card invalid n print invalid data card e n catch \\( recurly notfounderror e \\) n could find account n print found e n language ruby code account recurly account find \\( '1' \\) naccount billing info n first name 'verena' n last name 'example' n number '4111 1111 1111 1111' n verification value '123' n month 11 n year 2015 n naccount billing info save language python code account account get \\( '1' \\) nbilling info account billing info nbilling info first name 'verena' nbilling info last name 'example' nbilling info number '4111 1111 1111 1111' nbilling info verification value '123' nbilling info month 11 nbilling info year 2015 naccount update billing info \\( billing info \\) language csharp code var account accounts get \\( 1 \\) nvar info new billinginfo \\( account \\) ninfo firstname verana ninfo lastname example ninfo creditcardnumber 4111 1111 1111 1111 ninfo verificationvalue 123 ninfo expirationmonth 11 ninfo expirationyear 2015 ninfo create \\( \\) language xml code billing info n first name verena first name n last name example last name n address1 123 main st address1 n address2 nil nil address2 n city san francisco city n state ca state n zip 94105 zip n country us country n number 4111 1111 1111 1111 number n verification value 123 verification value n month 11 month n year 2019 year n ip address 127 0 0 1 ip address n billing info method post results codes status 201 language xml code billing info href https subdomain recurly com v2 accounts 1 billing info type credit card n account href https subdomain recurly com v2 accounts 1 n first name verena first name n last name example last name n company nil nil n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n vat number nil nil n ip address 127 0 0 1 ip address n ip address country nil nil n card type visa card type n year type integer 2019 year n month type integer 11 month n first six 411111 first six n last four 1111 last four n updated type datetime 2017 02 17t15 38 53z updated n billing info name code errors n transaction error n error code declined error code n error category soft error category n merchant message customer 's bank declined card customer need contact bank learn cause merchant message n customer message transaction declined please use different card contact bank customer message n gateway error code nil nil n transaction error n error field billing info base symbol declined transaction declined please use different card contact bank error n transaction href https subdomain recurly com v2 transactions 3c4293ccd7f7bce494f85e4d48beb22e type credit card n account href https subdomain recurly com v2 accounts 1 n uuid 3c4293ccd7f7bce494f85e4d48beb22e uuid n action verify action n amount cents type integer 0 amount cents n tax cents type integer 0 tax cents n currency usd currency n status declined status n payment method credit card payment method n reference 676848 reference n source billing info source n recurring type boolean false recurring n test type boolean true test n voidable type boolean false voidable n refundable type boolean false refundable n ip address 127 0 0 1 ip address n transaction error n error code declined error code n error category soft error category n merchant message customer 's bank declined card customer need contact bank learn cause merchant message n customer message transaction declined please use different card contact bank customer message n gateway error code nil nil n transaction error n cvv result code nil nil n avs result code nil nil n avs result street nil nil n avs result postal nil nil n created type datetime 2017 03 15t21 03 40z created n updated type datetime 2017 03 15t21 03 40z updated n details n account n account code 1 account code n first name verena first name n last name example last name n company new company name company n email verena example com email n billing info type credit card n first name verena first name n last name example last name n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n vat number nil nil n card type visa card type n year type integer 2019 year n month type integer 11 month n first six 400000 first six n last four 0002 last four n billing info n account n details n transaction n errors language xml status 422 settings auth required category 5919d93885b2570f00e41c42 hidden false version 5919d93785b2570f00e41c39 body instead using token generated recurly js instead submit full credit card address information creating billing information n nwhen billing information submitted saved valid account past due invoice outstanding balance collected validate billing information n nif want create account time use account api end point \\( https docs recurly com api accounts create account \\) instead include billing information request n nthe required address fields correspond address requirements configured site n block callout n n type warning n body recurly strongly recommends using token generated recurly js \\( https docs recurly com js getting token \\) rather directly handling customer 's credit card details n title please note n n block n n block callout n n type warning n body api end point may used import billing information without security codes \\( cvv \\) recurly recommends requiring cvv customers collecting new updated billing information n title please note n n block project 555fbba928249c1900618a82 sync unique title create account 's billing info \\( credit card \\) childrenpages postcreate account 's billing info \\( credit card \\) creates account 's billing information path paramsaccount code requiredstringaccount 's unique code body paramsfirst name requiredstringfirst namelast name requiredstringlast namenumber requiredstringcredit card number spaces dashes acceptedmonth requiredstringexpiration monthyear requiredstringexpiration yearaddress1 stringaddress line 1 recommended address validationaddress2 stringaddress line 2 city stringcitystate stringstatecountry stringcountry 2 letter iso code \\( http www iso org iso country names code elements \\) strongly recommended zip stringzip postal code recommended address validationphone stringphone numbervat number stringcustomer 's vat numbercurrency stringcurrency invoices posted applicable account enrolled plan different currency site 's default verification value stringsecurity code cvv 3 4 digits strongly recommended ip address stringcustomer 's ipv4 address updating billing information strongly recommended instead using token generated recurly js instead submit full credit card address information creating billing information billing information submitted saved valid account past due invoice outstanding balance collected validate billing information want create account time use account api end point instead include billing information request required address fields correspond address requirements configured site please note recurly strongly recommends using token generated recurly js rather directly handling customer 's credit card details please note api end point may used import billing information without security codes \\( cvv \\) recurly recommends requiring cvv customers collecting new updated billing information edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format201 created422 unprocessable entity id 5919d93885b2570f00e41c50 excerpt creates account 's billing information bank account details need ach feature site call work link url order 2 slug create accounts billing info bank account v 0 api params path required true desc account 's unique code default type string name account code id 55944fbb0c33bd0d0005964b ref desc name associated account may person 's full name business name field must 1 50 characters include letters digits space default type string name name account id 5581d1f08625220d00429e6d ref body required true id 5581d1f08625220d00429e63 ref body required true desc must real u bank account routing number routing numbers 9 digits default type int name routing number id 5581d1f08625220d00429e62 ref body required true desc bank account number 4 17 digits validate number first transaction recommend customer confirm account number default type int name account number id 5581d1f08625220d00429e61 ref body required true desc either 'checking' 'savings' default type string name account type id 5581d1f08625220d00429e6c ref body required false desc address line 1 recommended address validation field 50 character max include letters digits space default type string name address1 id 5581d1f08625220d00429e6b ref body required false desc address line 2 field 50 character max include letters digits space default type string name address2 id 5581d1f08625220d00429e6a ref body required false desc city field 50 character max include letters digits space default type string name city name state id 5581d1f08625220d00429e69 ref body required false desc state field 2 character max lowercase uppercase default type string ref body required false desc country 2 letter iso code \\( http www iso org iso country names code elements \\) strongly recommended default type string name country id 5581d1f08625220d00429e68 default type string name zip id 5581d1f08625220d00429e67 ref body required false desc zip postal code recommended address validation field 5 digits optional additional 4 digits separated hyphen \\( e g 12345 6789 \\) default type string name phone id 5581d1f08625220d00429e66 ref body required false desc phone number field 10 digits body required false desc customer 's vat number default type string name vat number id 5581d1f08625220d00429e65 ref desc customer 's ipv4 address updating billing information strongly recommended default type string name ip address id 5581d1f08625220d00429e64 ref body required false url accounts account code billing info examples codes name code \\? php n ntry n billing info new recurly billinginfo \\( \\) n billing info account code 'b6f5783' n billing info name account 'acme inc n billing info routing number '065400137' n billing info account number '4444000000005555' n billing info account type 'checking' n billing info address1 '123 main st n billing info city 'san francisco' n billing info state 'ca' n billing info country 'us' n billing info zip '94105' n billing info create \\( \\) n n print billing info billing info n catch \\( recurly validationerror e \\) n data bank account invalid n print invalid data card e n catch \\( recurly notfounderror e \\) n could find account n print account found e n language php code account recurly account find \\( '1' \\) naccount billing info n name account 'acme inc n routing number '065400137' n account number '4444000000005555' n address1 '123 main st n city 'san francisco' n state 'ca' n country 'us' n zip '94105' n naccount billing info save language ruby code account account get \\( '1' \\) nbilling info recurly billinginfo \\( n name account 'acme inc n routing number '065400137' n account number '4444000000005555' n account type 'checking' n address1 '123 main st n city 'san francisco' n state 'ca' n country 'us' n zip '94105' n \\) naccount update billing info \\( billing info \\) language python code var account accounts get \\( 1 \\) nvar info new billinginfo \\( account \\) ninfo nameonaccount acme inc ninfo routingnumber 065400137 ninfo accountnumber 4444000000005555 ninfo accounttype billinginfo bankaccounttype checking ninfo address1 123 main st ninfo city san francisco ninfo state ca ninfo country us ninfo postalcode 94105 ninfo create \\( \\) language csharp code billing info n name account acme inc name account n address1 123 main st address1 n address2 nil nil address2 n city san francisco city n state ca state n zip 94105 zip n country us country n routing number 065400137 routing number n account number 4444000000005555 account number n account type checking account type n ip address 127 0 0 1 ip address n billing info language xml method post results codes language xml status 201 name code billing info href https subdomain recurly com v2 accounts 1 billing info type bank account n account href https subdomain recurly com v2 accounts 1 n name account acme inc name account n first name nil nil first name n last name nil nil last name n company nil nil company n address1 123 main st address1 n address2 nil nil address2 n city san francisco city n state ca state n zip 94105 zip n country us country n phone phone n vat number vat number n ip address 127 0 0 1 ip address n ip address country us ip address country n account type checking account type n last four 5555 last four n routing number 065400137 routing number n updated type datetime 2017 02 17t15 38 53z updated n billing info code errors n error field billing info routing number symbol invalid invalid error n errors language xml status 422 settings auth required next pages description user 55648cf93b87582b003ab8b1 version 5919d93785b2570f00e41c39 body instead using token generated recurly js instead submit full bank account address information creating billing information n nwhen billing information submitted saved required fields provided meet field validation requirements account past due invoice outstanding balance collected billing information updated n nif want create account time use account api end point \\( https docs recurly com api accounts create account \\) instead include billing information request n nthe required address fields correspond address requirements configured site nif need set back dated subscription authorziation date nacha three year authorization rule create subscription call using bank account authorized attribute n block callout n n type warning n title please note n body recurly strongly recommends using token generated recurly js \\( https docs recurly com js getting token \\) rather directly handling customer 's bank account details n n block createdat 2015 06 17t20 00 48 689z link external false project 555fbba928249c1900618a82 sync unique type post category 5919d93885b2570f00e41c42 githubsync hidden false isreference true parentdoc null title create account 's billing info \\( bank account \\) updates 56ec2580df213e1700f77836 childrenpages postcreate account 's billing info \\( bank account \\) creates account 's billing information bank account details need ach feature site call work path paramsaccount code requiredstringaccount 's unique code body paramsname account requiredstringthe name associated account may person 's full name business name field must 1 50 characters include letters digits space routing number requiredintegermust real u bank account routing number routing numbers 9 digits account number requiredintegerbank account number 4 17 digits validate number first transaction recommend customer confirm account number account type requiredstringeither 'checking' 'savings'address1 stringaddress line 1 recommended address validation field 50 character max include letters digits space address2 stringaddress line 2 field 50 character max include letters digits space city stringcity field 50 character max include letters digits space state stringstate field 2 character max lowercase uppercase country stringcountry 2 letter iso code \\( http www iso org iso country names code elements \\) strongly recommended zip stringzip postal code recommended address validation field 5 digits optional additional 4 digits separated hyphen \\( e g 12345 6789 \\) phone stringphone number field 10 digits vat number stringcustomer 's vat numberip address stringcustomer 's ipv4 address updating billing information strongly recommended instead using token generated recurly js instead submit full bank account address information creating billing information billing information submitted saved required fields provided meet field validation requirements account past due invoice outstanding balance collected billing information updated want create account time use account api end point instead include billing information request required address fields correspond address requirements configured site need set back dated subscription authorziation date nacha three year authorization rule create subscription call using bank account authorized attribute please note recurly strongly recommends using token generated recurly js rather directly handling customer 's bank account details edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format201 created422 unprocessable entity id 5919d93885b2570f00e41c51 api auth required params id 55944fab5c9eaa2300a8633c ref path required true desc account 's unique code default type string name account code id 5581d09a8625220d00429e4d ref body required true desc first name default type string name first name id 5581d09a8625220d00429e4c ref body required false desc last name default type string name last name id 5581d09a8625220d00429e4b ref body required false desc address line 1 recommended address validation default type string name address1 name address2 id 5581d09a8625220d00429e4a ref body required false desc address line 2 default type string ref body required false desc city default type string name city id 5581d09a8625220d00429e49 default type string name state id 5581d09a8625220d00429e48 ref body required false desc state default type string name country id 5581d09a8625220d00429e47 ref body required false desc country 2 letter iso code \\( http www iso org iso country names code elements \\) strongly recommended default type string name zip id 5581d09a8625220d00429e46 ref body required false desc zip postal code recommended address validation default type string name phone id 5581d09a8625220d00429e45 ref body required false desc phone number default type string name amazon billing agreement id id 58ac88c71909810f00fda9a2 ref body required false desc amazon 's billing agreement default type string name braintree payment nonce id 58b4adc1ed60c11900989b38 ref body required false desc braintree 's payment method nonce representing paypal billing agreement id required processing paypal transactions braintree default type string name paypal billing agreement id id 5723d8f2110e570e00486c2f ref body required false desc paypal 's billing agreement default type string name roku billing agreement id id 585886cd59b00a0f007f1b44 ref body required false desc roku 's cib billing roku default type string name vat number id 5581d09a8625220d00429e44 ref body required false desc customer 's vat number default type string name currency id 56c3c1ce70187b17005f4395 ref body required false desc currency invoices posted applicable account enrolled plan different currency site 's default default type string name ip address id 5581d09a8625220d00429e43 ref body required false desc customer 's ipv4 address updating billing information strongly recommended url accounts account code billing info examples codes language php code \\? php n ntry n billing info new recurly billinginfo \\( \\) n billing info account code 'b6f5783' n billing info first name 'verena' n billing info last name 'example' n billing info paypal billing agreement id 'ba 0hs87238yb688345c' n billing info create \\( \\) n n print billing info billing info n catch \\( recurly validationerror e \\) n paypal billing agreement provided invalid n print invalid paypal billing agreement e n catch \\( recurly notfounderror e \\) n could find account n print found e n name language ruby code account recurly account find \\( '1' \\) naccount billing info n first name 'verena' n last name 'example' n paypal billing agreement id 'ba 0hs87238yb688345c' n naccount billing info save language python code account account get \\( '1' \\) nbilling info account billing info nbilling info first name 'verena' nbilling info last name 'example' nbilling info paypal billing agreement id 'ba 0hs87238yb688345c' naccount update billing info \\( billing info \\) language csharp code var account accounts get \\( 1 \\) nvar info new billinginfo \\( account \\) ninfo firstname verana ninfo lastname example ninfo paypalbillingagreementid ba 0hs87238yb688345c ninfo create \\( \\) language xml code billing info n first name verena first name n last name example last name n address1 123 main st address1 n address2 nil nil address2 n city san francisco city n state ca state n zip 94105 zip n country us country n paypal billing agreement id ba 0hs87238yb688345c paypal billing agreement id n ip address 127 0 0 1 ip address n billing info method post results codes status 201 language xml code billing info href https subdomain recurly com v2 accounts 1 billing info type credit card n account href https subdomain recurly com v2 accounts 1 n first name verena first name n last name example last name n company nil nil company n address1 123 main st address1 n address2 nil nil address2 n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil phone n paypal billing agreement id ba 0hs87238yb688345c paypal billing agreement id n updated type datetime 2017 02 17t15 38 53z updated n billing info name settings title create account 's billing info \\( external token \\) user 56c3c01334df460d00c2beb3 order 3 slug create accounts billing info using external token sync unique excerpt creates account 's billing information using external token example paypal billing agreement hidden false isreference true githubsync link url updates version 5919d93785b2570f00e41c39 v 0 category 5919d93885b2570f00e41c42 createdat 2016 04 29t21 58 10 697z next pages description parentdoc null project 555fbba928249c1900618a82 type post body instead using token generated recurly js instead submit full credit card address information creating billing information n nwhen billing information submitted saved valid account past due invoice outstanding balance collected validate billing information n nif want create account time use account api end point \\( https docs recurly com api accounts create account \\) instead include billing information request n nthe required address fields correspond address requirements configured site n block callout n n type warning n body recurly strongly recommends using token generated recurly js \\( https docs recurly com js getting token \\) rather directly handling customer 's credit card details n title please note n n block n n block callout n n type warning n body api end point may used import billing information without security codes \\( cvv \\) recurly recommends requiring cvv customers collecting new updated billing information n title please note n n block link external false childrenpages postcreate account 's billing info \\( external token \\) creates account 's billing information using external token example paypal billing agreementpath paramsaccount code requiredstringaccount 's unique code body paramsfirst name requiredstringfirst namelast name stringlast nameaddress1 stringaddress line 1 recommended address validationaddress2 stringaddress line 2 city stringcitystate stringstatecountry stringcountry 2 letter iso code \\( http www iso org iso country names code elements \\) strongly recommended zip stringzip postal code recommended address validationphone stringphone numberamazon billing agreement id stringamazon 's billing agreementbraintree payment nonce stringbraintree 's payment method nonce representing paypal billing agreement id required processing paypal transactions braintree paypal billing agreement id stringpaypal 's billing agreementroku billing agreement id stringroku 's cib billing rokuvat number stringcustomer 's vat numbercurrency stringcurrency invoices posted applicable account enrolled plan different currency site 's default ip address stringcustomer 's ipv4 address updating billing information strongly recommended instead using token generated recurly js instead submit full credit card address information creating billing information billing information submitted saved valid account past due invoice outstanding balance collected validate billing information want create account time use account api end point instead include billing information request required address fields correspond address requirements configured site please note recurly strongly recommends using token generated recurly js rather directly handling customer 's credit card details please note api end point may used import billing information without security codes \\( cvv \\) recurly recommends requiring cvv customers collecting new updated billing information edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format201 created id 5919d93885b2570f00e41c52 v 0 next pages description project 555fbba928249c1900618a82 category 5919d93885b2570f00e41c42 githubsync hidden false slug lookup accounts billing info type get version 5919d93785b2570f00e41c39 api examples codes language php code \\? php n ntry n billing info recurly billinginfo get \\( 'b6f5783' \\) n print billing info billing info n catch \\( recurly notfounderror e \\) n could find account account n n't billing info n print found e n name code account recurly account find \\( '1' \\) nbilling info account billing info language ruby language python code account account get \\( '1' \\) nbilling info account billing info language csharp code var account accounts get \\( 1 \\) nvar info account billinginfo method get results codes status 200 language xml code billing info href https subdomain recurly com v2 accounts 1 billing info type credit card n account href https subdomain recurly com v2 accounts 1 n first name verena first name n last name example last name n company nil nil n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n vat number nil nil n ip address 127 0 0 1 ip address n ip address country nil nil n card type visa card type n year type integer 2019 year n month type integer 11 month n first six 411111 first six n last four 1111 last four n updated type datetime 2017 02 17t15 38 53z updated n billing info name code error n symbol found symbol n description lang en us could n't find billinginfo account code 1 description n error language xml status 404 settings auth required params required true desc account 's unique code default type string name account code id 55944f815c9eaa2300a8633a ref path ref body required false desc first name default type string name first name id 5581ce0ea5474a0d00d946a1 default type string name last name id 5581ce0ea5474a0d00d946a0 ref body required false desc last name default type string name company id 5646783bc7687d0d00739f3f ref body required false desc company name default type string name address1 id 5581ce0ea5474a0d00d9469f ref body required false desc address line 1 default type string name address2 id 5581ce0ea5474a0d00d9469e ref body required false desc address line 2 default type string name city id 5581ce0ea5474a0d00d9469d ref body required false desc city default type int name last four id 5581ce0ea5474a0d00d94695 ref body required false desc credit card number last four digits default type string name state id 5581ce0ea5474a0d00d9469c ref body required false desc state default type string name country id 5581ce0ea5474a0d00d9469b ref body required false desc country 2 letter iso code \\( http www iso org iso country names code elements \\) default type string name zip id 5581ce0ea5474a0d00d9469a ref body required false desc zip postal code body required false desc customer 's vat number default type string name vat number id 5581ce0ea5474a0d00d94699 ref desc customer 's ipv4 address updating billing information default type string name ip address id 5581ce0ea5474a0d00d94698 ref body required false name ip address country id 5581ce0ea5474a0d00d94697 ref body required false desc country ip address known recurly default type string type int name first six id 5581ce0ea5474a0d00d94696 ref body required false desc credit card number first six digits default desc visa mastercard american express discover jcb etc default type string name card type id 5581ce0ea5474a0d00d94694 ref body required false id 5581ce0ea5474a0d00d94693 ref body required false desc expiration month default type int name month name year id 5581ce0ea5474a0d00d94692 ref body required false desc expiration year default type int type string name amazon billing agreement id id 5581ce0ea5474a0d00d94690 ref body required false desc amazon billing agreement id default required false desc braintree 's payment method nonce representing payment method default type string name braintree payment nonce id 58b5b5b36bf3a42500583bc5 ref body ref body required false desc paypal billing agreement id default type string name paypal billing agreement id id 5581ce0ea5474a0d00d94691 default type string name roku billing agreement id id 58b5b5b36bf3a42500583bc4 ref body required false desc roku 's cib billing roku default type string name name account id 5581ce0ea5474a0d00d9468f ref body required false desc name associated account may person 's full name business name name account used instead first name last name payment method bank account default type int name routing number id 5581ce0ea5474a0d00d9468e ref body required false desc u bank account routing number body required false desc bank account number default type int name account number id 5581ce0ea5474a0d00d9468d ref required false desc either 'checking' 'savings' default type string name account type id 5581ce0ea5474a0d00d9468c ref body type datetime name updated id 58c82f966dc7140f003c4052 ref body required false desc timestamp representing last update billing info default url accounts account code billing info createdat 2015 06 17t19 44 14 605z isreference true link external false link url order 4 parentdoc null sync unique title lookup account 's billing info body excerpt returns account 's current billing information updates user 55648cf93b87582b003ab8b1 childrenpages getlookup account 's billing inforeturns account 's current billing information path paramsaccount code requiredstringaccount 's unique code body paramsfirst name stringfirst namelast name stringlast namecompany stringcompany nameaddress1 stringaddress line 1address2 stringaddress line 2city stringcitylast four integercredit card number last four digitsstate stringstatecountry stringcountry 2 letter iso code \\( http www iso org iso country names code elements \\) zip stringzip postal codevat number stringcustomer 's vat numberip address stringcustomer 's ipv4 address updating billing informationip address country stringcountry ip address known recurlyfirst six integercredit card number first six digitscard type stringvisa mastercard american express discover jcb etcmonth integerexpiration monthyear integerexpiration yearamazon billing agreement id stringamazon billing agreement idbraintree payment nonce stringbraintree 's payment method nonce representing payment method paypal billing agreement id stringpaypal billing agreement idroku billing agreement id stringroku 's cib billing rokuname account stringthe name associated account may person 's full name business name name account used instead first name last name payment method bank account routing number integeru bank account routing numberaccount number integerbank account numberaccount type stringeither 'checking' 'savings'updated datetimetimestamp representing last update billing info edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok404 found id 5919d93885b2570f00e41c53 category 5919d93885b2570f00e41c42 createdat 2015 06 17t20 05 12 621z githubsync hidden false v 0 body recurly js \\( https js recurly com \\) allows collect customer billing information tokenize preventing servers handle credit card information send tokens recurly api unpack token update billing information accordingly n nwhen billing information updated saved valid account past due invoice outstanding balance collected validate billing information n nif want create account time use account api end point \\( https docs recurly com api accounts create account \\) instead include billing info request isreference true link external false order 5 project 555fbba928249c1900618a82 slug update accounts billing info token sync unique updates user 55648cf93b87582b003ab8b1 api method put results codes code billing info href https subdomain recurly com v2 accounts 1 billing info type credit card n account href https subdomain recurly com v2 accounts 1 n first name verena first name n last name example last name n company nil nil company n address1 123 main st address1 n address2 nil nil address2 n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil phone n card type visa card type n year type integer 2019 year n month type integer 11 month n first six 411111 first six n last four 1111 last four n updated type datetime 2017 02 17t15 38 53z updated n billing info name status 200 language xml code error n symbol token invalid symbol n description token either invalid expired description n error language xml status 404 settings auth required params id 55944fca5c9eaa2300a8633e ref path required true desc account 's unique code default type string name account code id 5581d2f8a5474a0d00d946bc ref body required true desc token generated recurly js \\( https docs recurly com js getting token \\) default type string name token id name currency id 56d0e7b07c2e100b000afa25 ref body required false desc currency invoices posted applicable account enrolled plan different currency site 's default default type string url accounts account code billing info examples codes language php code \\? php n ntry n billing info new recurly billinginfo \\( \\) n billing info account code 'b6f5783' n billing info token id '7z6furn4jvb9' recurly js n billing info update \\( \\) n n print billing info billing info n catch \\( recurly notfounderror e \\) n could find account token invalid expired n print found e n name code account recurly account find \\( '1' \\) naccount billing info token id 'token id' naccount billing info save language ruby language python code account account get \\( '1' \\) nbilling info account billing info nbilling info token id 'token id' naccount update billing info \\( billing info \\) language csharp code var account accounts get \\( 1 \\) nvar info new billinginfo \\( account \\) ninfo tokenid token id ninfo update \\( \\) language xml code billing info n token id token id token id n billing info excerpt updates account 's billing information using token generated recurly js \\( https docs recurly com js getting token \\) returns account 's current billing information link url next pages description parentdoc null type put title update account 's billing info \\( token \\) version 5919d93785b2570f00e41c39 childrenpages putupdate account 's billing info \\( token \\) updates account 's billing information using token generated recurly js \\( https docs recurly com js getting token \\) returns account 's current billing information path paramsaccount code requiredstringaccount 's unique code body paramstoken id requiredstringa token generated recurly js \\( https docs recurly com js getting token \\) currency stringcurrency invoices posted applicable account enrolled plan different currency site 's default recurly js allows collect customer billing information tokenize preventing servers handle credit card information send tokens recurly api unpack token update billing information accordingly billing information updated saved valid account past due invoice outstanding balance collected validate billing information want create account time use account api end point instead include billing info request edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format200 ok404 found id 5919d93885b2570f00e41c54 body instead using token generated recurly js instead submit full credit card address information updating billing information non pci sensitive billing info updated api without submitting token done two ways 1 \\) billing info api \\( docs link https docs recurly com api billing info update billing info credit card \\) whereby submit information needs updated way information remains unchanged account 2 \\) providing end user unique url link billing info page update billing info securly link found configuration window subscriber 's account https subdomain recurly com accounts account code edit see hosted billing information url takes user billing site hosted recurly n nwhen billing information updated saved valid account past due invoice outstanding balance collected validate billing information n nif want create account time use account api \\( https docs recurly com api accounts create account \\) end point instead include billing information request n block callout n n type warning n title please note n body api end point may used import billing information without security codes \\( cvv \\) recurly recommends requiring cvv customers collecting new updated billing information n n block n n block callout n n type warning n body recurly strongly recommends using token generated recurly js \\( https docs recurly com js getting token \\) rather directly handling customer 's credit card details however use api call update billing address associated account n title please note n n block isreference true project 555fbba928249c1900618a82 sync unique api settings auth required params ref path required true desc account 's unique code default type string name account code id 55944fdb5c9eaa2300a8633f default type string name first name id 5581d46f8625220d00429e81 ref body required false desc first name body required false desc last name default type string name last name id 5581d46f8625220d00429e80 ref desc address line 1 recommended address validation default type string name address1 id 5581d46f8625220d00429e7f ref body required false name address2 id 5581d46f8625220d00429e7e ref body required false desc address line 2 default type string ref body required false desc city default type string name city id 5581d46f8625220d00429e7d body required false desc state default type string name state id 5581d46f8625220d00429e7c ref desc country 2 letter iso code \\( http www iso org iso country names code elements \\) strongly recommended default type string name country id 5581d46f8625220d00429e7b ref body required false id 5581d46f8625220d00429e7a ref body required false desc zip postal code recommended address validation default type string name zip id 5581d46f8625220d00429e79 ref body required false desc phone number default type string name phone name vat number id 5581d46f8625220d00429e78 ref body required false desc customer 's vat number default type string ref body required false desc credit card number spaces dashes accepted default type string name number id 5581d46f8625220d00429e76 default type string name month id 5581d46f8625220d00429e75 ref body required false desc expiration month body required false desc expiration year default type string name year id 5581d46f8625220d00429e74 ref required false desc security code cvv 3 4 digits strongly recommended default type string name verification value id 5581d46f8625220d00429e73 ref body type string name ip address id 5581d46f8625220d00429e77 ref body required false desc customer 's ipv4 address updating billing information strongly recommended default desc currency invoices posted applicable account enrolled plan different currency site 's default default type string name currency id 56c3c273c0c4630d004e86a8 ref body required false url accounts account code billing info examples codes language php code \\? php n ntry n billing info new recurly billinginfo \\( \\) n billing info account code 'b6f5783' n billing info first name 'verena' n billing info last name 'example' n billing info number '4111 1111 1111 1111' n billing info verification value '123' n billing info month 11 n billing info year 2017 n billing info update \\( \\) n n print billing info billing info n catch \\( recurly validationerror e \\) n data card invalid n print invalid data card e n catch \\( recurly notfounderror e \\) n could find account n print found e n name language ruby code account recurly account find \\( '1' \\) naccount billing info n first name 'verena' n last name 'example' n number '4111 1111 1111 1111' n verification value '123' n month 11 n year 2015 n naccount billing info save language python code account account get \\( '1' \\) nbilling info account billing info nbilling info first name 'verena' nbilling info last name 'example' nbilling info number '4111 1111 1111 1111' nbilling info verification value '123' nbilling info month 11 nbilling info year 2015 naccount update billing info \\( billing info \\) language csharp code var account accounts get \\( 1 \\) nvar info new billinginfo \\( account \\) ninfo firstname verana ninfo lastname example ninfo creditcardnumber 4111 111 1111 1111 ninfo verificationvalue 123 ninfo expirationmonth 11 ninfo expirationyear 2015 ninfo update \\( \\) code billing info n first name verena first name n last name example last name n number 4111 1111 1111 1111 number n verification value 123 verification value n month 11 month n year 2019 year n ip address 127 0 0 1 ip address n billing info language xml method put results codes status 200 language xml code billing info href https subdomain recurly com v2 accounts 1 billing info type credit card n account href https subdomain recurly com v2 accounts 1 n first name verena first name n last name example last name n company nil nil n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n vat number nil nil n ip address 127 0 0 1 ip address n ip address country nil nil n card type visa card type n year type integer 2019 year n month type integer 11 month n first six 411111 first six n last four 1111 last four n updated type datetime 2017 02 17t15 38 53z updated n billing info name status 422 code errors n transaction error n error code declined saveable error code n error category soft error category n merchant message transaction declined without specific information please contact payment gateway details ask customer contact bank merchant message n customer message transaction declined please use different card contact bank customer message n gateway error code nil nil n transaction error n error field billing info base symbol declined saveable transaction declined please use different card contact bank error n transaction href https subdomain recurly com v2 transactions 3c429fe1aa71076aaf41524634816d53 type credit card n account href https subdomain recurly com v2 accounts 1 n uuid 3c429fe1aa71076aaf41524634816d53 uuid n action verify action n amount cents type integer 0 amount cents n tax cents type integer 0 tax cents n currency usd currency n status declined status n payment method credit card payment method n reference 6445370 reference n source billing info source n recurring type boolean false recurring n test type boolean true test n voidable type boolean false voidable n refundable type boolean false refundable n ip address 127 0 0 1 ip address n transaction error n error code declined saveable error code n error category soft error category n merchant message transaction declined without specific information please contact payment gateway details ask customer contact bank merchant message n customer message transaction declined please use different card contact bank customer message n gateway error code nil nil n transaction error n cvv result code nil nil n avs result code nil nil n avs result street nil nil n avs result postal nil nil n created type datetime 2017 03 15t21 16 52z created n updated type datetime 2017 03 15t21 16 52z updated n details n account n account code 1 account code n first name verena first name n last name example last name n company new company name company n email verena example com email n billing info type credit card n first name verena first name n last name example last name n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n vat number nil nil n card type visa card type n year type integer 2019 year n month type integer 11 month n first six 400000 first six n last four 0341 last four n billing info n account n details n transaction n errors language xml category 5919d93885b2570f00e41c42 githubsync next pages description order 6 type put createdat 2015 06 17t20 11 27 639z excerpt returns account 's updated billing information parentdoc null title update account 's billing info \\( credit card \\) updates 55d337a4f77e6d0d00b1afab 562945ab1a92870d0002c302 version 5919d93785b2570f00e41c39 v 0 hidden false link external false link url slug update accounts billing info credit card user 55648cf93b87582b003ab8b1 childrenpages putupdate account 's billing info \\( credit card \\) returns account 's updated billing information path paramsaccount code requiredstringaccount 's unique code body paramsfirst name stringfirst namelast name stringlast nameaddress1 stringaddress line 1 recommended address validationaddress2 stringaddress line 2city stringcitystate stringstatecountry stringcountry 2 letter iso code \\( http www iso org iso country names code elements \\) strongly recommended zip stringzip postal code recommended address validationphone stringphone numbervat number stringcustomer 's vat numbernumber stringcredit card number spaces dashes acceptedmonth stringexpiration monthyear stringexpiration yearverification value stringsecurity code cvv 3 4 digits strongly recommended ip address stringcustomer 's ipv4 address updating billing information strongly recommended currency stringcurrency invoices posted applicable account enrolled plan different currency site 's default instead using token generated recurly js instead submit full credit card address information updating billing information non pci sensitive billing info updated api without submitting token done two ways 1 \\) billing info api \\( docs link https docs recurly com api billing info update billing info credit card \\) whereby submit information needs updated way information remains unchanged account 2 \\) providing end user unique url link billing info page update billing info securly link found configuration window subscriber 's account https subdomain recurly com accounts account code edit see hosted billing information url takes user billing site hosted recurly billing information updated saved valid account past due invoice outstanding balance collected validate billing information want create account time use account api end point instead include billing information request please note api end point may used import billing information without security codes \\( cvv \\) recurly recommends requiring cvv customers collecting new updated billing information please note recurly strongly recommends using token generated recurly js rather directly handling customer 's credit card details however use api call update billing address associated account edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format200 ok422 unprocessable entity id 5919d93885b2570f00e41c55 createdat 2015 06 17t20 39 25 270z link url slug update accounts billing info bank account sync unique api url accounts account code billing info examples codes language php code \\? php n ntry n billing info new recurly billinginfo \\( \\) n billing info account code 'b6f5783' n billing info name account 'acme inc n billing info routing number '065400137' n billing info account number '4444000000005555' n billing info account type 'checking' n billing info address1 '123 main st n billing info city 'san francisco' n billing info state 'ca' n billing info country 'us' n billing info zip '94105' n billing info update \\( \\) n n print billing info billing info n catch \\( recurly validationerror e \\) n data bank account invalid n print invalid data card e n catch \\( recurly notfounderror e \\) n could find account n print account found e n name language ruby code account recurly account find \\( '1' \\) naccount billing info n name account 'acme inc n routing number '065400137' n account number '4444000000005555' n address1 '123 main st n city 'san francisco' n state 'ca' n country 'us' n zip '94105' n naccount billing info save language python code account account get \\( '1' \\) nbilling info account billing info nbilling info name account 'acme inc nbilling info routing number '065400137' nbilling info account number '4444000000005555' nbilling info account type 'checking' nbilling info address1 '123 main st nbilling info city 'san francisco' nbilling info state 'ca' nbilling info country 'us' nbilling info zip '94105' naccount update billing info \\( billing info \\) language csharp code var account accounts get \\( 1 \\) nvar info account billinginfo ninfo nameonaccount acme inc ninfo routingnumber 065400137 ninfo accountnumber 4444000000005555 ninfo accounttype billinginfo bankaccounttype checking ninfo address1 123 main st ninfo city san francisco ninfo state ca ninfo country us ninfo postalcode 94105 ninfo update \\( \\) language xml code billing info n name account acme inc name account n address1 123 main st address1 n address2 nil nil address2 n city san francisco city n state ca state n zip 94105 zip n country us country n routing number 065400137 routing number n account number 4444000000005555 account number n account type checking account type n ip address 127 0 0 1 ip address n billing info method put results codes name code billing info href https subdomain recurly com v2 accounts 1 billing info type bank account n account href https subdomain recurly com v2 accounts 1 n name account acme inc name account n first name nil nil first name n last name nil nil last name n company nil nil company n address1 123 main st address1 n address2 nil nil address2 n city san francisco city n state ca state n zip 94105 zip n country us country n phone phone n vat number vat number n ip address 127 0 0 1 ip address n ip address country us ip address country n account type checking account type n last four 5555 last four n routing number 065400137 routing number n updated type datetime 2017 02 17t15 38 53z updated n billing info language xml status 200 settings auth required params id 55944ff05c9eaa2300a86341 ref path required true desc account 's unique code default type string name account code name name account id 5581dafd8625220d00429ea7 ref body required true desc name associated account may person 's full name business name field must 1 50 characters include letters digits space default type string ref body required true desc must real u bank account routing number routing numbers 9 digits default type int name routing number id 5581dafd8625220d00429e9d body required true desc bank account number 4 17 digits validate number first transaction recommend customer confirm account number default type int name account number id 5581dafd8625220d00429e9c ref desc either 'checking' 'savings' default type int name account type id 5581dafd8625220d00429e9b ref body required true name address1 id 5581dafd8625220d00429ea6 ref body required false desc address line 1 recommended address validation field 50 character max include letters digits space default type string ref body required false desc address line 2 field 50 character max include letters digits space default type string name address2 id 5581dafd8625220d00429ea5 default type string name city id 5581dafd8625220d00429ea4 ref body required false desc city field 50 character max include letters digits space body required false desc state field 2 character max lowercase uppercase default type string name state id 5581dafd8625220d00429ea3 ref desc country 2 letter iso code \\( http www iso org iso country names code elements \\) strongly recommended default type string name country id 5581dafd8625220d00429ea2 ref body required false id 5581dafd8625220d00429ea1 ref body required false desc zip postal code recommended address validation field 5 digits optional additional 4 digits separated hyphen \\( e g 12345 6789 \\) default type string name zip name phone id 5581dafd8625220d00429ea0 ref body required false desc phone number field 10 digits default type string ref body required false desc customer 's vat number default type string name vat number id 5581dafd8625220d00429e9f default type string name ip address id 5581dafd8625220d00429e9e ref body required false desc customer 's ipv4 address updating billing information strongly recommended excerpt returns account 's updated billing information need ach feature site call work parentdoc null title update account 's billing info \\( bank account \\) category 5919d93885b2570f00e41c42 body instead using token generated recurly js instead submit full bank account address information updating billing information n nwhen billing information updated saved required fields provided meet field validation requirements account past due invoice outstanding balance collected billing information updated n nif want create account time use account api end point \\( https docs recurly com api accounts create account \\) instead include billing information request n nif need set back dated subscription authorization date nacha three year authorization rule create subscription call using bank account authorized attribute n block callout n n type warning n body recurly strongly recommends using token generated recurly js \\( https docs recurly com js getting token \\) rather directly handling customer 's bank account details however use api call update billing address associated account n title please note n n block githubsync hidden false isreference true next pages description project 555fbba928249c1900618a82 v 0 user 55648cf93b87582b003ab8b1 type put order 7 updates 55d336d80168850d0073f056 55d33926f77e6d0d00b1afb5 version 5919d93785b2570f00e41c39 link external false childrenpages putupdate account 's billing info \\( bank account \\) returns account 's updated billing information need ach feature site call work path paramsaccount code requiredstringaccount 's unique code body paramsname account requiredstringthe name associated account may person 's full name business name field must 1 50 characters include letters digits space routing number requiredintegermust real u bank account routing number routing numbers 9 digits account number requiredintegerbank account number 4 17 digits validate number first transaction recommend customer confirm account number account type requiredintegereither 'checking' 'savings'address1 stringaddress line 1 recommended address validation field 50 character max include letters digits space address2 stringaddress line 2 field 50 character max include letters digits space city stringcity field 50 character max include letters digits space state stringstate field 2 character max lowercase uppercase country stringcountry 2 letter iso code \\( http www iso org iso country names code elements \\) strongly recommended zip stringzip postal code recommended address validation field 5 digits optional additional 4 digits separated hyphen \\( e g 12345 6789 \\) phone stringphone number field 10 digits vat number stringcustomer 's vat numberip address stringcustomer 's ipv4 address updating billing information strongly recommended instead using token generated recurly js instead submit full bank account address information updating billing information billing information updated saved required fields provided meet field validation requirements account past due invoice outstanding balance collected billing information updated want create account time use account api end point instead include billing information request need set back dated subscription authorization date nacha three year authorization rule create subscription call using bank account authorized attribute please note recurly strongly recommends using token generated recurly js rather directly handling customer 's bank account details however use api call update billing address associated account edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format200 ok id 5919d93885b2570f00e41c56 body instead using token generated recurly js instead submit full credit card address information creating billing information n nwhen billing information submitted saved valid account past due invoice outstanding balance collected validate billing information n nif want create account time use account api end point \\( https docs recurly com api accounts create account \\) instead include billing information request n nthe required address fields correspond address requirements configured site n block callout n n type warning n body recurly strongly recommends using token generated recurly js \\( https docs recurly com js getting token \\) rather directly handling customer 's credit card details n title please note n n block n n block callout n n type warning n body api end point may used import billing information without security codes \\( cvv \\) recurly recommends requiring cvv customers collecting new updated billing information n title please note n n block isreference true type put user 56c3c01334df460d00c2beb3 createdat 2016 04 29t21 59 52 047z excerpt updates account 's billing information using external token example paypal billing agreement hidden false link url order 8 parentdoc null slug update accounts billing info using external token v 0 version 5919d93785b2570f00e41c39 title update account 's billing info \\( using external token \\) sync unique updates githubsync category 5919d93885b2570f00e41c42 link external false next pages description project 555fbba928249c1900618a82 api params default type string name account code id 55944fab5c9eaa2300a8633c ref path required true desc account 's unique code body required true desc first name default type string name first name id 5581d09a8625220d00429e4d ref required false desc last name default type string name last name id 5581d09a8625220d00429e4c ref body ref body required false desc address line 1 recommended address validation default type string name address1 id 5581d09a8625220d00429e4b default type string name address2 id 5581d09a8625220d00429e4a ref body required false desc address line 2 body required false desc city default type string name city id 5581d09a8625220d00429e49 ref required false desc state default type string name state id 5581d09a8625220d00429e48 ref body type string name country id 5581d09a8625220d00429e47 ref body required false desc country 2 letter iso code \\( http www iso org iso country names code elements \\) strongly recommended default desc zip postal code recommended address validation default type string name zip id 5581d09a8625220d00429e46 ref body required false id 5581d09a8625220d00429e45 ref body required false desc phone number default type string name phone name amazon billing agreement id id 58ac88e0a7906a2f0076ab21 ref body required false desc amazon 's billing agreement default type string type string name braintree payment nonce id 58b5b5296caa320f00470931 ref body required false desc braintree 's payment method nonce representing paypal billing agreement id required processing paypal transactions braintree default required false desc paypal 's billing agreement default type string name paypal billing agreement id id 5723d8f2110e570e00486c2f ref body ref body required false desc roku 's cib billing roku default type string name roku billing agreement id id 58b5b564b3bd052f009c61a0 body required false desc customer 's vat number default type string name vat number id 5581d09a8625220d00429e44 ref desc currency invoices posted applicable account enrolled plan different currency site 's default default type string name currency id 56c3c1ce70187b17005f4395 ref body required false id 5581d09a8625220d00429e43 ref body required false desc customer 's ipv4 address updating billing information strongly recommended default type string name ip address url accounts account code billing info examples codes language php code \\? php n ntry n billing info new recurly billinginfo \\( \\) n billing info account code 'b6f5783' n billing info first name 'verena' n billing info last name 'example' n billing info paypal billing agreement id 'ba 0hs87238yb688345c' n billing info create \\( \\) n n print billing info billing info n catch \\( recurly validationerror e \\) n paypal billing agreement provided invalid n print invalid paypal billing agreement e n catch \\( recurly notfounderror e \\) n could find account n print found e n name code account recurly account find \\( '1' \\) naccount billing info n first name 'verena' n last name 'example' n paypal billing agreement id 'ba 0hs87238yb688345c' n naccount billing info save language ruby language python code account account get \\( '1' \\) nbilling info account billing info nbilling info first name 'verena' nbilling info last name 'example' nbilling info paypal billing agreement id 'ba 0hs87238yb688345c' naccount update billing info \\( billing info \\) language csharp code var account accounts get \\( 1 \\) nvar info new billinginfo \\( account \\) ninfo firstname verana ninfo lastname example ninfo paypalbillingagreementid ba 0hs87238yb688345c ninfo create \\( \\) language xml code billing info n first name verena first name n last name example last name n address1 123 main st address1 n address2 nil nil address2 n city san francisco city n state ca state n zip 94105 zip n country us country n paypal billing agreement id ba 0hs87238yb688345c paypal billing agreement id n ip address 127 0 0 1 ip address n billing info method put results codes status 201 language xml code billing info href https subdomain recurly com v2 accounts 1 billing info type credit card n account href https subdomain recurly com v2 accounts 1 n first name verena first name n last name example last name n company nil nil company n address1 123 main st address1 n address2 nil nil address2 n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil phone n paypal billing agreement id ba 0hs87238yb688345c paypal billing agreement id n updated type datetime 2017 02 17t15 38 53z updated n billing info name settings auth required childrenpages putupdate account 's billing info \\( using external token \\) updates account 's billing information using external token example paypal billing agreementpath paramsaccount code requiredstringaccount 's unique code body paramsfirst name requiredstringfirst namelast name stringlast nameaddress1 stringaddress line 1 recommended address validationaddress2 stringaddress line 2 city stringcitystate stringstatecountry stringcountry 2 letter iso code \\( http www iso org iso country names code elements \\) strongly recommended zip stringzip postal code recommended address validationphone stringphone numberamazon billing agreement id stringamazon 's billing agreementbraintree payment nonce stringbraintree 's payment method nonce representing paypal billing agreement id required processing paypal transactions braintree paypal billing agreement id stringpaypal 's billing agreementroku billing agreement id stringroku 's cib billing rokuvat number stringcustomer 's vat numbercurrency stringcurrency invoices posted applicable account enrolled plan different currency site 's default ip address stringcustomer 's ipv4 address updating billing information strongly recommended instead using token generated recurly js instead submit full credit card address information creating billing information billing information submitted saved valid account past due invoice outstanding balance collected validate billing information want create account time use account api end point instead include billing information request required address fields correspond address requirements configured site please note recurly strongly recommends using token generated recurly js rather directly handling customer 's credit card details please note api end point may used import billing information without security codes \\( cvv \\) recurly recommends requiring cvv customers collecting new updated billing information edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format201 created id 5919d93885b2570f00e41c57 isreference true title clear account 's billing info type delete body excerpt may remove stored billing information account account subscription renewal go past due unless update billing info renewal occurs link external false sync unique link url project 555fbba928249c1900618a82 v 0 createdat 2015 06 17t20 40 02 831z githubsync next pages description order 9 parentdoc null slug clear accounts billing info updates api examples codes language php code \\? php n ntry n billing info recurly billinginfo get \\( 'b6f5783' \\) n billing info delete \\( \\) n n single api request n recurly billinginfo deleteforaccount \\( 'b6f5783' \\) n n print billing info billing info n catch \\( recurly notfounderror e \\) n account found account billing info n print found e n name code account recurly account find \\( '1' \\) nif billing info account billing info n billing info destroy nend language ruby language python code account account get \\( '1' \\) nbilling info account billing info nif billing info n billing info delete \\( \\) language csharp code var account accounts get \\( 1 \\) naccount deletebillinginfo \\( \\) method delete results codes code status 204 content name status 204 language json settings auth required params required true desc account 's unique code default type string name account code id 55944ffb0c33bd0d0005964c ref path url accounts account code billing info category 5919d93885b2570f00e41c42 hidden false user 55648cf93b87582b003ab8b1 version 5919d93785b2570f00e41c39 childrenpages deleteclear account 's billing infoyou may remove stored billing information account account subscription renewal go past due unless update billing info renewal occurs path paramsaccount code requiredstringaccount 's unique code edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format204 content id 5919d94285b2570f00e41cd1 project 555fbba928249c1900618a82 type get isreference true link url next pages description order 1 parentdoc null category 5919d93885b2570f00e41c43 updates user 55648cf93b87582b003ab8b1 version 5919d93785b2570f00e41c39 v 0 body createdat 2015 06 17t22 25 07 292z excerpt returns list coupons link external false slug list active coupons api params default type string name state id 5581f3c38625220d00429ee7 ref query required false desc state coupons return `redeemable` `expired` `maxed out` `inactive` query required false desc attribute used order records `created at` `updated at` default created type string name sort id 578eaf697d6eeb0e004fb85e ref desc order products returned `asc` ascending order `desc` descending order default desc type string name order id 578eaf697d6eeb0e004fb85d ref query required false id 578eaf85902f512200bd3f9f ref query required false desc operates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time default type datetime name begin time id 578eafa27d6eeb0e004fb85f ref query required false desc operates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time default type datetime name end time name per page id 5581f3c38625220d00429ee5 ref query required false desc number records return per page maximum 200 default 50 type int ref query required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page default type string name cursor id 5581f3c38625220d00429ee6 url coupons examples codes language php code \\? php n n coupons recurly couponlist get \\( \\) nforeach \\( coupons coupon \\) n print coupon coupon n n name language ruby code recurly coupon find coupon n puts coupon coupon inspect nend language python code client version 2 1 6 nfor coupon coupon \\( \\) n print 'coupon s' coupon n n client version 2 1 5 ncoupons coupon \\( \\) nwhile coupons n coupon coupons n print 'coupon s' coupon n try n coupons coupons next page \\( \\) n except pageerror n coupons \\( \\) n code using system linq n nvar coupons coupons list \\( \\) nwhile \\( coupons \\( \\) \\) n n tforeach \\( var coupon coupons \\) n tconsole writeline \\( coupon coupon \\) n tcoupons coupons next n language csharp method get results codes code coupons type array n coupon href https subdomain recurly com v2 coupons special n redemptions href https subdomain recurly com v2 coupons special redemptions n id type integer 2151093486799579392 id n coupon code special coupon code n name special 10 name n state redeemable state n description nil nil n discount type percent discount type n discount percent type integer 10 discount percent n invoice description nil nil n redeem date type datetime 2017 12 31t00 00 00z redeem date n single use type boolean true single use n applies months nil nil n max redemptions type integer 200 max redemptions n applies plans type boolean false applies plans n created type datetime 2016 07 11t18 50 17z created n updated type datetime 2016 07 11t18 50 17z updated n deleted nil nil n duration single use duration n temporal unit nil nil n temporal amount nil nil n applies non plan charges type boolean false applies non plan charges n redemption resource account redemption resource n max redemptions per account nil nil n coupon type single code coupon type n plan codes type array n plan code gold plan code n plan code platinum plan code n plan codes n name redeem href https subdomain recurly com v2 coupons special redeem method post n coupon n continued n coupons name status 200 language xml settings auth required githubsync hidden false sync unique title list coupons childrenpages getlist couponsreturns list coupons query paramsstate stringallthe state coupons return `redeemable` `expired` `maxed out` `inactive` sort stringcreated atthe attribute used order records `created at` `updated at` order stringdescthe order products returned `asc` ascending order `desc` descending order begin time datetimeoperates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time end time datetimeoperates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time per page integer50number records return per page maximum 200 cursor stringsplits records across pages leave blank return first page follow uri first page 's link header fetch next page edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d94285b2570f00e41cd2 api examples codes language php name code \\? php n ntry n coupon new recurly coupon \\( \\) n coupon coupon code 'gorby1' n coupon redeem date '2016 07 04' n coupon duration 'single use' n coupon redemption resource 'subscription' n coupon max redemptions per account 1 n coupon applies non plan charges true n n 2 n coupon name 'special 2 coupon' n coupon discount type 'dollars' n coupon discount cents addcurrency \\( 'usd' 200 \\) 2 00 discount n n 10 n coupon name 'special 10 off' n coupon discount type 'percent' n coupon discount percent 10 n n limit gold platinum plans n coupon applies plans false n coupon plan codes array \\( 'gold' 'platinum' \\) n n coupon create \\( \\) n n print coupon coupon n catch \\( recurly validationerror e \\) n print invalid data e n code coupon recurly coupon new \\( n coupon code 'special' n redeem date date new \\( 2014 1 1 \\) n duration 'single use' n \\) n n 2 ncoupon name 'special 2 coupon' ncoupon discount type 'dollars' ncoupon discount cents 2 00 n n 10 ncoupon name 'special 10 off' ncoupon discount type 'percent' ncoupon discount percent 10 n n limit gold platinum plans ncoupon applies plans false ncoupon plan codes w \\( gold platinum \\) n n limit redemption specific subscription account ncoupon redemption resource 'subscription' n n limit redemptions per account specific number ncoupon max redemptions per account 1 n n discount include one time charges ncoupon applies non plan charges true n ncoupon save language ruby code coupon coupon \\( n coupon code 'special' n redeem date datetime date \\( 2014 1 1 \\) n duration 'single use' n \\) n n 2 ncoupon name 'special 2 coupon' ncoupon discount type 'dollars' ncoupon discount cents money \\( 200 \\) n n 10 ncoupon name 'special 10 off' ncoupon discount type 'percent' ncoupon discount percent 10 n n limit gold platinum plans ncoupon applies plans false ncoupon plan codes 'gold' 'platinum' n n limit redemption specific subscription account ncoupon redemption resource 'subscription' n n limit redemptions per account specific number ncoupon max redemptions per account 1 n n discount include one time charges ncoupon applies non plan charges true n ncoupon save \\( \\) language python code new coupon \\( code name discount \\) n n 2 nvar coupon new coupon \\( special n special 2 coupon new dictionary string int \\( \\) usd 200 \\) n n 10 nvar coupon new coupon \\( special n special 10 coupon 10 \\) n ncoupon redeembydate new datetime \\( 2017 1 1 \\) ncoupon singleuse true n n limit gold platinum plans ncoupon appliestoallplans false ncoupon plans add \\( gold \\) ncoupon plans add \\( silver \\) n n properties ncoupon redeembydate new datetime \\( 2014 1 1 \\) ncoupon singleuse true ncoupon redemptionresource coupon redemptionresourcetype subscription ncoupon maxredemptionsperaccount 1 ncoupon appliestononplancharges true n ncoupon create \\( \\) language csharp code plans n coupon n coupon code special coupon code n name special 2 coupon name n discount type dollars discount type n discount cents n usd 200 usd n discount cents n redeem date 2017 12 31 redeem date n duration temporal duration n temporal unit day temporal unit n temporal amount 28 temporal amount n max redemptions 200 max redemptions n max redemptions per account 1 max redemptions per account n applies plans true applies plans n coupon n n specific plan codes n coupon n coupon code subscription special coupon code n name special 10 name n discount type percent discount type n discount percent 10 discount percent n redeem date 2017 12 31 redeem date n max redemptions 200 max redemptions n applies plans false applies plans n plan codes n plan code gold plan code n plan code platinum plan code n plan codes n redemption resource subscription redemption resource n coupon language xml name method post results codes status 201 name code coupon href https subdomain recurly com v2 coupons special n redemptions href https subdomain recurly com v2 coupons special redemptions n id type integer 2151093486799579392 id n coupon code special coupon code n name special 10 name n state redeemable state n description nil nil n discount type percent discount type n discount percent type integer 10 discount percent n invoice description nil nil n redeem date type datetime 2017 12 31t00 00 00z redeem date n single use type boolean true single use n applies months nil nil n max redemptions type integer 200 max redemptions n applies plans type boolean false applies plans n created type datetime 2016 07 11t18 50 17z created n updated type datetime 2016 07 11t18 50 17z updated n deleted nil nil n duration single use duration n temporal unit nil nil n temporal amount nil nil n applies non plan charges type boolean false applies non plan charges n redemption resource account redemption resource n max redemptions per account nil nil n coupon type single code coupon type n plan codes type array n plan code gold plan code n plan code platinum plan code n plan codes n name redeem href https subdomain recurly com v2 coupons special redeem method post n coupon language xml settings auth required params ref body required true desc unique code identify redeem coupon code may contain following characters z z 0 9 max 50 characters default type string name coupon code id 5581fc9c8625220d00429f13 default type string name name id 5581fc9c8625220d00429f12 ref body required true desc coupon name body required false desc description coupon hosted payment pages default type string name description id 5581fc9c8625220d00429f11 ref desc `percent` `dollars` `free trial` default type string name discount type id 5581fc9c8625220d00429f0a ref body required true id 5581fc9c8625220d00429f08 ref body required false desc mapping discount amounts currency discount type `dollars` max 10000000 default type int name discount cents id 5581fc9c8625220d00429f09 ref body required false desc discount percentage discount type `percent` default type int name discount percent id 5581fc9c8625220d00429f10 ref body required false desc description coupon invoice default type string name invoice description id 5581fc9c8625220d00429f0f ref body required false desc last date redeem coupon defaults date default type datetime name redeem date name single use id 5581fc9c8625220d00429f0e ref body required false desc deprecated please use `duration` true coupon applies first invoice default type boolean type int name applies months id 5581fc9c8625220d00429f0d ref body required false desc deprecated please use `temporal unit` `temporal amount` number months redemption coupon valid defaults date default desc maximum number accounts may use coupon longer redeemed default type int name max redemptions id 5581fc9c8625220d00429f0c ref body required false name applies plans id 5581fc9c8625220d00429f0b ref body required false desc coupon valid plans true defaults true default true type boolean type string name duration id 55babe051b0d663700781631 ref body required false desc `forever` `single use` `temporal` `single use` coupon applies first invoice `temporal` coupon apply invoices duration determined `temporal unit` `temporal amount` attributes default forever required false desc `day` `week` `month` `year` duration `temporal` `temporal unit` multiplied `temporal amount` define duration coupon applied invoices default type string name temporal unit id 55babe051b0d663700781630 ref body ref body required false desc duration `temporal` `temporal amount` integer multiplied `temporal unit` define duration coupon applied invoices default type int name temporal amount id 55babe051b0d66370078162f default false type boolean name applies non plan charges id 5612aac709bdc51700697025 ref body required false desc coupon valid one time non plan charges `true` defaults `false` default account type string name redemption resource id 5612aac709bdc51700697024 ref body required false desc whether discount eligible charges account specific subscription values `account` `subscription` body required false desc number times coupon redeemed specific account `null` default means unlimited default type int name max redemptions per account id 5612aac709bdc51700697023 ref desc whether coupon `single code` `bulk` bulk coupons require `unique code template` generate unique codes generate endpoint default single code type string name coupon type id 5612aac709bdc51700697022 ref body required false name unique code template id 5612aac709bdc51700697021 ref body required false desc template generating unique codes see rules creating unique code templates default type string type array string name plan codes id 5581fc9c8625220d00429f07 ref body required false desc array `plan codes` coupon applies `applies plans` false default required false desc relevant coupon type `free trial` free trial amount used together free trial unit define length free trial coupon example 2 week free trial would defined free trial amount 2 free trial unit week default type int name free trial amount id 58dc0ba47e03800f00cfebe4 ref body type string name free trial unit id 58dc0ba47e03800f00cfebe3 ref body required false desc relevant coupon type `free trial` allowed values `day` `week` `month` free trial unit used together free trial unit define length free trial coupon example 2 week free trial would defined free trial amount 2 free trial unit week default url coupons category 5919d93885b2570f00e41c43 link url updates 58dbcfb5b8a31a390083c696 user 5581f6648625220d00429ef6 v 0 hidden false isreference true link external false parentdoc null project 555fbba928249c1900618a82 title create coupon createdat 2015 06 17t23 02 52 933z excerpt creates new coupon please note coupons cannot updated created next pages description order 2 version 5919d93785b2570f00e41c39 body discount dollars nwhen specifying discount amount flat amount currency must specified amount array example n```xml n discount type dollars discount type n discount cents n usd 500 usd n eur 400 eur n gbp 300 gbp n discount cents n``` n discount percentage npercentage discounts need specify discount percentage example n```xml n discount type percent discount type n discount percent 10 discount percent n``` n limiting specific plans nif coupon applies plans also apply plans created future limit coupon specific plans may specify array plan codes example n```xml n applies plans false applies plans n plan codes n plan code silver plan code n plan code gold plan code n plan codes n``` n creating unique code templates nif creating bulk coupon need create unique code template rules n1 must start template coupon code wrapped single quotes n2 outside single quotes use 9 character want random number n3 outside single quotes use x character want random letter n4 outside single quotes use character want random number letter n5 use single quotes characters want remain static strings alphanumeric may contain n n```xml n coupon code thankyou coupon code n coupon type bulk coupon type n unique code template 'thankyou'99999999 unique code template n``` nthis example create unique code like thankyou41863675 githubsync slug create coupon sync unique type post childrenpages postcreate couponcreates new coupon please note coupons cannot updated created body paramscoupon code requiredstringunique code identify redeem coupon code may contain following characters z z 0 9 max 50 characters name requiredstringcoupon name description stringdescription coupon hosted payment pages discount type requiredstring`percent` `dollars` `free trial` discount cents integermapping discount amounts currency discount type `dollars` max 10000000 discount percent integerdiscount percentage discount type `percent` invoice description stringdescription coupon invoice redeem date datetimelast date redeem coupon defaults date single use booleandeprecated please use `duration` true coupon applies first invoice applies months integerdeprecated please use `temporal unit` `temporal amount` number months redemption coupon valid defaults date max redemptions integermaximum number accounts may use coupon longer redeemed applies plans booleantruethe coupon valid plans true defaults true duration stringforever`forever` `single use` `temporal` `single use` coupon applies first invoice `temporal` coupon apply invoices duration determined `temporal unit` `temporal amount` attributes temporal unit string`day` `week` `month` `year` duration `temporal` `temporal unit` multiplied `temporal amount` define duration coupon applied invoices temporal amount integerif duration `temporal` `temporal amount` integer multiplied `temporal unit` define duration coupon applied invoices applies non plan charges booleanfalsethe coupon valid one time non plan charges `true` defaults `false` redemption resource stringaccountwhether discount eligible charges account specific subscription values `account` `subscription` max redemptions per account integerthe number times coupon redeemed specific account `null` default means unlimited coupon type stringsingle codewhether coupon `single code` `bulk` bulk coupons require `unique code template` generate unique codes generate endpoint unique code template stringthe template generating unique codes see rules creating unique code templates plan codes array stringsarray `plan codes` coupon applies `applies plans` false free trial amount integeronly relevant coupon type `free trial` free trial amount used together free trial unit define length free trial coupon example 2 week free trial would defined free trial amount 2 free trial unit week free trial unit stringonly relevant coupon type `free trial` allowed values `day` `week` `month` free trial unit used together free trial unit define length free trial coupon example 2 week free trial would defined free trial amount 2 free trial unit week discount dollarswhen specifying discount amount flat amount currency must specified amount array example discount percentagepercentage discounts need specify discount percentage example limiting specific plansif coupon applies plans also apply plans created future limit coupon specific plans may specify array plan codes example creating unique code templatesif creating bulk coupon need create unique code template rules must start template coupon code wrapped single quotes outside single quotes use 9 character want random number outside single quotes use x character want random letter outside single quotes use character want random number letter use single quotes characters want remain static strings alphanumeric may contain example create unique code like thankyou41863675 edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format201 created id 5919d94285b2570f00e41cd3 title lookup coupon user 5581f6648625220d00429ef6 version 5919d93785b2570f00e41c39 v 0 category 5919d93885b2570f00e41c43 excerpt returns information active coupon link url project 555fbba928249c1900618a82 api method get results codes language xml status 200 name single code code coupon href https subdomain recurly com v2 coupons special n redemptions href https subdomain recurly com v2 coupons special redemptions n id type integer 2151093486799579392 id n coupon code special coupon code n name special 10 name n state redeemable state n description nil nil n discount type percent discount type n discount percent type integer 10 discount percent n invoice description nil nil n redeem date type datetime 2017 12 31t00 00 00z redeem date n single use type boolean true single use n applies months nil nil n max redemptions type integer 200 max redemptions n applies plans type boolean false applies plans n created type datetime 2016 07 11t18 50 17z created n updated type datetime 2016 07 11t18 50 17z updated n deleted nil nil n duration single use duration n temporal unit nil nil n temporal amount nil nil n applies non plan charges type boolean false applies non plan charges n redemption resource account redemption resource n max redemptions per account nil nil n coupon type single code coupon type n plan codes type array n plan code gold plan code n plan code platinum plan code n plan codes n name redeem href https subdomain recurly com v2 coupons special redeem method post n coupon name bulk coupon status 200 language xml code coupon href https subdomain recurly com v2 coupons sprintdemos347 n redemptions href https subdomain recurly com v2 coupons savemore redemptions n unique coupon codes href https subdomain recurly com v2 coupons savemore unique coupon codes n coupon code savemore coupon code n name save annual sale name n state redeemable state n description nil nil description n discount type dollars discount type n discount cents n usd type integer 2000 usd n discount cents n invoice description nil nil invoice description n redeem date nil nil redeem date n single use type boolean false single use n applies months nil nil applies months n max redemptions nil nil max redemptions n applies plans type boolean true applies plans n created type datetime 2015 10 05t16 42 50z created n duration temporal duration n temporal unit day temporal unit n temporal amount type integer 28 temporal amount n applies non plan charges type boolean false applies non plan charges n redemption resource account redemption resource n max redemptions per account type integer 1 max redemptions per account n coupon type bulk coupon type n unique code template 'savemore'99999999 unique code template n deleted nil nil deleted n unique coupon codes count type integer 100 unique coupon codes count n plan codes type array plan codes n name generate href https subdomain recurly com v2 coupons savemore generate method post n coupon name unique code status 200 language xml code coupon href https subdomain recurly com v2 coupons savemore28945343 n bulk coupon href https subdomain recurly com v2 coupons savemore n redemption href https subdomain recurly com v2 coupons savemore28945343 redemption n coupon code savemore28945343 coupon code n name save annual sale name n state maxed state n description description n discount type dollar discount type n discount percent type integer 2000 discount percent n invoice description invoice description n redeem date nil nil redeem date n single use type boolean true single use n applies months nil nil applies months n max redemptions nil nil max redemptions n applies plans type boolean false applies plans n created type datetime 2015 10 05t16 42 50z created n duration temporal duration n temporal unit day temporal unit n temporal amount type integer 28 temporal amount n applies non plan charges type boolean false applies non plan charges n redemption resource account redemption resource n max redemptions per account type integer 1 max redemptions per account n coupon type unique code coupon type n redeemed type datetime 2015 10 07t18 48 12z redeemed n deleted nil nil deleted n plan codes type array plan codes n name restore href https subdomain recurly com v2 coupons savemore28945343 restore method put n coupon settings auth required params type string name coupon code id 5783c9e36bcaf40e00a5d872 ref path required true desc unique code identify redeem coupon default url coupons coupon code examples codes code \\? php n ntry n coupon recurly coupon get \\( 'special' \\) n print coupon coupon n n catch \\( recurly notfounderror e \\) n print coupon exist n name language php language ruby code coupon recurly coupon find \\( 'special' \\) language python code coupon coupon get \\( 'special' \\) language csharp code var coupon coupons get \\( special \\) hidden false next pages description parentdoc null updates 5654b5aa48b4df0d00f67d9d 570fc426277cba22000c87d4 githubsync order 3 slug lookup coupon sync unique type get body createdat 2015 06 17t22 55 45 346z isreference true link external false childrenpages getlookup couponreturns information active coupon path paramscoupon code requiredstringunique code identify redeem coupon edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 single code200 bulk coupon200 unique code id 5919d94285b2570f00e41cd4 api settings auth required params ref body required false desc number unique codes want generate bulk coupon must 1 200 default type int name number unique codes id 5618a0ab9420c40d00510833 path required true desc unique code identify redeem coupon default type string name coupon code id 578d05a3d9c55c2000d4f1e1 ref url coupons coupon code generate examples codes language xml code coupon n number unique codes 200 number unique codes n coupon name xml method post results codes language xml status 400 name request high code error n symbol number unique codes symbol n description limited generating 200 time description n error name request progress code error n symbol number unique codes symbol n description number unique codes cannot generated unique code creation progress please wait finish try description n error language xml status 400 code error n symbol number unique codes symbol n description number unique codes generate total 100000 codes description n error language xml status 400 name max reached code error n symbol number unique codes symbol n description coupon must type bulk generate unique codes description n error language xml status 400 name bulk coupon code http 1 1 201 created ncontent type application xml charset utf 8 nlocation https subdomain recurly com v2 coupons thankyou unique coupon codes \\? cursor 1998184141762793924 3a1468970111 per page 200 language text status 201 githubsync title generate unique codes updates link url next description pages project 555fbba928249c1900618a82 slug generate unique codes sync unique category 5919d93885b2570f00e41c43 createdat 2015 10 10t05 22 51 540z hidden false link external false parentdoc null user 55b66dba6127b1250036446f v 0 body block api header n n type basic n title view unique codes n n block nthe response include location unique codes link header n``` nhttps subdomain recurly com v2 coupons savemore unique coupon codes \\? cursor 1792526747654056328 per page 200 n``` excerpt create unique codes bulk coupon bulk coupon 100 000 unique codes total generate endpoint allows 200 unique codes time endpoint called multiple times create number unique codes need isreference true order 4 type post version 5919d93785b2570f00e41c39 childrenpages postgenerate unique codescreate unique codes bulk coupon bulk coupon 100 000 unique codes total generate endpoint allows 200 unique codes time endpoint called multiple times create number unique codes need path paramscoupon code requiredstringunique code identify redeem coupon body paramsnumber unique codes integernumber unique codes want generate bulk coupon must 1 200 view unique codes response include location unique codes link header edit pagesuggest editsdefinition api url page api url examplesxmlresult format400 request high400 request progress400 max reached400 bulk coupon201 created id 5919d94285b2570f00e41cd5 createdat 2015 06 17t23 28 22 499z excerpt expire coupon customers longer redeem coupon order 5 parentdoc null user 5581f6648625220d00429ef6 v 0 isreference true link external false slug deactivate coupon sync unique type delete updates api settings auth required params ref path required true desc unique code identify redeem coupon default type string name coupon code id 578d05b984f5cd0e00891689 url coupons coupon code examples codes name code \\? php n ntry n coupon recurly coupon get \\( 'special' \\) n coupon delete \\( \\) n n print coupon coupon n catch \\( recurly notfounderror e \\) n print coupon found e n language php code coupon recurly coupon find \\( 'special' \\) ncoupon destroy language ruby code coupon coupon get \\( 'special' \\) ncoupon delete \\( \\) language python code var coupon coupons get \\( special \\) ncoupon deactivate \\( \\) language csharp method delete results codes status 204 language xml code status 204 content body block callout n n type info n title bulk unique coupons n body use coupon code main coupon campaign also known prefix expire yet redeemed unique codes campaign use unique code 's coupon code order expire specific unique code n n block githubsync title expire coupon category 5919d93885b2570f00e41c43 hidden false link url next pages description project 555fbba928249c1900618a82 version 5919d93785b2570f00e41c39 childrenpages deleteexpire couponexpire coupon customers longer redeem coupon path paramscoupon code requiredstringunique code identify redeem coupon bulk unique coupons use coupon code main coupon campaign also known prefix expire yet redeemed unique codes campaign use unique code 's coupon code order expire specific unique code edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format204 content id 5919d94285b2570f00e41cd6 link external false parentdoc null user 55b66dba6127b1250036446f body block api header n n type basic n title editing bulk coupons unique codes n n block nyou edit bulk coupon change rules campaign cannot edit unique code within campaign category 5919d93885b2570f00e41c43 hidden false api results codes status 200 language xml code coupon href https subdomain recurly com v2 coupons special n redemptions href https subdomain recurly com v2 coupons special redemptions n id type integer 2151093486799579392 id n coupon code special coupon code n name new coupon name name n state redeemable state n description new coupon description hosted pages description n discount type percent discount type n discount percent type integer 10 discount percent n invoice description new coupon description invoice invoice description n redeem date type datetime 2017 12 31t00 00 00z redeem date n single use type boolean true single use n applies months nil nil n max redemptions type integer 500 max redemptions n applies plans type boolean false applies plans n created type datetime 2016 07 11t18 50 17z created n updated type datetime 2016 07 11t18 52 29z updated n deleted nil nil n duration single use duration n temporal unit nil nil n temporal amount nil nil n applies non plan charges type boolean false applies non plan charges n redemption resource account redemption resource n max redemptions per account type integer 1 max redemptions per account n coupon type single code coupon type n plan codes type array n plan code gold plan code n plan code platinum plan code n plan codes n name redeem href https subdomain recurly com v2 coupons special redeem method post n coupon name language xml code error n symbol attributes allowed symbol n description allowed edit attributes discount type description n error name field editable status 400 settings auth required params body required false desc coupon name default type string name name id 561738644d9e4a17002a0de5 ref desc description coupon hosted payment pages default type string name description id 561738644d9e4a17002a0de4 ref body required false name invoice description id 561738644d9e4a17002a0de3 ref body required false desc description coupon invoice default type string ref body required false desc last date redeem coupon defaults date default type datetime name redeem date id 561738644d9e4a17002a0de2 default type int name max redemptions id 561738644d9e4a17002a0de1 ref body required false desc maximum number accounts may use coupon longer redeemed body required false desc number times coupon redeemed specific account `null` default means unlimited default type int name max redemptions per account id 561738644d9e4a17002a0de0 ref required true desc unique code identify redeem coupon default type string name coupon code id 578d05d52c6ddb0e003fd005 ref path url coupons coupon code examples codes name language xml code coupon n name new coupon name name n description new coupon description hosted pages description n invoice description new coupon description invoice invoice description n redeem date 2017 12 31 redeem date n max redemptions 500 max redemptions n max redemptions per account 1 max redemptions per account n coupon method put githubsync next pages description order 6 version 5919d93785b2570f00e41c39 isreference true link url title edit coupon updates slug edit coupon sync unique type put v 0 createdat 2015 10 09t03 45 40 895z excerpt edit redeemable coupon extend redemption rules redeemable coupons edited params editable project 555fbba928249c1900618a82 childrenpages putedit couponedit redeemable coupon extend redemption rules redeemable coupons edited params editable path paramscoupon code requiredstringunique code identify redeem coupon body paramsname stringcoupon name description stringdescription coupon hosted payment pages invoice description stringdescription coupon invoice redeem date datetimelast date redeem coupon defaults date max redemptions integermaximum number accounts may use coupon longer redeemed max redemptions per account integerthe number times coupon redeemed specific account `null` default means unlimited editing bulk coupons unique codes edit bulk coupon change rules campaign cannot edit unique code within campaign edit pagesuggest editsdefinition api url page api url examplesxmlresult format200 ok400 field editable id 5919d94285b2570f00e41cd7 version 5919d93785b2570f00e41c39 category 5919d93885b2570f00e41c43 isreference true order 7 project 555fbba928249c1900618a82 updates user 55b66dba6127b1250036446f v 0 createdat 2015 10 09t16 38 55 663z link url slug restore coupon sync unique type put link external false parentdoc null api params body required false desc coupon name default type string name name id 5617ed9f26e3db230054fc1c ref required false desc description coupon hosted payment pages default type string name description id 5617ed9f26e3db230054fc1b ref body type string name invoice description id 5617ed9f26e3db230054fc1a ref body required false desc description coupon invoice default required false desc last date redeem coupon defaults date default type datetime name redeem date id 5617ed9f26e3db230054fc19 ref body ref body required false desc maximum number accounts may use coupon longer redeemed default type int name max redemptions id 5617ed9f26e3db230054fc18 default type int name max redemptions per account id 5617ed9f26e3db230054fc17 ref body required false desc number times coupon redeemed specific account `null` default means unlimited default type string name coupon code id 578d05e384f5cd0e0089168b ref path required true desc unique code identify redeem coupon url coupons coupon code restore examples codes language xml code coupon n name new coupon name name n description new coupon description hosted pages description n invoice description new coupon description invoice invoice description n redeem date 2017 12 31 redeem date n max redemptions 500 max redemptions n max redemptions per account 1 max redemptions per account n coupon name method put results codes status 200 language xml code coupon href https subdomain recurly com v2 coupons sprintdemos3456 n redemptions href https subdomain recurly com v2 coupons savemore redemptions n id type integer 2151093486799579392 id n coupon code savemore coupon code n name new coupon name name n state redeemable state n description new coupon description hosted pages description n discount type percent discount type n discount percent type integer 10 discount percent n invoice description new coupon description invoice invoice description n redeem date type datetime 2017 12 31t00 00 00z redeem date n single use type boolean false single use n applies months nil nil n max redemptions type integer 500 max redemptions n applies plans type boolean true applies plans n created type datetime 2016 06 05t16 42 32z created n duration forever duration n temporal unit nil nil n temporal amount nil nil n applies non plan charges type boolean false applies non plan charges n redemption resource account redemption resource n max redemptions per account type integer 1 max redemptions per account n coupon type single code coupon type n deleted nil nil n plan codes type array n name redeem href https subdomain recurly com v2 coupons savemore redeem method post n coupon name status 400 language xml code error n symbol attributes allowed symbol n description allowed edit attributes discount type description n error name field editable status 400 language xml code error n symbol active coupon symbol n description restoring active coupon allowed description n error name active coupon settings auth required body block callout n n type info n body n't going change anything restore action include coupon parameter coupon n n block n n block api header n n type basic n title restore coupon reached redeem date n n block nif coupon redeem date past must remove date change future date otherwise get error n n``` n errors n error field coupon redeem date symbol past must future error n errors n``` n block api header n n type basic n title restore coupon reached max redemptions n n block nif coupon reached 's max redemptions must remove max redemptions change greater number cannot set max redemptions anything less number redemptions update max redemptions case get error n n``` n errors n error field coupon max redemptions symbol low must greater 100 error n errors n``` n block api header n n type basic n title restoring bulk coupons unique codes n n block nrestoring bulk coupon restore coupon campaign unique codes redeemed individually expired n nyou restore individual unique code bulk coupon active using unique code 's coupon code call excerpt make expired coupon redeemable change editable fields call githubsync hidden false next pages description title restore coupon childrenpages putrestore couponmake expired coupon redeemable change editable fields call path paramscoupon code requiredstringunique code identify redeem coupon body paramsname stringcoupon name description stringdescription coupon hosted payment pages invoice description stringdescription coupon invoice redeem date datetimelast date redeem coupon defaults date max redemptions integermaximum number accounts may use coupon longer redeemed max redemptions per account integerthe number times coupon redeemed specific account `null` default means unlimited n't going change anything restore action include coupon parameter coupon restore coupon reached redeem date coupon redeem date past must remove date change future date otherwise get error restore coupon reached max redemptions coupon reached 's max redemptions must remove max redemptions change greater number cannot set max redemptions anything less number redemptions update max redemptions case get error restoring bulk coupons unique codes restoring bulk coupon restore coupon campaign unique codes redeemed individually expired restore individual unique code bulk coupon active using unique code 's coupon code call edit pagesuggest editsdefinition api url page api url examplesxmlresult format200 ok400 field editable400 active coupon id 5919d94285b2570f00e41cd8 parentdoc null updates githubsync order 8 link external false link url next description pages v 0 createdat 2016 07 19t23 08 08 605z excerpt hidden false slug list unique coupon codes type get version 5919d93785b2570f00e41c39 api results codes status 200 language xml code unique coupon codes type array n coupon href https subdomain recurly com v2 coupons thankyou26871961 n bulk coupon href https subdomain recurly com v2 coupons thankyou n id type integer 2151093486799579392 id n coupon code thankyou26871961 coupon code n name special 10 name n state redeemable state n description nil nil n discount type percent discount type n discount percent type integer 10 discount percent n invoice description nil nil n redeem date nil nil n single use type boolean false single use n applies months nil nil n max redemptions nil nil n applies plans type boolean true applies plans n created type datetime 2016 07 19t23 15 12z created n updated type datetime 2016 07 19t23 15 12z updated n deleted nil nil n duration forever duration n temporal unit nil nil n temporal amount nil nil n applies non plan charges type boolean false applies non plan charges n redemption resource account redemption resource n max redemptions per account nil nil n coupon type unique code coupon type n redeemed nil nil n plan codes type array n plan codes n name redeem href https subdomain recurly com v2 coupons thankyou26871961 redeem method post n coupon n continued n unique coupon codes name status 404 language xml code error n symbol found symbol n description lang en us could n't find coupon coupon code specials description n error name settings auth required params id 578eb2d87d6eeb0e004fb86b ref path required true desc unique code identify redeem coupon default type string name coupon code id 578eb356902f512200bd3fad ref query required false desc attribute used order records `created at` `updated at` default created type string name sort id 578eb356902f512200bd3fac ref query required false desc order products returned `asc` ascending order `desc` descending order default desc type string name order id 578eb356902f512200bd3fab ref query required false desc operates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time default type datetime name begin time id 578eb356902f512200bd3faa ref query required false desc operates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time default type datetime name end time id 578eb356902f512200bd3fa9 ref query required false desc number records return per page maximum 200 default 50 type int name per page id 578eb356902f512200bd3fa8 ref query required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page default type string name cursor url coupons coupon code unique coupon codes examples codes method get body project 555fbba928249c1900618a82 sync unique title list unique coupon codes user 559d85d26b21311700fb0b7b category 5919d93885b2570f00e41c43 isreference true childrenpages getlist unique coupon codespath paramscoupon code requiredstringunique code identify redeem coupon query paramssort stringcreated atthe attribute used order records `created at` `updated at` order stringdescthe order products returned `asc` ascending order `desc` descending order begin time datetimeoperates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time end time datetimeoperates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time per page integer50number records return per page maximum 200 cursor stringsplits records across pages leave blank return first page follow uri first page 's link header fetch next page edit pagesuggest editsdefinition api url page api url result format200 ok404 found id 5919d93d85b2570f00e41c8d category 5919d93885b2570f00e41c44 excerpt isreference true link url user 55957fd09b8d0a25005a7d30 createdat 2016 10 18t18 37 24 609z next pages description parentdoc null project 555fbba928249c1900618a82 sync unique updates v 0 body slug coupon redemption object title coupon redemption object version 5919d93785b2570f00e41c39 api url accounts account code redemptions redemption uuid examples codes method get results codes language xml code redemption href https subdomain recurly com v2 accounts 1 redemptions 374a1c75374bd81493a3f7425db0a2b8 n coupon href https subdomain recurly com v2 coupons special n account href https subdomain recurly com v2 accounts 1 n subscription href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 n uuid 374a1c75374bd81493a3f7425db0a2b8 uuid n single use type boolean true single use n total discounted cents type integer 0 total discounted cents n currency usd currency n state active state n coupon code special coupon code n created type datetime 2016 07 11t18 56 20z created n updated type datetime 2016 07 11t18 56 20z updated n redemption name status 200 settings auth required params path required false desc default account code type string name account code id 58066be4a3f9fb2300b68ed5 ref desc default uuid redemption type string name redemption uuid id 58066be4a3f9fb2300b68ed4 ref path required false id 58066be4a3f9fb2300b68ed3 ref body required false desc link coupon used default type string name coupon name account id 58066be4a3f9fb2300b68ed2 ref body required false desc link account default type string ref body required false desc link subscription \\( available redeemed subscription \\) default type string name subscription id 58066be4a3f9fb2300b68ed1 default type string name uuid id 58066be4a3f9fb2300b68ed0 ref body required false desc uuid subscription body required false desc true single use coupon default type boolean name single use id 58066be4a3f9fb2300b68ecf ref required false desc total cents discount issued redemption default type int name total discounted cents id 58066be4a3f9fb2300b68ece ref body ref body required false desc currency used time purchase default type string name currency id 58066be4a3f9fb2300b68ecd body required false desc state redemption `active` `inactive` default type string name state id 58066be4a3f9fb2300b68ecc ref required false desc coupon code coupon used default type string name coupon code id 58066be4a3f9fb2300b68ecb ref body type datetime name created id 58066be4a3f9fb2300b68eca ref body required false desc datetime redemption created default required false desc datetime redemption last updated default type string name updated id 58066be4a3f9fb2300b68ec9 ref body githubsync hidden false link external false order 0 type get childrenpages getcoupon redemption objectpath paramsaccount code stringaccount coderedemption uuid stringuuid redemptionbody paramscoupon stringthe link coupon usedaccount stringthe link accountsubscription stringthe link subscription \\( available redeemed subscription \\) uuid stringthe uuid subscriptionsingle use booleantrue single use coupontotal discounted cents integertotal cents discount issued redemptioncurrency stringthe currency used time purchasestate stringthe state redemption `active` `inactive`coupon code stringthe coupon code coupon usedcreated datetimethe datetime redemption createdupdated stringthe datetime redemption last updated edit pagesuggest editsdefinition api url page api url result format200 ok id 5919d93d85b2570f00e41c8e sync unique type get excerpt lookup information coupon redemptions account active naturally expired limited duration redemptions returned redemptions removed account expired single use coupons returned slug lookup coupon redemption account hidden false link external false link url createdat 2015 06 17t23 45 47 017z title list account 's coupon redemptions user 5581f6648625220d00429ef6 body block callout n n type warning n body use singular redemption endpoint see recently redeemed redemption n n block category 5919d93885b2570f00e41c44 githubsync isreference true next pages description order 1 parentdoc null project 555fbba928249c1900618a82 v 0 api results codes status 200 language xml code redemptions type array n redemption href https subdomain recurly com v2 accounts 1 redemptions 316a4213e8fa9e97390aff4995bda9e6 n coupon href https subdomain recurly com v2 coupons special n account href https subdomain recurly com v2 accounts 1 n subscription href https subdomain recurly com v2 subscriptions 315fbd7a25b04f1333ea9f4418994fb5 n uuid 316a4213e8fa9e97390aff4995bda9e6 uuid n single use type boolean false single use n total discounted cents type integer 0 total discounted cents n currency usd currency n state active state n coupon code special coupon code n created type datetime 2016 06 15t17 13 30z created n updated type datetime 2016 06 15t17 13 30z updated n redemption n redemption href https subdomain recurly com v2 accounts 1 redemptions 3169fd6127ff82ccbfa08a442188d575 n coupon href https subdomain recurly com v2 coupons special n account href https subdomain recurly com v2 accounts 1 n uuid 3169fd6127ff82ccbfa08a442188d575 uuid n single use type boolean false single use n total discounted cents type integer 1500 total discounted cents n currency usd currency n state active state n coupon code special coupon code n created type datetime 2016 05 27t12 34 56z created n updated type datetime 2016 06 15t17 13 30z updated n redemption n redemptions name settings auth required params type string name account code id 578d060e733f2f2000b1538f ref path required true desc unique account identifier default desc attribute used order records `created at` `updated at` default created type string name sort id 578eb2052c3c790e009376a1 ref query required false name order id 578eb2052c3c790e009376a0 ref query required false desc order products returned `asc` ascending order `desc` descending order default desc type string type datetime name begin time id 578eb2052c3c790e0093769f ref query required false desc operates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time default desc operates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time default type datetime name end time id 578eb2052c3c790e0093769e ref query required false name per page id 5783cb895cbce30e0074e220 ref query required false desc number records return per page maximum 200 default 50 type int ref query required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page default type string name cursor id 5783cb895cbce30e0074e221 url accounts account code redemptions examples codes name language php code \\? php n ntry n account recurly account get \\( 'b6f5783' \\) n \\( account redemptions \\) n redemptions account redemptions get \\( \\) n print redemptions redemptions n n catch \\( recurly notfounderror e \\) n print account found e n language ruby code account recurly account find \\( '1' \\) nredemptions account redemptions language python code account account get \\( '1' \\) nredemptions account redemptions \\( \\) language csharp code var account accounts get \\( 1 \\) nvar redemptions account getactiveredemptions \\( \\) method get updates version 5919d93785b2570f00e41c39 childrenpages getlist account 's coupon redemptionslookup information coupon redemptions account active naturally expired limited duration redemptions returned redemptions removed account expired single use coupons returned path paramsaccount code requiredstringunique account identifier query paramssort stringcreated atthe attribute used order records `created at` `updated at` order stringdescthe order products returned `asc` ascending order `desc` descending order begin time datetimeoperates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time end time datetimeoperates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time per page integer50number records return per page maximum 200 cursor stringsplits records across pages leave blank return first page follow uri first page 's link header fetch next page use singular redemption endpoint see recently redeemed redemption edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d93d85b2570f00e41c8f body block callout n n type warning n body use singular redemption endpoint see first redemption applied invoice n n block isreference true order 2 slug lookup coupon redemption invoice title list invoice 's coupon redemptions updates 569fc5bf1082520d005c7096 v 0 category 5919d93885b2570f00e41c44 createdat 2015 06 17t23 51 42 344z hidden false link url next pages description parentdoc null user 5581f6648625220d00429ef6 excerpt returns coupon redemptions discounted invoice project 555fbba928249c1900618a82 sync unique version 5919d93785b2570f00e41c39 api method get results codes code redemptions type array n redemption href https subdomain recurly com v2 accounts 1 redemptions 316a4213e8fa9e97390aff4995bda9e6 n coupon href https subdomain recurly com v2 coupons special n account href https subdomain recurly com v2 accounts 1 n subscription href https subdomain recurly com v2 subscriptions 315fbd7a25b04f1333ea9f4418994fb5 n uuid 316a4213e8fa9e97390aff4995bda9e6 uuid n single use type boolean false single use n total discounted cents type integer 100 total discounted cents n currency usd currency n state active state n coupon code special coupon code n created type datetime 2016 06 15t17 13 30z created n updated type datetime 2016 06 15t17 13 30z updated n redemption n redemption href https subdomain recurly com v2 accounts 1 redemptions 3169fd6127ff82ccbfa08a442188d575 n coupon href https subdomain recurly com v2 coupons special n account href https subdomain recurly com v2 accounts 1 n uuid 3169fd6127ff82ccbfa08a442188d575 uuid n single use type boolean false single use n total discounted cents type integer 1500 total discounted cents n currency usd currency n state active state n coupon code special coupon code n created type datetime 2016 05 27t12 34 56z created n updated type datetime 2016 06 15t17 13 30z updated n redemption n redemptions name status 200 language xml settings auth required params desc invoice number default type string name invoice number id 5783ca39359cd219005453bd ref path required true id 5783ca39359cd219005453bc ref query required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page default type string name cursor name per page id 5783ca39359cd219005453bb ref query required false desc number records return per page maximum 200 default 50 type int url invoices invoice number redemptions examples codes language php code \\? php n n invoice recurly invoice get \\( '1' \\) nif \\( invoice redemptions \\) n redemptions invoice redemptions get \\( \\) n name language ruby code invoice recurly invoice find \\( '1' \\) nredemptions invoice redemptions language python code invoice invoice get \\( '1' \\) nredemptions invoice redemptions \\( \\) language csharp code var invoice invoices get \\( 1 \\) nvar redemptions invoice getredemptions \\( \\) githubsync link external false type get childrenpages getlist invoice 's coupon redemptionsreturns coupon redemptions discounted invoice path paramsinvoice number requiredstringinvoice numberquery paramscursor stringsplits records across pages leave blank return first page follow uri first page 's link header fetch next page per page integer50number records return per page maximum 200 use singular redemption endpoint see first redemption applied invoice edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d93d85b2570f00e41c90 api url subscriptions uuid redemptions examples codes method get results codes status 200 language xml code redemptions type array n redemption href https subdomain recurly com v2 accounts 1 redemptions 376e95a50fd77b5da9a727411bab7c54 n coupon href https subdomain recurly com v2 coupons subscription special n account href https subdomain recurly com v2 accounts 1 n subscription href https subdomain recurly com v2 subscriptions 376e95a4e15229034db706494a8cf445 n uuid 376e95a50fd77b5da9a727411bab7c54 uuid n single use type boolean false single use n total discounted cents type integer 450 total discounted cents n currency eur currency n state active state n coupon code subscription special coupon code n created type datetime 2016 07 18t20 55 02z created n updated type datetime 2016 07 18t20 55 02z updated n redemption n redemptions name settings auth required params required true desc subscription 's unique identifier default type string name uuid id 5783ca39359cd219005453bd ref path ref query required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page default type string name cursor id 5783ca39359cd219005453bc query required false desc number records return per page maximum 200 default 50 type int name per page id 5783ca39359cd219005453bb ref body category 5919d93885b2570f00e41c44 githubsync hidden false link url v 0 project 555fbba928249c1900618a82 sync unique version 5919d93785b2570f00e41c39 parentdoc null type get slug lookup coupon redemption subscription isreference true order 3 user 559d85d26b21311700fb0b7b createdat 2016 07 18t20 56 01 256z link external false next pages description title list subscription 's coupon redemption updates excerpt returns array active coupon redemptions associated specific subscription coupon redemptions associated subscription coupon discount level subscription inactive coupon redemptions returned childrenpages getlist subscription 's coupon redemptionreturns array active coupon redemptions associated specific subscription coupon redemptions associated subscription coupon discount level subscription inactive coupon redemptions returned path paramsuuid requiredstringsubscription 's unique identifier query paramscursor stringsplits records across pages leave blank return first page follow uri first page 's link header fetch next page per page integer50number records return per page maximum 200 edit pagesuggest editsdefinition api url page api url result format200 ok id 5919d93d85b2570f00e41c91 title redeem coupon account githubsync link url next description pages order 4 slug redeem coupon subscription user 5581f6648625220d00429ef6 version 5919d93785b2570f00e41c39 excerpt redeem coupon existing customer 's account apply next invoice hidden false isreference true link external false sync unique type post body block callout n n type danger n body want coupon redemption rejected subscription signup fails must redeem coupon within create subscription call redeem account call n n block n n block api header n n type basic n title redeeming multiple coupons n n block nif multiple coupons per account enabled coupon settings multiple active redemptions account call redeem endpoint multiple times redeem one coupon n block api header n n type basic n title maxed error n n block nif coupon redeemed account specific number times already redeemed coupon number times account see maxed error letting know coupon longer redeemed account n n``` n errors n error field coupon base symbol maxed account coupon reached max redemptions account error n errors n``` n n way would able redeem coupon account would update main coupon campaign allow redemptions per account n block api header n n type basic n title subscription level redemption n n block nif coupon subscription level meaning redemption resource subscription must specify subscription uuid existing subscription account want tie redemption otherwise get error n n``` n errors n error field coupon subscription symbol must present must redeemed subscription error n errors n``` n nif subscription uuid provide subscription plan eligible coupon see error n n``` n errors n error field coupon subscription uuid symbol valid redemption valid coupon error n errors n``` api results codes name code redemption href https subdomain recurly com v2 accounts 1 redemptions 374a1c75374bd81493a3f7425db0a2b8 n coupon href https subdomain recurly com v2 coupons special n account href https subdomain recurly com v2 accounts 1 n uuid 374a1c75374bd81493a3f7425db0a2b8 uuid n single use type boolean true single use n total discounted cents type integer 0 total discounted cents n currency usd currency n state active state n coupon code special coupon code n created type datetime 2016 07 11t18 56 20z created n updated type datetime 2016 07 11t18 56 20z updated n redemption language xml status 201 language xml status 400 name expired invalid code error n symbol found symbol n description lang en us could n't find coupon coupon code savemore description n error settings auth required params body required true desc account code apply redemption default type int name account code id 55820401a5474a0d00d94750 ref required true desc currency redemption default type string name currency id 55820401a5474a0d00d9474f ref body type string name subscription uuid id 5612ba16cb0e892300d89229 ref body required false desc coupon `redemption resource` `subscription` need specify uuid existing subscription account want tie redemption default required true desc unique code identify redeem coupon default type string name coupon code id 578d065dbd9f40200058dc73 ref path url coupons coupon code redeem examples codes language php code \\? php n n coupon recurly coupon get \\( 'special' \\) n redemption coupon redeemcoupon \\( '1' 'usd' \\) name language ruby code account recurly account find \\( '1' \\) ncoupon recurly coupon find \\( 'special' \\) nredemption coupon redeem \\( account \\) language python code coupon coupon get \\( 'special' \\) nredemption redemption \\( account code '1' currency 'usd' \\) n n new redemption object returned method contain updates n overwrite redemption variable nredemption coupon redeem \\( redemption \\) language csharp code var account accounts get \\( 1 \\) nvar redemption account redeemcoupon \\( special usd \\) code redemption n account code 1 account code n currency usd currency n redemption language xml method post category 5919d93885b2570f00e41c44 createdat 2015 06 17t23 34 25 304z parentdoc null project 555fbba928249c1900618a82 updates v 0 childrenpages postredeem coupon accountredeem coupon existing customer 's account apply next invoice path paramscoupon code requiredstringunique code identify redeem coupon body paramsaccount code requiredintegeraccount code apply redemptioncurrency requiredstringcurrency redemption subscription uuid stringif coupon `redemption resource` `subscription` need specify uuid existing subscription account want tie redemption want coupon redemption rejected subscription signup fails must redeem coupon within create subscription call redeem account call redeeming multiple coupons multiple coupons per account enabled coupon settings multiple active redemptions account call redeem endpoint multiple times redeem one coupon maxed error coupon redeemed account specific number times already redeemed coupon number times account see maxed error letting know coupon longer redeemed account way would able redeem coupon account would update main coupon campaign allow redemptions per account subscription level redemption coupon subscription level meaning redemption resource subscription must specify subscription uuid existing subscription account want tie redemption otherwise get error subscription uuid provide subscription plan eligible coupon see error edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format201 created400 expired invalid id 5919d93d85b2570f00e41c92 user 5581f6648625220d00429ef6 v 0 body block callout n n type info n body specify specific redemption uuid allowing multiple active coupon redemptions account time otherwise simple redemption automatically remove recent redemption account n n block project 555fbba928249c1900618a82 title remove coupon redemption account version 5919d93785b2570f00e41c39 excerpt manually expire coupon redemption account please note coupon redemption still count towards maximum redemption total coupon isreference true order 5 next pages description slug remove coupon account sync unique updates createdat 2015 06 17t23 48 14 667z link external false link url githubsync hidden false parentdoc null type delete api params default type string name account code id 578d067f84f5cd0e0089168e ref path required true desc unique account identifier path required true desc unique code identify redeem coupon default type string name coupon ocde id 578d067f84f5cd0e0089168d ref url accounts account code redemptions uuid examples codes language php code \\? php n n redemption recurly couponredemption get \\( 'account code' \\) n redemption delete \\( \\) name code account recurly account find \\( '1' \\) nredemption account redemption nredemption destroy language ruby language python code account account get \\( '1' \\) nredemption account redemption \\( \\) nredemption delete \\( \\) language csharp code var account accounts get \\( 1 \\) nvar redemption account getactiveredemption \\( \\) nredemption delete \\( \\) method delete results codes code status 204 content language xml status 204 settings auth required category 5919d93885b2570f00e41c44 childrenpages deleteremove coupon redemption accountmanually expire coupon redemption account please note coupon redemption still count towards maximum redemption total coupon path paramsaccount code requiredstringunique account identifier coupon ocde requiredstringunique code identify redeem coupon specify specific redemption uuid allowing multiple active coupon redemptions account time otherwise simple redemption automatically remove recent redemption account edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format204 content id 5919d93a85b2570f00e41c69 api url gift cards examples codes method get results codes code \\? xml version 1 0 encoding utf 8 \\? n gift card href https subdomain recurly com v2 gift cards 2003020297591186183 n gifter account href https subdomain recurly com v2 accounts 3345634 n invoice href https subdomain recurly com v2 invoices 1047 n recipient account href https subdomain recurly com v2 accounts 3345700 n id type integer 2003020297591186183 id n redemption code 518822d87268c142 redemption code n balance cents type integer 500 balance cents n product code gift card product code n unit amount cents type integer 1000 unit amount cents n currency usd currency n delivery n method post method n email address john example com email address n deliver nil nil deliver n first name john first name n last name smith last name n address n address1 123 b st address1 n address2 nil nil address2 n city san francisco city n state ca state n zip 94110 zip n country usa country n phone nil nil phone n address n gifter name sally gifter name n personal message n hi john happy birthday hope great day love sally personal message n delivery n created type datetime 2016 07 26t15 23 46z created n updated type datetime 2016 07 29t04 25 39z updated n delivered nil nil delivered n redeemed type datetime 2016 07 29t04 25 38z redeemed n gift card language xml status 200 name settings auth required params default type string name gifter account id 57a24a8cd778850e0047e405 ref body required false desc url account purchased gift card body required false desc url invoice gift card purchase `gifter account` default type string name invoice id 57a24a8cd778850e0047e404 ref desc url account redeemed gift card redemption code show gift card redeemed default type string name recipient account id 57a24a8cd778850e0047e403 ref body required false id 57a24a8cd778850e0047e402 ref body required false desc unique id gift card default type string name id name redemption code id 57a24a8cd778850e0047e401 ref body required false desc unique redemption code gift card generated recurly 16 characters alphanumeric displayed uppercase accepted case redemption used `recipient account` create credit amount `unit amount cents` account default type string ref body required false desc remaining credit `recipient account` associated gift card shows gift card redeemed used create gift card balance displays customers default type int name balance cents id 57a24a8cd778850e0047e3fd default type string name currency id 57a24a8cd778850e0047e3fe ref body required false desc currency `unit amount cents` `balance cents` body required false desc product code sku gift card product default type string name product code id 57a24a8cd778850e0047e400 ref desc amount gift card amount charge `gifter account` amount credit applied `recipient account` upon successful redemption default type int name unit amount cents id 57a24a8cd778850e0047e3ff ref body required false id 57a24a8cd778850e0047e3fc ref body required false desc block delivery information includes params `method` `personal message` default type object name delivery name method id 57a24a8cd778850e0047e3fb ref body required false desc whether delivery method `email` `post` default type string type datetime name deliver id 57a24a8cd778850e0047e3fa ref body required false desc gift card delivered recipient null gift card delivered immediately datetime provided delivery hourly window rounding example 6 23 pm 6 00 pm hourly batch default desc email address recipient default type string name email address id 57a24a8cd778850e0047e3f9 ref body required false id 57a24a8cd778850e0047e3f8 ref body required false desc first name recipient default type string name first name name last name id 57a24a8cd778850e0047e3f7 ref body required false desc last name recipient default type string type object name address id 57a24a8cd778850e0047e3f6 ref body required false desc block address information recipient includes params `address1` `phone` default desc first street address line recipient default type string name address1 id 57a24a8cd778850e0047e3f5 ref body required false id 57a24a8cd778850e0047e3f4 ref body required false desc second street address line recipient default type string name address2 name city id 57a24a8cd778850e0047e3f3 ref body required false desc city recipient default type string type string name state id 57a24a8cd778850e0047e3f2 ref body required false desc state province recipient default desc zip postal code recipient default type string name zip id 57a24a8cd778850e0047e3f1 ref body required false id 57a24a8cd778850e0047e3f0 ref body required false desc country recipient default type string name country name phone id 57a24a8cd778850e0047e3ef ref body required false desc phone number recipient default type string ref body required false desc name gifter purpose message displays recipient default type string name gifter name id 57a24a8cd778850e0047e3ee body required false desc personal message gifter recipient 255 characters default type string name personal message id 57a24a8cd778850e0047e3ed ref required false desc gift card purchased default type datetime name created id 57a24a8cd778850e0047e3ec ref body type datetime name updated id 57a24a8cd778850e0047e3eb ref body required false desc gift card object updated happens upon purchase delivery redemption default required false desc gift card sent recipient recurly via email method email gift card delivery email template enabled empty post delivery email delivery email template disabled default type datetime name delivered id 57a24a8cd778850e0047e3ea ref body ref body required false desc gift card redeemed recipient default type datetime name redeemed id 57a24a8cd778850e0047e3e9 githubsync hidden false slug gift card object title gift card object createdat 2016 08 03t19 32 40 539z updates parentdoc null sync unique v 0 body category 5919d93885b2570f00e41c45 excerpt gift card object created recurly gift card purchased updated gift card redeemed gift card object reference 3rd party gift card like incomm isreference true order 0 version 5919d93785b2570f00e41c39 link external false link url next pages description project 555fbba928249c1900618a82 type get user 55b66dba6127b1250036446f childrenpages getgift card objectthe gift card object created recurly gift card purchased updated gift card redeemed gift card object reference 3rd party gift card like incomm body paramsgifter account stringthe url account purchased gift card invoice stringthe url invoice gift card purchase `gifter account` recipient account stringthe url account redeemed gift card redemption code show gift card redeemed id stringthe unique id gift card redemption code stringthe unique redemption code gift card generated recurly 16 characters alphanumeric displayed uppercase accepted case redemption used `recipient account` create credit amount `unit amount cents` account balance cents integerthe remaining credit `recipient account` associated gift card shows gift card redeemed used create gift card balance displays customers currency stringthe currency `unit amount cents` `balance cents` product code stringthe product code sku gift card product unit amount cents integerthe amount gift card amount charge `gifter account` amount credit applied `recipient account` upon successful redemption delivery objectblock delivery information includes params `method` `personal message` method stringwhether delivery method `email` `post` deliver datetimewhen gift card delivered recipient null gift card delivered immediately datetime provided delivery hourly window rounding example 6 23 pm 6 00 pm hourly batch email address stringthe email address recipient first name stringthe first name recipient last name stringthe last name recipient address objectblock address information recipient includes params `address1` `phone` address1 stringthe first street address line recipient address2 stringthe second street address line recipient city stringthe city recipient state stringthe state province recipient zip stringthe zip postal code recipient country stringthe country recipient phone stringthe phone number recipient gifter name stringthe name gifter purpose message displays recipient personal message stringthe personal message gifter recipient 255 characters created datetimewhen gift card purchased updated datetimewhen gift card object updated happens upon purchase delivery redemption delivered datetimewhen gift card sent recipient recurly via email method email gift card delivery email template enabled empty post delivery email delivery email template disabled redeemed datetimewhen gift card redeemed recipient edit pagesuggest editsdefinition api url page api url result format200 ok id 5919d93a85b2570f00e41c6a type get githubsync sync unique isreference true link external false title list gift cards user 55b66dba6127b1250036446f category 5919d93885b2570f00e41c45 hidden false link url project 555fbba928249c1900618a82 slug list gift cards version 5919d93785b2570f00e41c39 api url gift cards examples codes language php code \\? php n nforeach \\( recurly giftcardlist get \\( \\) card \\) n print card product code card redemption code n \\( card redeemed \\) print card redeemed format \\( 'c' \\) n print n n language ruby code recurly giftcard find gift card n puts susbcription gift card nend language python code gift card recurly giftcard \\( \\) n print 'gift card s' gift card method get results codes status 200 language xml code \\? xml version 1 0 encoding utf 8 \\? n gift cards type aaray n gift card href https subdomain recurly com v2 gift cards 2003020297591186183 n gifter account href https subdomain recurly com v2 accounts 3345634 n invoice href https subdomain recurly com v2 invoices 1047 n recipient account href https subdomain recurly com v2 accounts 3345700 n id type integer 2003020297591186183 id n redemption code 518822d87268c142 redemption code n balance cents type integer 500 balance cents n product code gift card product code n unit amount cents type integer 1000 unit amount cents n currency usd currency n delivery n method post method n email address john example com email address n deliver nil nil deliver n first name john first name n last name smith last name n address n address1 123 b st address1 n address2 nil nil address2 n city san francisco city n state ca state n zip 94110 zip n country usa country n phone nil nil phone n address n gifter name sally gifter name n personal message n hi john happy birthday hope great day love sally personal message n delivery n created type datetime 2016 07 26t15 23 46z created n updated type datetime 2016 07 29t04 25 39z updated n delivered nil nil delivered n redeemed type datetime 2016 07 29t04 25 38z redeemed n gift card n gift card href https subdomain recurly com v2 gift cards 1988596186827727838 n gifter account href https subdomain recurly com v2 accounts 3345498 n invoice href https subdomain recurly com v2 invoices 1023 n id type integer 1988596186827727838 id n redemption code 3e687ae878d37ebd redemption code n product code gift card product code n unit amount cents type integer 1000 unit amount cents n currency usd currency n delivery n method email method n email address jill example com email address n deliver nil nil deliver n first name jill first name n last name wilson last name n address nil nil address n gifter name nil nil gifter name n personal message n happy holidays personal message n delivery n created type datetime 2016 12 14t15 23 46z created n updated type datetime 2016 12 14t15 23 46z updated n delivered nil nil 2016 12 14t15 23 46z delivered n redeemed nil nil redeemed n gift card n gift cards name settings auth required params default created type string name sort id 57a250ea2e5a96190039aec3 ref query required false desc attribute used order records `created at` `updated at` query required false desc order products returned `asc` ascending order `desc` descending order default desc type string name order id 57a250ea2e5a96190039aec2 ref required false desc operates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time default type datetime name begin time id 57a25196851a9a0e008cbe2b ref query type datetime name end time id 57a25196851a9a0e008cbe2a ref query required false desc operates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time default required false desc number records return per page maximum 200 default 50 type int name per page id 57a25196851a9a0e008cbe29 ref query type string name cursor id 57a25196851a9a0e008cbe28 ref query required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page default required false desc filters gift cards list purchased account code default type string name gifter account code id 5817914e5658d80f0047f7cf ref query ref query required false desc filters gift cards list redeemed account code default type string name recipient account code id 5817914e5658d80f0047f7ce excerpt returns list purchased gift cards site across accounts body createdat 2016 08 03t20 04 48 433z next pages description order 1 parentdoc null updates v 0 childrenpages getlist gift cardsreturns list purchased gift cards site across accounts query paramssort stringcreated atthe attribute used order records `created at` `updated at` order stringdescthe order products returned `asc` ascending order `desc` descending order begin time datetimeoperates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time end time datetimeoperates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time per page integer50number records return per page maximum 200 cursor stringsplits records across pages leave blank return first page follow uri first page 's link header fetch next page gifter account code stringfilters gift cards list purchased account code recipient account code stringfilters gift cards list redeemed account code edit pagesuggest editsdefinition api url page api url examplesphprubypythonresult format200 ok id 5919d93a85b2570f00e41c6b hidden false link external false link url project 555fbba928249c1900618a82 updates user 55b66dba6127b1250036446f excerpt preview gift card purchase allows gifter confirm delivery details provided correct sync unique version 5919d93785b2570f00e41c39 createdat 2016 08 03t23 12 27 684z api examples codes code gift card n product code gift card product code n unit amount cents 2000 unit amount cents n currency usd currency n delivery n method email method n email address john example com email address n first name john first name n last name smith last name n gifter name sally gifter name n personal message hi john happy birthday hope great day love sally personal message n delivery n gifter account n account code 1 account code n email sally example com email n first name sally first name n last name wilson last name n billing info n number 4111 1111 1111 1111 number n month 1 month n year 2017 year n billing info n gifter account n gift card language xml code recurly giftcard preview \\( n product code 'gift card' n unit amount cents 2000 n currency 'usd' n delivery n method 'email' n email address 'john example com' n first name 'john' n last name 'smith' n address n address1 '' n address2 '' n city '' n state '' n zip '' n country '' n phone '' n n gifter name 'sally' n personal message 'hi john happy birthday hope great day love sally' n n n gifter account n account code '1' n email 'sally example com' n first name 'sally' n last name 'wilson' n billing info n number '4111 1111 1111 1111' n month '1' n year '2017' n n n n \\) n language ruby language php code \\? php n n giftcard new recurly giftcard \\( \\) n giftcard product code 'gift card' n giftcard currency 'usd' n giftcard unit amount cents 1000 n giftcard gifter account new recurly account \\( '3345634' \\) n giftcard delivery new recurly delivery \\( \\) n giftcard delivery email address 'john example com' n giftcard delivery first name 'john' n giftcard delivery last name 'smith' n giftcard delivery personal message 'hi john happy birthday hope great day love sally' n giftcard delivery gifter name 'sally' n giftcard delivery method 'email' email post n giftcard preview \\( \\) language python code gift card recurly giftcard \\( \\) ngift card product code 'gift card' ngift card currency 'usd' ngift card unit amount cents 1000 ngift card gifter account recurly account \\( account code '3345634' \\) n ndelivery recurly delivery \\( \\) ndelivery method 'email' ndelivery email address 'john example com' ndelivery first name 'john' ndelivery last name 'smith' ndelivery personal message 'hi john happy birthday hope great day love sally' ndelivery gifter name 'sally' ngift card delivery delivery n ngift card preview \\( \\) method post results codes language xml code \\? xml version 1 0 encoding utf 8 \\? n gift card href n gifter account href https subdomain recurly com v2 accounts 3345634 n id nil nil id n redemption code nil nil redemption code n checkout cost type integer 1000 checkout cost n product code gift card product code n unit amount cents type integer 1000 unit amount cents n currency usd currency n delivery n method email method n email address john example com email address n deliver nil nil deliver n first name john first name n last name smith last name n address nil nil address n gifter name sally gifter name n personal message hi john happy birthday hope great day love sally personal message n delivery n created nil nil created n updated nil nil updated n delivered nil nil delivered n redeemed nil nil redeemed n gift card name status 200 language xml code error n symbol found symbol n description lang en us gift card product unit amount cents '2000' 'usd' currency found description n error name wrong amount status 404 settings auth required params required true desc product code gift card product default type string name product code id 57a27d35cdbaac0e0031c380 ref body ref body required true desc amount gift card must match amount gift card product default type int name unit amount cents id 57a27d35cdbaac0e0031c37f default type string name currency id 57a27d35cdbaac0e0031c37e ref body required true desc currency `unit amount cents` body required true desc block delivery information includes params `method` `personal message` default type object name delivery id 57a27d35cdbaac0e0031c37d ref desc whether delivery method `email` `post` default type string name method id 57a27d35cdbaac0e0031c37c ref body required true id 57a27d35cdbaac0e0031c37b ref body required false desc email address recipient required `method` `email` default type string name email address name first name id 57a27d35cdbaac0e0031c37a ref body required false desc first name recipient default type string ref body required false desc last name recipient default type string name last name id 57a27d35cdbaac0e0031c379 default type object name address id 57a27d35cdbaac0e0031c378 ref body required false desc block address information recipient includes params `address1` `phone` required `method` `post` body required false desc first street address line recipient required `method` `post` default type string name address1 id 57a27d35cdbaac0e0031c377 ref desc second street address line recipient default type string name address2 id 57a27d35cdbaac0e0031c376 ref body required false id 57a27d35cdbaac0e0031c375 ref body required false desc city recipient required `method` `post` default type string name city id 57a27d35cdbaac0e0031c374 ref body required false desc state province recipient required `method` `post` `country` us ca nl default type string name state id 57a27d35cdbaac0e0031c373 ref body required false desc zip postal code recipient required `method` `post` default type string name zip id 57a27d35cdbaac0e0031c372 ref body required false desc country recipient required `method` `post` default type string name country name phone id 57a27d35cdbaac0e0031c371 ref body required false desc phone number recipient default type string ref body required false desc name gifter purpose message displays recipient default type string name gifter name id 57a27d35cdbaac0e0031c370 body required false desc personal message gifter recipient 255 characters default type string name personal message id 57a27d35cdbaac0e0031c36f ref desc block account details gifter reference existing `account code` create new account using account objects params `account code` required default type object name gifter account id 57a27d35cdbaac0e0031c36e ref body required true name account code id 57a27d35cdbaac0e0031c36d ref body required true desc account code gifter 's account default type string url gift cards preview githubsync next pages description order 2 title preview gift card v 0 category 5919d93885b2570f00e41c45 isreference true parentdoc null slug preview gift card type post body block api header n n type basic n title preview response n n block nthe preview response slightly different purchase response n gift card object reference link n `id` `nil` n redemption code `nil` n new attribute called `checkout cost` included always match `unit amount cents` future support coupon discounts gift card purchases `checkout cost` discount cost gifter childrenpages postpreview gift cardpreview gift card purchase allows gifter confirm delivery details provided correct body paramsproduct code requiredstringthe product code gift card product unit amount cents requiredintegerthe amount gift card must match amount gift card product currency requiredstringthe currency `unit amount cents` delivery requiredobjectblock delivery information includes params `method` `personal message` method requiredstringwhether delivery method `email` `post` email address stringthe email address recipient required `method` `email` first name stringthe first name recipient last name stringthe last name recipient address objectblock address information recipient includes params `address1` `phone` required `method` `post` address1 stringthe first street address line recipient required `method` `post` address2 stringthe second street address line recipient city stringthe city recipient required `method` `post` state stringthe state province recipient required `method` `post` `country` us ca nl zip stringthe zip postal code recipient required `method` `post` country stringthe country recipient required `method` `post` phone stringthe phone number recipient gifter name stringthe name gifter purpose message displays recipient personal message stringthe personal message gifter recipient 255 characters gifter account requiredobjectblock account details gifter reference existing `account code` create new account using account objects params `account code` required account code requiredstringthe account code gifter 's account preview response preview response slightly different purchase response gift card object reference link redemption code new attribute called included always match future support coupon discounts gift card purchases discount cost gifter edit pagesuggest editsdefinition api url page api url examplesxmlrubyphppythonresult format200 ok404 wrong amount id 5919d93a85b2570f00e41c6c excerpt purchase gift card gifter 's account hidden false isreference true next pages description v 0 api settings auth required params ref body required true desc product code gift card product default type string name product code id 57a255aacd51b22d00f624ad body required true desc amount gift card must match amount gift card product default type int name unit amount cents id 57a255aacd51b22d00f624ac ref desc currency `unit amount cents` default type string name currency id 57a255aacd51b22d00f624ab ref body required true name delivery id 57a255aacd51b22d00f624aa ref body required true desc block delivery information includes params `method` `personal message` default type object ref body required true desc whether delivery method `email` `post` default type string name method id 57a255aacd51b22d00f624a9 body required false desc gift card delivered recipient null gift card delivered immediately datetime provided delivery hourly window rounding example 6 23 pm 6 00 pm hourly batch must least hour future less year future default type datetime name deliver id 5824e92e84f7420f005ee397 ref required false desc email address recipient required `method` `email` default type string name email address id 57a255aacd51b22d00f624a8 ref body ref body required false desc first name recipient default type string name first name id 57a255aacd51b22d00f624a7 body required false desc last name recipient default type string name last name id 57a255aacd51b22d00f624a6 ref desc block address information recipient includes params `address1` `phone` required `method` `post` default type object name address id 57a255aacd51b22d00f624a5 ref body required false name address1 id 57a255aacd51b22d00f624a4 ref body required false desc first street address line recipient required `method` `post` default type string ref body required false desc second street address line recipient default type string name address2 id 57a255aacd51b22d00f624a3 default type string name city id 57a255aacd51b22d00f624a2 ref body required false desc city recipient required `method` `post` body required false desc state province recipient required `method` `post` `country` us ca nl default type string name state id 57a255aacd51b22d00f624a1 ref required false desc zip postal code recipient required `method` `post` default type string name zip id 57a255aacd51b22d00f624a0 ref body ref body required false desc country recipient required `method` `post` default type string name country id 57a255aacd51b22d00f6249f body required false desc phone number recipient default type string name phone id 57a255aacd51b22d00f6249e ref desc name gifter purpose message displays recipient default type string name gifter name id 57a255aacd51b22d00f6249d ref body required false name personal message id 57a255aacd51b22d00f6249c ref body required false desc personal message gifter recipient 255 characters default type string type object name gifter account id 57a255aacd51b22d00f6249b ref body required true desc block account details gifter reference existing `account code` create new account using account objects params `account code` required default required true desc account code gifter 's account default type string name account code id 57a255aacd51b22d00f6249a ref body url gift cards examples codes language xml code gift card n product code gift card product code n unit amount cents 2000 unit amount cents n currency usd currency n delivery n method email method n email address john example com email address n first name john first name n last name smith last name n gifter name sally gifter name n personal message n hi john happy birthday hope great day love sally personal message n delivery n gifter account n account code 1 account code n email sally example com email n first name sally first name n last name wilson last name n billing info n number 4111 1111 1111 1111 number n month 1 month n year 2017 year n billing info n gifter account n gift card language ruby code recurly giftcard create \\( n product code 'gift card' n unit amount cents 2000 n currency 'usd' n delivery n method 'email' n email address 'john example com' n first name 'john' n last name 'smith' n address n address1 '' n address2 '' n city '' n state '' n zip '' n country '' n phone '' n n gifter name 'sally' n personal message 'hi john happy birthday hope great day love sally' n n gifter account n account code '1' n email 'sally example com' n first name 'sally' n last name 'wilson' n billing info n number '4111 1111 1111 1111' n month '1' n year '2017' n n n n \\) language php code \\? php n n giftcard new recurly giftcard \\( \\) n giftcard product code 'gift card' n giftcard currency 'usd' n giftcard unit amount cents 1000 n giftcard gifter account new recurly account \\( '3345634' \\) n giftcard delivery new recurly delivery \\( \\) n giftcard delivery email address 'john example com' n giftcard delivery first name 'john' n giftcard delivery last name 'smith' n giftcard delivery personal message 'hi john happy birthday hope great day love sally' n giftcard delivery gifter name 'sally' n giftcard delivery method 'email' email post n giftcard delivery deliver new datetime \\( 2017 01 01 00 00 00 new datetimezone \\( utc \\) \\) n giftcard create \\( \\) language python code gift card recurly giftcard \\( \\) ngift card product code 'gift card' ngift card currency 'usd' ngift card unit amount cents 1000 ngift card gifter account recurly account \\( account code '3345634' \\) n ndelivery recurly delivery \\( \\) ndelivery method 'email' ndelivery email address 'john example com' ndelivery first name 'john' ndelivery last name 'smith' ndelivery personal message 'hi john happy birthday hope great day love sally' ndelivery gifter name 'sally' ngift card delivery delivery n ngift card save \\( \\) method post results codes status 201 language xml code \\? xml version 1 0 encoding utf 8 \\? n gift card href https subdomain recurly com v2 gift cards 2003020297591186183 n gifter account href https subdomain recurly com v2 accounts 3345634 n invoice href https subdomain recurly com v2 invoices 1047 n id type integer 2003020297591186183 id n redemption code 518822d87268c142 redemption code n product code gift card product code n unit amount cents type integer 1000 unit amount cents n currency usd currency n delivery n method email method n email address john example com email address n deliver nil nil deliver n first name john first name n last name smith last name n address nil nil address n gifter name sally gifter name n personal message n hi john happy birthday hope great day love sally personal message n delivery n created type datetime 2016 07 26t15 23 46z created n updated type datetime 2016 07 26t15 23 46z updated n delivered nil nil delivered n redeemed nil nil redeemed n gift card name status 404 language xml code error n symbol found symbol n description lang en us gift card product unit amount cents '2000' 'usd' currency found description n error name wrong amount code \\? xml version 1 0 encoding utf 8 \\? n error n symbol found symbol n description lang en us gift card product product code 'gift cards123' found description n error name wrong product status 404 language xml body createdat 2016 08 03t20 23 50 945z project 555fbba928249c1900618a82 version 5919d93785b2570f00e41c39 link url category 5919d93885b2570f00e41c45 githubsync link external false title create gift card updates order 3 parentdoc null slug create gift card sync unique type post user 55b66dba6127b1250036446f childrenpages postcreate gift cardpurchase gift card gifter 's account body paramsproduct code requiredstringthe product code gift card product unit amount cents requiredintegerthe amount gift card must match amount gift card product currency requiredstringthe currency `unit amount cents` delivery requiredobjectblock delivery information includes params `method` `personal message` method requiredstringwhether delivery method `email` `post` deliver datetimewhen gift card delivered recipient null gift card delivered immediately datetime provided delivery hourly window rounding example 6 23 pm 6 00 pm hourly batch must least hour future less year futureemail address stringthe email address recipient required `method` `email` first name stringthe first name recipient last name stringthe last name recipient address objectblock address information recipient includes params `address1` `phone` required `method` `post` address1 stringthe first street address line recipient required `method` `post` address2 stringthe second street address line recipient city stringthe city recipient required `method` `post` state stringthe state province recipient required `method` `post` `country` us ca nl zip stringthe zip postal code recipient required `method` `post` country stringthe country recipient required `method` `post` phone stringthe phone number recipient gifter name stringthe name gifter purpose message displays recipient personal message stringthe personal message gifter recipient 255 characters gifter account requiredobjectblock account details gifter reference existing `account code` create new account using account objects params `account code` required account code requiredstringthe account code gifter 's account edit pagesuggest editsdefinition api url page api url examplesxmlrubyphppythonresult format201 created404 wrong amount404 wrong product id 5919d93a85b2570f00e41c6d body excerpt githubsync isreference true order 4 parentdoc null api results codes status 200 language xml code \\? xml version 1 0 encoding utf 8 \\? n gift card href https subdomain recurly com v2 gift cards 2003020297591186183 n gifter account href https subdomain recurly com v2 accounts 3345634 n invoice href https subdomain recurly com v2 invoices 1047 n recipient account href https subdomain recurly com v2 accounts 3345700 n id type integer 2003020297591186183 id n redemption code 518822d87268c142 redemption code n balance cents type integer 500 balance cents n product code gift card product code n unit amount cents type integer 1000 unit amount cents n currency usd currency n delivery n method post method n email address john example com email address n deliver nil nil deliver n first name john first name n last name smith last name n address n address1 123 b st address1 n address2 nil nil address2 n city san francisco city n state ca state n zip 94110 zip n country usa country n phone nil nil phone n address n gifter name sally gifter name n personal message n hi john happy birthday hope great day love sally personal message n delivery n created type datetime 2016 07 26t15 23 46z created n updated type datetime 2016 07 29t04 25 39z updated n delivered nil nil delivered n redeemed type datetime 2016 07 29t04 25 38z redeemed n gift card name settings auth required params desc id gift card want look default type string name id id 57a2525f5220910e002a1810 ref path required true url gift cards id examples codes language php code \\? php n n giftcard recurly giftcard get \\( 2003020297591186183 \\) name null language ruby code gift card recurly giftcard find \\( 2003020297591186183 \\) language python code gift card recurly giftcard get \\( 2003020297591186183 \\) method get user 55b66dba6127b1250036446f sync unique title lookup gift card link url updates version 5919d93785b2570f00e41c39 createdat 2016 08 03t20 20 52 274z hidden false link external false next pages description project 555fbba928249c1900618a82 slug lookup gift card type get v 0 category 5919d93885b2570f00e41c45 childrenpages getlookup gift cardpath paramsid requiredstringthe id gift card want look edit pagesuggest editsdefinition api url page api url examplesphprubypythonresult format200 ok id 5919d93a85b2570f00e41c6e type post link url project 555fbba928249c1900618a82 user 55b66dba6127b1250036446f version 5919d93785b2570f00e41c39 category 5919d93885b2570f00e41c45 excerpt redeem gift card recipient 's account outside subscription purchase link external false hidden false next pages description parentdoc null sync unique title redeem gift card account body githubsync updates isreference true order 5 slug redeem gift card v 0 api auth required params name recipient account id 57a2827fb7d9350e00a451db ref body required true desc account object recipient gift card default type object ref body required true desc account code recipient must existing account default type string name account code id 57a2827fb7d9350e00a451da url gift cards redemption code redeem examples codes language xml code recipient account n account code 3345700 account code n recipient account language php code \\? php n n redeem existing account using account code n giftcard new recurly giftcard \\( \\) n giftcard redemption code redemptioncode n giftcard redeem \\( accountcode \\) language ruby code account code '3345634' nredemption code '22fd95994d02b39d' ngift card recurly giftcard new \\( redemption code redemption code \\) ngift card redeem \\( account code \\) language python code account code '3345634' nredemption code '22fd95994d02b39d' ngift card recurly giftcard \\( redemption code redemption code \\) ngift card redeem \\( account code \\) method post results codes status 200 language xml code \\? xml version 1 0 encoding utf 8 \\? n gift card href https subdomain recurly com v2 gift cards 2003020297591186183 n gifter account href https subdomain recurly com v2 accounts 3345634 n invoice href https subdomain recurly com v2 invoices 1047 n recipient account href https subdomain recurly com v2 accounts 3345700 n id type integer 2003020297591186183 id n redemption code 518822d87268c142 redemption code n balance cents type integer 500 balance cents n product code gift card product code n unit amount cents type integer 1000 unit amount cents n currency usd currency n delivery n method post method n email address john example com email address n deliver nil nil deliver n first name john first name n last name smith last name n address n address1 123 b st address1 n address2 nil nil address2 n city san francisco city n state ca state n zip 94110 zip n country usa country n phone nil nil phone n address n gifter name sally gifter name n personal message n hi john happy birthday hope great day love sally personal message n delivery n created type datetime 2016 07 26t15 23 46z created n updated type datetime 2016 07 29t04 25 39z updated n delivered nil nil delivered n redeemed type datetime 2016 07 29t04 25 38z redeemed n gift card name name already redeemed status 400 language xml code \\? xml version 1 0 encoding utf 8 \\? n error n symbol bad request symbol n description gift card already redeemed description n error status 400 language xml code \\? xml version 1 0 encoding utf 8 \\? n error n symbol bad request symbol n description gift card redemption code '5b88c922abd00559f' found description n error name invalid redemption code language xml code \\? xml version 1 0 encoding utf 8 \\? n error n symbol bad request symbol n description account account code '059903imfkejfhs' found description n error name invalid account status 400 settings createdat 2016 08 03t23 43 05 495z childrenpages postredeem gift card accountredeem gift card recipient 's account outside subscription purchase body paramsrecipient account requiredobjectthe account object recipient gift card account code requiredstringthe account code recipient must existing account edit pagesuggest editsdefinition api url page api url examplesxmlphprubypythonresult format200 ok400 already redeemed400 invalid redemption code400 invalid account id 5919d93a85b2570f00e41c6f body category 5919d93885b2570f00e41c45 excerpt slug preview subscription gift card redemption type post updates api examples codes language xml code subscription n plan code gold plan code n currency eur currency n account n account code 1 account code n email verena example com email n first name verena first name n last name example last name n billing info n number 4111 1111 1111 1111 number n month 12 month n year 2019 year n billing info n account n coupon code subscription special coupon code n gift card n redemption code jhd776jenn99e6dd redemption code n gift card n subscription language php code \\? php n n subscription new recurly subscription \\( \\) n subscription plan code 'gold' n subscription currency 'usd' n subscription account new recurly account \\( \\) n subscription account account code '1' n subscription gift card new recurly giftcard \\( \\) n subscription gift card redemption code '20e11b59d312a3bc' n n subscription preview \\( \\) language ruby code subscription recurly subscription preview \\( n plan code 'gold' n currency 'eur' n account n account code '1' n email 'verena example com' n first name 'verena' n last name 'example' n billing info n number '4111 1111 1111 1111' n month 1 n year 2014 n n n gift card recurly giftcard new \\( redemption code redemption code \\) n \\) language python code subscription subscription \\( \\) nsubscription plan code 'gold' nsubscription currency 'eur' n naccount account \\( account code '1' \\) naccount email 'verena example com' naccount first name 'verena' naccount last name 'example' n nbilling info billinginfo \\( \\) nbilling info number '4111 1111 1111 1111' nbilling info month 1 nbilling info year 2014 n naccount billing info billing info nsubscription account account n nredemption code '22fd95994d02b39d' nsubscription gift card recurly giftcard \\( redemption code redemption code \\) n nsubscription preview \\( \\) method post results codes status 200 language xml code subscription href https subdomain recurly com v2 subscriptions 37bfe445e10e91512fec6d491a9c3a53 n account href https subdomain recurly com v2 accounts 1 n redemptions href https subdomain recurly com v2 subscriptions 37bfe445e10e91512fec6d491a9c3a53 redemptions n invoice href https subdomain recurly com v2 invoices 1000 n plan href https subdomain recurly com v2 plans gold n plan code gold plan code n name gold plan name n plan n revenue schedule type evenly revenue schedule type n uuid 37bfe445e10e91512fec6d491a9c3a53 uuid n state active state n unit amount cents type integer 4500 unit amount cents n currency eur currency n quantity type integer 1 quantity n activated type datetime 2016 08 03t15 50 09z activated n canceled nil nil n expires nil nil n updated type datetime 2016 08 03t15 50 10z updated n total billing cycles nil nil n remaining billing cycles nil nil n current period started type datetime 2016 08 03t15 50 09z current period started n current period ends type datetime 2016 09 03t15 50 09z current period ends n trial started nil nil n trial ends nil nil n terms conditions nil nil n customer notes nil nil n started gift type boolean true started gift n converted nil nil converted n tax cents type integer 394 tax cents n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n po number nil nil n net terms type integer 0 net terms n collection method automatic collection method n subscription add ons type array n subscription add ons n name cancel href https subdomain recurly com v2 subscriptions 37bfe445e10e91512fec6d491a9c3a53 cancel method put n name terminate href https subdomain recurly com v2 subscriptions 37bfe445e10e91512fec6d491a9c3a53 terminate method put n name postpone href https subdomain recurly com v2 subscriptions 37bfe445e10e91512fec6d491a9c3a53 postpone method put n name notes href https subdomain recurly com v2 subscriptions 37bfe445e10e91512fec6d491a9c3a53 notes method put n subscription name settings auth required params type object name gift card id 57a286c1b7d9350e00a451df ref body required true desc gift card object required order redeem redemption code default desc redemption code gift card redeemed default type string name redemption code id 57a286c1b7d9350e00a451de ref body required true url subscriptions preview hidden false link url version 5919d93785b2570f00e41c39 githubsync createdat 2016 08 04t00 03 07 198z isreference true link external false next pages description order 6 sync unique v 0 project 555fbba928249c1900618a82 title preview subscription gift card redemption user 55b66dba6127b1250036446f parentdoc null childrenpages postpreview subscription gift card redemptionbody paramsgift card requiredobjectthe gift card object required order redeem redemption code redemption code requiredstringthe redemption code gift card redeemed edit pagesuggest editsdefinition api url page api url examplesxmlphprubypythonresult format200 ok id 5919d93a85b2570f00e41c70 category 5919d93885b2570f00e41c45 githubsync link url parentdoc null type post updates v 0 body excerpt redeem gift card within subscription purchase redemption fails subscription purchase fail hidden false order 7 project 555fbba928249c1900618a82 slug redeem gift card subscription api results codes name code subscription href https subdomain recurly com v2 subscriptions 37bfe445e10e91512fec6d491a9c3a53 n account href https subdomain recurly com v2 accounts 1 n redemptions href https subdomain recurly com v2 subscriptions 37bfe445e10e91512fec6d491a9c3a53 redemptions n invoice href https subdomain recurly com v2 invoices 1000 n plan href https subdomain recurly com v2 plans gold n plan code gold plan code n name gold plan name n plan n revenue schedule type evenly revenue schedule type n uuid 37bfe445e10e91512fec6d491a9c3a53 uuid n state active state n unit amount cents type integer 4500 unit amount cents n currency eur currency n quantity type integer 1 quantity n activated type datetime 2016 08 03t15 50 09z activated n canceled nil nil n expires nil nil n updated type datetime 2016 08 03t15 50 10z updated n total billing cycles nil nil n remaining billing cycles nil nil n current period started type datetime 2016 08 03t15 50 09z current period started n current period ends type datetime 2016 09 03t15 50 09z current period ends n trial started nil nil n trial ends nil nil n terms conditions nil nil n customer notes nil nil n started gift type boolean true started gift n converted nil nil converted n tax cents type integer 394 tax cents n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n po number nil nil n net terms type integer 0 net terms n collection method automatic collection method n subscription add ons type array n subscription add ons n name cancel href https subdomain recurly com v2 subscriptions 37bfe445e10e91512fec6d491a9c3a53 cancel method put n name terminate href https subdomain recurly com v2 subscriptions 37bfe445e10e91512fec6d491a9c3a53 terminate method put n name postpone href https subdomain recurly com v2 subscriptions 37bfe445e10e91512fec6d491a9c3a53 postpone method put n name notes href https subdomain recurly com v2 subscriptions 37bfe445e10e91512fec6d491a9c3a53 notes method put n subscription language xml status 201 name wrong redemption code status 404 language xml code \\? xml version 1 0 encoding utf 8 \\? n error n symbol found symbol n description lang en us gift card redemption code '11dbeedfeb1e70795' found description n error name already redeemed status 400 language text code \\? xml version 1 0 encoding utf 8 \\? n error n symbol gift card already redeemed symbol n description gift card already redeemed description n error settings auth required params id 57a2852bb7d9350e00a451dd ref body required true desc gift card object required order redeem redemption code default type object name gift card id 57a2852bb7d9350e00a451dc ref body required true desc redemption code gift card redeemed default type string name redemption code url subscriptions examples codes language xml code subscription n plan code gold plan code n currency eur currency n account n account code 1 account code n email verena example com email n first name verena first name n last name example last name n billing info n number 4111 1111 1111 1111 number n month 12 month n year 2019 year n billing info n account n coupon code subscription special coupon code n gift card n redemption code jhd776jenn99e6dd redemption code n gift card n subscription code \\? php n n subscription new recurly subscription \\( \\) n subscription plan code 'gold' n subscription currency 'usd' n subscription account new recurly account \\( \\) n subscription account account code '1' n subscription gift card new recurly giftcard \\( \\) n subscription gift card redemption code '20e11b59d312a3bc' n n subscription create \\( \\) language php language ruby code subscription recurly subscription create \\( n plan code 'gold' n currency 'eur' n customer notes 'thank business n account n account code '1' n email 'verena example com' n first name 'verena' n last name 'example' n billing info n number '4111 1111 1111 1111' n month 12 n year 2019 n n n gift card recurly giftcard new \\( redemption code redemption code \\) n \\) language python code subscription subscription \\( \\) nsubscription plan code 'gold' nsubscription currency 'eur' n naccount account \\( account code '1' \\) naccount email 'verena example com' naccount first name 'verena' naccount last name 'example' n nbilling info billinginfo \\( \\) nbilling info number '4111 1111 1111 1111' nbilling info month 12 nbilling info year 2019 n naccount billing info billing info nsubscription account account n nredemption code '22fd95994d02b39d' nsubscription gift card recurly giftcard \\( redemption code redemption code \\) n nsubscription save \\( \\) method post createdat 2016 08 03t23 53 19 793z isreference true sync unique title create subscription gift card redemption user 55b66dba6127b1250036446f version 5919d93785b2570f00e41c39 link external false next pages description childrenpages postcreate subscription gift card redemptionredeem gift card within subscription purchase redemption fails subscription purchase fail body paramsgift card requiredobjectthe gift card object required order redeem redemption code redemption code requiredstringthe redemption code gift card redeemed edit pagesuggest editsdefinition api url page api url examplesxmlphprubypythonresult format201 created404 wrong redemption code400 already redeemed id 5919d94185b2570f00e41cbe category 5919d93885b2570f00e41c46 createdat 2015 06 18t16 32 46 758z sync unique title list invoices user 5581f6648625220d00429ef6 v 0 api params query required false desc state invoices return `open` `collected` `failed` `past due` default type string name state id 5582f2ae81672a3900bb4fe3 ref required false desc attribute used order records `created at` `updated at` default created type string name sort id 578eb0ff426c561700db86b7 ref query ref query required false desc order products returned `asc` ascending order `desc` descending order default desc type string name order id 578eb0ff426c561700db86b6 default type datetime name begin time id 578eb0ff426c561700db86b5 ref query required false desc operates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time default type datetime name end time id 578eb0ff426c561700db86b4 ref query required false desc operates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time default 50 type int name per page id 5582f2ae81672a3900bb4fe1 ref query required false desc number records return per page maximum 200 query required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page default type string name cursor id 5582f2ae81672a3900bb4fe2 ref url invoices examples codes language php code \\? php n n invoices recurly invoicelist get \\( \\) nforeach \\( invoices invoice \\) n print invoice invoice n n name code recurly invoice find invoice n puts invoice invoice inspect nend language ruby code client version 2 1 6 nfor invoice invoice \\( \\) n print 'invoice s' invoice n n client version 2 1 5 ninvoices invoice \\( \\) nwhile invoices n invoice invoices n print 'invoice s' invoice n try n invoices invoices next page \\( \\) n except pageerror n invoices \\( \\) n npast due invoice past due \\( \\) language python code using system linq n nvar invoices invoices list \\( \\) nwhile \\( invoices \\( \\) \\) n n tforeach \\( var invoice invoices \\) n tconsole writeline \\( invoice invoice \\) n tinvoices invoices next n language csharp method get results codes status 200 language xml code invoices type array n invoice href https subdomain recurly com v2 invoices 1007 n account href https subdomain recurly com v2 accounts 1 n address n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n address n shipping address n name lon doner name n address1 221b baker st address1 n address2 address2 n city london city n state state n zip w1k 6ah zip n country gb country n phone phone n shipping address n subscription href https subdomain recurly com v2 subscriptions 37c0057cb105f67b6b8a1146f7b59c41 n uuid 37c0057d2f641f4e2fcbda4b5b833633 uuid n state collected state n invoice number prefix n invoice number type integer 1007 invoice number n po number nil nil n vat number nil nil n subtotal cents type integer 5300 subtotal cents n tax cents type integer 424 tax cents n total cents type integer 5274 total cents n currency eur currency n created type datetime 2016 08 03t16 26 26z created n updated type datetime 2016 08 03t16 26 26z updated n closed type datetime 2016 08 03t16 26 26z closed n terms conditions nil nil n customer notes nil nil n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n net terms type integer 0 net terms n collection method automatic collection method n redemptions href https subdomain recurly com v2 invoices 1007 redemptions n line items type array n adjustment href https subdomain recurly com v2 adjustments 37c0057d2a3ace0c3f3d674ae89fdabd type charge n account href https subdomain recurly com v2 accounts 1 n invoice href https subdomain recurly com v2 invoices 1007 n subscription href https subdomain recurly com v2 subscriptions 37c0057cb105f67b6b8a1146f7b59c41 n uuid 37c0057d2a3ace0c3f3d674ae89fdabd uuid n state invoiced state n description setup fee gold plan description n accounting code nil nil n product code gold product code n origin setup fee origin n unit amount cents type integer 800 unit amount cents n quantity type integer 1 quantity n discount cents type integer 0 discount cents n tax cents type integer 70 tax cents n total cents type integer 870 total cents n currency eur currency n taxable type boolean false taxable n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n tax exempt type boolean false tax exempt n tax code nil nil n start date type datetime 2016 08 03t16 26 26z start date n end date nil nil n created type datetime 2016 08 03t16 26 26z created n updated type datetime 2016 08 03t16 26 26z updated n revenue schedule type evenly revenue schedule type n adjustment n continued n line items n transactions type array n detail n transactions n name refund href https subdomain recurly com v2 invoices 1007 refund method post n invoice n continued n invoices n n n invoices type array n invoice href https subdomain recurly com v2 invoices 1005 n account href https subdomain recurly com v2 accounts 1 n address n address1 400 alabama st address1 n address2 address2 n city san francisco city n state ca state n zip 94110 zip n country us country n phone phone n address n subscription href https subdomain recurly com v2 subscriptions 17caaca1716f33572edc8146e0aaefde n uuid 421f7b7d414e4c6792938e7c49d552e9 uuid n state open state n invoice number prefix invoice number prefix populated vat country invoice sequencing shows country code n invoice number type integer 1005 invoice number n po number nil nil po number n vat number nil nil vat number n subtotal cents type integer 1200 subtotal cents n tax cents type integer 0 tax cents n total cents type integer 1200 total cents n currency usd currency n created type datetime 2016 06 25t12 00 00z created n closed nil nil closed n terms conditions terms conditions n customer notes customer notes n vat reverse charge notes vat reverse charge notes shows reverse charge invoice n tax type usst tax type shows tax invoice n tax region ca tax region shows tax invoice n tax rate type float 0 tax rate shows tax invoice n net terms type integer 0 net terms n collection method automatic collection method n redemptions href https subdomain recurly com v2 invoices e3f0a9e084a2468480d00ee61b090d4d redemptions n line items type array n adjustment href https subdomain recurly com v2 adjustments 05a4bbdeda2a47348185270021e6087b n detail n adjustment n line items n transactions type array n transactions n invoice n invoices name settings auth required link url parentdoc null project 555fbba928249c1900618a82 type get updates 55b1055eb2405537003cd938 excerpt returns list invoices githubsync hidden false next pages description slug list invoices version 5919d93785b2570f00e41c39 body invoice states n block parameters n n data n h 0 state n h 1 description n 0 1 open pending collection n 0 0 `open` n null 0 ` n 1 0 `collected` n 1 1 collection completed successfully n 2 0 `failed` n 2 1 failed collect n 3 0 `past due` n 3 1 initial collection failed still attempting collection n n cols 2 n rows 4 n n block n n block callout n n type warning n body please note invoice one state n n block isreference true link external false order 1 childrenpages getlist invoicesreturns list invoices query paramsstate stringallthe state invoices return `open` `collected` `failed` `past due` sort stringcreated atthe attribute used order records `created at` `updated at` order stringdescthe order products returned `asc` ascending order `desc` descending order begin time datetimeoperates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time end time datetimeoperates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time per page integer50number records return per page maximum 200 cursor stringsplits records across pages leave blank return first page follow uri first page 's link header fetch next page invoice states state description open pending collection collection completed successfully failed collect initial collection failed still attempting collection please note invoice one state edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d94185b2570f00e41cbf body createdat 2015 06 18t16 51 54 366z updates 55b103aab3a7e037008ac0d7 version 5919d93785b2570f00e41c39 api settings auth required params ref path required true desc unique account identifier default type string name account code id 578d004184f5cd0e0089166a query required false desc state invoices return `open` `collected` `failed` `past due` default type string name state id 5582f72aea39a939002242f5 ref required false desc attribute used order records `created at` `updated at` default created type string name sort id 578eb170426c561700db86bb ref query type string name order id 578eb170426c561700db86ba ref query required false desc order products returned `asc` ascending order `desc` descending order default desc required false desc operates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time default type datetime name begin time id 578eb170426c561700db86b9 ref query ref query required false desc operates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time default type datetime name end time id 578eb170426c561700db86b8 default 50 type int name per page id 5582f72aea39a939002242f3 ref query required false desc number records return per page maximum 200 default type string name cursor id 5582f72aea39a939002242f4 ref query required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page url accounts account code invoices examples codes language php code \\? php n ntry n invoices recurly invoicelist getforaccount \\( 'b6f5783' \\) n foreach \\( invoices invoice \\) n print invoice invoice n n n catch \\( recurly notfounderror e \\) n print account found e n name language ruby code account recurly account find \\( '1' \\) naccount invoices find invoice n puts invoice invoice inspect nend language python code client version 2 1 5 naccount account get \\( '1' \\) ninvoices account invoices \\( \\) nwhile invoices n invoice invoices n print 'invoice s' invoice n try n invoices invoices next page \\( \\) n except pageerror n invoices \\( \\) n n client version 2 1 6 naccount account get \\( '1' \\) nfor invoices account invoices \\( \\) n print 'invoice s' invoice language csharp code using system linq n n get list invoices account nvar account accounts get \\( 1 \\) nvar invoices account getinvoices \\( \\) n n directly invoices nvar invoices invoices list \\( 1 \\) account code n nwhile \\( invoices \\( \\) \\) n n tforeach \\( var invoice invoices \\) n tconsole writeline \\( invoice invoice \\) n tinvoices invoices next n method get results codes name code invoices type array n invoice href https subdomain recurly com v2 invoices 1005 n account href https subdomain recurly com v2 accounts 1 n address n address1 address1 n address2 address2 n city city n state state n zip zip n country country n phone phone n address n shipping address n name lon doner name n address1 221b baker st address1 n address2 address2 n city london city n state state n zip w1k 6ah zip n country gb country n phone phone n shipping address n subscription href https subdomain recurly com v2 subscriptions 17caaca1716f33572edc8146e0aaefde n uuid 421f7b7d414e4c6792938e7c49d552e9 uuid n state open state n invoice number prefix invoice number prefix populated vat country invoice sequencing shows country code n invoice number type integer 1005 invoice number n po number nil nil po number n vat number nil nil vat number n subtotal cents type integer 1200 subtotal cents n tax cents type integer 0 tax cents n total cents type integer 1200 total cents n currency usd currency n created type datetime 2016 06 25t12 00 00z created n closed nil nil closed n terms conditions terms conditions n customer notes customer notes n vat reverse charge notes vat reverse charge notes shows reverse charge invoice n tax type usst tax type shows tax invoice n tax region ca tax region shows tax invoice n tax rate type float 0 tax rate shows tax invoice n net terms type integer 0 net terms n collection method automatic collection method n redemptions href https subdomain recurly com v2 invoices e3f0a9e084a2468480d00ee61b090d4d redemptions n line items type array n adjustment href https subdomain recurly com v2 adjustments 05a4bbdeda2a47348185270021e6087b n detail n adjustment n line items n transactions type array n transactions n invoice n continued n invoices language xml status 200 excerpt returns list invoices link url project 555fbba928249c1900618a82 title list account 's invoices user 5581f6648625220d00429ef6 githubsync hidden false isreference true link external false parentdoc null v 0 next pages description order 2 slug list accounts invoices sync unique type get category 5919d93885b2570f00e41c46 childrenpages getlist account 's invoicesreturns list invoices path paramsaccount code requiredstringunique account identifier query paramsstate stringallthe state invoices return `open` `collected` `failed` `past due` sort stringcreated atthe attribute used order records `created at` `updated at` order stringdescthe order products returned `asc` ascending order `desc` descending order begin time datetimeoperates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time end time datetimeoperates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time per page integer50number records return per page maximum 200 cursor stringsplits records across pages leave blank return first page follow uri first page 's link header fetch next page edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d94185b2570f00e41cc0 link external false slug preview invoice title preview invoice v 0 category 5919d93885b2570f00e41c46 parentdoc null sync unique updates body block callout n n type warning n body api call return new invoice 's details success pending charges return http status code `422 unprocessable entity` n n block excerpt preview allows display invoice details including estimated tax post githubsync user 5581f6648625220d00429ef6 version 5919d93785b2570f00e41c39 createdat 2015 06 18t17 07 20 716z isreference true link url order 3 project 555fbba928249c1900618a82 type post api method post results codes code invoice href n account href https subdomain recurly com v2 accounts 1 n address n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n address n uuid 374a367fb1da9da68373a949daa21575 uuid n state open state n invoice number prefix n invoice number nil nil n po number nil nil n vat number nil nil n subtotal cents type integer 5000 subtotal cents n tax cents type integer 438 tax cents n total cents type integer 5438 total cents n currency usd currency n created nil nil n updated nil nil n closed nil nil n terms conditions nil nil n customer notes nil nil n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n net terms type integer 0 net terms n collection method automatic collection method n line items type array n adjustment href https subdomain recurly com v2 adjustments 374a2729397882fafbc82041a0a4dd0d type charge n detail n adjustment n line items n transactions type array n transactions n invoice name null status 200 language xml status 422 language xml code error n symbol invoice symbol n description charges invoice description n error settings auth required params type string name account code id 578d0984f5ffc72900cf8009 ref path required true desc unique account identifier default desc optional notes field default terms conditions text specified invoice settings page recurly admin specify custom notes tag add override terms conditions custom notes stay subscription renewals default type string name terms conditions id 58af681cc0f1371b00e6c11b ref body required false name customer notes id 58af681cc0f1371b00e6c11a ref body required false desc optional notes field default customer notes text specified invoice settings page recurly admin specify custom notes tag add customer notes custom notes made invoice one time charge carry subsequent invoices default type string type string name vat reverse charge notes id 58af681cc0f1371b00e6c119 ref body required false desc vat reverse charge notes appear eu vat enabled using avalara avatax account customer eu vat number different country default vat reverse charge notes text specified tax settings page recurly admin unless custom notes created original subscription specify custom notes tag add override vat reverse charge notes custom notes stay subscription renewals default desc either `automatic` `manual` default automatic type string name collection method id 58af681cc0f1371b00e6c118 ref body required false name net terms id 58af681cc0f1371b00e6c117 ref body required false desc integer representing number days invoice 's creation invoice become past due invoice 's net terms set '0' due 'on receipt' become past due 24 hours created invoice due net 30 become past due 31 days exactly default type int ref body required false desc optional notes field attach po number invoice default type string name po number id 58af681cc0f1371b00e6c116 url accounts account code invoices preview examples codes language ruby code account recurly account find \\( '1' \\) ninvoice account build invoice name language xml code invoice n collection method manual collection method n invoice hidden false next description pages childrenpages postpreview invoicepreview allows display invoice details including estimated tax post path paramsaccount code requiredstringunique account identifier body paramsterms conditions stringoptional notes field default terms conditions text specified invoice settings page recurly admin specify custom notes tag add override terms conditions custom notes stay subscription renewals customer notes stringoptional notes field default customer notes text specified invoice settings page recurly admin specify custom notes tag add customer notes custom notes made invoice one time charge carry subsequent invoices vat reverse charge notes stringvat reverse charge notes appear eu vat enabled using avalara avatax account customer eu vat number different country default vat reverse charge notes text specified tax settings page recurly admin unless custom notes created original subscription specify custom notes tag add override vat reverse charge notes custom notes stay subscription renewals collection method stringautomaticcan either `automatic` `manual` net terms integerinteger representing number days invoice 's creation invoice become past due invoice 's net terms set '0' due 'on receipt' become past due 24 hours created invoice due net 30 become past due 31 days exactly po number stringoptional notes field attach po number invoice api call return new invoice 's details success pending charges return http status code edit pagesuggest editsdefinition api url page api url examplesrubyxmlresult format200 ok422 unprocessable entity id 5919d94185b2570f00e41cc1 v 0 api params ref body required false desc optional notes field default terms conditions text specified invoice settings page recurly admin specify custom notes tag add override terms conditions custom notes stay subscription renewals default type string name terms conditions id 55c8c16d229b981900ed5fd6 default type string name customer notes id 55c8c16d229b981900ed5fd5 ref body required false desc optional notes field default customer notes text specified invoice settings page recurly admin specify custom notes tag add customer notes custom notes made invoice one time charge carry subsequent invoices default type string name vat reverse charge notes id 55c8c16d229b981900ed5fd4 ref body required false desc vat reverse charge notes appear eu vat enabled using avalara avatax account customer eu vat number different country default vat reverse charge notes text specified tax settings page recurly admin unless custom notes created original subscription specify custom notes tag add override vat reverse charge notes custom notes stay subscription renewals default automatic type string name collection method id 55c8c16d229b981900ed5fd3 ref body required false desc either `automatic` `manual` desc supported collection method `manual` integer representing number days invoice 's creation invoice become past due invoice 's net terms set '0' due 'on receipt' become past due 24 hours created invoice due net 30 become past due 31 days exactly body name net terms ref required false type int id 55c8c16d229b981900ed5fd2 default body name po number ref required false type string id 55c8c16d229b981900ed5fd1 default desc supported collection method `manual` optional notes field attach po number invoice type string name account code id 578d09959a98a41900717d61 ref path required true desc unique account identifier default desc currency code currency used default type string name currency id 58d1580d94c3eb37002f5929 ref body required false results codes language xml code invoice href https subdomain recurly com v2 invoices 1000 n account href https subdomain recurly com v2 accounts 1 n address n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n address n uuid 374a37924f83c733b9c9814e9580496a uuid n state open state n invoice number prefix n invoice number type integer 1000 invoice number n po number nil nil n vat number nil nil n subtotal cents type integer 5000 subtotal cents n tax cents type integer 438 tax cents n total cents type integer 5438 total cents n currency usd currency n created type datetime 2016 07 11t19 25 57z created n updated type datetime 2016 07 11t19 25 57z updated n closed nil nil n terms conditions nil nil n customer notes nil nil n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n net terms type integer 0 net terms n collection method automatic collection method n line items type array n adjustment href https subdomain recurly com v2 adjustments 374a2729397882fafbc82041a0a4dd0d type charge n detail n adjustment n line items n transactions type array n transactions n name mark successful href https subdomain recurly com v2 invoices 1000 mark successful method put n name mark failed href https subdomain recurly com v2 invoices 1000 mark failed method put n invoice n name status 201 status 422 language text code error n symbol invoice symbol n description charges invoice description n error settings url accounts account code invoices auth required examples codes language php code \\? php n ntry n invoice recurly invoice invoicependingcharges \\( 'b6f5783' \\) n n print invoice invoice n catch \\( recurly validationerror e \\) n print charges invoice e n catch \\( recurly notfounderror e \\) n print account found e n name language ruby code account recurly account find \\( '1' \\) n n invoice takes invoice attributes optional argument ninvoice account invoice \\( terms conditions 't c' customer notes 'notes' \\) language python code account account get \\( '1' \\) n n invoice \\( \\) takes invoice attributes optional kwargs ninvoice account invoice \\( terms conditions c customer notes notes \\) language csharp code var account accounts get \\( 1 \\) nvar invoice account invoicependingcharges \\( \\) language xml code invoice n collection method manual collection method n invoice method post category 5919d93885b2570f00e41c46 link url next description pages user 5581f6648625220d00429ef6 version 5919d93785b2570f00e41c39 createdat 2015 06 18t17 12 51 925z excerpt post one time charges account remain pending invoiced account automatically invoiced subscription renews however times appropriate invoice account renewal subscriber yearly subscription might want collect one time charges well renewal link external false order 4 parentdoc null sync unique type post updates 563a80604cc3621900ac27f0 githubsync hidden false isreference true project 555fbba928249c1900618a82 slug post invoice invoice pending charges acco body block callout n n type warning n body api call return new invoice 's details success pending charges return http status code `422 unprocessable entity` n n block title post invoice invoice pending charges account childrenpages postpost invoice invoice pending charges accountwhen post one time charges account remain pending invoiced account automatically invoiced subscription renews however times appropriate invoice account renewal subscriber yearly subscription might want collect one time charges well renewal path paramsaccount code requiredstringunique account identifier body paramsterms conditions stringoptional notes field default terms conditions text specified invoice settings page recurly admin specify custom notes tag add override terms conditions custom notes stay subscription renewals customer notes stringoptional notes field default customer notes text specified invoice settings page recurly admin specify custom notes tag add customer notes custom notes made invoice one time charge carry subsequent invoices vat reverse charge notes stringvat reverse charge notes appear eu vat enabled using avalara avatax account customer eu vat number different country default vat reverse charge notes text specified tax settings page recurly admin unless custom notes created original subscription specify custom notes tag add override vat reverse charge notes custom notes stay subscription renewals collection method stringautomaticcan either `automatic` `manual` net terms integeronly supported collection method `manual` integer representing number days invoice 's creation invoice become past due invoice 's net terms set '0' due 'on receipt' become past due 24 hours created invoice due net 30 become past due 31 days exactly po number stringonly supported collection method `manual` optional notes field attach po number invoice currency stringthe currency code currency used api call return new invoice 's details success pending charges return http status code edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format201 created422 unprocessable entity id 5919d94185b2570f00e41cc2 link external false project 555fbba928249c1900618a82 sync unique user 5581f6648625220d00429ef6 v 0 body payments nrecurly returns array payments applied invoice moment usually one successful payment per invoice api returns successful payments return failed payment attempts invoice return refunds payments made invoice category 5919d93885b2570f00e41c46 next pages description order 5 hidden false link url slug lookup invoice details title lookup invoice version 5919d93785b2570f00e41c39 api params path required true desc invoice number default type string name invoice number id 5783ca4a6bcaf40e00a5d873 ref url invoices invoice number examples codes language php code \\? php n ntry n invoice recurly invoice get \\( '1001' \\) n print invoice invoice n catch \\( recurly notfounderror e \\) n print invoice found e n name language ruby code invoice recurly invoice find \\( '1005' \\) code invoice invoice get \\( '1005' \\) language python language csharp code var invoice invoices get \\( 1005 \\) method get results codes name status 200 language xml code invoice href https subdomain recurly com v2 invoices 1007 n account href https subdomain recurly com v2 accounts 1 n address n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n address n shipping address n name lon doner name n address1 221b baker st address1 n address2 address2 n city london city n state state n zip w1k 6ah zip n country gb country n phone phone n shipping address n subscription href https subdomain recurly com v2 subscriptions 37c0057cb105f67b6b8a1146f7b59c41 n uuid 37c0057d2f641f4e2fcbda4b5b833633 uuid n state collected state n invoice number prefix n invoice number type integer 1007 invoice number n po number nil nil n vat number nil nil n subtotal cents type integer 5300 subtotal cents n tax cents type integer 424 tax cents n total cents type integer 5274 total cents n currency eur currency n created type datetime 2016 08 03t16 26 26z created n updated type datetime 2016 08 03t16 26 26z updated n closed type datetime 2016 08 03t16 26 26z closed n terms conditions nil nil n customer notes nil nil n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n net terms type integer 0 net terms n collection method automatic collection method n redemptions href https subdomain recurly com v2 invoices 1007 redemptions n line items type array n adjustment href https subdomain recurly com v2 adjustments 37c0057d2a3ace0c3f3d674ae89fdabd type charge n detail n adjustment n line items n transactions type array n transaction href https subdomain recurly com v2 transactions 37c0057d602b0e1d873d85442187730c type credit card n detail n transaction n transactions n name refund href https subdomain recurly com v2 invoices 1007 refund method post n invoice settings auth required githubsync parentdoc null type get updates createdat 2015 06 18t16 56 30 329z excerpt lookup invoice retrieve detailed information line items payments isreference true childrenpages getlookup invoicelookup invoice retrieve detailed information line items payments path paramsinvoice number requiredstringinvoice number paymentsrecurly returns array payments applied invoice moment usually one successful payment per invoice api returns successful payments return failed payment attempts invoice return refunds payments made invoice edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d94185b2570f00e41cc3 api params header required true desc setting `application pdf` instructs api return invoice pdf default type string name accept id 578d086984f5cd0e008916a2 ref required false desc iso 639 1 abbreviation \\( https en wikipedia org wiki list iso 639 1 codes \\) language supported recurly \\( https docs recurly com docs hosted payment pages section internationalized hosted payment pages \\) language pdf translated header used pdf returned english default en type string name accept language id 578d086984f5cd0e008916a1 ref header type string name invoice number id 578d086984f5cd0e008916a0 ref path required false desc invoice number default url invoices invoice number examples codes language php code \\? php n ntry n pdf recurly invoice getinvoicepdf \\( '1005' \\) n catch \\( recurly notfounderror e \\) n print invoice found e n name language ruby code begin n pdf recurly invoice find \\( n 'invoice number' format 'pdf' n \\) nrescue recurly resource notfound e n puts 'invoice found nend language python code open \\( 'invoice pdf' 'w' \\) invoice file n invoice file write \\( recurly invoice pdf \\( 'invoice number' \\) \\) language csharp code var invoice invoices get \\( 1005 \\) nbyte pdf invoice getpdf \\( \\) method get results codes language text code settings auth required next description pages user 5581f6648625220d00429ef6 title retrieve pdf invoice type get body block callout n n type info n title invoices times utc n body invoices fetched via api use utc timezone n n block isreference true link external false link url project 555fbba928249c1900618a82 slug retrieve pdf invoice githubsync parentdoc null sync unique updates 593f0c888326e5000f3d2472 version 5919d93785b2570f00e41c39 v 1 category 5919d93885b2570f00e41c46 createdat 2015 06 18t17 02 18 864z excerpt retrieve pdf invoice modify headers request `accept` `application pdf` hidden false order 6 childrenpages getretrieve pdf invoiceto retrieve pdf invoice modify headers request `accept` `application pdf` path paramsinvoice number stringinvoice numberheadersaccept requiredstringsetting `application pdf` instructs api return invoice pdf accept language stringenan iso 639 1 abbreviation \\( https en wikipedia org wiki list iso 639 1 codes \\) language supported recurly \\( https docs recurly com docs hosted payment pages section internationalized hosted payment pages \\) language pdf translated header used pdf returned english invoices times utc invoices fetched via api use utc timezone edit pagesuggest editsdefinition api url page api url examplesphprubypythonc id 5919d94185b2570f00e41cc4 hidden false order 7 type put v 0 body isreference true link external false next pages description slug mark invoice paid successfully title mark invoice paid successfully updates user 5581f6648625220d00429ef6 api examples codes name code \\? php n ntry n invoice recurly invoice get \\( '1327' \\) n invoice marksuccessful \\( \\) n n print invoice invoice n catch \\( recurly validationerror e \\) n print could mark paid e n catch \\( recurly notfounderror e \\) n print invoice found e n language php code invoice recurly invoice find \\( '1402' \\) ninvoice mark successful language ruby language python code invoice invoice get \\( '1402' \\) ninvoice mark successful \\( \\) code var invoice invoices get \\( 1005 \\) ninvoice marksuccessful \\( \\) language csharp method put results codes status 200 language xml code invoice href https subdomain recurly com v2 invoices 1010 n account href https subdomain recurly com v2 accounts 1 n address n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n address n uuid 37c03e7817f7f4b88c3d764e4cbd20f1 uuid n state collected state n invoice number prefix n invoice number type integer 1010 invoice number n po number nil nil n vat number nil nil n subtotal cents type integer 5000 subtotal cents n tax cents type integer 438 tax cents n total cents type integer 5438 total cents n currency usd currency n created type datetime 2016 08 03t17 28 40z created n updated type datetime 2016 08 03t17 29 36z updated n closed type datetime 2016 08 03t17 29 36z closed n terms conditions nil nil n customer notes nil nil n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n net terms type integer 0 net terms n collection method manual collection method n line items type array n adjustment href https subdomain recurly com v2 adjustments 37c03e652a90c35ce327c54f3f8051bd type charge n detail n adjustment n line items n transactions type array n transactions n name refund href https subdomain recurly com v2 invoices 1010 refund method post n invoice n settings auth required params ref path required true desc invoice number default type string name invoice number id 578d09b784f5cd0e008917ab url invoices invoice number mark successful createdat 2015 06 18t17 16 11 429z githubsync link url parentdoc null sync unique category 5919d93885b2570f00e41c46 excerpt project 555fbba928249c1900618a82 version 5919d93785b2570f00e41c39 childrenpages putmark invoice paid successfullypath paramsinvoice number requiredstringinvoice number edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d94185b2570f00e41cc5 next pages description user 5581f6648625220d00429ef6 version 5919d93785b2570f00e41c39 api auth required params id 578d09c7bd9f40200058dc80 ref path required true desc invoice number default type string name invoice number url invoices invoice number mark failed examples codes language php code \\? php n ntry n invoice recurly invoice get \\( '1340' \\) n invoice markfailed \\( \\) n n print invoice invoice n catch \\( recurly validationerror e \\) n print could mark failed e n catch \\( recurly notfounderror e \\) n print invoice found e n name language ruby code invoice recurly invoice find \\( 'e3f0a9e084a2468480d00ee61b090d4d' \\) ninvoice mark failed language python code invoice invoice get \\( 'e3f0a9e084a2468480d00ee61b090d4d' \\) ninvoice mark failed \\( \\) language csharp code var invoice invoices get \\( 1005 \\) ninvoice markfailed \\( \\) method put results codes code invoice href https subdomain recurly com v2 invoices 1011 n account href https subdomain recurly com v2 accounts 1 n address n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n address n uuid 37c0401704eccac48b221b4742a7be8b uuid n state failed state n invoice number prefix n invoice number type integer 1011 invoice number n po number nil nil n vat number nil nil n subtotal cents type integer 5000 subtotal cents n tax cents type integer 438 tax cents n total cents type integer 5438 total cents n currency usd currency n created type datetime 2016 08 03t17 30 27z created n updated type datetime 2016 08 03t17 30 43z updated n closed type datetime 2016 08 03t17 30 43z closed n terms conditions nil nil n customer notes nil nil n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n net terms type integer 0 net terms n collection method manual collection method n line items type array n adjustment href https subdomain recurly com v2 adjustments 37c04006ae97b474baa7ca429c91a2c4 type charge n detail n adjustment n line items n transactions type array n transactions n invoice language xml status 200 settings body category 5919d93885b2570f00e41c46 githubsync order 8 project 555fbba928249c1900618a82 slug mark invoice failed collection type put v 0 createdat 2015 06 18t17 16 28 049z excerpt updates link external false link url title mark invoice failed collection hidden false isreference true parentdoc null sync unique childrenpages putmark invoice failed collectionpath paramsinvoice number requiredstringinvoice number edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d94185b2570f00e41cc6 v 0 api url invoices invoice number refund examples codes language php code \\? php n ntry n invoice recurly invoice get \\( '1341' \\) get invoice n line items invoice line items get line items n n use recurly adjustment torefundattributes \\( \\) n turn line items want refund objects n optionally pass `prorated` `quantity` n adjustments array map \\( n function \\( line item \\) return line item torefundattributes \\( \\) n invoice line items n \\) n n pass refund attributes refund \\( \\) method n returns new recurly invoice n refund invoice invoice refund \\( adjustments 'transaction' \\) n refund invoice subtotal cents 1000 n n print refund invoice refund invoice n catch \\( recurly validationerror e \\) n problem data invoice ca n't refunded n print validation error e n catch \\( recurly notfounderror e \\) n print invoice found e n n nthere alternative way call refund directly adjustment ntry n grab adjustment n adjustment recurly adjustment get \\( '2fe89a073a31318cab377e464cb811b4' \\) n n optionally pass arguments torefundattributes n return recurly invoice n refund invoice adjustment refund \\( \\) n refund invoice subtotal cents 1000 n n print refund invoice refund invoice n catch \\( recurly validationerror e \\) n problem data invoice ca n't refunded n print validation error e n catch \\( recurly notfounderror e \\) n print adjustment found e n name language ruby code invoice invoice find \\( 1005 \\) nadjustments invoice line items values map adjustment n adjustment adjustment quantity 1 prorate false nend n ninvoice refund adjustments 'credit' language python code invoice invoice get \\( '1005' \\) nline items list \\( 'adjustment' adjustment 'quantity' 1 'prorate' false adjustment invoice line items \\) n nrefund invoice invoice refund \\( line items 'credit' \\) language csharp code refund single adjustment nvar invoice invoices get \\( 1005 \\) nvar adjustment invoice adjustments first \\( x x uuid e1234245132465 \\) ninvoice invoice refund \\( adjustment false 1 \\) adjustment prorate quantity n n refund multiple adjustments nvar invoice invoices get \\( 1005 \\) ninvoice refund \\( invoice adjustments refundpriority invoice refundorderpriority credit \\) language xml code invoice n line items n adjustment n uuid 2bc33a7469dc1458f455634212acdcd6 uuid n quantity 1 quantity n prorate false prorate n adjustment n adjustment n uuid 2bc33a746a89d867df47024fd6b261b6 uuid n quantity 1 quantity n prorate true prorate n adjustment n line items n refund apply order credit refund apply order n invoice method post results codes name code invoice href https subdomain recurly com v2 invoices 1010 n account href https subdomain recurly com v2 accounts 1 n uuid 2bc3cf4cbe357b7525eac5424292b445 uuid n state collected state n invoice number type integer 1010 invoice number n po number nil nil n vat number nil nil n subtotal cents type integer 9771 subtotal cents n tax cents type integer 0 tax cents n total cents type integer 9771 total cents n currency gbp currency n created type datetime 2014 12 16t21 32 16z created n closed type datetime 2014 12 16t21 32 16z closed n terms conditions nil nil n customer notes nil nil n net terms type integer 0 net terms n collection method automatic collection method n line items type array n adjustment href https subdomain recurly com v2 adjustments 2bc3cf4cb513049c6aec1b419c97b508 type charge n account href https subdomain recurly com v2 accounts 1 n invoice href https subdomain recurly com v2 invoices 1010 n uuid 2bc3cf4cb513049c6aec1b419c97b508 uuid n state invoiced state n description refund setup fee ip addresses description n accounting code nil nil n product code ipaddresses product code n origin setup fee origin n unit amount cents type integer 900 unit amount cents n quantity type integer 1 quantity n quantity remaining type integer 0 quantity remaining n discount cents type integer 0 discount cents n tax cents type integer 0 tax cents n total cents type integer 900 total cents n currency gbp currency n taxable type boolean false taxable n tax exempt type boolean false tax exempt n tax code nil nil n start date type datetime 2014 12 16t18 49 41z start date n end date nil nil n created type datetime 2014 12 16t21 32 16z created n adjustment n adjustment href https subdomain recurly com v2 adjustments 2bc3cf4cb615aea5540bb54d4c9fc814 type charge n account href https subdomain recurly com v2 accounts 1 n invoice href https subdomain recurly com v2 invoices 1010 n uuid 2bc3cf4cb615aea5540bb54d4c9fc814 uuid n state invoiced state n description refund ip addresses description n accounting code nil nil n product code ipaddresses product code n origin plan origin n unit amount cents type integer 8871 unit amount cents n quantity type integer 1 quantity n quantity remaining type integer 0 quantity remaining n discount cents type integer 0 discount cents n tax cents type integer 0 tax cents n total cents type integer 8871 total cents n currency gbp currency n taxable type boolean false taxable n tax exempt type boolean false tax exempt n tax code nil nil n start date type datetime 2014 12 16t21 32 16z start date n end date type datetime 2015 01 16t18 49 41z end date n created type datetime 2014 12 16t21 32 16z created n adjustment n line items n transactions type array n omitted n transactions n invoice language xml status 201 settings auth required params desc invoice number default type string name invoice number id 578d09d584f5cd0e008917ad ref path required true id 578d2e7af5ffc72900cf809e ref body required true desc adjustment 's unique identifier default type string name uuid id 578d2e7af5ffc72900cf809d ref body required true desc quantity refund must less equal `quantity remaining` default type int name quantity name prorate id 578d2e7af5ffc72900cf809c ref body required false desc toggle prorate line item refund set `true` `false` applicable subscription line items still current billing cycle proration allowed invoices associated transaction settled due full amount needed order void transaction default type boolean ref body required false desc credit line items exist invoice parameter specifies refund method use first relevant partial refunds chose refund credit back account first transaction giving money back customer first specified default credit back account set `credit` `transaction` default type string name refund apply order id 578d2e7af5ffc72900cf809b category 5919d93885b2570f00e41c46 createdat 2015 06 18t17 20 32 509z isreference true link url parentdoc null user 5581f6648625220d00429ef6 version 5919d93785b2570f00e41c39 excerpt allows specific invoice line items quantities refunded generates refund invoice full amount line item refunds invoices unsettled transaction void transaction generate void invoice link external false next pages description sync unique title refund void line items updates 55b66ee1f8105a2f00c34f37 order 9 type post body block callout n n type warning n body invoice processed line item refund cannot accept refunds open amount n nthis endpoint void ach bank account transaction ach voids allowed ui n n block githubsync hidden false project 555fbba928249c1900618a82 slug line item refunds childrenpages postrefund void line itemsallows specific invoice line items quantities refunded generates refund invoice full amount line item refunds invoices unsettled transaction void transaction generate void invoice path paramsinvoice number requiredstringinvoice numberbody paramsuuid requiredstringadjustment 's unique identifier quantity requiredintegerquantity refund must less equal `quantity remaining` prorate booleantoggle prorate line item refund set `true` `false` applicable subscription line items still current billing cycle proration allowed invoices associated transaction settled due full amount needed order void transaction refund apply order stringif credit line items exist invoice parameter specifies refund method use first relevant partial refunds chose refund credit back account first transaction giving money back customer first specified default credit back account set `credit` `transaction` invoice processed line item refund cannot accept refunds open amount endpoint void ach bank account transaction ach voids allowed ui edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format201 created id 5919d94185b2570f00e41cc7 sync unique createdat 2015 06 18t17 31 15 021z githubsync order 10 project 555fbba928249c1900618a82 slug open amount refunds category 5919d93885b2570f00e41c46 isreference true title refund void open amount updates body block callout n n type warning n body invoice processed open amount refund cannot accept line item \\( v2 0 docs line item refunds \\) refunds n nthis endpoint void ach bank account transaction ach voids allowed ui n n block api examples codes language php code \\? php n ntry n invoice recurly invoice get \\( '1346' \\) n refund invoice invoice refundamount \\( 1000 'transaction' \\) refund cents returns recurly invoice n refund invoice amount cents 1000 n n print refund invoice refund invoice n catch \\( recurly validationerror e \\) n data invalid invoice could refunded n print invoice could refunded e n catch \\( recurly notfounderror e \\) n print invoice found e n name language ruby code invoice invoice find \\( 1005 \\) ninvoice refund amount 10 00 'credit' code invoice invoice get \\( '1001' \\) nrefund invoice invoice refund amount \\( 1000 'credit' \\) language python language csharp code var invoice invoices get \\( 1005 \\) nvar refundinvoice invoice refundamount \\( 1000 invoice refundorderpriority credit \\) language xml code invoice n amount cents 1000 amount cents n refund apply order credit refund apply order n invoice method post results codes name status 201 language xml code invoice href https subdomain recurly com v2 invoices 1009 n account href https subdomain recurly com v2 accounts 1 n address n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n address n subscription href https subdomain recurly com v2 subscriptions 37c0057cb105f67b6b8a1146f7b59c41 n original invoice href https subdomain recurly com v2 invoices 1007 n uuid 37c03af6eaf22e183d07a04d13b8b5f5 uuid n state collected state n invoice number prefix n invoice number type integer 1009 invoice number n po number nil nil n vat number n subtotal cents type integer 920 subtotal cents n tax cents type integer 80 tax cents n total cents type integer 1000 total cents n currency eur currency n created type datetime 2016 08 03t17 24 51z created n updated type datetime 2016 08 03t17 24 51z updated n closed type datetime 2016 08 03t17 24 51z closed n terms conditions nil nil n customer notes nil nil n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n net terms type integer 0 net terms n collection method automatic collection method n amount remaining cents type integer 4274 amount remaining cents n line items type array n adjustment href https subdomain recurly com v2 adjustments 37c03af6e009c992a7182a46d7b56fa9 type charge n account href https subdomain recurly com v2 accounts 1 n invoice href https subdomain recurly com v2 invoices 1009 n subscription href https subdomain recurly com v2 subscriptions 37c0057cb105f67b6b8a1146f7b59c41 n uuid 37c03af6e009c992a7182a46d7b56fa9 uuid n state invoiced state n description refund invoice 1007 description n accounting code nil nil n product code nil nil n origin debit origin n unit amount cents type integer 920 unit amount cents n quantity type integer 1 quantity n quantity remaining type integer 0 quantity remaining n discount cents type integer 0 discount cents n tax cents type integer 80 tax cents n total cents type integer 1000 total cents n currency eur currency n taxable type boolean false taxable n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n tax exempt type boolean false tax exempt n tax code nil nil n start date type datetime 2016 08 03t16 26 26z start date n end date nil nil n created type datetime 2016 08 03t17 24 51z created n updated type datetime 2016 08 03t17 24 51z updated n revenue schedule type n adjustment n line items n transactions type array n transaction href https subdomain recurly com v2 transactions 37c03af7408938959a3507403ba81f9a type credit card n account href https subdomain recurly com v2 accounts 1 n invoice href https subdomain recurly com v2 invoices 1009 n subscription href https subdomain recurly com v2 subscriptions 37c0057cb105f67b6b8a1146f7b59c41 n original transaction href https subdomain recurly com v2 transactions 37c0057d602b0e1d873d85442187730c n uuid 37c03af7408938959a3507403ba81f9a uuid n action refund action n amount cents type integer 1000 amount cents n tax cents type integer 80 tax cents n currency eur currency n status success status n payment method credit card payment method n reference 8836127 reference n source subscription source n recurring type boolean false recurring n test type boolean true test n voidable type boolean true voidable n refundable type boolean false refundable n ip address nil nil n cvv result code nil nil n avs result code street address postal code match avs result n avs result street nil nil n avs result postal nil nil n created type datetime 2016 08 03t17 24 51z created n updated type datetime 2016 08 03t17 24 51z updated n details n account n account code 1 account code n first name verena first name n last name example last name n company recurly inc company n email verena example com email n billing info type credit card n first name verena first name n last name example last name n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n vat number nil nil n card type visa card type n year type integer 2019 year n month type integer 12 month n first six 411111 first six n last four 1111 last four n billing info n account n details n name refund href https subdomain recurly com v2 transactions 37c03af7408938959a3507403ba81f9a method delete n transaction n transactions n invoice settings auth required params ref body required false desc specific amount refunded original invoice left empty remaining refundable amount refunded default type int name amount cents id 55c8c72071d7580d0063a5c8 body required false desc credit line items exist invoice parameter specifies refund method use first relevant partial refunds chose refund credit back account first transaction giving money back customer first set `credit` `transaction` default credit type string name refund apply order id 55c8c72071d7580d0063a5c7 ref required true desc invoice number default type string name invoice number id 578d09fb9a98a41900717d66 ref path url invoices invoice number refund excerpt allows custom invoice amounts refunded generates refund invoice full open amount refunds invoices unsettled transaction void transaction generate void invoice hidden false link external false link url next pages description parentdoc null v 0 user 5581f6648625220d00429ef6 version 5919d93785b2570f00e41c39 type post childrenpages postrefund void open amountallows custom invoice amounts refunded generates refund invoice full open amount refunds invoices unsettled transaction void transaction generate void invoice path paramsinvoice number requiredstringinvoice numberbody paramsamount cents integerthe specific amount refunded original invoice left empty remaining refundable amount refunded refund apply order stringcreditif credit line items exist invoice parameter specifies refund method use first relevant partial refunds chose refund credit back account first transaction giving money back customer first set `credit` `transaction` invoice processed open amount refund cannot accept line item refunds endpoint void ach bank account transaction ach voids allowed ui edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format201 created id 5919d94185b2570f00e41cc8 body createdat 2015 06 18t18 24 39 853z excerpt allows enter offline payment manual invoice check money order link external false next description pages sync unique type post category 5919d93885b2570f00e41c46 githubsync link url order 11 parentdoc null project 555fbba928249c1900618a82 version 5919d93785b2570f00e41c39 v 0 isreference true slug enter offline payment manual invoice updates user 5581f6648625220d00429ef6 api results codes code transaction href https subdomain recurly com v2 transactions 37c03711f2438c1961050b46d8a05bbb n account href https subdomain recurly com v2 accounts 1 n invoice href https subdomain recurly com v2 invoices 1008 n uuid 37c03711f2438c1961050b46d8a05bbb uuid n action purchase action n amount cents type integer 1000 amount cents n tax cents type integer 0 tax cents n currency usd currency n status success status n payment method check payment method n reference nil nil n source transaction source n recurring type boolean false recurring n test type boolean true test n voidable type boolean true voidable n refundable type boolean true refundable n ip address nil nil n created type datetime 2016 08 03t17 20 35z created n updated type datetime 2016 08 03t17 20 35z updated n details n account n account code 1 account code n first name verena first name n last name example last name n company new company name company n email verena example com email n billing info n first name verena first name n last name example last name n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n vat number nil nil n billing info n account n details n name refund href https subdomain recurly com v2 transactions 37c03711f2438c1961050b46d8a05bbb method delete n transaction language xml status 201 name settings auth required params body required true desc method payment `credit card` `paypal` `amazon` `roku` `ach` `apple pay` `eft` `wire transfer` `money order` `check` `other` default type string name payment method id 55c547c77136a60d002aa88f ref desc date payment collected default type datetime name collected id 55c547c77136a60d002aa88e ref body required false name amount cents id 55c547c77136a60d002aa88d ref body required false desc amount paid cents default type int type string name description id 55c547c77136a60d002aa88c ref body required false desc note manual payment max 50 characters default required true desc invoice number default type string name invoice number id 578d0a0c50db502900acccfb ref path url invoices invoice number transactions examples codes name language xml code transaction n payment method check payment method n collected 2016 08 03t11 10 36 06 00 collected n amount cents 1000 amount cents n description paid check description n transaction code invoice recurly invoice find \\( '1001' \\) ninvoice enter offline payment \\( n payment method 'check' n amount cents 1000 n description 'paid check' n collected time utc \\( 2015 04 25 \\) n \\) language ruby method post hidden false title enter offline payment manual invoice childrenpages postenter offline payment manual invoiceallows enter offline payment manual invoice check money order path paramsinvoice number requiredstringinvoice numberbody paramspayment method requiredstringthe method payment `credit card` `paypal` `amazon` `roku` `ach` `apple pay` `eft` `wire transfer` `money order` `check` `other` collected datetimedate payment collected amount cents integerthe amount paid cents description stringnote manual payment max 50 characters edit pagesuggest editsdefinition api url page api url examplesxmlrubyresult format201 created id 5919d94185b2570f00e41cc9 parentdoc null project 555fbba928249c1900618a82 v 0 createdat 2016 12 22t20 00 10 657z isreference true link url category 5919d93885b2570f00e41c46 githubsync hidden false link external false slug collect invoice updates 58c2f63e142bb22d0069e72b user 56c3c01334df460d00c2beb3 excerpt allows collect past due pending invoice api rate limited one collection attempt per account allowed within hour api available api version 2 5 higher next pages description order 12 title collect invoice type put api examples codes code https sample subdomain recurly com v2 invoices 1000 collect language http method put results codes name code success shows invoice xml n invoice href https subdomain recurly com v2 invoices 1000 n account href https subdomain recurly com v2 accounts 1 n address n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n address n uuid 374a37924f83c733b9c9814e9580496a uuid n state open state n invoice number prefix n invoice number type integer 1000 invoice number n po number nil nil n vat number nil nil n subtotal cents type integer 5000 subtotal cents n tax cents type integer 438 tax cents n total cents type integer 5438 total cents n currency usd currency n created type datetime 2016 07 11t19 25 57z created n updated type datetime 2016 07 11t19 25 57z updated n closed nil nil n terms conditions nil nil n customer notes nil nil n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n net terms type integer 0 net terms n collection method automatic collection method n line items type array n adjustment href https subdomain recurly com v2 adjustments 374a2729397882fafbc82041a0a4dd0d type charge n detail n adjustment n line items n transactions type array n transactions n name mark successful href https subdomain recurly com v2 invoices 1000 mark successful method put n name mark failed href https subdomain recurly com v2 invoices 1000 mark failed method put n invoice language xml status 200 status 400 name rate limit failure code rate limit hit n error n symbol many collection attempts symbol n description one force collection available per hour per invoice description n error language xml code invoice closed collected n error n symbol unable collect symbol n description pending past due invoices collected description n error n language xml status 400 name invoice correct state settings auth required params desc invoice number collect default type string name invoice number id 585c330d02f0601900b20da2 ref path required true url invoices invoice number collect body sync unique version 5919d93785b2570f00e41c39 childrenpages putcollect invoiceallows collect past due pending invoice api rate limited one collection attempt per account allowed within hour api available api version 2 5 higher path paramsinvoice number requiredstringinvoice number collect edit pagesuggest editsdefinition api url page api url exampleshttpresult format200 ok400 rate limit failure400 invoice correct state id 5919d93a85b2570f00e41c64 body block callout n n type info n body client library automatically fetch next page results may slight delay fetching next page n n block githubsync parentdoc null type get v 0 category 5919d93885b2570f00e41c47 slug list plans sync unique title list plans order 0 updates user 5581f6648625220d00429ef6 createdat 2015 06 18t18 37 42 850z excerpt lists active subscription plans hidden false isreference true version 5919d93785b2570f00e41c39 api settings url plans auth required examples codes language php code \\? php n n plans recurly planlist get \\( \\) nforeach \\( plans plan \\) n print plan plan n n name language ruby code recurly plan find plan n puts plan plan inspect nend language python code client version 2 1 6 nfor plan plan \\( \\) n print 'plan s' plan n n client version 2 1 5 nplans plan \\( \\) nwhile plans n plan plans n print 'plan s' plan n try n plans plans next page \\( \\) n except pageerror n plans \\( \\) language csharp code using system linq n nvar plans plans list \\( \\) nwhile \\( plans \\( \\) \\) n n tforeach \\( var plan plans \\) n tconsole writeline \\( plan plan \\) n tplans plans next n method get params id 578eac007d6eeb0e004fb859 ref query required false desc attribute used order records `created at` `updated at` default created type string name sort id 578eac007d6eeb0e004fb858 ref query required false desc order products returned `asc` ascending order `desc` descending order default desc type string name order id 578eac007d6eeb0e004fb857 ref query required false desc operates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time default type datetime name begin time name end time id 578eac007d6eeb0e004fb856 ref query required false desc operates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time default type datetime ref query required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page default type string name cursor id 55830ff6b806360d0024496c default 50 type int name per page id 55830ff6b806360d0024496b ref query required false desc number records return per page maximum 200 results codes language xml status 200 name code plans type array n plan href https subdomain recurly com v2 plans platinum n add ons href https subdomain recurly com v2 plans platinum add ons n plan code platinum plan code n name platinum plan name n description nil nil n success url nil nil n cancel url nil nil n display donation amounts type boolean false display donation amounts n display quantity type boolean false display quantity n display phone number type boolean false display phone number n bypass hosted confirmation type boolean false bypass hosted confirmation n unit name unit unit name n payment page tos link nil nil n plan interval length type integer 1 plan interval length n plan interval unit months plan interval unit n trial interval length type integer 0 trial interval length n trial interval unit days trial interval unit n total billing cycles nil nil n accounting code nil nil n setup fee accounting code nil nil n created type datetime 2016 08 02t16 48 34z created n updated type datetime 2016 08 02t16 48 34z updated n revenue schedule type range end revenue schedule type n setup fee revenue schedule type range start setup fee revenue schedule type n tax exempt type boolean false tax exempt n tax code nil nil n trial requires billing info type boolean true trial requires billing info n unit amount cents n eur type integer 45000 eur n usd type integer 60000 usd n unit amount cents n setup fee cents n eur type integer 800 eur n usd type integer 1000 usd n setup fee cents n plan n continued n plans link external false link url next pages description project 555fbba928249c1900618a82 childrenpages getlist planslists active subscription plans query paramssort stringcreated atthe attribute used order records `created at` `updated at` order stringdescthe order products returned `asc` ascending order `desc` descending order begin time datetimeoperates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time end time datetimeoperates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time cursor stringsplits records across pages leave blank return first page follow uri first page 's link header fetch next page per page integer50number records return per page maximum 200 client library automatically fetch next page results may slight delay fetching next page edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d93a85b2570f00e41c65 updates api results codes status 201 language xml code plan href https subdomain recurly com v2 plans gold n add ons href https subdomain recurly com v2 plans gold add ons n plan code gold plan code n name gold plan name n description nil nil n success url nil nil n cancel url nil nil n display donation amounts type boolean false display donation amounts n display quantity type boolean false display quantity n display phone number type boolean false display phone number n bypass hosted confirmation type boolean false bypass hosted confirmation n unit name unit unit name n payment page tos link nil nil n plan interval length type integer 1 plan interval length n plan interval unit months plan interval unit n trial interval length type integer 0 trial interval length n trial interval unit days trial interval unit n total billing cycles nil nil n accounting code nil nil n setup fee accounting code nil nil n created type datetime 2016 08 03t15 22 50z created n updated type datetime 2016 08 03t15 22 50z updated n revenue schedule type evenly revenue schedule type n setup fee revenue schedule type evenly setup fee revenue schedule type n tax exempt type boolean false tax exempt n tax code nil nil n trial requires billing info type boolean true trial requires billing info n unit amount cents n usd type integer 6000 usd n eur type integer 4500 eur n unit amount cents n setup fee cents n usd type integer 1000 usd n eur type integer 800 eur n setup fee cents n plan name settings url plans auth required examples codes language php code \\? php n ntry n plan new recurly plan \\( \\) n plan plan code 'gold' n plan name gold plan n plan unit amount cents addcurrency \\( 'usd' 1000 \\) usd 10 00 month n plan unit amount cents addcurrency \\( 'eur' 800 \\) eur 8 00 month n plan setup fee cents addcurrency \\( 'usd' 6000 \\) usd 60 00 setup fee n plan setup fee cents addcurrency \\( 'eur' 4500 \\) eur 45 00 setup fee n plan plan interval length 1 n plan plan interval unit 'months' n plan tax exempt false n plan create \\( \\) n n print plan plan n catch \\( recurly validationerror e \\) n print invalid data e n name language ruby code plan recurly plan create \\( n plan code 'gold' n name 'gold plan' n unit amount cents 'usd' 10 00 'eur' 8 00 n setup fee cents 'usd' 60 00 'eur' 45 00 n plan interval length 1 n plan interval unit 'months' n tax exempt false n \\) language python code plan plan \\( plan code 'gold' name 'gold plan' \\) nplan unit amount cents money \\( usd 1000 eur 800 \\) nplan setup fee cents money \\( usd 6000 eur 4500 \\) nplan plan interval length 1 nplan plan interval unit 'months' nplan tax exempt false nplan save \\( \\) language csharp code var plan new plan \\( gold gold plan \\) plan code name nplan unitamountincents add \\( usd 1000 \\) nplan unitamountincents add \\( eur 800 \\) nplan setupfeeincents add \\( usd 6000 \\) nplan setupfeeincents add \\( eur 4500 \\) nplan planintervallength 1 nplan planintervalunit plan intervalunit month nplan taxexempt false nplan create \\( \\) language xml code plan n plan code gold plan code n name gold plan name n unit amount cents n usd 6000 usd n eur 4500 eur n unit amount cents n setup fee cents n usd 1000 usd n eur 800 eur n setup fee cents n plan interval length 1 plan interval length n plan interval unit months plan interval unit n tax exempt false tax exempt n plan method post params id 55831249ea39a9390022435b ref body required true desc unique code identify plan code may contain following characters z 0 9 max 50 characters default type string name plan code name name id 55831249ea39a9390022435a ref body required true desc plan name max 255 characters default type string type array object name unit amount cents id 55831249ea39a93900224352 ref body required true desc array currency objects see example max 10000000 default desc optional plan description displayed default type string name description id 55831249ea39a93900224359 ref body required false name plan interval unit id 55831249ea39a93900224357 ref body required false desc `days` `months` defaults `months` default months type string ref body required false desc plan interval length defaults `1` default 1 type int name plan interval length id 55831249ea39a93900224356 default months type string name trial interval unit id 55831249ea39a93900224355 ref body required false desc `days` `months` defaults `months` default 0 type int name trial interval length id 55831249ea39a93900224354 ref body required false desc defaults `0` trial default type boolean name trial requires billing info id 591b3c8f8b2ada0f00cfe2a8 ref body required false desc allow free trial subscriptions created without billing info used billing info needed initial invoice due existing uninvoiced charges setup fee default type string name success url id 55831249ea39a9390022434e ref body required false desc url redirect signup hosted payment pages body required false desc accounting code related invoice line items code may contain following characters z 0 9 max 20 characters default type string name accounting code id 55831249ea39a93900224358 ref required false desc optional field setting revenue schedule type determine revenue associated plan recognized creating plan available schedule types `never` `evenly` `at range start` `at range end` default evenly type string name revenue schedule type id 578f77781e9a940e003851ca ref body ref body required false desc accounting code setup fee code may contain following characters z 0 9 max 20 characters default type string name setup fee accounting code id 55d7617bf662951900fc0e76 body required false desc optional field setting revenue schedule type determine revenue associated plan setup fee recognized creating plan setup fee available schedule types `never` `evenly` `at range start` `at range end` default evenly type string name setup fee revenue schedule type id 578f77781e9a940e003851c9 ref desc array currency objects see examples max 10000000 default type array object name setup fee cents id 55831249ea39a93900224353 ref body required false id 55831249ea39a93900224351 ref body required false desc number billing cycles plan stops renewing defaults `null` continuous auto renewal default type string name total billing cycles name unit name id 55831249ea39a93900224350 ref body required false desc deprecated unit description quantity e g `users` default type string ref body required false desc display quantity field hosted payment page `true` defaults `false` default false type boolean name display quantity id 55831249ea39a9390022434f default type string name cancel url id 55831249ea39a9390022434d ref body required false desc deprecated url redirect canceled signup hosted payment pages default type boolean name tax exempt id 55831249ea39a9390022434c ref body required false desc `true` exempts tax plan `false` applies tax plan defined defaults plan site settings body required false desc optional field eu vat merchants avalara avatax pro merchants using recurly 's eu vat feature use values `unknown` `physical` `digital` avatax account configured use avalara tax codes assign custom tax rules default type string name tax code id 55831249ea39a9390022434b ref body category 5919d93885b2570f00e41c47 isreference true order 1 project 555fbba928249c1900618a82 slug create plan title create plan createdat 2015 06 18t18 47 37 527z hidden false link external false next pages description parentdoc null v 2 link url version 5919d93785b2570f00e41c39 excerpt create new subscription plan githubsync sync unique type post user 5581f6648625220d00429ef6 childrenpages postcreate plancreate new subscription plan body paramsplan code requiredstringunique code identify plan code may contain following characters z 0 9 max 50 characters name requiredstringplan name max 255 characters unit amount cents requiredarray objectsarray currency objects see example max 10000000 description stringoptional plan description displayed plan interval unit stringmonths`days` `months` defaults `months` plan interval length integer1plan interval length defaults `1`trial interval unit stringmonths`days` `months` defaults `months` trial interval length integer0defaults `0` trialtrial requires billing info booleanallow free trial subscriptions created without billing info used billing info needed initial invoice due existing uninvoiced charges setup fee success url stringurl redirect signup hosted payment pages accounting code stringaccounting code related invoice line items code may contain following characters z 0 9 max 20 characters revenue schedule type stringevenlyoptional field setting revenue schedule type determine revenue associated plan recognized creating plan available schedule types `never` `evenly` `at range start` `at range end` setup fee accounting code stringaccounting code setup fee code may contain following characters z 0 9 max 20 characters setup fee revenue schedule type stringevenlyoptional field setting revenue schedule type determine revenue associated plan setup fee recognized creating plan setup fee available schedule types `never` `evenly` `at range start` `at range end` setup fee cents array objectsarray currency objects see examples max 10000000 total billing cycles stringnumber billing cycles plan stops renewing defaults `null` continuous auto renewal unit name string deprecated unit description quantity e g `users` display quantity booleanfalsedisplay quantity field hosted payment page `true` defaults `false` cancel url string deprecated url redirect canceled signup hosted payment pages tax exempt boolean`true` exempts tax plan `false` applies tax plan defined defaults plan site settings tax code stringoptional field eu vat merchants avalara avatax pro merchants using recurly 's eu vat feature use values `unknown` `physical` `digital` avatax account configured use avalara tax codes assign custom tax rules edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format201 created id 5919d93a85b2570f00e41c66 version 5919d93785b2570f00e41c39 api method get params required true desc unique code identify plan default type string name plan code id 578d0a18f5ffc72900cf800e ref path results codes name status 200 language xml code plan href https subdomain recurly com v2 plans gold n add ons href https subdomain recurly com v2 plans gold add ons n plan code gold plan code n name gold plan name n description nil nil n success url nil nil n cancel url nil nil n display donation amounts type boolean false display donation amounts n display quantity type boolean false display quantity n display phone number type boolean false display phone number n bypass hosted confirmation type boolean false bypass hosted confirmation n unit name unit unit name n payment page tos link nil nil n plan interval length type integer 1 plan interval length n plan interval unit months plan interval unit n trial interval length type integer 0 trial interval length n trial interval unit days trial interval unit n total billing cycles nil nil n accounting code nil nil n setup fee accounting code nil nil n created type datetime 2016 08 02t16 48 10z created n updated type datetime 2016 08 02t16 48 10z updated n revenue schedule type evenly revenue schedule type n setup fee revenue schedule type evenly setup fee revenue schedule type n tax exempt type boolean false tax exempt n tax code nil nil n trial requires billing info type boolean true trial requires billing info n unit amount cents n eur type integer 4500 eur n usd type integer 6000 usd n unit amount cents n setup fee cents n eur type integer 800 eur n usd type integer 1000 usd n setup fee cents n plan settings url plans plan code auth required examples codes name language php code \\? php n ntry n plan recurly plan get \\( 'gold' \\) n print plan plan n catch \\( recurly notfounderror e \\) n print plan found n language ruby code plan recurly plan find \\( 'gold' \\) language python code plan plan get \\( 'gold' \\) language csharp code var plan plans get \\( gold \\) hidden false parentdoc null project 555fbba928249c1900618a82 title lookup plan type get v 0 excerpt lookup plan 's details order 2 body category 5919d93885b2570f00e41c47 isreference true updates sync unique user 5581f6648625220d00429ef6 createdat 2015 06 18t18 41 50 557z githubsync link external false link url next pages description slug lookup plan details childrenpages getlookup planlookup plan 's details path paramsplan code requiredstringunique code identify plan edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d93a85b2570f00e41c67 next pages description order 3 updates createdat 2015 06 18t18 50 40 401z isreference true api results codes status 200 language xml code plan href https subdomain recurly com v2 plans gold n add ons href https subdomain recurly com v2 plans gold add ons n plan code gold plan code n name gold plan name n description nil nil n success url nil nil n cancel url nil nil n display donation amounts type boolean false display donation amounts n display quantity type boolean false display quantity n display phone number type boolean false display phone number n bypass hosted confirmation type boolean false bypass hosted confirmation n unit name unit unit name n payment page tos link nil nil n plan interval length type integer 1 plan interval length n plan interval unit months plan interval unit n trial interval length type integer 0 trial interval length n trial interval unit days trial interval unit n total billing cycles nil nil n accounting code nil nil n setup fee accounting code nil nil n created type datetime 2016 08 02t16 48 10z created n updated type datetime 2016 08 02t16 48 10z updated n revenue schedule type evenly revenue schedule type n setup fee revenue schedule type evenly setup fee revenue schedule type n tax exempt type boolean false tax exempt n tax code nil nil n trial requires billing info type boolean true trial requires billing info n unit amount cents n eur type integer 4500 eur n usd type integer 6000 usd n unit amount cents n setup fee cents n eur type integer 5000 eur n usd type integer 6000 usd n setup fee cents n plan name settings url plans plan code auth required examples codes language php code \\? php n ntry n plan recurly plan get \\( 'gold' \\) n plan unit amount cents 'eur' 5000 eur 50 00 monthly fee n plan setup fee cents 'eur' 5000 eur 50 00 setup fee n plan update \\( \\) n n print plan plan n catch \\( recurly validationerror e \\) n print invalid data e n catch \\( recurly notfounderror e \\) n print plan found e n name code plan recurly plan find \\( 'gold' \\) nplan setup fee cents 'eur' 50 00 nplan save language ruby language python code plan plan get \\( 'gold' \\) nplan setup fee cents 'eur' 5000 nplan save \\( \\) language csharp code var plan plans get \\( gold \\) nplan setupfeeincents eur 5000 nplan update \\( \\) language xml code plan n setup fee cents n usd 6000 usd n eur 5000 eur n setup fee cents n plan method put params desc unique code identify plan default type string name plan code id 578d0a3684f5cd0e008917b0 ref path required true excerpt update pricing details plan existing subscriptions remain previous renewal amounts body category 5919d93885b2570f00e41c47 githubsync link external false parentdoc null project 555fbba928249c1900618a82 v 0 type put version 5919d93785b2570f00e41c39 slug update plan title update plan sync unique user 5581f6648625220d00429ef6 hidden false link url childrenpages putupdate planupdate pricing details plan existing subscriptions remain previous renewal amounts path paramsplan code requiredstringunique code identify plan edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format200 ok id 5919d93a85b2570f00e41c68 category 5919d93885b2570f00e41c47 excerpt deleting plan makes inactive new subscriptions cannot created plan githubsync isreference true slug delete plan type delete body link external false order 4 project 555fbba928249c1900618a82 title delete plan version 5919d93785b2570f00e41c39 createdat 2015 06 18t18 52 18 177z api method delete results codes code status 204 content status 204 language xml settings auth required params desc unique code identify plan default type string name plan code id 578d0a41d9c55c2000d4f1f7 ref path required true url plans plan code examples codes name code \\? php n ntry n plan recurly plan get \\( 'gold' \\) n plan delete \\( \\) n n print plan plan n catch \\( recurly notfounderror e \\) n print plan found e n language php language ruby code plan recurly plan find \\( 'gold' \\) nplan destroy code plan plan get \\( 'gold' \\) nplan delete \\( \\) language python code var plan plans get \\( gold \\) nplan deactivate \\( \\) language csharp hidden false sync unique user 5581f6648625220d00429ef6 link url next pages description parentdoc null updates v 0 childrenpages deletedelete plandeleting plan makes inactive new subscriptions cannot created plan path paramsplan code requiredstringunique code identify plan edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format204 content id 5919d94185b2570f00e41cca githubsync order 0 parentdoc null version 5919d93785b2570f00e41c39 slug plan add ons object body createdat 2016 04 30t02 20 11 931z hidden false link external false user 55b66dba6127b1250036446f v 0 api url plans plan code add ons examples codes method get results codes status 200 name code add ons type array n add href https subdomain recurly com v2 plans gold add ons video streaming n plan href https subdomain recurly com v2 plans gold n measured unit href https subdomain recurly com v2 measured units 12345678901234567890 n add code video streaming add code n name video streaming name n default quantity type integer 1 default quantity n display quantity hosted page type boolean false display quantity hosted page n tax code nil nil n unit amount cents n eur type integer 45 eur n usd type integer 50 usd n unit amount cents n accounting code nil nil n add type usage add type n optional type boolean true optional n usage type price usage type n usage percentage nil nil n revenue schedule type evenly revenue schedule type n created type datetime 2016 08 03t15 25 09z created n updated type datetime 2016 08 03t15 25 09z updated n add n add href https subdomain recurly com v2 plans gold add ons ipaddresses n plan href https subdomain recurly com v2 plans gold n add code ipaddresses add code n name extra ip addresses name n default quantity type integer 1 default quantity n display quantity hosted page type boolean false display quantity hosted page n tax code nil nil n unit amount cents n eur type integer 360 eur n usd type integer 400 usd n unit amount cents n accounting code nil nil n add type fixed add type n optional type boolean true optional n revenue schedule type range start revenue schedule type n created type datetime 2016 08 03t15 23 41z created n updated type datetime 2016 08 03t15 27 09z updated n add n add ons language xml settings auth required params type string name plan code id 578d0a4c84f5cd0e008917b2 ref path required true desc unique code identify plan default desc url plan add default type string name plan id 57242ce72ad0bc17001227ab ref body required false id 57242ce72ad0bc17001227aa ref body required false desc add usage based url measured unit associated add default type string name measured unit name add code id 57242ce72ad0bc17001227a9 ref body required false desc add code max 50 characters default type string type string name name id 57242ce72ad0bc17001227a8 ref body required false desc add name max 255 characters default desc default quantity hosted pages defaults 1 default 1 type int name default quantity id 57242ce72ad0bc17001227a7 ref body required false id 57242ce72ad0bc17001227a6 ref body required false desc true displays quantity field hosted pages add default false type boolean name display quantity hosted page id 57242ce72ad0bc17001227a5 ref body required false desc optional field eu vat merchants avalara avatax pro merchants using recurly 's eu vat feature use values 'unknown' 'physical' 'digital' avatax account configured use avalara 's tax codes assign custom tax rules default type string name tax code id 57242ce72ad0bc17001227a4 ref body required false desc array unit amounts currency code max 10000000 ex 5 00 usd would usd 500 usd default type array object name unit amount cents id 57242ce72ad0bc17001227a3 ref body required false desc accounting code invoice line items add max 20 characters default type string name accounting code id 57242ce72ad0bc17001227a2 ref body required false desc whether add fixed price \\( `fixed` \\) usage based \\( `usage` \\) default fixed type string name add type name optional id 57242ce72ad0bc17001227a1 ref body required false desc whether add optional customer include purchase hosted payment page default true type boolean ref body required false desc `add type` `usage` see `usage type` `price` `percentage` `price` price defined `unit amount cents` `percentage` percentage defined `usage percentage` default type string name usage type id 57242ce72ad0bc17001227a0 body required false desc `add type` `usage` see `usage percentage` value `usage type` `percentage` must 0 0000 100 0000 default type string name usage percentage id 57242ce72ad0bc170012279f ref desc optional field setting revenue schedule type determine revenue associated plan recognized creating plan supply `end date` `end date` available schedule types `never` `evenly` `at range start` `at range end` default evenly type string name revenue schedule type id 57a20ea1afc3050e000cf3c4 ref body required false name created id 57242ce72ad0bc170012279e ref body required false desc add created plan default type datetime type datetime name updated id 57a20e7ccd51b22d00f62376 ref body required false desc add last updated default excerpt plan add ons additional products plan recur add ons fixed priced charged upfront usage based usage measured billed arrears add ons optional required plan type get updates sync unique title plan add object category 5919d93885b2570f00e41c48 isreference true link url next pages description project 555fbba928249c1900618a82 childrenpages getplan add objectplan add ons additional products plan recur add ons fixed priced charged upfront usage based usage measured billed arrears add ons optional required plan path paramsplan code requiredstringunique code identify plan body paramsplan stringthe url plan add measured unit stringif add usage based url measured unit associated add add code stringthe add code max 50 characters name stringthe add name max 255 characters default quantity integer1default quantity hosted pages defaults 1 display quantity hosted page booleanfalseif true displays quantity field hosted pages add tax code stringoptional field eu vat merchants avalara avatax pro merchants using recurly 's eu vat feature use values 'unknown' 'physical' 'digital' avatax account configured use avalara 's tax codes assign custom tax rules unit amount cents array objectsarray unit amounts currency code max 10000000 ex 5 00 usd would usd 500 usd accounting code stringaccounting code invoice line items add max 20 characters add type stringfixedwhether add fixed price \\( `fixed` \\) usage based \\( `usage` \\) optional booleantruewhether add optional customer include purchase hosted payment page usage type stringif `add type` `usage` see `usage type` `price` `percentage` `price` price defined `unit amount cents` `percentage` percentage defined `usage percentage` usage percentage stringif `add type` `usage` see `usage percentage` value `usage type` `percentage` must 0 0000 100 0000 revenue schedule type stringevenlyoptional field setting revenue schedule type determine revenue associated plan recognized creating plan supply `end date` `end date` available schedule types `never` `evenly` `at range start` `at range end` created datetimewhen add created plan updated datetimewhen add last updated edit pagesuggest editsdefinition api url page api url result format200 ok id 5919d94185b2570f00e41ccb createdat 2015 06 18t19 37 13 453z excerpt returns list add ons plan link url order 1 project 555fbba928249c1900618a82 user 5581f6648625220d00429ef6 body category 5919d93885b2570f00e41c48 isreference true link external false title list plan 's add ons type get updates 564a4d724fa1460d00780c1d version 5919d93785b2570f00e41c39 api results codes status 200 language xml code add ons type array n add href https subdomain recurly com v2 plans gold add ons video streaming n plan href https subdomain recurly com v2 plans gold n measured unit href https subdomain recurly com v2 measured units 12345678901234567890 n add code video streaming add code n name video streaming name n default quantity type integer 1 default quantity n display quantity hosted page type boolean false display quantity hosted page n tax code nil nil n unit amount cents n eur type integer 45 eur n usd type integer 50 usd n unit amount cents n accounting code nil nil n add type usage add type n optional type boolean true optional n usage type price usage type n usage percentage nil nil n revenue schedule type evenly revenue schedule type n created type datetime 2016 08 03t15 25 09z created n updated type datetime 2016 08 03t15 25 09z updated n add n continued n add ons name settings auth required params required true desc unique code identify plan default type string name plan code id 578d0a62d9c55c2000d4f1f9 ref path ref query required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page default type string name cursor id 55831de9ea39a9390022439e default created type string name sort id 578ea900902f512200bd3f85 ref query required false desc attribute used order records `created at` `updated at` default desc type string name order id 578ea900902f512200bd3f84 ref query required false desc order products returned `asc` ascending order `desc` descending order query required false desc operates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time default type string name begin time id 578ea900902f512200bd3f83 ref desc operates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time default type string name end time id 578eab03426c561700db86a3 ref query required false id 55831de9ea39a9390022439d ref query required false desc number records return per page maximum 200 default 50 type int name per page url plans plan code add ons examples codes language php code \\? php n ntry n plan recurly plan get \\( 'gold' \\) n add ons plan add ons get \\( \\) n 1 api request n add ons recurly addonlist get \\( 'gold' \\) n foreach \\( add ons add \\) n print add add n n n catch \\( recurly notfounderror e \\) n print plan found e n name language ruby code plan recurly plan find \\( 'gold' \\) nplan add ons find add n puts add add inspect nend language python code client version 2 1 6 nplan plan get \\( 'gold' \\) nfor add plan add ons \\( \\) n print 'add s' add n n client version 2 1 5 nplan plan get \\( 'gold' \\) nadd ons plan add ons \\( \\) nwhile add ons n add add ons n print 'add s' add n try n add ons add ons next page \\( \\) n except pageerror n add ons \\( \\) code using system linq n nvar plan plans get \\( gold \\) nvar addons plan addons nwhile \\( addons \\( \\) \\) n n tforeach \\( var addon addons \\) n tconsole writeline \\( addon addon \\) n taddons addons next n language csharp method get githubsync slug list add ons plan hidden false next pages description parentdoc null sync unique v 0 childrenpages getlist plan 's add onsreturns list add ons plan path paramsplan code requiredstringunique code identify plan query paramscursor stringsplits records across pages leave blank return first page follow uri first page 's link header fetch next page sort stringcreated atthe attribute used order records `created at` `updated at` order stringdescthe order products returned `asc` ascending order `desc` descending order begin time stringoperates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time end time stringoperates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time per page integer50number records return per page maximum 200 edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d94185b2570f00e41ccc sync unique isreference true link external false next pages description project 555fbba928249c1900618a82 githubsync order 2 type post api auth required params id 578d0aa6f5ffc72900cf8011 ref path required true desc unique plan code default type string name plan code id 55c548635c5d9f0d004969c6 ref body required false desc add code max 50 characters default type string name add code name add type id 5724313c4255580e00593861 ref body required false desc whether add fixed price \\( `fixed` \\) usage based \\( `usage` \\) default type string ref body required false desc default quantity hosted pages default 1 type int name default quantity id 55c548635c5d9f0d004969c3 body required false desc array unit amounts currency code max 10000000 default type array object name unit amount cents id 55c548635c5d9f0d004969c4 ref required false desc add name max 255 characters default type string name name id 55c548635c5d9f0d004969c5 ref body type boolean name display quantity hosted page id 55c548635c5d9f0d004969c2 ref body required false desc `true` display quantity field hosted pages add default false desc accounting code invoice line items add defaults value `add code` max 20 characters default type string name accounting code id 55c548635c5d9f0d004969c1 ref body required false name revenue schedule type id 578f77ca8335ca0e006d5cb9 ref body required false desc optional field setting revenue schedule type `add type` `fixed` determine revenue associated plan add recognized creating plan add available schedule types `never` `evenly` `at range start` `at range end` default evenly type string ref body required false desc optional field eu vat merchants avalara avatax pro merchants using recurly 's eu vat feature use values `unknown` `physical` `digital` avatax account configured use avalara tax codes assign custom tax rules default type string name tax code id 55c548635c5d9f0d004969c0 body required false desc whether add optional customer include purchase hosted payment page default true type boolean name optional id 5724313c4255580e0059385f ref required false desc id measured unit site associated add default type string name measured unit id id 5724313c4255580e00593860 ref body ref body required false desc `add type` `usage` must set `usage type` `price` `percentage` `price` price defined `unit amount cents` `percentage` percentage defined `usage percentage` default type string name usage type id 5724313c4255580e0059385e body required false desc `add type` `usage` `usage type` `percentage` must set `usage percentage` must 0 0000 100 0000 default type string name usage percentage id 5724313c4255580e0059385d ref url plans plan code add ons examples codes name code \\? php n ntry n add new recurly addon \\( \\) n add plan code 'gold' n add add code 'ipaddresses' n add name 'extra ip addresses' n add unit amount cents addcurrency \\( 'usd' 200 \\) n add unit amount cents addcurrency \\( 'eur' 180 \\) n add create \\( \\) n n print addon add n catch \\( recurly validationerror e \\) n print invalid addon data e n catch \\( recurly notfounderror e \\) n print plan found e n language php code plan recurly plan find \\( 'gold' \\) nadd plan add ons create \\( n add code 'ipaddresses' n name 'extra ip addresses' n unit amount cents 2 00 n \\) n n create usage based add nadd plan add ons create \\( n add code 'marketing emails' n name 'marketing emails' n unit amount cents 5 n add type usage n optional false n usage type price n measured unit id 18783 n \\) language ruby code plan plan get \\( 'gold' \\) naddon addon \\( n add code 'ipaddresses' n name 'extra ip addresses' n unit amount cents 200 n \\) nplan create add \\( addon \\) language python code var plan plans get \\( gold \\) nvar addon plan newaddon \\( ipaddresses extra ip addresses \\) add code name naddon unitamountincents add \\( usd 200 \\) naddon unitamountincents add \\( eur 180 \\) naddon defaultquantity 1 naddon displayquantityonhostedpage true naddon create \\( \\) n n accounting code yet supported n please contact us need language csharp code fixed price n add n add code ipaddresses add code n name extra ip addresses name n unit amount cents n usd 200 usd n eur 180 eur n unit amount cents n revenue schedule type evenly revenue schedule type n add language xml name xml fixed language xml name xml usage code usage based n add n add code video streaming add code n name video streaming name n add type usage add type n measured unit id 12345678901234567890 measured unit id n usage type price usage type n unit amount cents n usd 50 usd n eur 45 eur n unit amount cents n add method post results codes status 201 name created fixed code add href https subdomain recurly com v2 plans gold add ons video streaming n plan href https subdomain recurly com v2 plans gold n measured unit href https subdomain recurly com v2 measured units 12345678901234567890 n add code video streaming add code n name video streaming name n default quantity type integer 1 default quantity n display quantity hosted page type boolean false display quantity hosted page n tax code nil nil n unit amount cents n usd type integer 50 usd n eur type integer 45 eur n unit amount cents n accounting code nil nil n add type usage add type n optional type boolean true optional n usage type price usage type n usage percentage nil nil n revenue schedule type evenly revenue schedule type n created type datetime 2016 08 03t15 25 09z created n updated type datetime 2016 08 03t15 25 09z updated n add language xml name created usage status 201 language xml code add href https subdomain recurly com v2 plans gold add ons video streaming n plan href https subdomain recurly com v2 plans gold n measured unit href https subdomain recurly com v2 measured units 12345678901234567890 n add code video streaming add code n name video streaming name n default quantity type integer 1 default quantity n display quantity hosted page type boolean false display quantity hosted page n tax code nil nil n unit amount cents n usd type integer 50 usd n eur type integer 45 eur n unit amount cents n accounting code nil nil n add type usage add type n optional type boolean true optional n usage type price usage type n usage percentage nil nil n created type datetime 2016 07 14t21 50 42z created n updated type datetime 2016 07 14t21 50 42z updated n add settings body category 5919d93885b2570f00e41c48 createdat 2015 06 18t19 50 44 924z excerpt add add plan one add created single request updates user 5581f6648625220d00429ef6 v 0 link url slug create add title create plan add hidden false parentdoc null version 5919d93785b2570f00e41c39 childrenpages postcreate plan add onadd add plan one add created single request path paramsplan code requiredstringthe unique plan codebody paramsadd code stringadd code max 50 characters add type stringwhether add fixed price \\( `fixed` \\) usage based \\( `usage` \\) default quantity integer1default quantity hosted pages unit amount cents array objectsarray unit amounts currency code max 10000000 name stringadd name max 255 characters display quantity hosted page booleanfalseif `true` display quantity field hosted pages add accounting code stringaccounting code invoice line items add defaults value `add code` max 20 characters revenue schedule type stringevenlyoptional field setting revenue schedule type `add type` `fixed` determine revenue associated plan add recognized creating plan add available schedule types `never` `evenly` `at range start` `at range end` tax code stringoptional field eu vat merchants avalara avatax pro merchants using recurly 's eu vat feature use values `unknown` `physical` `digital` avatax account configured use avalara tax codes assign custom tax rules optional booleantruewhether add optional customer include purchase hosted payment page measured unit id stringthe id measured unit site associated add usage type stringif `add type` `usage` must set `usage type` `price` `percentage` `price` price defined `unit amount cents` `percentage` percentage defined `usage percentage` usage percentage stringif `add type` `usage` `usage type` `percentage` must set `usage percentage` must 0 0000 100 0000 edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xml fixedxml usageresult format201 created fixed201 created usage id 5919d94185b2570f00e41ccd hidden false next description pages order 3 parentdoc null updates api results codes status 200 language xml code add href https subdomain recurly com v2 plans gold add ons ipaddresses n plan href https subdomain recurly com v2 plans gold n add code ipaddresses add code n name extra ip addresses name n default quantity type integer 1 default quantity n display quantity hosted page type boolean false display quantity hosted page n tax code nil nil n unit amount cents n eur type integer 180 eur n usd type integer 200 usd n unit amount cents n accounting code nil nil n add type fixed add type n optional type boolean true optional n revenue schedule type evenly revenue schedule type n created type datetime 2016 08 03t15 23 41z created n updated type datetime 2016 08 03t15 23 41z updated n add name status 404 language xml code error n symbol found symbol n description lang en us could n't find addon add code ipaddresses description n error settings auth required params ref path required true desc unique code identify plan default type string name plan code id 57242f592887bb0e00bb9daf default type string name add code id 578d0ae284f5cd0e008917b3 ref path required true desc unique add code url plans plan code add ons add code examples codes language csharp code var plan plans get \\( gold \\) nvar addon plan getaddon \\( ipaddresses \\) name method get body excerpt returns information add isreference true sync unique type get v 0 category 5919d93885b2570f00e41c48 githubsync link url project 555fbba928249c1900618a82 slug lookup add version 5919d93785b2570f00e41c39 createdat 2015 06 18t19 47 37 395z link external false title lookup plan add user 5581f6648625220d00429ef6 childrenpages getlookup plan add onreturns information add path paramsplan code requiredstringunique code identify plan add code requiredstringthe unique add code edit pagesuggest editsdefinition api url page api url examplesc result format200 ok404 found id 5919d94185b2570f00e41cce excerpt update pricing information description add existing subscriptions add receive pricing updates next pages description project 555fbba928249c1900618a82 v 0 createdat 2015 06 18t19 59 54 118z sync unique user 5581f6648625220d00429ef6 api settings auth required params type string name plan code id 5724334f2887bb0e00bb9dbd ref path required true desc unique add code default required false desc add name max 255 characters default type string name name id 5724334f2887bb0e00bb9dbc ref body type string name add code id 578d0a9950db502900acccfc ref path required true desc unique add code default desc array unit amounts currency code max 10000000 default type array object name unit amount cents id 5724334f2887bb0e00bb9dbb ref body required false id 5724334f2887bb0e00bb9dba ref body required false desc default quantity hosted pages default type int name default quantity id 5724334f2887bb0e00bb9db9 ref body required false desc true display quantity field hosted pages add default type string name display quantity hosted page name accounting code id 5724334f2887bb0e00bb9db8 ref body required false desc accounting code invoice line items add defaults value `add code` max 20 characters default type string type string name revenue schedule type id 578f77e83d04570e00976ed7 ref body required false desc optional field setting revenue schedule type `add type` `fixed` determine revenue associated plan add recognized creating plan add available schedule types `never` `evenly` `at range start` `at range end` default required false desc optional field eu vat merchants avalara avatax pro merchants using recurly 's eu vat feature use values `unknown` `physical` `digital` avatax account configured use avalara tax codes assign custom tax rules default type string name tax code id 5724334f2887bb0e00bb9db7 ref body type boolean name optional id 5724334f2887bb0e00bb9db5 ref body required false desc whether add optional customer include purchase hosted payment page default true required false desc id measured unit site associated add default type string name measured unit id id 5724334f2887bb0e00bb9db6 ref body type string name usage percentage id 5724334f2887bb0e00bb9db4 ref body required false desc `add type` `usage` `usage type` `percentage` must set `usage percentage` must 0 0000 100 0000 default url plans plan code add ons add code examples codes language php code \\? php n ntry n add recurly addon get \\( 'gold' 'ipaddresses' \\) \\( plan code addon code \\) n add unit amount cents 'usd' amount cents 1200 12 00 n add update \\( \\) n n print addon add n catch \\( recurly validationerror e \\) n print invalid addon data e n catch \\( recurly notfounderror e \\) n print plan addon found e n name code plan recurly plan find \\( 'gold' \\) nadd plan add ons find \\( 'ipaddresses' \\) nadd update attributes unit amount cents 12 00 language ruby language python code plan plan get \\( 'gold' \\) nadd plan get add \\( 'ipaddresses' \\) nadd unit amount cents 200 nadd save \\( \\) language csharp code var plan plans get \\( gold \\) nvar addon plan getaddon \\( ipaddresses \\) naddon unitamountincents usd 200 naddon update \\( \\) n language xml code add n unit amount cents n usd 400 usd n eur 360 eur n unit amount cents n revenue schedule type range start revenue schedule type n add method put results codes status 200 language xml code add href https subdomain recurly com v2 plans gold add ons ipaddresses n plan href https subdomain recurly com v2 plans gold n add code ipaddresses add code n name extra ip addresses name n default quantity type integer 1 default quantity n display quantity hosted page type boolean false display quantity hosted page n tax code nil nil n unit amount cents n eur type integer 360 eur n usd type integer 400 usd n unit amount cents n accounting code nil nil n add type fixed add type n optional type boolean true optional n revenue schedule type range start revenue schedule type n created type datetime 2016 08 03t15 23 41z created n updated type datetime 2016 08 03t15 27 09z updated n add name category 5919d93885b2570f00e41c48 link external false slug update add updates version 5919d93785b2570f00e41c39 parentdoc null title update plan add body githubsync hidden false isreference true link url order 4 type put childrenpages putupdate plan add onupdate pricing information description add existing subscriptions add receive pricing updates path paramsplan code requiredstringthe unique add code add code requiredstringthe unique add code body paramsname stringadd name max 255 characters unit amount cents array objectsarray unit amounts currency code max 10000000 default quantity integerdefault quantity hosted pages display quantity hosted page stringif true display quantity field hosted pages add onaccounting code stringaccounting code invoice line items add defaults value `add code` max 20 characters revenue schedule type stringoptional field setting revenue schedule type `add type` `fixed` determine revenue associated plan add recognized creating plan add available schedule types `never` `evenly` `at range start` `at range end` tax code stringoptional field eu vat merchants avalara avatax pro merchants using recurly 's eu vat feature use values `unknown` `physical` `digital` avatax account configured use avalara tax codes assign custom tax rules optional booleantruewhether add optional customer include purchase hosted payment page measured unit id stringthe id measured unit site associated add usage percentage stringif `add type` `usage` `usage type` `percentage` must set `usage percentage` must 0 0000 100 0000 edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format200 ok id 5919d94185b2570f00e41ccf api examples codes language php code \\? php n ntry n add recurly addon get \\( 'gold' 'ipaddresses' \\) \\( plan code addon code \\) n add delete \\( \\) n n print addon add n catch \\( recurly notfounderror e \\) n print plan addon found e n name language ruby code plan recurly plan find \\( 'gold' \\) nadd plan add ons find \\( 'ipaddresses' \\) nadd destroy language python code plan plan get \\( 'gold' \\) nadd plan get add \\( 'ipaddresses' \\) nadd delete \\( \\) language csharp code var plan plans get \\( gold \\) nvar addon plan getaddon \\( ipaddresses \\) naddon delete \\( \\) method delete results codes status 204 language text code status 204 content name settings auth required params path required true desc unique code identify plan default type string name plan code id 5783dbc46bcaf40e00a5d8af ref desc unique add code default type string name add code id 578d0a81bd9f40200058dc82 ref path required true url plans plan code add ons add code body isreference true link external false link url next pages description v 0 category 5919d93885b2570f00e41c48 excerpt remove add plan githubsync hidden false slug delete add user 5581f6648625220d00429ef6 order 5 title delete plan add updates createdat 2015 06 18t20 01 20 016z parentdoc null project 555fbba928249c1900618a82 sync unique type delete version 5919d93785b2570f00e41c39 childrenpages deletedelete plan add onremove add plan path paramsplan code requiredstringunique code identify plan add code requiredstringthe unique add code edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format204 content id 5919d93c85b2570f00e41c87 api method get results codes name code measured unit href https subdomain recurly com v2 measured units 404351234712012650 n id type integer 404351234712012650 id n name streaming bandwidth name n display name gb display name n description video steaming bandwidth measured gigabytes description n measured unit language xml status 200 settings auth required params name id id 57365485a12ae12000774fbb ref body required false desc unique id measured unit site default type int type string name name id 57365485a12ae12000774fba ref body required false desc unique internal name measured unit site default desc display name measured unit recommend singular version \\( e g gb api call email \\) default type string name display name id 57365485a12ae12000774fb9 ref body required false id 57365485a12ae12000774fb8 ref body required false desc optional internal description default type string name description url measured units examples codes createdat 2016 05 13t19 56 16 743z githubsync hidden false link url next description pages v 0 slug measured unit object sync unique title measured unit object type get user 55b66dba6127b1250036446f parentdoc null project 555fbba928249c1900618a82 order 0 updates category 5919d93885b2570f00e41c49 link external false isreference true version 5919d93785b2570f00e41c39 body excerpt measured unit describes usage based add 's usage different usage based add ons share measured unit report customer usage add ons aggregated measured unit level childrenpages getmeasured unit objecta measured unit describes usage based add 's usage different usage based add ons share measured unit report customer usage add ons aggregated measured unit level body paramsid integerunique id measured unit site name stringunique internal name measured unit site display name stringdisplay name measured unit recommend singular version \\( e g gb api call email \\) description stringoptional internal description edit pagesuggest editsdefinition api url page api url result format200 ok id 5919d93c85b2570f00e41c88 excerpt list measured units site next pages description createdat 2016 05 13t19 56 47 296z hidden false link url order 1 type get updates api method get results codes status 200 language xml code measured units type array n measured unit href https subdomain recurly com v2 measured units 454087618196407477 n id type integer 454087618196407477 id n name ad impressions name n display name impression display name n description number ad impressions description n measured unit n measured unit href https subdomain recurly com v2 measured units 12345678901234567890 n id type integer 12345678901234567890 id n name streaming bandwidth name n display name gb display name n description video steaming bandwidth measured gigabytes description n measured unit n measured units name settings auth required params url measured units examples codes code \\? php n nforeach \\( recurly measuredunitlist get \\( \\) unit \\) n print unit n language php name php language ruby name ruby code list measuredunits nmeasured units recurly measuredunit nmeasured units measured unit n puts measured unit nend name python code recurly import measuredunit n n list measuredunits nfor measured unit measuredunit \\( \\) n print measured unit language python category 5919d93885b2570f00e41c49 link external false sync unique title list measured units v 0 body githubsync isreference true parentdoc null project 555fbba928249c1900618a82 slug list measured units user 55b66dba6127b1250036446f version 5919d93785b2570f00e41c39 childrenpages getlist measured unitslist measured units site edit pagesuggest editsdefinition api url page api url examplesphprubypythonresult format200 ok id 5919d93c85b2570f00e41c89 createdat 2016 05 13t19 57 30 314z next description pages sync unique v 0 api params body required true desc unique internal name measured unit site default type string name name id 573671093d00df0e00ef112d ref desc display name measured unit recommend singular version \\( e g gb api call email \\) default type string name display name id 573671093d00df0e00ef112c ref body required true name description id 573671093d00df0e00ef112b ref body required false desc optional internal description default type string url measured units examples codes code measured unit n name streaming bandwidth name n display name gb display name n description video steaming bandwidth measured gigabytes description n measured unit language xml code create measuredunit nmeasured unit recurly measuredunit new \\( n name streaming bandwidth n display name gb n description video steaming bandwidth measured gigabytes n \\) nmeasured unit save nputs measured unit language ruby language python code recurly import measuredunit n n create measured unit nmeasured unit measuredunit \\( n name streaming bandwidth n display name gb n description video steaming bandwidth measured gigabytes \\) nmeasured unit save \\( \\) nprint measured unit code \\? php n n unit new recurly measuredunit \\( \\) n unit name 'streaming bandwidth' n unit display name 'gb' n unit description 'video steaming bandwidth measured gigabytes' n unit create \\( \\) language php method post results codes name code measured unit href https subdomain recurly com v2 measured units 12345678901234567890 n id type integer 12345678901234567890 id n name streaming bandwidth name n display name gb display name n description video steaming bandwidth measured gigabytes description n measured unit language xml status 200 settings auth required isreference true link url order 2 parentdoc null slug create measured unit user 55b66dba6127b1250036446f category 5919d93885b2570f00e41c49 version 5919d93785b2570f00e41c39 project 555fbba928249c1900618a82 title create measured unit type post updates body hidden false link external false excerpt create measured unit site githubsync childrenpages postcreate measured unitcreate measured unit site body paramsname requiredstringunique internal name measured unit site display name requiredstringdisplay name measured unit recommend singular version \\( e g gb api call email \\) description stringoptional internal description edit pagesuggest editsdefinition api url page api url examplesxmlrubypythonphpresult format200 ok id 5919d93c85b2570f00e41c8a user 55b66dba6127b1250036446f next pages description title lookup measured unit updates link external false order 3 project 555fbba928249c1900618a82 slug lookup measured unit type get api url measured units measured unit id examples codes code \\? php n n find measuredunit id n measured unit recurly measuredunit get \\( 404351234712012650 \\) nprint measured unit language php name php code find measuredunit id nmeasured unit recurly measuredunit find \\( 404351234712012650 \\) nputs measured unit language text name ruby code recurly import measuredunit n n find measuredunit id nmeasured unit measuredunit get \\( 404351234712012650 \\) nprint measured unit language python name python method get results codes code measured unit href https subdomain recurly com v2 measured units 454087618196407477 n id type integer 454087618196407477 id n name ad impressions name n display name impression display name n description number ad impressions description n measured unit language xml status 200 name settings auth required params ref path required true desc unique id measured unit site default type string name measured unit id id 578d1a302441e13200a14230 body isreference true link url version 5919d93785b2570f00e41c39 v 0 createdat 2016 05 13t19 57 14 614z hidden false githubsync parentdoc null sync unique category 5919d93885b2570f00e41c49 excerpt lookup specific measured unit site customer 's usage based add usage records reference associated measured unit grab display name pricing usage displays childrenpages getlookup measured unitlookup specific measured unit site customer 's usage based add usage records reference associated measured unit grab display name pricing usage displays path paramsmeasured unit id requiredstringunique id measured unit site edit pagesuggest editsdefinition api url page api url examplesphprubypythonresult format200 ok id 5919d93c85b2570f00e41c8b v 0 hidden false updates link external false link url sync unique api settings auth required params ref body required false desc unique internal name measured unit site default type string name name id 57367572f8ebd31700769f73 default type string name display name id 57367572f8ebd31700769f72 ref body required false desc display name measured unit recommend singular version \\( e g gb api call email \\) body required false desc optional internal description default type string name description id 57367572f8ebd31700769f71 ref required true desc unique id measured unit site default type string name measured unit id id 578d1a46bd9f40200058dccc ref path url measured units measured unit id examples codes code measured unit n display name gigabyte display name n measured unit language xml method put results codes language xml status 200 name code measured unit href https subdomain recurly com v2 measured units 12345678901234567890 n id type integer 12345678901234567890 id n name streaming bandwidth name n display name gigabyte display name n description video steaming bandwidth measured gigabytes description n measured unit category 5919d93885b2570f00e41c49 excerpt update measured unit site updates immediately change measured unit associated plan subscription usage based add ons isreference true project 555fbba928249c1900618a82 slug update measured unit user 55b66dba6127b1250036446f githubsync order 4 parentdoc null type put version 5919d93785b2570f00e41c39 body createdat 2016 05 13t19 57 52 013z next pages description title update measured unit childrenpages putupdate measured unitupdate measured unit site updates immediately change measured unit associated plan subscription usage based add ons path paramsmeasured unit id requiredstringunique id measured unit site body paramsname stringunique internal name measured unit site display name stringdisplay name measured unit recommend singular version \\( e g gb api call email \\) description stringoptional internal description edit pagesuggest editsdefinition api url page api url examplesxmlresult format200 ok id 5919d93c85b2570f00e41c8c link url user 55b66dba6127b1250036446f api examples codes method delete results codes status 204 name code language xml settings auth required params ref path required true desc unique id measured unit site default type string name measured units id id 578d1a4fbd9f40200058dccd url measured units measured units id category 5919d93885b2570f00e41c49 hidden false link external false order 5 project 555fbba928249c1900618a82 updates version 5919d93785b2570f00e41c39 v 0 body isreference true parentdoc null sync unique type delete createdat 2016 05 13t19 58 09 190z excerpt delete measured unit site measured unit must removed plans deleted next pages description slug delete measured unit title delete measured unit githubsync childrenpages deletedelete measured unitdelete measured unit site measured unit must removed plans deleted path paramsmeasured units id requiredstringunique id measured unit site edit pagesuggest editsdefinition api url page api url id 5919d93c85b2570f00e41c79 isreference true link url sync unique title list subscriptions type get v 0 hidden false order 0 version 5919d93785b2570f00e41c39 api method get params desc state subscriptions return `active` `canceled` `expired` `future` `in trial` `live` `past due` subscription may belong one state default type string name state id 558219b8b806360d00244640 ref query required false id 558219b8b806360d0024463f ref query required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page default type string name cursor id 578ea787426c561700db868f ref query required false desc attribute used order records `created at` `updated at` default created type string name sort name order id 578ea787426c561700db868e ref query required false desc order products returned `asc` ascending order `desc` descending order default desc type string type datetime name begin time id 578ea787426c561700db868d ref query required false desc operates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time default desc operates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time default type datetime name end time id 578ea787426c561700db868c ref query required false id 558219b8b806360d0024463e ref query required false desc number records return per page maximum 200 default 50 type int name per page results codes name code subscriptions type array n subscription href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 n account href https subdomain recurly com v2 accounts 1 n redemptions href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 redemptions n invoice href https subdomain recurly com v2 invoices 1005 n plan href https subdomain recurly com v2 plans gold n plan code gold plan code n name gold plan name n plan n revenue schedule type evenly revenue schedule type n uuid 37bfef7a8e44cfc3817b7a43eba8a6e6 uuid n state active state n unit amount cents type integer 4500 unit amount cents n currency eur currency n quantity type integer 1 quantity n activated type datetime 2016 08 03t16 02 24z activated n canceled nil nil n expires nil nil n updated type datetime 2016 08 03t16 02 24z updated n total billing cycles nil nil n remaining billing cycles nil nil n current period started type datetime 2016 08 03t16 02 24z current period started n current period ends type datetime 2016 09 03t16 02 24z current period ends n trial started nil nil n trial ends nil nil n terms conditions nil nil n customer notes nil nil n tax cents type integer 394 tax cents n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n po number nil nil n net terms type integer 0 net terms n collection method automatic collection method n billing info reason plan free trial billing info reason n subscription add ons type array n subscription add ons n name cancel href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 cancel method put n name terminate href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 terminate method put n name postpone href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 postpone method put n name notes href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 notes method put n subscription n subscription href https subdomain recurly com v2 subscriptions 37bfee10b23c798312dedb4ead99c2e9 n account href https subdomain recurly com v2 accounts 1 n redemptions href https subdomain recurly com v2 subscriptions 37bfee10b23c798312dedb4ead99c2e9 redemptions n plan href https subdomain recurly com v2 plans gold n plan code gold plan code n name gold plan name n plan n revenue schedule type evenly revenue schedule type n uuid 37bfee10b23c798312dedb4ead99c2e9 uuid n state expired state n unit amount cents type integer 4500 unit amount cents n currency eur currency n quantity type integer 1 quantity n activated type datetime 2016 08 03t16 00 51z activated n canceled type datetime 2016 08 03t16 02 16z canceled n expires type datetime 2016 08 03t16 02 16z expires n updated type datetime 2016 08 03t16 02 16z updated n total billing cycles nil nil n remaining billing cycles nil nil n current period started type datetime 2016 08 03t16 00 51z current period started n current period ends type datetime 2016 09 03t16 00 51z current period ends n trial started nil nil n trial ends nil nil n terms conditions nil nil n customer notes nil nil n tax cents type integer 394 tax cents n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n po number nil nil n net terms type integer 0 net terms n collection method automatic collection method n billing info reason plan free trial billing info reason n subscription add ons type array n subscription add ons n subscription n continued n subscriptions language xml status 200 settings url subscriptions auth required examples codes code \\? php n n subscriptions recurly subscriptionlist getactive \\( \\) nforeach \\( subscriptions subscription \\) n print subscription subscription n n name language php language ruby code recurly subscription find subscription n puts susbcription subscription nend language python code client version 2 1 6 nfor subscription subscription \\( \\) n print 'subscription s' subscription n n client version 2 1 5 nsubscriptions subscription \\( \\) nwhile subscriptions n subscription subscriptions n print 'subscription s' subscription n try n subscriptions subscriptions next page \\( \\) n except pageerror n subscriptions \\( \\) code using system linq n nvar account accounts get \\( 1 \\) nvar subscriptions account getsubscriptions \\( \\) nwhile \\( subscriptions \\( \\) \\) n n foreach \\( var subscription subscriptions \\) n console writeline \\( subscription subscription \\) n subscriptions subscriptions next n language csharp body subscription query states n block parameters n n data n h 0 state n h 1 description n 0 0 active n 0 1 subscriptions valid current time includes subscriptions trial period n 1 0 canceled n 1 1 subscriptions valid current time renew cancelation requested n 2 0 expired n 2 1 subscriptions expired longer valid n 3 0 future n 3 1 subscriptions start future active yet n 4 0 trial n 4 1 subscriptions active canceled trial period n 5 0 live n 5 1 subscriptions expired n 6 0 past due n 6 1 subscriptions active canceled past due invoice n n cols 2 n rows 7 n n block n n block callout n n type warning n title n body please note queried state base state returned subscription may differ example querying past due subscriptions result list subscriptions 'past due' state \\( either 'active' 'canceled' \\) base states \\( 'pending' 'active' 'canceled' 'expired' 'future' \\) present returned subscription records n n block createdat 2015 06 18t01 07 04 439z excerpt returns list subscriptions githubsync project 555fbba928249c1900618a82 slug list subscriptions category 5919d93885b2570f00e41c4a link external false next pages description parentdoc null updates 55b102d96c91eb2d008712bf user 556790090145bc23008e3bf8 childrenpages getlist subscriptionsreturns list subscriptions query paramsstate stringthe state subscriptions return `active` `canceled` `expired` `future` `in trial` `live` `past due` subscription may belong one state cursor stringsplits records across pages leave blank return first page follow uri first page 's link header fetch next page sort stringcreated atthe attribute used order records `created at` `updated at` order stringdescthe order products returned `asc` ascending order `desc` descending order begin time datetimeoperates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time end time datetimeoperates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time per page integer50number records return per page maximum 200 subscription query states state description active subscriptions valid current time includes subscriptions trial period canceled subscriptions valid current time renew cancelation requested expired subscriptions expired longer valid future subscriptions start future active yet trial subscriptions active canceled trial period live subscriptions expired past due subscriptions active canceled past due invoice please note queried state base state returned subscription may differ example querying past due subscriptions result list subscriptions 'past due' state \\( either 'active' 'canceled' \\) base states \\( 'pending' 'active' 'canceled' 'expired' 'future' \\) present returned subscription records edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d93c85b2570f00e41c7a category 5919d93885b2570f00e41c4a githubsync link external false link url v 0 parentdoc null slug list accounts subscriptions createdat 2015 06 18t01 10 54 210z next pages description sync unique title list account 's subscriptions type get updates version 5919d93785b2570f00e41c39 body excerpt returns list subscriptions account hidden false isreference true order 1 project 555fbba928249c1900618a82 user 556790090145bc23008e3bf8 api url accounts account code subscriptions auth required examples codes code \\? php n ntry n subscriptions recurly subscriptionlist getforaccount \\( 'b6f5783' \\) n foreach \\( subscriptions subscription \\) n print subscription subscription n n n catch \\( recurly notfounderror e \\) n print account found e n name language php language ruby code account recurly account find \\( '1' \\) naccount subscriptions find subscription n puts subscription subscription inspect nend language python code client version 2 1 6 naccount account get \\( '1' \\) nfor subscription account subscriptions \\( \\) n print 'subscription s' subscription n n client version 2 1 5 naccount account get \\( '1' \\) nsubscriptions account subscriptions \\( \\) nwhile subscriptions n subscription subscriptions n print 'subscription s' subscription n try n subscriptions subscriptions next page \\( \\) n except pageerror n subscriptions \\( \\) language csharp code using system linq n nvar account accounts get \\( 1 \\) nvar subscriptions account getsubscriptions \\( \\) nwhile \\( subscriptions \\( \\) \\) n n foreach \\( var subscription subscriptions \\) n console writeline \\( subscription subscription \\) n subscriptions subscriptions next n method get params name account code id 578d1aa09a98a41900717d95 ref path required true desc unique account identifier default type string type string name state id 55821a9e5b7fa60d0068b421 ref query required false desc state subscriptions return `active` `canceled` `expired` `future` `in trial` `live` `past due` subscription may belong one state please see previous section note subscription states default live required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page default type string name cursor id 55821a9e5b7fa60d0068b420 ref query type string name sort id 578ea7d5426c561700db8694 ref query required false desc attribute used order records `created at` `updated at` default created desc order products returned `asc` ascending order `desc` descending order default desc type string name order id 578ea7d5426c561700db8693 ref query required false name begin time id 578ea7d5426c561700db8692 ref query required false desc operates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time default type datetime type datetime name end time id 578ea7d5426c561700db8691 ref query required false desc operates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time default required false desc number records return per page maximum 200 default 50 type int name per page id 55821a9e5b7fa60d0068b41f ref query results codes status 200 name code subscriptions type array n subscription href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 n account href https subdomain recurly com v2 accounts 1 n redemptions href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 redemptions n invoice href https subdomain recurly com v2 invoices 1005 n plan href https subdomain recurly com v2 plans gold n plan code gold plan code n name gold plan name n plan n revenue schedule type evenly revenue schedule type n uuid 37bfef7a8e44cfc3817b7a43eba8a6e6 uuid n state active state n unit amount cents type integer 4500 unit amount cents n currency eur currency n quantity type integer 1 quantity n activated type datetime 2016 08 03t16 02 24z activated n canceled nil nil n expires nil nil n updated type datetime 2016 08 03t16 02 24z updated n total billing cycles nil nil n remaining billing cycles nil nil n current period started type datetime 2016 08 03t16 02 24z current period started n current period ends type datetime 2016 09 03t16 02 24z current period ends n trial started nil nil n trial ends nil nil n terms conditions nil nil n customer notes nil nil n tax cents type integer 394 tax cents n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n po number nil nil n net terms type integer 0 net terms n collection method automatic collection method n billing info reason plan free trial billing info reason n subscription add ons type array n subscription add ons n name cancel href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 cancel method put n name terminate href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 terminate method put n name postpone href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 postpone method put n name notes href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 notes method put n subscription n subscription href https subdomain recurly com v2 subscriptions 37bfee10b23c798312dedb4ead99c2e9 n account href https subdomain recurly com v2 accounts 1 n redemptions href https subdomain recurly com v2 subscriptions 37bfee10b23c798312dedb4ead99c2e9 redemptions n plan href https subdomain recurly com v2 plans gold n plan code gold plan code n name gold plan name n plan n revenue schedule type evenly revenue schedule type n uuid 37bfee10b23c798312dedb4ead99c2e9 uuid n state expired state n unit amount cents type integer 4500 unit amount cents n currency eur currency n quantity type integer 1 quantity n activated type datetime 2016 08 03t16 00 51z activated n canceled type datetime 2016 08 03t16 02 16z canceled n expires type datetime 2016 08 03t16 02 16z expires n updated type datetime 2016 08 03t16 02 16z updated n total billing cycles nil nil n remaining billing cycles nil nil n current period started type datetime 2016 08 03t16 00 51z current period started n current period ends type datetime 2016 09 03t16 00 51z current period ends n trial started nil nil n trial ends nil nil n terms conditions nil nil n customer notes nil nil n tax cents type integer 394 tax cents n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n po number nil nil n net terms type integer 0 net terms n collection method automatic collection method n billing info reason plan free trial billing info reason n subscription add ons type array n subscription add ons n subscription n continued n subscriptions language xml settings childrenpages getlist account 's subscriptionsreturns list subscriptions account path paramsaccount code requiredstringunique account identifier query paramsstate stringlivethe state subscriptions return `active` `canceled` `expired` `future` `in trial` `live` `past due` subscription may belong one state please see previous section note subscription states cursor stringsplits records across pages leave blank return first page follow uri first page 's link header fetch next page sort stringcreated atthe attribute used order records `created at` `updated at` order stringdescthe order products returned `asc` ascending order `desc` descending order begin time datetimeoperates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time end time datetimeoperates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time per page integer50number records return per page maximum 200 edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d93c85b2570f00e41c7b api params results codes status 200 name code subscription href n account href https subdomain recurly com v2 accounts 1 n address n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n address n plan href https subdomain recurly com v2 plans gold n plan code gold plan code n name gold plan name n plan n revenue schedule type evenly revenue schedule type n uuid 37bfe103d6f93925e58d314363acff99 uuid n state active state n unit amount cents type integer 6000 unit amount cents n currency usd currency n quantity type integer 1 quantity n activated type datetime 2016 08 03t15 46 36z activated n canceled nil nil n expires nil nil n updated nil nil n total billing cycles nil nil n remaining billing cycles nil nil n current period started type datetime 2016 08 03t15 46 36z current period started n current period ends type datetime 2016 09 03t15 46 36z current period ends n trial started nil nil n trial ends nil nil n terms conditions nil nil n customer notes nil nil n cost cents type integer 6525 cost cents n tax cents type integer 525 tax cents n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n po number nil nil n net terms type integer 0 net terms n collection method manual collection method n billing info reason plan free trial billing info reason n subscription add ons type array n subscription add ons n invoice href n account href https subdomain recurly com v2 accounts 1 n address n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n address n shipping address n name robert soruncle name n address1 123 main st address1 n address2 suite 101 address2 n city grand rapids city n state mi state n zip 49506 zip n country us country n phone 555 123 4567 phone n shipping address n uuid 37bfe1041d5c78f951a1214753a01353 uuid n state open state n invoice number prefix n invoice number nil nil n po number nil nil n vat number nil nil n subtotal cents type integer 7000 subtotal cents n tax cents type integer 613 tax cents n total cents type integer 7613 total cents n currency usd currency n created nil nil n updated nil nil n closed nil nil n terms conditions nil nil n customer notes nil nil n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n net terms type integer 0 net terms n collection method manual collection method n line items type array n estimated charges first invoice n line items n transactions type array n transactions n invoice n subscription n language xml settings url subscriptions preview auth required examples codes language php code \\? php n ntry n subscription new recurly subscription \\( \\) n subscription plan code 'gold' n subscription currency 'usd' n n account new recurly account \\( \\) n account account code 'b6f5783' n account email 'verena example com' n account first name 'verena' n account last name 'example' n n billing info new recurly billinginfo \\( \\) n billing info number '4111 1111 1111 1111' n billing info month 12 n billing info year 2017 n billing info verification value 123 n billing info address1 '400 alabama st' n billing info city 'san francisco' n billing info state 'ca' n billing info country 'us' n billing info zip '94110' n n account billing info billing info n subscription account account n n subscription preview \\( \\) n n subscription updated new attributes n print subscription tax cents n n print subscription cost cents n n n print subscription subscription n catch \\( recurly validationerror e \\) n print invalid plan subscription account billinginfo data e n name language ruby code subscription recurly subscription preview \\( n plan code 'gold' n currency 'eur' n account n account code '1' n email 'verena example com' n first name 'verena' n last name 'example' n billing info n number '4111 1111 1111 1111' n month 1 n year 2014 n n n shipping address n nickname 'work' n first name 'verena' n last name 'example' n company 'recurly inc' n phone '555 222 1212' n email 'verena example com' n address1 '123 main st n address2 'suite 101' n city 'grand rapids' n state 'mi' n zip '49506' n country 'us' n n \\) language python code subscription subscription \\( \\) nsubscription plan code 'gold' nsubscription currency 'eur' n naccount account \\( account code '1' \\) naccount email 'verena example com' naccount first name 'verena' naccount last name 'example' n nbilling info billinginfo \\( \\) nbilling info number '4111 1111 1111 1111' nbilling info month 1 nbilling info year 2014 n naccount billing info billing info nsubscription account account n nsubscription preview \\( \\) language csharp code var account accounts get \\( 1 \\) nvar plan plans get \\( gold \\) nvar subscription new subscription \\( account plan usd \\) account plan currency nsubscription preview \\( \\) language xml code subscription n plan code gold plan code n currency usd currency n collection method manual collection method n account n account code 1 account code n email verena example com email n first name verena first name n last name example last name n account n shipping address n nickname work nickname n first name verena first name n last name example last name n company recurly inc company n phone 555 222 1212 phone n email verena example com email n address1 123 main st address1 n address2 suite 101 address2 n city grand rapids city n state mi state n zip 49506 zip n country us country n shipping address n subscription method post body block callout n n type info n title n body preview subscription endpoint return tax site 's taxable customer address provided call may billing information address account information address depending site settings tax previews supported recurly basic taxes using avalara account n n block createdat 2015 06 18t01 37 29 227z link external false order 2 slug preview subscription title preview subscription v 0 updates 55ef52cbfd189d2f006d796c type post githubsync next pages description sync unique user 556790090145bc23008e3bf8 excerpt returns preview new subscription applied account see information available required parameters category 5919d93885b2570f00e41c4a hidden false isreference true link url parentdoc null project 555fbba928249c1900618a82 version 5919d93785b2570f00e41c39 childrenpages postpreview subscriptionreturns preview new subscription applied account see information available required parameters preview subscription endpoint return tax site 's taxable customer address provided call may billing information address account information address depending site settings tax previews supported recurly basic taxes using avalara account edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format200 ok id 5919d93c85b2570f00e41c7c next pages description title create subscription excerpt hidden false category 5919d93885b2570f00e41c4a createdat 2015 06 18t01 30 07 720z githubsync link url order 3 project 555fbba928249c1900618a82 v 0 api params type string name plan code id 55821f1f6f8ec90d00cf1a76 ref body required true desc plan code subscription default desc nested account attributes default type object name account id 55821f1f6f8ec90d00cf1a75 ref body required true type string name currency id 55821f1f6f8ec90d00cf1a71 ref body required true desc currency subscription default required false desc nested add ons default type array mixed name subscription add ons id 55821f1f6f8ec90d00cf1a74 ref body ref body required false desc optional coupon code redeem account discount subscription please note subscription request fail coupon invalid default type string name coupon code id 55821f1f6f8ec90d00cf1a73 body required false desc override unit amount subscription plan setting value cents provided subscription inherit price subscription plan provided currency max 10000000 default type int name unit amount cents id 55821f1f6f8ec90d00cf1a72 ref desc optionally override default quantity 1 default 1 type int name quantity id 55821f1f6f8ec90d00cf1a70 ref body required false id 55821f1f6f8ec90d00cf1a6f ref body required false desc set overrides default trial behavior subscription must date time preferably utc date must future default type datetime name trial ends name starts id 55821f1f6f8ec90d00cf1a6e ref body required false desc set subscription begin future date subscription apply setup fee trial period unless plan trial default type datetime ref body required false desc renews subscription specified number cycles automatically cancels defaults subscription renewing indefinitely default type int name total billing cycles id 55821f1f6f8ec90d00cf1a6d default type datetime name first renewal date id 55821f1f6f8ec90d00cf1a6c ref body required false desc indicates date first renewal occur subsequent renewals offset date first invoice prorated appropriately customer pays portion first billing period subscription applies useful forcing subscription renew first month body required false desc optional field set collection invoice `automatic` `manual` default `automatic` 's set default type string name collection method id 55821f1f6f8ec90d00cf1a6b ref desc integer representing number days invoice 's creation invoice become past due invoice 's net terms set `0` due 'on receipt' become past due 24 hours created invoice due net 30 become past due 31 days exactly defaults `0` default 0 type int name net terms id 55821f1f6f8ec90d00cf1a6a ref body required false id 55821f1f6f8ec90d00cf1a69 ref body required false desc optional notes field attach po number invoice default type string name po number id 55821f1f6f8ec90d00cf1a68 ref body required false desc optional field used needing bypass 60 second limit creating subscriptions used creating subscriptions bulk api set 'true' 'false' defaults 'false' default false type boolean name bulk name terms conditions id 55821f1f6f8ec90d00cf1a67 ref body required false desc optional notes field default terms conditions text specified invoice settings page recurly admin specify custom notes tag add override terms conditions custom notes stay subscription renewals default type string ref body required false desc optional notes field default customer notes text specified invoice settings page recurly admin specify custom notes tag add override customer notes custom notes stay subscription renewals default type string name customer notes id 55821f1f6f8ec90d00cf1a66 default type string name vat reverse charge notes id 55821f1f6f8ec90d00cf1a65 ref body required false desc vat reverse charge notes appear eu vat enabled using avalara avatax account customer eu vat number different country default vat reverse charge notes text specified tax settings page recurly admin unless custom notes created original subscription specify custom notes tag add override vat reverse charge notes custom notes stay subscription renewals body required false desc merchants importing recurring subscriptions paid ach recurly backdate subscription 's authorization attribute using iso 8601 \\( https en wikipedia org wiki iso 8601 \\) timestamp timestamp used alerting customers reauthorize 3 years accordance nacha rules subscription becomes inactive billing info longer bank account timestamp cleared default type timestamp name bank account authorized id 55821f1f6f8ec90d00cf1a64 ref desc optional field setting revenue schedule type determine revenue associated subscription recognized creating subscription available schedule types `never` `evenly` `at range start` `at range end` `revenue schedule type` set subscription inherit `revenue schedule type` plan default type string name revenue schedule type id 578f7d753d04570e00976ee0 ref body required false name shipping address id 580179efafccf00f00604e21 ref body required false desc optional nested object use want create new shipping address new subscription nested object contains information account shipping address `first name` `last name` `company name` `email` `phone` `vat number` `address1` `address2` `city` `state` `zip` `country` `nickname` providing shipping address following required first name last name address1 city state zip country default type object type string name shipping address id id 580179efafccf00f00604e20 ref body required false desc optional field use want associate existing shipping address new subscription default desc optional nested object redeem gift card default type object name gift card id 583dea921fa61e2d00dafd49 ref body required false name redemption code id 583dea921fa61e2d00dafd48 ref body required false desc redemption code gift card redeemed default type string results codes status 201 language xml code subscription href https subdomain recurly com v2 subscriptions 37bfe445e10e91512fec6d491a9c3a53 n account href https subdomain recurly com v2 accounts 1 n redemptions href https subdomain recurly com v2 subscriptions 37bfe445e10e91512fec6d491a9c3a53 redemptions n invoice href https subdomain recurly com v2 invoices 1000 n shipping address href https subdomain recurly com v2 accounts 1 shipping addresses 1 n plan href https subdomain recurly com v2 plans gold n plan code gold plan code n name gold plan name n plan n revenue schedule type evenly revenue schedule type n uuid 37bfe445e10e91512fec6d491a9c3a53 uuid n state active state n unit amount cents type integer 4500 unit amount cents n currency eur currency n quantity type integer 1 quantity n activated type datetime 2016 08 03t15 50 09z activated n canceled nil nil n expires nil nil n updated type datetime 2016 08 03t15 50 10z updated n total billing cycles nil nil n remaining billing cycles nil nil n current period started type datetime 2016 08 03t15 50 09z current period started n current period ends type datetime 2016 09 03t15 50 09z current period ends n trial started nil nil n trial ends nil nil n terms conditions nil nil n customer notes nil nil n tax cents type integer 394 tax cents n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n po number nil nil n net terms type integer 0 net terms n collection method automatic collection method n billing info reason plan free trial billing info reason n subscription add ons type array n subscription add ons n name cancel href https subdomain recurly com v2 subscriptions 37bfe445e10e91512fec6d491a9c3a53 cancel method put n name terminate href https subdomain recurly com v2 subscriptions 37bfe445e10e91512fec6d491a9c3a53 terminate method put n name postpone href https subdomain recurly com v2 subscriptions 37bfe445e10e91512fec6d491a9c3a53 postpone method put n name notes href https subdomain recurly com v2 subscriptions 37bfe445e10e91512fec6d491a9c3a53 notes method put n subscription name name expired invalid coupon status 400 language xml code errors n error field subscription coupon code symbol invalid invalid error n errors code errors n transaction error n error code declined saveable error code n error category soft error category n merchant message transaction declined without specific information please contact payment gateway details ask customer contact bank merchant message n customer message transaction declined please use different card contact bank customer message n gateway error code nil nil n transaction error n error field subscription account base symbol declined saveable transaction declined please use different card contact bank error n transaction href https subdomain recurly com v2 transactions 3c42a3ecc46a7aa602602e4033b9c2e6 type credit card n account href https subdomain recurly com v2 accounts 1 n subscription href https subdomain recurly com v2 subscriptions 3c42a3ebabdc022739d5a646408291a6 n uuid 3c42a3ecc46a7aa602602e4033b9c2e6 uuid n action purchase action n amount cents type integer 5274 amount cents n tax cents type integer 424 tax cents n currency eur currency n status declined status n payment method credit card payment method n reference 3383506 reference n source subscription source n recurring type boolean false recurring n test type boolean true test n voidable type boolean false voidable n refundable type boolean false refundable n ip address 127 0 0 1 ip address n transaction error n error code declined saveable error code n error category soft error category n merchant message transaction declined without specific information please contact payment gateway details ask customer contact bank merchant message n customer message transaction declined please use different card contact bank customer message n gateway error code nil nil n transaction error n cvv result code nil nil n avs result code nil nil n avs result street nil nil n avs result postal nil nil n created type datetime 2017 03 15t21 21 16z created n updated type datetime 2017 03 15t21 21 16z updated n details n account n account code 1 account code n first name verena first name n last name example last name n company new company name company n email verena example com email n billing info type credit card n first name verena first name n last name example last name n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n vat number nil nil n card type visa card type n year type integer 2019 year n month type integer 12 month n first six 400000 first six n last four 0341 last four n billing info n account n details n transaction n errors language xml status 422 settings url subscriptions auth required examples codes language php code \\? php n ntry n subscription new recurly subscription \\( \\) n subscription plan code 'gold' n subscription currency 'eur' n n account new recurly account \\( \\) n account account code 'b6f5783' n account email 'verena example com' n account first name 'verena' n account last name 'example' n n billing info new recurly billinginfo \\( \\) n billing info number '4111 1111 1111 1111' n billing info month 12 n billing info year 2019 n billing info verification value '123' n billing info address1 '400 alabama st' n billing info city 'san francisco' n billing info state 'ca' n billing info country 'us' n billing info zip '94110' n n account billing info billing info n subscription account account n n subscription create \\( \\) n n print subscription subscription n catch \\( recurly validationerror e \\) n print invalid plan subscription account billinginfo data e n name language ruby code subscription recurly subscription create \\( n plan code 'gold' n currency 'eur' n customer notes 'thank business n account n account code '1' n email 'verena example com' n first name 'verena' n last name 'example' n billing info n number '4111 1111 1111 1111' n month 1 n year 2014 n n n shipping address n nickname 'work' n first name 'verena' n last name 'example' n company 'recurly inc' n phone '555 222 1212' n email 'verena example com' n address1 '123 main st n address2 'suite 101' n city 'san francisco' n state 'ca' n zip '94105' n country 'us' n n \\) language python code subscription subscription \\( \\) nsubscription plan code 'gold' nsubscription currency 'eur' n naccount account \\( account code '1' \\) naccount email 'verena example com' naccount first name 'verena' naccount last name 'example' n nbilling info billinginfo \\( \\) nbilling info number '4111 1111 1111 1111' nbilling info month 12 nbilling info year 2019 n naccount billing info billing info nsubscription account account n nsubscription save \\( \\) language csharp code var account accounts get \\( 1 \\) account contains billinginfo nvar plan plans get \\( gold \\) nvar subscription new subscription \\( account plan usd \\) account plan currency nsubscription create \\( \\) code subscription n plan code gold plan code n currency eur currency n account n account code 1 account code n email verena example com email n first name verena first name n last name example last name n billing info n number 4111 1111 1111 1111 number n month 1 month n year 2019 year n billing info n account n shipping address n nickname work nickname n first name verena first name n last name example last name n company recurly inc company n phone 555 222 1212 phone n email verena example com email n address1 123 main st address1 n address2 suite 101 address2 n city san francisco city n state ca state n zip 94105 zip n country us country n shipping address n subscription language xml method post type post updates 57f514d4531675240061da91 parentdoc null slug create subscription sync unique user 556790090145bc23008e3bf8 version 5919d93785b2570f00e41c39 isreference true link external false body block api header n n type basic n title subscription starts date n n block nif would like subscription start specified date please set `trial ends at` parameter api request recurly ignore trial period currently specified plan begin charging subscription date specified useful creating custom trial intervals importing existing subscriptions external system n block api header n n type basic n title creating account simultaneously n n block nto avoid paying multiple transaction fees recurly allows create subscription account billing information one api call way billing information validated charging subscription n block api header n n type basic n title using stored billing info n n block nyou may create subscription without specifying billing information account already stored billing information n block api header n n type basic n title redeeming coupon n n block nredeem coupon codes within create subscription action convenience way make sure coupon redeemed subscription transaction successful n nif redeeming one coupon pass coupon code n n``` n coupon code special1 coupon code n``` n nif want redeem multiple coupons use following format n n``` n coupon codes n coupon code special1 coupon code n coupon code special2 coupon code n coupon codes n``` n nnote must multiple coupons per account enabled coupon settings order redeem multiple coupons create subscription action n nthe coupon must eligible charges include plan subscription creating coupon redemption resource subscription automatically tied subscription upon successful redemption n nif redeeming free trial coupon also setting trial ends request subscriptions trial follow trial ends coupon rules n block api header n n type basic n title redeeming gift card n n block nredeem gift card redemption code within create subscription action convenience way make sure gift card redeemed subscription transaction successful one gift card redemption code redeemed request n nexample xml request n n``` n gift card n redemption code jhd776jenn99e6dd redemption code n gift card n``` n nnote subscription response include information gift card add two new parameters `started gift` `converted at` childrenpages postcreate subscriptionbody paramsplan code requiredstringplan code subscription account requiredobjectnested account attributes currency requiredstringcurrency subscription subscription add ons array mixednested add ons coupon code stringoptional coupon code redeem account discount subscription please note subscription request fail coupon invalid unit amount cents integeroverride unit amount subscription plan setting value cents provided subscription inherit price subscription plan provided currency max 10000000 quantity integer1optionally override default quantity 1 trial ends datetimeif set overrides default trial behavior subscription must date time preferably utc date must future starts datetimeif set subscription begin future date subscription apply setup fee trial period unless plan trial total billing cycles integerrenews subscription specified number cycles automatically cancels defaults subscription renewing indefinitely first renewal date datetimeindicates date first renewal occur subsequent renewals offset date first invoice prorated appropriately customer pays portion first billing period subscription applies useful forcing subscription renew first month collection method stringoptional field set collection invoice `automatic` `manual` default `automatic` 's set net terms integer0integer representing number days invoice 's creation invoice become past due invoice 's net terms set `0` due 'on receipt' become past due 24 hours created invoice due net 30 become past due 31 days exactly defaults `0` po number stringoptional notes field attach po number invoice bulk booleanfalseoptional field used needing bypass 60 second limit creating subscriptions used creating subscriptions bulk api set 'true' 'false' defaults 'false' terms conditions stringoptional notes field default terms conditions text specified invoice settings page recurly admin specify custom notes tag add override terms conditions custom notes stay subscription renewals customer notes stringoptional notes field default customer notes text specified invoice settings page recurly admin specify custom notes tag add override customer notes custom notes stay subscription renewals vat reverse charge notes stringvat reverse charge notes appear eu vat enabled using avalara avatax account customer eu vat number different country default vat reverse charge notes text specified tax settings page recurly admin unless custom notes created original subscription specify custom notes tag add override vat reverse charge notes custom notes stay subscription renewals bank account authorized timestampmerchants importing recurring subscriptions paid ach recurly backdate subscription 's authorization attribute using iso 8601 \\( https en wikipedia org wiki iso 8601 \\) timestamp timestamp used alerting customers reauthorize 3 years accordance nacha rules subscription becomes inactive billing info longer bank account timestamp cleared revenue schedule type stringoptional field setting revenue schedule type determine revenue associated subscription recognized creating subscription available schedule types `never` `evenly` `at range start` `at range end` `revenue schedule type` set subscription inherit `revenue schedule type` plan shipping address objectoptional nested object use want create new shipping address new subscription nested object contains information account shipping address `first name` `last name` `company name` `email` `phone` `vat number` `address1` `address2` `city` `state` `zip` `country` `nickname` providing shipping address following required first name last name address1 city state zip country shipping address id stringoptional field use want associate existing shipping address new subscription gift card objectoptional nested object redeem gift card redemption code stringthe redemption code gift card redeemed subscription starts date would like subscription start specified date please set parameter api request recurly ignore trial period currently specified plan begin charging subscription date specified useful creating custom trial intervals importing existing subscriptions external system creating account simultaneously avoid paying multiple transaction fees recurly allows create subscription account billing information one api call way billing information validated charging subscription using stored billing info may create subscription without specifying billing information account already stored billing information redeeming coupon redeem coupon codes within create subscription action convenience way make sure coupon redeemed subscription transaction successful redeeming one coupon pass coupon code want redeem multiple coupons use following format note must multiple coupons per account enabled coupon settings order redeem multiple coupons create subscription action coupon must eligible charges include plan subscription creating coupon redemption resource subscription automatically tied subscription upon successful redemption redeeming free trial coupon also setting trial ends request subscriptions trial follow trial ends coupon rules redeeming gift card redeem gift card redemption code within create subscription action convenience way make sure gift card redeemed subscription transaction successful one gift card redemption code redeemed request example xml request note subscription response include information gift card add two new parameters edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format201 created400 expired invalid coupon422 unprocessable entity id 5919d93c85b2570f00e41c7d v 0 order 4 sync unique type post githubsync link url version 5919d93785b2570f00e41c39 createdat 2015 06 18t19 27 16 499z hidden false link external false project 555fbba928249c1900618a82 updates 561d55d831d9630d001eb5d6 slug subscription add ons api settings url subscriptions auth required examples codes language php code \\? php n ntry n subscription new recurly subscription \\( \\) n subscription plan code 'gold' n subscription currency 'eur' n n account new recurly account \\( \\) n account account code 'b6f5783' n account email 'verena example com' n account first name 'verena' n account last name 'example' n n billing info new recurly billinginfo \\( \\) n billing info number '4111 1111 1111 1111' n billing info month 12 n billing info year 2017 n billing info verification value 123 n billing info address1 '400 alabama st' n billing info city 'san francisco' n billing info state 'ca' n billing info country 'us' n billing info zip '94110' n n account billing info billing info n subscription account account n n existing addon n addon1 new recurly subscriptionaddon \\( \\) n addon1 add code 'extra users' n addon1 quantity 2 n addon1 unit amount cents 1000 n n existing addon n addon2 new recurly subscriptionaddon \\( \\) n addon2 add code 'extra ips' n addon2 quantity 3 n addon2 unit amount cents 100 n n subscription subscription add ons array \\( addon1 addon2 \\) n n subscription create \\( \\) n n print subscription subscription n catch \\( recurly validationerror e \\) n print invalid plan subscription account addon billinginfo data e n name language ruby code addon1 recurly subscriptionaddon new \\( 'extra users' \\) naddon1 quantity 2 n naddon2 recurly subscriptionaddon new \\( 'extra ips' \\) naddon2 quantity 3 n nsubscription recurly subscription create \\( n plan code 'gold' n currency 'eur' n subscription add ons n taddon1 n taddon2 n n account n account code '1' n email 'verena example com' n first name 'verena' n last name 'example' n billing info n number '4111 1111 1111 1111' n month 1 n year 2014 n n n \\) language python code subscription subscription \\( \\) nsubscription plan code 'gold' nsubscription currency 'eur' n naccount account \\( account code '1' \\) naccount email 'verena example com' naccount first name 'verena' naccount last name 'example' n nbilling info billinginfo \\( \\) nbilling info number '4111 1111 1111 1111' nbilling info month 1 nbilling info year 2014 n naccount billing info billing info nsubscription account account n naddon1 subscriptionaddon \\( \\) naddon1 add code 'extra users' naddon1 quantity 2 n naddon2 subscriptionaddon \\( \\) naddon2 add code 'extra ips' naddon2 quantity 3 n nsubscription subscription add ons addon1 addon2 n nsubscription save \\( \\) language csharp code var account accounts get \\( 1 \\) nvar plan plans get \\( gold \\) nvar subscription new subscription \\( account plan usd \\) account plan currency nsubscription addons add \\( extra users 2 \\) nsubscription addons add \\( plan getaddon \\( extra ips 3 \\) \\) nsubscription create \\( \\) language xml code subscription n plan code gold plan code n currency eur currency n subscription add ons n subscription add n add code ipaddresses add code n quantity 2 quantity n unit amount cents 1000 unit amount cents n subscription add n subscription add n add code video streaming add code n subscription add n subscription add ons n account n account code 1 account code n account n subscription method post params id 55833b1181672a3900bb5117 ref body required true desc code add default type string name add code name unit amount cents id 55833b1181672a3900bb5116 ref body required false desc amount transaction cents max 10000000 default type int ref body required false desc optionally override default quantity 1 default 1 type int name quantity id 55833b1181672a3900bb5115 body required false desc `add type usage` `usage type percentage` set custom `usage percentage` subscription add must 0 0000 100 0000 default type string name usage percentage id 57243a8ceae5090e00ee6261 ref required false desc optional field setting revenue schedule type determine revenue associated subscription add recognized creating subscription add available schedule types `never` `evenly` `at range start` `at range end` `revenue schedule type` set subscription add inherit `revenue schedule type` plan add default type string name revenue schedule type id 579143fe7feea81700e5ab31 ref body results codes language xml status 201 name code subscription href https subdomain recurly com v2 subscriptions 37bfe9fb2da6049b5c16ae4166814eca n account href https subdomain recurly com v2 accounts 1 n invoice href https subdomain recurly com v2 invoices 1001 n plan href https subdomain recurly com v2 plans gold n plan code gold plan code n name gold plan name n plan n revenue schedule type evenly revenue schedule type n uuid 37bfe9fb2da6049b5c16ae4166814eca uuid n state active state n unit amount cents type integer 4500 unit amount cents n currency eur currency n quantity type integer 1 quantity n activated type datetime 2016 08 03t15 56 24z activated n canceled nil nil n expires nil nil n updated type datetime 2016 08 03t15 56 24z updated n total billing cycles nil nil n remaining billing cycles nil nil n current period started type datetime 2016 08 03t15 56 24z current period started n current period ends type datetime 2016 09 03t15 56 24z current period ends n trial started nil nil n trial ends nil nil n terms conditions nil nil n customer notes nil nil n tax cents type integer 569 tax cents n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n po number nil nil n net terms type integer 0 net terms n collection method automatic collection method n billing info reason plan free trial billing info reason n subscription add ons type array n subscription add n add type fixed add type n add code ipaddresses add code n unit amount cents type integer 1000 unit amount cents n quantity type integer 2 quantity n subscription add n subscription add n add type usage add type n measured unit href https subdomain recurly com v2 measured units 450622522661012652 n usage href https subdomain recurly com v2 subscriptions 37bfe9fb2da6049b5c16ae4166814eca add ons video streaming usage n add code video streaming add code n unit amount cents type integer 45 unit amount cents n quantity type integer 1 quantity n usage type price usage type n usage percentage nil nil n subscription add n subscription add ons n name cancel href https subdomain recurly com v2 subscriptions 37bfe9fb2da6049b5c16ae4166814eca cancel method put n name terminate href https subdomain recurly com v2 subscriptions 37bfe9fb2da6049b5c16ae4166814eca terminate method put n name postpone href https subdomain recurly com v2 subscriptions 37bfe9fb2da6049b5c16ae4166814eca postpone method put n name notes href https subdomain recurly com v2 subscriptions 37bfe9fb2da6049b5c16ae4166814eca notes method put n subscription body full list subscription parameters see full subscriptions endpoint documentation \\( https docs recurly com subscriptions \\) category 5919d93885b2570f00e41c4a excerpt isreference true next pages description parentdoc null title create subscription add ons user 556790090145bc23008e3bf8 childrenpages postcreate subscription add onsbody paramsadd code requiredstringthe code add unit amount cents integeramount transaction cents max 10000000 quantity integer1optionally override default quantity 1usage percentage stringif `add type usage` `usage type percentage` set custom `usage percentage` subscription add must 0 0000 100 0000 revenue schedule type stringoptional field setting revenue schedule type determine revenue associated subscription add recognized creating subscription add available schedule types `never` `evenly` `at range start` `at range end` `revenue schedule type` set subscription add inherit `revenue schedule type` plan add full list subscription parameters see full subscriptions endpoint documentation edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format201 created id 5919d93c85b2570f00e41c7e body block callout n n type info n body looking subscription pending changes new subscription details pending subscription node since immediate subscription changes take place immediately pending subscription changes show changes occurring subscription renews n title pending subscription changes n n block n n block parameters n n data n h 0 subscription parameters n h 1 description n 0 0 plan n 0 1 nested plan code plan name n 1 0 uuid n 1 1 unique subscription id n 2 0 state n 2 1 `active` `canceled` `future` `expired` n 3 0 unit amount cents n 3 1 unit amount subscription n 4 1 number units n 5 1 3 letter iso currency subscription n 6 1 date subscription started n 7 1 date subscription marked canceled n 8 1 date subscription end \\( state `canceled` \\) ended \\( state `expired` \\) n 9 1 date current bill cycle started n 10 1 date current bill cycle end n 11 1 date trial started applicable n 12 1 date trial ended applicable n 13 1 amount tax vat within transaction cents n 14 1 tax type vat vat usst us sales tax n 15 1 region taxes applied n 16 1 tax rate applied subscription n 17 1 po number reference n 18 1 invoice net terms days n 19 1 invoice collection automatic manual n 20 1 nested list add ons subscription applicable n 21 1 nested information pending subscription change renewal n 22 1 optional notes field default terms conditions text specified invoice settings page recurly admin specify custom notes tag add override terms conditions custom notes stay subscription renewals n 23 1 optional notes field default customer notes text specified invoice settings page recurly admin specify custom notes tag add override customer notes custom notes stay subscription renewals n 24 1 recurring subscriptions paid ach attribute iso8601 timestamp value timestamp used alerting customers reauthorize 3 years accordance nacha rules subscription becomes inactive billing info longer bank account timestamp cleared attribute exist n 25 1 nested information new plan n 26 1 new subscription 's unit amount cents n 27 1 new subscription quantity n 28 1 nested list add ons n 28 0 subscription add ons n 27 0 quantity n 25 0 plan n 26 0 unit amount cents n 24 0 bank account authorized n 23 0 customer notes n 22 0 terms conditions n 21 0 pending subscription n 20 0 subscription add ons n 19 0 collection method n 18 0 net terms n 17 0 po number n 16 0 tax rate n 15 0 tax region n 14 0 tax type n 13 0 tax cents n 12 0 trial ends n 11 0 trial started n 10 0 current period ends n 9 0 current period started n 8 0 expires n 7 0 canceled n 6 0 activated n 5 0 currency n 4 0 quantity n 29 0 started gift n 29 1 true subscription started gift card n 30 0 converted n 30 1 timestamp representing subscription converted gift card n n cols 2 n rows 31 n n block category 5919d93885b2570f00e41c4a excerpt lookup subscription 's details title lookup subscription type get v 0 api method get params required true desc subscription 's unique identifier default type string name uuid id 5783cda85cbce30e0074e228 ref path results codes name code subscription href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 n account href https subdomain recurly com v2 accounts 1 n invoice href https subdomain recurly com v2 invoices 1006 n plan href https subdomain recurly com v2 plans gold n plan code gold plan code n name gold plan name n plan n uuid 374ae5e848adcfd332fdd3469d89c888 uuid n state active state n unit amount cents type integer 4500 unit amount cents n currency eur currency n quantity type integer 1 quantity n activated type datetime 2016 07 11t22 36 22z activated n canceled nil nil n expires nil nil n updated type datetime 2016 07 11t22 36 22z updated n total billing cycles nil nil n remaining billing cycles nil nil n current period started type datetime 2016 07 11t22 36 22z current period started n current period ends type datetime 2016 08 11t22 36 22z current period ends n trial started nil nil n trial ends nil nil n terms conditions nil nil n customer notes nil nil n tax cents type integer 394 tax cents n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n po number nil nil n net terms type integer 0 net terms n collection method automatic collection method n billing info reason plan free trial billing info reason n subscription add ons type array n subscription add ons n name cancel href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 cancel method put n name terminate href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 terminate method put n name postpone href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 postpone method put n name notes href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 notes method put n subscription language xml status 200 settings url subscriptions uuid auth required examples codes language php code \\? php n ntry n subscription recurly subscription get \\( '44f83d7cba354d5b84812419f923ea96' \\) n n print subscription subscription n catch \\( recurly notfounderror e \\) n print subscription found e n name code subscription recurly subscription find \\( '44f83d7cba354d5b84812419f923ea96' \\) language ruby language python code subscription subscription get \\( '44f83d7cba354d5b84812419f923ea96' \\) language csharp code var subscription subscriptions get \\( 44f83d7cba354d5b84812419f923ea96 \\) hidden false link external false link url order 5 updates user 556790090145bc23008e3bf8 githubsync isreference true next pages description slug lookup subscription details sync unique createdat 2015 06 18t01 22 21 025z parentdoc null project 555fbba928249c1900618a82 version 5919d93785b2570f00e41c39 childrenpages getlookup subscriptionlookup subscription 's details path paramsuuid requiredstringsubscription 's unique identifier pending subscription changes looking subscription pending changes new subscription details pending subscription node since immediate subscription changes take place immediately pending subscription changes show changes occurring subscription renews subscription parameters description plan nested plan code plan name uuid unique subscription id state unit amount cents unit amount subscription quantity number units currency 3 letter iso currency subscription activated date subscription started canceled date subscription marked canceled expires date subscription end \\( state \\) ended \\( state \\) current period started date current bill cycle started current period ends date current bill cycle end trial started date trial started applicable trial ends date trial ended applicable tax cents amount tax vat within transaction cents tax type tax type vat vat usst us sales tax tax region region taxes applied tax rate tax rate applied subscription po number po number reference net terms invoice net terms days collection method invoice collection automatic manual subscription add ons nested list add ons subscription applicable pending subscription nested information pending subscription change renewal terms conditions optional notes field default terms conditions text specified invoice settings page recurly admin specify custom notes tag add override terms conditions custom notes stay subscription renewals customer notes optional notes field default customer notes text specified invoice settings page recurly admin specify custom notes tag add override customer notes custom notes stay subscription renewals bank account authorized recurring subscriptions paid ach attribute iso8601 timestamp value timestamp used alerting customers reauthorize 3 years accordance nacha rules subscription becomes inactive billing info longer bank account timestamp cleared attribute exist plan nested information new plan unit amount cents new subscription 's unit amount cents quantity new subscription quantity subscription add ons nested list add ons started gift true subscription started gift card converted timestamp representing subscription converted gift card edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d93c85b2570f00e41c7f api examples codes language php code \\? php n ntry n subscription recurly subscription get \\( '2fe8c7aeb72f0257541b89405383ad69' \\) n subscription unit amount cents 1000 n subscription preview \\( \\) n foreach \\( subscription invoice line items adjustment \\) n print r \\( adjustment \\) n n n print subscription subscription n catch \\( recurly notfounderror e \\) n print subscription found e n name language ruby code subscription recurly subscription find \\( '44f83d7cba354d5b84812419f923ea96' \\) nsubscription unit amount cents 1000 nsubscription shipping address n nickname 'work' n first name 'verena' n last name 'example' n company 'recurly inc' n phone '555 222 1212' n email 'verena example com' n address1 '123 main st n address2 'suite 101' n city 'grand rapids' n state 'mi' n zip '49506' n country 'us' n nsubscription preview nsubscription invoice line items line item n puts line item nend language python code subscription subscription get \\( '44f83d7cba354d5b84812419f923ea96' \\) nsubscription unit amount cents 1000 nsubscription preview \\( \\) n nfor line item sub invoice line items n print line item code subscription n unit amount cents 100 unit amount cents n shipping address n nickname work nickname n first name verena first name n last name example last name n company recurly inc company n phone 555 222 1212 phone n email verena example com email n address1 123 main st address1 n address2 suite 101 address2 n city grand rapids city n state mi state n zip 49506 zip n country us country n shipping address n subscription language xml language csharp code var subscription subscriptions get \\( 44f83d7cba354d5b84812419f923ea96 \\) nsubscription quantity 2 n nsubscription preview \\( \\) method post params default type int name unit amount cents id 558312deea39a93900224360 ref body required true desc new unit amount cents default type string name timeframe id 558312deea39a93900224363 ref body required false desc set either `now` immediate `renewal` perform subscription renews defaults `now` default type string name plan code id 558312deea39a93900224362 ref body required false desc new plan remains unchanged specified body required false desc new quantity remains unchanged specified `plan code` remains default type int name quantity id 558312deea39a93900224361 ref desc optional field set collection invoice `automatic` `manual` default `automatic` default automatic type string name collection method id 558312deea39a9390022435f ref body required false name subscription add ons id 558312deea39a9390022435e ref body required false desc nested add information subscription new subscription add ons unless specified default type object type string name uuid id 578d1abfbd9f40200058dcd1 ref path required true desc subscription 's unique identifier default desc optional field setting revenue schedule type determine revenue associated subscription recognized creating subscription available schedule types `never` `evenly` `at range start` `at range end` `revenue schedule type` set subscription inherit `revenue schedule type` plan default type string name revenue schedule type id 57a2174dafc3050e000cf3d5 ref body required false results codes name code subscription href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 n account href https subdomain recurly com v2 accounts 1 n address n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n address n plan href https subdomain recurly com v2 plans gold n plan code gold plan code n name gold plan name n plan n revenue schedule type evenly revenue schedule type n uuid 37bfef7a8e44cfc3817b7a43eba8a6e6 uuid n state active state n unit amount cents type integer 100 unit amount cents n currency eur currency n quantity type integer 1 quantity n activated type datetime 2016 08 03t16 02 24z activated n canceled nil nil n expires nil nil n updated type datetime 2016 08 03t16 02 24z updated n total billing cycles nil nil n remaining billing cycles nil nil n current period started type datetime 2016 08 03t16 02 24z current period started n current period ends type datetime 2016 09 03t16 02 24z current period ends n trial started nil nil n trial ends nil nil n terms conditions nil nil n customer notes nil nil n cost cents type integer 109 cost cents n tax cents type integer 9 tax cents n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n po number nil nil n net terms type integer 0 net terms n collection method automatic collection method n billing info reason plan free trial billing info reason n subscription add ons type array n subscription add ons n invoice href n account href https subdomain recurly com v2 accounts 1 n address n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n address n shipping address n name verena example name n address1 123 main st address1 n address2 suite 101 address2 n city grand rapids city n state mi state n zip 49506 zip n country us country n phone 555 222 1212 phone n shipping address n uuid 37bff127995e4e088dc50845779661f6 uuid n state open state n invoice number prefix n invoice number nil nil n po number nil nil n vat number nil nil n subtotal cents type integer 100 subtotal cents n tax cents type integer 346 tax cents n total cents type integer 0 total cents n currency eur currency n created nil nil n updated nil nil n closed nil nil n terms conditions nil nil n customer notes nil nil n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n net terms type integer 0 net terms n collection method automatic collection method n line items type array n invoice detail includes proration amounts applicable n line items n transactions type array n transactions n invoice n subscription n language xml status 201 settings url subscriptions uuid preview auth required hidden false parentdoc null sync unique updates 55f06bb310cacb23007bfcb6 56423d5e38e37e0d0049ff17 createdat 2015 06 18t18 50 06 036z link external false link url next pages description version 5919d93785b2570f00e41c39 v 0 category 5919d93885b2570f00e41c4a excerpt returns preview subscription change applied account without committing subscription change posting invoice githubsync isreference true project 555fbba928249c1900618a82 title preview subscription change type post user 556790090145bc23008e3bf8 body block callout n n type warning n title free trials n body subscriptions trial generate invoice immediate change due subscription change preview subscription trial return invoice object n n block order 6 slug preview subscription change childrenpages postpreview subscription changereturns preview subscription change applied account without committing subscription change posting invoice path paramsuuid requiredstringsubscription 's unique identifier body paramsunit amount cents requiredintegernew unit amount cents timeframe stringnowset either `now` immediate `renewal` perform subscription renews defaults `now` plan code stringnew plan remains unchanged specified quantity integernew quantity remains unchanged specified `plan code` remains collection method stringautomaticoptional field set collection invoice `automatic` `manual` default `automatic` subscription add ons objectnested add information subscription new subscription add ons unless specified revenue schedule type stringoptional field setting revenue schedule type determine revenue associated subscription recognized creating subscription available schedule types `never` `evenly` `at range start` `at range end` `revenue schedule type` set subscription inherit `revenue schedule type` plan free trials subscriptions trial generate invoice immediate change due subscription change preview subscription trial return invoice object edit pagesuggest editsdefinition api url page api url examplesphprubypythonxmlc result format201 created id 5919d93c85b2570f00e41c80 hidden false type put user 556790090145bc23008e3bf8 v 0 api auth required examples codes name code \\? php n ntry n subscription recurly subscription get \\( '2fe8c7aeb72f0257541b89405383ad69' \\) n subscription plan code 'silver' n subscription quantity 2 n subscription updateimmediately \\( \\) update immediately n subscription updateatrenewal \\( \\) update subscription renews n n print subscription subscription n catch \\( recurly validationerror e \\) n print invalid subscription data e n catch \\( recurly notfounderror e \\) n print subscription found e n language php code subscription recurly subscription find \\( '44f83d7cba354d5b84812419f923ea96' \\) nsubscription update attributes \\( n plan code 'silver' n quantity 2 n timeframe 'now' update immediately n timeframe 'renewal' update subscription renews n \\) language ruby code subscription subscription get \\( '44f83d7cba354d5b84812419f923ea96' \\) nsubscription plan code 'silver' nsubscription quantity 2 nsubscription timeframe 'now' update immediately n subscription timeframe 'renewal' update subscription renews nsubscription save \\( \\) language python code var subscription subscriptions get \\( 44f83d7cba354d5b84812419f923ea96 \\) nsubscription plan plans get \\( silver \\) nsubscription quantity 2 n n perform update operation nsubscription changesubscription \\( subscription changetimeframe \\) n n might also use subscription changetimeframe renewal language csharp language xml code subscription n timeframe timeframe n quantity 2 quantity n subscription add ons n subscription add n add code ipaddresses add code n quantity 10 quantity n unit amount cents 150 unit amount cents n subscription add n subscription add ons n coupon code special coupon code n subscription method put params body required false desc `now` immediate `renewal` perform subscription renews defaults `now` default type string name timeframe id 558222616f8ec90d00cf1a89 ref desc new plan remains unchanged specified default type string name plan code id 558222616f8ec90d00cf1a88 ref body required false name quantity id 558222616f8ec90d00cf1a87 ref body required false desc new quantity remains unchanged specified `plan code` remains default type int ref body required false desc new unit amount cents default type int name unit amount cents id 558222616f8ec90d00cf1a86 default automatic type string name collection method id 558222616f8ec90d00cf1a85 ref body required false desc optional field set collection invoice `automatic` `manual` default `automatic` always change immediately even `timeframe` `renewal` body required false desc integer representing number days invoice 's creation invoice become past due invoice 's net terms set `0` due 'on receipt' become past due 24 hours created invoice due net 30 become past due 31 days exactly always change immediately even `timeframe` `renewal` default type int name net terms id 558222616f8ec90d00cf1a84 ref required false desc optional notes field attach po number invoice always change immediately even `timeframe` `renewal` default type string name po number id 558222616f8ec90d00cf1a83 ref body ref body required false desc nested add information subscription new subscription add ons unless specified default type array mixed name subscription add ons id 558222616f8ec90d00cf1a82 default type string name coupon code id 56549f46892a0d2b00cedc02 ref body required false desc coupon code want redeem update allowed timeframe `now` change something subscription creates invoice path required true desc subscription 's unique identifier default type string name uuid id 578d1addf5ffc72900cf8059 ref desc optional field setting revenue schedule type determine revenue associated subscription recognized creating subscription available schedule types `never` `evenly` `at range start` `at range end` `revenue schedule type` set subscription inherit `revenue schedule type` plan default type string name revenue schedule type id 57a217725220910e002a175b ref body required false name remaining billing cycles id 58b07df8f634c7370091579a ref body required false desc many renewals left subscription null means subscription auto renew 0 means subscription expire next renewal always change immediately even `timeframe` `renewal` default type int results codes name status 200 language xml code subscription href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 n account href https subdomain recurly com v2 accounts 1 n invoice href https subdomain recurly com v2 invoices 1008 n plan href https subdomain recurly com v2 plans gold n plan code gold plan code n name gold plan name n plan n uuid 374ae5e848adcfd332fdd3469d89c888 uuid n state active state n unit amount cents type integer 4500 unit amount cents n currency eur currency n quantity type integer 2 quantity n activated type datetime 2016 07 11t22 36 22z activated n canceled nil nil n expires nil nil n updated type datetime 2016 07 14t22 23 41z updated n total billing cycles nil nil n remaining billing cycles nil nil n current period started type datetime 2016 07 11t22 36 22z current period started n current period ends type datetime 2016 08 11t22 36 22z current period ends n trial started nil nil n trial ends nil nil n terms conditions nil nil n customer notes nil nil n tax cents type integer 919 tax cents n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n po number nil nil n net terms type integer 0 net terms n collection method automatic collection method n billing info reason plan free trial billing info reason n subscription add ons type array n subscription add n add type fixed add type n add code ipaddresses add code n unit amount cents type integer 150 unit amount cents n quantity type integer 10 quantity n subscription add n subscription add ons n name cancel href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 cancel method put n name terminate href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 terminate method put n name postpone href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 postpone method put n name notes href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 notes method put n subscription settings url subscriptions uuid excerpt request update subscription takes place immediately renewal isreference true next pages description project 555fbba928249c1900618a82 updates 55b674bc6127b12500364486 56549c0065db492100d035d1 5730ae4526bd5a3600d337c3 5833328741acff0f00ab5228 version 5919d93785b2570f00e41c39 body block callout n n type danger n title updating canceled subscriptions n body need update canceled subscription need first reactivate subscription update call look canceled subscription state know need reactivate call first n nwhile changing canceled subscription may reactivate subscription cases scenarios reactivate subscription recommend allowing changes canceled subscription n nif submit renewal change canceled subscription reactivate subscription expire renewal n n block n n block api header n n type basic n title timeframe n n block nthe timeframe parameter controls upgrade downgrade takes place subscription change occur subscription renews generally 're performing upgrade want change occur immediately \\( \\) 're performing downgrade set timeframe renewal change takes affect end current billing cycle n nthe timeframe control applies changes subscription 's products non product changes always applied immediately changes option applying renewal `plan code` `quantity` `unit amount cents` `subscription add ons` n block callout n n type danger n title updating refunded subscriptions n body recurly reconcile invoice payments subscription requests subscription refund current billing cycle updates timeframe always credit customer refund never existed updates timeframe renewal problem href https docs recurly com invoices subscription changes learn n n block n n block api header n n type basic n title add ons n n block nif include `subscription add ons` array request subscription 's original add ons removed unless specified update subscription request please specify add ons present subscription change include `subscription add ons` array current add ons remain subscription n block api header n n type basic n title coupons n n block nyou redeem coupon subscription update update timeframe change something else subscription triggers invoice like plan quantity price n nthe coupon must include subscription 's plan eligible charge n nyou redeem multiple coupons format n n``` n coupon codes n coupon code savemore coupon code n coupon code holidayspecial coupon code n coupon codes n``` createdat 2015 06 18t01 44 01 993z link external false parentdoc null category 5919d93885b2570f00e41c4a githubsync link url order 7 slug update subscription sync unique title update subscription childrenpages putupdate subscriptionrequest update subscription takes place immediately renewal path paramsuuid requiredstringsubscription 's unique identifier body paramstimeframe stringnow`now` immediate `renewal` perform subscription renews defaults `now` plan code stringnew plan remains unchanged specifiedquantity integernew quantity remains unchanged specified `plan code` remains unit amount cents integernew unit amount centscollection method stringautomaticoptional field set collection invoice `automatic` `manual` default `automatic` always change immediately even `timeframe` `renewal` net terms integerinteger representing number days invoice 's creation invoice become past due invoice 's net terms set `0` due 'on receipt' become past due 24 hours created invoice due net 30 become past due 31 days exactly always change immediately even `timeframe` `renewal` po number stringoptional notes field attach po number invoice always change immediately even `timeframe` `renewal` subscription add ons array mixednested add information subscription new subscription add ons unless specifiedcoupon code stringthe coupon code want redeem update allowed timeframe `now` change something subscription creates invoice revenue schedule type stringoptional field setting revenue schedule type determine revenue associated subscription recognized creating subscription available schedule types `never` `evenly` `at range start` `at range end` `revenue schedule type` set subscription inherit `revenue schedule type` plan remaining billing cycles integerhow many renewals left subscription null means subscription auto renew 0 means subscription expire next renewal always change immediately even `timeframe` `renewal` updating canceled subscriptions need update canceled subscription need first reactivate subscription update call look canceled subscription state know need reactivate call first changing canceled subscription may reactivate subscription cases scenarios reactivate subscription recommend allowing changes canceled subscription submit renewal change canceled subscription reactivate subscription expire renewal timeframe timeframe parameter controls upgrade downgrade takes place subscription change occur subscription renews generally 're performing upgrade want change occur immediately \\( \\) 're performing downgrade set timeframe renewal change takes affect end current billing cycle timeframe control applies changes subscription 's products non product changes always applied immediately changes option applying renewal updating refunded subscriptions recurly reconcile invoice payments subscription requests subscription refund current billing cycle updates timeframe always credit customer refund never existed updates timeframe renewal problem learn add ons include array request subscription 's original add ons removed unless specified update subscription request please specify add ons present subscription change include array current add ons remain subscription coupons redeem coupon subscription update update timeframe change something else subscription triggers invoice like plan quantity price coupon must include subscription 's plan eligible charge redeem multiple coupons format edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format200 ok id 5919d93c85b2570f00e41c81 api url subscriptions uuid auth required examples codes language php code \\? php n ntry n subscription recurly subscription get \\( '44f83d7cba354d5b84812419f923ea96' \\) n n add one add n n newaddon new recurly subscriptionaddon \\( \\) n newaddon add code 'my new add on' existing addon code n newaddon quantity 2 n newaddon unit amount cents 1000 n n subscription subscription add ons newaddon n n adjust quantity one add n n updateaddon subscription subscription add ons 1 n updateaddon quantity n subscription subscription add ons 1 updateaddon n n remove one add n n unset \\( subscription subscription add ons 1 \\) n n remove add ons n n subscription subscription add ons array \\( \\) n n call update n n subscription updateimmediately \\( \\) update immediately n subscription updateatrenewal \\( \\) update subscription renews n n print subscription subscription n catch \\( recurly validationerror e \\) n print invalid subscription addon data e n name language ruby code subscription recurly subscription find \\( '44f83d7cba354d5b84812419f923ea96' \\) n n n add one add n n nnewaddon recurly subscriptionaddon new \\( 'my new add on' \\) nnewaddon quantity 2 n nsubscription subscription add ons subscription subscription add ons newaddon n n n adjust quantity one add n n n create updated add naddon1 recurly subscriptionaddon new \\( 'my new add on' \\) naddon1 quantity 6 nsubscription recurly subscription find \\( '21339738efb441c3163f644c169a0849' \\) n n remove add list nsubscription subscription add ons subscription subscription add ons reject add add add code 'my new add on' n n add updated add nsubscription subscription add ons subscription subscription add ons addon1 n n n remove one add n n nsubscription subscription add ons subscription subscription add ons reject add add add code 'my new add on' n n n remove add ons n n nsubscription subscription add ons n n n call update n n nsubscription update attributes \\( n timeframe 'now' n \\) language python code subscription subscription get \\( '44f83d7cba354d5b84812419f923ea96' \\) n n n add one add n n nnewaddon subscriptionaddon \\( \\) nnewaddon add code 'my new add on' nnewaddon quantity 2 nadd ons subscription subscription add ons n n need copy old add ons nsubscription subscription add ons nfor add ons n tempaddon subscriptionaddon \\( \\) n tempaddon add code add code n tempaddon quantity quantity n tempaddon unit amount cents unit amount cents n subscription subscription add ons append \\( tempaddon \\) n n append new add nsubscription subscription add ons append \\( newaddon \\) n n n adjust quantity one add n n n need copy old add ons nadd ons subscription subscription add ons nsubscription subscription add ons nfor add ons n tempaddon subscriptionaddon \\( \\) n tempaddon add code add code n tempaddon quantity quantity n check specific add n tempaddon add code 'my new add on' n tempaddon quantity 6 n tempaddon unit amount cents unit amount cents n subscription subscription add ons append \\( tempaddon \\) n n n remove one add n n nadd ons subscription subscription add ons nsubscription subscription add ons nfor add ons n add code 'my new add on' n tempaddon subscriptionaddon \\( \\) n tempaddon add code add code n tempaddon quantity quantity n tempaddon unit amount cents unit amount cents n subscription subscription add ons append \\( tempaddon \\) n n n remove add ons n n nsubscription subscription add ons n n n n call update n n nsubscription timeframe 'now' update immediately n subscription timeframe 'renewal' update subscription renews nsubscription save \\( \\) language csharp code var subscription subscriptions get \\( 44f83d7cba354d5b84812419f923ea96 \\) n n append new add nvar addon plan getaddon \\( new add \\) nsubscription addons add \\( addon \\) n n change quantity existing add nvar existingaddon subscription addons asqueryable \\( \\) first \\( x x addoncode extra ips \\) nexistingaddon quantity 6 n n remove add nsubscription addons removeat \\( 0 \\) n n remove add ons nsubscription addons clear \\( \\) n n call update nsubscription changesubscription \\( subscription changetimeframe \\) language xml code subscription n timeframe timeframe n quantity 2 quantity n subscription add ons n subscription add n add code ipaddresses add code n quantity 10 quantity n unit amount cents 150 unit amount cents n subscription add n subscription add n add code video streaming add code n subscription add n subscription add ons n coupon code special coupon code n subscription method put params name add code id 55833c9d870ff41900de485d ref body required true desc code add default type string ref path required true desc subscription 's unique identifier default type string name uuid id 578d1be2d9c55c2000d4f228 default type int name unit amount cents id 55833c9d870ff41900de485c ref body required false desc amount transaction cents max 10000000 default type int name quantity id 55833c9d870ff41900de485b ref body required false desc optionally override default quantity 1 default type string name usage percentage id 5756de5029dbc43200abe4e3 ref body required false desc allowed usage based billing enabled site `add type` `usage` `usage type` `percentage` set custom `usage percentage` subscription add must 0 0000 100 0000 body required false desc optional field setting revenue schedule type determine revenue associated subscription add recognized creating subscription add available schedule types `never` `evenly` `at range start` `at range end` `revenue schedule type` set subscription add inherit `revenue schedule type` plan add default type string name revenue schedule type id 57a23c20cd51b22d00f62470 ref results codes status 200 language xml code subscription href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 n account href https subdomain recurly com v2 accounts 1 n invoice href https subdomain recurly com v2 invoices 1007 n plan href https subdomain recurly com v2 plans gold n plan code gold plan code n name gold plan name n plan n uuid 374ae5e848adcfd332fdd3469d89c888 uuid n state active state n unit amount cents type integer 4500 unit amount cents n currency eur currency n quantity type integer 2 quantity n activated type datetime 2016 07 11t22 36 22z activated n canceled nil nil n expires nil nil n updated type datetime 2016 07 14t21 57 08z updated n total billing cycles nil nil n remaining billing cycles nil nil n current period started type datetime 2016 07 11t22 36 22z current period started n current period ends type datetime 2016 08 11t22 36 22z current period ends n trial started nil nil n trial ends nil nil n terms conditions nil nil n customer notes nil nil n tax cents type integer 919 tax cents n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n po number nil nil n net terms type integer 0 net terms n collection method automatic collection method n billing info reason plan free trial billing info reason n subscription add ons type array n subscription add n add type fixed add type n add code ipaddresses add code n unit amount cents type integer 150 unit amount cents n quantity type integer 10 quantity n subscription add n subscription add n add type usage add type n measured unit href https subdomain recurly com v2 measured units 450622522661012652 n usage href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 add ons video streaming usage n add code video streaming add code n unit amount cents type integer 45 unit amount cents n quantity type integer 1 quantity n usage type price usage type n usage percentage nil nil n subscription add n subscription add ons n name cancel href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 cancel method put n name terminate href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 terminate method put n name postpone href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 postpone method put n name notes href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 notes method put n subscription name settings link url project 555fbba928249c1900618a82 sync unique title update subscription add ons user 55648cf93b87582b003ab8b1 v 0 updates version 5919d93785b2570f00e41c39 body include `subscription add ons` array request subscription 's original add ons removed unless specified update subscription request please specify add ons present subscription change include `subscription add ons` array current add ons remain subscription category 5919d93885b2570f00e41c4a createdat 2015 06 18t21 48 13 952z next pages description type put excerpt update subscription add ons githubsync hidden false isreference true link external false order 8 parentdoc null slug update subscription add ons childrenpages putupdate subscription add onsupdate subscription add ons path paramsuuid requiredstringsubscription 's unique identifier body paramsadd code requiredstringthe code add unit amount cents integeramount transaction cents max 10000000 quantity integeroptionally override default quantity 1 usage percentage stringallowed usage based billing enabled site `add type` `usage` `usage type` `percentage` set custom `usage percentage` subscription add must 0 0000 100 0000 revenue schedule type stringoptional field setting revenue schedule type determine revenue associated subscription add recognized creating subscription add available schedule types `never` `evenly` `at range start` `at range end` `revenue schedule type` set subscription add inherit `revenue schedule type` plan add include array request subscription 's original add ons removed unless specified update subscription request please specify add ons present subscription change include array current add ons remain subscription edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format200 ok id 5919d93c85b2570f00e41c82 type put user 556790090145bc23008e3bf8 api url subscriptions uuid notes auth required examples codes name code \\? php n ntry n subscription recurly subscription get \\( '2fe8c7aeb72f0257541b89405383ad69' \\) n n subscription updatenotes \\( array \\( n customer notes new customer notes n terms conditions new terms n vat reverse charge notes new vat notes n \\) \\) n n print subscription subscription n catch \\( recurly notfounderror e \\) n print subscription found e n language php code subscription recurly subscription find \\( '44f83d7cba354d5b84812419f923ea96' \\) nsubscription update notes \\( n customer notes 'new customer notes' n terms conditions 'new terms' n vat reverse charge notes 'new vat notes' n \\) language ruby code subscription subscription get \\( '44f83d7cba354d5b84812419f923ea96' \\) nsubscription update notes \\( customer notes 'new customer notes' n terms conditions 'new terms' n vat reverse charge notes 'new vat notes' \\) language python language xml code subscription n terms conditions payment sent acme cloud inc terms conditions n customer notes thanks business customer notes n vat reverse charge notes vat applied invoice please reference legislation vat reverse charge notes n subscription method put params desc optional notes field default terms conditions text specified invoice settings page recurly admin unless custom notes created original subscription specify custom notes tag add override terms conditions custom notes stay subscription renewals unless updated renewal always change immediately even `timeframe` `renewal` default type string name terms conditions id 55830d5281672a3900bb5032 ref body required false name customer notes id 55830d5281672a3900bb5031 ref body required false desc optional notes field default customer notes text specified invoice settings page recurly admin unless custom notes created original subscription specify custom notes tag add override customer notes custom notes stay subscription renewals always change immediately even `timeframe` `renewal` default type string type string name vat reverse charge notes id 55830d5281672a3900bb5030 ref body required false desc vat reverse charge notes appear eu vat enabled using avalara avatax account customer eu vat number different country default vat reverse charge notes text specified tax settings page recurly admin unless custom notes created original subscription specify custom notes tag add override vat reverse charge notes custom notes stay subscription renewals always change immediately even `timeframe` `renewal` default desc subscription 's unique identifier default type string name uuid id 578d1bd5f5ffc72900cf8060 ref path required true results codes status 200 language xml code subscription href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 n account href https subdomain recurly com v2 accounts 1 n redemptions href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 redemptions n invoice href https subdomain recurly com v2 invoices 1005 n plan href https subdomain recurly com v2 plans gold n plan code gold plan code n name gold plan name n plan n revenue schedule type evenly revenue schedule type n uuid 37bfef7a8e44cfc3817b7a43eba8a6e6 uuid n state active state n unit amount cents type integer 4500 unit amount cents n currency eur currency n quantity type integer 1 quantity n activated type datetime 2016 08 03t16 02 24z activated n canceled nil nil n expires nil nil n updated type datetime 2016 08 03t16 11 19z updated n total billing cycles nil nil n remaining billing cycles nil nil n current period started type datetime 2016 08 03t16 02 24z current period started n current period ends type datetime 2016 09 03t16 02 24z current period ends n trial started nil nil n trial ends nil nil n terms conditions payment sent acme cloud inc terms conditions n customer notes thanks business customer notes n tax cents type integer 394 tax cents n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n po number nil nil n net terms type integer 0 net terms n collection method automatic collection method n billing info reason plan free trial billing info reason n subscription add ons type array n subscription add ons n name cancel href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 cancel method put n name terminate href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 terminate method put n name postpone href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 postpone method put n name notes href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 notes method put n subscription name settings body project 555fbba928249c1900618a82 githubsync next pages description order 9 slug update subscription notes title update subscription notes createdat 2015 06 18t18 26 26 891z excerpt update subscription 's invoice notes next renewal updating notes trigger renewal updates version 5919d93785b2570f00e41c39 isreference true link url sync unique link external false parentdoc null v 0 category 5919d93885b2570f00e41c4a hidden false childrenpages putupdate subscription notesupdate subscription 's invoice notes next renewal updating notes trigger renewal path paramsuuid requiredstringsubscription 's unique identifier body paramsterms conditions stringoptional notes field default terms conditions text specified invoice settings page recurly admin unless custom notes created original subscription specify custom notes tag add override terms conditions custom notes stay subscription renewals unless updated renewal always change immediately even `timeframe` `renewal` customer notes stringoptional notes field default customer notes text specified invoice settings page recurly admin unless custom notes created original subscription specify custom notes tag add override customer notes custom notes stay subscription renewals always change immediately even `timeframe` `renewal` vat reverse charge notes stringvat reverse charge notes appear eu vat enabled using avalara avatax account customer eu vat number different country default vat reverse charge notes text specified tax settings page recurly admin unless custom notes created original subscription specify custom notes tag add override vat reverse charge notes custom notes stay subscription renewals always change immediately even `timeframe` `renewal` edit pagesuggest editsdefinition api url page api url examplesphprubypythonxmlresult format200 ok id 5919d93c85b2570f00e41c83 link url next pages description slug cancel subscription updates 56815d3d0ab7e40d0073f517 api results codes status 200 language xml code subscription href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 n account href https subdomain recurly com v2 accounts 1 n redemptions href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 redemptions n invoice href https subdomain recurly com v2 invoices 1005 n plan href https subdomain recurly com v2 plans gold n plan code gold plan code n name gold plan name n plan n revenue schedule type evenly revenue schedule type n uuid 37bfef7a8e44cfc3817b7a43eba8a6e6 uuid n state canceled state n unit amount cents type integer 4500 unit amount cents n currency eur currency n quantity type integer 1 quantity n activated type datetime 2016 08 03t16 02 24z activated n canceled type datetime 2016 08 03t16 10 54z canceled n expires type datetime 2016 09 03t16 02 24z expires n updated type datetime 2016 08 03t16 10 54z updated n total billing cycles nil nil n remaining billing cycles nil nil n current period started type datetime 2016 08 03t16 02 24z current period started n current period ends type datetime 2016 09 03t16 02 24z current period ends n trial started nil nil n trial ends nil nil n terms conditions nil nil n customer notes nil nil n tax cents type integer 394 tax cents n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n po number nil nil n net terms type integer 0 net terms n collection method automatic collection method n billing info reason plan free trial billing info reason n subscription add ons type array n subscription add ons n name cancel href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 cancel method put n name terminate href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 terminate method put n name postpone href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 postpone method put n name notes href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 notes method put n name reactivate href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 reactivate method put n subscription name settings url subscriptions uuid cancel auth required examples codes language php code \\? php n ntry n subscription recurly subscription get \\( '44f83d7cba354d5b84812419f923ea96' \\) n subscription cancel \\( \\) n n print subscription subscription n catch \\( recurly notfounderror e \\) n print subscription found e n catch \\( recurly error e \\) n print subscription already canceled e n name language ruby code subscription recurly subscription find \\( '44f83d7cba354d5b84812419f923ea96' \\) nsubscription cancel language python code subscription subscription get \\( '44f83d7cba354d5b84812419f923ea96' \\) nsubscription cancel \\( \\) code var subscription subscriptions get \\( 44f83d7cba354d5b84812419f923ea96 \\) nsubscription cancel \\( \\) language csharp method put params default type string name uuid id 578d1bc8f5ffc72900cf805e ref path required true desc subscription 's unique identifier category 5919d93885b2570f00e41c4a isreference true version 5919d93785b2570f00e41c39 title cancel subscription excerpt cancel subscription remains active expires end current bill cycle githubsync order 10 project 555fbba928249c1900618a82 type put body canceling subscription turns subscription 's auto renewal subscription continue current invoiced term subscription renewal account transition free account subscription longer active n nwhen subscription canceled recurly send cancelation webhook recurly send additional subscription expired webhook subscription longer active n block callout n n type warning n body please note subscription set start future canceled subscription deleted account show account 's subscription list n n block createdat 2015 06 18t19 02 33 781z hidden false sync unique v 0 link external false parentdoc null user 556790090145bc23008e3bf8 childrenpages putcancel subscriptioncancel subscription remains active expires end current bill cycle path paramsuuid requiredstringsubscription 's unique identifier canceling subscription turns subscription 's auto renewal subscription continue current invoiced term subscription renewal account transition free account subscription longer active subscription canceled recurly send cancelation webhook recurly send additional subscription expired webhook subscription longer active please note subscription set start future canceled subscription deleted account show account 's subscription list edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d93c85b2570f00e41c84 excerpt reactivate canceled subscription renews end current bill cycle link url user 556790090145bc23008e3bf8 version 5919d93785b2570f00e41c39 api results codes language xml code subscription href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 n account href https subdomain recurly com v2 accounts 1 n redemptions href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 redemptions n invoice href https subdomain recurly com v2 invoices 1005 n plan href https subdomain recurly com v2 plans gold n plan code gold plan code n name gold plan name n plan n revenue schedule type evenly revenue schedule type n uuid 37bfef7a8e44cfc3817b7a43eba8a6e6 uuid n state active state n unit amount cents type integer 4500 unit amount cents n currency eur currency n quantity type integer 1 quantity n activated type datetime 2016 08 03t16 02 24z activated n canceled nil nil n expires nil nil n updated type datetime 2016 08 03t16 11 05z updated n total billing cycles nil nil n remaining billing cycles nil nil n current period started type datetime 2016 08 03t16 02 24z current period started n current period ends type datetime 2016 09 03t16 02 24z current period ends n trial started nil nil n trial ends nil nil n terms conditions nil nil n customer notes nil nil n tax cents type integer 394 tax cents n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n po number nil nil n net terms type integer 0 net terms n collection method automatic collection method n billing info reason plan free trial billing info reason n subscription add ons type array n subscription add ons n name cancel href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 cancel method put n name terminate href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 terminate method put n name postpone href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 postpone method put n name notes href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 notes method put n subscription status 200 settings url subscriptions uuid reactivate auth required examples codes name language php code \\? php n ntry n subscription recurly subscription get \\( '2fe8c7aeb72f0257541b89405383ad69' \\) n subscription reactivate \\( \\) n n print subscription subscription n catch \\( recurly notfounderror e \\) n print subscription found e n catch \\( recurly error e \\) n print subscription already reactivated e n language ruby code subscription recurly subscription find \\( '44f83d7cba354d5b84812419f923ea96' \\) nsubscription reactivate code subscription subscription get \\( '44f83d7cba354d5b84812419f923ea96' \\) nsubscription reactivate \\( \\) language python language csharp code var subscription subscriptions get \\( 44f83d7cba354d5b84812419f923ea96 \\) nsubscription reactivate \\( \\) method put params desc subscription 's unique identifier default type string name uuid id 578d1bc02441e13200a14239 ref path required true category 5919d93885b2570f00e41c4a hidden false next pages description type put title reactivate canceled subscription createdat 2015 06 18t19 08 37 097z githubsync isreference true link external false order 11 project 555fbba928249c1900618a82 v 0 body subscription canceled renew considered active end current billing period subscription end renew subscription without modifying simply send reactivation request end point parentdoc null slug reactivate canceled subscription sync unique updates childrenpages putreactivate canceled subscriptionreactivate canceled subscription renews end current bill cycle path paramsuuid requiredstringsubscription 's unique identifier subscription canceled renew considered active end current billing period subscription end renew subscription without modifying simply send reactivation request end point edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d93c85b2570f00e41c85 link url project 555fbba928249c1900618a82 title terminate subscription type put api auth required examples codes language php code \\? php n ntry n subscription recurly subscription get \\( '2fe8c7aeb72f0257541b89405383ad69' \\) n subscription terminatewithoutrefund \\( \\) n n print subscription subscription n catch \\( recurly notfounderror e \\) n print subscription found e n catch \\( recurly error e \\) n print subscription already terminated e n name language ruby code subscription recurly subscription find \\( '44f83d7cba354d5b84812419f923ea96' \\) nsubscription terminate partial language python code subscription subscription get \\( '44f83d7cba354d5b84812419f923ea96' \\) nsubscription terminate \\( refund 'partial' \\) language csharp code var subscription subscriptions get \\( 44f83d7cba354d5b84812419f923ea96 \\) nsubscription terminate \\( subscription refundtype full \\) n subscription terminate \\( subscription refundtype partial \\) n subscription terminate \\( subscription refundtype none \\) method put params required false desc `partial` `full` `none` refund processed subscription charges default none type string name refund id 578d1bb2d9c55c2000d4f227 ref query ref query required false desc allowed usage based billing beta enabled site `true` current billing cycle unbilled usage billed final invoice `false` recurly create negative usage record current billing cycle usage zero final invoice line items default true type boolean name charge id 578d1bb2d9c55c2000d4f226 path required true desc subscription 's unique identifier default type string name uuid id 578d1bb2d9c55c2000d4f225 ref results codes name code subscription href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 n account href https subdomain recurly com v2 accounts 1 n redemptions href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 redemptions n plan href https subdomain recurly com v2 plans gold n plan code gold plan code n name gold plan name n plan n revenue schedule type evenly revenue schedule type n uuid 37bfef7a8e44cfc3817b7a43eba8a6e6 uuid n state expired state n unit amount cents type integer 4500 unit amount cents n currency eur currency n quantity type integer 1 quantity n activated type datetime 2016 08 03t16 02 24z activated n canceled type datetime 2016 08 03t16 12 14z canceled n expires type datetime 2016 08 03t16 12 14z expires n updated type datetime 2016 08 03t16 12 14z updated n total billing cycles nil nil n remaining billing cycles nil nil n current period started type datetime 2016 08 03t16 02 24z current period started n current period ends type datetime 2016 09 01t00 00 00z current period ends n trial started nil nil n trial ends nil nil n terms conditions payment sent acme cloud inc terms conditions n customer notes thanks business customer notes n tax cents type integer 394 tax cents n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n po number nil nil n net terms type integer 0 net terms n collection method automatic collection method n billing info reason plan free trial billing info reason n subscription add ons type array n subscription add ons n subscription language xml status 200 settings url subscriptions uuid terminate \\? refund refund type charge boolean category 5919d93885b2570f00e41c4a isreference true link external false user 556790090145bc23008e3bf8 version 5919d93785b2570f00e41c39 githubsync sync unique updates 55b6f7996de28c0d00406369 57f421331592cb0e00761dca v 0 body block parameters n n data n h 0 refund type n h 1 description n 0 0 partial n 0 1 prorates refund based amount time remaining current bill cycle n 1 0 full n 1 1 performs full refund last charge current subscription term n 2 0 none n 2 1 terminates subscription without refund n n cols 2 n rows 3 n n block order 12 next pages description parentdoc null slug terminate subscription createdat 2015 06 18t19 23 47 144z excerpt hidden false childrenpages putterminate subscriptionpath paramsuuid requiredstringsubscription 's unique identifier query paramsrefund stringnone`partial` `full` `none` refund processed subscription charges charge booleantrueallowed usage based billing beta enabled site `true` current billing cycle unbilled usage billed final invoice `false` recurly create negative usage record current billing cycle usage zero final invoice line items refund type description partial prorates refund based amount time remaining current bill cycle full performs full refund last charge current subscription term none terminates subscription without refund edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d93c85b2570f00e41c86 v 0 createdat 2015 06 18t19 26 20 104z order 13 project 555fbba928249c1900618a82 type put api auth required examples codes language php code \\? php n ntry n subscription recurly subscription get \\( '2fe8fc16788daa5b9cca4d4df99c9ac7' \\) n subscription postpone \\( date \\( 'c' strtotime \\( '2017 12 31z' \\) \\) \\) n n print subscription subscription n catch \\( recurly notfounderror e \\) n print subscription found e n name language ruby code subscription recurly subscription find \\( '44f83d7cba354d5b84812419f923ea96' \\) nsubscription postpone time utc \\( 2017 12 31 \\) false language python code sub subscription get \\( '44f83d7cba354d5b84812419f923ea96' \\) nsub postpone \\( next renewal date datetime datetime \\( 2017 1 1 \\) bulk false \\) language csharp code var subscription subscriptions get \\( 44f83d7cba354d5b84812419f923ea96 \\) nsubscription postpone \\( new datetime \\( 2017 12 31 \\) false \\) method put params required true desc future date subscription renew default type datetime name next renewal date id 578d1b532441e13200a14236 ref query ref query required false desc optional field used needing bypass 60 second limit creating subscriptions used creating subscriptions bulk api set `true` `false` defaults `false` default false type boolean name bulk id 578d1b532441e13200a14235 path required true desc subscription 's unique identifier default type string name uuid id 578d1b532441e13200a14234 ref results codes language xml code subscription href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 n account href https subdomain recurly com v2 accounts 1 n redemptions href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 redemptions n invoice href https subdomain recurly com v2 invoices 1005 n plan href https subdomain recurly com v2 plans gold n plan code gold plan code n name gold plan name n plan n revenue schedule type evenly revenue schedule type n uuid 37bfef7a8e44cfc3817b7a43eba8a6e6 uuid n state active state n unit amount cents type integer 4500 unit amount cents n currency eur currency n quantity type integer 1 quantity n activated type datetime 2016 08 03t16 02 24z activated n canceled nil nil n expires nil nil n updated type datetime 2016 08 03t16 12 02z updated n total billing cycles nil nil n remaining billing cycles nil nil n current period started type datetime 2016 08 03t16 02 24z current period started n current period ends type datetime 2016 09 01t00 00 00z current period ends n trial started nil nil n trial ends nil nil n terms conditions payment sent acme cloud inc terms conditions n customer notes thanks business customer notes n tax cents type integer 394 tax cents n tax type usst tax type n tax region ca tax region n tax rate type float 0 0875 tax rate n po number nil nil n net terms type integer 0 net terms n collection method automatic collection method n billing info reason plan free trial billing info reason n subscription add ons type array n subscription add ons n name cancel href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 cancel method put n name terminate href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 terminate method put n name postpone href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 postpone method put n name notes href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 notes method put n subscription name status 200 settings url subscriptions uuid postpone \\? next renewal date next renewal date bulk bulk excerpt active subscription change next renewal date subscription trial period modifying renewal date change trial expires githubsync next pages description updates 561552dadc8aea0d002475c3 577581f0ece8a00e00a15b09 57fb40100600d40e0047ba6c user 556790090145bc23008e3bf8 category 5919d93885b2570f00e41c4a hidden false isreference true link external false link url title postpone subscription extend trial body use endpoint n force subscription renew early n keep subscription renewing later date n shorten trial period n lengthen trial period parentdoc null slug postpone subscription sync unique version 5919d93785b2570f00e41c39 childrenpages putpostpone subscription extend trialfor active subscription change next renewal date subscription trial period modifying renewal date change trial expires path paramsuuid requiredstringsubscription 's unique identifier query paramsnext renewal date requireddatetimea future date subscription renew bulk booleanfalseoptional field used needing bypass 60 second limit creating subscriptions used creating subscriptions bulk api set `true` `false` defaults `false` use endpoint force subscription renew earlykeep subscription renewing later dateshorten trial periodlengthen trial period edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d94285b2570f00e41cdc parentdoc null slug usage record object v 0 api url subscriptions subscription uuid add ons add code usage examples codes method get results codes name code usage href https subdomain recurly com v2 subscriptions 34eb543902676402bb8f4d4241a2cf94 add ons email blasts usage 395688856587863300 n measured unit href https subdomain recurly com v2 measured units 7610 n amount type integer 1 amount n merchant tag order id 4939853977878713 merchant tag n recording timestamp type date 2016 04 15t23 09 04 00 00 recording timestamp n usage timestamp type date 2016 04 15t23 08 15 00 00 usage timestamp n created type date 2016 04 15t23 09 30 00 00 created n billed nil nil billed n usage type price usage type n unit amount cents type integer 60 unit amount cents n usage percentage nil nil usage percentage n usage n language xml status 200 settings auth required params id 578d1c89bd9f40200058dcd8 ref path required true desc subscription 's unique identifier default type string name subscription uuid id 578d1c89bd9f40200058dcd7 ref path required true desc unique add code default type string name add code name measured unit id 572454c94255580e00593877 ref body required false desc url measured unit associated add usage record default type string type int name amount id 572454c94255580e00593876 ref body required false desc amount usage positive negative 0 decimals allowed strip usage based add billed percentage usage monetary amount want format cents \\( e g 5 00 500 \\) default desc custom field great recording id system associated usage provide auditable usage displays customers using get endpoint default type string name merchant tag id 572454c94255580e00593875 ref body required false name recording timestamp id 572454c94255580e00593874 ref body required false desc usage recorded system default usage timestamp value type datetime type datetime name usage timestamp id 572454c94255580e00593873 ref body required false desc usage actually happened define line item dates usage billed important revenue recognition default required false desc usage record created recurly default type datetime name created id 572454c94255580e00593872 ref body ref body required false desc usage record updated `null` creation default type datetime name updated id 572454c94255580e00593871 default type datetime name billed id 572454c94255580e00593870 ref body required false desc usage record billed invoice default type string name usage type id 572454c94255580e0059386f ref body required false desc whether associated add pricing model price per unit \\( `price` \\) percentage amount \\( `percentage` \\) default type int name unit amount cents id 572454c94255580e0059386e ref body required false desc `usage type` `price` price add `usage timestamp` time price usage billed invoice body required false desc `usage type` `percentage` percentage add `usage timestamp` time percentage usage billed invoice default type string name usage percentage id 572454c94255580e0059386d ref next pages description project 555fbba928249c1900618a82 type get updates user 55b66dba6127b1250036446f body createdat 2016 04 30t06 36 52 333z link external false order 0 category 5919d93885b2570f00e41c4b excerpt usage billable event group events recorded purchased usage based add billed arrears billing cycle link url sync unique title usage record object version 5919d93785b2570f00e41c39 githubsync hidden false isreference true childrenpages getusage record objectusage billable event group events recorded purchased usage based add billed arrears billing cycle path paramssubscription uuid requiredstringsubscription 's unique identifier add code requiredstringthe unique add code body paramsmeasured unit stringthe url measured unit associated add usage record amount integerthe amount usage positive negative 0 decimals allowed strip usage based add billed percentage usage monetary amount want format cents \\( e g 5 00 500 \\) merchant tag stringcustom field great recording id system associated usage provide auditable usage displays customers using get endpoint recording timestamp datetimeusage timestamp valuewhen usage recorded system usage timestamp datetimewhen usage actually happened define line item dates usage billed important revenue recognition created datetimewhen usage record created recurly updated datetimewhen usage record updated `null` creation billed datetimewhen usage record billed invoice usage type stringwhether associated add pricing model price per unit \\( `price` \\) percentage amount \\( `percentage` \\) unit amount cents integerif `usage type` `price` price add `usage timestamp` time price usage billed invoice usage percentage stringif `usage type` `percentage` percentage add `usage timestamp` time percentage usage billed invoice edit pagesuggest editsdefinition api url page api url result format200 ok id 5919d94285b2570f00e41cdd createdat 2016 04 30t06 20 21 084z githubsync isreference true title list subscription add 's usage body hidden false updates v 0 link url next pages description parentdoc null version 5919d93785b2570f00e41c39 project 555fbba928249c1900618a82 slug list add ons usage sync unique api examples codes code https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 add ons video streaming usage \\? billing status unbilled language xml name query unbilled language ruby code need subscription add want find usages nsubscription recurly subscription find \\( '44f83d7cba354d5b84812419f923ea96' \\) nsub add subscription subscription add ons detect add n add add code 'marketing emails' nend n nsearch options n billing status \\( unbilled billed \\) n datetime type usage optional \\( usage recording \\) n start datetime datetime optional starting datetime n end datetime datetime optional ending datetime n n n search options hash optional npager sub add usage paginate \\( search options \\) n npager find usage n puts usage inspect nend language python code recurly import subscription n n need subscription add want find usages nsubscription subscription get \\( '44f83d7cba354d5b84812419f923ea96' \\) n let 's choose first one could filter add code nsub add subscription subscription add ons 0 n nsearch options n 'billing status' 'all' \\( unbilled billed \\) n 'datetime type' 'usage' optional \\( usage recording \\) n 'starting time' datetime datetime \\( \\) optional starting datetime n 'ending time' datetime datetime \\( \\) optional ending datetime n n n search options dict optional nfiltered usages sub add usage \\( search options \\) n nfor usage filtered usages n print usage language php code \\? php n n need subscription add want find usages n subscription recurly subscription get \\( 36c3bddf418b84ac93aaff461a95262d \\) n n billing status unbilled billed n datetime type usage recording n params array \\( n billing status n datetime type usage n start datetime datetime n end datetime datetime n \\) n n params optional n usages subscription usages \\( 'marketing emails' params \\) n nprint count \\( usages \\) nforeach \\( usages usage \\) n print usage merchant tag n n n code var subscriptionuuid 37bfef7a8e44cfc3817b7a43eba8a6e6 nvar subscriptionaddoncode ip addresses n nvar usages usage list \\( subscriptionuuid subscriptionaddoncode \\) nwhile \\( usages hasany \\( \\) \\) n n foreach \\( var u usages \\) n console writeline \\( usage u amount \\) n usages usages next n language csharp method get results codes language xml status 200 name code usages type array n usage href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 add ons video streaming usage 450646065398417338 n measured unit href https subdomain recurly com v2 measured units 450622522661012652 n amount type integer 1 amount n merchant tag order id 4939853977878713 merchant tag n recording timestamp type date 2016 07 14t13 09 15 00 00 recording timestamp n usage timestamp type date 2016 07 14t22 30 15 00 00 usage timestamp n created type date 2016 07 14t22 33 17 00 00 created n updated nil nil n billed nil nil n usage type price usage type n unit amount cents type integer 45 unit amount cents n usage percentage nil nil n usage n continued n usages code error n symbol found symbol n description lang en us could n't find addon add code video streaming description n error language xml status 400 name add found settings auth required params id 57244ea5fda3c70e005b8963 ref query required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page default type string name cursor id 57244ea5fda3c70e005b8962 ref query required false desc number records return per page maximum 200 default 50 type int name per page id 57244ea5fda3c70e005b8961 ref query required false desc `all` `unbilled` `billed` defines whether include usage records `billed at` date default unbilled type string name billing status name datetime type id 57244ea5fda3c70e005b8960 ref query required false desc `usage` `recording` whether would like filter `usage timestamp` `recording timestamp` default usage type string ref query required false desc show usage records greater equal date default type datetime name start datetime id 57244ea5fda3c70e005b895f query required false desc show usage records less date default type datetime name end datetime id 57244ea5fda3c70e005b895e ref desc subscription 's unique identifier default type string name subscription uuid id 578d1cabbd9f40200058dcda ref path required true id 578d1cabbd9f40200058dcd9 ref path required true desc unique add code default type string name add code url subscriptions subscription uuid add ons add code usage \\? query param value category 5919d93885b2570f00e41c4b excerpt query billed unbilled usage customer 's usage based add link external false order 1 type get user 55b66dba6127b1250036446f childrenpages getlist subscription add 's usagequery billed unbilled usage customer 's usage based add path paramssubscription uuid requiredstringsubscription 's unique identifier add code requiredstringthe unique add code query paramscursor stringsplits records across pages leave blank return first page follow uri first page 's link header fetch next page per page integer50number records return per page maximum 200 billing status stringunbilled`all` `unbilled` `billed` defines whether include usage records `billed at` date datetime type stringusage`usage` `recording` whether would like filter `usage timestamp` `recording timestamp` start datetime datetimeshow usage records greater equal date end datetime datetimeshow usage records less date edit pagesuggest editsdefinition api url page api url examplesquery unbilledrubypythonphpc result format200 ok400 add found id 5919d94285b2570f00e41cde updates 58014b787878670f00fa700f category 5919d93885b2570f00e41c4b createdat 2016 04 30t05 40 16 804z link external false title log usage hidden false project 555fbba928249c1900618a82 slug log usage type post v 0 api examples codes code usage n amount 1 amount n merchant tag order id 4939853977878713 merchant tag n recording timestamp 2016 07 14t13 09 15z recording timestamp n usage timestamp 2016 07 14t22 30 15z usage timestamp n usage language xml name null code need subscription add want bill usage nsubscription recurly subscription find \\( '44f83d7cba354d5b84812419f923ea96' \\) nsub add subscription subscription add ons detect add n add add code 'marketing emails' nend n nusage1 sub add usage build \\( n amount 100 n merchant tag batch 100 marketing emails sent customer n recording timestamp datetime n usage timestamp datetime n \\) nusage1 save n n create instead build nusage2 sub add usage create \\( n amount 200 n merchant tag batch 200 marketing emails sent customer n recording timestamp datetime n usage timestamp datetime n \\) language ruby code recurly import subscription usage n n need subscription add want bill usage nsubscription subscription get \\( '44f83d7cba354d5b84812419f923ea96' \\) n let 's choose first one could filter add code nsub add subscription subscription add ons 0 n nusage usage \\( \\) nusage amount 100 record 100 emails nusage merchant tag recording 100 emails used customer nusage recording timestamp datetime datetime utcnow \\( \\) nusage usage timestamp datetime datetime utcnow \\( \\) n nsubscription create usage \\( sub add usage \\) language python method post results codes name status 201 language xml code usage href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 add ons video streaming usage 450646065398417338 n measured unit href https subdomain recurly com v2 measured units 450622522661012652 n amount type integer 1 amount n merchant tag order id 4939853977878713 merchant tag n recording timestamp type date 2016 07 14t13 09 15 00 00 recording timestamp n usage timestamp type date 2016 07 14t22 30 15 00 00 usage timestamp n created type date 2016 07 14t22 33 17 00 00 created n updated nil nil n billed nil nil n usage type price usage type n unit amount cents type integer 45 unit amount cents n usage percentage nil nil n usage status 422 language xml code errors n error field usage usage timestamp symbol date range within valid date range subscription error n errors name usage timestamp add existed settings auth required params desc amount usage positive negative 0 decimals allowed strip usage based add billed percentage usage monetary amount want format cents \\( e g 5 00 500 \\) default type int name amount id 572447182ad0bc17001227b8 ref body required true id 572447182ad0bc17001227b7 ref body required false desc custom field great recording id system associated usage provide auditable usage displays customers using get endpoint default type string name merchant tag id 572447182ad0bc17001227b6 ref body required false desc usage recorded system default usage timestamp value type datetime name recording timestamp id 572447182ad0bc17001227b5 ref body required true desc usage actually happened define line item dates usage billed important revenue recognition default type datetime name usage timestamp id 578d1ccabd9f40200058dcdb ref path required true desc subscription 's unique identifier default type string name subscription uuid name add code id 578d1d3784f5cd0e008917f6 ref path required true desc unique add code default type string url subscriptions subscription uuid add ons add code usage body githubsync user 55b66dba6127b1250036446f version 5919d93785b2570f00e41c39 isreference true parentdoc null sync unique excerpt log usage customer 's purchased usage based add ons link url next description pages order 2 childrenpages postlog usagelog usage customer 's purchased usage based add ons path paramssubscription uuid requiredstringsubscription 's unique identifier add code requiredstringthe unique add code body paramsamount requiredintegerthe amount usage positive negative 0 decimals allowed strip usage based add billed percentage usage monetary amount want format cents \\( e g 5 00 500 \\) merchant tag stringcustom field great recording id system associated usage provide auditable usage displays customers using get endpoint recording timestamp datetimeusage timestamp valuewhen usage recorded system usage timestamp requireddatetimewhen usage actually happened define line item dates usage billed important revenue recognition edit pagesuggest editsdefinition api url page api url examplesxmlrubypythonresult format201 created422 usage timestamp add existed id 5919d94285b2570f00e41cdf user 55b66dba6127b1250036446f hidden false project 555fbba928249c1900618a82 updates title lookup usage record isreference true link url order 3 link external false next pages description slug lookup usage record version 5919d93785b2570f00e41c39 v 0 body category 5919d93885b2570f00e41c4b excerpt lookup specific usage record githubsync parentdoc null sync unique type get api settings auth required params type string name subscription uuid id 5783cd3c5cbce30e0074e225 ref path required true desc subscription 's unique identifier default desc unique add code default type string name add code id 5783cd0a192dcf0e00998297 ref path required true name usage id id 57244fae2887bb0e00bb9dc8 ref path required true desc unique id usage record default type string url subscriptions subscription uuid add ons add code usage usage id examples codes method get results codes name code usage href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 add ons video streaming usage 450646065398417338 n measured unit href https subdomain recurly com v2 measured units 450622522661012652 n amount type integer 1 amount n merchant tag order id 4939853977878713 merchant tag n recording timestamp type date 2016 07 14t13 09 15 00 00 recording timestamp n usage timestamp type date 2016 07 14t22 30 15 00 00 usage timestamp n created type date 2016 07 14t22 33 17 00 00 created n updated nil nil n billed nil nil n usage type price usage type n unit amount cents type integer 45 unit amount cents n usage percentage nil nil n usage language xml status 200 createdat 2016 04 30t06 22 55 198z childrenpages getlookup usage recordlookup specific usage record path paramssubscription uuid requiredstringsubscription 's unique identifier add code requiredstringthe unique add code usage id requiredstringunique id usage record edit pagesuggest editsdefinition api url page api url result format200 ok id 5919d94285b2570f00e41ce0 category 5919d93885b2570f00e41c4b hidden false sync unique v 0 githubsync isreference true next pages description parentdoc null updates version 5919d93785b2570f00e41c39 api settings auth required params ref body required false desc allowed `billed at` `null` default type int name amount id 57244a422887bb0e00bb9dc6 default type string name merchant tag id 57244a422887bb0e00bb9dc5 ref body required false desc updated anytime body required false desc allowed `billed at` `null` default usage timestamp value type datetime name recording timestamp id 57244a422887bb0e00bb9dc4 ref required false desc allowed `billed at` `null` default type datetime name usage timestamp id 57244a422887bb0e00bb9dc3 ref body type string name subscription uuid id 578d1ce42441e13200a14240 ref path required true desc subscription 's unique identifier default desc unique add code default type string name add code id 578d1ce42441e13200a1423f ref path required true name usage id id 578d1ce42441e13200a1423e ref path required false desc unique id usage record default type string url subscriptions subscription uuid add ons add code usage usage id examples codes code usage n amount 2 amount n usage language xml method put results codes name code usage href https subdomain recurly com v2 subscriptions 374ae5e848adcfd332fdd3469d89c888 add ons video streaming usage 450646065398417338 n measured unit href https subdomain recurly com v2 measured units 450622522661012652 n amount type integer 24 amount n merchant tag order id 4939853977878713 merchant tag n recording timestamp type date 2016 07 14t13 09 15 00 00 recording timestamp n usage timestamp type date 2016 07 14t22 30 15 00 00 usage timestamp n created type date 2016 07 14t22 33 17 00 00 created n updated type date 2016 07 14t22 45 56 00 00 updated n billed nil nil n usage type price usage type n unit amount cents type integer 45 unit amount cents n usage percentage nil nil n usage language xml status 200 excerpt mistakes happen find usage mistake billed update record billed update merchant tag order 4 body link external false link url project 555fbba928249c1900618a82 slug update usage title update usage record type put user 55b66dba6127b1250036446f createdat 2016 04 30t06 01 38 995z childrenpages putupdate usage recordmistakes happen find usage mistake billed update record billed update merchant tag path paramssubscription uuid requiredstringsubscription 's unique identifier add code requiredstringthe unique add code usage id stringunique id usage record body paramsamount integeronly allowed `billed at` `null` merchant tag stringcan updated anytime recording timestamp datetimeusage timestamp valueonly allowed `billed at` `null` usage timestamp datetimeonly allowed `billed at` `null` edit pagesuggest editsdefinition api url page api url examplesxmlresult format200 ok id 5919d94285b2570f00e41ce1 hidden false link external false parentdoc null project 555fbba928249c1900618a82 title delete usage record v 0 api method delete results codes language xml status 204 name successful delete code settings auth required params desc subscription 's unique identifier default type string name subscription uuid id 5783cd5cce802f0e0087d4c3 ref path required true name add code id 5783cd5cce802f0e0087d4c2 ref path required true desc unique add code default type string ref path required true desc unique id usage record default type string name usage id id 5783cd5cce802f0e0087d4c1 url subscriptions subscription uuid add ons add code usage usage id examples codes version 5919d93785b2570f00e41c39 type delete category 5919d93885b2570f00e41c4b isreference true order 5 next pages description slug delete usage record updates githubsync link url sync unique user 55b66dba6127b1250036446f body createdat 2016 04 30t06 26 15 911z excerpt mistakes happen find usage mistake billed delete record billed cannot delete record want create new usage record counteract billed usage amount account childrenpages deletedelete usage recordmistakes happen find usage mistake billed delete record billed cannot delete record want create new usage record counteract billed usage amount account path paramssubscription uuid requiredstringsubscription 's unique identifier add code requiredstringthe unique add code usage id requiredstringunique id usage record edit pagesuggest editsdefinition api url page api url id 5919d93e85b2570f00e41c93 hidden false link url next pages description updates user 559d85d26b21311700fb0b7b slug transaction object title transaction object category 5919d93885b2570f00e41c4c excerpt details section contains account billing information time transaction submitted may reflect latest account information `transaction error` section may included transaction failed please see transaction error codes \\( https recurly readme io v2 0 page transaction errors \\) details isreference true order 0 version 5919d93785b2570f00e41c39 v 0 createdat 2016 08 02t16 31 24 690z link external false parentdoc null sync unique api examples codes method get results codes status 200 language xml code transaction href https subdomain recurly com v2 transactions 37bff9ddc1e468a59f6fef417cb32281 type credit card n account href https subdomain recurly com v2 accounts 1 n invoice href https subdomain recurly com v2 invoices 1006 n subscription href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 n original transaction href https subdomain recurly com v2 transactions 37bfef7b3873aed2af2a3d4d35878e5f n uuid 37bff9ddc1e468a59f6fef417cb32281 uuid n action refund action n amount cents type integer 870 amount cents n tax cents type integer 70 tax cents n currency eur currency n status success status n payment method credit card payment method n reference 1171163 reference n source subscription source n recurring type boolean false recurring n test type boolean true test n voidable type boolean true voidable n refundable type boolean false refundable n ip address nil nil n cvv result code nil nil n avs result code street address postal code match avs result n avs result street nil nil n avs result postal nil nil n created type datetime 2016 08 03t16 13 44z created n updated type datetime 2016 08 03t16 13 44z updated n details n account n account code 1 account code n first name verena first name n last name example last name n company recurly inc company n email verena example com email n billing info type credit card n first name verena first name n last name example last name n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n vat number nil nil n card type visa card type n year type integer 2019 year n month type integer 12 month n first six 411111 first six n last four 1111 last four n billing info n account n details n name refund href https subdomain recurly com v2 transactions 37bff9ddc1e468a59f6fef417cb32281 method delete n transaction name settings auth required params path required true desc transaction 's unique identifier default type string name uuid id 55bbe4751db0f71700ab3b52 ref desc url account associated transaction default type string name account id 57a2190bafc3050e000cf3df ref body required false name invoice id 57a2190bafc3050e000cf3de ref body required false desc url invoice associated transaction default type string type string name subscription id 57a2190bafc3050e000cf3dd ref body required false desc url subscription associated transaction default required false desc refund transactions url original transaction default type string name original transaction id 57a218b2851a9a0e008cbda8 ref body ref body required false desc unique identifier transaction default type string name uuid id 57a2190bafc3050e000cf3dc default type string name action id 55bbe4751db0f71700ab3b51 ref body required false desc `purchase` `verify` `refund` body required false desc total transaction amount cents default type int name amount cents id 55bbe4751db0f71700ab3b50 ref desc amount tax vat within transaction cents default type int name tax cents id 55bbe4751db0f71700ab3b4f ref body required false id 55bbe4751db0f71700ab3b4e ref body required false desc 3 letter currency transaction default type string name currency name status id 55bbe4751db0f71700ab3b4d ref body required false desc `success` `declined` `void` default type string ref body required false desc `credit card` `paypal` `check` `wire transfer` `money order` default type string name payment method id 55bbe4751db0f71700ab3b4c default type string name reference id 55bbe4751db0f71700ab3b4b ref body required false desc transaction reference payment gateway body required false desc source transaction possible values `transaction` one time transactions `subscription` subscriptions `billing info` updating billing info default type string name source id 55bbe4751db0f71700ab3b4a ref required false desc true transaction recurring default type boolean name recurring id 55bbe4751db0f71700ab3b49 ref body type boolean name test id 55bbe4751db0f71700ab3b48 ref body required false desc true test transaction default required false desc true transaction may voidable accuracy depends gateway default type boolean name voidable id 55bbe4751db0f71700ab3b47 ref body ref body required false desc true transaction may refunded default type string name refundable id 55bbe4751db0f71700ab3b46 default type string name ip address id 55bbe4751db0f71700ab3b45 ref body required false desc customer 's ip address transaction applicable default type string name cvv result id 55bbe4751db0f71700ab3b44 ref body required false desc cvv result applicable default type string name avs result id 55bbe4751db0f71700ab3b43 ref body required false desc avs result applicable body required false desc avs result street address line 1 default type string name avs result street id 55bbe4751db0f71700ab3b42 ref desc avs result postal code default type string name avs result postal id 55bbe4751db0f71700ab3b41 ref body required false name created id 55bbe4751db0f71700ab3b40 ref body required false desc date transaction took place default type datetime ref body required false desc date transaction last modified default type datetime name updated id 57a21a32d778850e0047e2f6 body required false desc nested account billing information submitted time transaction writing client library map directly account billing info objects default type string name details id 55bbe4751db0f71700ab3b3f ref desc declined transactions error code \\( applicable \\) default type string name error code id 55bbe4751db0f71700ab3b3e ref body required false id 55bbe4751db0f71700ab3b3d ref body required false desc declined transactions error category \\( applicable \\) default type string name error category id 55bbe4751db0f71700ab3b3c ref body required false desc declined transactions message displayed merchant \\( applicable \\) default type string name merchant message name customer message id 55bbe4751db0f71700ab3b3b ref body required false desc declined transactions message displayed customer \\( applicable \\) default type string type string name gateway error codes id 55bbe4751db0f71700ab3b3a ref body required false desc declined transactions field lists gateway error code sent us gateway \\( applicable \\) default required false desc plan related line items plan 's code add related line items add 's code default type string name product code id 58c8219f693cdd1900606b9b ref body ref body required false desc describes transaction triggered may one \\( api hpp merchant recurly admin recurlyjs recurring transparent force collect refunded externally chargeback \\) default type string name origin id 58cc0d981751ce2f003bde77 default type datetime name collected id 58cc0d981751ce2f003bde76 ref body required false desc transaction collected collected yet time transaction created default type string name description id 58cc0d981751ce2f003bde75 ref body required false desc description gets sent gateway default type string name message id 58cc0d981751ce2f003bde74 ref body required false desc message gateway body required false desc approval code comes back gateway default type string name approval code id 58cc0d981751ce2f003bde73 ref required false desc identifies payment gateway used process transaction default type string name gateway type id 58cc0d981751ce2f003bde72 ref body url transactions uuid body githubsync project 555fbba928249c1900618a82 type get childrenpages gettransaction objectthe details section contains account billing information time transaction submitted may reflect latest account information `transaction error` section may included transaction failed please see transaction error codes \\( https recurly readme io v2 0 page transaction errors \\) details path paramsuuid requiredstringtransaction 's unique identifier body paramsaccount stringthe url account associated transaction invoice stringthe url invoice associated transaction subscription stringthe url subscription associated transaction original transaction stringfor refund transactions url original transaction uuid stringthe unique identifier transaction action string`purchase` `verify` `refund` amount cents integertotal transaction amount cents tax cents integeramount tax vat within transaction cents currency string3 letter currency transaction status string`success` `declined` `void` payment method string`credit card` `paypal` `check` `wire transfer` `money order` reference stringtransaction reference payment gateway source stringsource transaction possible values `transaction` one time transactions `subscription` subscriptions `billing info` updating billing info recurring booleantrue transaction recurring test booleantrue test transaction voidable booleantrue transaction may voidable accuracy depends gateway refundable stringtrue transaction may refunded ip address stringcustomer 's ip address transaction applicable cvv result stringcvv result applicable avs result stringavs result applicable avs result street stringavs result street address line 1 avs result postal stringavs result postal code created datetimedate transaction took place updated datetimedate transaction last modified details stringnested account billing information submitted time transaction writing client library map directly account billing info objects error code stringfor declined transactions error code \\( applicable \\) error category stringfor declined transactions error category \\( applicable \\) merchant message stringfor declined transactions message displayed merchant \\( applicable \\) customer message stringfor declined transactions message displayed customer \\( applicable \\) gateway error codes stringfor declined transactions field lists gateway error code sent us gateway \\( applicable \\) product code stringfor plan related line items plan 's code add related line items add 's code origin stringdescribes transaction triggered may one \\( api hpp merchant recurly admin recurlyjs recurring transparent force collect refunded externally chargeback \\) collected datetimewhen transaction collected collected yet time transaction created description stringthe description gets sent gateway message stringthe message gateway approval code stringthe approval code comes back gatewaygateway type stringidentifies payment gateway used process transaction edit pagesuggest editsdefinition api url page api url result format200 ok id 5919d93e85b2570f00e41c94 v 0 api params query required false desc state transactions return `successful` `failed` `voided` default type string name state id 5581f9d1a5474a0d00d94727 ref desc type transactions return `authorization` `refund` `purchase` default type string name type id 5581f9d1a5474a0d00d94726 ref query required false name per page id 5581f9d1a5474a0d00d94724 ref query required false desc number records return per page maximum 200 default 50 type int ref query required false desc attribute used order records `created at` `updated at` default created type string name sort id 578ea6ba36baeb17003fd66a query required false desc order products returned `asc` ascending order `desc` descending order default desc type string name order id 578ea6ba36baeb17003fd669 ref desc operates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time default type datetime name begin time id 578ea6ba36baeb17003fd668 ref query required false id 578ea6ba36baeb17003fd667 ref query required false desc operates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time default type datetime name end time name cursor id 5581f9d1a5474a0d00d94725 ref query required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page default type string url transactions examples codes name language php code \\? php n n transactions recurly transactionlist get \\( \\) nforeach \\( transactions transaction \\) n print transaction transaction n n language ruby code recurly transaction find transaction n puts transaction transaction inspect nend language python code client version 2 1 6 nfor transaction transaction \\( \\) n print 'transaction s' transaction n n client version 2 1 5 ntransactions transaction \\( \\) nwhile transactions n transaction transactions n print 'transaction s' transaction n try n transactions transactions next page \\( \\) n except pageerror n transactions \\( \\) language csharp code using system linq n nvar transactions transactions list \\( \\) nwhile \\( transactions \\( \\) \\) n n tforeach \\( var transaction transactions \\) n tconsole writeline \\( transaction transaction \\) n ttransactions transactions next n n n filter successful transactions nvar transactions transactions list \\( transactionlist transactionstate success \\) n n filter failed purchases nvar transactions transactions list \\( transactionlist transactionstate success n transactionlist transactiontype failed \\) method get results codes status 200 language xml code transactions type array n transaction href https subdomain recurly com v2 transactions 374adcf4d716c1afc7b0b64bb79d438d type credit card n account href https subdomain recurly com v2 accounts 1 n invoice href https subdomain recurly com v2 invoices 1005 n uuid 374adcf4d716c1afc7b0b64bb79d438d uuid n action purchase action n amount cents type integer 109 amount cents n tax cents type integer 9 tax cents n currency usd currency n status success status n payment method credit card payment method n reference 2216615 reference n source transaction source n recurring type boolean false recurring n test type boolean true test n voidable type boolean true voidable n refundable type boolean true refundable n ip address 127 0 0 1 ip address n cvv result code nil nil n avs result code street address postal code match avs result n avs result street nil nil n avs result postal nil nil n created type datetime 2016 07 11t22 26 35z created n updated type datetime 2016 07 11t22 26 35z updated n details n account n account code 1 account code n first name verena first name n last name example last name n company new company name company n email verena example com email n billing info type credit card n first name verena first name n last name example last name n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n vat number nil nil n card type visa card type n year type integer 2019 year n month type integer 12 month n first six 411111 first six n last four 1111 last four n billing info n account n details n name refund href https subdomain recurly com v2 transactions 374adcf4d716c1afc7b0b64bb79d438d method delete n transaction n continued n transactions name settings auth required hidden false link url project 555fbba928249c1900618a82 version 5919d93785b2570f00e41c39 body githubsync isreference true slug list transactions sync unique title list transactions category 5919d93885b2570f00e41c4c link external false parentdoc null type get updates createdat 2015 06 17t22 35 55 612z excerpt next pages description order 1 user 556790090145bc23008e3bf8 childrenpages getlist transactionsquery paramsstate stringthe state transactions return `successful` `failed` `voided` type stringthe type transactions return `authorization` `refund` `purchase` per page integer50number records return per page maximum 200 sort stringcreated atthe attribute used order records `created at` `updated at` order stringdescthe order products returned `asc` ascending order `desc` descending order begin time datetimeoperates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time end time datetimeoperates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time cursor stringsplits records across pages leave blank return first page follow uri first page 's link header fetch next page edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d93e85b2570f00e41c95 order 2 project 555fbba928249c1900618a82 category 5919d93885b2570f00e41c4c excerpt createdat 2015 06 17t23 00 38 761z link url parentdoc null user 556790090145bc23008e3bf8 version 5919d93785b2570f00e41c39 v 0 body githubsync isreference true link external false slug list accounts transactions sync unique type get api settings auth required params ref path required true desc account 's unique code default type string name account code id 578d00a384f5cd0e0089166e default type string name state id 5581fc16a5474a0d00d94735 ref query required false desc state transactions return `successful` `failed` `voided` default type string name type id 5581fc16a5474a0d00d94734 ref query required false desc type transactions return `authorization` `refund` `purchase` query required false desc number records return per page maximum 200 default 50 type int name per page id 5581fc16a5474a0d00d94732 ref desc attribute used order records `created at` `updated at` default created type string name sort id 578ea73c902f512200bd3f79 ref query required false id 578ea73c902f512200bd3f78 ref query required false desc order products returned `asc` ascending order `desc` descending order default desc type string name order id 578ea73c902f512200bd3f77 ref query required false desc operates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time default type datetime name begin time name end time id 578ea73c902f512200bd3f76 ref query required false desc operates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time default type datetime ref query required false desc splits records across pages leave blank return first page follow uri first page 's link header fetch next page default type string name cursor id 5581fc16a5474a0d00d94733 url accounts account code transactions examples codes language php code \\? php n ntry n transactions recurly transactionlist getforaccount \\( 'b6f5783' \\) n foreach \\( transactions transaction \\) n print transaction transaction n n n catch \\( recurly notfounderror e \\) n print account found e n name language ruby code account recurly account find \\( '1' \\) naccount transactions find transaction n puts transaction transaction inspect nend name null language python code client version 2 1 6 naccount account get \\( '1' \\) nfor transaction account transactions \\( \\) n print 'transaction s' transaction n n client version 2 1 5 naccount account get \\( '1' \\) ntransactions account transactions \\( \\) nwhile transactions n transaction transactions n print 'transaction s' transaction n try n transactions transactions next page \\( \\) n except pageerror n transactions \\( \\) language csharp code using system linq n nvar account accounts get \\( 1 \\) nvar transactions account gettransactions \\( \\) nwhile \\( transactions \\( \\) \\) n n tforeach \\( var transaction transactions \\) n tconsole writeline \\( transaction transaction \\) n ttransactions transactions next n method get results codes status 200 language xml code transactions type array n transaction href https subdomain recurly com v2 transactions 374adcf4d716c1afc7b0b64bb79d438d type credit card n account href https subdomain recurly com v2 accounts 1 n invoice href https subdomain recurly com v2 invoices 1005 n uuid 374adcf4d716c1afc7b0b64bb79d438d uuid n action purchase action n amount cents type integer 109 amount cents n tax cents type integer 9 tax cents n currency usd currency n status success status n payment method credit card payment method n reference 2216615 reference n source transaction source n recurring type boolean false recurring n test type boolean true test n voidable type boolean true voidable n refundable type boolean true refundable n ip address 127 0 0 1 ip address n cvv result code nil nil n avs result code street address postal code match avs result n avs result street nil nil n avs result postal nil nil n created type datetime 2016 07 11t22 26 35z created n updated type datetime 2016 07 11t22 26 35z updated n details n account n account code 1 account code n first name verena first name n last name example last name n company new company name company n email verena example com email n billing info type credit card n first name verena first name n last name example last name n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n vat number nil nil n card type visa card type n year type integer 2019 year n month type integer 12 month n first six 411111 first six n last four 1111 last four n billing info n account n details n name refund href https subdomain recurly com v2 transactions 374adcf4d716c1afc7b0b64bb79d438d method delete n transaction n continued n transactions name updates title list account 's transactions hidden false next pages description childrenpages getlist account 's transactionspath paramsaccount code requiredstringaccount 's unique code query paramsstate stringthe state transactions return `successful` `failed` `voided` type stringthe type transactions return `authorization` `refund` `purchase` per page integer50number records return per page maximum 200 sort stringcreated atthe attribute used order records `created at` `updated at` order stringdescthe order products returned `asc` ascending order `desc` descending order begin time datetimeoperates attribute specified sort parameter filters records include datetimes greater equal supplied datetime accepts iso 8601 date date time end time datetimeoperates attribute specified sort parameter filters records include datetimes less equal supplied datetime accepts iso 8601 date date time cursor stringsplits records across pages leave blank return first page follow uri first page 's link header fetch next page edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d93e85b2570f00e41c96 v 0 excerpt recurly api provides shortcut creating invoice charge optionally account processing payment immediately creating account required account attributes must supplied charging existing account account code must supplied link external false next pages description parentdoc null title create transaction type post category 5919d93885b2570f00e41c4c isreference true link url slug create transaction user 556790090145bc23008e3bf8 api examples codes name language php code \\? php n n transaction new recurly transaction \\( \\) n transaction amount cents 1000 10 00 n transaction currency 'usd' n n account new recurly account \\( \\) n account account code '1' n n billing info new recurly billinginfo \\( \\) n billing info first name 'verena' n billing info last name 'example' n billing info number '4111 1111 1111 1111' n billing info verification value '123' n billing info month 11 n billing info year 2015 n n account billing info billing info n transaction account account n n transaction create \\( \\) language ruby code transaction recurly transaction create \\( n amount cents 10 00 n currency 'usd' n account n account code '1' n billing info n first name 'verena' n last name 'example' n number '4111 1111 1111 1111' n verification value '123' n month 11 n year 2015 n n n \\) language python code transaction transaction \\( n amount cents 1000 n currency 'usd' n account account \\( n account code account code n billing info billinginfo \\( n first name 'verena' n last name 'example' n number '4111 1111 1111 1111' n verification value '123' n year 2015' n month 11 n \\) n \\) n \\) ntransaction save \\( \\) language csharp code var account accounts get \\( 1 \\) naccount billinginfo new billinginfo \\( account accountcode \\) n n tfirstname verana n tlastname example n tcreditcardnumber 4111 1111 1111 1111 n tverificationvalue 123 n texpirationyear 2015 n texpirationmonth 11 n nvar transaction new transaction \\( account 100 usd \\) ntransaction create \\( \\) language xml code example stored billing info n transaction n amount cents 100 amount cents n currency usd currency n account n account code 1 account code n account n transaction n n example new billing info n transaction n amount cents 1000 amount cents n currency usd currency n account n account code 1 account code n billing info n first name verena first name n last name example last name n address1 123 main st address1 n city san francisco city n zip 94105 zip n country us country n number 4111 1111 1111 1111 number n verification value 123 verification value n month 11 month n year 2015 year n billing info n account n transaction method post results codes code transaction href https subdomain recurly com v2 transactions 374adcf4d716c1afc7b0b64bb79d438d type credit card n account href https subdomain recurly com v2 accounts 1 n invoice href https subdomain recurly com v2 invoices 1005 n uuid 374adcf4d716c1afc7b0b64bb79d438d uuid n action purchase action n amount cents type integer 109 amount cents n tax cents type integer 9 tax cents n currency usd currency n status success status n payment method credit card payment method n reference 2216615 reference n source transaction source n recurring type boolean false recurring n test type boolean true test n voidable type boolean true voidable n refundable type boolean true refundable n ip address 127 0 0 1 ip address n cvv result code nil nil n avs result code street address postal code match avs result n avs result street nil nil n avs result postal nil nil n created type datetime 2016 07 11t22 26 35z created n updated type datetime 2016 07 11t22 26 35z updated n details n account n account code 1 account code n first name verena first name n last name example last name n company new company name company n email verena example com email n billing info type credit card n first name verena first name n last name example last name n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n vat number nil nil n card type visa card type n year type integer 2019 year n month type integer 12 month n first six 411111 first six n last four 1111 last four n billing info n account n details n name refund href https subdomain recurly com v2 transactions 374adcf4d716c1afc7b0b64bb79d438d method delete n transaction name status 201 language xml code errors n transaction error n error code declined saveable error code n error category soft error category n merchant message transaction declined without specific information please contact payment gateway details ask customer contact bank merchant message n customer message transaction declined please use different card contact bank customer message n gateway error code nil nil n transaction error n error field transaction account base symbol declined saveable transaction declined please use different card contact bank error n transaction href https subdomain recurly com v2 transactions 3c42a4dc4ee4c81ed3795a415b92aa22 type credit card n account href https subdomain recurly com v2 accounts 1 n uuid 3c42a4dc4ee4c81ed3795a415b92aa22 uuid n action purchase action n amount cents type integer 109 amount cents n tax cents type integer 9 tax cents n currency usd currency n status declined status n payment method credit card payment method n reference 3922896 reference n source transaction source n recurring type boolean false recurring n test type boolean true test n voidable type boolean false voidable n refundable type boolean false refundable n ip address 127 0 0 1 ip address n transaction error n error code declined saveable error code n error category soft error category n merchant message transaction declined without specific information please contact payment gateway details ask customer contact bank merchant message n customer message transaction declined please use different card contact bank customer message n gateway error code nil nil n transaction error n cvv result code nil nil n avs result code nil nil n avs result street nil nil n avs result postal nil nil n created type datetime 2017 03 15t21 22 18z created n updated type datetime 2017 03 15t21 22 18z updated n details n account n account code 1 account code n first name verena first name n last name example last name n company new company name company n email verena example com email n billing info type credit card n first name verena first name n last name example last name n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n vat number nil nil n card type visa card type n year type integer 2019 year n month type integer 12 month n first six 400000 first six n last four 0341 last four n billing info n account n details n transaction n errors language xml status 422 settings auth required params type int name amount cents id 558205eba5474a0d00d94770 ref body required true desc amount transaction cents max 10000000 default required true desc 3 letter currency transaction default type string name currency id 558205eba5474a0d00d9476f ref body ref body required true desc nested attributes \\( see \\) default type object name account id 558205eba5474a0d00d9476d default type string name account code id 558205eba5474a0d00d9476c ref body required true desc unique identifier used application identify account code may contain following characters z z 0 9 max 50 characters default type string name description id 558205eba5474a0d00d9476e ref body required false desc description transaction description added invoiced charge transaction object default type string name username id 558205eba5474a0d00d9476b ref body required false desc username ignore use usernames default type string name email id 558205eba5474a0d00d9476a ref body required false desc email address body required false desc first name max 50 characters default type string name first name id 558205eba5474a0d00d94769 ref desc last name max 50 characters default type string name last name id 558205eba5474a0d00d94768 ref body required false id 558205eba5474a0d00d94767 ref body required false desc company name max 50 characters default type string name company name id 558205eba5474a0d00d94766 ref body required false desc iso 639 1 language code user 's browser indicating preferred language locale default type string name accept language name billing info id 558205eba5474a0d00d94765 ref body required true desc account billing info nested attributes \\( see \\) default type object ref body required true desc first name max 50 characters default type string name first name id 558205eba5474a0d00d94764 body required true desc last name max 50 characters default type string name last name id 558205eba5474a0d00d94763 ref required false desc company name max 50 characters default type string name company id 558205eba5474a0d00d94762 ref body ref body required false desc address line 1 recommended address validation max 50 characters default type string name address1 id 558205eba5474a0d00d94761 default type string name address2 id 558205eba5474a0d00d94760 ref body required false desc address line 2 max 50 characters body required false desc city max 50 characters strongly recommended default type string name city id 558205eba5474a0d00d9475f ref desc state province 2 letters preferred default type string name state id 558205eba5474a0d00d9475e ref body required false id 558205eba5474a0d00d9475d ref body required false desc country 2 letter iso code strongly recommended default type string name country id 558205eba5474a0d00d9475c ref body required false desc zip postal code recommended address validation strongly recommended default type string name zip name phone id 558205eba5474a0d00d9475b ref body required false desc phone number default type string type string name vat number id 558205eba5474a0d00d9475a ref body required false desc customer 's vat number default desc customer 's ip address updating billing information strongly recommended default type string name ip address id 558205eba5474a0d00d94759 ref body required false id 558205eba5474a0d00d94758 ref body required true desc credit card number spaces dashes accepted default type string name number name month id 558205eba5474a0d00d94757 ref body required true desc expiration month default type string type string name year id 558205eba5474a0d00d94756 ref body required true desc expiration year default desc security code cvv 3 4 digits strongly recommended default type string name verification value id 558205eba5474a0d00d94755 ref body required false id 55a92fab27a17d210052528b ref body required false desc accounting code max 20 characters default type string name accounting code name tax exempt id 55a92fab27a17d210052528a ref body required false desc `true` exempts tax charge `false` applies tax charge defined defaults `false` default false type boolean ref body required false desc optional field eu vat merchants avalara avatax pro merchants using recurly 's eu vat feature use values 'unknown' 'physical' 'digital' avatax account configured use avalara tax codes assign custom tax rules default type string name tax code id 55a92fab27a17d2100525289 url transactions body block api header n n type basic n title using stored billing info n n block nyou may create transaction without specifying billing information account already stored billing information n block code n n codes n n code transaction n amount cents 100 amount cents n currency usd currency n account n account code 1 account code n account n transaction n language xml n n n code transaction new recurly transaction \\( \\) n transaction amount cents 100 1 00 n transaction currency 'usd' n n transaction account new recurly account \\( \\) n transaction account account code '1' n n transaction create \\( \\) n language php n n n code transaction account transactions create \\( n amount cents 1 00 n currency 'usd' n account account code '1' n \\) n language ruby n n n code transaction transaction \\( n amount cents 100 n currency 'usd' n account account \\( account code '1' \\) n \\) ntransaction save \\( \\) n language python n n n code var transaction new transaction \\( 1 100 usd \\) account code unit amount cents currency ntransaction create \\( \\) n language csharp n n n n block n n block api header n n type basic n title using existing billing info n n block nafter successful transaction billing information saved account future purchases account already stored billing info billing info last transaction overwrite previous values n block code n n codes n n code transaction n amount cents 1000 amount cents n currency usd currency n account n account code 1 account code n billing info n first name verena first name n last name example last name n address1 123 main st address1 n city san francisco city n zip 94105 zip n country us country n number 4111 1111 1111 1111 number n verification value 123 verification value n month 11 month n year 2015 year n billing info n account n transaction n language xml n n n code transaction new recurly transaction \\( \\) n transaction amount cents 1000 10 00 n transaction currency 'usd' n n account new recurly account \\( \\) n account account code '1' n n billing info new recurly billinginfo \\( \\) n billing info first name 'verena' n billing info last name 'example' n billing info number '4111 1111 1111 1111' n billing info verification value '123' n billing info month 11 n billing info year 2015 n n account billing info billing info n transaction account account n n transaction create \\( \\) n language php n n n code transaction recurly transaction create \\( n amount cents 10 00 n currency 'usd' n account n account code '1' n billing info n first name 'verena' n last name 'example' n number '4111 1111 1111 1111' n verification value '123' n month 11 n year 2015 n n n \\) n language ruby n n n code transaction transaction \\( n amount cents 1000 n currency 'usd' n account account \\( n account code account code n billing info billinginfo \\( n first name 'verena' n last name 'example' n number '4111 1111 1111 1111' n verification value '123' n year 2015' n month 11 n \\) n \\) n \\) ntransaction save \\( \\) n language python n n n code var account accounts get \\( 1 \\) naccount billinginfo new billinginfo \\( account accountcode \\) n n tfirstname verana n tlastname example n tcreditcardnumber 4111 1111 1111 1111 n tverificationvalue 123 n texpirationyear 2015 n texpirationmonth 11 n nvar transaction new transaction \\( account 100 usd \\) ntransaction create \\( \\) n language csharp n n n n block createdat 2015 06 17t23 42 34 999z githubsync hidden false order 3 version 5919d93785b2570f00e41c39 project 555fbba928249c1900618a82 sync unique updates childrenpages postcreate transactionthe recurly api provides shortcut creating invoice charge optionally account processing payment immediately creating account required account attributes must supplied charging existing account account code must supplied body paramsamount cents requiredintegeramount transaction cents max 10000000 currency requiredstring3 letter currency transactionaccount requiredobjectnested attributes \\( see \\) account code requiredstringa unique identifier used application identify account code may contain following characters z z 0 9 max 50 characters description stringa description transaction description added invoiced charge transaction objectusername stringusername ignore use usernamesemail stringemail addressfirst name stringfirst name max 50 characters last name stringlast name max 50 characters company name stringcompany name max 50 characters accept language stringan iso 639 1 language code user 's browser indicating preferred language locale billing info requiredobjectaccount billing info nested attributes \\( see \\) first name requiredstringfirst name max 50 characters last name requiredstringlast name max 50 characters company stringcompany name max 50 characters address1 stringaddress line 1 recommended address validation max 50 characters address2 stringaddress line 2 max 50 characters city stringcity max 50 characters strongly recommendedstate stringstate province 2 letters preferredcountry stringcountry 2 letter iso code strongly recommendedzip stringzip postal code recommended address validation strongly recommendedphone stringphone numbervat number stringcustomer 's vat numberip address stringcustomer 's ip address updating billing information strongly recommended number requiredstringcredit card number spaces dashes accepted month requiredstringexpiration monthyear requiredstringexpiration yearverification value stringsecurity code cvv 3 4 digits strongly recommended accounting code stringaccounting code max 20 characters tax exempt booleanfalse`true` exempts tax charge `false` applies tax charge defined defaults `false` tax code stringoptional field eu vat merchants avalara avatax pro merchants using recurly 's eu vat feature use values 'unknown' 'physical' 'digital' avatax account configured use avalara tax codes assign custom tax rules using stored billing info may create transaction without specifying billing information account already stored billing information xml php ruby python c using existing billing info successful transaction billing information saved account future purchases account already stored billing info billing info last transaction overwrite previous values xml php ruby python c edit pagesuggest editsdefinition api url page api url examplesphprubypythonc xmlresult format201 created422 unprocessable entity id 5919d93e85b2570f00e41c97 sync unique version 5919d93785b2570f00e41c39 category 5919d93885b2570f00e41c4c link external false order 4 isreference true type get updates 55bbdca91067fc1700510eeb 576d8c554bcd290e00428a1d body createdat 2015 06 17t23 13 45 507z hidden false slug lookup transaction user 556790090145bc23008e3bf8 githubsync link url parentdoc null excerpt lookup specific transaction next pages description project 555fbba928249c1900618a82 title lookup transaction v 0 api settings auth required params ref path required true desc transaction 's unique identifier default type string name uuid id 55bbe4751db0f71700ab3b52 url transactions uuid examples codes name code \\? php n ntry n transaction recurly transaction get \\( 'a13acd8fe4294916b79aec87b7ea441f' \\) n n print transaction transaction n catch \\( recurly notfounderror e \\) n print transaction found e n language php code transaction recurly transaction find \\( 'a13acd8fe4294916b79aec87b7ea441f' \\) language ruby code transaction transaction get \\( 'a13acd8fe4294916b79aec87b7ea441f' \\) language python code var transaction transactions get \\( a13acd8fe4294916b79aec87b7ea441f \\) language csharp method get results codes name status 200 language xml code transaction href https subdomain recurly com v2 transactions 37bff9ddc1e468a59f6fef417cb32281 type credit card n account href https subdomain recurly com v2 accounts 1 n invoice href https subdomain recurly com v2 invoices 1006 n subscription href https subdomain recurly com v2 subscriptions 37bfef7a8e44cfc3817b7a43eba8a6e6 n original transaction href https subdomain recurly com v2 transactions 37bfef7b3873aed2af2a3d4d35878e5f n uuid 37bff9ddc1e468a59f6fef417cb32281 uuid n action refund action n amount cents type integer 870 amount cents n tax cents type integer 70 tax cents n currency eur currency n status success status n payment method credit card payment method n reference 1171163 reference n source subscription source n recurring type boolean false recurring n test type boolean true test n voidable type boolean true voidable n refundable type boolean false refundable n ip address nil nil n cvv result code nil nil n avs result code street address postal code match avs result n avs result street nil nil n avs result postal nil nil n created type datetime 2016 08 03t16 13 44z created n updated type datetime 2016 08 03t16 13 44z updated n details n account n account code 1 account code n first name verena first name n last name example last name n company recurly inc company n email verena example com email n billing info type credit card n first name verena first name n last name example last name n address1 123 main st address1 n address2 nil nil n city san francisco city n state ca state n zip 94105 zip n country us country n phone nil nil n vat number nil nil n card type visa card type n year type integer 2019 year n month type integer 12 month n first six 411111 first six n last four 1111 last four n billing info n account n details n name refund href https subdomain recurly com v2 transactions 37bff9ddc1e468a59f6fef417cb32281 method delete n transaction childrenpages getlookup transactionlookup specific transaction path paramsuuid requiredstringtransaction 's unique identifier edit pagesuggest editsdefinition api url page api url examplesphprubypythonc result format200 ok id 5919d93e85b2570f00e41c98 slug refund transaction title refund transaction \\( deprecated \\) v 0 hidden false link external false order 5 project 555fbba928249c1900618a82 parentdoc null updates category 5919d93885b2570f00e41c4c githubsync link url next pages description body block callout n n type danger n body moving refunds invoice object transaction refunds longer work switched invoice refunds site settings created site november 11 2014 automatically invoice refunds please see api documentation invoices n n block n n block api header n n type basic n title partial refunds n n block nif transaction settled attempt partial refund request fail please wait transaction settled \\( typically 24 hours \\) performing partial refund advice varies depending payment gateway settles transaction n block code n n codes n n code transaction recurly transaction get \\( 'a13acd8fe4294916b79aec87b7ea441f' \\) n transaction refund \\( 1000 \\) refund 10 00 n language php n n n code transaction recurly transaction find \\( 'a13acd8fe4294916b79aec87b7ea441f' \\) ntransaction refund \\( 10 00 \\) n language ruby n n n code transaction transaction get \\( 'a13acd8fe4294916b79aec87b7ea441f' \\) ntransaction refund \\( amount cents 1000 \\) n language python n n n code var transaction transactions get \\( a13acd8fe4294916b79aec87b7ea441f \\) ntransaction refund \\( 1000 \\) \\( cents \\) refund 10 n language csharp n n n n block n n block api header n n type basic n title full refunds n n block nif transaction settled perform full refund transaction voided instead voided transactions typically show customer 's card statement transaction settled refund performed n block code n n codes n n code transaction recurly transaction get \\( 'a13acd8fe4294916b79aec87b7ea441f' \\) n transaction refund \\( \\) n language php n n n code transaction recurly transaction find \\( 'a13acd8fe4294916b79aec87b7ea441f' \\) ntransaction refund \\( \\) n language ruby n n n code transaction transaction get \\( 'a13acd8fe4294916b79aec87b7ea441f' \\) ntransaction refund \\( \\) n language python n n n code var transaction transactions get \\( a13acd8fe4294916b79aec87b7ea441f \\) ntransaction refund \\( \\) n language csharp n n n n block createdat 2015 06 18t00 02 14 870z type delete version 5919d93785b2570f00e41c39 api url transactions uuid examples codes method delete results codes status 204 language json code status 204 content name settings auth required params default type int name amount cents id 55820a86a5474a0d00d94783 ref body required false desc amount refund cents defaults full amount default type string name uuid id 578d04e7733f2f2000b15389 ref path required true desc transaction 's unique identifier excerpt transaction refunded settled successfully refunded amount equal less original amount please note payment gateways allow credit card partially refunded day original purchase using transaction refund generate refund invoice need refund invoice use invoice line item invoice open amount refund isreference true sync unique user 556790090145bc23008e3bf8 childrenpages deleterefund transaction \\( deprecated \\) transaction refunded settled successfully refunded amount equal less original amount please note payment gateways allow credit card partially refunded day original purchase using transaction refund generate refund invoice need refund invoice use invoice line item invoice open amount refund path paramsuuid requiredstringtransaction 's unique identifier body paramsamount cents integeramount refund cents defaults full amount moving refunds invoice object transaction refunds longer work switched invoice refunds site settings created site november 11 2014 automatically invoice refunds please see api documentation invoices partial refunds transaction settled attempt partial refund request fail please wait transaction settled \\( typically 24 hours \\) performing partial refund advice varies depending payment gateway settles transaction php ruby python c full refunds transaction settled perform full refund transaction voided instead voided transactions typically show customer 's card statement transaction settled refund performed php ruby python c edit pagesuggest editsdefinition api url page api url result format204 content id 5919d94285b2570f00e41cd9 excerpt returns list dates exports link url title list export dates body createdat 2016 08 12t18 49 06 664z githubsync sync unique api settings auth required params url export dates examples codes language php code \\? php nforeach \\( recurly exportdatelist get \\( \\) date \\) n print \\( date date n \\) n method get results codes status 200 language xml code export dates type array n export date n date 2016 08 01 date n export files href https subdomain recurly com v2 export dates 2016 08 01 export files n export date n export dates name code error n symbol found symbol n description lang en us 404 resource found description n error name status 404 language json link external false next pages description parentdoc null slug list export dates updates v 0 category 5919d93885b2570f00e41c4d hidden false isreference true order 0 project 555fbba928249c1900618a82 type get user 559d85d26b21311700fb0b7b version 5919d93785b2570f00e41c39 childrenpages getlist export datesreturns list dates exports edit pagesuggest editsdefinition api url page api url examplesphpresult format200 ok404 found id 5919d94285b2570f00e41cda body category 5919d93885b2570f00e41c4d hidden false link external false title list date 's export files user 559d85d26b21311700fb0b7b api examples codes language php code \\? php nforeach \\( recurly exportfilelist get \\( '2016 08 01' \\) file \\) n print \\( file md5sum file name file gethref \\( \\) n \\) n method get results codes status 200 language xml code export files href https subdomain recurly com v2 export dates 2016 08 01 export files n export file href https https subdomain recurly com v2 export dates 2016 08 01 export files revenue schedules full csv n name revenue schedules full csv name n md5sum 9aa55980167ae522b27410edcd5303b0 md5sum n export file n export files name status 404 language xml code error n symbol found symbol n description lang en us 404 resource found description n error name settings auth required params name date id 57b74200480bae1900ce4e5d ref path required true desc date export file generated default type yyyy mm dd url export dates date export files project 555fbba928249c1900618a82 sync unique next pages description order 1 slug list export files type get updates version 5919d93785b2570f00e41c39 isreference true link url excerpt returns list export files generated date githubsync parentdoc null v 0 createdat 2016 08 19t17 29 36 058z childrenpages getlist date 's export filesreturns list export files generated date path paramsdate requiredyyyy mm ddthe date export file generated edit pagesuggest editsdefinition api url page api url examplesphpresult format200 ok404 found id 5919d94285b2570f00e41cdb link external false order 2 parentdoc null slug download export file api url export dates date export files file name examples codes code \\? php n get file n file recurly exportfile get \\( '2016 08 01' 'revenue schedules full csv' \\) n n save locally n fp fopen \\( revenue schedules full csv 'w' \\) n file download \\( fp \\) nfclose \\( fp \\) language php method get results codes code export file href https subdomain recurly com v2 export dates 2016 08 01 export files revenue schedules full csv n expires type datetime 2016 08 19t18 32 06z expires n download url https recurly download url com freightliner 1234567890 dates 2016 09 27 download file csv gz \\? awsaccesskeyid key amp expires 1471631526 amp signature ttidgi25oqlho7jrj 2bu83gzipiq 3d download url n export file name status 200 language xml status 404 language xml code error n symbol found symbol n description lang en us 404 resource found description n error name settings auth required params id 57b74200480bae1900ce4e5d ref path required true desc date export file generated default type yyyy mm dd name date id 57b742f1049a3d1700b73ce1 ref path required true desc name export file default type string name file name githubsync isreference true title download export file project 555fbba928249c1900618a82 type get v 0 category 5919d93885b2570f00e41c4d link url next pages description body excerpt returns temporary url download export file hidden false version 5919d93785b2570f00e41c39 createdat 2016 08 19t17 33 37 090z sync unique updates user 559d85d26b21311700fb0b7b childrenpages getdownload export filereturns temporary url download export file path paramsdate requiredyyyy mm ddthe date export file generated file name requiredstringthe name export file edit pagesuggest editsdefinition api url page api url examplesphpresult format200 ok404 found id 591b6573c2bcec0f00754238 body slug create purchase v 1 hidden false link url next pages description project 555fbba928249c1900618a82 title create purchase user 55957fd09b8d0a25005a7d30 version 5919d93785b2570f00e41c39 api method post params desc account object existing account new account default type object name account id 591b66df7d2cb40f00d471d6 ref body required true id 591b66df7d2cb40f00d471d5 ref body required true desc list adjustment objects default type array object name adjustments name collection method id 591b66df7d2cb40f00d471d4 ref body required false desc collection method invoice \\( `automatic` `manual` \\) default type string ref body required false desc 3 letter currency code adjustments default type string name currency id 591b66df7d2cb40f00d471d3 default type string name po number id 591b66df7d2cb40f00d471d2 ref body required false desc po number resulting invoice body required false desc net terms invoice default type int name net terms id 591b66df7d2cb40f00d471d1 ref results codes status 200 language xml code invoice href https subdomain recurly com v2 invoices 3703 n account href https subdomain recurly com v2 accounts f30ea4e5 8308 4aa8 b783 91fb3b748581 n address n address1 400 alabama st address1 n address2 nil nil n city san francisco city n state ca state n zip 94110 zip n country us country n phone nil nil n address n uuid 3d827c5608d54b2b3429ce4d85b19644 uuid n state collected state n invoice number prefix n invoice number type integer 3703 invoice number n po number nil nil n vat number nil nil n subtotal cents type integer 1000 subtotal cents n tax cents type integer 0 tax cents n total cents type integer 1000 total cents n subtotal discount cents type integer 1000 subtotal discount cents n currency usd currency n created type datetime 2017 05 16t23 56 31z created n updated type datetime 2017 05 16t23 56 31z updated n attempt next collection nil nil n closed type datetime 2017 05 16t23 56 31z closed n terms conditions nil nil n customer notes nil nil n recovery reason nil nil n net terms type integer 0 net terms n collection method automatic collection method n line items type array n adjustment href https subdomain recurly com v2 adjustments 3d827c560172f7b73f406e4738b153bf type charge n account href https subdomain recurly com v2 accounts f30ea4e5 8308 4aa8 b783 91fb3b748581 n invoice href https subdomain recurly com v2 invoices 3703 n uuid 3d827c560172f7b73f406e4738b153bf uuid n state invoiced state n description nil nil n accounting code nil nil n product code 4549449c 5870 4845 b672 1d07f15e87dd product code n origin debit origin n unit amount cents type integer 1000 unit amount cents n quantity type integer 1 quantity n discount cents type integer 0 discount cents n tax cents type integer 0 tax cents n total cents type integer 1000 total cents n currency usd currency n taxable type boolean false taxable n tax exempt type boolean false tax exempt n tax code nil nil n start date type datetime 2017 05 16t23 56 31z start date n end date nil nil n created type datetime 2017 05 16t23 56 31z created n updated type datetime 2017 05 16t23 56 31z updated n revenue schedule type invoice revenue schedule type n adjustment n line items n transactions type array n transaction href https subdomain recurly com v2 transactions 3d827c561f7279135c4c6c4165bdecee type credit card n account href https subdomain recurly com v2 accounts f30ea4e5 8308 4aa8 b783 91fb3b748581 n invoice href https subdomain recurly com v2 invoices 3703 n uuid 3d827c561f7279135c4c6c4165bdecee uuid n action purchase action n amount cents type integer 1000 amount cents n tax cents type integer 0 tax cents n currency usd currency n status success status n payment method credit card payment method n reference 826700 reference n source transaction source n recurring type boolean false recurring n test type boolean true test n voidable type boolean true voidable n refundable type boolean true refundable n ip address nil nil n gateway type test gateway type n origin api origin n description nil nil n message successful test transaction message n approval code nil nil n failure type nil nil n gateway error codes nil nil n cvv result code nil nil n avs result code street address postal code match avs result n avs result street nil nil n avs result postal nil nil n created type datetime 2017 05 16t23 56 31z created n collected type datetime 2017 05 16t23 56 31z collected n updated type datetime 2017 05 16t23 56 31z updated n details n account n account code f30ea4e5 8308 4aa8 b783 91fb3b748581 account code n first name nil nil n last name nil nil n company nil nil n email nil nil n billing info type credit card n first name benjamin first name n last name du monde last name n address1 400 alabama st address1 n address2 nil nil n city san francisco city n state ca state n zip 94110 zip n country us country n phone nil nil n vat number nil nil n card type visa card type n year type integer 2019 year n month type integer 12 month n first six 411111 first six n last four 1111 last four n billing info n account n details n transaction n transactions n name refund href https subdomain recurly com v2 invoices 3703 refund method post n invoice name settings url purchases auth required examples codes code purchase n collection method automatic collection method n currency usd currency n account n account code c442b36c c64f 41d7 b8e1 9c04e7a6ff82 account code n billing info n address1 400 alabama st address1 n city san francisco city n country us country n first name benjamin first name n last name du monde last name n month 12 month n number 4111 1111 1111 1111 number n state ca state n year 2019 year n zip 94110 zip n billing info n account n adjustments n adjustment n currency usd currency n product code 4549449c 5870 4845 b672 1d07f15e87dd product code n quantity 1 quantity n revenue schedule type invoice revenue schedule type n unit amount cents 1000 unit amount cents n adjustment n adjustments n purchase language xml code require 'securerandom' n npurchase recurly purchase new \\( n currency 'usd' n collection method automatic n account n account code securerandom uuid n billing info n first name 'benjamin' n last name 'du monde' n address1 '400 alabama st' n city 'san francisco' n state 'ca' n zip '94110' n country 'us' n number '4111 1111 1111 1111' n month 12 n year 2019 n n n adjustments n n product code securerandom uuid n unit amount cents 1000 n quantity 1 n revenue schedule type invoice n n n \\) n nbegin n invoice recurly purchase invoice \\( purchase \\) n puts invoice inspect nrescue recurly resource invalid e n invalid data nrescue recurly transaction error e n transaction error n e transaction n e transaction error code nend language ruby code \\? php n n purchase new recurly purchase \\( \\) n purchase currency 'usd' n purchase collection method 'automatic' n purchase account new recurly account \\( \\) n purchase account account code 'aba9209a aa61 4790 8e61 0a2692435fee' n purchase account address phone 555 555 5555 n purchase account address email verena example com n purchase account address address1 123 main st n purchase account address city san francisco n purchase account address state ca n purchase account address zip 94110 n purchase account address country us n n billing info new recurly billinginfo \\( \\) n billing info number '4111 1111 1111 1111' n billing info month 12 n billing info year 2019 n billing info verification value '123' n billing info address1 '400 alabama st' n billing info city 'san francisco' n billing info state 'ca' n billing info country 'us' n billing info zip '94110' n purchase account billing info billing info n n adjustment new recurly adjustment \\( \\) n adjustment product code abcd123 n adjustment unit amount cents 1000 n adjustment currency 'usd' n adjustment quantity 1 n adjustment revenue schedule type 'at invoice' n purchase adjustments array \\( adjustment \\) n n create preview invoice live invoice ntry n invoice recurly purchase invoice \\( purchase \\) n catch \\( recurly validationerror e \\) n get idea purchase failed looking objects n var dump \\( e errors transaction error \\) recurly transactionerror n var dump \\( e errors transaction \\) recurly transaction n n language php excerpt purchase object exists request data allows create account adjustments invoice one call requires successful payment post endpoint returns resulting invoice githubsync link external false updates category 591b655903152b0f00de5291 createdat 2017 05 16t20 47 47 026z isreference false order 0 parentdoc null sync unique type post childrenpages postcreate purchasethe purchase object exists request data allows create account adjustments invoice one call requires successful payment post endpoint returns resulting invoice body paramsaccount requiredobjectan account object existing account new account adjustments requiredarray objectsthis list adjustment objects collection method stringthe collection method invoice \\( `automatic` `manual` \\) currency stringthe 3 letter currency code adjustments po number stringa po number resulting invoice net terms integerthe net terms invoice edit pagesuggest editsdefinition api url page api url examplesxmlrubyphpresult format200 ok id 591c7cc11996261900bab34c user 55957fd09b8d0a25005a7d30 body hidden false link url next pages description sync unique updates category 591b655903152b0f00de5291 createdat 2017 05 17t16 39 29 580z githubsync isreference false link external false v 0 api auth required examples codes language xml code purchase n collection method automatic collection method n currency usd currency n account n account code c442b36c c64f 41d7 b8e1 9c04e7a6ff82 account code n billing info n address1 400 alabama st address1 n city san francisco city n country us country n first name benjamin first name n last name du monde last name n month 12 month n number 4111 1111 1111 1111 number n state ca state n year 2019 year n zip 94110 zip n billing info n account n adjustments n adjustment n currency usd currency n product code 4549449c 5870 4845 b672 1d07f15e87dd product code n quantity 1 quantity n revenue schedule type invoice revenue schedule type n unit amount cents 1000 unit amount cents n adjustment n adjustments n purchase language ruby code require 'securerandom' n npurchase recurly purchase new \\( n currency 'usd' n collection method automatic n account n account code securerandom uuid n billing info n first name 'benjamin' n last name 'du monde' n address1 '400 alabama st' n city 'san francisco' n state 'ca' n zip '94110' n country 'us' n number '4111 1111 1111 1111' n month 12 n year 2019 n n n adjustments n n product code securerandom uuid n unit amount cents 1000 n quantity 1 n revenue schedule type invoice n n n \\) nbegin n preview invoice recurly purchase preview \\( purchase \\) n puts preview invoice inspect nrescue recurly resource invalid e n invalid data nend language php code \\? php n n purchase new recurly purchase \\( \\) n purchase currency 'usd' n purchase collection method 'automatic' n purchase account new recurly account \\( \\) n purchase account account code 'aba9209a aa61 4790 8e61 0a2692435fee' n purchase account address phone 555 555 5555 n purchase account address email verena example com n purchase account address address1 123 main st n purchase account address city san francisco n purchase account address state ca n purchase account address zip 94110 n purchase account address country us n n billing info new recurly billinginfo \\( \\) n billing info number '4111 1111 1111 1111' n billing info month 12 n billing info year 2019 n billing info verification value '123' n billing info address1 '400 alabama st' n billing info city 'san francisco' n billing info state 'ca' n billing info country 'us' n billing info zip '94110' n purchase account billing info billing info n n adjustment new recurly adjustment \\( \\) n adjustment product code abcd123 n adjustment unit amount cents 1000 n adjustment currency 'usd' n adjustment quantity 1 n adjustment revenue schedule type 'at invoice' n purchase adjustments array \\( adjustment \\) n n create preview invoice live invoice ntry n previewinvoice recurly purchase preview \\( purchase \\) n catch \\( recurly validationerror e \\) n get idea purchase failed looking objects n var dump \\( e errors transaction error \\) recurly transactionerror n var dump \\( e errors transaction \\) recurly transaction n method post params id 591b66df7d2cb40f00d471d6 ref body required true desc account object existing account new account default type object name account name adjustments id 591b66df7d2cb40f00d471d5 ref body required true desc list adjustment objects default type array object ref body required false desc collection method invoice \\( `automatic` `manual` \\) default type string name collection method id 591b66df7d2cb40f00d471d4 body required false desc 3 letter currency code adjustments default type string name currency id 591b66df7d2cb40f00d471d3 ref desc po number resulting invoice default type string name po number id 591b66df7d2cb40f00d471d2 ref body required false id 591b66df7d2cb40f00d471d1 ref body required false desc net terms invoice default type int name net terms results codes status 200 language xml code invoice href n account href https subdomain recurly com v2 accounts c442b36c c64f 41d7 b8e1 9c04e7a6ff82 n address n address1 400 alabama st address1 n address2 nil nil n city san francisco city n state ca state n zip 94110 zip n country us country n phone nil nil n address n uuid 3d86103d6ae10e65721b344d349dd625 uuid n state open state n invoice number prefix n invoice number nil nil n po number nil nil n vat number nil nil n subtotal cents type integer 1000 subtotal cents n tax cents type integer 0 tax cents n total cents type integer 1000 total cents n subtotal discount cents type integer 1000 subtotal discount cents n currency usd currency n created nil nil n updated nil nil n attempt next collection type datetime 2017 05 17t16 36 56z attempt next collection n closed nil nil n terms conditions nil nil n customer notes nil nil n recovery reason nil nil n net terms type integer 0 net terms n collection method automatic collection method n line items type array n adjustment href type charge n account href https subdomain recurly com v2 accounts c442b36c c64f 41d7 b8e1 9c04e7a6ff82 n uuid 3d86103d63f614d7aeee8341c98b2655 uuid n state pending state n description nil nil n accounting code nil nil n product code 4549449c 5870 4845 b672 1d07f15e87dd product code n origin debit origin n unit amount cents type integer 1000 unit amount cents n quantity type integer 1 quantity n discount cents type integer 0 discount cents n tax cents type integer 0 tax cents n total cents type integer 1000 total cents n currency usd currency n taxable type boolean false taxable n tax exempt type boolean false tax exempt n tax code nil nil n start date type datetime 2017 05 17t16 36 56z start date n end date nil nil n created nil nil n updated nil nil n revenue schedule type invoice revenue schedule type n adjustment n line items n transactions type array n transactions n invoice name settings url purchases preview excerpt purchase object exists request data allows create account adjustments invoice one call posting preview endpoint runs validations creates preview invoice run transactions project 555fbba928249c1900618a82 slug preview purchase title preview purchase version 5919d93785b2570f00e41c39 order 999 type post childrenpages postpreview purchasethe purchase object exists request data allows create account adjustments invoice one call posting preview endpoint runs validations creates preview invoice run transactions body paramsaccount requiredobjectan account object existing account new account adjustments requiredarray objectsthis list adjustment objects collection method stringthe collection method invoice \\( `automatic` `manual` \\) currency stringthe 3 letter currency code adjustments po number stringa po number resulting invoice net terms integerthe net terms invoice edit pagesuggest editsdefinition api url page api url examplesxmlrubyphpresult format200 ok", 
    "crawled_date": "2017-06-10T13:59:47.742275"
  }, 
  "27": {
    "link5": "https://cp.privatbank.ua/en/", 
    "link4": "http://en.privatbank.ua/letters-of-credit-in-uah/faq-848/", 
    "link1": "https://cp.privatbank.ua/how_to_use/users/create/api.html", 
    "api_url": "privatbank.ua", 
    "link3": "https://en.privatbank.ua/news/privatbank-provides-its-corporate-clients-with-the-bitrix24-system-for-free/", 
    "link2": "http://static.privatbank.ua/files/certiticate_of_status_28_10.pdf", 
    "progweb_url": "https://www.programmableweb.com/api/privatbank", 
    "progweb_date": "02.22.2010", 
    "progweb_descr": "PrivatBank is the largest commercial bank in Ukraine. It offers a RESTful API that can connect any internet services, kiosks and software to their payment services and databases. SSL is supported and responses are formatted in XML. The site and documentation are in Russian.", 
    "api_name": "PrivatBank", 
    "progweb_cat": "Financial,Banking", 
    "descr5": "documentation blog documentation blog faq sign google control exit enterprises conveyors operations steps development settings errors monitoring works purchase funnel universal conveyor features cloud service allows create develop business processes attach third party api developers possibility move code clear status definition using lua erlang javascript simple administering easy managers consequence reduce cost changes real time editing business processes convenient graphic representation effectiveness results work conveyor presentation customers 2013 middleware biz 2014 middleware biz 541 jefferson avenue suite 100 redwood city ca 94063 rights reserved patent protected documentation documentation log registration", 
    "descr4": "eng rus ukr investor relations financial institutions individuals legal entities list documents letter credit comprise \\? letter credit list documents sufficient confirm performance contract obligations seller typically list documents comprises following commercial invoice transport document \\( evidence goods acceptance carrier transportation \\) various certificates \\( regarding goods origin quality inspection third parties etc \\) insurance policy contents list depend terms delivery type transport requirements documents customs clearance specific type goods recommended list includes documents issued independent third parties \\( carriers chambers commerce industry insurance companies inspectorates \\) reduces risk documentation forging provides additional confirmation parameters goods shipped \\( quantity quality etc \\) enquiries \\? complaints \\? suggestions \\? vienotais istr cijas nr 50003086271 please contact us free info phone 3700 calls abroad 380 \\( 800 \\) 500 003", 
    "descr3": "eng rus ukr investor relations financial institutions individuals legal entities home press releases privatbank provides corporate clients bitrix24 system free privatbank ukrainian office 1c bitrix company announced joint project privatbank corporate customers received unique opportunity use united work space system bitrix24 free charge amazing service allow digitise everything related company management administration small business working group large corporation thousands employees says olexandr nikolenko privatbank head sme services system require additional costs installation possibility using cloud technologies allows reduce expenses internal communications telephony data storage office software bitrix24 service allows concentrate one work space functional business instruments company internal communications convenient social network format hr system automation sales management safe digital telephony video calls project management systems document collaboration electronic document management using files storages company documentation glad united work space service bitrix24 available corporate customers privatbank well says dmitry suslov director 1c bitrix offices ukraine belarus glad provide special conditions usage means bitrix24 company operate either using cloud storage via self hosted version installed company server configure individual features business processes corporate interface implement employee training system integrate management complexes bitrix24 provides absolute data security system 10 safety levels data downloaded bitrix24 safely kept cloud storage amazon data centers located europe client company personnel get access information authorisation passwords encrypted partake special offer privatbank 1c bitrix bank 's corporate customers visit web page learn details conditions action 1c bitrix company developer management systems companies websites corporate portals developed bitrix24 cloud service 1c bitrix software products professional systems managing companies websites online shops social networks communities corporate portals projects total number projects developed 1c bitrix platform exceeded 100 thousand 1c bitrix technological partner 11 thousand web studios web integrators including 870 ukrainian companies privatbank press center 380 92 716 08 81 press privatbank ua press center contacts 380 92 716 08 81 press privatbank ua address 50 naberezhna peremogy street dnipropetrovsk 49094 ukraine press releases may 30th 2017 privatbank leading corporate deposits growth online services competitive rates may 17th 2017 privatbank partners red cross implementation project ukraine comprehensive response may 15th 2017 since start year privatbank profits exceeded 5 billion hryvnias thanks bank operation new conditions halyna pakhachuk releases enquiries \\? complaints \\? suggestions \\? vienotais istr cijas nr 50003086271 please contact us free info phone 3700 calls abroad 380 \\( 800 \\) 500 003", 
    "descr2": "", 
    "descr1": "api 1 1 1 counter 1 2 time 1 3 go 1 4 go 1 5 api 1 6 api callback 1 7 api code 1 7 1 api code 1 8 api copy 1 9 api sum 1 10 rpc 1 10 1 api rpc 1 10 2 api rpc reply 1 11 1 11 1 queue 1 11 2 get task 1 12 1 12 1 count 1 12 2 2 3 3 1 3 2 4 dashboard 4 1 4 2 4 3 5 5 1 5 2 sftp 6 7 serif sans white sepia night twitter google facebook weibo instapaper api request format json post get conveyor nvp header header params url url api param api extra key \\( \\) value \\( \\) value id id id id \\( 1 2 4 \\) unixtime unixtime \\( 8 \\) json add json secret key api max threads 1 select error node create api api base64 escalation \\( \\) api api \\( max threads \\) api api api 60 escalation json res data api api 128", 
    "crawled_date": "2017-06-10T13:59:47.740096"
  }, 
  "20": {
    "link5": "https://www.paymentvision.com/blog/2015/11/17/cfpb-supervisory-highlights-report-fall-2015-issue-9-commentary", 
    "link4": "https://www.paymentvision.com/blog/2016/06/07/top-consumer-complaints-to-cfpb-in-2015-what-you-can-do-to-avoid-them", 
    "link1": "https://www.paymentvision.com/blog/2016/05/10/multifactor-authentication-adds-strength-to-updated-credit-card-security-rules", 
    "api_url": "paymentvision.com", 
    "link3": "https://www.paymentvision.com/blog/2015/11/24/what-to-look-for-in-a-payment-gateway", 
    "link2": "https://www.paymentvision.com/blog/2016/10/04/getting-the-loan-was-easier-the-challenges-of-student-loan-servicing", 
    "progweb_url": "https://www.programmableweb.com/api/payment-vision-pay", 
    "progweb_date": "05.21.2009", 
    "progweb_descr": "The Payment Vision service has a payment plug-in that works with receivables software, shopping carts, billing websites, and many other payment applications. Payment Vision also has a suite of built in payment capture applications. PayAPI is a SOAP-based XML web service, designed for software publishers to add payment processing functionality to their software applications in compliance with PCI-DSS. PayAPI can process one-time and recurring credit card, debit card and ACH payments. PaymentVision is an online payment gateway that connects to the ACH (Automated Clearing House) and all major debit and credit card networks.", 
    "api_name": "Payment Vision Pay", 
    "progweb_cat": "Payments,eCommerce", 
    "descr5": "client login call us 1 800 345 7243 payment servicesonline bill payivr bill payapi bill payvirtual terminalcard payment processingach payment processingrisk managementconvenience feesmobile payment solutionscheck phone paymentspartner programscurrent partnersprogram optionsindustry solutionsarm collectionsauto financeconsumer financegovernment municipalitiesutilitieshealthcareinsuranceresource centerfaqswhite papersach non processing calendarwebinarspayments blogabout usleadership teamawardssecuritycareerscontact us commentary cfpb supervisory highlights report \\( fall 2015 issue 9 \\) commentary cfpb supervisory highlights report \\( fall 2015 issue 9 \\) posted 11 17 2015 laurie nelson complianceon november 3 2015 consumer financial protection bureau released fall 2015 supervisory highlights report report highlights supervision work generally completed may 2015 august 2015 supervisory observations presented report related consumer reporting debt collection mortgage origination mortgage servicing student loan servicing observations found used reminder important proper procedures place ensure consumer requests necessary communications end consumer processed efficiently securely compliant manner consumer reportingthe cfpb noted several deficiencies within consumer reporting market violated regulation v 1 specifically found policies procedures addressing accuracy integrity failure periodically review update policies procedures failure provide consumers investigation results failure provide adverse notices using reports user failure proper processes procedures place related disputes takeaway consumer information integrity updating reports consumer requests continue something scrutinized cfpb consumer reporting entities take time review current processes place debt collectionin debt collection market cfpb noted 3 observations first observation failure properly disclose call debt collector specifically first call rather subsequent calls second observation discussed failure abide fdcpa follow consumer requests relates consumer contact consumer informs entity represented attorney 2 reason believe consumer cannot receive calls work 3 debt collector must proper procedure place ensure communication directed accordingly lastly third observation related regulation v violation whereas entities failed reasonable written policies procedures place protect accuracy integrity consumer information based findings debt collection entities need take time review processes place relates client communications first last mortgage originationthe mortgage origination industry continues issues documentation procedures several finds resulted request remediation borrower first several entities continued charge fees higher provided gfe regulation x provided zero tolerance fee increases 4 tolerance allowed higher allowed variance 5 secondly entities found list incorrect fees settlement statements fees either incorrectly stated stated violation regulation x 6 lastly cfpb noted entities failed reimburse borrowers understated aprs finance charges 7 addition findings cfpb also noted failures provide necessary home counseling document 8 accurate loan servicing statement 9 proper notice customer accurately reflects privacy policies practices 10 proper disclosure practices must followed entities industry specifically mortgage origination market require additional ongoing training due changes occurred past couple years mortgage servicingseveral cfpb findings within mortgage servicing industry related two hot topics including loss mitigation service fees first mortgage servicers found inadequate controls place relating loss mitigation programs specifically entities failed provide borrowers reasonable time submit missing loss mitigation documents denying application 11 entities failed provide borrowers adequate notice appeal rights denial foreclosure sale 12 entities even found require borrowers sign waivers releasing rights bring action federal courts order move forward mitigation plan 13 loss mitigation program oversight cannot start slack due decline volume compared years prior entities need review current procedures ensure clients given opportunities compliant regulations secondly cfpb noted several entities collecting service fees authorized borrower agreement 14 cfpb based finding reliance case 2010 new york found surcharges collected servicer provided debt agreement therefore violated fdcpa 15 highly debatable topic today another sign cfpb continue assume entity wrong charging sort surcharge convenience fee entity choices prepared defend position addition findings mortgage servicers also found mishandle borrower pmi provided inadequate debt violation notices student loan servicing review student loan servicing market cfpb found issues services application partial payments inadequate payment processing systems resulted mishandling auto debit payments improper communication borrower ability discharge student loans bankruptcy misrepresentations late fees inadequate information relating payoff loans small issues good indicator market continue looked scrutiny student loan servicing companies need take time evaluate procedures systems place ensure proper functionality compliance 1 12 cfr 1022 42 2 15 usc 1692c \\( \\) \\( 2 3 15 usc 1692c \\( \\) \\( 3 \\) 4 12 cfr 1024 7 \\( e \\) \\( 1 \\) 5 12 cfr 1024 7 \\( e \\) \\( 2 \\) 6 12 cfr 1024 8 \\( c \\) 7 12 cfr 1026 18 \\( \\) 22 \\( \\) 23 \\( g \\) 8 12 cfr 1024 20 \\( \\) \\( 1 \\) 9 12 cfr 1024 33 \\( \\) 10 12 cfr 1016 4 \\( \\) \\( 1 \\) 11 12 cfr 1024 41 \\( b \\) \\( 2 \\) \\( ii \\) 12 12 cfr 1024 41 \\( c \\) \\( 1 \\) \\( ii \\) 13 12 cfr 1026 36 \\( h \\) \\( 2 \\) 14 15 usc 1692a \\( 6 \\) 15 shami v nat l enterprise systems inc 914 f supp 2d 353 361 \\( e n 2012 \\) searchstay touch facebook google twitter facebook vimeo youtube newslettersubscribe newsletter receive date information paymentvision industry trends compliance sign categoriesautoscribecomplianceconvenience feeseventsinfographicsmerchant processingpayment processingsecurity payment servicesonline bill payivr bill payapi bill payvirtual terminalcard payment processingach payment processingrisk managementconvenience feesmobile payment solutionscheck phone paymentsindustry solutionsarm collectionsauto financeconsumer financegovernment municipalitiesutilitieshealthcareinsurancesupport resourcesfaqsinfographicsvideossecuritymedia kitwebinarsbecome partnercurrent partnerspayments blogabout usleadership teamin newsupcoming eventscareersawardscontact usphone 1 800 345 7243email support paymentvision comsocial media privacy policydata breach policysite map 2017 paymentvision division autoscribe corporation rights reserved paymentvision registered iso applied bank wilmington de", 
    "descr4": "client login call us 1 800 345 7243 payment servicesonline bill payivr bill payapi bill payvirtual terminalcard payment processingach payment processingrisk managementconvenience feesmobile payment solutionscheck phone paymentspartner programscurrent partnersprogram optionsindustry solutionsarm collectionsauto financeconsumer financegovernment municipalitiesutilitieshealthcareinsuranceresource centerfaqswhite papersach non processing calendarwebinarspayments blogabout usleadership teamawardssecuritycareerscontact us top consumer complaints cfpb 2015 avoid top consumer complaints cfpb 2015 avoid posted 06 07 2016 laurie nelson compliancethe consumer finance protection bureau recently released 2016 annual report outlining actions took administer fair debt collection practices act last year report officially delivered congress provides strong insights bureau practices excellent resource accounts receivable collection industry leaders understanding led consumer complaints cfpb responded help debt collectors improve compliance fdcpa reduce risk enforcement action litigation top consumer complaints 2015the cfpb office consumer response collects consumer complaints online phone mail 2015 bureau received total 85 200 consumer complaints channels represents slight decrease 2014 total 88 300 complaints categorized six key categories 1 continued attempts collect debt owed 40 percentthis category includes complaints debt belong consumer debt previously paid result identity theft previously discharged bankruptcy 2 communication tactics 18 percentthe majority complaints number calls made smaller number content calls including threats legal action use abusive language consumers also reported called inappropriate hours \\( 8 9 p \\) sent written notice call complaints received wrong person called repeatedly due wrong number changed number similar name 3 disclosure verification debt 15 percentthese complaints included allegations debt collectors provide written notice consumer right dispute debt within five days initial communication debt collectors provide documentation information consumers needed dispute debt small number reports received communication disclose attempt collect debt 4 taking threatening illegal action 11 percentthis category includes threats arrest jail threats sue despite statute limitations expired legal actions taken without proper notice suing wrong court attempting collect funds accounts exempt collections 5 false statements representation nine percentmost complaints involved attempts collect wrong amount consumer category also includes complaints debt collectors impersonating law enforcement officers government officials well false statements crime pay debt handful complaints involved giving advice actually adverse consumer interests telling respond lawsuit 6 improper contact sharing information seven percentthe primary cause complaints improper sharing information debt third parties including contacting employer told quarter involved debt collector continuing contact consumer told contacting consumer directly told contact attorney top enforcement actions 2015many consumer complaints resulted settlement consumer may also included agreement pay fine particularly egregious violations cfpb filed lawsuit debt collector largest settlements verdicts 2015 included 2 5 million refunds debt forgiveness plus 100 00 civil penalty claims related debt collection military members consumers including filing lawsuits far away debtor lived wrongfully disclosing information debt third parties 16 million redress plus 2 5 million civil penalty making collection calls early morning late night misrepresenting interest amounts deceptively overstating minimum payment due 10 million civil penalties plus 42 million consumer relief threats deception collecting debts debt collector known collectible 15 million penalty 48 million consumer redress failing honor loan modifications providing poor service financially impacted consumers deceptively charging convenience fees making payments 30 million civil penalty 50 million restitution major bank sold erroneous unenforceable charged credit card accounts independent debt buyers avoiding enforcement actions 2016the cfpb continue respond consumer complaints take enforcement actions appropriate also promoting education outreach initiatives help make consumers aware rights fdcpa consumer laws increase likelihood complaint made even relatively minor violations fdcpa keep mind consumers negative view debt collectors many may feel filing complaint way get back collection agencies thoroughly review complaints received previous year ensure policies procedures prevent employees taking similar action fdcpa compliance left legal team something employees thoroughly familiar prevent situation employee thinking outside box commits fdcpa violation specifically listed prohibited company policy special attention given employees managers compensation incentives tied amount debt collected working legal counsel review current practices proposed changes business practices adjust new laws excellent way maintain compliance searchstay touch facebook google twitter facebook vimeo youtube newslettersubscribe newsletter receive date information paymentvision industry trends compliance sign categoriesautoscribecomplianceconvenience feeseventsinfographicsmerchant processingpayment processingsecurity payment servicesonline bill payivr bill payapi bill payvirtual terminalcard payment processingach payment processingrisk managementconvenience feesmobile payment solutionscheck phone paymentsindustry solutionsarm collectionsauto financeconsumer financegovernment municipalitiesutilitieshealthcareinsurancesupport resourcesfaqsinfographicsvideossecuritymedia kitwebinarsbecome partnercurrent partnerspayments blogabout usleadership teamin newsupcoming eventscareersawardscontact usphone 1 800 345 7243email support paymentvision comsocial media privacy policydata breach policysite map 2017 paymentvision division autoscribe corporation rights reserved paymentvision registered iso applied bank wilmington de", 
    "descr3": "client login call us 1 800 345 7243 payment servicesonline bill payivr bill payapi bill payvirtual terminalcard payment processingach payment processingrisk managementconvenience feesmobile payment solutionscheck phone paymentspartner programscurrent partnersprogram optionsindustry solutionsarm collectionsauto financeconsumer financegovernment municipalitiesutilitieshealthcareinsuranceresource centerfaqswhite papersach non processing calendarwebinarspayments blogabout usleadership teamawardssecuritycareerscontact us look payment gateway look payment gateway posted 11 24 2015 brian sweet merchant processinga payment gateway third party service facilitates authorization customer payment information merchant gateways perform procedures encrypt payment information provide secure transaction also serve intermediary merchant payment processor searching payment gateway businesses keep following information mind find productive regulation compliant provider features integration payment gateway services include variety extra features meet particular merchant needs common examples include automated deposits processed payments automatically deposited merchant bank accounts real time reporting compliance information reports compiled real time billing services secured customer payment information retained set period allow additional billing concerns chargebacks refunds payment gateway coordinates procedures fraud detection transactions automatically screened fraud indicators systems integration payment procedures integrated merchant systems like webpages online systems page checkout phone systems brand matching visual designs features integrated merchant existing brand specifications card support various packages may used provide support different types credit debit cards security compliance businesses make sure chosen payment gateway provider maintains compliance standards along appropriate documentation record keeping business accepting credit card payments must comply regulations laid payment card industry data security standard \\( pci dss \\) gateway provider assumes responsibility standards merchant ensures compliant transaction particularly important merchant pci dss violations lead sanctions fines notably credit card providers initiate fines 5 000 100 000 per month violations one methods payment gateways use encrypt payment information using tokenization process transaction assigned anonymous identifier keep customer data secure additionally hosted tokenization actual payment data held payment gateway secured systems merchant retains anonymized token data decrypted gateway payment gateways also work comply statement standards attestation engagements \\( ssae \\) written american institute certified public accountants \\( aicpa \\) standards specify requirements describing reporting merchant procedures affect customer including payment processing reporting typically used merchants engage auditor reviews government mandated oversight pricing fees payment gateway arrangements typically operate per transaction pricing model around 20 75 per payment flat fees options available usually 50 100 per month small merchants often lack additional features access future system upgrades gateway providers may unbundle certain additional costs charge separately common examples include setup fees system maintenance costs merchants seek fair fee arrangement remembering bare bones pricing model usually comes minimal service package provides basic payment processing additional features services comes gateway packages old adage get pay truer ever features like automated deposits billing services result significant savings compared manpower costs merchant handle tasks additionally security compliance concerns represent large hidden cost would arise merchant procedures led fine support merchants always make sure chosen payment gateway provider clearly specified adequate system providing merchant support response resolution times problem arises crucial delays direct financial impact merchant different providers offer different procedures maintenance support communication busy merchant quickly run trouble procedures able keep business requirements many merchants require 24 7 phone email support guaranteed response times guaranteed procedures liability resolution customer complaints keeping concerns mind looking payment gateway provider allow merchant protect interests rest assured payment procedures satisfy legal requirements searchstay touch facebook google twitter facebook vimeo youtube newslettersubscribe newsletter receive date information paymentvision industry trends compliance sign categoriesautoscribecomplianceconvenience feeseventsinfographicsmerchant processingpayment processingsecurity payment servicesonline bill payivr bill payapi bill payvirtual terminalcard payment processingach payment processingrisk managementconvenience feesmobile payment solutionscheck phone paymentsindustry solutionsarm collectionsauto financeconsumer financegovernment municipalitiesutilitieshealthcareinsurancesupport resourcesfaqsinfographicsvideossecuritymedia kitwebinarsbecome partnercurrent partnerspayments blogabout usleadership teamin newsupcoming eventscareersawardscontact usphone 1 800 345 7243email support paymentvision comsocial media privacy policydata breach policysite map 2017 paymentvision division autoscribe corporation rights reserved paymentvision registered iso applied bank wilmington de", 
    "descr2": "client login call us 1 800 345 7243 payment servicesonline bill payivr bill payapi bill payvirtual terminalcard payment processingach payment processingrisk managementconvenience feesmobile payment solutionscheck phone paymentspartner programscurrent partnersprogram optionsindustry solutionsarm collectionsauto financeconsumer financegovernment municipalitiesutilitieshealthcareinsuranceresource centerfaqswhite papersach non processing calendarwebinarspayments blogabout usleadership teamawardssecuritycareerscontact us getting loan easier challenges student loan servicing getting loan easier challenges student loan servicing posted 10 04 2016 laurie nelson complianceas independent agency united states government consumer financial protection bureau \\( cfpb \\) formed july 11 2012 responsible protecting interests consumers financial matters jurisdiction includes banks payday lenders mortgage lenders debt collectors companies whose work touches financial health american consumers part continuing efforts protect inform american consumers cfpb produces distributes wide range reports variety topics instant report product seth frotman student loan ombudsman cfpb analyzes 3 500 private student loan complaints 2 400 federal student loan servicing complaints approximately 1 500 debt collection complaints related private federal student loan debt handled october 1 2015 may 31 2016 results broad sweep data presented cfpb report highlighted number areas borrowers continued experience frustration report notes complaints borrowers related range loan servicing concerns including payment processing handling servicer communicationsdifficulty accessing valid information income driven repayment \\( idr \\) plansreceiving conflicting information eligibility criteria enroll idr programs auto defaulting servicer places loan default upon death bankruptcy co signer even borrower making full time payments month report focuses problems borrowers face enrolling idr provides options policymakers market participants better serve student loan borrowers since 2009 federal law allowed student loan borrowers tie monthly student loan payments income result borrowers unemployed earn little pay little 0 month idr plans easy see idr plans would popular report finds trying take advantage programs many borrowers relying heavily student loan servicers inform availability idr optionshelp process necessary paperwork facilitate borrower enrollment however instead finding process streamlined borrowers reported poor customer serviceunexpected delayslost paperworkinconsistent inaccurate processingas result obstacles consumers complain increased unnecessary costsreduction benefits use idr programsunnecessarily extended repayment terms first time cfpb examined issues surrounding student loan repayment cfpb outlined consumer complaints surrounding information received repayment options servicers raised potential consumers missing long term benefits like idr favor short term solutions like forbearance 1 cfpb also outlined consumer complaints related verification income family size enrolled repayment program raised potential wasted consumer time money 2 current report takes another look student loan servicers process delays frustrate consumers threaten continued satisfaction system let take look specifics consumers reported idr application processing delays lasting weeks months enrollment process \\( including income family size verification \\) stretch long period time result delays borrowers may lose opportunities lower monthly payments save interest charges delays also put opportunity loan payoff forgiveness even borrowers apply idr online www studentloans gov report costly cumbersome delays despite fact student loan servicers removed initial part application process need verify information provided also complaints consumers \\( eligible borrowers \\) describing haphazard results efforts complete idr applications servicers rejected applications without opportunity remedy shortcomings consumers reported feeling murky application processes tended discourage \\( instead encourage \\) participation idr plans clumsy flawed idr enrollment practices meant borrowers less likely obtain affordable repayment option furthermore consumers report unexpected rejections applications \\( leading higher payments increased interest etc \\) relying student loan servicer evaluate finalize idr applications supporting documentation cfpb report chronicles consumer concerns makes important recommendations attempt address concerns unsurprisingly report recommends direct action student loan servicers role must play incorporate industry standards may inform practices direct business practices cfpb recommends servicers incorporate july 2016 department education policy guidance 3 issued attempt strengthen idr application plans procedures consider developing distributing clear actionable instructions consumers clarify deficiencies idr applications provide adequate time consumers provide corrections goal consumers able stay track clarify details necessary successful completion idr application process cfpb also developed prototype income driven repayment application fix form exemplar consumers servicers 4 finally cfpb calls lawmakers take action order make servicer specific metrics related application handling processing time borrower outcomes range idr plans publicly available metrics would allow lawmakers market participants better focus limited resources work toward establishing concrete industry standards 1 see http files consumerfinance gov f 201509 cfpb student loan servicing report pdf 2 see http www consumerfinance gov us blog make student loan payments income driven plan might payment shock 3 see http www2 ed gov documents press releases loan servicing policy memo pdf 4 included appendix report searchstay touch facebook google twitter facebook vimeo youtube newslettersubscribe newsletter receive date information paymentvision industry trends compliance sign categoriesautoscribecomplianceconvenience feeseventsinfographicsmerchant processingpayment processingsecurity payment servicesonline bill payivr bill payapi bill payvirtual terminalcard payment processingach payment processingrisk managementconvenience feesmobile payment solutionscheck phone paymentsindustry solutionsarm collectionsauto financeconsumer financegovernment municipalitiesutilitieshealthcareinsurancesupport resourcesfaqsinfographicsvideossecuritymedia kitwebinarsbecome partnercurrent partnerspayments blogabout usleadership teamin newsupcoming eventscareersawardscontact usphone 1 800 345 7243email support paymentvision comsocial media privacy policydata breach policysite map 2017 paymentvision division autoscribe corporation rights reserved paymentvision registered iso applied bank wilmington de", 
    "descr1": "client login call us 1 800 345 7243 payment servicesonline bill payivr bill payapi bill payvirtual terminalcard payment processingach payment processingrisk managementconvenience feesmobile payment solutionscheck phone paymentspartner programscurrent partnersprogram optionsindustry solutionsarm collectionsauto financeconsumer financegovernment municipalitiesutilitieshealthcareinsuranceresource centerfaqswhite papersach non processing calendarwebinarspayments blogabout usleadership teamawardssecuritycareerscontact us multifactor authentication adds strength updated credit card security rules multifactor authentication adds strength updated credit card security rules posted 05 10 2016 eugene o'rourke complianceglobal credit card users enjoy enhanced card data security thanks recent update pci dss standards april 28 2016 payment card industry \\( pci \\) issued data security standard \\( dss \\) 3 2 updates dss 3 1 promises increased safety global credit card users foreseeable future change \\? pci security standards council \\( ssc \\) continuously monitoring digital financial landscape emerging trends well threats credit card users issuers related financial institutions noted drastic changes payment acceptance sector emv chip rollout united states advancements mobile payment sector new standard seeks address challenges changes may pose additionally pci dss considered mature standard incremental tweaks existing rules replace introduction entirely new standards extension period migration away outdated ssl protocols secure current version tls tweak new deadline full migration june 30 2018 affected \\? essentially administrators service providers entrusted protecting credit card data carefully review new version begin planning full implementation currently 700 global participating organizations regularly accept credit card payments networks affiliates entities required prove implementation new version specifically also prepared show security procedures secure service providers routinely aggregate large amounts card data may especially sensitive types threats modifications intend address must \\? testing documentationto ensure customer data security revised standard requires added documentation testing existing systems make sure keeping data safe newly added provisions newly added provisions 10 8 10 8 1 require frequent scans detection reporting critical security controls systems avoid unnecessarily long periods intruder access newly added provision 11 3 4 1 requires penetration testing segmentation controls service providers every six months keeping card data footprint small possible reduces scope opportunity inappropriate access newly added provisions 12 11 12 11 1 require services providers review card accessing personnel every six months well ensure date pci procedures standards newly added provision 12 4 1 requires upper management participants remains responsible data management security requirement comes instances personnel changes removed enterprise authority control pci compliance practices confirmations additionally entities must record encryption processes use ensure subsequent staff maintains standards management accurately determine upgrades necessary andthe designated entities supplemental validation \\( desv \\) process moves 3 2 extension existing standards outright requirement validation standards useful test compliances effective detection mechanisms required entity instructed perform assessments payment brand acquirer personnel access card data must use multi authentication processespreviously requirement limited workers remote access secured data banks however unauthorized privileges compromised credentials occur almost every reported incident new rule personnel access protected data must show two credentials passwords smart cards tokenstimelinespci dss 3 1 expire october 31 2016 enterprises working implement new rules procedures give every entity opportunity gain proficiency revised protocols 3 2 standards considered best practices requirements february 1 2018 searchstay touch facebook google twitter facebook vimeo youtube newslettersubscribe newsletter receive date information paymentvision industry trends compliance sign categoriesautoscribecomplianceconvenience feeseventsinfographicsmerchant processingpayment processingsecurity payment servicesonline bill payivr bill payapi bill payvirtual terminalcard payment processingach payment processingrisk managementconvenience feesmobile payment solutionscheck phone paymentsindustry solutionsarm collectionsauto financeconsumer financegovernment municipalitiesutilitieshealthcareinsurancesupport resourcesfaqsinfographicsvideossecuritymedia kitwebinarsbecome partnercurrent partnerspayments blogabout usleadership teamin newsupcoming eventscareersawardscontact usphone 1 800 345 7243email support paymentvision comsocial media privacy policydata breach policysite map 2017 paymentvision division autoscribe corporation rights reserved paymentvision registered iso applied bank wilmington de", 
    "crawled_date": "2017-06-10T13:59:47.750745"
  }, 
  "21": {
    "link1": "https://secure1.payleap.com/Merchant/Tools/MakePayment.aspx?Id=GLY4BF6kg%2BhOw8MG%2BCAizw%3D%3D", 
    "api_url": "payleap.com", 
    "link3": "http://www.payleap.com/who-we-help/developers/", 
    "link2": "http://www.payleap.com/who-we-help/partners/", 
    "progweb_url": "https://www.programmableweb.com/api/payleap", 
    "progweb_date": "07.08.2009", 
    "progweb_descr": "PayLeap provides merchants a secure, single-source payment solution which includes tokenized cardholder data vault, secure checkout using LeapLock, fraud management tools, virtual terminal, and electronic invoicing, scheduled/recurring payments and is the exclusive provider of PaySecure\u00c2\u00ae internet PIN Debit (IPD).", 
    "api_name": "PayLeap", 
    "progweb_cat": "Payments,eCommerce", 
    "descr3": "browser ancient upgrade different browser install google chrome frame experience site whatwe whowe help ourpricing formerchants fordevelopers call 1 877 472 9532 sign sign merchants developers partners find developer developers tailored developers online heritage payleap quite familiar challenges needs developers created complete api numerous sdks ease burden integrating web mobile applications payleap addition offer tools help developers grow clients businesses also become hero customer may expected payment processing payleap going exceed expections payleap includes invoicing module extensive reporting options recurring payments card file support integrated social sharing tools course paysecure online pin debit merchants love pin debit costs less credit cards traditional debit popular consumers world mention mobile integration \\? payleap tools use integrating web app also work mobile apps easy integration done integrations popular payment processors going pleased payleap \\( done payment integrations count lucky \\) api stable extensively documented offer variety sdks different development environments provide 24 7 support know faster complete integration faster client comes online relax payleap integration payleap takes work traditionally complicated payment integrations provides additional features available traditional payment processors payment options living mobile world one rapidly moving credit cards debit cards payleap keep clients leading edge payleap leaplock hosted pages optimized mobile devices automatically formatting fit phone table form factors payleap api sdks include hooks ios android mobile apps use code base integrate client web site mobile app payleap permits clients offer paysecure online pin debit much lower cost acceptance online mobile pin debit gives client ability accept payments millions international consumers debit cards credit cards even united states debit cards popular form electronic payment payleap includes paysecure mobile pin debit payleap clients sell way consumers way places extra good built course payleap accepts credit cards debit cards gift cards ach transactions mobile payments etc payleap also includes electronic invoicing integrated social sharing extensive reporting options add value especially smaller medium sized merchants bring additional functionality client extra charge traditional payment options plus mobile pin debit invoicing reporting social sharing become payleap affiliate traditionally merchants pay developers fees front integrating payment solutions web mobile apps payleap developers also option joining affiliate revenue sharing generates unlimited permanent revenue stream based client transaction volume developers use revenue stream lower front fees clients enhance income payleap offers developers additional revenue stream choosing payleap developers profitable flexible client pricing see live demo start processingpayments today pricing support developers privacy partners faq contact us pci application solutions careers sign sign call 1 877 472 9532 2017 payleap rights reserved 1 877 4payleap payleap inc registered iso wells fargo bank n walnut creek ca import url \\( assets zendesk com external zenbox v2 6 zenbox css \\) import url \\( assets zendesk com external zenbox v2 6 zenbox css \\)", 
    "descr2": "browser ancient upgrade different browser install google chrome frame experience site whatwe whowe help ourpricing formerchants fordevelopers call 1 877 472 9532 sign sign merchants developers partners find developer partners found payleap bundled solution breeze set also excellent value mike redding partners payleap referral program provides great revenue stream technical solutions seamless integration huge value clients even heavy lifting establishing setting account partner make introduction build relationship take word get started see today payleap rocking affilitate program revenue sharing joint marketing opportunities lifetime residual revenue unlimited potential gateway merchant account \\( including credit card ach \\) streams single point contact gateway credit card ach services co branded personally branded portal logo designed users customized landing page presents payleap solution bundled offer easy integration existing business highest level security available support affiliate partners includes support programming languages along latest hardware available real time posts responses rich dynamic web service customized functionality free features automated recurring billing fraud controls risk customization integrated many shopping carts integration transaction processing hardware \\( pos check scanning kiosk mobile \\) complete api reporting tools sample code documentation free technical support payleap affiliate program ideal organizations sell products services integrated electronic payment processing services typically provide end user support affiliates benefit generous revenue sharing program program creates residual income developers dealers integrate payleap clients sites since easy integrate use single solution great choice developers clients especially added incentives affiliate program find see live demo start processingpayments today pricing support developers privacy partners faq contact us pci application solutions careers sign sign call 1 877 472 9532 2017 payleap rights reserved 1 877 4payleap payleap inc registered iso wells fargo bank n walnut creek ca import url \\( assets zendesk com external zenbox v2 6 zenbox css \\) import url \\( assets zendesk com external zenbox v2 6 zenbox css \\)", 
    "descr1": "", 
    "crawled_date": "2017-06-10T13:59:47.749709"
  }, 
  "22": {
    "link5": "https://docs.spreedly.com/", 
    "link4": "https://docs.spreedly.com/reference/", 
    "link1": "https://docs.spreedly.com/reference/api/v1/", 
    "api_url": "spreedly.com", 
    "link3": "https://docs.spreedly.com/reference/api/v1/gateways/transactions/", 
    "link2": "https://support.spreedly.com/hc/en-us/categories/115000385188-API-Reference-Guides", 
    "progweb_url": "https://www.programmableweb.com/api/spreedly", 
    "progweb_date": "08.15.2009", 
    "progweb_descr": "Spreedly gives web applications an easy way to handle subscription-based services. The service works through many well-known payment gateways, including PayPal and SagePay, to complete fast, secure transactions. The Spreedly API offers the tools to integrate its payment service into websites or apps.", 
    "api_name": "Spreedly", 
    "progweb_cat": "Payments", 
    "descr5": "spreedly documentation support basics getting started credentials add gateway collect payment information make purchase api api reference express iframe features supported gateways supported credit cards payment method distribution fingerprinting apple pay spreedly express payment form iframe payment form paypal offsite payments third party vaulting 3d secure guides collecting credit cards using payment methods testing troubleshooting exporting credit cards migrating payment data developing mobile app account resources changelog test data ip addresses terminology billing sample apps spreedly dashboard contact us documentationbasics getting started spreedly service allows securely store credit cards use transact number payment gateways third party apis simultaneously providing card tokenization vault service well gateway receiver integration service payment methods tokenized spreedly stored spreedly allowing independently store card pass card different end points based business requirements refer ability use spreedly token multiple gateways end points universal tokenization overview high level executing financial transaction spreedly involves following sequence events using tokenization spreedly able execute number gateways apis behalf without credit card data ever touching servers quick start order start executing transactions collecting payments users need register free account create api credentials add gateway transact \\( also transact non gateway third party apis \\) start collecting payment information users make purchase gateway users payment information interested transacting third party api gateway please see payment method distribution functionality spreedly spreedly spreedly api supported gateways jobs spreedly learn plans pricing pci compliance support help faq contact us site status connect us spreedly team blog follow us twitter terms conditions privacy policy copyright 2007 2017 spreedly inc rights reserved", 
    "descr4": "nav back general documentation api reference api docs version 1 spreedly api \\( previously spreedly core \\) api v1 standard rest style api accepts returns xml json requests located view full api reference express javascript api api docs version 2 spreedly express javascript api please read spreedly express guide looking general purpose express documentation spreedly express available following url view full express api reference iframe javascript api api docs version 1 spreedly iframe javascript api please read iframe guide looking general purpose iframe documentation spreedly iframe available following url view full iframe api reference", 
    "descr3": "spreedly documentation support basics getting started credentials add gateway collect payment information make purchase api api reference express iframe features supported gateways supported credit cards payment method distribution fingerprinting apple pay spreedly express payment form iframe payment form paypal offsite payments third party vaulting 3d secure guides collecting credit cards using payment methods testing troubleshooting exporting credit cards migrating payment data developing mobile app account resources changelog test data ip addresses terminology billing sample apps spreedly dashboard contact us transactions example response truncated brevity get ordered paginated list transactions executed specific gateway url parameters response body notable response elements include spreedly spreedly spreedly api supported gateways jobs spreedly learn plans pricing pci compliance support help faq contact us site status connect us spreedly team blog follow us twitter terms conditions privacy policy copyright 2007 2017 spreedly inc rights reserved", 
    "descr2": "submit request sign spreedly help center api reference guides api reference guides effectively use spreedly implementation \\? see api iframe express reference guides api reference guides spreedly api spreedly iframe api spreedly express api spreedly us jobs spreedly customers team blog engineering blog learn works solutions gateways pricing partnerships resources faq docs api reference pci compliance payment method distribution contact us contact sales contact support copyright spreedly inc rights reserved", 
    "descr1": "nav json xml back general documentation introduction api docs version 1 spreedly api \\( previously spreedly core \\) api v1 standard rest style api accepts returns xml json requests located api examples api reference docs meant clearly define urls parameters request bodies responses error states spreedly api sections accompanied http representation api call right column easily translated equivalent \\( library \\) command instance following http request representation equivalent following command response section immediately follows request outputs http response code well response body variables request variables displayed docs anytime variable exists example api request defined associated request response element tables unless variable denoted required optional omitted using api authentication unless otherwise noted calls spreedly api use http basic authentication https use environment key spreedly environment wish execute http basic user one organization access secrets http basic password http basic authentication set using option json endpoints make request json version endpoint send header endpoint url suffix json endpoint examples contained within tab code column docs part documentation ambiguous format displayed code tabs xml endpoints make request xml version endpoint send header endpoint url suffix xml endpoint examples contained within tab code column docs part documentation ambiguous format displayed code tabs gateways list supported gateways example response truncated brevity retrieve list gateways properties supported spreedly call used dynamically present gateway credential form users sort dynamic rendering note request publicly available require authorization url parameters response body notable response elements include list created gateways example response truncated brevity retrieve ordered paginated list gateways environment different list supported gateways return gateway instances provisioned authenticated environment url parameters response body notable response elements include create test gateway create \\( provision \\) test gateway authenticated environment test gateway used test integration spreedly used test payment methods url parameters request body response body notable response elements include create production gateway create \\( provision \\) gateway process real card data transactions authenticated environment production gateways created using credentials required gateway meaning call slightly different depending gateway api requirements example uses stripe supported gateway similar call url parameters request body response body notable response elements include show get gateway given token url parameters response body notable response elements include update update gateway updating redacted gateway credentials set state back retained allowing used transactions url parameters request body response body notable response elements include retain gateways created via api automatically retained however gateways created via unauthenticated api \\( e g browser javascript library \\) created cached state retaining cached gateway saved available future use url parameters response body notable response elements include redact redact \\( strip sensitive credentials make inactive \\) provisioned gateway url parameters response body notable response elements include transactions example response truncated brevity get ordered paginated list transactions executed specific gateway url parameters response body notable response elements include receivers list supported receivers example response truncated brevity retrieve list payment method distribution receivers properties supported spreedly note request publicly available require authorization url parameters response body notable response elements include list created receivers example response truncated brevity retrieve ordered paginated list receivers authenticated environment url parameters response body notable response elements include create http receiver create receiver use payment method distribution url parameters request body response body notable response elements include create sftp receiver create receiver use payment method distribution url parameters request body response body notable response elements include show get receiver given token url parameters response body notable response elements include update update receiver new credentials url parameters request body response body notable response elements include redact redact \\( strip sensitive credentials make inactive \\) receiver url parameters response body notable response elements include payment methods minimize pci assessment burden please consider using spreedly express iframe payment form send payment information spreedly using api directly requires card data pass system increases pci scope create credit card add credit card authenticated environment vault create credit card testing use one test credit card numbers information testing spreedly please see guide url parameters request body response body create bank account add bank account ach payment type authenticated environment vault create bank account testing use one test bank account numbers information testing spreedly please see guide url parameters request body response body create android pay \\( eta \\) android pay currently public beta please contact support wish included beta program add android pay payment method authenticated environment vault create test android pay payment method set element one known test credit card numbers information testing spreedly please see guide url parameters request body response body create apple pay apple pay currently public beta please contact support wish included beta program add apple pay payment method authenticated environment vault create test apple pay payment method set element one known test credit card numbers information testing spreedly please see guide url parameters request body response body create third party token add third party token payment method authenticated environment vault third party tokens payment methods stored spreedly vault reference another payment method stored gateway vault information third party tokens please see guide url parameters request body response body list example response truncated brevity retrieve ordered paginated list retained payment methods authenticated environment url parameters response body notable response elements include show get payment method given token url parameters response body notable response elements include update update payment method non sensitive attributes url parameters request body response body retain retain \\( keep spreedly vault future use \\) payment method url parameters response body notable response elements include store tokenize payment method gateway transaction copies payment method information spreedly vault gateway vault creates new spreedly payment method represent gateway version reference payment method gateway called separate payment method original payment method manage lifecycle linked payment methods spreedly keep sync way locked gateway card stored cannot used another gateway like card used multiple gateways need retain card spreedly vault url parameters request body response body notable response elements include redact redact \\( strip sensitive credentials make inactive \\) payment method url parameters request body response body notable response elements include recache update credit card verification value \\( cvv \\) card transacted url parameters request body response body transactions example response truncated brevity get ordered paginated list transactions executed specific payment method url parameters response body notable response elements include certificates certificate functionality apple pay general currently public beta please contact support wish included beta program list example response truncated brevity retrieve ordered paginated list certificates authenticated environment url parameters response body notable response elements include create create new ssl keypair certificate signing request \\( csr \\) since spreedly certificate authority cannot issue trusted certificates instead intended get certificate signed certificate authority \\( sign \\) update certificate record spreedly final signed cert request body response body notable response elements include update update existing ssl certificate record signed certificate value \\( pem format \\) url parameters request body response body notable response elements include transactions every action performed spreedly api captured transaction transactions represent local actions storing payment method external action performing purchase gateway list example response truncated brevity retrieve ordered paginated list transactions authenticated environment endpoint rate limited 30 requests per minute per environment url parameters response body notable response elements include show get transaction given token url parameters response body notable response elements include transcript view exchange spreedly external service \\( gateway receiver etc \\) given transaction human readable text format transcript scrubbed sensitive information email external support representatives help debugging support tasks transcript meant machine parseable format may change time without warning url parameters response body text formatted representation communication spreedly external service purchase charge payment method specific amount target gateway tokenized payment method charge tokenized payment method \\( already stored spreedly environment \\) specified amount payment method type \\( credit card bank account apple pay etc \\) long exists specified environment url parameters request body response body notable response elements include pass credit card pass credit card payment method directly purchase request card valid automatically tokenized spreedly sending gateway url parameters request body response body notable response elements include pass bank account echeck pass bank account echeck payment method directly purchase request bank account valid automatically tokenized spreedly sending gateway url parameters request body response body notable response elements include pass android pay \\( eta \\) android pay currently public beta please contact support wish included beta program pass android pay payment method directly purchase request android pay data valid automatically tokenized spreedly sending gateway url parameters request body response body notable response elements include pass apple pay apple pay currently public beta please contact support wish included beta program pass apple pay payment method directly purchase request apple pay data valid automatically tokenized spreedly sending gateway url parameters request body response body notable response elements include reference purchase execute purchase using payment method utilized previous transaction url parameters request body response body notable response elements include authorize authorize payment method charged specific amount target gateway funds taken authorize follow capture transaction required actually move funds referenced gateway must exist environment whose environment key used authenticate api call tokenized payment method authorize tokenized payment method \\( already stored spreedly environment \\) charged specific amount url parameters request body response body notable response elements include pass credit card pass credit card payment method directly authorize request card valid automatically tokenized spreedly sending gateway url parameters request body response body notable response elements include pass android pay \\( eta \\) android pay currently public beta please contact support wish included beta program pass android pay payment method directly authorize request android pay data valid automatically tokenized spreedly sending gateway url parameters request body response body notable response elements include pass apple pay apple pay currently public beta please contact support wish included beta program pass apple pay payment method directly authorize request apple pay data valid automatically tokenized spreedly sending gateway url parameters request body response body notable response elements include capture full amount capture funds previously reserved via authorize url parameters response body notable response elements include partial amount capture partial amount authorize specifying url parameters request body response body notable response elements include void cancel transaction api call also used cancel transaction yet settled merchant account url parameters response body notable response elements include credit \\( refund \\) full amount refund full amount purchase url parameters response body notable response elements include partial amount refund partial amount purchase specifying url parameters request body response body notable response elements include general credit add funds credit card outside scope previous reference transaction different credit refunds money amount taken previous transaction support general credit depends gateway url parameters request body response body notable response elements include verify determine credit card chargeable card available purchases request parameter automatically retain card successfully verified url parameters request body response body notable response elements include deliver deliver payment method specified receiver endpoint see guide payment method distribution understand specify sent receiver url parameters request body response body notable response elements include export \\( eta \\) export currently public beta please contact support wish included beta program would like see another receiver supported export multiple payment methods single asynchronous batch call sftp receiver endpoint url parameters request body response body notable response elements include w additional data associate card specific properties \\( exposed template variables \\) use property specify variables tied specific payment method tokens receiver variables given following template delivery output receiver variables available deliver export elements referenced using mustache template syntax scoped payment method specified request element note default mustache html escape values special characters variable wrap variable triple curly braces use unescaped value list available variables include credit cards credit card \\( includes apple pay android pay \\) payment methods apple pay apple pay payment methods \\( also include variables \\) android pay android pay payment methods \\( also include variables \\) bank account bank account \\( echeck \\) payment methods credentials additionally credential values set provisioning receiver exposed variables set receiver credentials would available delivery values miscellanous following non payment method variables also available receiver functions receiver functions available deliver export elements invoked using mustache template syntax operate contents contained within container tags list available functions include aes encrypt contents using advanced encryption standard \\( aes \\) symmetric encryption algorithm encryption mode one raw output binary form often use function embedded within another encoding function produce web safe output android pay \\? payment method android pay payment method evaluates use conditionally evaluate section apple pay \\? payment method apple pay payment method evaluates use conditionally evaluate section bank account \\? payment method bank account payment method evaluates use conditionally evaluate section base64 base 64 encode contents common use base 64 encoding http basic authentication base 64 encodes credentials header binary security token receivers require x509 certificate \\( example mastercard \\) insert base64 encoded certificate card type mapping output custom card brand always retrieve type brand payment method using variable outputs one following values output value different default use translate format need card types whose value mapped function body default value used e g diners club card type specified default would output credit card \\? payment method credit card payment method evaluates use conditionally evaluate section digest digests contents using specified digest algorithm digest algorithm one raw output binary form often use function embedded within another encoding function produce web safe output format date parse date value specific string format format specifier syntax based posix date format common format syntax includes 4 digit year e g 2020 2 digit year e g 20 2 digit month number \\( zero padded \\) e g 04 month number \\( padded \\) e g 4 format text parse text context specific format useful right left padding value specific width among scenarios format specifier based posix printf common format syntax includes total length 20 right justified w space fillers total length 20 left justified w space fillers gpg sftp endpoints \\( batch export \\) receiver requires uploaded file encrypted using gnupg public key function takes public key pem form first argument target identity second \\( email address recipient \\) content encrypt third third argument entire templated export include receiver functions variables hex bytes takes byte string turns hex string last get last characters value md5 calculate md5 digest contents payment methods receiver function available export pmd endpoint iterate list submitted payment methods payment method scope function body bound payment method meaning receiver variables available within iterator rsa encrypts contents using rsa public key cryptography certificate value must pem format currently available padding schemes include raw output binary form often use function embedded within another encoding function produce web safe output rsa sign signs \\( base64 encodes \\) contents using private key configured receiver requires receiver pre configured encryption certificate digest algorithm one truncate truncate value given size utc timestamp inserts iso 8601 formatted timestamp time export xml dsig generate ws security xml digital signature given soap envelope requires receiver pre configured encryption certificate disburse \\( eta \\) disbursements currently public beta please contact support wish included beta program would like see another gateway service supported paypal send specified amount funds paypal recipient account url parameters request body response body notable response elements include recipient accounts \\( eta \\) disbursements currently public beta please contact support wish included beta program list retrieve ordered paginated list recipient accounts authenticated environment url parameters response body notable response elements include create paypal account create new paypal recipient account funds disbursed url parameters request body response body notable response elements include redact redact \\( strip sensitive credentials make inactive \\) recipient account url parameters response body notable response elements include retain retain recipient account used disburse funds url parameters response body notable response elements include order pagination default unbounded lists \\( transactions gateways payment methods etc \\) ordered paginated \\( calls identified respective sections \\) order ordered responses sorted created attribute oldest first case multiple timestamps records sorted alphabetically token attribute give consistent ordering use parameter reverse list order recent first example sorting gateways descending order url parameters pagination default unbounded lists returned groups 20 items 20 items list use pagination retrieve next set 20 enforce determinism real time system pagination indexed based specific record \\( opposed page number common many web apps \\) paginate next page simply pass token last record current result set instance token last gateway initial set twenty gateways returned use parameter get next set 20 starting gateway url parameters errors application errors contain 4xx http response status collection errors describing request failure 401 access denied specified environment key access secret exist authenticate authorized perform given action request retried without adding modifying authentication header error response potential issues 402 account inactive requested action requires active paid account request retried without first upgrading paid plan error response potential issues 404 found requested item found request retried error response potential issues 408 request timeout external service gateway respond within request timeout period experienced connection error situations impossible determine final state transaction transaction state set fundamental issue distributed systems reply received result known receive 408 transaction actual money changing hands \\( like purchase capture \\) check third party \\( gateway receiver etc \\) determine real result retrying potential issues 422 invalid request request submitted valid request retried error response 429 many requests many api calls rate limited endpoint rate limited endpoints 503 service unavailable spreedly experienced error processing request potential issues json xml", 
    "crawled_date": "2017-06-10T13:59:47.748681"
  }, 
  "23": {
    "link5": "http://docs.cheddargetter.com/", 
    "link4": "http://support.cheddargetter.com/discussions/suggestions/52-api-return-values-documentation", 
    "link1": "https://support.cheddargetter.com/discussions/questions/14-cfml-support-api-documentation", 
    "api_url": "cheddargetter.com", 
    "link3": "http://support.cheddargetter.com/discussions/questions/338-documentation-explaining-how-to-display-invoices", 
    "link2": "https://cheddargetter.com/tour/api-documentation", 
    "progweb_url": "https://www.programmableweb.com/api/cheddargetter", 
    "progweb_date": "08.22.2009", 
    "progweb_descr": "CheddarGetter is an online billing and subscription management system designed to make it easier to accept and track payments. The CheddarGetter API allows users to integrate the ChedderGetter service into their website or app.", 
    "api_name": "CheddarGetter", 
    "progweb_cat": "Payments,Subscriptions", 
    "descr5": "nav api reference curl php ruby go cheddargetter documentation powered slate fork github introduction cheddargetter api enables leverage full power cheddargetter directly custom application use api programming language integrate recurring billing subscription management processes curated cheddargetter work \\? api utilizes rest like interface method calls made sending http get post requests response data returned xml format response contains http status code 200 successful request status code 400 greater returned upon adverse condition makes handling errors quite simple ok nice use \\? first suggest reviewing open source wrappers available use make integrating quite easy also welcome write code work api questions help sample integration things consider planning integration cheddargetter api created kb article subject based php wrapper check open source wrappers cheddargetter api leveraged programming language publicly available code libraries made available created discussion code libraries welcomed cheddargetter api discussion forum please visit support forum information ruby officially supported gem michael expectedbehavior expectedbehavior gem fully implements api includes 100 test coverage check docs https github com expectedbehavior cheddargetter client ruby php php cheddargetter client wrapper cheddargetter api provided supported cheddargetter team nice quick start guide zf compatible library provided open source repository via github http github com marcguyer cheddargetter client php python smartfile taken maintenance sharpy thanks theseanoc original lib https github com smartfile sharpy node js michiel ter reehorst taken maintenance node js lib follow jamiter thanks respectthecode original lib https github com jamiter node cheddargetter java david rustici software posted java offering github https github com rusticisoftware cheddarclient c take look nathan arnolds fork john siladie initial release https github com shorepound cheddargetter coldfusion posted coldfusion offering riaforge http cfcheddargetter riaforge org support questions using cheddargetter api following support resources available api knowledge base visit official cheddargetter api knowledge base answers found within api documentation within cheddargetter api knowledge base general knowledge base publish known issues knowledge base developers leveraging cheddargetter api best exercise code identify potential errors problem please search knowledge base see already aware issue verify issue report exist please describe issue new post much detail possible public private discussion need help found knowledge base start new public discussion question contains sensitive information feel free mark discussion private request response format authentication authentication achieved via http basic authentication recommended use different user account development accounts vs live accounts also good idea use dedicated user account api authentication request standard url format example gets customer data product gets customer data customer product response response format xml three response document types plans customers error plans document returned interacting pricing plans \\( simple example \\) customers document returned interacting customers may also view raw api responses within gui example looking customer list simply change plans response example customers response example error response example request dictionary api request types parameters logically named easily understandable following outlines possible api call required parameters pricing plans get pricing plans get pricing plan data product response get single pricing plan get pricing plan data product pricing plan customers get customers get customer data product date time related operations timezone used timezone set authenticated user dates inclusive e g assuming timezone authenticated user set utc 2010 07 04 x 2010 08 04 interpreted 2010 07 04t00 00 00 00 00 x 2010 08 04t23 59 59 00 00 get single customer get single customer get customer data product customer \\( id \\) create new customer create customer credit card create customer without payment create new customer product subscribe customer pricing plan plan free required plan paid plan credit card information required configured cheddargetter require optional first invoice pricing plan delayed subscription paid plan payment method comes time bill subscription auto cancelled see email templates kb article regarding free trials bill reminder email using 0 00 verification transactions \\( e g credit card pre verifications required pre tokenized payment methods available may create new customer payment method providing values instead feature compatible back end billing solutions cases required additional data subsequently requested upstream gateway case params passed request override update upstream gateway charges required including charges required charge items required including items required item check article information using api paypal import customers import customers product existing paying \\( non paying \\) customers another billing system may imported maintaining payment methods billing solution compatible please contact support information whether importing possible situation direct credit card billing solutions compatible import importing customers payment method future implementations may include support additional billing solution types gateway token values validated upstream gateway words request data validated format accuracy existence corresponding payment method reference upstream billing solution 100 customers may imported one call customer data must nested list customer may imported without payment method payment method import desired last four digits card number expiration date card type required \\( card type may unk known \\) required specified first transaction occur empty intitial invoice scheduled subsequent subscription edit \\( `changebilldate` \\) required schedule initial invoice charges required including charges required charge items required including items required item check article information using import functionality delete customer delete existing customer product warning delete customer related data cheddargetter delete customer data gateway gateway configured delete customers delete existing customers product warning delete customers related data cheddargetter method disabled production accounts update customer subscription update customer subscription change next bill date update existing customer information product modify subscription information customer already subscription valid credit card credit card information required plan code corresponds free plan credit card data required customer already subscription credit card credit card information data required instance subset credit card data may provided plan paid plan credit card information required configured cheddargetter require optional next invoice delayed subscription paid plan credit card comes time bill subscription auto cancelled see email templates kb article regarding free trials bill reminder email pre tokenized payment methods available may create new customer payment method providing values instead feature compatible back end billing solutions cases required additional data subsequently requested upstream gateway case params passed request override update upstream gateway changing next bill date using effects billing cycle subsequent bill dates new cycle words monthly plan typically bills 3rd every month next bill date changed 10th subscription bill every month 10th date equal less equal current date time current invoice executed real time check article information using api paypal update customer update customer update existing customer information product subscriptions update subscription update customer subscription update existing customer subscription information product customer already subscription valid credit card credit card information required plan code corresponds free plan credit card data required customer already subscription credit card credit card information data required instance subset credit card data may provided preferences still apply plan paid plan credit card information required configured cheddargetter require optional next invoice delayed subscription paid plan credit card comes time bill subscription auto cancelled see email templates kb article regarding free trials bill reminder email pre tokenized payment methods available may create new customer payment method providing values instead feature compatible back end billing solutions cases required additional data subsequently requested upstream gateway case params passed request override update upstream gateway changing next bill date using effects billing cycle subsequent bill dates new cycle words monthly plan typically bills 3rd every month next bill date changed 10th subscription bill every month 10th date equal less equal current date time current invoice executed real time check article information using api paypal cancel customer subscription cancel existing customer subscription product customer current subscription canceled moment call made would like reactivate customer subscription may updating subscription full credit card data tracked items use tracked item endpoints set increment decrement quantity item individual subscription learn using tracked items knowledge base note updates item quantities canceled subscriptions possible circumstances cancellation special state paypal preapproval request period still valid \\( 3 hours \\) canceled subscription pending invoice billingdatetime future quantity update request outstanding invoice request includes parameter set add item quantity add item quantity increment customer current usage single item product required wish add one current usage amount remove item quantity remove item quantity decrement customer current usage single item product required wish subtract 1 current usage amount set item quantity set item quantity set customer current usage single item product invoice interactions add custom charge credit add custom charge add custom credit add arbitrary charge credit customer current invoice product delete custom charge credit delete custom charge credit remove charge credit customer current invoice product create one time invoice create parallel one time invoice execute transaction immediately using customer current payment method product least one charge required multiple charges may submitted run outstanding invoice execute outstanding invoice product customer must outstanding invoice method useful manually retrying transaction outstanding invoice invoice may outstanding prior attempts transact invoice unsuccessful invoice yet attempted subscription billable event method used reactivate canceled subscription retry succeeds canceled subscription subscription reactivated also add credits invoice offset charges making invoice amount 0 case executing outstanding invoice succeed zero amount reactivate subscription issue refund refund transaction billed invoice product many billing solutions allow partial refunds billing solution allows partial refunds amount may less amount original transaction transaction previously refunded wish issue another refund amount must less equal original amount minus previously issued partial refund amounts billing solutions allow refunds prior transaction settlement billing solution allow refunds prior settlement must execute void full transaction wait settlement occurs issue refund issue void void transaction billed invoice product billing solutions allow voids billing solution allows voids void executed prior transaction settlement issue void refund defer cheddargetter decide void refund executed invoice product many billing solutions allow voids voids possible short period time transaction executed short determining whether execute void refund moving target fortunately cheddargetter already figured using call makes voids refunds simple drawback using method partial refunds possible send resend invoice email send \\( resend \\) email notification invoice product email notifications must enabled account check settings emails automatically sent like resend one use method recent relevant email sent invoice example recent transaction declined decline email sent recent transaction approved payment receipt email sent promotions get promotions get promotion data product get single promotions get promotion data product promotion coupon current vs outstanding invoice many api calls interact customer subscription invoice current subscription invoice one currently open words scheduled bill future add charges credits item quantities subscription invoice almost every case want interact current subscription invoice default relevant api calls rare cases might want adjust outstanding subscription invoice outstanding invoice one scheduled bill past yet paid could scheduled invoice attempted declined \\( subscriber dunning process \\) simply one scheduled past cheddargetter recurring engine picked execution yet subscription canceled non payment almost certainly outstanding invoice api methods parameter named case want interact outstanding invoice set value parameter outstanding response codes http status codes cheddargetter api returns appropriate http status codes every request error messages cheddargetter api returns error messages xml format example error xml method might look like errors logged exposed admin gui https cheddargetter com admin activity errors information errors available kb article fraud protection rate limiting api requests include client ip address possible provided ip machine making request used value used rate limiting fraud protection etc prevent fraudster attempting signup service different credit card numbers need provide ip address request webhooks reverse api callbacks yup cheddargetter supports custom webhooks well pre defined third party hooks hook system fault tolerant automatic retries includes management console niceties extra charge \\( ooh burn \\) yeah pretty proud information webhooks curl php ruby", 
    "descr4": "log cheddargetter support home public discussions knowledge base go cheddargetter home suggestions api return values documentation edit ryan 25 jun 2010 02 07 pm would really helpful guys would document return values api documentation pretty clear request url post parameters give examples document receive api call i'm currently working contribution mousetrap 's difficult know fields get back always instance optional field empty \\( null \\) return api call attribute exist \\? something like would nice http developer 37signals com basecamp companies shtml ryan support staff 1 posted marc guyer 25 jun 2010 02 35 pm agreed wishlist however 's nothing document seen within account 're looking customer gui simply replace admin xml 'll get single customer response xml customer response customers whatever api call would hard time justice different possibilities responses consider pricing plan config differences customer data options said plans add rudimentary response examples docs edit marc guyer closed discussion 25 jun 2010 02 35 pm comments currently closed discussion start new one new issue conversation started discussion closed actions cheddargetter discussion starter required open discussion open discussion private permissions discussion private cheddargetter support staff see reply make public public permissions discussion public everyone see reply make private comments feed keyboard shortcuts generic comment form use instead mac recent discussions recent articles powered tender", 
    "descr3": "log cheddargetter support home public discussions knowledge base go cheddargetter home questions documentation explaining display invoices edit sunil 24 sep 2010 05 18 pm dear cg i'm able find documentation displaying invoices site share link \\? thanks support staff 1 posted marc guyer 27 sep 2010 10 55 pm hi sunil 's kb article email templates http support cheddargetter com faqs operational tos email tem 'll probably particularly interested smarty documentation http www smarty net manual en smarty designers php also syntax reference link email template textbox \\( see attached screenshot \\) show variables available screen shot 2010 09 27 6 55 31 pm png 25 4 kb edit marc guyer closed discussion 27 sep 2010 10 55 pm sunil opened discussion 27 sep 2010 11 01 pm 2 posted sunil 27 sep 2010 11 01 pm thanks display invoices online \\? coming soon \\? edit support staff 3 posted marc guyer 28 sep 2010 12 02 hmm would like display invoice purpose \\? edit 4 posted sunil 28 sep 2010 12 05 customers see billing history online edit support staff 5 posted marc guyer 28 sep 2010 07 11 pm ah see misunderstood fairly straightforward pull customer xml api using call first invoice list current one next last billed invoice invoice contains set charges including recurring charge tracked item charges custom charges invoice billed also contain transaction node containing transaction details edit marc guyer closed discussion 28 sep 2010 07 11 pm comments currently closed discussion start new one new issue conversation started discussion closed actions cheddargetter discussion starter required open discussion open discussion private permissions discussion private cheddargetter support staff see reply make public public permissions discussion public everyone see reply make private comments feed keyboard shortcuts generic comment form use instead mac recent discussions recent articles powered tender", 
    "descr2": "toggle navigation cheddar tour pricing support developers blog sign log log cheddargetter account password missing \\? \\? enter email address 'll send instructions creating new password signup unique approach subscription billing sign free intuitive well documented api powerful flexible easy api documentation excellent api documentation provides information necessary start leveraging power cheddargetter quickly open source wrappers ruby php python java c coldfusion open source billing wrappers available make things even easier easy understand use unique identifiers open source wrappers basic authentication rest response data structure xml response documents intuitive complete lean dig right cheddargetter billing api enables integrate full power cheddargetter directly custom application use api programming language leverage cheddargetter 's functionality prev next sitemap home tour pricing support developers blog sign log privacy policy terms conditions follow us twitter learn api help feedback partners 2008 2017 cheddargetter llc rights reserved 400 w 7th st 105 bloomington 47404 \\( 812 \\) 618 2323", 
    "descr1": "log cheddargetter support home public discussions knowledge base go cheddargetter home questions cfml support api documentation edit jim edlin 27 aug 2009 06 50 pm hi plans version api wrapper cfml \\? also documentation api looked could n't find support staff 1 posted marc guyer 27 aug 2009 07 55 pm current plans cfml wrapper wrapper pretty simple though could port php version api documentation https cheddargetter com api edit marc guyer closed discussion 27 aug 2009 07 55 pm comments currently closed discussion start new one new issue conversation started discussion closed actions cheddargetter discussion starter required open discussion open discussion private permissions discussion private cheddargetter support staff see reply make public public permissions discussion public everyone see reply make private comments feed keyboard shortcuts generic comment form use instead mac recent discussions recent articles powered tender", 
    "crawled_date": "2017-06-10T13:59:47.746630"
  }, 
  "28": {
    "api_url": "buxter.com", 
    "progweb_url": "https://www.programmableweb.com/api/buxter", 
    "progweb_date": "03.12.2010", 
    "progweb_descr": "The Buxter Java API allows Facebook application developers to use the Buxter transaction webservice to monetize their Facebook applications. Buxter is ClickandBuy's Facebook application. With Buxter, Facebook users can transfer money to each other, as well as purchase items in Facebook apps. Using the API, developers can securely create purchase links, query the status of transactions and cancel transactions.", 
    "api_name": "Buxter", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:47.738872"
  }, 
  "29": {
    "link1": "http://support.playerize.com/hc/en-us", 
    "api_url": "playerize.com", 
    "link2": "http://support.playerize.com/hc/en-us/sections/206755527-Developer-Documentation", 
    "progweb_url": "https://www.programmableweb.com/api/super-rewards", 
    "progweb_date": "03.27.2010", 
    "progweb_descr": "Using the JSON API, publishers with dynamic applications can create highly customized user experiences. Super Rewards provides a virtual currency monetization platform for social publishers and online communities. The Super Rewards platform can be deployed on any major social network, standalone website, mobile application, virtual world, or MMO to provide monetization functionality with less than an hour of deployment effort.", 
    "api_name": "Super Rewards", 
    "progweb_cat": "Financial,Social", 
    "descr2": "submit request sign playerize sr support advertisers developer documentation developer documentation follow new articles new articles comments developer documentation playerize superrewards advertiser accounts includes instructions integrating troubleshooting products bidsystem transition faq", 
    "descr1": "submit request sign users game players faq country issue troubleshooting offers completed offer 's unpaid \\? advertisers tips tricks common banner advertising sizes pay offerwall campaigns creating offer playerize 's superrewards offerwall getting started creating offer using superrewards testing integration lead tracking working \\? paying offer wall campaigns superrewards advertiser stats reporting advertiser lead tracking details superrewards need create cpi game offer see 9 articles developer documentation bidsystem transition faq faq click publisher developer support playerize facebook ads api partner mean \\? services playerize offer \\? help design ads \\? know wo n't blow budget \\? much cost sign playerize \\?", 
    "crawled_date": "2017-06-10T13:59:47.737710"
  }, 
  "407": {
    "api_url": "openfintech.io", 
    "progweb_url": "https://www.programmableweb.com/api/openfintech", 
    "progweb_date": "01.26.2017", 
    "progweb_descr": "The OpenFinTech API integrates financial data into commercial applications. It is available in REST architecture with JSON formats. \r Developers can use the open database to create applications with companies, currencies, banks, and payment features. OpenFinTech.io helps financial companies communicate in one language.", 
    "api_name": "OpenFinTech", 
    "progweb_cat": "Financial,Database", 
    "crawled_date": "2017-06-10T13:59:23.061085"
  }, 
  "406": {
    "api_url": "aplazame.com", 
    "progweb_url": "https://www.programmableweb.com/api/aplazame", 
    "progweb_date": "01.25.2017", 
    "progweb_descr": "The Aplazame API offers tools for integrating instant financial capabilities with existing eCommerce applications. The platform simplifies financial methods by connecting a checkout environment with a credit payment solution. The API offers data in JSON format, and supports GET requests. Aplazame is a Madrid based financial company that improves conversion rates and sales.", 
    "api_name": "Aplazame", 
    "progweb_cat": "Financial,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:23.062267"
  }, 
  "405": {
    "api_url": "mollie.com", 
    "progweb_url": "https://www.programmableweb.com/api/mollie-subscriptions", 
    "progweb_date": "01.25.2017", 
    "progweb_descr": "The Mollie Subscriptions API integrates the subscription of users to automatically deduct from the Mollie balance. Developers can refer to the example available with requests and responses in JSON format.", 
    "api_name": "Mollie Subscriptions", 
    "progweb_cat": "Payments,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:23.063414"
  }, 
  "404": {
    "api_url": "mollie.com", 
    "progweb_url": "https://www.programmableweb.com/api/mollie-refunds", 
    "progweb_date": "01.25.2017", 
    "progweb_descr": "The Mollie Refunds API integrates refunds for a payment profile with API Key or for an organization with OAuth. JSON formats are available to perform callbacks that include amount, description, and metadata as methods.", 
    "api_name": "Mollie Refunds", 
    "progweb_cat": "Payments,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:23.064541"
  }, 
  "403": {
    "api_url": "microsoft.com", 
    "progweb_url": "https://www.programmableweb.com/api/microsoft-payment-request", 
    "progweb_date": "01.19.2017", 
    "progweb_descr": "The Microsoft Payment Request API is supported by Microsoft Edge and allows users to interact with a payment request UI, update a payment request, complete a purchase, and abort a payment request. Some of the information in the API's documentation refers to the pre-release product, which may change significantly prior to commercial release.", 
    "api_name": "Microsoft Payment Request", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:23.065684"
  }, 
  "402": {
    "api_url": "mxmerchant.com", 
    "progweb_url": "https://www.programmableweb.com/api/mxmerchant", 
    "progweb_date": "01.12.2017", 
    "progweb_descr": "The MXMerchant API available by invite code can integrate payments into merchant applications, aiming to simplify inventory, rewards, and order management with a dashboards' view. The REST interface is available with HTTP requests to receive JSON and XML formats, authenticating with basic HTTP. Sandbox and cURL examples are accessible for developers interested in practicing before moving to production.", 
    "api_name": "MXMerchant", 
    "progweb_cat": "Merchants,Dashboards", 
    "crawled_date": "2017-06-10T13:59:23.066849"
  }, 
  "401": {
    "api_url": "paywithpaytm.com", 
    "progweb_url": "https://www.programmableweb.com/api/paytm", 
    "progweb_date": "01.12.2017", 
    "progweb_descr": "The PayTM API integrates payments features into mobile e-commerce applications. It is available with JSON formats to check balance, request transaction, and interpret payment. PayTM is an e-commerce company based in India that processes mobile payments of electronics, men's and women's apparel, home and kitchen items, cars and bikes equipment, musical instruments, and books, music, and movies.", 
    "api_name": "PayTM", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:23.068210"
  }, 
  "400": {
    "api_url": "telleroo.com", 
    "progweb_url": "https://www.programmableweb.com/api/telleroo", 
    "progweb_date": "01.09.2017", 
    "progweb_descr": "The Telleroo API disburses funds through bank transfers to an application. It is available with Swagger framework and JSON formats to implement transfers, payments, and funds. Token is required to authenticate.", 
    "api_name": "Telleroo", 
    "progweb_cat": "Payments,Automation", 
    "crawled_date": "2017-06-10T13:59:23.069474"
  }, 
  "409": {
    "api_url": "iban.com", 
    "progweb_url": "https://www.programmableweb.com/api/iban-sort-code-validation", 
    "progweb_date": "02.06.2017", 
    "progweb_descr": "IBAN.com operates as a web-based solution that supports the validation and calculation of International Bank Account Numbers (IBAN). The platform provides access to the Reverse SORT code \u2013 that is, a web-based real-time interface for identifying and validating SORT codes. The IBAN Sort Code Validation API simplifies the deployment of the SORT code verification functionality through add-on modules. Simple calls are sufficient for developers to access and integrate the SORT code functionality in the applications. This API returns responses in JSON and XML formats.", 
    "api_name": "IBAN Sort Code Validation", 
    "progweb_cat": "Financial,Accounts", 
    "crawled_date": "2017-06-10T13:59:23.058701"
  }, 
  "408": {
    "api_url": "paymentrails.com", 
    "progweb_url": "https://www.programmableweb.com/api/payment-rails-payout", 
    "progweb_date": "02.06.2017", 
    "progweb_descr": "Payment Rails is a cloud technology platform that enables businesses to send payments to any individual or company anywhere around the world, in any currency, in any payment method. Through their powerful API, businesses can access Payment Rails\u2019 international banking payments network.  Payment Rails is simplifying global payouts for online marketplaces, on-demand and share economy platforms, ad networks, affiliate platforms, app stores, and growing businesses with international payout needs.", 
    "api_name": "Payment Rails Payout", 
    "progweb_cat": "Payments,Banking", 
    "crawled_date": "2017-06-10T13:59:23.059906"
  }, 
  "379": {
    "api_url": "oanda.com", 
    "progweb_url": "https://www.programmableweb.com/api/oanda-fxtrade-streaming", 
    "progweb_date": "11.30.2016", 
    "progweb_descr": "This API provides real time data streaming connections for OANDA customers that require an alternative to the REST API.  All streaming connections are authenticated and adheres to the chunked transfer encoding data transfer mechanism of HTTP 1.1.  OANDA provides FX & CFD trading, exchange rates data and corporate FX payments.", 
    "api_name": "OANDA FXTrade Streaming", 
    "progweb_cat": "Financial,Analytics", 
    "crawled_date": "2017-06-10T13:59:23.093307"
  }, 
  "378": {
    "api_url": "domainconnect.org", 
    "progweb_url": "https://www.programmableweb.com/api/domain-connect-paytm", 
    "progweb_date": "11.23.2016", 
    "progweb_descr": "The Domain Connect PayTM API provides a protocol to connect service providers such as PayTM with domain name services. The API allows developers to configure PayTM features with domain names and services. The Domain Connect protocol was developed by GoDaddy to serve as an open standard protocol to help developers and users bridge features from service providers with domain name providers.", 
    "api_name": "Domain Connect PayTM", 
    "progweb_cat": "Domains,Payments", 
    "crawled_date": "2017-06-10T13:59:23.094328"
  }, 
  "371": {
    "api_url": "cardconnect.com", 
    "progweb_url": "https://www.programmableweb.com/api/cardconnect", 
    "progweb_date": "11.11.2016", 
    "progweb_descr": "The CardConnect API integrates payments into transactional web services. It is available in REST architecture with HTTP verbs, CURD functions, and JSON responses. In addition, it provides endpoints to authorize, capture, void, and inquire funds.", 
    "api_name": "CardConnect", 
    "progweb_cat": "Credit Cards,Payments", 
    "crawled_date": "2017-06-10T13:59:23.101839"
  }, 
  "370": {
    "api_url": "cmsonline.com", 
    "progweb_url": "https://www.programmableweb.com/api/cmsonline", 
    "progweb_date": "11.11.2016", 
    "progweb_descr": "The CMSOnline API in agreement with USAePay Solutions, integrate merchant payments into applications. Developers can access a SOAP interface with libraries in PHP, JavaScript, ColdFusion, Ruby, .NET, and Perl, requesting HTTP GET calls to receive XML responses in return.", 
    "api_name": "CMSOnline", 
    "progweb_cat": "Merchants,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:23.102842"
  }, 
  "373": {
    "api_url": "afex.com", 
    "progweb_url": "https://www.programmableweb.com/api/afex-integrated-global-payments", 
    "progweb_date": "11.11.2016", 
    "progweb_descr": "Associated Foreign Exchange (AFEX) is a leading vendor of global payments solutions. The company\u2019s Integrated Global Payments API simplifies the customization and automation of mass global payments. The API\u2019s security profile features TLS/SSL encryption and a fortified authentication portal. AFEX provides a non-production demo environment that developers can use to test the API. Developers are required to request the API\u2019s documentation and access credentials from the provider.", 
    "api_name": "AFEX Integrated Global Payments", 
    "progweb_cat": "Financial,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:23.099739"
  }, 
  "372": {
    "api_url": "americanexpress.com", 
    "progweb_url": "https://www.programmableweb.com/api/amex-enhanced-authorization", 
    "progweb_date": "11.11.2016", 
    "progweb_descr": "This API has anti-fraud capability that allows merchants to submit additional data with an authorization request.  Risk-decisioning helps to decrease fraud, improve approval rates, and reduce the cost of doing business by providing a mechanism to increase the level of fraud detection during the authorization process.  Merchants submit the available information before processing the authorization.  American Express is a global service company, providing customers with access to products, insights and experiences that build business.", 
    "api_name": "AMEX Enhanced Authorization", 
    "progweb_cat": "Security,Authorization", 
    "crawled_date": "2017-06-10T13:59:23.100758"
  }, 
  "375": {
    "api_url": "gstsystem.co.in", 
    "progweb_url": "https://www.programmableweb.com/api/india-goods-and-service-tax-gst", 
    "progweb_date": "11.20.2016", 
    "progweb_descr": "The India Goods and Service Tax (GST) API is a RESTful API providing services for all taxpayer related functionalities. This includes such services as Information on Payment, Filling of Returns, Registration, Ledger Viewing, and more. Using the GST Developer portal, content is provided to help application developers to understand, use, and consume GST APIs in their applications.", 
    "api_name": "India Goods and Service Tax (GST)", 
    "progweb_cat": "Taxes,Documents", 
    "crawled_date": "2017-06-10T13:59:23.097458"
  }, 
  "374": {
    "api_url": "splitabill.com", 
    "progweb_url": "https://www.programmableweb.com/api/funkbit-splitabill", 
    "progweb_date": "11.16.2016", 
    "progweb_descr": "The Funkbit Splitabill API allows users to monitor and share bill expenses. Developers can use any of the programming languages, such as Java, Python, JavaScrip, and Ruby, to integrate the RESTful API into payment applications. This API sends requests in HTTP format and returns responses in JSON format. The current version of the API is a beta release.", 
    "api_name": "Funkbit Splitabill", 
    "progweb_cat": "Billing,Financial", 
    "crawled_date": "2017-06-10T13:59:23.098740"
  }, 
  "377": {
    "api_url": "pay.nl", 
    "progweb_url": "https://www.programmableweb.com/api/paynl", 
    "progweb_date": "11.23.2016", 
    "progweb_descr": "Pay.nl is a Netherlands based payment processing firm that assembles different payment options into one platform. Pay.nl offers several features such as 2-way processing, multiple bank accounts, in-store payments,  and SMS solutions for chat and subscriptions. The Pay.nl API provides over 250 functions related to payment processing. Registration is required to access documentation.", 
    "api_name": "Pay.nl", 
    "progweb_cat": "Payments,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:23.095353"
  }, 
  "376": {
    "api_url": "payexpim.com", 
    "progweb_url": "https://www.programmableweb.com/api/payex", 
    "progweb_date": "11.21.2016", 
    "progweb_descr": "The PayEx API can access user account information and initiate functionality for payment purposes. Based in the Scandinavian region, developers can benefit from the technical reference that includes XML parser for orders, merchants, purchases, and verifications.", 
    "api_name": "PayEx", 
    "progweb_cat": "Payments,Banking", 
    "crawled_date": "2017-06-10T13:59:23.096327"
  }, 
  "393": {
    "api_url": "paystack.co", 
    "progweb_url": "https://www.programmableweb.com/api/paystack", 
    "progweb_date": "12.30.2016", 
    "progweb_descr": "The Paystack REST API allows developers to access and integrate the functionality of Paystack with other applications. Some example API methods include managing customers, managing payments, and managing transactions. Paystack is an online payments platform that allows users to accept one-time and recurring payments online and via mobile.", 
    "api_name": "Paystack", 
    "progweb_cat": "Payments,Billing", 
    "crawled_date": "2017-06-10T13:59:23.077333"
  }, 
  "392": {
    "api_url": "squareup.com", 
    "progweb_url": "https://www.programmableweb.com/api/square-register-ios", 
    "progweb_date": "12.29.2016", 
    "progweb_descr": "The Square Register iOS API mediates communication between iOS apps and Square\u2019s payments processing apps. The API\u2019s provider is the vendor of Square payments processing hardware that include the Square contactless and chip reader. Developers can choose between the Android and iOS versions of the Square Register API, although the Android option provides access to only native apps while the iOS option provides access to both web and native apps. The API that requires OAuth 2.0 authorization transmits requests and responses in HTTP and JSON formats.", 
    "api_name": "Square Register iOS", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:23.078574"
  }, 
  "88": {
    "api_url": "metanga.com", 
    "progweb_url": "https://www.programmableweb.com/api/metanga", 
    "progweb_date": "01.23.2013", 
    "progweb_descr": "Metanga is an online billing and subscription payment service. Metanga offers merchants tools and features to bill for and accept payments for services and goods, either one-time payments or recurring subscription billing.  The Metanga API allows developers to access and integrate the functionality of Metanga with other applications. Some example API methods include managing account information, managing and editing product and price information, and managing billing. Public documentation is not available; interested developers should sign up here for more information: http://www.metanga.com/billing-system-demo-request/.", 
    "api_name": "Metanga", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:37.964976"
  }, 
  "89": {
    "api_url": "payondelivery.com", 
    "progweb_url": "https://www.programmableweb.com/api/payondelivery", 
    "progweb_date": "01.28.2013", 
    "progweb_descr": "PayOnDelivery is an online payment platform for buying and selling items on online marketplaces, such as Craigslist. Users do not pay for items until they are delivered.  The PayOnDelivery API allows developers to access and integrate the functionality of PayOnDelivery with other applications. Public documentation is not available; interested developers should sign up here for API access: http://payondelivery.com/apip/joinus.", 
    "api_name": "PayOnDelivery", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:37.963984"
  }, 
  "397": {
    "api_url": "iban.com", 
    "progweb_url": "https://www.programmableweb.com/api/iban-validation", 
    "progweb_date": "01.03.2017", 
    "progweb_descr": "IBAN.com operates as a web-based portal for real-time identification, validation, and calculation of International Bank Account Numbers (IBAN). This platform uses algorithmic formulas to determine the validity of an IBAN. The IBAN Validation API allows user to query the existence and validity of IBANs using check digits. It provides access to many other features including the validation of domestic bank code, IBAN issuer, and country-specific IBAN length, code, and structure as well as the issuing bank\u2019s address. Developers can use simple HTTP GET or POST requests to initiate the automation of IBAN validation processes. The API supports JSON and XML-formatted requests and responses.", 
    "api_name": "IBAN Validation", 
    "progweb_cat": "Financial,Accounts", 
    "crawled_date": "2017-06-10T13:59:23.072894"
  }, 
  "396": {
    "api_url": "mondido.com", 
    "progweb_url": "https://www.programmableweb.com/api/mondido-payments", 
    "progweb_date": "01.01.2017", 
    "progweb_descr": "The Mondido Payments API allows developers to integrate online payments into their websites and mobile applications. Mondido Payments is a Swedish online payment system that accepts a variety of payment methods, including PayPal, MasterPass, invoice, Swish (a Swedish e-commerce payment system), direct bank payments, Visa, MasterCard, and other cards, such as Amex and Dankort. It can handle both one-time and recurring payments.", 
    "api_name": "Mondido Payments", 
    "progweb_cat": "Payments,Nordic", 
    "crawled_date": "2017-06-10T13:59:23.073963"
  }, 
  "395": {
    "link1": "https://github.com/zipmark/rspec_api_documentation", 
    "api_url": "github.com", 
    "link3": "https://github.com/documentationjs/documentation", 
    "link2": "https://github.com/tootsuite/documentation", 
    "progweb_url": "https://www.programmableweb.com/api/paylike", 
    "progweb_date": "01.01.2017", 
    "progweb_descr": "The Paylike API allows developers to accept payments online using Visa or MasterCard. Paylike is an online payment service that works with any screen or device, including mobile devices and tablets. Paylike can handle both single and recurring transactions in 47 currencies. Paylike provides payment links, a virtual POS, and a complete test environment for integration.", 
    "api_name": "Paylike", 
    "progweb_cat": "Payments", 
    "descr3": "skip content features business explore marketplace pricing sign sign watch 44 star 2 790 fork 169 documentationjs documentation code issues 117 pull requests 6 wiki insights pulse graphs documentation modern javascript http documentation js org documentation tool documentation jsdoc javascript babel 874 commits 25 branches 43 releases 51 contributors javascript 81 6 html 7 5 c 6 7 css 4 2 javascript html c css clone download clone https use git checkout svn using web url open desktop download zip find file branch master switch branches tags branches tags anchors links dangerous custom inference v1 dep upgrades greenkeeper babel traverse 6 25 0 greenkeeper babel traverse pin 6 24 1 greenkeeper chokidar 1 7 0 greenkeeper chokidar pin 1 6 1 greenkeeper eslint 4 0 0 greenkeeper flow bin 0 47 0 greenkeeper flow bin 0 48 0 greenkeeper fs extra pin 3 0 0 greenkeeper git url parse 7 0 0 greenkeeper highlight js 9 11 0 greenkeeper jest pin 20 0 3 greenkeeper js yaml pin 3 8 3 greenkeeper remark html 6 0 1 greenkeeper tiny lr 1 0 5 greenkeeper tiny lr pin 1 0 4 greenkeeper vfile 2 1 0 inline destructuring parameter docs master native nothing see special names utf8 test fixture nothing show v4 0 0 rc 1 v4 0 0 rc 0 v4 0 0 beta 19 v4 0 0 beta 18 v4 0 0 beta 17 v4 0 0 beta16 v4 0 0 beta15 v4 0 0 beta14 v4 0 0 beta13 v4 0 0 beta12 v4 0 0 beta11 v4 0 0 beta10 v4 0 0 beta9 v4 0 0 beta7 v4 0 0 beta6 v4 0 0 beta5 v4 0 0 beta4 v4 0 0 beta3 v4 0 0 beta2 v4 0 0 beta1 v4 0 0 beta v3 0 4 v3 0 3 v3 0 2 v3 0 1 v3 0 0 v2 1 0 alpha v2 0 1 v2 0 0 v2 0 0 alpha2 v1 4 0 v1 3 2 v1 3 1 v1 3 0 v1 2 0 v1 1 0 v1 0 7 v1 0 6 v1 0 5 v1 0 4 v1 0 3 v1 0 2 v1 0 1 nothing show new pull request latest commit 65f5a37 jun 8 2017 greenkeeper bot committed tmcw fix \\( package \\) update babel generator version 6 25 0 \\( 804 \\) permalink readme md documentation system modern javascript supports modern javascript es5 es2017 jsx flow type annotations infers parameters types membership write less documentation let computer write integrates github link directly documentation code refers customizable output html json markdown examples html output default template markdown json documentation getting started start usage use documentation js recipes tricks writing effective jsdoc docs node api documentation js 's self generated documentation configuring documentation js faq troubleshooting theming tips theming documentation output html see also list projects similar documentation js user guide globally install using npm package manager npm install g documentation installs command called path point jsdoc annotated source code generate human readable documentation first run option help usage generate markdown docs index js files references bin documentation js build index js f md generate html docs files src bin documentation js build src f html docs document index js ignoring files requires imports bin documentation js build index js f md shallow build serve html docs app js bin documentation js serve app js build serve live update html docs app js bin documentation js serve watch app js validate jsdoc syntax util js bin documentation js lint util js update api section readme md docs index js bin documentation js readme index js section api build docs values exported index js bin documentation js build document exported index js commands serve input generate update display html documentation build input build documentation lint input check common style uniformity mistakes readme input inject documentation readme md options version show version number boolean help show help boolean contributing plenty issues 'd love help robust complete support including typedefs strong support html markdown output documentation coverage statistics validation documentation open open source project means individuals making significant valuable contributions given commit access project contribute see fit project like open wiki standard guarded open source project contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "descr2": "skip content features business explore marketplace pricing sign sign watch 46 star 458 fork 286 tootsuite documentation code issues 13 pull requests 11 projects 0 insights pulse graphs full documentation repository mastodon https github com tootsuite mastodon mastodon 675 commits 2 branches 11 releases 203 contributors agpl 3 0 clone download clone https use git checkout svn using web url download zip find file branch master switch branches tags branches tags master revert 122 patch 1 nothing show v1 1 v1 0 v0 9 9 v0 9 v0 8 v0 7 v0 6 v0 1 2 v0 1 1 v0 1 0 last mastodon state nothing show new pull request latest commit eb317b3 jun 17 2017 foxsan48 committed wxcafe added missing info prod \\( 306 \\) added missing info changed login user creation corrected user creation login hopefully permalink readme md mastodon documentation mastodon free open source gnu social compatible social network server decentralized alternative commercial platforms avoids risks single company monopolizing communication anyone run mastodon participate social network seamlessly using mastodon frequently asked questions list mastodon instances apps user guide using api api documentation libraries streaming api documentation testing api curl oauth details tips app developers push notifications running mastodon please note highly recommended run tagged release mastodon run current branch resources needed production guide docker guide alternative running heroku development guide alternative development vagrant alternative development production nanobox administration guide maintenance tasks tuning mastodon system configuration alternatives contributing mastodon sponsors translate mastodon language report bugs submit ideas protocols list used specs rfcs federation extensions protocols contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "descr1": "skip content features business explore marketplace pricing sign sign watch 26 star 915 fork 229 zipmark rspec api documentation code issues 30 pull requests 8 projects 0 wiki insights pulse graphs automatically generate api documentation rspec 784 commits 4 branches 5 releases 61 contributors mit ruby 67 0 gherkin 26 2 html 5 8 1 0 ruby gherkin html clone download clone https use git checkout svn using web url open desktop download zip find file branch master switch branches tags branches tags gh pages master new dsl rename dsl methods nothing show v4 9 0 v4 8 0 v4 7 0 v4 4 0 5 0 0 nothing show new pull request latest commit 36a0c41 jun 6 2017 oestrich bump version permalink readme md rspec api doc generator generate pretty api docs rails apis check sample changes please see wiki latest changes installation add rspec api documentation gemfile bundle set specs require 'rails helper' require 'rspec api documentation dsl' resource orders get orders example listing orders request status 200 end end end generate docs viewers consider adding viewer enhance generated documentation rspec api documentation generate simple html viewers use generated json raddocs sinatra app apitome rails engine gemfile spec spec helper rb rspecapidocumentation configure config config format json end sample app see folder sample rails app documented configuration options values listed default values rspecapidocumentation configure config set application rack test uses config app rails application output folder config docs dir rails root join \\( doc api \\) array output format \\( \\) possible values json html combined text combined json json iodocs textile markdown append json slate api blueprint config format html location templates config template path inside gem filter example document type config filter filter example document type config exclusion filter nil used adding curl output docs config curl host nil used adding curl output docs allows filter headers needed curl request host cookie set array config curl headers filter nil default settings nil headers shown sometimes chatty setting parameters array headers render headers config request headers include nil config response headers include nil default examples resources ordered description set true keep source order config keep source order false change name api index pages config api name api documentation redefine method dsl thinks client useful need `let` client likely model config client method client change iodocs writer protocol config io docs protocol http define documentation groups well group allows generate multiple sets documentation config define group public config default group 's doc dir subfolder parent group based group 's name config docs dir rails root join \\( doc api public \\) change filter include public examples config filter public end change post body formatted default still override `raw post` json xml proc passed params config request body formatter proc new params params change response body formatted default proc called response content type response body default response content type `application json` pretty formated config response body formatter proc new response content type response body response body change embedded style html output file processed rspecapidocumentation plain css config html embedded css file nil removes dsl method `status` required parameter named status config disable dsl status removes dsl method `method` required parameter named method config disable dsl method end format json generates index file example files json html generates index file example files html combined text generates single file resource used raddocs command line docs combined json generates single file examples json iodocs generates docs style documentation textile generates index file example files textile markdown generates index file example files markdown api blueprint generates index file example files apiblueprint append json lets selectively run specs without destroying current documentation see section append json format cannot run formats delete entire documentation folder upon run format appends new examples index file writes run examples correct folder rake task allows format used easily rspec core raketask new \\( 'docs generate append' spec file \\) task args spec file task args spec file env doc format append json end pattern spec file 'spec acceptance spec rb' rspec opts format rspecapidocumentation apiformatter end env doc format json rspecapidocumentation configure config config format env doc format end rake docs generate append spec acceptance orders spec rb update current index 's examples include file examples inside rewritten api blueprint format \\( apib \\) additional functions apib groups urls together http verbs route orders orders collection get returns orders end delete deletes orders end end n't use param url states rest documentation apib attributes besides parameters use attributes exactly like 'd use \\( see documentation \\) filtering exclusion rspec api documentation lets determine examples get outputted final documentation filtering done via metadata key tag examples either single symbol array symbols also false make sure get outputted resource account get accounts parameter page page view default document example get list accounts request status 200 end n't actually document example purely testing purposes example get list page 2 document false request \\( page 2 \\) status 404 end example request ca n't change document example request get list page 3 page 3 status 404 end end post accounts parameter email user email example creating account document private request \\( email eric example com \\) status 201 end example creating account errors document private developers request status 422 end end end documents generated top folder document false examples never generated rspecapidocumentation configure config exclude document examples marked 'private' config define group non private config config exclusion filter private end document examples marked 'public' config define group public config config filter public end document examples marked 'developer' config define group developers config config filter developers end end dsl require dsl beginning acceptance spec rb file make sure require following pull dsl definitions require 'rspec api documentation dsl' example group methods resource create set documentation examples go together acts describe block resource orders end get head post put delete patch method sent along url resource orders post orders end get orders end head orders end put orders id let \\( id \\) order id example get order path orders 1 ` id` replaced value `id` end end delete orders id end patch orders id end end example rspec 's built example method hook metadata surrounding could also used resource orders post orders example creating order request make assertions end end end example request example except calls first step assertions required block similar pass hash last parameter passed along extra parameters become metadata like resource orders parameter name order name post orders example request creating order name name make assertions end end end explanation method takes string representing detailed explanation example resource orders post orders example creating order explanation method creates new order request make assertions end end end resource also explanation resource orders explanation orders top level business objects created post request post orders example creating order explanation method creates new order request make assertions end end end header method takes header name value value string symbol symbol symbol allowing header values resource orders header accept application json header x custom custom header let \\( custom header \\) dynamic get orders example request headers headers accept application json x custom dynamic end end end parameter method takes parameter name description optional hash extra metadata displayed raddocs extra columns method parameter name exists e g send returned value server url encoded data special values display red show 's required scope parameters hash scoping nested see example use specified method parameter value retrieving parameter value goes several steps option defined test case responds method method used test case responds scoped method method used overwise unscoped method used resource orders parameter auth token authentication token let \\( auth token \\) user authentication token post orders parameter name order name required true scope order parameter item order items scope order parameter item id item id scope order item method custom item id let \\( name \\) order let \\( order name \\) order let \\( item id \\) 1 let \\( custom item id \\) 1 let \\( order item item id \\) 1 example creating order params eq \\( order name order item item id 1 auth token auth token \\) end end end response field method takes response field name description optional hash extra metadata displayed raddocs extra columns special values scope response field hash resource orders response field page current page get orders example request getting orders expect \\( response body \\) eq \\( page 1 json \\) end end end also group metadata using options factor duplications resource orders post orders options scope order required true parameter name order name parameter item order items end options scope order response field id order id response field status order status end let \\( name \\) order let \\( item id \\) 1 example creating order expect \\( status \\) 201 end end end callback complicated see relish docs trigger callback pass method block evaluated cause application make request example methods callback url defines destination callback example see relish docs client returns test client makes requests documents responses resource order get orders example listing orders create order via api instead via factories client post orders order hash request status 200 end end end callback evaluate block passed cause application test make callback request see relish docs request sends request app parameters headers defined resource order get orders example listing orders request status 200 end end end doc wish make request via client included documentation inside doc block resource order get orders example listing orders doc create order via api instead via factories n't document client post orders order hash end request status 200 end end end params get hash parameters sent see documentation example header method takes header name value resource orders header accept application json end get orders example request headers headers accept application json end end end headers returns headers sent request see documentation example response body returns string containing response body previous request resource order get orders example listing orders request response body name order 1 json end end end response headers returns hash response headers previous request resource order get orders example listing orders request response headers content type application json end end end status response status returns numeric status code response eg 200 alias status status commonly parameter resource order get orders example listing orders request status 200 response status 200 end end end query string data sent query string instead post data used get requests resource orders parameter name let \\( name \\) order get orders example list orders query string name orders end end end raw post completely override gets sent parameters ing resource orders header content type application json parameter name let \\( name \\) order post orders let \\( raw post \\) params json example request create new order params get sent json end end end rake task gem contains railtie defines rake task generating docs easily rails loads files rake docs generate using rails use rake following task require 'rspec core rake task' desc 'generate api request documentation api specs' rspec core raketask new \\( 'docs generate' \\) pattern 'spec acceptance spec rb' rspec opts format rspecapidocumentation apiformatter end require 'rspec api documentation' load 'tasks docs rake' using rake rspec spec acceptance format rspecapidocumentation apiformatter uploading file example uploading file see gotchas rspec api documentation relies variable test client define please configure rspec api documentation use another one see configuration make heavy use rspec metadata actually use entire gem without dsl hand write metadata must use etc access data last response able use response object created contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "crawled_date": "2017-06-10T13:59:23.075049"
  }, 
  "394": {
    "api_url": "blackbaud.com", 
    "progweb_url": "https://www.programmableweb.com/api/blackbaud-sky", 
    "progweb_date": "12.30.2016", 
    "progweb_descr": "The Blackbaud SKY API provides customers and partners access to open, industry-standard REST APIs allowing them to customize, integrate or extend functionality of Blackbaud solutions for fundraising and relationship management, digital marketing, advocacy, accounting, payments, analytics, school management, grant management, corporate social responsibility, and volunteerism.\r \r Blackbaud has been serving the social good industry for more than three decades andis the world's leading cloud software company powering social good. Serving the entire social good community\u2014nonprofits, foundations, corporations, education institutions, and individual change agents\u2014Blackbaud connects and empowers organizations to increase their impact through software, services, expertise, and data intelligence.", 
    "api_name": "Blackbaud SKY", 
    "progweb_cat": "Non-Profit,Accounting", 
    "crawled_date": "2017-06-10T13:59:23.076127"
  }, 
  "82": {
    "api_url": "micropayment.de", 
    "progweb_url": "https://www.programmableweb.com/api/micropayment-gmbh", 
    "progweb_date": "01.18.2013", 
    "progweb_descr": "The service from Germany provides payment processing for small amounts of money, especially suited to fees for software downloads, content access, and other inexpensive online services. It consolidates functions for conventional debit and credit card charges as well as payments triggered by phone calls or other interactions with mobile devices along with selective disbursement of prepaid account balances. Sellers register accounts with the service, but buyers need not create accounts to submit payments.  API methods support call2pay, a set of functions for one-time payment events or scheduled invoicing for recurring charges triggered via mobile devices. Methods also support disbursement of prepayments by authorized bank transfer as well as conventional charges to credit card and debit card numbers.", 
    "api_name": "micropayment GmbH", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:37.970827"
  }, 
  "83": {
    "api_url": "dragonpay.ph", 
    "progweb_url": "https://www.programmableweb.com/api/dragonpay", 
    "progweb_date": "01.18.2013", 
    "progweb_descr": "The service provides payment functionality within the Philippines without processing through debit and credit card accounts. It routes secure payment transactions through funds transfers via that nation's bank network, merchants like convenience stores and pawnshops, and bill payment services. It is intended to provide secure payment processing for market segments that are not dependent on credit cards.  API methods support submission of transaction details such as seller, product purchased, and payment amount along with buyer information including payment account details. The API processes payments and returns confirmation of the transaction status. Methods also support transaction status inquiries, payment cancellation, and retrieval of billing information.", 
    "api_name": "DragonPay", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:37.969808"
  }, 
  "80": {
    "api_url": "payway.com.au", 
    "progweb_url": "https://www.programmableweb.com/api/payway", 
    "progweb_date": "01.12.2013", 
    "progweb_descr": "PayWay, from Westpac, provides web based customer payment collection and management services. The PayWay API allows developers to automate credit card processing, including debiting and crediting funds, pre-authorizations, and queries. This is a SOAP API returning XML formatted data.", 
    "api_name": "PayWay", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:37.972832"
  }, 
  "81": {
    "api_url": "netlicensing.io", 
    "progweb_url": "https://www.programmableweb.com/api/netlicensing", 
    "progweb_date": "01.18.2013", 
    "progweb_descr": "Labs64 NetLicensing is a first-class solution in the Licensing as a Service (LaaS) sector.\r \r Based on open standards, it provides a cost effective, integrated and scalable platform for software vendors and developers who want to concentrate on their product\u2019s core functionality instead of spending resources on developing an own license management software.", 
    "api_name": "NetLicensing", 
    "progweb_cat": "Licensing,Cloud", 
    "crawled_date": "2017-06-10T13:59:37.971855"
  }, 
  "86": {
    "api_url": "paylane.com", 
    "progweb_url": "https://www.programmableweb.com/api/paylane", 
    "progweb_date": "01.21.2013", 
    "progweb_descr": "PayLane is an online payment platform. PayLane offers online payment services for merchants in a variety of languages and in a variety of currencies and payment methods.   The PayLane API allows developers to access and integrate the functionality of PayLane with other applications. Some example API methods include managing account information, retrieving payment information, and managing payments.", 
    "api_name": "PayLane", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:37.966848"
  }, 
  "87": {
    "api_url": "lexity.com", 
    "progweb_url": "https://www.programmableweb.com/api/lexity-commerce-central", 
    "progweb_date": "01.23.2013", 
    "progweb_descr": "Lexity Commerce Central is an online commerce platform. Lexity allows users to bill and accept payments online for goods and services.   The Lexity API allows developers to access and integrate the functionality of Lexity with other applications. Some example API methods include managing account information, retrieving payment information, and managing product and pricing information.", 
    "api_name": "Lexity Commerce Central", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:37.965958"
  }, 
  "84": {
    "api_url": "webteh.hr", 
    "progweb_url": "https://www.programmableweb.com/api/webpay-direct", 
    "progweb_date": "01.18.2013", 
    "progweb_descr": "Webteh is Croatian based ISO/MSP/PSP registered and licensed for differnet banks in Croatia, Bosnia and Herzegovina, Montenegro with presence in UK for EU based Merchants (Webteh LTD) and USA (Webteh Inc.) for USA based Merchants. The company provides WebPay, a PCI-compliant, secure payment processing via a white-label hosted interface or full integration based on its REST API. Transactions are resolved through global payment networks such as Visa and MasterCard/Maestro using registered merchant accounts and buyer profiles. Available services include transaction status inquiries, refunds, and scheduled installment payments.  API methods support submission of a transaction for payment, with merchant identifier, product purchased, and payment amount along with buyer profile identifier and payment card information to generate preauthorization codes. Completion of a preauthorized payment generates transaction status updates and transfers funds. Methods also support inquiries about previously submitted transactions and cancellations.", 
    "api_name": "WebPay Direct", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:37.968881"
  }, 
  "85": {
    "api_url": "mygateglobal.com", 
    "progweb_url": "https://www.programmableweb.com/api/mygate", 
    "progweb_date": "01.18.2013", 
    "progweb_descr": "The PCI-compliant service provides online payment processing to merchants across Europe and South Africa via several different methods suited to different sets of needs and merchant capabilities. Methods range from payment buttons directing buyers to the provider's interface through white-label options to full API integration of credit and debit card processing. Available payment options support subscription payments with recurring invoicing and highly secure options with fraud prevention.  API methods support submission of merchant information including product purchased and transaction amount and buyer information such as name, billing address, and card or payment account information. Methods interact with card associations Visa, MasterCard/Maestro, American Express, and Diners Club or a number of partner banks to preauthorize payment and complete funds capture. Methods also support transaction inquiries, transaction voids, and refunds. Advanced methods allow scheduling of recurring subscription payments and fraud detection.", 
    "api_name": "mygate", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:37.967810"
  }, 
  "7": {
    "api_url": "transpact.com", 
    "progweb_url": "https://www.programmableweb.com/api/transpact-partner", 
    "progweb_date": "10.08.2012", 
    "progweb_descr": "The service provides payment functionality based on an escrow system in which funds are held for distribution when terms of sale are completed, as when a product is delivered. It provides tools for stating and revising offer terms until both parties agree, then it accepts and holds payment until the party paying agrees to release the funds. The neutral third party helps to ensure agreement on terms and fulfillment of both delivery and payment, which encourages trust between parties unfamiliar to one another.  API methods support creating a \"Transpact\" agreement between contracting parties and confirming fulfillment to allow dispersal of funds or voiding an agreement previously created. Methods also support listing of a party's current and past agreements to allow risk assessment.", 
    "api_name": "Transpact Partner", 
    "progweb_cat": "Payments,International", 
    "crawled_date": "2017-06-10T13:59:38.020997"
  }, 
  "245": {
    "api_url": "inplayer.com", 
    "progweb_url": "https://www.programmableweb.com/api/inplayer", 
    "progweb_date": "08.07.2015", 
    "progweb_descr": "The InPlayer API service brings developers a tailored experience and white-labeled management from all parties that are interested in taking on the direct-to-API approach. In the time of AWS, distributed systems, and expanding need for integration and growth,  the InPlayer API has grown into its own CMS-as-a-Service and User-Management-as-a-Service. The API document and key is only available to registered users. For more information and to register, contact InPlayer at sales@inplayer.com. InPlayer allows media publishers to monetize videos via video ads within the player, user data capture, and paywall within videos, and other services.", 
    "api_name": "InPlayer", 
    "progweb_cat": "eCommerce,Monetization", 
    "crawled_date": "2017-06-10T13:59:26.460595"
  }, 
  "244": {
    "api_url": "mercadopago.com.ar", 
    "progweb_url": "https://www.programmableweb.com/api/mercadopago", 
    "progweb_date": "08.06.2015", 
    "progweb_descr": "The MercadoPago API allows developers to exchange information with the Mercado's platform. Mercado Pago is an online payment company that processes payments for businesses globally.", 
    "api_name": "MercadoPago", 
    "progweb_cat": "Business,Payments", 
    "crawled_date": "2017-06-10T13:59:26.461706"
  }, 
  "247": {
    "api_url": "marketinvoice.com", 
    "progweb_url": "https://www.programmableweb.com/api/marketinvoice", 
    "progweb_date": "08.26.2015", 
    "progweb_descr": "The MarketInvoice REST API allows developers to access and integrate the functionality of MarketInvoice with other applications. Public documentation is not available; API access comes with account service. MarketInvoice is an online invoicing provider.", 
    "api_name": "MarketInvoice", 
    "progweb_cat": "Invoicing,Payments", 
    "crawled_date": "2017-06-10T13:59:26.458500"
  }, 
  "246": {
    "api_url": "mobi-cart.com", 
    "progweb_url": "https://www.programmableweb.com/api/mobicart-store", 
    "progweb_date": "08.19.2015", 
    "progweb_descr": "MobiCart helps eCommerce website providers to create mCommerce mobile applications. Create native iPhone, iPad and Android apps that users can download from app stores and HTML5 web apps that are accessible from a mobile browser. MobiCart Store API aims to facilitate business transactions with mobile devices, providing API features such as store settings, shipping, tax, countries, and states. Available in JSON and XML format, this API can be accessed with a Key. Additional APIs that could enhance integration include Product API, Order API, and Department API.", 
    "api_name": "MobiCart Store", 
    "progweb_cat": "eCommerce,Mobile", 
    "crawled_date": "2017-06-10T13:59:26.459629"
  }, 
  "241": {
    "api_url": "blockchain.info", 
    "progweb_url": "https://www.programmableweb.com/api/blockchain-wallet", 
    "progweb_date": "07.08.2015", 
    "progweb_descr": "The Blockchain Wallet API allows Merchants to use a simple interface can to  interact with electronic wallets. This API decrypt the wallet as needed and re-saves. This API uses HTTP GET and POST requests. The API allows single or multiple payments to be made individually, wallet balances, and address management functions. API Key is required for authentication", 
    "api_name": "Blockchain Wallet", 
    "progweb_cat": "Payments,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:26.464657"
  }, 
  "240": {
    "api_url": "blockchain.info", 
    "progweb_url": "https://www.programmableweb.com/api/blockchain-receive-payments", 
    "progweb_date": "07.08.2015", 
    "progweb_descr": "The Blockchain Receive Payments API allows the user to process Bitcoin payments with a single Bitcoin address. This API uses http GET requests and requires a secret password for authorization. The service is free and does not require branding. \r \r Blockchain is a service that provides information on bitcoins and block chain data. Blockchain also allows users to manage their online bitcoin currency with online wallets.", 
    "api_name": "Blockchain Receive Payments", 
    "progweb_cat": "Payments,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:26.465732"
  }, 
  "243": {
    "api_url": "blockchain.info", 
    "progweb_url": "https://www.programmableweb.com/api/blockchain-data", 
    "progweb_date": "07.13.2015", 
    "progweb_descr": "The Blockchain Data API allows Bitcoin block and transaction payments data query functionality. This API provides requests for data regarding single block, single transaction, chart, block height, single and multi address, unspent outputs, unconfirmed transaction, inventory and more.  CORS header information is provided and all responses are in  JSON. \r \r  Blockchain is a service that provides information on bitcoins and block chain data. Blockchain also allows users to manage their online bitcoin currency with online wallets", 
    "api_name": "Blockchain Data", 
    "progweb_cat": "Payments,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:26.462674"
  }, 
  "242": {
    "api_url": "blockchain.info", 
    "progweb_url": "https://www.programmableweb.com/api/blockchain-create-wallet", 
    "progweb_date": "07.08.2015", 
    "progweb_descr": "The Blockchain Create Wallet API allows for the creation of a blockchain.info bitcoin wallet with the a pre-generated secret API key.  This API uses POST or GET requests and provides JSON responses and authentication is through a secret API key.\r \r  Blockchain is a service that provides information on bitcoins and block chain data. Blockchain also allows users to manage their online bitcoin currency with online wallets.", 
    "api_name": "Blockchain Create Wallet", 
    "progweb_cat": "Payments,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:26.463673"
  }, 
  "249": {
    "api_url": "sericapay.com", 
    "progweb_url": "https://www.programmableweb.com/api/sericapay", 
    "progweb_date": "08.26.2015", 
    "progweb_descr": "The SericaPay HTML API allows developers to access and integrate the functionality of SericaPay with other applications. Some example API methods include adding merchandise to shopping carts, buying merchandise, and checking out with shopping carts. SericaPay is an online marketplace solution for online merchants to sell merchandise to their customers.", 
    "api_name": "SericaPay", 
    "progweb_cat": "eCommerce,Merchants", 
    "crawled_date": "2017-06-10T13:59:26.455390"
  }, 
  "248": {
    "api_url": "xfers.io", 
    "progweb_url": "https://www.programmableweb.com/api/xfers-payments", 
    "progweb_date": "08.26.2015", 
    "progweb_descr": "The Xfers Payments REST API allows developers to access and integrate the functionality of Xfers with other applications. Some example API methods include requesting payments, cancelling payments, and receiving payment notifications. Xfers is an online payment system.", 
    "api_name": "Xfers Payments", 
    "progweb_cat": "Payments,Banking", 
    "crawled_date": "2017-06-10T13:59:26.457149"
  }, 
  "179": {
    "api_url": "paysius.com", 
    "progweb_url": "https://www.programmableweb.com/api/paysius", 
    "progweb_date": "11.11.2013", 
    "progweb_descr": "Paysius is a bitcoin payment service that allows customers to use bitcoins to pay merchants. The service offers zero risk of chargeback or payment reversal of any kind due to the use of bitcoin. The Paysius API uses REST calls and returns JSON. The API allows users to make queries to get new bitcoin addresses, send bitcoins, get bitcoin balances. An account is required with service, and an API key is used for authentication", 
    "api_name": "Paysius", 
    "progweb_cat": "Financial,Stocks", 
    "crawled_date": "2017-06-10T13:59:33.671514"
  }, 
  "178": {
    "api_url": "pennycurrency.com", 
    "progweb_url": "https://www.programmableweb.com/api/penny-currency", 
    "progweb_date": "10.30.2013", 
    "progweb_descr": "Penny Currency is a universal electronic payment system that allows customers to make purchases, pay bills, send and receive money payments online. Penny Currency provides a REST API that returns JSON or XML, that enable developers to build custom applications, tools, and services that integrate Penny Currency's functions, as well as automate payment systems. An account is required with service.", 
    "api_name": "Penny Currency", 
    "progweb_cat": "Payments,Merchants", 
    "crawled_date": "2017-06-10T13:59:33.673041"
  }, 
  "177": {
    "api_url": "blockscore.com", 
    "progweb_url": "https://www.programmableweb.com/api/blockscore", 
    "progweb_date": "10.30.2013", 
    "progweb_descr": "BlockScore is a customer authentication and verification service that aims to assists users with handling the regulatory compliance issues surrounding international payment and transfers. The BlockScore API uses REST calls and allows users to submit data for authentication, off-load data, verify passports, and perform other tasks. An account, and an API key are required for use. SSL is required for all calls.", 
    "api_name": "BlockScore", 
    "progweb_cat": "Security,Authentication", 
    "crawled_date": "2017-06-10T13:59:33.674775"
  }, 
  "176": {
    "api_url": "redpass.com", 
    "progweb_url": "https://www.programmableweb.com/api/redpass", 
    "progweb_date": "10.29.2013", 
    "progweb_descr": "RedPass is an affiliate payment service that provides payment, debit, and credit card services for web sites and businesses to pay affiliate marketers around the world. The RedPAss API uses REST calls and allows users to make a number of calls including peer-to-peer transfers, account signup, debug, e-wallet balance, e-wallet statements, sandbox calls, SCI payment, user match, and other calls. An account is required with service.", 
    "api_name": "RedPass", 
    "progweb_cat": "Payments,Referrals", 
    "crawled_date": "2017-06-10T13:59:33.676266"
  }, 
  "175": {
    "api_url": "interswitchng.com", 
    "progweb_url": "https://www.programmableweb.com/api/interswitch-connect", 
    "progweb_date": "10.28.2013", 
    "progweb_descr": "InterSwitch is an integrated payment and transaction processing company based out of Nigeria. InterSwitch provides advisory services, technology integration, transaction processing and payment infrastructure to government, banks and corporate organizations.   InterSwitch Connect is a payment platform for developers and merchants. The platform aims to make it easy for developers to get started with integration and provides tools for creating payment related products and solutions. The InterSwitch Connect platform offers REST APIs for their QuickPAY, Autopay and Loyalty services. The QuickTeller API allows Merchants to make payment on the QuickTeller platform and is available Interswitch Partners. The Autopay service enables mass payments to multiple recipients or beneficiaries. The loyalty API enables consumers to track and manage Reward Money balances and transactions.", 
    "api_name": "InterSwitch Connect", 
    "progweb_cat": "Payments,Merchants", 
    "crawled_date": "2017-06-10T13:59:33.677560"
  }, 
  "174": {
    "api_url": "nibl.com", 
    "progweb_url": "https://www.programmableweb.com/api/nibl", 
    "progweb_date": "10.28.2013", 
    "progweb_descr": "Nibl is a hosted payment platform that allows content creators to sell their digital content to mobile and web publishers. Nibl simplifies the payment process by allowing customers to use a single account across the nibl network, thus eliminating the need for publishers to acquire payment and personal information at the point of purchase.  Nibl offers a REST API to partner publishers. Full API documentation is available upon enrollment.", 
    "api_name": "nibl", 
    "progweb_cat": "Payments,Publishing", 
    "crawled_date": "2017-06-10T13:59:33.678696"
  }, 
  "173": {
    "api_url": "bitcoinmonitor.net", 
    "progweb_url": "https://www.programmableweb.com/api/bitcoinmonitor", 
    "progweb_date": "10.28.2013", 
    "progweb_descr": "BitcoinMonitor is a Bitcoin payment solution that doesn't require access to Bitcoin wallets but only facilitates transactions from payer to payee. The BitcoinMonitor API allows users to access several resources on the BitcoinMonitor site including agent resources, address resources, and notification resources. The API uses REST calls, returns JSON, and is free to use.", 
    "api_name": "BitcoinMonitor", 
    "progweb_cat": "Payments,Merchants", 
    "crawled_date": "2017-06-10T13:59:33.679786"
  }, 
  "172": {
    "api_url": "securepaytech.com", 
    "progweb_url": "https://www.programmableweb.com/api/securepaytech", 
    "progweb_date": "10.22.2013", 
    "progweb_descr": "SecurePayTech provides businesses with an online payment gateway for authorizing and processing credit card transactions. It also comes with a reporting service that can provide information on both individual transactions and trends over time. Users can access the payment gateway programmatically using either REST or SOAP methods. Sample code is available for PHP, ColdFusion, and ASP.NET.", 
    "api_name": "SecurePayTech", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:33.680827"
  }, 
  "171": {
    "api_url": "segpay.com", 
    "progweb_url": "https://www.programmableweb.com/api/segpay", 
    "progweb_date": "10.12.2013", 
    "progweb_descr": "SegPay is a billing platform for handling credit cards, checks, and European direct debit authorizations. The platform comes with marketing tools, sales reporting, automated password management, and an online web interface. It can provide payment portals in multiple languages and accept a variety of currencies. Many of SegPay's functions are accessible programmatically via SOAP calls.", 
    "api_name": "SegPay", 
    "progweb_cat": "Payments,Billing", 
    "crawled_date": "2017-06-10T13:59:33.681968"
  }, 
  "170": {
    "api_url": "billogram.com", 
    "progweb_url": "https://www.programmableweb.com/api/billogram", 
    "progweb_date": "10.07.2013", 
    "progweb_descr": "Billogram is cloud based invoicing service that allows small businesses to easily keep track of their cash flow. The service provides real time information about incoming payments as well as the status of invoices.   Billogram offers a REST API that allows third party applications and merchants to create and send invoices through the Billogram platform. Supported actions include Fetch invoice, Create new invoice and Update invoice. Results are delivered as JSON.", 
    "api_name": "Billogram", 
    "progweb_cat": "Financial,Accounting", 
    "crawled_date": "2017-06-10T13:59:33.682950"
  }, 
  "253": {
    "api_url": "withkash.com", 
    "progweb_url": "https://www.programmableweb.com/api/kash", 
    "progweb_date": "09.03.2015", 
    "progweb_descr": "The Kash REST API allows developers to access and integrate the functionality of Kash with other applications. Some example API methods include retrieving a list of available banks that work with Kash, sending banking credentials, and managing transactions. Kash is an online and mobile solution for direct debit payments for businesses.", 
    "api_name": "Kash", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:26.451112"
  }, 
  "182": {
    "api_url": "openconnect.com.au", 
    "progweb_url": "https://www.programmableweb.com/api/uberglobal-payment-gateway", 
    "progweb_date": "11.15.2013", 
    "progweb_descr": "UberGlobal Payment Gateway is an Australian ecommerce payment service that allows merchants to securely complete transactions through their online store. The service also offers real-time analytics to help merchants better understand their business and follow transactions in real time.  The UberGlobal Payment Gateway provides a REST API for the integration of UberGlobal Payment services into third-party application. API methods include Purchases, Tokenization, and Refunds. Responses are returned in JSON and authentication is provided via HTTP Basic Authentication.", 
    "api_name": "UberGlobal Payment Gateway", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:33.668390"
  }, 
  "183": {
    "api_url": "datafeedr.com", 
    "progweb_url": "https://www.programmableweb.com/api/datafeedr", 
    "progweb_date": "11.21.2013", 
    "progweb_descr": "Datafeedr is a system that enables users to create and embed affiliate shops into word press blogs. The Datafeedr API allows users to access sales feed information on over 250,000,000 products and 10,000 merchants to build custom shops as part of an affiliate network. An account is required with service.", 
    "api_name": "Datafeedr", 
    "progweb_cat": "eCommerce,Payments", 
    "crawled_date": "2017-06-10T13:59:33.667406"
  }, 
  "180": {
    "api_url": "paymentspring.com", 
    "progweb_url": "https://www.programmableweb.com/api/paymentspring", 
    "progweb_date": "11.11.2013", 
    "progweb_descr": "PaymentSpring is online merchant account and payment gateway that allows companies and users to quickly send and accept payments. The site offers flat rates, no contracts, lower PCI compliance issues, and no credit card storage. The PaymentSpring API uses REST calls and uses and API key for authentication. The API allows users to make calls to manipulate customer data, plan data logging event data, charge data, and subscription data.", 
    "api_name": "PaymentSpring", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:33.670343"
  }, 
  "181": {
    "api_url": "kounta.com", 
    "progweb_url": "https://www.programmableweb.com/api/kounta", 
    "progweb_date": "11.15.2013", 
    "progweb_descr": "Targeted towards retail and hospitality businesses, Kounta is scalable, cloud-based point of sale platform. The Kounta POS service can be securely accessed on any device at anytime across a range of channels including online, in-store and mobile.  Kounta offers a RESTful API for the easy integration of Kounta services with third-party applications. Example methods include customers, companies, orders, registers, payments, products, staff, and much more. Both JSON and XML data types are supported.", 
    "api_name": "Kounta", 
    "progweb_cat": "Payments,Sales", 
    "crawled_date": "2017-06-10T13:59:33.669398"
  }, 
  "186": {
    "api_url": "cashtie.com", 
    "progweb_url": "https://www.programmableweb.com/api/incomm-cashtie", 
    "progweb_date": "11.24.2013", 
    "progweb_descr": "InComm Cashtie is an API that allows  users to link cash payments to software applications. Cashtie offers solutions for eCommerce providers, retail operations, and other merchants to track and account for cash payments with online systems.  The InComm Cashtie API allows developers to access and integrate the functionality of Cashtie with other applications. Public documentation is not available; interested developers should sign up here: http://cashtie.com/.", 
    "api_name": "InComm Cashtie", 
    "progweb_cat": "Payments,Currency", 
    "crawled_date": "2017-06-10T13:59:33.664527"
  }, 
  "187": {
    "api_url": "cryptoknox.com", 
    "progweb_url": "https://www.programmableweb.com/api/cryptoknox", 
    "progweb_date": "11.25.2013", 
    "progweb_descr": "Cryptoknox is a crypto currency wallet service that enables users to store their coins as well as use them for purchases and payments. The Cryptoknox API allows merchants to connect current shopping carts to user's wallets. The API also allows users to export wallet TX data in either excel or PDF. An account is required with service.", 
    "api_name": "Cryptoknox", 
    "progweb_cat": "Financial,Currency", 
    "crawled_date": "2017-06-10T13:59:33.663582"
  }, 
  "184": {
    "api_url": "ethor.com", 
    "progweb_url": "https://www.programmableweb.com/api/ethor", 
    "progweb_date": "11.23.2013", 
    "progweb_descr": "eThor connects Point of Sale (POS) systems to the cloud, enabling services such as real-time ordering through Facebook, mobile devices, or 3rd party websites and applications. The eThor API is designed to allow developers to build native menu display and ordering experiences into websites and mobile applications. The API is able to retrieve menu information, retrieve or POST orders, and access information describing chains and stores.", 
    "api_name": "eThor", 
    "progweb_cat": "Payments,Restaurants", 
    "crawled_date": "2017-06-10T13:59:33.666400"
  }, 
  "185": {
    "api_url": "payment21.com", 
    "progweb_url": "https://www.programmableweb.com/api/payment21", 
    "progweb_date": "11.24.2013", 
    "progweb_descr": "Payment21 is a digital lockbox that is designed to handle financial data originating from physical checks, ACH payments, and digital wallets. It can also work with payroll, bill pay, and credit card payments. The Payment21 API allows developers to include these alternative payment methods on their website. Several different integration methods are offered that vary in size and scope, including the Payment21 button, the simple API, the SOAP API, and shopping carts that already have Payment21 integrated.", 
    "api_name": "Payment21", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:33.665401"
  }, 
  "188": {
    "api_url": "feathercoin.com", 
    "progweb_url": "https://www.programmableweb.com/api/feathercoin", 
    "progweb_date": "11.25.2013", 
    "progweb_descr": "Feathercoin is a crypto currency similar to others that provide users access to an unregulated market place where savings can be achieved. The Feathercoin API allows users to make calls to get information about the current mining specs, blocks, difficulty, and reward. Users can also make queries to get current exchange rates between feathercoin, fiat currencies, and other crypto currencies. The API uses REST calls and returns JSON.", 
    "api_name": "Feathercoin", 
    "progweb_cat": "Financial,Currency", 
    "crawled_date": "2017-06-10T13:59:33.662661"
  }, 
  "189": {
    "api_url": "vivapayments.com", 
    "progweb_url": "https://www.programmableweb.com/api/vivapayments", 
    "progweb_date": "11.25.2013", 
    "progweb_descr": "The VivaPayments service allows online store owners to accept payments sent via email, phone, e-banking, or a physical location. VivaPayments also provides next-day deposits, interest-free monthly installments, and support for tax card transactions. The VivaPayments API allows developers to integrate the service with their e-commerce websites via REST calls. The three functions that must be integrated for VivaPayments to work are the abilities to create payment orders, complete payment details, and confirm transactions.", 
    "api_name": "VivaPayments", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:33.661740"
  }, 
  "11": {
    "link5": "https://developer.paysimple.com/support.html", 
    "link4": "https://developer.paysimple.com/", 
    "link1": "https://paysimple.com/assets/components/templates/site-content/pdfs/jp_instructional_designer.pdf", 
    "api_url": "paysimple.com", 
    "link3": "https://developer.paysimple.com/documentation.html", 
    "link2": "https://support.paysimple.com/s/article/ka1C0000000CozVIAS/API-Information-and-Developer-Resources", 
    "progweb_url": "https://www.programmableweb.com/api/paysimple", 
    "progweb_date": "05.06.2007", 
    "progweb_descr": "Online payment processing service for ACH and Credit Cards  With industry low transaction rates, no API surcharge, and revenue sharing opportunity, your business is poised to gain a profitable new recurring revenue stream.", 
    "api_name": "PaySimple", 
    "progweb_cat": "Payments,Billing", 
    "descr5": "using outdated browser please upgrade browser improve experience documentation support sign award winning support faqs paysimple api solution \\? paysimple complete payment gateway api enables accept credit card echeck payments website software mobile app combines powerful recurring billing api capabilities one integration types functions integrate using paysimple api \\? paysimple payments api expand application 's capabilities allowing collect one time payments streamline recurring billing set payment plans credit card processing echeck acceptance long integration take \\? paysimple payment gateway api simple easy use take little day prototype running results vary depending complexity application countries payment types supported paysimple \\? currently paysimple 's api solution available businesses united states processing payments usd continue explore options best serve customers type support provide \\? offer email support 48 72 hour turnaround inquiries set recurring payments subscription billing api \\? absolutely recurring payments one primary services provided paysimple api support subscriptions billing payment plans use integrated billing payments set credit card processing billing ach api secure api need pci compliance \\? easy simply avoid storing card data servers 'll handle rest paysimple fully pci compliant uses 256 bit encryption store account information transmits data ssl user authentication submit ticket respond tickets within 48 72 hours \\( business days f \\) pricing support documentation copyright paysimple 2016 rights reserved", 
    "descr4": "using outdated browser please upgrade browser improve experience documentation support sign develop innovative payment solutions integrate paysimple api accept credit cards echecks software app website find complete api feature stack one payment integration credit card ach api processing secure payment gateway integration offers credit card processing api ach acceptance supports major credit debit cards ach processing direct bank 2 3 day funding holding accounts request balances funds deposited directly business bank account subscription billing api payment plans connect versatile recurring billing platform payment api supports subscription billing custom first payments payment plans recurring revenue opportunity earn percentage net transaction revenue derived clients every month accept credit cards echecks industry low credit card processing developers api surcharge revenue sharing opportunity business poised gain profitable new recurring revenue stream payment gateway api processing low 2 49 ach processing included 60 per echeck api surcharges billing api integrated payments features additional cost bonus value add features secure customer data management recurring billing api one integration reliable secure payment solution take security seriously ensure protection organization 's clients sensitive information paysimple software fully pci compliant uses 256 bit encryption store account information submitted data transmission allowed ssl user authentication required developers using payments api security experts provide award winning support make payment platform integration full pci compliance simple play spend virtually time collecting payments customers jeff gardener ceo zenplanner easy start sign test ach credit card api commitment using api test tool integrate use recurring billing payment integration industry leading complete feature set relax make api feature integration pci compliance easy waiting \\? learn today pricing support documentation copyright paysimple 2016 rights reserved", 
    "descr3": "using outdated browser please upgrade browser improve experience documentation support sign introduction integration sandbox environment production environment certification integrating systems paysimple api payments collecting payment new customer customer object payment account objects payment object collecting payment existing customer retrieve customerid retrieve create accountid create new payment object existing customer void payment refund payment retrieve payment records payment object parameters retrieve payment record retrieve list payment types payment schedules payment schedule basics recurring payment schedule basics payment plan schedule basics enter recurring payment schedule new customer customer object customer object attributes payment account objects credit card account object attributes ach account object attributes recurring payment object entering recurring payment schedule existing customer retrieve customerid create accountid create new recurring payment object entering payment plan schedule new customer customer object payment account objects payment plan object entering payment plan schedule existing customer retrieve customerid create accountid create new recurring payment object entering one time payment future date retrieve payment schedule recurring payment response object attributes payment plan object attributes suspend payment schedule pause payment schedule resume payment schedule delete payment schedule edit recurring payment schedule list payments payment schedule list payment schedules list schedules list recurring payment schedule list payment plan schedules filtering schedule lists customers adding customers managing customer payment accounts adding payment accounts updating payment accounts setting default payment accounts retrieving default payment accounts listing payment accounts retrieving customer records customer object attributes retrieving single customer record retrieving customer list editing customer goals listing customer payments pagination filters customer payments list date filters customer payment list status filter customer payment list customer payment list sorting customer payment list request examples listing customer payment schedules listing schedules customer listing recurring payment schedules customer listing payment plan schedules customer filtering custom schedule lists customer schedule list sorting customer schedule list request examples deleting customer records api http responses common api errors missing improper field values object id reference errors customer found errors unavailable function improper methods trace errors using api test tool schema reference customer object attributes account object attributes payment object attributes schedule object attributes appendix api quick reference appendix b failure data error codes messages credit card processing ach processing api test tool introduction welcome paysimple 4 0 api api designed intuitive easy integrate 4 0 api based rest \\( representational state transfer \\) architecture inheriting simplicity web offer platform distributed computing paysimple api uses json \\( javascript object notation \\) exchange data structure name value pairs easily readable developers allows quick parsing within different programming languages guide provides detailed instructions integrating web based system paysimple 4 0 api creating modifying api objects detailed definitions api attributes need assistance integration please hesitate contact api support team 800 466 0992 via email partnersupport paysimple com sandbox endpoint https sandbox api paysimple com production endpoint https api paysimple com integration paysimple takes security seriously ensure protection organization clients sensitive information paysimple software fully pci compliant encrypts account information submitted extend level security paysimple api allows communications https utilizing ssl tls requires api user authenticate security credentials order interact system ensure interface programmed correctly provide opportunity test code learn api prior connecting production system paysimple uses two step certification process first provided credentials sandbox environment develop code submit sample code review paysimple upon certification code provided credentials production environment use configure server server authentication paysimple api specific ip addresses pre register us following sections outline work environments integrate need paysimple sandbox test account credentials live account credentials please contact us partnersupport paysimple com sandbox environment sandbox endpoint https sandbox api paysimple com paysimple sandbox testing environment designed simulate active production environment safe environment test api connectivity functionality payments processed sandbox environment routed test authorization capture servers designed behave manner production servers however none transactions actually submitted processing funds transferred since sandbox mimics active production environment authentication requirements apply need obtain paysimple sandbox account order use contact api support team partnersupport paysimple com following information email address would like associated account type transactions want process credit card visa mastercard american express discover ach ppd ccd tel web request generate sandbox 4 0 api key paysimple api support team member contact sandbox api username sandbox api key \\( shared secret server server authentication \\) well credentials use access api test tool \\( see using api test tool instructions using tool \\) credentials also enable access paysimple sandbox web based ui view customers payments schedules created via api receive sandbox credentials configure connection described integrating systems paysimple api section api communications made via secure http communications sandbox endpoint desired uri test account numbers sandbox environment following credit card ach account numbers used test transaction processing sandbox environment note able process transaction types sandbox account enabled note pci rules use live account numbers test environments please certain use test account numbers paysimple sandbox environment paysimple sandbox test credit card accounts paysimple sandbox test bank accounts \\( ach processing \\) production environment production endpoint https api paysimple com completed api certification process \\( see certification section instructions \\) receive credentials client account associated production api key \\( shared secret server server authentication \\) received production credentials configure connection described integrating systems paysimple api section api communications made via secure https production endpoint desired uri note easily convert sandbox code production environment changing endpoint api username api key production values certification 've completed development testing sandbox ask submit code certification paysimple api ready begin certification process please complete following exercises submit code along actual api responses handled system partnersupport paysimple com must successfully complete certification order receive production api credentials api certification exercises customer objects detailed instructions creating customer objects using paysimple api see adding customers section successfully create new customer object expected result 201 created attempt create customer including elements billing address except streetaddress1 expected result 400 bad request field streetaddress1 message streetaddress1 field required provide example error displayed system account objects detailed instructions creating account objects using paysimple api see payment accounts section note configured process ach skip ach items configured process credit card transactions skip cc items successfully create ach account expected result 201 created attempt create ach account expected result 400 bad request field message bank account already attached customer cannot attach twice provide example error displayed system successfully create credit card account expected result 201 created attempt create credit card account using invalid card number expected result 400 bad request field message credit card number entered valid type visa provide example error displayed system payment objects detailed instructions creating modifying payment objects using paysimple api see ts section note configured process ach skip ach items configured process credit card transactions skip cc items successfully post ach payment expected result 201 created status posted attempt submit payment within 5 minutes expected result 400 bad request field message duplicate transaction provide example error displayed system refund 'settled' ach payment note ach payments sandbox settle 2 days sure post ach payment 2 days advance completing exercise expected result 200 ok \\( success \\) refund \\( credit \\) payment status reverseposted paymentid id original payment note response refund request newly created refund \\( credit \\) payment object void posted ach payment expected result 200 ok \\( success \\) status voided successfully post credit card payment expected result 201 created status authorized refund 'settled' credit card payment note credit card payments sandbox settle next day sure post credit card payment least day completing exercise expected result 200 ok \\( success \\) refund \\( credit \\) payment status authorized paymentid id original payment note response refund request newly created refund \\( credit \\) payment object void authorized credit card payment expected result 200 ok \\( success \\) status voided post credit card payment 2 million expected result 400 bad request field message payment amount cannot exceed 2 000 000 00 provide example error displayed system post credit card payment 0 expected result 400 bad request field message amount must greater 0 provide example error displayed system integrating systems paysimple api paysimple utilizes server token method \\( api key secret code \\) enable integrate back end services web servers paysimple api server token expire use extra security measures ensure requests endpoints valid use ip address network netmask supply provisioning process create unique server server api key enables us ensure requests api come valid server address within organization api key delivered via encrypted email please ensure kept safe location never send key wire api endpoint via email code samples unique password api protected api key \\( secret code \\) used construct server token enables authenticate paysimple api constructing servertoken use api key \\( secret code \\) provide construct server token using hmac \\( hash based message authentication code \\) signature utc time stamp iso 8601 format follows add authorization header request create api signature get utc timestamp iso 8601 format compute hmac date api key encoded utf8 using sha256 hashing algorithm base 64 encode hmac concatenate accessid api username timestamp iso 8601 time stamp defined step signature hmac result step create authorization header using following format psserver result step b example authorization psserver accessid apiuser1000 timestamp 2012 07 20t20 45 44 0973928z signature wqv47dddgc6xqbknqaszzbnu uzd1tzsrfjjfvv76dw call endpoint api uri sample authentication code following examples provide sample code creating server token authenticating paysimple api submitting api requests need adjust code examples api integration development environment example uri created passed dynamically based action want perform c php using system using system net using system text using system security cryptography namespace simpleapi public partial class simpleapi system web ui page protected void page load \\( object sender eventargs e \\) string username string apikey string timestamp datetime tostring \\( yyyy mm ddthh mm sszzz \\) uri uri new uri \\( https api paysimple com v4 customer \\) create token hmac hasher new hmacsha256 \\( encoding utf8 getbytes \\( supersecretcode \\) \\) byte data hasher computehash \\( encoding utf8 getbytes \\( timestamp \\) \\) string hmac convert tobase64string \\( data \\) httpwebrequest request webrequest create \\( uri \\) httpwebrequest string authenticationheader string format \\( psserver accessid 0 timestamp 1 signature 2 username timestamp hmac \\) request headers add \\( httprequestheader authorization authenticationheader \\) httpwebresponse response \\( httpwebresponse \\) request getresponse \\( \\) deal response \\? php username user name supersecretcode code timestamp gmdate \\( c \\) hmac hash hmac \\( sha256 timestamp supersecretcode true \\) note raw output parameter hmac base64 encode \\( hmac \\) auth authorization psserver accessid username timestamp timestamp signature hmac url https api paysimple com v4 customer curl curl init \\( \\) curl setopt \\( curl curlopt httpauth curlauth basic \\) curl setopt \\( curl curlopt url url \\) curl setopt \\( curl curlopt returntransfer true \\) curl setopt \\( curl curlopt httpheader array \\( auth \\) \\) var dump \\( curl exec \\( curl \\) \\) responsecode curl getinfo \\( curl curlinfo http code \\) curl close \\( curl \\) echo br response responsecode br br \\? payments know accountid credit card bank account want charge processing payment simple entering payment amount along accountid create new one time payment object via api method post uri v4 payment request payment object attributes accountid amount key payment object response attributes id integer paymentid number need reference future calls related transaction including void refund view details status integer payment status set system enumeration 0 pending 1 posted 2 settled 3 failed 5 voided 6 reversed 9 reverseposted 10 chargeback 12 authorized 13 returned 15 reversensf 17 refund settled expected responses new payments posted authorized failed note labels correspond paysimple status names ui mapping follows reversed refunded reverseposted refund \\( posted \\) reversensf returned nsf providerauthcode string pass field displays authorization response transaction tracenumber string pass field displays processor transaction identifier successful transaction provider error message failed transaction failuredata string standardized system information transaction failed 4 components code 4 digit paysimple error code description description error merchantactiontext instructions merchant handle error isdecline true indicates failure due transaction declined false indicates failure due reason note see data error co table containing failure codes associated messages assumes starting valid accountid assumes existing customer object existing payment account objects attached many instances case following sections cover complete process entering payments completely new customers existing customers existing payment accounts existing customers new payment accounts within section relevant object attributes fully defined sample basic new payment object request json accountid 395560 amount 3 sample new payment object response json customerid 255939 customerfirstname test customerlastname person customercompany abc company referenceid 0 status authorized recurringscheduleid 0 paymenttype cc paymentsubtype moto providerauthcode approved tracenumber 406690 paymentdate 2013 10 11t06 00 00z returndate null estimatedsettledate 2013 10 14t06 00 00z actualsettleddate null canvoiduntil 2013 10 12t02 45 00z failuredata code null description null merchantactiontext null accountid 395560 invoiceid null amount 7 5 isdebit false invoicenumber 123ab purchaseordernumber 77652 orderid ab999 description one time payment new customer latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1608391 lastmodified 2013 10 11t22 34 07z createdon 2013 10 11t22 34 07z collecting payment new customer collecting payment new customer using api accomplished using three sequential steps creating new customer object adding payment account object customer object created step 1 creating payment object using payment account object created step 2 attributes object types defined request response information associated utilizing create customers process payments customer object create new customer object via api method post uri v4 customer request customer object attributes response attribute needed customerid customer object attributes required attributes firstname string 150 characters max lastname string 150 characters max shippingsameasbilling boolean set true indicate separate shipping address even including billing address set false require shippingaddress fields sample new customer object request optional attributes billingaddress object billing address required included attributes required except streetaddress2 statecode country 10 characters type valid zipcode streetaddress1 string 250 characters max streetaddress2 string optional 250 characters max city string 100 characters max statecode string valid 2 character state territory code us canada zipcode string 10 characters country string optional defaults us max 3 characters shippingaddress object required shippingsameasbilling set true included attributes required except streetaddress2 statecode country 10 characters type valid zipcode streetaddress1 string 250 characters max streetaddress2 string optional 250 characters max city string 100 characters max statecode string valid 2 character state territory code us canada zipcode string 10 characters country string optional defaults us max 3 characters company string 50 characters max customeraccount string 28 characters max non system account number assign phone string 10 characters max enter numeric string include parenthesis dashes altphone string 10 characters max enter numeric string include parenthesis dashes mobilephone string 10 characters max enter numeric string include parenthesis dashes fax string 10 characters max enter numeric string include parenthesis dashes email string 100 characters max must valid email address altemail string 100 characters max must valid email address website string 100 characters max must url format notes string 2048 characters max open text field sample new customer object response system attributes fields required components customer object populated system need include requests id integer defaults 0 new requests populated customerid response lastmodified string set system request data disregarded createdon string set system request data disregarded sample new customer object request json post v4 customer billingaddress streetaddress1 123 st streetaddress2 null city denver statecode co zipcode 80202 country null shippingsameasbilling true shippingaddress null company abc company notes note abc company customeraccount tp 117 firstname test lastname person email testperson abcco com phone 8005551212 sample new customer object response json response altemail null altphone null mobilephone null fax null website null billingaddress streetaddress1 123 st streetaddress2 null city denver statecode co zipcode 80202 country null shippingsameasbilling true shippingaddress streetaddress1 123 st streetaddress2 null city denver statecode co zipcode 80202 country null company abc company notes note abc company customeraccount tp 117 firstname test lastname person email testperson abcco com phone 8005551212 id 255939 lastmodified 2013 10 01t19 16 38 5061103z createdon 2013 10 01t19 16 38 5061103z payment account objects create new payment account object via api method post uri v4 account creditcard v4 account ach request credit card attributes ach attributes response attribute needed account id credit card account request object attributes required attributes customerid integer system identifier customer record card added id attribute customer object created previous step creditcardnumber string 15 16 digits expirationdate string valid date format mm yyyy issuer integer enumeration 12 visa 13 master \\( mastercard \\) 14 amex \\( american express \\) 15 discover isdefault boolean enter true set card default credit card account customer record otherwise enter false cards attached customer record field default true regardless entry optional attributes billingzipcode string max 10 characters left blank system use billing zip code \\( zipcode attribute customer object \\) processing payment billingzipcode attribute null 10 characters type valid system attributes fields required components credit card account object populated system need include requests id integer defaults 0 new requests populated accountid response lastmodified string set system request data disregarded createdon string set system request data disregarded ach account request object attributes required attributes customerid integer system identifier customer record card added id attribute customer object created previous step routingnumber string 9 digit bank routing number accountnumber string min 4 digits max 100 digits bank account number bankname string 100 characters max financial institution name ischeckingaccount boolean enter true indicate checking account false indicate savings account general ledger accounts supported isdefault boolean enter true set account default ach account customer record otherwise enter false ach accounts attached customer record field default true regardless entry system attributes fields required components ach account object populated system need include requests id integer defaults 0 new requests populated accountid response lastmodified string set system request data disregarded createdon string set system request data disregarded sample new credit card account object request json creditcardnumber 4111111111111111 expirationdate 12 2015 issuer 12 billingzipcode 80202 customerid 255939 isdefault false id 0 lastmodified 0001 01 01t07 00 00z createdon 0001 01 01t07 00 00z sample new credit card account object response json creditcardnumber 1111 expirationdate 12 2015 issuer visa billingzipcode 80202 customerid 255939 isdefault true id 395560 lastmodified 2013 10 11t17 41 36 6661404z createdon 2013 10 11t17 41 36 6661404z sample new ach account object request json ischeckingaccount true routingnumber 072000326 accountnumber 751666666 bankname test bank customerid 255939 isdefault true id 0 lastmodified 0001 01 01t07 00 00z createdon 0001 01 01t07 00 00z sample new ach account object response json ischeckingaccount true routingnumber 072000326 accountnumber 6666 bankname test bank customerid 255939 isdefault true id 395564 lastmodified 2013 10 11t17 54 56 7441402z createdon 2013 10 11t17 54 56 7441402z payment object section covers entering one time payment submitted current date \\( see scheduled payment section instructions entering one time payment future date \\) note system determines type payment \\( ach credit card \\) based account type accountid provided create new payment object via api method post uri v4 payment request payment object attributes payment object request attributes required attributes accountid integer system identifier credit card account ach account used payment id attribute credit card object ach account object created previous step amount number amount charge enter number include enter integer decimal use 2 decimal places system round nearest penny e entering 3 129 result payment amount 3 13 optional attributes isdebit boolean field defaults false indicate payment whether included entering true result error standalone credits currently supported via api cvv string min 3 digits max 4 digits credit card security code field defaults null included may included credit card payments ignored entered ach payments paymentsubtype string field defaults moto credit card payments web ach payments included left null enumeration \\( ach \\) 4 web 5 tel 6 ppd 7 ccd enumeration \\( cc \\) 10 swipe 11 moto invoiceid integer system invoice identifier included seat associated system invoice number invoicenumber attribute apply payment specified invoice id note invoice creation management currently available via api invoicenumber string 50 characters max invoice number attached payment number provided system invoice number associated invoiceid attached payment payment applied system invoice note invoice creation management currently available via api purchaseordernumber string 50 characters max purchase order number attached payment orderid string 50 characters max back end transaction identifier included ui description string 2048 characters max latitude number field currently used ui accept save latitude values longitude number field currently used ui accept save longitude values successreceiptoptions object receipt instructions null means current system default settings used \\( included null default \\) following additional fields used override defaults direct payment receipts sent sendtocustomer true indicates receipt gets sent email address attached customer record false indicates sendtootheraddresses specific email address \\( addresses \\) receipt email sent using brackets enter valid email addresses separated commas failurereceiptoptions object failure notification email instructions null means current system default settings used \\( included null default \\) following additional fields used override defaults direct failure notifications sent sendtocustomer true indicates notification gets sent email address attached customer record false indicates sendtootheraddresses specific email address \\( addresses \\) failure notification email sent using brackets enter valid email addresses separated commas system attributes fields required components payment object populated system need include requests id integer defaults 0 new requests populated paymentid response lastmodified string set system request data disregarded createdon string set system request data disregarded payment object response attributes key attributes id integer paymentid number need reference future calls related transaction including void refund view details status integer payment status set system enumeration 0 pending 1 posted 2 settled 3 failed 5 voided 6 reversed 9 reverseposted 10 chargeback 12 authorized 13 returned 15 reversensf 17 refund settled expected responses new payments posted authorized failed note labels correspond paysimple status names ui mapping follows reversed refunded reverseposted refund \\( posted \\) reversensf returned nsf providerauthcode string pass field displays authorization response transaction tracenumber string pass field displays processor transaction identifier successful transaction provider error message failed transaction failuredata string standardized system information transaction failed 4 components code 4 digit paysimple error code description description error merchantactiontext instructions merchant handle error isdecline true indicates failure due transaction declined false indicates failure due reason note see data error co table containing failure codes associated messages attributes customerid integer system identifier customer record associated payment customerfirstname string first name customer associated payment customerlastname string last name customer associated payment customercompany string company associated payment referenceid integer refunded payment paymentid refund transaction refund transaction payment id refunded payment field 0 cases recurringscheduleid integer payment part schedule scheduleid field 0 cases including one time payments processed new customers paymenttype integer set system identify transaction type based type account associated accountid used payment enumeration 1 cc \\( credit card \\) 2 ach paymentsubtype integer type credit card ach payment defaults moto credit card payments web ach payments included left null values include swipe cc ppd ccd tel ach paymentdate string set system date payment processed always current date returndate string set system date ach payment returned field always null new transactions always null credit card transactions estimatedsettledate string date system expects transaction settled based merchant funding time actualsettleddate string date system receives notification transaction actually settled field always null new transactions canvoiduntil string last date transaction may voided accountid integer accountid specified payment request invoiceid integer invoiceid specified payment request amount number amount specified payment request payment request amount included two decimal places response amount rounded nearest penny isdebit boolean false payment true standalone credit invoicenumber string invoicenumber specified payment request purchaseordernumber string purchaseordernumber specified payment request orderid string orderid specified payment request description string description specified payment request latitude number latitude specified captured payment request longitude number longitude specified captured payment request successreceiptoptions string receipt instructions specified payment request null means current system default settings used failurereceiptoptions string failure notification instructions specified payment request null means current system default settings used lastmodified string set system date time transaction record last modified createdon string set system date time transaction record created \\( e time date payment processed \\) sample new payment object requests json simple accountid 395560 amount 3 sample new payment object response json complete customerid 255939 customerfirstname test customerlastname person customercompany abc company referenceid 0 status authorized recurringscheduleid 0 paymenttype cc paymentsubtype moto providerauthcode approved tracenumber 406690 paymentdate 2013 10 11t06 00 00z returndate null estimatedsettledate 2013 10 14t06 00 00z actualsettleddate null canvoiduntil 2013 10 12t02 45 00z failuredata code null description null merchantactiontext null accountid 395560 invoiceid null amount 7 5 isdebit false invoicenumber 123ab purchaseordernumber 77652 orderid ab999 description one time payment new customer latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1608391 lastmodified 2013 10 11t22 34 07z createdon 2013 10 11t22 34 07z collecting payment existing customer collecting payment existing customer using api accomplished using three sequential steps retrieve customerid retrieve existing accountid enter new payment account object create payment object using payment account created retrieved step 2 maintain database customerids associated accountids complete steps 1 2 system utilize paysimple api processing payment \\( step 3 \\) maintain database customerid begin step 2 attributes needed object types defined request response information associated utilizing process payments existing customers using new existing payment accounts retrieve customerid know customer id customer want charge \\( example stored database \\) skip step need retrieve customerid attribute customer object want charge need search customer record obtain search via api method get uri v4 globalsearch \\? query value query customer name company name response attribute needed originid note search originid customer object equal customerid sample customer search request json uri v4 globalsearch \\? query abc company sample customer search response json results originkey cust originid 255939 description customer test person abc company ranking 176 retrieve create accountid processing payment existing customer option charging default ach cc account charging non default ach cc account entering new ach cc account part payment process processes associated objects attributes described following sections using default credit card payment account use customerid obtained step 1 \\( saved database \\) retrieve default credit card accountid method get uri v4 customer customerid defaultcreditcard response attribute needed accountid credit card object response attributes creditcardnumber string last four digits card number note security purposes full account numbers never displayed responses expirationdate string expiration date format mm yyyy issuer integer enumeration 12 visa 13 master \\( mastercard \\) 14 amex \\( american express \\) 15 discover billingzipcode string zip code attached credit card saved payment account record null zipcode attribute customer object used processing payment customerid integer system identifier customer record card attached customerid attribute entered uri isdefault boolean true indicate indeed retrieved default credit card id integer accountid need next step lastmodified string date credit card account object last changed createdon string date credit card account object created using default ach payment account use customerid obtained step 1 \\( saved database \\) retrieve default ach accountid method get uri v4 customer customerid defaultach response attribute needed accountid ach object attributes ischeckingaccount boolean true indicates checking account false indicates savings account general ledger accounts supported routingnumber string 9 digit bank routing number accountnumber string last four digits bank account number note security purposes full account numbers never displayed responses bankname string financial institution name customerid integer system identifier customer record card attached customerid attribute entered uri isdefault boolean true indicate indeed retrieved default ach account id integer accountid need next step lastmodified string date ach account object last changed createdon string date ach account object created using existing credit card payment account use customerid obtained step 1 \\( saved database \\) retrieve credit card account objects associated customer record select accountid one want charge method get uri v4 customer customerid creditcardaccounts response attribute needed accountid account want charge account list credit card object response attributes creditcardnumber string last four digits card number note security purposes full account numbers never displayed responses expirationdate string card expiration date format mm yyyy issuer integer enumeration 12 visa 13 master \\( mastercard \\) 14 amex \\( american express \\) 15 discover billingzipcode string zip code attached credit card saved payment account record null zipcode attribute customer object used processing payment customerid integer system identifier customer record card attached customerid attribute entered uri isdefault boolean true indicate default credit card false saved cards id integer accountid need next step lastmodified string date credit card account object last changed createdon string date credit card account object created need determine returned credit cards want charge retrieve accountid next step alternate route obtain existing credit card accountid want select one saved accounts treat credit cards new \\( follow steps account section \\) system recognize duplicate \\( update expiration date necessary \\) credit card object response contain existing accountid using existing ach payment account use customerid obtained step 1 \\( saved database \\) retrieve ach account objects associated customer record copy accountid one want charge method get uri v4 customer customerid achaccounts response attribute needed accountid account want charge account list ach object response attributes ischeckingaccount boolean true indicates checking account false indicates savings account general ledger accounts supported routingnumber string 9 digit bank routing number accountnumber string last four digits bank account number note security purposes full account numbers never displayed responses bankname string financial institution name customerid integer system identifier customer record card attached customerid attribute entered uri isdefault boolean true indicate default credit card false saved cards id integer accountid need next step lastmodified string date ach account object last changed createdon string date ach account object created need determine returned bank accounts want charge retrieve accountid next step note use get v4 customerid accounts request return list payment accounts \\( ach credit card \\) associated specified customerid select one would like use payment using new credit card account use customerid obtained step 1 \\( saved database \\) attach new credit card payment account object via api note accountid new credit card account method post uri v4 account creditcard request credit card attributes response attribute needed account id required credit card account object request attributes customerid integer system identifier customer record card added customerid retrieved database first step creditcardnumber string 15 16 digits expirationdate string valid date format mm yyyy issuer integer enumeration 12 visa 13 master \\( mastercard \\) 14 amex \\( american express \\) 15 discover isdefault boolean enter true set card default credit card account customer record otherwise enter false cards attached customer record field default true regardless entry optional credit card account object request attributes billingzipcode string max 10 characters left blank system use billing zip code \\( zipcode attribute customer object \\) processing payment billingzipcode attribute null 10 characters type valid system credit card account object attributes fields required components credit card account object populated system need include requests id integer defaults 0 new requests populated accountid response lastmodified string set system request data disregarded createdon string set system request data disregarded using new ach account use customerid obtained step 1 \\( saved database \\) attach new ach payment account object via api note accountid new credit card account method post uri v4 account ach request ach account attributes response attribute needed accountid required ach account object attributes customerid integer system identifier customer record card added customerid retrieved database first step routingnumber string 9 digit bank routing number accountnumber string min 4 digits max 100 digits bank account number bankname string 100 characters max financial institution name ischeckingaccount boolean enter true indicate checking account false indicate savings account general ledger accounts supported isdefault boolean enter true set account default ach account customer record otherwise enter false ach accounts attached customer record field default true regardless entry system ach account object attributes fields required components ach account object populated system need include requests id integer defaults 0 new requests populated accountid response lastmodified string set system request data disregarded createdon string set system request data disregarded sample default credit card request json uri v4 customer 255939 defaultcreditcard sample default credit card response json creditcardnumber 1111 expirationdate 12 2015 issuer visa billingzipcode 80202 customerid 255939 isdefault true id 395560 lastmodified 2013 10 11t17 41 36z createdon 2013 10 11t17 41 36z sample default ach request json v4 customer 255939 defaultach sample default ach response json ischeckingaccount true routingnumber 072000326 accountnumber 6666 bankname test bank customerid 255939 isdefault true id 395564 lastmodified 2013 10 11t17 54 56z createdon 2013 10 11t17 54 56z sample credit card accounts request json uri v4 customer 255939 creditcardaccounts sample credit card accounts response json creditcardnumber 1111 expirationdate 12 2015 issuer visa billingzipcode 80202 customerid 255939 isdefault true id 395560 lastmodified 2013 10 11t17 41 36z createdon 2013 10 11t17 41 36z creditcardnumber 5454 expirationdate 08 2018 issuer master billingzipcode 80202 customerid 255939 isdefault false id 396036 lastmodified 2013 10 15t18 33 25z createdon 2013 10 15t18 33 25z sample ach accounts request json uri v4 customer 255939 achaccounts sample ach accounts response json ischeckingaccount true routingnumber 072000326 accountnumber 6666 bankname test bank customerid 255939 isdefault true id 395564 lastmodified 2013 10 11t17 54 56z createdon 2013 10 11t17 54 56z ischeckingaccount true routingnumber 072000326 accountnumber 8888 bankname bank two customerid 255939 isdefault false id 396037 lastmodified 2013 10 15t18 33 56z createdon 2013 10 15t18 33 56z sample new credit card account object request json creditcardnumber 4111111111111111 expirationdate 12 2015 issuer 12 billingzipcode 80202 customerid 255939 isdefault false sample new credit card account object response json creditcardnumber 1111 expirationdate 12 2015 issuer visa billingzipcode 80202 customerid 255939 isdefault true id 395560 lastmodified 2013 10 11t17 41 36 6661404z createdon 2013 10 11t17 41 36 6661404z sample new ach account object request json ischeckingaccount true routingnumber 072000326 accountnumber 751666666 bankname test bank customerid 255939 isdefault true sample new ach account object response json ischeckingaccount true routingnumber 072000326 accountnumber 6666 bankname test bank customerid 255939 isdefault true id 395564 lastmodified 2013 10 11t17 54 56 7441402z createdon 2013 10 11t17 54 56 7441402z create new payment object existing customer section covers entering one time payment submitted current date \\( see scheduled payment section instructions entering one time payment future date \\) note system determines type payment \\( ach credit card \\) based account type accountid provided create new payment object via api method post uri v4 payment request payment object attributes payment object request attributes required attributes accountid integer system identifier credit card account ach account used payment id attribute credit card object ach account object retrieved created previous step amount number amount charge enter number include enter integer decimal use 2 decimal places system round nearest penny e entering 3 129 result payment amount 3 13 optional attributes isdebit boolean field defaults false indicate payment whether included entering true result error standalone credits currently supported via api cvv string min 3 digits max 4 digits credit card security code field defaults null included may included credit card payments ignored entered ach payments paymentsubtype string field defaults moto credit card payments web ach payments included left null enumeration \\( ach \\) 4 web 5 tel 6 ppd 7 ccd enumeration \\( cc \\) 10 swipe 11 moto invoiceid integer system invoice identifier included seat associated system invoice number invoicenumber attribute apply payment specified invoice id note invoice creation management currently available via api invoicenumber string 50 characters max invoice number attached payment number provided system invoice number associated invoiceid attached payment payment applied system invoice note invoice creation management currently available via api purchaseordernumber string 50 characters max purchase order number attached payment orderid string 50 characters max back end transaction identifier included ui description string 2048 characters max open text field latitude number field currently used ui accept save latitude values longitude number field currently used ui accept save longitude values successreceiptoptions object receipt instructions null means current system default settings used \\( included null default \\) following additional fields used override defaults direct payment receipts sent sendtocustomer true indicates receipt gets sent email address attached customer record false indicates sendtootheraddresses specific email address \\( addresses \\) receipt email sent using brackets enter valid email addresses separated commas failurereceiptoptions object failure notification email instructions null means current system default settings used \\( included null default \\) following additional fields used override defaults direct failure notifications sent sendtocustomer true indicates notification gets sent email address attached customer record false indicates sendtootheraddresses specific email address \\( addresses \\) failure notification email sent using brackets enter valid email addresses separated commas system attributes fields required components payment object populated system need include requests id integer defaults 0 new requests populated paymentid response lastmodified string set system request data disregarded createdon string set system request data disregarded key attributes id integer paymentid number need reference future calls related transaction including void refund view details status integer payment status set system enumeration 0 pending 1 posted 2 settled 3 failed 5 voided 6 reversed 9 reverseposted 10 chargeback 12 authorized 13 returned 15 reversensf 17 refund settled expected responses new payments posted authorized failed note labels correspond paysimple status names ui mapping follows reversed refunded reverseposted refund \\( posted \\) reversensf returned nsf providerauthcode string pass field displays authorization response transaction tracenumber string pass field displays processor transaction identifier successful transaction provider error message failed transaction failuredata string standardized system information transaction failed 4 components code 4 digit paysimple error code description description error merchantactiontext instructions merchant handle error isdecline true indicates failure due transaction declined false indicates failure due reason note see data error co table containing failure codes associated messages attributes customerid integer system identifier customer record associated payment customerfirstname string first name customer associated payment customerlastname string last name customer associated payment customercompany string company associated payment referenceid integer refunded payment paymentid refund transaction refund transaction payment id refunded payment field 0 cases recurringscheduleid integer payment part schedule scheduleid field 0 cases including one time payments processed new customers paymenttype integer set system identify transaction type based type account associated accountid used payment enumeration 1 cc \\( credit card \\) 2 ach paymentsubtype integer type credit card ach payment defaults moto credit card payments web ach payments included left null values include swipe cc ppd ccd tel ach paymentdate string set system date payment processed always current date returndate string set system date ach payment returned field always null new transactions always null credit card transactions estimatedsettledate string date system expects transaction settled based merchant funding time actualsettleddate string date system receives notification transaction actually settled field always null new transactions canvoiduntil string last date transaction may voided accountid integer accountid specified payment request invoiceid integer invoiceid specified payment request amount number amount specified payment request payment request amount included two decimal places response amount rounded nearest penny isdebit boolean false payment true standalone credit invoicenumber string invoicenumber specified payment request purchaseordernumber string purchaseordernumber specified payment request orderid string orderid specified payment request description string description specified payment request latitude number latitude specified captured payment request longitude number longitude specified captured payment request successreceiptoptions string receipt instructions specified payment request null means current system default settings used failurereceiptoptions string failure notification instructions specified payment request null means current system default settings used lastmodified string set system date time transaction record last modified createdon string set system date time transaction record created \\( e time date payment processed \\) sample new payment object request json simple accountid 395560 amount 3 sample new payment object response json full accountid 395560 amount 7 50 isdebit false invoicenumber 123ab purchaseordernumber 77652 orderid ab999 description one time payment new customer cvv 999 paymentsubtype moto payment object response attributes json customerid 255939 customerfirstname test customerlastname person customercompany abc company referenceid 0 status authorized recurringscheduleid 0 paymenttype cc paymentsubtype moto providerauthcode approved tracenumber 406690 paymentdate 2013 10 11t06 00 00z returndate null estimatedsettledate 2013 10 14t06 00 00z actualsettleddate null canvoiduntil 2013 10 12t02 45 00z failuredata code null description null merchantactiontext null accountid 395560 invoiceid null amount 7 5 isdebit false invoicenumber 123ab purchaseordernumber 77652 orderid ab999 description one time payment new customer latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1608391 lastmodified 2013 10 11t22 34 07z createdon 2013 10 11t22 34 07z void payment successfully authorized payment yet submitted part end day batch voided statuses voidable payments authorized credit card payments refunds authorized yet submitted processing credit card payment status typically voided posted ach payments prior ach batch cut time credit card payments status cannot voided reverseposted credit transaction generated settled ach transaction refunded \\( note status displays refund \\( posted \\) paysimple ui \\) canvoiduntil attribute payment object provides date transaction voided note canvoiduntil field included lite record response credit card transactions typically voided 11pm eastern time canvoiduntil date ach transactions typically voided 5pm eastern time canvoiduntil date void transaction via 4 0 api note request body void call method put uri v4 payment paymentid void response complete payment record status changed voided json customerid 255939 customerfirstname test customerlastname person customercompany abc company referenceid 0 status posted recurringscheduleid 0 paymenttype ach paymentsubtype web providerauthcode approved tracenumber 7cafb8cc 9413 4af5 9e67 d4789fb1499f paymentdate 2013 10 17t06 00 00z returndate null estimatedsettledate 2013 10 22t06 00 00z actualsettleddate null canvoiduntil 2013 10 17t23 00 00z failuredata code null description null merchantactiontext null isdecline false accountid 395564 invoiceid null amount 7 isdebit false invoicenumber null purchaseordernumber null orderid null description null latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1611848 lastmodified 2013 10 17t16 44 07z createdon 2013 10 17t16 44 07z sample voided transaction json method put uri v4 payment 1611848 void response customerid 255939 customerfirstname test customerlastname person customercompany abc company referenceid 0 status voided recurringscheduleid 0 paymenttype ach paymentsubtype web providerauthcode approved tracenumber 7cafb8cc 9413 4af5 9e67 d4789fb1499f paymentdate 2013 10 17t06 00 00z returndate null estimatedsettledate 2013 10 22t06 00 00z actualsettleddate null canvoiduntil 2013 10 17t23 00 00z failuredata code null description null merchantactiontext null isdecline false accountid 395564 invoiceid null amount 7 isdebit false invoicenumber null purchaseordernumber null orderid null description null latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1611848 lastmodified 2013 10 17t17 11 00z createdon 2013 10 17t16 44 07z refund payment settled payment refunded via api using refund call causes system perform following actions change status original transaction reversed \\( shown refunded ui \\) create new credit \\( negative \\) transaction status authorized credit card refunds reverseposted ach refunds \\( shown refund \\( posted \\) ui \\) set value referenceid field original transaction paymentid credit transaction set value referenceid field credit transaction paymentid original transaction refund payment via 4 0 api note request body reverse call method put uri v4 payment paymentid reverse response credit payment object sample ach refund json method put uri v4 payment 1157575 reverse response customerid 219175 customerfirstname test customerlastname guy customercompany referenceid 1157575 paymentid original payment status reverseposted initial status ach refund recurringscheduleid 0 paymenttype ach paymentsubtype ppd providerauthcode approved tracenumber f542193b 3916 443a b817 7522a57e0a47 paymentdate 2013 10 17t06 00 00z returndate null estimatedsettledate 2013 10 17t06 00 00z actualsettleddate null canvoiduntil 2013 10 17t23 00 00z failuredata code null description null merchantactiontext null isdecline false accountid 373191 invoiceid null amount 10 isdebit true indicator credit \\( negative \\) transaction invoicenumber purchaseordernumber orderid null description latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1611883 paymentid newly created credit transaction lastmodified 2013 10 17t17 28 27z createdon 2013 10 17t17 28 27z updated payment object original payment customerid 219175 customerfirstname test customerlastname guy customercompany referenceid 1611883 status reversed sample credit card refund json method put uri v4 payment 1602336 reverse response customerid 255810 customerfirstname lisa customerlastname test customercompany referenceid 1602336 paymentid original payment status authorized initial status credit card refund recurringscheduleid 0 paymenttype cc paymentsubtype moto providerauthcode approved tracenumber 976866 paymentdate 2013 10 17t06 00 00z returndate null estimatedsettledate 2013 10 21t06 00 00z actualsettleddate null canvoiduntil 2013 10 18t02 45 00z failuredata code null description null merchantactiontext null isdecline false accountid 394098 invoiceid null amount 10 isdebit true indicator credit \\( negative \\) transaction invoicenumber null purchaseordernumber null orderid null description test payment api latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1611884 paymentid newly created credit transaction lastmodified 2013 10 17t17 28 27z createdon 2013 10 17t17 28 27z updated payment object original payment customerid 255810 customerfirstname lisa customerlastname test customercompany referenceid 1611884 status reversed retrieve payment records use api retrieve full transaction details single payment object retrieve list payments processed client account payment objects displayed two formats complete lite complete default return lite record applying lite filter get uri request follows v4 payment \\? lite true example provided complete payment object json customerid 255939 customerfirstname test customerlastname person customercompany abc company referenceid 0 status posted recurringscheduleid 0 paymenttype ach paymentsubtype tel providerauthcode approved tracenumber 93e36116 6f29 4a2c 9ab0 b824fcb4f735 paymentdate 2013 10 15t06 00 00z returndate null estimatedsettledate 2013 10 18t06 00 00z actualsettleddate null canvoiduntil 2013 10 15t23 00 00z failuredata code null description null merchantactiontext null isdecline false accountid 395564 invoiceid null amount 9 44 isdebit false invoicenumber null purchaseordernumber null orderid null description null latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1610692 lastmodified 2013 10 15t20 37 29z createdon 2013 10 15t20 37 29z lite payment object json customerfirstname test customerlastname person status posted paymentdate 2013 10 15t06 00 00z amount 9 44 id 1610692 payment object attributes customerid integer system identifier customer record associated payment customerfirstname string first name customer associated payment customerlastname string last name customer associated payment customercompany string company associated payment referenceid integer refunded payment paymentid refund transaction refund transaction payment id refunded payment field 0 cases status integer payment status set system enumeration 0 pending 1 posted 2 settled 3 failed 5 voided 6 reversed 9 reverseposted 10 chargeback 12 authorized 13 returned 15 reversensf 17 refund settled expected responses new payments posted authorized failed note labels correspond paysimple status names ui mapping follows reversed refunded reverseposted refund \\( posted \\) reversensf returned nsf recurringscheduleid integer payment part schedule scheduleid field 0 cases paymenttype integer set system identify transaction type based type account associated accountid used payment enumeration 1 cc \\( credit card \\) 2 ach paymentsubtype integer type credit card ach payment defaults moto credit card payments web ach payments included left null values include swipe cc ppd ccd tel ach providerauthcode string pass field displays authorization response transaction tracenumber string pass field displays processor transaction identifier successful transaction provider error message failed transaction paymentdate string set system date payment processed always current date returndate string set system date ach payment returned field always null new transactions always null credit card transactions estimatedsettledate string date system expects transaction settled based merchant funding time actualsettleddate string date system receives notification transaction actually settled field always null new transactions canvoiduntil string last date transaction may voided failuredata string standardized system information transaction failed 3 components code 4 digit paysimple error code description description error merchantactiontext instructions merchant handle error isdecline true indicates failure due transaction declined false indicates failure due reason note see appendix table containing failure codes associated messages accountid integer accountid specified payment request invoiceid integer invoiceid specified payment request amount number amount specified payment request payment request amount included two decimal places response amount rounded nearest penny isdebit boolean false payment true standalone credit invoicenumber string invoicenumber specified payment request purchaseordernumber string purchaseordernumber specified payment request orderid string orderid specified payment request description string description specified payment request latitude number latitude value specified captured payment request longitude number longitude value specified captured payment request successreceiptoptions string receipt instructions specified payment request null means current system default settings used failurereceiptoptions string failure notification instructions specified payment request null means current system default settings used id integer paymentid number need reference future calls related transaction including void refund view details lastmodified string set system date time transaction record last modified createdon string set system date time transaction record created \\( e time date payment processed \\) retrieve single payment record single payment objects retrieved complete form lite version available retrieve complete payment object via api method get uri v4 payment paymentid query id payment object want retrieve sample request json v4 payment 1611188 sample response json customerid 255939 customerfirstname test customerlastname person customercompany abc company referenceid 0 status posted recurringscheduleid 0 paymenttype ach paymentsubtype tel providerauthcode approved tracenumber ec99cbe9 17fb 43cb bf20 962c417f166d paymentdate 2013 10 16t06 00 00z returndate null estimatedsettledate 2013 10 21t06 00 00z actualsettleddate null canvoiduntil 2013 10 16t23 00 00z failuredata code null description null merchantactiontext null isdecline false accountid 395564 invoiceid null amount 10 isdebit false invoicenumber null purchaseordernumber null orderid null description null latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1611188 lastmodified 2013 10 16t16 56 07z createdon 2013 10 16t16 56 07z retrieve list payments api used return list payments processed particular client account generated list complete format lite format ideal creating summary tables snapshots full list transactions grow quite large unwieldy api uses paging limit number results returned single request default show recent 200 transactions use pagination filters govern number results returned response well response page would like retrieve pagination filters filters used part get uri request return list transactions page set results want return 1 returns first page 2 second etc filter included request defaults 1 pagesize number payment records per page filter included request defaults 200 meta section response echoes request displays total number records page results returned number results returned per page status filter returning list transactions filter list status generate lists include transactions single status group one statuses default return transactions statuses following used part get uri request status filter return list transactions authorized credit card payments refunds authorized yet submitted processing chargeback ach payment disputed customer failed attempted transactions never authorized completed pending initial stage every transaction sent authorization system assigns status waiting authorization response rare cases communication disrupted system gets response transaction remain pending status posted credit card ach payments entered system yet settled initial status authorized unsettled ach transaction refundsettled settled credit card ach refund transaction returned ach payments initially posted ultimately unsuccessful reason non sufficient funds chargeback reversed transaction reversed \\( refunded \\) settled transaction refunded status transaction changes reversed note status displays refunded paysimple ui reversensf ach transaction failed customer insufficient funds account cover payment note status displays returnednsf paysimple ui reverseposted credit transaction generated settled ach transaction refunded refund settles status changes refundsettled note status displays refund \\( posted \\) paysimple ui settled settled ach credit card payment voided voided ach credit card transaction meta section response displays number transactions match status filter well pagination filters applied part query date filters requesting transaction list use date filters return transactions given date range default return transactions regardless date date format uri requests yyyy mm dd filters used part get uri request return list transactions startdate set filter return transactions processed given date enddate set filter return transactions processed given date meta section response displays number transactions match date filter well pagination filters applied part query payment list sorting returning list transactions complete lite form use sorting calls control attribute list sorted whether sort ascending descending order default sort descending paymentid results listing recent transactions first sort instruction comprised two calls first determines field transactions sorted second determines whether sort high low low high secondary sort always ascending paymentid thus one payment value sortby field listed ascending order paymentid effectively means oldest newest calls used part get uri request designate sort parameters sortby attribute sort returndate sort date ach transaction updated returned returned nsf estimatedsettledate sort estimated settle date actualsettleddate sort actual settle date paymentdate sort date transaction entered paymenttype sort type payment groups ach transactions cc transactions paymentsubtype sort payment sub type group ach ccd ach ppd ach tel ach web cc moto cc swipe amount sort transaction amount direction order sort asc ascending sort low high z direction selected null values appear first list desc descending sort high low z direction selected null values appear last list meta section response displays number transactions match date filter well pagination filters applied part query note default pagination filter 200 records per page applied unless alternate pagination filter included uri \\( see filters instructions \\) sample sorting calls sort transaction date list descending order \\( newest oldest \\) method get uri v4 payment \\? sortby paymentdate direction desc list ach transactions credit card transactions method get uri v4 payment \\? sortby paymenttype direction ascending list ach returns first list transactions method get uri v4 payment \\? sortby returndate direction descending list settled transactions first newest oldest method get uri v4 payment \\? sortby actualsettleddate direction desc payment list request examples payment list sorting filtering paging combined create type response require additionally payment lists return either complete lite records though single response cannot contain following representative samples compound payment list requests associated responses note examples purposely use small page sizes order keep response displays readable payment list example 1 default payment list response \\( 200 recent transactions \\) json request method get uri v4 payment response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 4524 page 1 itemsperpage 200 payment list example 2 500 record payment list response \\( 500 recent transactions \\) json request method get uri v4 payment \\? pagesize 500 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 4524 page 1 itemsperpage 500 payment list example 3 default payment list page two response \\( second recent 200 transactions \\) json request method get uri v4 payment \\? page 2 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 4524 page 2 itemsperpage 200 payment list example 4 10 payments per page page 3 response \\( third recent 10 transactions \\) json request method get uri v4 payment \\? page 3 pagesize 10 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 4524 page 3 itemsperpage 10 sample default payment list response page page size filters applied json request method get uri v4 payment \\? page 3 pagesize 2 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 4524 page 2 itemsperpage 2 response customerid 94274 customerfirstname sam customerlastname pell customercompany referenceid 0 status authorized recurringscheduleid 5471 paymenttype cc paymentsubtype moto providerauthcode approved tracenumber 699339 paymentdate 2013 10 16t06 00 00z returndate null estimatedsettledate 2013 10 18t06 00 00z actualsettleddate null canvoiduntil 2013 10 17t02 45 00z failuredata code null description null merchantactiontext null isdecline false accountid 56365 invoiceid null amount 5 isdebit false invoicenumber purchaseordernumber orderid null description latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1611042 lastmodified 2013 10 16t07 30 42z createdon 2013 10 16t07 30 42z customerid 180379 customerfirstname sam customerlastname pell customercompany referenceid 0 status authorized recurringscheduleid 92298 paymenttype cc paymentsubtype moto providerauthcode approved tracenumber 936374 paymentdate 2013 10 16t06 00 00z returndate null estimatedsettledate 2013 10 18t06 00 00z actualsettleddate null canvoiduntil 2013 10 17t02 45 00z failuredata code null description null merchantactiontext null isdecline false accountid 285900 invoiceid null amount 10 isdebit false invoicenumber purchaseordernumber orderid null description latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1610854 lastmodified 2013 10 16t07 30 23z createdon 2013 10 16t07 30 23z sample lite payment list response page page size filters applied json request method get uri v4 payment \\? page 3 pagesize 2 lite true response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 4524 page 2 itemsperpage 2 response customerfirstname sam customerlastname pell status authorized paymentdate 2013 10 16t06 00 00z amount 5 id 1611042 customerfirstname sam customerlastname pell status authorized paymentdate 2013 10 16t06 00 00z amount 10 id 1610854 date filter example 1 default payment list response json request method get uri v4 payment response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 4524 page 1 itemsperpage 200 date filter example 2 transactions october 1 2013 json request method get uri v4 payment \\? startdate 2013 10 01 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 152 page 1 itemsperpage 200 date filter example 3 transactions january 1 2013 json request method get uri v4 payment \\? enddate 2013 01 01 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 2205 page 1 itemsperpage 200 date filter example 4 transactions january 1 2013 october 1 2013 json request method get uri v4 payment \\? startdate startdate 2013 01 01 enddate 2013 10 01 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 2187 page 1 itemsperpage 200 sample lite payment list response start end date filters applied json request method get uri v4 payment \\? startdate 2013 10 01 enddate 2013 10 05 lite true response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 3 page 1 itemsperpage 200 response customerfirstname lisa customerlastname test status settled paymentdate 2013 10 01t06 00 00z amount 10 id 1602336 customerfirstname lisa customerlastname test status settled paymentdate 2013 10 01t06 00 00z amount 20 id 1602283 customerfirstname lisa customerlastname test status settled paymentdate 2013 10 01t06 00 00z amount 10 id 1602282 status filter example 1 default payment list response including statuses json request method get uri v4 payment response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 4524 page 1 itemsperpage 200 status filter example 2 authorized payments json request method get uri v4 payment \\? status authorized response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 6 page 1 itemsperpage 200 status filter example 3 returned ach transactions \\( status returned reversensf \\) json request method get uri v4 payment \\? status returned reversensf response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 4 page 1 itemsperpage 200 status filter example 4 transactions involved refunds \\( status reversed reverseposted refundsettled \\) json request method get uri v4 payment \\? status reversed reverseposted refundsettled response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 146 page 1 itemsperpage 200 sample lite payment list response failed status filter applied json request method get uri v4 payment \\? status failed lite true response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 3 page 1 itemsperpage 200 response customerfirstname test customerlastname person status failed paymentdate 2013 10 15t06 00 00z amount 9 44 id 1610692 customerfirstname test customerlastname person status failed paymentdate 2013 10 15t06 00 00z amount 8 44 id 1610691 customerfirstname test customerlastname person status failed paymentdate 2013 10 15t06 00 00z amount 4 44 id 1610684 customerfirstname test customerlastname person status failed paymentdate 2013 10 11t06 00 00z amount 7 25 id 1608327 settled payments processed october 2013 sorted amount descending order lite record 2 payment records per page show page 1 json request method get uri v4 payment \\? status settled startdate 2013 10 01 enddate 2013 10 31 sortby amount direction desc lite true page 1 pagesize 2 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 22 page 1 itemsperpage 2 response customerfirstname test customerlastname person status settled paymentdate 2013 10 11t06 00 00z amount 48 id 1608315 customerfirstname test customerlastname person status settled paymentdate 2013 10 11t06 00 00z amount 48 id 1608316 payments processed q1 2013 sorted settle date oldest newest 2 payment records per page show page 2 json request method get uri v4 payment \\? startdate 2013 01 01 enddate 2013 03 31 sortby actualsettleddate direction asc page 2 pagesize 2 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 2325 page 2 itemsperpage 2 response customerid 94659 customerfirstname rose customerlastname tyler customercompany referenceid 0 status settled recurringscheduleid 4698 paymenttype cc paymentsubtype moto providerauthcode approved tracenumber tas110 paymentdate 2013 01 22t07 00 00z returndate null estimatedsettledate 2013 01 24t07 00 00z actualsettleddate null canvoiduntil 2013 01 23t03 45 00z failuredata code null description null merchantactiontext null isdecline false accountid 298301 invoiceid null amount 120 isdebit false invoicenumber purchaseordernumber orderid null description latitude null longitude null successreceiptoptions null failurereceiptoptions null id 935887 lastmodified 2013 01 23t00 07 28z createdon 2013 01 22t15 51 44z customerid 180379 customerfirstname sam customerlastname pell customercompany referenceid 0 status settled recurringscheduleid 92301 paymenttype cc paymentsubtype moto providerauthcode approved tracenumber tas399 paymentdate 2013 01 23t07 00 00z returndate null estimatedsettledate 2013 01 25t07 00 00z actualsettleddate null canvoiduntil 2013 01 24t03 45 00z failuredata code null description null merchantactiontext null isdecline false accountid 285900 invoiceid null amount 10 isdebit false invoicenumber purchaseordernumber orderid null description latitude null longitude null successreceiptoptions null failurereceiptoptions null id 937823 lastmodified 2013 01 23t18 31 05z createdon 2013 01 23t15 33 55z transactions entered current date sorted ascending expected settle date 2 records per page show page 3 json request method get uri v4 payment \\? startdate 2013 10 17 enddate 2013 10 17 sortby estimatedsettledate direction asc page 3 pagesize 2 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 6 page 3 itemsperpage 2 response customerid 94274 customerfirstname sam customerlastname pell customercompany referenceid 0 status authorized recurringscheduleid 6063 paymenttype cc paymentsubtype moto providerauthcode approved tracenumber 525632 paymentdate 2013 10 17t06 00 00z returndate null estimatedsettledate 2013 10 21t06 00 00z actualsettleddate null canvoiduntil 2013 10 18t02 45 00z failuredata code null description null merchantactiontext null isdecline false accountid 54576 invoiceid null amount 100 isdebit false invoicenumber purchaseordernumber orderid null description latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1611522 lastmodified 2013 10 17t07 30 31z createdon 2013 10 17t07 30 31z customerid 94274 customerfirstname sam customerlastname pell customercompany referenceid 0 status authorized recurringscheduleid 5471 paymenttype cc paymentsubtype moto providerauthcode approved tracenumber 681924 paymentdate 2013 10 17t06 00 00z returndate null estimatedsettledate 2013 10 22t06 00 00z actualsettleddate null canvoiduntil 2013 10 18t02 45 00z failuredata code null description null merchantactiontext null isdecline false accountid 56365 invoiceid null amount 5 isdebit false invoicenumber purchaseordernumber orderid null description latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1611594 lastmodified 2013 10 17t07 30 39z createdon 2013 10 17t07 30 39z payment schedules payment schedule basics payment schedule basics two types payment schedules recurring payments schedules configured charge set amount set period time indefinitely payment plans schedule configured discharge set amount via set number payments uses distinct schedule object follows recurring payment schedule recurringpayment payment plan schedule paymentplan creating new schedule certain use correct object type generating lists schedules use get v4 paymentschedule route return list schedules return abbreviated records include schedule fields want list include fields need separate calls schedule type way use single call return complete objects types also note currently way configure settings new schedule notification emails transaction receipt emails transaction failure emails pre notification emails schedules entered via api schedules created via api use default email configuration settings client account following sections provide basic examples creating recurring payment payment plan schedules recurring payment schedule basics know accountid credit card bank account want charge entering recurring payment schedule via 4 0 api simple entering payment amount start date frequency along accountid create new recurring payment object via api method post uri v4 recurringpayment request recurring payment object attributes accountid amount startdate executionfrequencytype executionfrequencyparameter required key recurring payment object response attributes id integer scheduleid number need reference future calls related schedule including pause suspend resume view details schedulestatus integer schedule status set system enumeration 1 active 3 expired 4 suspended expected response new schedule active paymentamount number amount scheduled payment specified recurring payment request enter number include enter integer decimal use 2 decimal places system round nearest penny e entering 23 129 result paymentamount 23 13 startdate string date schedule start running necessarily date generate first payment specified recurring payment request date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) note make schedule management easier strongly recommended set schedule startdate first day generate payment nextscheduledate string next date schedule generate payment based schedule frequency date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) note configured schedule start current day startdate current date nextscheduledate future date second scheduled payment schedule configured start future date first scheduled payment startdate nextschduledate future date assumes starting valid accountid assumes existing customer object existing payment account objects attached many instances case following sections cover complete process entering recurring payment schedules completely new customers existing customers existing payment accounts existing customers new payment accounts within section relevant object attributes fully defined sample basic new recurring payment object request json paymentamount 12 accountid 395560 startdate 2013 10 28 executionfrequencytype 4 \\( enumeration first month \\) sample new recurring payment object response json customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 2013 11 01t06 00 00z pauseuntildate null firstpaymentdone false dateoflastpaymentmade null totalamountpaid 0 numberofpaymentsmade 0 enddate null paymentamount 12 paymentsubtype moto accountid 395560 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null startdate 2013 10 28t06 00 00z schedulestatus active executionfrequencytype firstofmonth executionfrequencyparameter 1 description null id 118169 lastmodified 2013 10 28t21 42 19 5051617z createdon 2013 10 28t21 42 19 5051617z payment plan schedule basics know accountid credit card bank account want charge entering payment plan schedule via 4 0 api simple entering schedule amount start date number payments frequency along accountid create new payment plan object via api method post uri v4 paymentplan request payment object attributes accountid totaldueamount totalnumberofpayments startdate executionfrequencytype executionfrequencyparameter required key payment plan object response attributes id integer scheduleid number need reference future calls related schedule including pause suspend resume view details schedulestatus integer schedule status set system enumeration 1 active 3 expired 4 suspended expected response new schedule active paymentamount number system calculated amount scheduled payment paymentamount \\( totalamountdue customfirstpaymentamount \\) numberofpayments startdate string date schedule start running necessarily date generate first payment date format yyyy mm dd nextscheduledate string next date schedule generate payment based schedule frequency date format yyyy mm dd note configured schedule start current day startdate current date nextscheduledate future date schedule configured start future date startdate nextschduledatewill future date assumes starting valid accountid assumes existing customer object existing payment account objects attached many instances case following sections cover complete process entering payment plan schedules completely new customers existing customers existing payment accounts existing customers new payment accounts within section relevant object attributes fully defined sample basic new payment plan object request json totaldueamount 100 totalnumberofpayments 5 accountid 395560 startdate 2013 10 28 executionfrequencytype 6 \\( enumeration last month \\) sample new payment plan object response json customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 2013 10 31t06 00 00z balanceremaining 0 numberofpaymentsremaining 5 pauseuntildate null paymentamount 20 firstpaymentdone false dateoflastpaymentmade null totalamountpaid 0 numberofpaymentsmade 0 totaldueamount 100 totalnumberofpayments 5 paymentsubtype moto accountid 395560 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null startdate 2013 10 28t06 00 00z schedulestatus active executionfrequencytype lastofmonth executionfrequencyparameter 0 description null id 118171 lastmodified 2013 10 28t21 59 00 280007z createdon 2013 10 28t21 59 00 280007z entering recurring payment schedule new customer entering recurring payment schedule new customer using api accomplished using three sequential steps creating new customer object adding payment account object customer object created step 1 creating recurring payment object using payment account object created step 2 attributes object types defined request response information associated utilizing create customers enter schedules customer object create new customer object via api method post uri v4 customer request customer object attributes response attribute needed customerid customer object attributes required attributes firstname string 150 characters max lastname string 150 characters max shippingsameasbilling boolean set true indicate separate shipping address even including billing address set false require shippingaddress fields optional attributes billingaddress object billing address required included attributes required except streetaddress2 statecode country 10 characters type valid zipcode streetaddress1 string 250 characters max streetaddress2 string optional 250 characters max city string 100 characters max statecode string valid 2 character state territory code us canada zipcode string 10 characters country string optional defaults us max 3 characters shippingaddress object required shippingsameasbilling set true included attributes required except streetaddress2 statecode country 10 characters type valid zipcode streetaddress1 string 250 characters max streetaddress2 string optional 250 characters max city string 100 characters max statecode string valid 2 character state territory code us canada zipcode string 10 characters country string optional defaults us max 3 characters company string 50 characters max customeraccount string 28 characters max non system account number assign phone string 10 characters max enter numeric string include parenthesis dashes altphone string 10 characters max enter numeric string include parenthesis dashes mobilephone string 10 characters max enter numeric string include parenthesis dashes fax string 10 characters max enter numeric string include parenthesis dashes email string 100 characters max must valid email address altemail string 100 characters max must valid email address website string 100 characters max must url format notes string 2048 characters max open text field system attributes fields required components customer object populated system need include requests id integer defaults 0 new requests populated customerid response lastmodified string set system request data disregarded createdon string set system request data disregarded sample new customer object request json post v4 customer billingaddress streetaddress1 123 st streetaddress2 null city denver statecode co zipcode 80202 country null shippingsameasbilling true shippingaddress null company abc company notes note abc company customeraccount tp 117 firstname test lastname person email testperson abcco com phone 8005551212 payment account objects credit card account object attributes required attributes customerid integer system identifier customer record card added id attribute customer object created previous step creditcardnumber string 15 16 digits expirationdate string valid date format mm yyyy issuer integer enumeration 12 visa 13 master \\( mastercard \\) 14 amex \\( american express \\) 15 discover isdefault boolean enter true set card default credit card account customer record otherwise enter false cards attached customer record field default true regardless entry optional attributes billingzipcode string max 10 characters left blank system use billing zip code \\( zipcode attribute customer object \\) processing payment billingzipcode attribute null 10 characters type valid system attributes fields required components credit card account object populated system need include requests id integer defaults 0 new requests populated accountid response lastmodified string set system request data disregarded createdon string set system request data disregarded sample new credit card account object request json creditcardnumber 4111111111111111 expirationdate 12 2015 issuer 12 billingzipcode 80202 customerid 255939 isdefault false id 0 lastmodified 0001 01 01t07 00 00z createdon 0001 01 01t07 00 00z sample new credit card account object response json creditcardnumber 1111 expirationdate 12 2015 issuer visa billingzipcode 80202 customerid 255939 isdefault true id 395560 lastmodified 2013 10 11t17 41 36 6661404z createdon 2013 10 11t17 41 36 6661404z ach account object attributes required attributes customerid integer system identifier customer record card added id attribute customer object created previous step routingnumber string 9 digit bank routing number accountnumber string min 4 digits max 100 digits bank account number bankname string 100 characters max financial institution name ischeckingaccount boolean enter true indicate checking account false indicate savings account general ledger accounts supported isdefault boolean enter true set account default ach account customer record otherwise enter false ach accounts attached customer record field default true regardless entry system attributes fields required components ach account object populated system need include requests id integer defaults 0 new requests populated accountid response lastmodified string set system request data disregarded createdon string set system request data disregarded sample new ach account object request json ischeckingaccount true routingnumber 072000326 accountnumber 751666666 bankname test bank customerid 255939 isdefault true id 0 lastmodified 0001 01 01t07 00 00z createdon 0001 01 01t07 00 00z sample new ach account object response json ischeckingaccount true routingnumber 072000326 accountnumber 6666 bankname test bank customerid 255939 isdefault true id 395564 lastmodified 2013 10 11t17 54 56 7441402z createdon 2013 10 11t17 54 56 7441402z recurring payment object section covers entering recurring payment schedule note system determines type payment \\( ach credit card \\) based account type accountid provided create new recurring payment object via api method post uri v4 recurringpayment request recurring payment object attributes recurring payment object request attributes required attributes accountid integer system identifier credit card account ach account used schedule id attribute credit card object ach account object created previous step customer object associated accountid associated schedule paymentamount number scheduled payment amount enter number include enter integer decimal use 2 decimal places system round nearest penny e entering 3 129 result paymentamount 3 13 startdate string date schedule start running necessarily date generate first payment date format yyyy mm dd note make schedule management easier strongly recommended set schedule startdate first day generate payment executionfrequencytype integer primary frequency execute scheduled payments enumeration 1 daily 2 weekly 3 biweekley 4 first month 5 specific day month 6 last month 7 quarterly 8 semi annually 9 annually optional attributes p enddate string date schedule stop generating payments included left null schedule default running manually disabled date format yyyy mm dd paymentsubtype string field defaults moto credit card payments web ach payments included left null enumeration \\( ach \\) 4 web 5 tel 6 ppd 7 ccd enumeration \\( cc \\) 10 swipe 11 moto invoicenumber string 50 characters max invoice number attached schedule number provided system invoice number associated system invoiceid attached schedule scheduled payments applied system invoice note ensure collect amount due system invoice better use payment plan schedule \\( instead recurring billing schedule \\) discharge system invoice note invoice creation management available via api orderid string 50 characters max back end transaction identifier included ui firstpaymentamount number custom payment amount executed prior start schedule enter number include enter integer decimal use 2 decimal places system round nearest penny e entering 23 129 result firstpaymentamount 23 13 firstpaymentdate string date custom first payment processed current date future date must prior schedule startdate future date used edited prior custom first payment generated custom first payment actually generated field becomes read date format yyyy mm dd executionfrequencyparameter integer used specify day month specific day month schedule specify day week weekly bi weekly schedule enumeration \\( weekly bi weekly \\) 1 sunday 2 monday 3 tuesday 4 wednesday 5 thursday 6 friday 7 saturday monthly enter integer 1 31 note avoid confusion want bill 30th 31st use last day month frequency type instead specific day month frequency type description string 2048 characters max system attributes fields required components recurring payment object populated system need include requests id integer defaults 0 new requests populated scheduleid response lastmodified string set system request data disregarded createdon string set system request data disregarded recurring payment object response attributes key attributes id integer scheduleid number need reference future calls related schedule including pause suspend resume view details schedulestatus integer schedule status set system enumeration 1 active 3 expired 4 suspended expected response new schedule active paymentamount number amount scheduled payment specified recurring payment request startdate string date schedule start running necessarily date generate first payment specified recurring payment request date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) nextscheduledate string next date schedule generate payment based schedule frequency date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) note configured schedule start current day startdate current date nextscheduledate future date second scheduled payment schedule configured start future date first scheduled payment startdate nextschduledate future date attributes customerid integer system identifier customer record associated payment customerfirstname string first name customer associated payment customerlastname string last name customer associated payment customercompany string company associated payment pauseuntildate string date paused schedule set resume schedule status suspended date automatically resume schedule status active expired field value recent date schedule resumed schedules never paused value null note pauseuntildate field set null paused schedule resumes field always contain date schedule last activated firstpaymentdone boolean payment \\( either custom first payment first scheduled payment \\) generated schedule attribute true schedule longer deleted payment activity generated schedule attribute false read system field dateoflastpaymentmade string read system field indicating last date scheduled payment \\( custom first payment \\) generated schedule schedule yet generated payment field null totalamountpaid number read system field indicating sum payments including custom first payment generated schedule numberofpaymentsmade integer read system field indicating number regular payments \\( including custom first payment \\) generated schedule enddate string date specified recurring payment request schedule stop generating payments \\( status changes expired \\) schedule programmed run indefinitely field null date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) paymentsubtype integer type credit card ach payment defaults moto credit card payments web ach payments included left null values include swipe cc ppd ccd tel ach accountid integer system identifier credit card account ach account used schedule specified recurring payment request invoicenumber string invoicenumber specified recurring payment request orderid string orderid specified recurring payment request firstpaymentamount number custom payment amount executed prior start schedule value specified recurring payment request rounded 2 decimal places displayed custom first payment configured field null firstpaymentdate string date custom first payment processed value specified recurring payment request custom first payment configured field null date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) executionfrequencytype integer primary frequency execute scheduled payments specified recurring payment request \\( response displays text integer \\) enumeration 1 daily 2 weekly 3 biweekley 4 first month 5 specific day month 6 last month 7 quarterly 8 semi annually 9 annually executionfrequencyparameter integer day month specific day month schedule day week weekly bi weekly schedule specified recurring payment request frequency types field 0 enumeration \\( weekly bi weekly \\) 1 sunday 2 monday 3 tuesday 4 wednesday 5 thursday 6 friday 7 saturday monthly integer 1 31 description string description specified recurring payment request lastmodified string set system date time schedule object last modified createdon string set system date time schedule object created sample new recurring payment object requests json simple accountid 395564 amount 21 startdate 2013 11 01 executionfrequencytype 4 full enddate 2014 10 31 paymentamount 21 paymentsubtype ppd accountid 395564 invoicenumber 123a orderid null firstpaymentamount 25 firstpaymentdate 2013 10 29 startdate 2013 11 04 executionfrequencytype 5 executionfrequencyparameter 4 description recurring payment schedule entered via api sample new recurring payment object response json customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 2013 11 04t07 00 00z pauseuntildate null firstpaymentdone true dateoflastpaymentmade null totalamountpaid 25 numberofpaymentsmade 0 enddate 2014 10 31t06 00 00z paymentamount 21 paymentsubtype ppd accountid 395564 invoicenumber 123a orderid null firstpaymentamount 25 firstpaymentdate 2013 10 29t06 00 00z startdate 2013 11 04t07 00 00z schedulestatus active executionfrequencytype specificdayofmonth executionfrequencyparameter 4 description recurring payment schedule entered via api id 118215 lastmodified 2013 10 29t16 49 21 7538167z createdon 2013 10 29t16 49 21 7538167z entering recurring payment schedule existing customer entering recurring payment schedule existing customer using api accomplished using three sequential steps retrieve customerid retrieve existing accountid create new payment account object create recurring payment object using payment account created retrieved step 2 maintain database customerids associated accountids complete steps 1 2 system utilize paysimple api creating recurring payment schedule \\( step 3 \\) maintain database customerid begin step 2 attributes needed object types defined request response information associated utilizing enter recurring payment schedules existing customers using new existing payment accounts retrieve customerid know customerid customer want charge \\( example stored database \\) skip step need retrieve customerid attribute customer object want charge need search customer record obtain search via api method get uri v4 globalsearch \\? query value query customer name company name response attribute needed originid note search originid customer object equal customerid sample customer search request json uri v4 globalsearch \\? query abc company sample customer search response json results originkey cust originid 255939 description customer test person abc company ranking 176 create accountid entering recurring payment schedule existing customer option charging default ach cc account charging non default ach cc account entering new ach cc account part schedule entry process processes associated objects attributes described following sections using default credit card payment account use customerid obtained step 1 \\( saved database \\) retrieve default credit card accountid method get uri v4 customer customerid defaultcreditcard response attribute needed accountid credit card object response attributes creditcardnumber string last four digits card number note security purposes full account numbers never displayed responses expirationdate string expiration date format mm yyyy issuer integer enumeration 12 visa 13 master \\( mastercard \\) 14 amex \\( american express \\) 15 discover billingzipcode string zip code attached credit card saved payment account record null zipcode attribute customer object used processing payment customerid integer system identifier customer record card attached customerid attribute entered uri isdefault boolean true indicate indeed retrieved default credit card id integer accountid need next step lastmodified string date credit card account object last changed createdon string date credit card account object created using default ach payment account use customerid obtained step 1 \\( saved database \\) retrieve default ach accountid method get uri v4 customer customerid defaultach response attribute needed accountid ach object attributes ischeckingaccount boolean true indicates checking account false indicates savings account general ledger accounts supported routingnumber string 9 digit bank routing number accountnumber string last four digits bank account number note security purposes full account numbers never displayed responses bankname string financial institution name customerid integer system identifier customer record card attached customerid attribute entered uri isdefault boolean true indicate indeed retrieved default ach account id integer accountid need next step lastmodified string date ach account object last changed createdon string date ach account object created using existing credit card payment account use customerid obtained step 1 \\( saved database \\) retrieve credit card account objects associated customer record copy accountid one want use schedule method get uri v4 customer customerid creditcardaccounts response attribute needed accountid account want charge account list credit card object response attributes creditcardnumber string last four digits card number note security purposes full account numbers never displayed responses expirationdate string expiration date format mm yyyy issuer integer enumeration 12 visa 13 master \\( mastercard \\) 14 amex \\( american express \\) 15 discover billingzipcode string zip code attached credit card saved payment account record null zipcode attribute customer object used processing payment customerid integer system identifier customer record card attached customerid attribute entered uri isdefault boolean true indicate indeed retrieved default credit card id integer accountid need next step lastmodified string date credit card account object last changed createdon string date credit card account object created need determine returned credit cards want use schedule retrieve accountid next step alternate route obtain existing credit card accountid want select one saved accounts treat credit cards new \\( follow steps using new credit card account section \\) system recognize duplicate \\( update expiration date necessary \\) credit card object response contain existing accountid using existing ach payment account use customerid obtained step 1 \\( saved database \\) retrieve ach account objects associated customer record copy accountid one want use schedule method get uri v4 customer customerid achaccounts response attribute needed accountid account want charge account list ach object response attributes ischeckingaccount boolean true indicates checking account false indicates savings account general ledger accounts supported routingnumber string 9 digit bank routing number accountnumber string last four digits bank account number note security purposes full account numbers never displayed responses bankname string financial institution name customerid integer system identifier customer record card attached customerid attribute entered uri isdefault boolean true indicate indeed retrieved default ach account id integer accountid need next step lastmodified string date ach account object last changed createdon string date ach account object created need determine returned bank accounts want use schedule retrieve accountid next step using new credit card account use customerid obtained step 1 \\( saved database \\) attach new credit card payment account object via api note accountid new credit card account method post uri v4 account creditcard request credit card attributes response attribute needed account id required credit card account object attributes customerid integer system identifier customer record card added customerid retrieved database first step creditcardnumber string 15 16 digits expirationdate string valid date format mm yyyy issuer integer enumeration 12 visa 13 master \\( mastercard \\) 14 amex \\( american express \\) 15 discover isdefault boolean enter true set card default credit card account customer record otherwise enter false cards attached customer record field default true regardless entry optional credit card account object request attributes billingzipcode string max 10 characters left blank system use billing zip code \\( zipcode attribute customer object \\) processing payment billingzipcode attribute null 10 characters type valid system credit card account object attributes fields required components credit card account object populated system need include requests id integer defaults 0 new requests populated accountid response lastmodified string set system request data disregarded createdon string set system request data disregarded using new ach account use customerid obtained step 1 \\( saved database \\) attach new ach payment account object via api note accountid new bank account method post uri v4 account ach request ach account attributes response attribute needed accountid required ach account object attributes customerid integer system identifier customer record card added customerid retrieved database first step routingnumber string 9 digit bank routing number accountnumber string min 4 digits max 100 digits bank account number bankname string 100 characters max financial institution name ischeckingaccount boolean enter true indicate checking account false indicate savings account general ledger accounts supported isdefault boolean enter true set account default ach account customer record otherwise enter false ach accounts attached customer record field default true regardless entry system ach account object attributes fields required components ach account object populated system need include requests id integer defaults 0 new requests populated accountid response lastmodified string set system request data disregarded createdon string set system request data disregarded sample default credit card request json uri v4 customer 255939 defaultcreditcard creditcardnumber 1111 expirationdate 12 2015 issuer visa billingzipcode 80202 customerid 255939 isdefault true id 395560 lastmodified 2013 10 11t17 41 36z createdon 2013 10 11t17 41 36z sample new credit card account object request json creditcardnumber 4111111111111111 expirationdate 12 2015 issuer 12 billingzipcode 80202 customerid 255939 isdefault false id 0 lastmodified 0001 01 01t07 00 00z createdon 0001 01 01t07 00 00z sample new credit card account object response json creditcardnumber 1111 expirationdate 12 2015 issuer visa billingzipcode 80202 customerid 255939 isdefault true id 395560 lastmodified 2013 10 11t17 41 36 6661404z createdon 2013 10 11t17 41 36 6661404z sample default ach request json ischeckingaccount true routingnumber 072000326 accountnumber 6666 bankname test bank customerid 255939 isdefault true id 395564 lastmodified 2013 10 11t17 54 56z createdon 2013 10 11t17 54 56z sample credit card accounts request json uri v4 customer 255939 creditcardaccounts sample credit card accounts response json creditcardnumber 1111 expirationdate 12 2015 issuer visa billingzipcode 80202 customerid 255939 isdefault true id 395560 lastmodified 2013 10 11t17 41 36z createdon 2013 10 11t17 41 36z creditcardnumber 5454 expirationdate 08 2018 issuer master billingzipcode 80202 customerid 255939 isdefault false id 396036 lastmodified 2013 10 15t18 33 25z createdon 2013 10 15t18 33 25z sample ach accounts request json uri v4 customer 255939 achaccounts sample ach accounts response json ischeckingaccount true routingnumber 072000326 accountnumber 6666 bankname test bank customerid 255939 isdefault true id 395564 lastmodified 2013 10 11t17 54 56z createdon 2013 10 11t17 54 56z ischeckingaccount true routingnumber 072000326 accountnumber 8888 bankname bank two customerid 255939 isdefault false id 396037 lastmodified 2013 10 15t18 33 56z createdon 2013 10 15t18 33 56z sample new ach account object request json ischeckingaccount true routingnumber 072000326 accountnumber 751666666 bankname test bank customerid 255939 isdefault true id 0 lastmodified 0001 01 01t07 00 00z createdon 0001 01 01t07 00 00z sample new ach account object response json ischeckingaccount true routingnumber 072000326 accountnumber 751666666 bankname test bank customerid 255939 isdefault true id 0 lastmodified 0001 01 01t07 00 00z createdon 0001 01 01t07 00 00z create new recurring payment object entering payment plan schedule new customer entering payment plan schedule new customer using api accomplished using three sequential steps creating new customer object adding payment account object customer object created step 1 creating payment plan object using payment account object created step 2 attributes object types defined request response information associated utilizing create customers enter schedules customer object create new customer object via api method post uri v4 customer request customer object attributes response attribute needed customerid customer object attributes required attributes firstname string 150 characters max lastname string 150 characters max shippingsameasbilling boolean set true indicate separate shipping address even including billing address set false require shippingaddress fields optional attributes billingaddress object billing address required included attributes required except streetaddress2 statecode country 10 characters type valid zipcode streetaddress1 string 250 characters max streetaddress2 string optional 250 characters max city string 100 characters max statecode string valid 2 character state territory code us canada zipcode string 10 characters country string optional defaults us max 3 characters shippingaddress object required shippingsameasbilling set true included attributes required except streetaddress2 statecode country 10 characters type valid zipcode streetaddress1 string 250 characters max streetaddress2 string optional 250 characters max city string 100 characters max statecode string valid 2 character state territory code us canada zipcode string 10 characters country string optional defaults us max 3 characters company string 50 characters max customeraccount string 28 characters max non system account number assign phone string 10 characters max enter numeric string include parenthesis dashes altphone string 10 characters max enter numeric string include parenthesis dashes mobilephone string 10 characters max enter numeric string include parenthesis dashes fax string 10 characters max enter numeric string include parenthesis dashes email string 100 characters max must valid email address altemail string 100 characters max must valid email address website string 100 characters max must url format notes string 2048 characters max open text field system attributes fields required components customer object populated system need include requests id integer defaults 0 new requests populated customerid response lastmodified string set system request data disregarded createdon string set system request data disregarded sample new customer object request json post v4 customer billingaddress streetaddress1 123 st streetaddress2 null city denver statecode co zipcode 80202 country null shippingsameasbilling true shippingaddress null company abc company notes note abc company customeraccount tp 117 firstname test lastname person email testperson abcco com phone 8005551212 sample new customer object response json response altemail null altphone null mobilephone null fax null website null billingaddress streetaddress1 123 st streetaddress2 null city denver statecode co zipcode 80202 country null shippingsameasbilling true shippingaddress streetaddress1 123 st streetaddress2 null city denver statecode co zipcode 80202 country null company abc company notes note abc company customeraccount tp 117 firstname test lastname person email testperson abcco com phone 8005551212 id 255939 lastmodified 2013 10 01t19 16 38 5061103z createdon 2013 10 01t19 16 38 5061103z payment account objects create new payment account object via api method post uri v4 account creditcard v4 account ach request credit card attributes ach attributes response attribute needed account id credit card account object attributes required attributes customerid integer system identifier customer record card added id attribute customer object created previous step creditcardnumber string 15 16 digits expirationdate string valid date format mm yyyy issuer integer enumeration 12 visa 13 master \\( mastercard \\) 14 amex \\( american express \\) 15 discover isdefault boolean enter true set card default credit card account customer record otherwise enter false cards attached customer record field default true regardless entry optional attributes billingzipcode string max 10 characters left blank system use billing zip code \\( zipcode attribute customer object \\) processing payment billingzipcode attribute null 10 characters type valid system attributes fields required components credit card account object populated system need include requests id integer defaults 0 new requests populated accountid response lastmodified string set system request data disregarded createdon string set system request data disregarded ach account object attributes required attributes customerid integer system identifier customer record card added id attribute customer object created previous step routingnumber string 9 digit bank routing number accountnumber string min 4 digits max 100 digits bank account number bankname string 100 characters max financial institution name ischeckingaccount boolean enter true indicate checking account false indicate savings account general ledger accounts supported isdefault boolean enter true set account default ach account customer record otherwise enter false ach accounts attached customer record field default true regardless entry system attributes fields required components ach account object populated system need include requests id integer defaults 0 new requests populated accountid response lastmodified string set system request data disregarded createdon string set system request data disregarded sample new credit card account object request json creditcardnumber 4111111111111111 expirationdate 12 2015 issuer 12 billingzipcode 80202 customerid 255939 isdefault false id 0 lastmodified 0001 01 01t07 00 00z createdon 0001 01 01t07 00 00z sample new credit card account object response json creditcardnumber 1111 expirationdate 12 2015 issuer visa billingzipcode 80202 customerid 255939 isdefault true id 395560 lastmodified 2013 10 11t17 41 36 6661404z createdon 2013 10 11t17 41 36 6661404z sample new ach account object request json ischeckingaccount true routingnumber 072000326 accountnumber 751666666 bankname test bank customerid 255939 isdefault true id 0 lastmodified 0001 01 01t07 00 00z createdon 0001 01 01t07 00 00z sample new ach account object response json ischeckingaccount true routingnumber 072000326 accountnumber 6666 bankname test bank customerid 255939 isdefault true id 395564 lastmodified 2013 10 11t17 54 56 7441402z createdon 2013 10 11t17 54 56 7441402z payment plan object section covers entering payment plan schedule note system determines type payment \\( ach credit card \\) based account type accountid provided create new payment plan object via api method post uri v4 paymentplan request payment plan object attributes payment plan object request attributes required attributes accountid integer system identifier credit card account ach account used schedule id attribute credit card object ach account object created previous step customer object associated accountid associated schedule totaldueamount number total amount collected schedule enter number include enter integer decimal use 2 decimal places system round nearest penny e entering 300 129 result totaldueamount 300 13 totalnumberofpayments integer total number schedule payments enter integer 1 99 startdate string date schedule start running necessarily date generate first payment date format yyyy mm dd date format yyyy mm dd note make schedule management easier strongly recommended set schedule startdate first day generate payment executionfrequencytype integer primary frequency execute scheduled payments enumeration 1 daily 2 weekly 3 biweekley 4 first month 5 specific day month 6 last month 7 quarterly 8 semi annually 9 annually optional attributes paymentsubtype string field defaults moto credit card payments web ach payments included left null enumeration \\( ach \\) 4 web 5 tel 6 ppd 7 ccd enumeration \\( cc \\) 10 swipe 11 moto invoicenumber string 50 characters max invoice number attached schedule number provided system invoice number associated system invoiceid attached schedule scheduled payments applied system invoice note invoice creation management available via api orderid string 50 characters max back end transaction identifier included ui firstpaymentamount number custom payment amount executed prior start schedule enter number include enter integer decimal use 2 decimal places system round nearest penny e entering 23 129 result firstpaymentamount 23 13 amount subtracted totaldueamount system calculates schedule paymentamount firstpaymentdate string date custom first payment processed current date future date must prior schedule startdate future date used edited prior custom first payment generated custom first payment actually generated field becomes read date format yyyy mm dd executionfrequencyparameter integer used specify day month specific day month schedule specify day week weekly bi weekly schedule enumeration \\( weekly bi weekly \\) 1 sunday 2 monday 3 tuesday 4 wednesday 5 thursday 6 friday 7 saturday monthly enter integer 1 31 note avoid confusion want bill 30th 31st use last day month frequency type instead specific day month frequency type description string 2048 characters max system attributes fields required components recurring payment object populated system need include requests id integer defaults 0 new requests populated scheduleid response lastmodified string set system request data disregarded createdon string set system request data disregarded payment plan object response attributes key attributes id integer scheduleid number need reference future calls related schedule including pause suspend resume view details schedulestatus integer schedule status set system enumeration 1 active 3 expired 4 suspended expected response new schedule active paymentamount number system calculated amount scheduled payment rounded nearest penny paymentamount \\( totalamountdue customfirstpaymentamount \\) numberofpayments startdate string date schedule start running necessarily date generate first payment specified payment plan request date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) nextscheduledate string next date schedule generate payment based schedule frequency date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) note configured schedule start current day startdate current date nextscheduledate future date second scheduled payment schedule configured start future date first scheduled payment startdate nextschduledate future date attributes customerid integer system identifier customer record associated payment customerfirstname string first name customer associated payment customerlastname string last name customer associated payment customercompany string company associated payment balanceremaining number read system field indicating total amount still collected part schedule \\( totaldueamount totalamountpaid balanceremaining \\) numberofpaymentsremaining integer read system field indicating number payments left generated schedule schedule yet generate payment equal totalnumberofpayments pauseuntildate string date paused schedule set resume schedule status suspended date automatically resume schedule status active expired field value recent date schedule resumed schedules never paused value null note pauseuntildate field set null paused schedule resumes field always contain date schedule last activated firstpaymentdone boolean payment \\( either custom first payment first scheduled payment \\) generated schedule attribute true schedule longer deleted payment activity generated schedule attribute false read system field dateoflastpaymentmade string read system field indicating last date scheduled payment \\( custom first payment \\) generated schedule schedule yet generated payment field null totalamountpaid number read system field indicating sum payments including custom first payment generated schedule numberofpaymentsmade integer read system field indicating number regular payments \\( including custom first payment \\) generated schedule totaldueamount number total amount collected schedule specified payment plan request totalnumberofpayments integer total number schedule payments specified payment plan request paymentsubtype integer type credit card ach payment defaults moto credit card payments web ach payments included left null values include swipe cc ppd ccd tel ach accountid integer system identifier credit card account ach account used schedule specified payment plan request invoicenumber string invoicenumber specified payment plan request orderid string orderid specified payment plan request firstpaymentamount number custom payment amount executed prior start schedule value specified payment plan request rounded 2 decimal places displayed custom first payment configured field null firstpaymentdate string date custom first payment processed value specified payment plan request custom first payment configured field null date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) executionfrequencytype integer primary frequency execute scheduled payments specified payment plan request \\( response displays text integer \\) enumeration 1 daily 2 weekly 3 biweekley 4 first month 5 specific day month 6 last month 7 quarterly 8 semi annually 9 annually executionfrequencyparameter integer day month specific day month schedule day week weekly bi weekly schedule specified payment plan request frequency types field 0 enumeration \\( weekly bi weekly \\) 1 sunday 2 monday 3 tuesday 4 wednesday 5 thursday 6 friday 7 saturday monthly integer 1 31 description string description specified payment plan request lastmodified string set system date time payment plan object last modified createdon string set system date time payment plan object created sample new payment plan object requests json simple totaldueamount 100 totalnumberofpayments 5 accountid 395564 startdate 2013 11 01 executionfrequencytype 4 full totaldueamount 100 totalnumberofpayments 5 paymentsubtype ccd accountid 395564 invoicenumber aa777 firstpaymentamount 10 firstpaymentdate 2013 10 29 startdate 2013 11 04 executionfrequencytype 2 executionfrequencyparameter 2 description payment plan entered via api sample new payment object response json customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 2013 11 04t07 00 00z balanceremaining 90 numberofpaymentsremaining 5 pauseuntildate null paymentamount 18 firstpaymentdone true dateoflastpaymentmade null totalamountpaid 10 numberofpaymentsmade 0 totaldueamount 100 totalnumberofpayments 5 paymentsubtype ccd accountid 395564 invoicenumber aa777 orderid null firstpaymentamount 10 firstpaymentdate 2013 10 29t06 00 00z startdate 2013 11 04t07 00 00z schedulestatus active executionfrequencytype weekly executionfrequencyparameter 2 description payment plan entered via api id 118239 lastmodified 2013 10 29t22 07 43 8697581z createdon 2013 10 29t22 07 43 8697581z entering payment plan schedule existing customer entering recurring payment schedule existing customer using api accomplished using three sequential steps 1 retrieve customerid 2 retrieve existing accountid create new payment account object 3 create recurring payment object using payment account created retrieved step 2 maintain database customerids associated accountids complete steps 1 2 system utilize paysimple api creating recurring payment schedule \\( step 3 \\) maintain database customerid begin step 2 attributes needed object types defined request response information associated utilizing enter recurring payment schedules existing customers using new existing payment accounts retrieve customerid know customerid customer want charge \\( example stored database \\) skip step need retrieve customerid attribute customer object want charge need search customer record obtain search via api method get uri v4 globalsearch \\? query value query customer name company name response attribute needed originid note search originid customer object equal customerid sample customer search request json uri v4 globalsearch \\? query abc company sample customer search response json results originkey cust originid 255939 description customer test person abc company ranking 176 create accountid create new recurring payment object entering one time payment future date entering one time payment executed future date done creating recurring billing schedule setting start date payment date frequency annual end date day payment date detailed instructions entering recurring billing schedules via api see schedule new customer schedule existing customer create new recurring payment object one time payment future date using accountid obtained one methods described sections method post uri v4 recurringpayment request recurring payment object attributes accountid account want charge amount amount want charge startdate date want payment process enddate day startdate executionfrequencytype 9 \\( enumeration annually \\) key recurring payment object response attributes one time payment processed future date id integer scheduleid number need reference future calls related schedule including pause suspend resume view details schedulestatus integer schedule status set system enumeration 1 active 3 expired 4 suspended expected response new schedule active paymentamount number amount scheduled payment specified recurring payment request startdate string date schedule start running specified recurring payment request case date payment scheduled process nextscheduledate string next date schedule generate payment based schedule frequency startdate specified recurring payment request one time payments scheduled future date nextscheduledate always equal startdate enddate string date specified recurring payment request schedule stop generating payments one time payments scheduled future date enddate always day startdate firstpaymentdone boolean indicates whether payments yet made via schedule one time payments scheduled future date value always false executionfrequencytype integer primary frequency execute scheduled payments specified recurring payment request one time payments scheduled future date value always annually createdon string set system date time recurring payment object created \\( date one time future payment entered executed \\) sample recurring payment object request one time payment processed future date json following example payment entered october 30 2013 processed november 4 2013 enddate 2013 11 05 paymentamount 10 accountid 395560 startdate 2013 11 04 executionfrequencytype 9 sample recurring payment object response one time payment processed future date json customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 2013 11 04t07 00 00z pauseuntildate null firstpaymentdone false dateoflastpaymentmade null totalamountpaid 0 numberofpaymentsmade 0 enddate 2013 11 05t07 00 00z paymentamount 10 paymentsubtype moto accountid 395560 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null startdate 2013 11 04t07 00 00z schedulestatus active executionfrequencytype annually executionfrequencyparameter 0 description null id 118275 lastmodified 2013 10 30t17 07 24 9581759z createdon 2013 10 30t17 07 24 9581759z retrieve payment schedule use api retrieve full schedule details single recurring payment object payment plan object instructions provided retrieve recurring payment object method get uri v4 recurringpayment scheduleid query id recurring payment object want retrieve retrieve payment plan object method get uri v4 paymentplan scheduleid query id payment plan object want retrieve sample request json v4 recurringpayment 118162 sample response json customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 2013 10 31t06 00 00z pauseuntildate null firstpaymentdone false dateoflastpaymentmade 2013 10 30t06 00 00z totalamountpaid 48 numberofpaymentsmade 3 enddate null paymentamount 16 paymentsubtype moto accountid 396036 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null startdate 2013 10 28t06 00 00z schedulestatus active executionfrequencytype daily executionfrequencyparameter 0 description null id 118162 lastmodified 2013 10 30t07 30 18z createdon 2013 10 28t19 55 02z sample request json v4 paymentplan 118171 sample response json customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 2013 10 31t06 00 00z balanceremaining 0 numberofpaymentsremaining 5 pauseuntildate null paymentamount 20 firstpaymentdone false dateoflastpaymentmade null totalamountpaid 0 numberofpaymentsmade 0 totaldueamount 100 totalnumberofpayments 5 paymentsubtype moto accountid 395560 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null startdate 2013 10 28t06 00 00z schedulestatus active executionfrequencytype lastofmonth executionfrequencyparameter 0 description null id 118171 lastmodified 2013 10 30t17 44 30z createdon 2013 10 28t21 59 00z recurring payment response object attributes customerid integer system identifier customer record associated schedule value assigned based customer object designated payment account object schedule attached customerfirstname string first name customer associated schedule customerlastname string last name customer associated schedule customercompany string company associated schedule accountid integer system identifier credit card account ach account used schedule customer object associated accountid associated schedule paymentamount number scheduled payment amount integer decimal 2 decimal places entered system round nearest penny e entering 3 129 result paymentamount 3 13 startdate string date schedule start \\( start \\) running necessarily date \\( \\) generate first payment future date used edited prior schedule starting first payment actually generated field becomes read date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) executionfrequencytype integer primary frequency schedule executes payments \\( response displays text integer \\) enumeration 1 daily 2 weekly 3 biweekley 4 first month 5 specific day month 6 last month 7 quarterly 8 semi annually 9 annually enddate string date schedule stop generating payments \\( status changes expired \\) schedule programmed run indefinitely field null date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) paymentsubtype string field defaults moto credit card payments web ach payments included left null enumeration \\( ach \\) 4 web 5 tel 6 ppd 7 ccd enumeration \\( cc \\) 10 swipe 11 moto invoicenumber string 50 characters max invoice number attached schedule number provided system invoice number associated system invoiceid attached schedule scheduled payments applied system invoice note invoice creation management available via api orderid string 50 characters max back end transaction identifier included ui firstpaymentamount number custom payment amount executed prior start schedule enter number include integer decimal 2 decimal places entered system round nearest penny e entering 23 129 result firstpaymentamount 23 13 firstpaymentdate string date custom first payment processed current date future date must prior schedule startdate future date used edited prior custom first payment generated custom first payment actually generated field becomes read date format yyyy mm dd executionfrequencyparameter integer used specify day month specific day month schedule specify day week weekly bi weekly schedule enumeration \\( weekly bi weekly \\) 1 sunday 2 monday 3 tuesday 4 wednesday 5 thursday 6 friday 7 saturday monthly enter integer 1 31 note avoid confusion want bill 30th 31st use last day month frequency type instead specific day month frequency type description string 2048 characters max open text field nextscheduledate string next date schedule generate payment based schedule frequency date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) pauseuntildate string date paused schedule set resume schedule status suspended date automatically resume schedule status active expired field value recent date schedule resumed schedules never paused value null note pauseuntildate field set null paused schedule resumes field always contain date schedule last activated note see payment schedule instructions set pause resume date via api firstpaymentdone boolean payment \\( either custom first payment first scheduled payment \\) generated schedule attribute true schedule longer deleted payment activity generated schedule attribute false dateoflastpaymentmade string read system field indicating last date scheduled payment \\( custom first payment \\) generated schedule schedule yet generated payment field null totalamountpaid number read system field indicating sum payments including custom first payment generated schedule numberofpaymentsmade integer read system field indicating number regular payments \\( including custom first payment \\) generated schedule schedulestatus integer current schedule status enumeration 1 active 2 pauseuntil 3 expired 4 suspended note schedule status changed via uri status change requests modifying value field via uri put request see payment schedule payment schedule payment schedule detailed instructions id integer scheduleid number need reference calls related schedule including pause suspend resume view details lastmodified string set system date time recurring payment object last modified createdon string set system date time recurring payment object created payment plan object attributes customerid integer system identifier customer record associated schedule value assigned based customer object designated payment account object schedule attached customerfirstname string first name customer associated schedule customerlastname string last name customer associated schedule customercompany string company associated schedule accountid integer system identifier credit card account ach account used schedule totaldueamount number total amount collected schedule integer decimal without used 2 decimal places entered system round nearest penny e entering 300 129 result totaldueamount 300 13 totalnumberofpayments integer total number schedule payments integer 1 99 startdate string date schedule start \\( start \\) running necessarily date \\( \\) generate first payment future date used edited prior schedule starting first payment actually generated field becomes read date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) executionfrequencytype integer primary frequency schedule executes payments \\( response displays text integer \\) enumeration 1 daily 2 weekly 3 biweekley 4 first month 5 specific day month 6 last month 7 quarterly 8 semi annually 9 annually executionfrequencyparameter integer used specify day month specific day month schedule specify day week weekly bi weekly schedule enumeration \\( weekly bi weekly \\) 1 sunday 2 monday 3 tuesday 4 wednesday 5 thursday 6 friday 7 saturday monthly enter integer 1 31 note avoid confusion want bill 30th 31st use last day month frequency type instead specific day month frequency type paymentsubtype string field defaults moto credit card payments web ach payments included left null enumeration \\( ach \\) 4 web 5 tel 6 ppd 7 ccd enumeration \\( cc \\) 10 swipe 11 moto invoicenumber string 50 characters max invoice number attached schedule number provided system invoice number associated system invoiceid attached schedule scheduled payments applied system invoice note invoice creation management available via api orderid string 50 characters max back end transaction identifier included ui firstpaymentamount number custom payment amount executed prior start schedule integer decimal without used 2 decimal places entered system round nearest penny e entering 23 129 result firstpaymentamount 23 13 firstpaymentdate string date custom first payment processed current date future date must prior schedule startdate future date used edited prior custom first payment generated custom first payment actually generated field becomes read date format yyyy mm dd description string 2048 characters max nextscheduledate string next date schedule generate payment based schedule frequency date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) balanceremaining number read system field indicating total amount still collected part schedule \\( totaldueamount totalamountpaid balanceremaining \\) numberofpaymentsremaining integer read system field indicating number payments left generated schedule schedule yet generate payment equal totalnumberofpayments pauseuntildate string date paused schedule set resume schedule status suspended date automatically resume schedule status active expired field value recent date schedule resumed schedules never paused value null note pauseuntildate field set null paused schedule resumes field always contain date schedule last activated note see payment schedule instructions set pause resume date via api paymentamount number system calculated amount scheduled payment paymentamount \\( totalamountdue customfirstpaymentamount \\) numberofpayments firstpaymentdone boolean payment \\( either custom first payment first scheduled payment \\) generated schedule attribute true schedule longer deleted payment activity generated schedule attribute false dateoflastpaymentmade string read system field indicating last date scheduled payment \\( custom first payment \\) generated schedule schedule yet generated payment field null totalamountpaid number read system field indicating sum payments including custom first payment generated schedule numberofpaymentsmade integer read system field indicating number regular payments \\( including custom first payment \\) generated schedule schedulestatus integer current schedule status enumeration 1 active 2 pauseuntil 3 expired 4 suspended note schedule status changed via uri status change requests modifying value field via uri put request see payment schedule payment schedule payment schedule detailed instructions id integer scheduleid number need reference calls related schedule including pause suspend resume view details lastmodified string set system date time recurring payment object last modified createdon string set system date time recurring payment object created suspend payment schedule suspending schedule stops generating payments manually resumed \\( see payment schedule instructions \\) schedule \\( recurring payment payment plan \\) status active suspended via api additionally suspend request used paused schedule \\( see payment schedule \\) set pauseuntildate null request body required response body provided schedule suspend uri instruction methods suspending recurring payment payment plan schedule provided suspend recurring payment via api method put uri v4 recurringpayment scheduleid suspend suspend payment plan via api method put uri v4 paymentplan scheduleid suspend confirm schedule suspended retrieve schedule object \\( recurring payment payment plan \\) check status field suspended schedules status suspended note see payment schedule instructions active schedule object \\( recurring payment example \\) json customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 2013 11 04t07 00 00z pauseuntildate null firstpaymentdone false dateoflastpaymentmade 2013 10 28t06 00 00z totalamountpaid 15 numberofpaymentsmade 1 enddate null paymentamount 15 paymentsubtype moto accountid 395560 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null startdate 2013 10 28t06 00 00z schedulestatus active executionfrequencytype weekly executionfrequencyparameter 2 description null id 118161 lastmodified 2013 10 28t19 48 09z createdon 2013 10 28t19 48 09z suspended schedule object \\( recurring payment example \\) json customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 0001 01 01t07 00 00z \\( note nextscheduledate suspended schedule always 0001 01 01 pauseuntildate null firstpaymentdone false dateoflastpaymentmade 2013 10 28t06 00 00z totalamountpaid 15 numberofpaymentsmade 1 enddate null paymentamount 15 paymentsubtype moto accountid 395560 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null startdate 2013 10 28t06 00 00z schedulestatus suspended executionfrequencytype weekly executionfrequencyparameter 2 description null id 118161 lastmodified 2013 10 30t18 32 38z createdon 2013 10 28t19 48 09z pause payment schedule pausing schedule stops generating payments date specify specified date schedule returns active status generate payment next scheduled date based schedule frequency example schedule first month frequency paused december 15 2013 next process payment january 1 2014 schedule \\( recurring payment payment plan \\) status active paused via api note paused schedule manually resumed time using schedule resume feature \\( see payment schedule \\) also suspended indefinitely using schedule suspend feature \\( see payment schedule \\) request body required response body provided schedule pause uri instruction methods pausing recurring payment payment plan schedule provided pause recurring payment via api method put uri v4 recurringpayment scheduleid pause \\? enddate date enddate date want schedule resume \\( date format yyyy mm dd \\) pause payment plan via api method put uri v4 paymentplan scheduleid pause \\? enddate date enddate date want schedule resume \\( date format yyyy mm dd \\) confirm schedule paused retrieve schedule object \\( recurring payment payment plan \\) check status field paused schedules schedulestatus suspended pauseuntil field reflect date entered request note see payment schedule instructions active schedule object \\( recurring payment example \\) json customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 2013 11 04t07 00 00z pauseuntildate null firstpaymentdone false dateoflastpaymentmade 2013 10 28t06 00 00z totalamountpaid 15 numberofpaymentsmade 1 enddate null paymentamount 15 paymentsubtype moto accountid 395560 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null startdate 2013 10 28t06 00 00z schedulestatus active executionfrequencytype weekly executionfrequencyparameter 2 description null id 118161 lastmodified 2013 10 28t19 48 09z createdon 2013 10 28t19 48 09z suspended schedule object \\( recurring payment example \\) json customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 2013 12 02t07 00 00z \\( next date based frequency payment occur \\) pauseuntildate 2013 12 01t07 00 00z \\( date schedule status \\( \\) return active future date field indicates paused schedule \\) firstpaymentdone false dateoflastpaymentmade 2013 10 28t06 00 00z totalamountpaid 15 numberofpaymentsmade 1 enddate null paymentamount 15 paymentsubtype moto accountid 395560 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null startdate 2013 10 28t06 00 00z schedulestatus suspended executionfrequencytype weekly executionfrequencyparameter 2 description null id 118161 lastmodified 2013 10 30t19 33 33z createdon 2013 10 28t19 48 09z resume payment schedule resume suspended schedule whether suspended indefinitely paused specific date using resume schedule feature request body required response body provided schedule resume uri instruction methods resuming recurring payment payment plan schedule provided resume recurring payment via api method put uri v4 recurringpayment scheduleid resume resume payment plan via api method put uri v4 paymentplan scheduleid resume confirm schedule resumed retrieve schedule object \\( recurring payment payment plan \\) check status field schedule schedulestatus active pauseuntil field null note see payment schedule instructions paused schedule object \\( payment plan example \\) json customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 2014 02 28t07 00 00z balanceremaining 0 numberofpaymentsremaining 5 pauseuntildate 2014 02 01t07 00 00z paymentamount 20 firstpaymentdone false dateoflastpaymentmade null totalamountpaid 0 numberofpaymentsmade 0 totaldueamount 100 totalnumberofpayments 5 paymentsubtype moto accountid 395560 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null startdate 2013 10 28t06 00 00z schedulestatus suspended executionfrequencytype lastofmonth executionfrequencyparameter 0 description null id 118171 lastmodified 2013 10 30t21 57 56z createdon 2013 10 28t21 59 00z suspended schedule object \\( payment plan example \\) json customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 2013 10 31t06 00 00z balanceremaining 0 numberofpaymentsremaining 5 pauseuntildate null paymentamount 20 firstpaymentdone false dateoflastpaymentmade null totalamountpaid 0 numberofpaymentsmade 0 totaldueamount 100 totalnumberofpayments 5 paymentsubtype moto accountid 395560 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null startdate 2013 10 28t06 00 00z schedulestatus active executionfrequencytype lastofmonth executionfrequencyparameter 0 description null id 118171 lastmodified 2013 10 30t21 59 52z createdon 2013 10 28t21 59 00z delete payment schedule delete payment schedule \\( recurring payment payment plan \\) yet started transaction attached means neither custom first payment regularly scheduled payments yet generated schedule schedule startdate past \\( schedules startdate current date deleted \\) request body required response body provided schedule delete uri instruction methods deleting recurring payment payment plan schedule provided delete recurring payment via api method delete uri v4 recurringpayment scheduleid delete payment plan via api method delete uri v4 paymentplan scheduleid confirm schedule deleted retrieve schedule object \\( recurring payment payment plan \\) check response information note see payment schedule instructions deleted schedule objects return 203 non authoritative information response \\( httpstatus field meta section response nonauthoritativeinformation httpstatuscode 203 shown delete error message send uri delete request schedule cannot deleted \\( either startdate past transaction attached \\) see error message json meta errors null httpstatus nonauthoritativeinformation httpstatuscode 203 pagingdetails null 400 bad request json meta errors errorcode invalidinput errormessages field message payment schedules started cannot deleted suspended tracecode null httpstatus badrequest httpstatuscode 400 pagingdetails null response null edit recurring payment schedule use api make changes recurring payment schedules api support editing payment plan schedules note payment plans yet started \\( startdate future \\) changes made via ui payment plan startdate changes longer permitted use api make changes following recurring payment schedule fields paymentamount number scheduled payment amount change number accountid integer system identifier credit card account ach account used schedule enter accountid associated customer record change credit card ach vice versa specify new paymentsubtype system update schedule default sub type account type \\( cc moto ach web \\) paymentsubtype string field defaults moto credit card payments web ach payments included left null manually enter new value field omit \\( set null \\) let system assign default sub type accountid enumeration \\( ach \\) 4 web 5 tel 6 ppd 7 ccd enumeration \\( cc \\) 10 swipe 11 moto startdate string date schedule configured start running date future change current date future date date passed field read cannot changed date format yyyy mm dd enddate string date schedule stop generating payments change date future date set null run schedule indefinitely date format yyyy mm dd executionfrequencytype integer primary frequency execute scheduled payments change frequency enumeration 1 daily 2 weekly 3 biweekley 4 first month 5 specific day month 6 last month 7 quarterly 8 semi annually 9 annually note quarterly semi annually annually used schedule execute next payment start date \\( schedule yet started \\) calculate next scheduled payment based date previous payment example first month schedule start date january 1 2013 last generated payment september 1 2013 change annual schedule next scheduled payment generated september 1 2014 executionfrequencyparameter integer used specify day month specific day month schedule specify day week weekly bi weekly schedule change field whether change executionfrequencytype however value used must appropriate frequency type enumeration \\( weekly bi weekly \\) 1 sunday 2 monday 3 tuesday 4 wednesday 5 thursday 6 friday 7 saturday monthly enter integer 1 31 note avoid confusion want bill 30th 31st use last day month frequency type instead specific day month frequency type firstpaymentamount number custom payment amount executed prior start schedule change amount firstpaymentdate future payment generated field becomes read firstpaymentdate string date custom first payment processed change existing date future change current date future date payment generated field becomes read date format yyyy mm dd invoicenumber string 50 characters max invoice number attached schedule orderid string 50 characters max back end transaction identifier included ui description string 2048 characters max open text field note changes entered fields system ignore retain existing values must include following recurring payment object required fields uri request whether changing values id integer scheduleid recurring payment object editing paymentamount accountid startdate executionfrequencytype \\( executionfrequencyparameter required selected type \\) edit recurring payment schedule via api method put uri v4 recurringpayment request required recurring payment object attributes optional attributes changed original recurring payment object json customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 2013 11 30t07 00 00z pauseuntildate null firstpaymentdone false dateoflastpaymentmade 2013 10 31t06 00 00z totalamountpaid 20 numberofpaymentsmade 1 enddate null paymentamount 20 paymentsubtype moto accountid 395560 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null startdate 2013 10 31t06 00 00z schedulestatus active executionfrequencytype lastofmonth executionfrequencyparameter 0 description null id 118328 lastmodified 2013 10 31t17 57 29 6842513z createdon 2013 10 31t17 57 29 6842513z sample recurring payment edit request json \\( change payment amount 20 50 change end date null december 1 2014 change payment account credit card bank account \\) id 118328 enddate 2014 12 01 paymentamount 50 accountid 395564 startdate 2013 10 31 executionfrequencytype 6 sample recurring payment edit response json customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 2013 11 30t07 00 00z pauseuntildate null firstpaymentdone false dateoflastpaymentmade 2013 10 31t06 00 00z totalamountpaid 20 numberofpaymentsmade 1 enddate 2014 12 01t07 00 00z paymentamount 50 paymentsubtype web accountid 395564 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null startdate 2013 10 31t06 00 00z schedulestatus active executionfrequencytype lastofmonth executionfrequencyparameter 0 description null id 118328 lastmodified 2013 10 31t18 01 11 1617104z createdon 2013 10 31t17 57 29z list payments payment schedule use api retrieve list payments generated recurring billing payment plan schedule regardless schedule status instructions provided retrieve payments recurring payment object method get uri v4 recurringpayment scheduleid payments query id recurring payment object want retrieve payments note request returns complete payment record cannot retrieve payments lite format note detailed description fields response see object attributes retrieve payments payment plan object method get uri v4 paymentplan scheduleid payments query id payment plan object want retrieve payments note detailed description fields response see object attributes sample request recurring payment object json v4 recurringpayment 118163 payments sample response recurring payment object json meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 3 page 1 itemsperpage 200 response customerid 255939 customerfirstname test customerlastname person customercompany abc company referenceid 0 status settled recurringscheduleid 118163 paymenttype cc paymentsubtype moto providerauthcode tracenumber 487718 paymentdate 2013 10 28t19 56 38z returndate null estimatedsettledate 2013 10 30t06 00 00z actualsettleddate 2013 10 29t10 00 01z canvoiduntil 2013 10 29t02 45 00z failuredata code null description null merchantactiontext null accountid 396036 invoiceid null amount 10 isdebit false invoicenumber null purchaseordernumber null orderid null description null latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1618094 lastmodified 2013 10 29t10 00 01z createdon 2013 10 28t19 56 38z customerid 255939 customerfirstname test customerlastname person customercompany abc company referenceid 0 status settled recurringscheduleid 118163 paymenttype cc paymentsubtype moto providerauthcode tracenumber 816446 paymentdate 2013 10 30t06 00 00z returndate null estimatedsettledate 2013 11 01t06 00 00z actualsettleddate 2013 10 31t10 00 00z canvoiduntil 2013 10 31t02 45 00z failuredata code null description null merchantactiontext null accountid 396036 invoiceid null amount 16 isdebit false invoicenumber null purchaseordernumber null orderid null description null latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1618939 lastmodified 2013 10 31t10 00 00z createdon 2013 10 30t07 30 18z customerid 255939 customerfirstname test customerlastname person customercompany abc company referenceid 0 status authorized recurringscheduleid 118163 paymenttype cc paymentsubtype moto providerauthcode approved tracenumber 335251 paymentdate 2013 10 31t06 00 00z returndate null estimatedsettledate 2013 11 04t07 00 00z actualsettleddate null canvoiduntil 2013 11 01t02 45 00z failuredata code null description null merchantactiontext null accountid 396036 invoiceid null amount 16 isdebit false invoicenumber null purchaseordernumber null orderid null description null latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1619533 lastmodified 2013 10 31t07 30 18z createdon 2013 10 31t07 30 18z sample request payment plan object json v4 paymentplan 115042 payments sample response payment plan object json meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 2 page 1 itemsperpage 200 response customerid 248352 customerfirstname eddie customerlastname example customercompany example company referenceid 0 status settled recurringscheduleid 115042 paymenttype ach paymentsubtype web providerauthcode tracenumber 4b7af052 09d9 4c74 87f1 17a21aeeec2f paymentdate 2013 08 22t06 00 00z returndate null estimatedsettledate 2013 08 27t06 00 00z actualsettleddate 2013 08 23t10 00 00z canvoiduntil 2013 08 22t23 00 00z failuredata code null description null merchantactiontext null accountid 386548 invoiceid null amount 10 isdebit false invoicenumber null purchaseordernumber null orderid null description null latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1435338 lastmodified 2013 08 23t10 00 00z createdon 2013 08 22t17 15 08z customerid 248352 customerfirstname eddie customerlastname example customercompany example company referenceid 0 status settled recurringscheduleid 115042 paymenttype ach paymentsubtype web providerauthcode tracenumber f5a5d3a7 e5ef 4356 af38 e019f954e613 paymentdate 2013 08 24t06 00 00z returndate null estimatedsettledate 2013 08 28t06 00 00z actualsettleddate 2013 08 25t10 00 00z canvoiduntil 2013 08 24t12 00 00z failuredata code null description null merchantactiontext null accountid 386548 invoiceid null amount 10 isdebit false invoicenumber null purchaseordernumber null orderid null description null latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1436342 lastmodified 2013 08 25t10 00 00z createdon 2013 08 24t07 30 23z list payment schedules use api retrieve payment schedules client account retrieve list recurring payment schedules payment plan schedules returning list schedules system provides high level details schedule complete schedule record response includes paymentscheduletype field indicates whether object recurring payment payment plan recurring payment objects payment plan objects displayed two formats complete lite complete default return lite record applying lite filter get uri request following sections provide examples requests responses available obtaining schedule lists list schedules following requests responses used paymentschedule route return abbreviated records schedules \\( including expired suspended schedules \\) associated client account default list schedules oldest newest want detail record one schedules note type id retrieve full schedule \\( see payment schedule instructions \\) retrieve list schedule objects method get uri v4 paymentschedule object attributes included payment schedule list response paymentscheduletype string recurringpayment recurring payment schedule paymentplan payment plan schedule customerfirstname string first name customer associated payment customerlastname string last name customer associated payment customerid integer system identifier customer record associated payment schedulestatus integer current schedule status enumeration 1 active 3 expired 4 suspended nextpaymentdate string next date schedule generate payment based schedule frequency date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) paymentamount number amount scheduled payment id integer scheduleid number need reference future calls related schedule including pause suspend resume view details lastmodified string set system date time schedule last modified createdon string set system date time schedule object created sample list payment schedules request json get v4 paymentschedule sample list payment schedules response json meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 4 page 1 itemsperpage 200 response paymentscheduletype recurringpayment customerfirstname test customerlastname guy customerid 219175 schedulestatus expired note schedule expired next payment date nextpaymentdate 0001 01 01t07 00 00z paymentamount 90 id 110165 lastmodified 2013 08 31t17 11 15z createdon 2013 05 24t19 25 26z paymentscheduletype recurringpayment customerfirstname test customerlastname person customerid 255939 schedulestatus suspended note schedule paused next payment date dec 2 2013 nextpaymentdate 2013 12 02t07 00 00z paymentamount 15 id 118161 lastmodified 2013 10 30t19 33 33z createdon 2013 10 28t19 48 09z paymentscheduletype recurringpayment customerfirstname test customerlastname person customerid 255939 schedulestatus active nextpaymentdate 2013 11 04t07 00 00z paymentamount 22 id 118216 lastmodified 2013 10 29t17 12 33z createdon 2013 10 29t17 12 33z paymentscheduletype paymentplan customerfirstname test customerlastname person customerid 255939 schedulestatus active nextpaymentdate 2013 11 04t07 00 00z paymentamount 25 id 118323 lastmodified 2013 10 31t16 28 11z createdon 2013 10 31t16 28 11z list recurring payment schedules use recurringpayment route return list recurring payment schedules client account shown retrieve list recurring payment objects method get uri v4 recurringpayment recurring payment objects displayed two formats complete lite complete default return lite record applying lite filter get uri request follows method get uri v4 recurringpayment \\? lite true example provided note see response object attributes definitions fields complete recurring payment object json customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 2013 11 01t06 00 00z pauseuntildate null firstpaymentdone false dateoflastpaymentmade null totalamountpaid 0 numberofpaymentsmade 0 enddate null paymentamount 12 paymentsubtype moto accountid 395560 invoicenumber orderid null firstpaymentamount 0 firstpaymentdate null startdate 2013 10 28t06 00 00z schedulestatus active executionfrequencytype firstofmonth executionfrequencyparameter 1 description id 118169 lastmodified 2013 10 28t22 40 17z createdon 2013 10 28t21 42 19z lite recurring payment object json customerid 255939 customerfirstname test customerlastname person nextscheduledate 2013 11 01t06 00 00z schedulestatus active executionfrequencytype firstofmonth executionfrequencyparameter 1 id 118169 sample recurring payment list request \\( using lite records \\) json get v4 recurringpayment \\? lite true sample recurring payment list response \\( using lite records \\) json meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 5 page 1 itemsperpage 200 response customerid 219175 customerfirstname test customerlastname guy nextscheduledate 0001 01 01t07 00 00z schedulestatus expired executionfrequencytype daily executionfrequencyparameter 0 id 110165 customerid 255939 customerfirstname test customerlastname person nextscheduledate 2013 11 01t06 00 00z schedulestatus active executionfrequencytype firstofmonth executionfrequencyparameter 1 id 118169 customerid 255939 customerfirstname test customerlastname person nextscheduledate 2013 11 04t07 00 00z schedulestatus active executionfrequencytype specificdayofmonth executionfrequencyparameter 4 id 118216 customerid 255939 customerfirstname test customerlastname person nextscheduledate 2013 11 04t07 00 00z schedulestatus active executionfrequencytype quarterly executionfrequencyparameter 0 id 118324 customerid 255939 customerfirstname test customerlastname person nextscheduledate 2013 11 30t07 00 00z schedulestatus active executionfrequencytype lastofmonth executionfrequencyparameter 0 id 118328 list payment plan schedules use paymentplan route return list recurring payment schedules client account shown retrieve list payment plan objects method get uri v4 paymentplan payment plan objects displayed two formats complete lite complete default return lite record applying lite filter get uri request follows method get uri v4 paymentplan \\? lite true example provided note see response object attributes definitions fields complete payment plan object json customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 2013 11 01t06 00 00z balanceremaining 40 numberofpaymentsremaining 2 pauseuntildate null paymentamount 20 firstpaymentdone false dateoflastpaymentmade 2013 10 31t06 00 00z totalamountpaid 60 numberofpaymentsmade 3 totaldueamount 100 totalnumberofpayments 5 paymentsubtype moto accountid 395560 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null startdate 2013 10 29t06 00 00z schedulestatus active executionfrequencytype daily executionfrequencyparameter 0 description null id 118234 lastmodified 2013 10 31t07 30 17z createdon 2013 10 29t20 00 03z lite payment plan object json customerid 255939 customerfirstname test customerlastname person nextscheduledate 2013 11 01t06 00 00z schedulestatus active executionfrequencytype daily executionfrequencyparameter 0 id 118234 sample payment plan list request \\( using lite records \\) json get v4 paymentplan \\? lite true sample payment plan list response \\( using lite records \\) json meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 3 page 1 itemsperpage 200 response customerid 255939 customerfirstname test customerlastname person nextscheduledate 2013 11 30t07 00 00z schedulestatus active executionfrequencytype lastofmonth executionfrequencyparameter 0 id 118171 customerid 255939 customerfirstname test customerlastname person nextscheduledate 2013 11 01t06 00 00z schedulestatus active executionfrequencytype daily executionfrequencyparameter 0 id 118234 customerid 255939 customerfirstname test customerlastname person nextscheduledate 2013 11 04t07 00 00z schedulestatus active executionfrequencytype weekly executionfrequencyparameter 2 id 118239 filtering schedule lists full list schedules grow quite large unwieldy api uses paging limit number results returned single request default show recent 200 schedules use pagination filters govern number results returned response well response page would like retrieve also use filters create lists based schedule status schedule list filtering sorting options detailed following sections pagination filters schedule lists filters used part get uri request return list schedules page set results want return 1 returns first page 2 second etc filter included request defaults 1 pagesize number schedule records per page filter included request defaults 200 meta section response echoes request displays total number records page results returned number results returned per page examples use paymentschedule route return list recurring payment payment plan schedules also use recurringpayment route paymentplan route pagination filters examples replacing paymentschedule alternate route would return list complete recurring payment object lists payment plan object lists recurringpayment paymentplan routes also specify lite record response examples lite requests provided date filters requesting schedule list use date filters return schedules start date given date range default return schedules regardless start date note filter works startdate field consider schedule createdon field date actual first payment generated schedule date format uri requests yyyy mm dd filters used part get uri request return list transactions startdate set filter earliest schedule startdate want return enddate set filter latest schedule startdate want return date filters used get paymentschedule get recurringpayment get paymentplan routes recurringpayment paymentplan default return complete schedule records however use lite filter conjunction date filter return abbreviated schedule records meta section response displays number transactions match date filter well pagination filters applied part query status filter returning list schedules filter list status generate lists include schedules single status group one statuses default return schedules statuses following used part get uri request status filter return list schedules active schedules currently live generating payments suspended schedules currently paused suspended indefinitely schedule suspended indefinitely zero value nextpaymentdate field paused nextpaymentdate field indicate date schedule resume generating payments expired schedule longer generating payments recurring billing schedules means end date passed payment plan schedules means scheduled payments processed status filters used get paymentschedule get recurringpayment get paymentplan routes recurringpayment paymentplan default return complete schedule records however use lite filter conjunction status filter return abbreviated schedule records meta section response displays number schedules match status filter well pagination filters applied part query schedules always listed oldest newest schedule list sorting returning list schedules complete lite form use sorting calls control attribute list sorted whether sort ascending descending order default sort ascending id results listing oldest schedules first sort instruction comprised two calls first determines field schedules sorted second determines whether sort high low low high secondary sort always ascending id thus one schedule value sortby field listed ascending order id effectively means oldest newest calls used part get uri request designate sort parameters sortby attribute sort startdate sort schedule start date enddate sort schedule end date \\( null considered low appear first ascending sorts \\) nextpaymentdate sort schedule next payment date \\( schedules expired paused indefinitely appear first ascending sorts last descending sorts \\) note get recurringpayment get paymentplan routes field called nextscheduledate however use nextpaymentdate query paymentamount sort scheduled payment amount schedulestatus sort schedule status \\( ascending active expired suspended \\) id sort schedule id \\( sorting schedule creation date \\) executionfrequencytype sort schedule frequency \\( note sort group like frequencies together cannot relied upon true ascending descending sorting \\) customerlastname sort alphabetically customer last name customerfirstname sort alphabetically customer first name paymentscheduletype sort schedule type used get paymentschedule route sort used group recurring payments payment plans payment plan considered low direction order sort asc ascending sort low high z direction selected null values appear first list desc descending sort high low z direction selected null values appear last list note default pagination filter 200 records per page applied unless alternate pagination filter included uri sample sorting calls return schedules sort next payment date ascending order \\( present future \\) method get uri v4 paymentschedule \\? sortby nextpaymentdate direction asc list payment plan schedules recurring payment schedules method get uri v4 paymentschedule \\? sortby paymentscheduletype direction asc list schedules descending order payment amount method get uri v4 paymentschedule \\? sortby paymentamount direction descending list recurring payment schedules sorted z customer last name method get uri v4 recurringpayment \\? sortby customerlastname direction ascending list payment plan schedules sorted creation date newest oldest method get uri v4 paymentplan \\? sortby id direction descending schedule list request examples schedule list sorting filtering paging combined create type response require additionally recurring payment payment plan schedule lists return either complete lite records though single response cannot contain following representative samples compound schedule list requests associated responses note examples purposely use small page sizes order keep response displays readable active schedules started october 1 2013 sorted payment amount descending order 2 schedule records per page show page 1 note start date included paymentschedule list response however still use sort list schedule list example 1 default payment list response \\( 200 recent schedules \\) json request method get uri v4 paymentschedule response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 166 page 1 itemsperpage 200 schedule list example 2 50 record schedule list response \\( 50 oldest schedules \\) json request method get uri v4 paymentschedule \\? pagesize 50 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 166 page 1 itemsperpage 50 payment list example 3 10 payments per page page 3 response \\( third oldest 10 schedules \\) json request method get uri v4 paymentschedule \\? page 3 pagesize 10 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 166 page 3 itemsperpage 10 sample default schedule list response page page size filters applied json request method get uri v4 paymentschedule \\? page 2 pagesize 2 response meta meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 166 page 2 itemsperpage 2 response paymentscheduletype recurringpayment customerfirstname sam customerlastname pell customerid 94274 schedulestatus expired nextpaymentdate 0001 01 01t07 00 00z paymentamount 10 id 4330 lastmodified 2010 05 25t14 21 35z createdon 2010 05 04t18 07 32z paymentscheduletype recurringpayment customerfirstname sam customerlastname pell customerid 94274 schedulestatus expired nextpaymentdate 0001 01 01t07 00 00z paymentamount 13 id 4331 lastmodified 2010 08 03t14 22 25z createdon 2010 05 04t18 10 02z sample lite recurring payment list response page page size filters applied json request method get uri v4 recurringpayment \\? page 2 pagesize 2 lite true response meta meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 119 page 2 itemsperpage 2 response customerid 94274 customerfirstname sam customerlastname pell nextscheduledate 0001 01 01t07 00 00z schedulestatus expired executionfrequencytype weekly executionfrequencyparameter 3 id 4330 customerid 94274 customerfirstname sam customerlastname pell nextscheduledate 0001 01 01t07 00 00z schedulestatus expired executionfrequencytype weekly executionfrequencyparameter 3 id 4331 sample lite payment plan list response page page size filters applied json request method get uri v4 paymentplan \\? page 2 pagesize 2 lite true response meta meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 50 page 2 itemsperpage 2 response customerid 94661 customerfirstname jack customerlastname box nextscheduledate 0001 01 01t07 00 00z schedulestatus expired executionfrequencytype specificdayofmonth executionfrequencyparameter 5 id 4562 customerid 103029 customerfirstname macavity customerlastname mystery cat nextscheduledate 0001 01 01t07 00 00z schedulestatus expired executionfrequencytype weekly executionfrequencyparameter 6 id 5598 date filter example 1 default schedule list response json request method get uri v4 paymentschedule response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 166 page 1 itemsperpage 200 date filter example 2 schedules startdate june 1 2013 august 1 2013 json request method get uri v4 paymentschedule \\? startdate 2013 06 01 enddate 2013 08 01 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 8 page 1 itemsperpage 200 date filter example 3 schedules startdate april 1 2013 json request method get uri v4 paymentschedule \\? startdate 2013 04 01 enddate currentdate response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 33 page 1 itemsperpage 200 date filter example 4 recurring payment schedules startdate april 1 2013 july 15 2013 json request method get uri v4 recurringpayment \\? startdate 2013 04 01 enddate 2013 07 15 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 7 page 1 itemsperpage 200 date filter example 5 payment plan schedules startdate august 20 2013 october 15 2013 json request method get uri v4 paymentplan \\? startdate 2013 08 20 enddate 2013 10 15 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 4 page 1 itemsperpage 200 sample lite payment plan list response start end date filters applied json request method get uri v4 paymentplan \\? startdate 2013 08 20 enddate 2013 10 15 lite true response meta meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 3 page 1 itemsperpage 200 response customerid 94278 customerfirstname pooh customerlastname bear nextscheduledate 0001 01 01t07 00 00z schedulestatus expired executionfrequencytype weekly executionfrequencyparameter 3 id 114745 customerid 248352 customerfirstname eddie customerlastname example nextscheduledate 2013 11 24t07 00 00z schedulestatus active executionfrequencytype specificdayofmonth executionfrequencyparameter 24 id 115042 customerid 248352 customerfirstname eddie customerlastname example nextscheduledate 2013 11 04t07 00 00z schedulestatus active executionfrequencytype weekly executionfrequencyparameter 2 id 115799 status filter example 1 default schedule list response json request method get uri v4 paymentschedule response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 166 page 1 itemsperpage 200 status filter example 2 active schedules json request method get uri v4 paymentschedule \\? status active response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 54 page 1 itemsperpage 200 status filter example 3 suspended schedules json request method get uri v4 paymentschedule \\? status suspended response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 19 page 1 itemsperpage 200 status filter example 4 expired schedules json request method get uri v4 paymentschedule \\? status expired response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 93 page 1 itemsperpage 200 sample schedule list suspended status filter applied json request method get uri v4 paymentschedule \\? status suspended response meta meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 2 page 1 itemsperpage 200 response paymentscheduletype recurringpayment customerfirstname rose customerlastname tyler customerid 94659 schedulestatus suspended \\( schedule suspended indefinitely \\) nextpaymentdate 0001 01 01t07 00 00z paymentamount 11 id 4336 lastmodified 2013 02 08t17 35 30z createdon 2010 05 04t20 10 41z paymentscheduletype paymentplan customerfirstname eddie customerlastname example customerid 248352 schedulestatus suspended nextpaymentdate 2014 01 06t07 00 00z \\( schedule paused january 6 2014 \\) paymentamount 40 id 115799 lastmodified 2013 11 01t17 47 07z createdon 2013 09 05t16 59 33z sample lite recurring payment schedule list response expired status filter applied json request method get uri v4 recurringpayment \\? status expired lite true response meta meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 2 page 1 itemsperpage 200 response customerid 94274 customerfirstname sam customerlastname pell nextscheduledate 0001 01 01t07 00 00z schedulestatus expired executionfrequencytype daily executionfrequencyparameter 0 id 4226 customerid 94274 customerfirstname sam customerlastname pell nextscheduledate 0001 01 01t07 00 00z schedulestatus expired executionfrequencytype weekly executionfrequencyparameter 7 id 4326 sample lite payment plan schedule list response active status filter applied json request method get uri v4 paymentplan \\? status active lite true response meta meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 3 page 1 itemsperpage 200 response customerid 103830 customerfirstname zack customerlastname apple nextscheduledate 2013 11 30t07 00 00z schedulestatus active executionfrequencytype lastofmonth executionfrequencyparameter 0 id 81871 customerid 180379 customerfirstname sam customerlastname pell nextscheduledate 2013 11 06t07 00 00z schedulestatus active executionfrequencytype weekly executionfrequencyparameter 4 id 92301 customerid 201946 customerfirstname somother customerlastname guye nextscheduledate 2013 12 01t07 00 00z schedulestatus active executionfrequencytype firstofmonth executionfrequencyparameter 1 id 98921 expired recurring payment schedules lite schedule record sorted schedule end date newest oldest 2 schedule records per page show page 2 json note end date included lite response however still use sort list request method get uri v4 recurringpayment \\? status expired sortby enddate direction desc pagesize 2 page 2 lite true response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 48 page 2 itemsperpage 2 response customerid 248020 customerfirstname customerlastname global payments test card nextscheduledate 0001 01 01t07 00 00z schedulestatus expired executionfrequencytype weekly executionfrequencyparameter 3 id 114479 customerid 94274 customerfirstname sam customerlastname pell nextscheduledate 0001 01 01t07 00 00z schedulestatus expired executionfrequencytype weekly executionfrequencyparameter 3 id 6388 suspended schedules sorted next payment date present future 2 records per page show page 3 json request method get uri v4 paymentschedule \\? status suspended sortby nextpaymentdate direction asc page 3 pagesize 2 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 19 page 3 itemsperpage 2 response paymentscheduletype recurringpayment customerfirstname sally customerlastname sample customerid 94699 schedulestatus suspended nextpaymentdate 2013 12 01t07 00 00z paymentamount 20 id 26773 lastmodified 2011 11 18t20 31 39z createdon 2011 11 18t20 30 38z paymentscheduletype paymentplan customerfirstname pooh customerlastname testbear customerid 96093 schedulestatus suspended nextpaymentdate 2014 01 05t07 00 00z paymentamount 5 id 98830 lastmodified 2013 02 01t19 06 51z createdon 2013 02 01t19 05 57z payment plan schedules started q2 2013 listed order created \\( oldest newest \\) 2 records per page show page 1 complete schedule record json request method get uri v4 paymentplan \\? startdate 2013 04 01 enddate 2013 06 30 sortby id direction asc pagesize 2 page 1 lite false response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 4 page 1 itemsperpage 2 response customerid 179643 customerfirstname donald customerlastname duck customercompany nextscheduledate 0001 01 01t07 00 00z balanceremaining 0 numberofpaymentsremaining 1 pauseuntildate null paymentamount 10 firstpaymentdone false dateoflastpaymentmade 2013 05 24t06 00 00z totalamountpaid 0 numberofpaymentsmade 1 totaldueamount 10 totalnumberofpayments 1 paymentsubtype web accountid 358385 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null startdate 2013 05 24t06 00 00z schedulestatus expired executionfrequencytype daily executionfrequencyparameter 0 description null id 110085 lastmodified 2013 05 24t07 30 39z createdon 2013 05 23t18 55 21z customerid 103830 customerfirstname zack customerlastname apple customercompany xyz company nextscheduledate 0001 01 01t07 00 00z balanceremaining 0 numberofpaymentsremaining 0 pauseuntildate null paymentamount 10 firstpaymentdone false dateoflastpaymentmade 2013 05 24t06 00 00z totalamountpaid 10 numberofpaymentsmade 1 totaldueamount 10 totalnumberofpayments 1 paymentsubtype web accountid 149989 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null startdate 2013 05 24t06 00 00z schedulestatus expired executionfrequencytype daily executionfrequencyparameter 0 description null id 110087 lastmodified 2013 05 24t07 30 39z createdon 2013 05 23t19 21 29z customers customer records created viewed managed via api api also used view manage customer records created via web based ui via web payment pages following functions supported detailed section adding customers managing customer payment accounts retrieving customer records retrieving customer list editing customer records listing customer payments listing customer payment schedules deleting customer records adding customers order process payments enter schedules must first create customer record record created attach credit card accounts bank accounts \\( see adding payment accounts \\) processing payments schedules specify id payment account instructs system attach payment schedule associated customer record following sections provide detailed instructions adding new customer records provide detailed definitions customer object attributes customer object create new customer object via api method post uri v4 customer request customer object attributes customer object attributes required attributes firstname string 150 characters maxlastname string 150 characters maxshippingsameasbilling boolean set true indicate separate shipping address even including billing address set false require shippingaddress fields optional attributes billingaddress object billing address required included attributes required except streetaddress2 statecode country 10 characters type valid zipcode streetaddress1 string 250 characters maxstreetaddress2 string optional 250 characters maxcity string 100 characters maxstatecode string valid 2 character state territory code us canadazipcode string 10 characterscountry string optional defaults us max 3 characters shippingaddress object required shippingsameasbilling set true included attributes required except streetaddress2 statecode country 10 characters type valid zipcode streetaddress1 string 250 characters maxstreetaddress2 string optional 250 characters maxcity string 100 characters maxstatecode string valid 2 character state territory code us canadazipcode string 10 characterscountry string optional defaults us max 3 characters company string 50 characters maxcustomeraccount string 28 characters max non system account number assign phone string 10 characters max enter numeric string include parenthesis dashes altphone string 10 characters max enter numeric string include parenthesis dashes mobilephone string 10 characters max enter numeric string include parenthesis dashes fax string 10 characters max enter numeric string include parenthesis dashes email string 100 characters max must valid email address altemail string 100 characters max must valid email address website string 100 characters max must url format notes string 2048 characters max open text field system attributes id integer defaults 0 new requests populated customerid responselastmodified string set system request data disregarded createdon string set system request data disregarded customer object response attributes note listed order appear response indication importance altemail string secondary email address customer \\( 100 characters max must valid email address \\) altphone string secondary phone number customer \\( 10 characters max enter numeric string include parenthesis dashes \\) mobilephone string mobile phone number customer \\( 10 characters max enter numeric string include parenthesis dashes \\) fax string fax number customer \\( 10 characters max enter numeric string include parenthesis dashes \\) website string website associated customer \\( 100 characters max must url format \\) billingaddress object billing address required included attributes required except streetaddress2 statecode country 10 characters type valid zipcode streetaddress1 string first line billing street address \\( 250 characters max \\) streetaddress2 string second line billing street address \\( optional 250 characters max \\) city string billing city \\( 100 characters max \\) statecode string billing state valid 2 character state territory code us canadazipcode string billing postal code 10 characterscountry string billing country \\( optional defaults us max 3 characters \\) shippingsameasbilling boolean set true indicate separate shipping address even including billing address true system set shipping field values equal corresponding billing address fields set false shippingaddress fields linked billing address fields shippingaddress object required shippingsameasbilling set true included attributes required except streetaddress2 statecode country 10 characters type valid zipcode streetaddress1 string primary shipping address line \\( 250 characters max \\) streetaddress2 string second shipping address line \\( optional 250 characters max \\) city string shipping city \\( 100 characters max \\) statecode string shipping state valid 2 character state territory code us canadazipcode string shipping postal code 10 characterscountry string shipping country \\( optional defaults us max 3 characters \\) company string company name customer \\( 50 characters max \\) notes string open text area \\( 2048 characters max \\) customeraccount string account number user entered customer \\( 28 characters max \\) firstname string customer last name \\( 150 characters max \\) lastname string customer first name \\( 150 characters max \\) email string primary email address customer \\( 100 characters max must valid email address \\) phone string primary phone number customer \\( 10 characters max enter numeric string include parenthesis dashes \\) id integer assigned system customerid record id referenced customer api objects defaults 0 new requests populated customerid response lastmodified string set system last time date record changed request data disregardedcreatedon string set system time date record created request data disregarded sample new customer object post php \\? php username user name supersecretcode code timestamp gmdate \\( c \\) hmac hash hmac \\( sha256 timestamp supersecretcode true \\) hmac base64 encode \\( hmac \\) auth authorization psserver accessid username timestamp timestamp signature hmac url https sandbox api paysimple com v4 customer post args json encode \\( array \\( 'firstname' 'frank' 'lastname' 'frankman' \\) \\) headers array \\( auth content type application json charset utf 8 \\) curl curl init \\( \\) curl setopt \\( curl curlopt httpauth curlauth basic \\) curl setopt \\( curl curlopt url url \\) curl setopt \\( curl curlopt returntransfer true \\) curl setopt \\( curl curlopt post true \\) curl setopt \\( curl curlopt httpheader headers \\) curl setopt \\( curl curlopt postfields post args \\) var dump \\( curl exec \\( curl \\) \\) responsecode curl getinfo \\( curl curlinfo http code \\) curl close \\( curl \\) echo br response responsecode br \\? sample new customer object request json post v4 customer billingaddress streetaddress1 123 st streetaddress2 null city denver statecode co zipcode 80202 country null shippingsameasbilling true shippingaddress null company abc company notes note abc company customeraccount tp 117 firstname test lastname person email testperson abcco com phone 8005551212 sample new customer object response json response altemail null altphone null mobilephone null fax null website null billingaddress streetaddress1 123 st streetaddress2 null city denver statecode co zipcode 80202 country null shippingsameasbilling true shippingaddress streetaddress1 123 st streetaddress2 null city denver statecode co zipcode 80202 country null company abc company notes note abc company customeraccount tp 117 firstname test lastname person email testperson abcco com phone 8005551212 id 255939 customerid identifies record api objects \\) lastmodified 2013 10 01t19 16 38 5061103z createdon 2013 10 01t19 16 38 5061103z managing customer payment accounts customer object multiple payment account objects attached 4 0 api supports two payment object types credit card ach payment account objects used creating payments payment schedules customer object associated payment account object specified new payment new schedule request associated newly created payment schedule object example credit card object accountid 12345 associated customer object customerid 6789 payment request posted accountid 12345 resulting payment object associated accountid 12345 customerid 6789 customer object one credit card account set default credit card object one bank account set default ach object default accounts enable direct routes processing payments entering schedules remove need select one several saved payment accounts prior processing payment api used enter new credit card ach \\( bank account \\) objects well view saved accounts edit saved accounts delete saved accounts manage default accounts list accounts associated individual customer object following sections cover functions detail adding payment accounts paysimple 4 0 api supports two types payment account object credit card ach \\( bank account \\) create new payment account object via api method post uri v4 account creditcard v4 account ach request credit card attributes ach attributes type payment account set attributes detailed next sections credit card account request object attributes required attributescustomerid integer system identifier customer record card added id attribute customer object created previous step creditcardnumber string 15 16 digitsexpirationdate string valid date format mm yyyyissuer integer enumeration 12 visa 13 master \\( mastercard \\) 14 amex \\( american express \\) 15 discoverisdefault boolean enter true set card default credit card account customer record otherwise enter false cards attached customer record field default true regardless entry optional attributesbillingzipcode string max 10 characters left blank system use billing zip code \\( zipcode attribute customer object \\) processing payment billingzipcode attribute null 10 characters type valid system attributesthese fields required components credit card account object populated system need include requests id integer defaults 0 new requests populated accountid responselastmodified string set system request data disregarded createdon string set system request data disregarded ach account request object attributes required attributescustomerid integer system identifier customer record card added id attribute customer object created previous step routingnumber string 9 digit bank routing numberaccountnumber string min 4 digits max 100 digits bank account numberbankname string 100 characters max financial institution nameischeckingaccount boolean enter true indicate checking account false indicate savings account general ledger accounts supported isdefault boolean enter true set account default ach account customer record otherwise enter false ach accounts attached customer record field default true regardless entry system attributesthese fields required components ach account object populated system need include requests id integer defaults 0 new requests populated accountid responselastmodified string set system request data disregardedcreatedon string set system request data disregarded sample new credit card account object request json creditcardnumber 4111111111111111 expirationdate 12 2015 issuer 12 billingzipcode 80202 customerid 255939 isdefault false id 0 lastmodified 0001 01 01t07 00 00z createdon 0001 01 01t07 00 00z sample new credit card account object response json creditcardnumber 1111 expirationdate 12 2015 issuer visa billingzipcode 80202 customerid 255939 isdefault true id 395560 lastmodified 2013 10 11t17 41 36 6661404z createdon 2013 10 11t17 41 36 6661404z sample new ach account object request json ischeckingaccount true routingnumber 072000326 accountnumber 751666666 bankname test bank customerid 255939 isdefault true id 0 lastmodified 0001 01 01t07 00 00z createdon 0001 01 01t07 00 00z sample new ach account object response json ischeckingaccount true routingnumber 072000326 accountnumber 6666 bankname test bank customerid 255939 isdefault true id 395564 lastmodified 2013 10 11t17 54 56 7441402z createdon 2013 10 11t17 54 56 7441402z updating payment accounts paysimple 4 0 api supports making limited changes saved credit card ach account objects credit cards expiration date billing zip code changed bank accounts account type \\( checking savings \\) changed time make change saved payment account lastmodified field updated system record time date change change default payment account use setting default payment accounts customer route making change isdefault field supported account route make change saved account must enter new account information new payment account object delete old payment account object updating credit card account objects update credit card account object method put uri v4 account creditcard request required credit card attributes updating ach account objects update ach account object method put uri v4 account ach request required ach attributes original credit card object json creditcardnumber 1111 expirationdate 12 2015 issuer visa billingzipcode 80202 customerid 255939 isdefault true id 395560 lastmodified 2013 10 11t17 41 36z createdon 2013 10 11t17 41 36z credit card update request change expiration date change billing zip code json creditcardnumber 1111 expirationdate 12 2019 issuer visa billingzipcode 80433 customerid 255939 isdefault true id 395560 credit card update response \\( updated credit card object \\) json creditcardnumber 1111 expirationdate 12 2019 issuer visa billingzipcode 80433 customerid 255939 isdefault true id 395560 lastmodified 2013 11 07t22 11 08 8272z createdon 2013 10 11t17 41 36z original ach object json ischeckingaccount true routingnumber 072000326 accountnumber 8888 bankname bank two customerid 255939 isdefault false id 396037 lastmodified 2013 11 07t19 22 08z createdon 2013 10 15t18 33 56z ach update request change savings account json note would necessary original setting account type incorrect creditcardnumber 1111 expirationdate 12 2019 issuer visa billingzipcode 80433 customerid 255939 isdefault true id 395560 ach update response \\( updated ach object \\) json ischeckingaccount false routingnumber 072000326 accountnumber 8888 bankname bank two customerid 255939 isdefault false id 396037 lastmodified 2013 11 07t22 17 07 8681045z createdon 2013 10 15t18 33 56z setting default payment accounts default payment accounts used quickly process new payments enter new schedules without requiring selection list available payment accounts see using default credit card payment account using default ach payment account instructions entering payments using default accounts default credit card ach accounts changed via customer route account route making change always set new default account never un designate existing default account default designation assigned new payment account entered \\( method post \\) setting isdefault field true however cannot changed changing value isdefault field existing payment account object \\( method put \\) delete existing default credit card ach account system automatically designate oldest remaining account deleted type new default example credit card accountid 1234 createdon 12 1 2013 set default credit card credit card accountid 789 createdon 11 1 2013 credit card accountid 456 createdon 10 1 2013 credit card accoutid 1234 deleted system set credit card accountid 456 new default credit card would like different account set default need use route described section change set credit card ach account default method put uri v4 customer customerid accountid customerid customer record id account associated accountid id account want set default system determine whether provided accountid credit card ach object make default account change applicable response body set default request simply see 204 response header sample request set new default ach account json current ach set customerid 255939 ischeckingaccount true routingnumber 072000326 accountnumber 6666 bankname test bank customerid 255939 isdefault false id 395564 lastmodified 2013 11 08t18 38 55z createdon 2013 10 11t17 54 56z ischeckingaccount false routingnumber 072000326 accountnumber 8888 bankname bank two customerid 255939 isdefault false id 396037 lastmodified 2013 11 08t18 38 55z createdon 2013 10 15t18 33 56z ischeckingaccount true routingnumber 072000326 accountnumber 4999 bankname test bank 9 customerid 255939 isdefault true id 399738 lastmodified 2013 11 08t18 38 55z createdon 2013 11 08t18 38 15z request change accountid 396037 default json put v4 customer 255939 396037 updated ach set customerid 255939 ischeckingaccount false routingnumber 072000326 accountnumber 8888 bankname bank two customerid 255939 isdefault true id 396037 lastmodified 2013 11 08t18 48 53z createdon 2013 10 15t18 33 56z ischeckingaccount true routingnumber 072000326 accountnumber 4999 bankname test bank 9 customerid 255939 isdefault false id 399738 lastmodified 2013 11 08t18 48 53z createdon 2013 11 08t18 38 15z ischeckingaccount true routingnumber 072000326 accountnumber 6666 bankname test bank customerid 255939 isdefault false id 395564 lastmodified 2013 11 08t18 48 53z createdon 2013 10 11t17 54 56z sample request set new default credit card json current credit card set customerid 255939 creditcardnumber 1111 expirationdate 12 2019 issuer visa billingzipcode 80433 customerid 255939 isdefault true id 395560 lastmodified 2013 11 07t22 11 08z createdon 2013 10 11t17 41 36z creditcardnumber 5454 expirationdate 08 2018 issuer master billingzipcode 80202 customerid 255939 isdefault false id 396036 lastmodified 2013 11 07t22 11 08z createdon 2013 10 15t18 33 25z request change accountid 396036 default json put v4 customer 255939 396036 updated credit card set customerid 255939 creditcardnumber 5454 expirationdate 08 2018 issuer master billingzipcode 80202 customerid 255939 isdefault true id 396036 lastmodified 2013 11 07t22 11 08z createdon 2013 10 15t18 33 25z creditcardnumber 1111 expirationdate 12 2019 issuer visa billingzipcode 80433 customerid 255939 isdefault false id 395560 lastmodified 2013 11 07t22 11 08z createdon 2013 10 11t17 41 36z retrieving default payment accounts default payment accounts used quickly process new payments enter new schedules without requiring selection list available payment accounts see using default credit card payment account using default ach payment account instructions entering payments using default accounts instructions setting default payment accounts provided previous section following sections provide instructions retrieving accountid default credit card default ach account associated particular customer object retrieving default credit card customerid retrieve default credit card accountid method get uri v4 customer customerid defaultcreditcard response attribute needed accountid retrieving default ach account customerid retrieve default ach accountid method get uri v4 customer customerid defaultach response attribute needed accountid sample default credit card request json uri v4 customer 255939 defaultcreditcard sample default credit card response json creditcardnumber 1111 expirationdate 12 2015 issuer visa billingzipcode 80202 customerid 255939 isdefault true id 395560 lastmodified 2013 10 11t17 41 36z createdon 2013 10 11t17 41 36z listing payment accounts use api generate list payment accounts attached single customer object \\( cannot generate list payment accounts client account \\) generate list includes customer saved payment accounts create lists credit card accounts ach accounts use list select accountid would like use creating new payment payment schedule lite version payment account object lists contain complete set credit card ach account object elements \\( see ach account response object attributes credit card account response object attributes detailed description payment account object attributes \\) following sections detail generate lists list credit card accounts customer retrieve credit card account objects associated customer record method get uri v4 customer customerid creditcardaccounts customerid id customer whose credit card accounts want list list ach accounts customer retrieve ach account objects associated customer record method get uri v4 customer customerid achaccounts customerid id customer whose credit card accounts want list list payment accounts customer retrieve payment account objects associated customer record method get uri v4 customer customerid accounts customerid id customer whose credit card accounts want list note credit cards always listed ahead ach accounts sample credit card accounts request json uri v4 customer 255939 creditcardaccounts sample credit card accounts responsee json creditcardnumber 1111 expirationdate 12 2015 issuer visa billingzipcode 80202 customerid 255939 isdefault true id 395560 lastmodified 2013 10 11t17 41 36z createdon 2013 10 11t17 41 36z creditcardnumber 5454 expirationdate 08 2018 issuer master billingzipcode 80202 customerid 255939 isdefault false id 396036 lastmodified 2013 10 15t18 33 25z createdon 2013 10 15t18 33 25z sample ach accounts request json uri v4 customer 255939 achaccounts sample ach accounts responsee json ischeckingaccount true routingnumber 072000326 accountnumber 6666 bankname test bank customerid 255939 isdefault true id 395564 lastmodified 2013 10 11t17 54 56z createdon 2013 10 11t17 54 56z ischeckingaccount true routingnumber 072000326 accountnumber 8888 bankname bank two customerid 255939 isdefault false id 396037 lastmodified 2013 10 15t18 33 56z createdon 2013 10 15t18 33 56z sample payment accounts request json uri v4 customer 255939 accounts sample payment accounts responsee json creditcardnumber 1111 expirationdate 12 2015 issuer visa billingzipcode 80202 customerid 255939 isdefault true id 395560 lastmodified 2013 10 11t17 41 36z createdon 2013 10 11t17 41 36z creditcardnumber 5454 expirationdate 08 2018 issuer master billingzipcode 80202 customerid 255939 isdefault false id 396036 lastmodified 2013 10 15t18 33 25z createdon 2013 10 15t18 33 25z ischeckingaccount true routingnumber 072000326 accountnumber 6666 bankname test bank customerid 255939 isdefault true id 395564 lastmodified 2013 10 11t17 54 56z createdon 2013 10 11t17 54 56z ischeckingaccount true routingnumber 072000326 accountnumber 8888 bankname bank two customerid 255939 isdefault false id 396037 lastmodified 2013 10 15t18 33 56z createdon 2013 10 15t18 33 56z retrieving customer records use api retrieve full details single customer object retrieve list customer records saved client account customer objects displayed two formats complete lite complete default return lite record applying lite filter get uri request follows v4 customer \\? lite true example provided complete customer object json altemail altphone mobilephone null fax website billingaddress streetaddress1 123 st streetaddress2 city denver statecode co zipcode 80202 country us shippingsameasbilling true shippingaddress streetaddress1 123 st streetaddress2 city denver statecode co zipcode 80202 country us company notes customeraccount firstname test lastname guy email lisa paysimple com phone id 219175 lastmodified 2013 10 31t17 07 13z createdon 2013 05 24t19 24 11z lite customer object json company null firstname test lastname guy id 219175 customer object attributes note listed order appear response indication importance altemail string secondary email address customer \\( 100 characters max must valid email address \\) altphone string secondary phone number customer \\( 10 characters max enter numeric string include parenthesis dashes \\) mobilephone string mobile phone number customer \\( 10 characters max enter numeric string include parenthesis dashes \\) fax string fax number customer \\( 10 characters max enter numeric string include parenthesis dashes \\) website string website associated customer \\( 100 characters max must url format \\) billingaddress object billing address required included attributes required except streetaddress2 statecode country 10 characters type valid zipcode streetaddress1 string first line billing street address \\( 250 characters max \\) streetaddress2 string second line billing street address \\( optional 250 characters max \\) city string billing city \\( 100 characters max \\) statecode string billing state valid 2 character state territory code us canada zipcode string billing postal code 10 characters country string billing country \\( optional defaults us max 3 characters \\) shippingsameasbilling boolean set true indicate separate shipping address even including billing address true system set shipping field values equal corresponding billing address fields set false shippingaddress fields linked billing address fields shippingaddress object required shippingsameasbilling set true included attributes required except streetaddress2 statecode country 10 characters type valid zipcode streetaddress1 string primary shipping address line \\( 250 characters max \\) streetaddress2 string second shipping address line \\( optional 250 characters max \\) city string shipping city \\( 100 characters max \\) statecode string shipping state valid 2 character state territory code us canada zipcode string shipping postal code 10 characters country string shipping country \\( optional defaults us max 3 characters \\) company string company name customer \\( 50 characters max \\) notes string open text area \\( 2048 characters max \\) customeraccount string account number user entered customer \\( 28 characters max \\) firstname string customer last name \\( 150 characters max \\) lastname string customer first name \\( 150 characters max \\) email string primary email address customer \\( 100 characters max must valid email address \\) phone string primary phone number customer \\( 10 characters max enter numeric string include parenthesis dashes \\) id integer assigned system customerid record id referenced customer api objects defaults 0 new requests populated customerid response lastmodified string set system last time date record changed request data disregarded createdon string set system time date record created request data disregarded retrieving single customer record single customer objects retrieved complete form lite version available retrieve complete customer object via api method get uri v4 customer customerid query id customer object want retrieve sample request json v4 customer 255939 sample response json altemail altphone mobilephone null fax website billingaddress streetaddress1 123 st streetaddress2 city denver statecode co zipcode 80202 country us shippingsameasbilling true shippingaddress streetaddress1 123 st streetaddress2 city denver statecode co zipcode 80202 country us company abc company notes note abc company customeraccount tp 117 firstname test lastname person email lisa paysimple com phone 8005551212 id 255939 lastmodified 2013 10 11t18 12 26z createdon 2013 10 01t19 16 38z retrieving customer list api used return list customer records saved particular client account generated list complete format lite format ideal creating summary tables snapshots full list customers grow quite large unwieldy api uses paging limit number results returned single request default show oldest 200 customers use pagination filters govern number results returned response well response page would like retrieve pagination filters filters used part get uri request return list customers page set results want return 1 returns first page 2 second etc filter included request defaults 1 pagesize number customer records per page filter included request defaults 200 meta section response echoes request displays total number records page results returned number results returned per page customer list sorting returning list customers complete lite form use sorting calls control attribute list sorted whether sort ascending descending order default sort ascending customerid results listing oldest customers first sort instruction comprised two calls first determines field customers sorted second determines whether sort high low low high calls used part get uri request designate sort parameters sortby attribute sort firstname sort alphabetically customer first name lastname sort alphabetically customer last name company sort alphabetically customer company name billingaddress city sort alphabetically customer billing city name billingaddress state sort alphabetically customer billing state province abbreviation billingaddress zip sort alpha numerically customer billing postal code canadian postal codes beginning letter considered higher us postal codes beginning number thus descending sort would z 0 ascending sort 0 z billingaddress country sort alphabetically customer billing country shippingaddress city sort alphabetically customer shipping city name shippingaddress state sort alphabetically customer shipping state province abbreviation shippingaddress zip sort alpha numerically customer shipping postal code canadian postal codes beginning letter considered higher us postal codes beginning number thus descending sort would z 0 ascending sort 0 z shippingaddress country sort alphabetically customer shipping country direction order sort asc ascending sort low high z direction selected null values appear first list desc descending sort high low z direction selected null values appear last list meta section response displays number customers match pagination filters applied part query note default pagination filter 200 records per page applied unless alternate pagination filter included uri sample sorting calls sort customer last name list ascending order \\( z \\) method get uri v4 customer \\? sortby lastname direction asc list us customers canadian customers method get uri v4 customer \\? sortby billingaddress country direction desc sort company name list ascending order \\( z \\) method get uri v4 customer \\? sortby company direction asc customer list request examples customer list sorting paging combined create type response require additionally customer lists return either complete lite records though single response cannot contain following representative samples compound customer list requests associated responses note examples purposely use small page sizes order keep response displays readable note use sortby field included lite record sort still used generating list lite records even though sortby field appear response customer list example 1 default customer list response \\( 200 oldest customers \\) json method get uri v4 customer response errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 138 page 1 itemsperpage 200 customer list example 2 50 record customer list response \\( 50 oldest customers \\) json method get uri v4 customer \\? pagesize 50 response errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 138 page 1 itemsperpage 50 customer list example 3 50 record customer list page two response \\( second oldest 50 customers \\) json method get uri v4 customer \\? pagesize 50 page 2 response errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 138 page 2 itemsperpage 50 sample customer list response page page size filters applied json method get uri v4 customer \\? page 3 pagesize 2 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 138 page 3 itemsperpage 2 response altemail altphone mobilephone null fax website billingaddress streetaddress1 22 tardis trail streetaddress2 city teaneck statecode nj zipcode 07666 country us shippingsameasbilling true shippingaddress streetaddress1 22 tardis trail streetaddress2 city teaneck statecode nj zipcode 07666 country us company bad wolf corporation notes customeraccount firstname rose lastname tyler email lisa paysimple com phone id 94659 lastmodified 2013 02 05t21 44 22z createdon 2010 05 03t17 13 13z altemail altphone mobilephone null fax website billingaddress streetaddress1 123 st streetaddress2 city denver statecode co zipcode 80202 country us shippingsameasbilling false shippingaddress streetaddress1 null streetaddress2 null city null statecode null zipcode null country us company notes customeraccount firstname sarah jane lastname smith email ssmith drwho com phone id 94660 lastmodified 2010 05 03t17 13 44z createdon 2010 05 03t17 13 44z sample lite customer list response page page size filters applied json method get uri v4 payment \\? page 3 pagesize 2 lite true response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 138 page 3 itemsperpage 2 response company bad wolf corporation firstname rose lastname tyler id 94659 company firstname sarah jane lastname smith id 94660 customers sorted z last name lite record 2 customer records per page show page 2 json method get uri v4 customer \\? sortby lastname direction asc pagesize 2 page 2 lite true response meta meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 11 page 2 itemsperpage 2 response company null firstname test lastname gal id 255932 company canada co firstname canada lastname girl id 260236 customers sorted z company name 2 customer records per page show page 3 json method get uri v4 customer \\? sortby company direction desc pagesize 2 page 3 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 11 page 3 itemsperpage 2 response altemail null altphone null mobilephone null fax null website null billingaddress streetaddress1 999 way streetaddress2 suite 700 city denver statecode co zipcode 80202 country us shippingsameasbilling true shippingaddress streetaddress1 999 way streetaddress2 suite 700 city denver statecode co zipcode 80202 country us company company notes null customeraccount null firstname lastname one email anyone anyco com phone 8005556789 id 260234 lastmodified 2013 11 06t19 22 50z createdon 2013 11 06t19 22 50z altemail altphone mobilephone null fax website billingaddress streetaddress1 123 st streetaddress2 city denver statecode co zipcode 80202 country us shippingsameasbilling true shippingaddress streetaddress1 123 st streetaddress2 city denver statecode co zipcode 80202 country us company abc company notes note abc company customeraccount tp 117 firstname test lastname person email lisa paysimple com phone 8005551212 id 255939 lastmodified 2013 10 11t18 12 26z createdon 2013 10 01t19 16 38z editing customer records use api make changes following customer object attributes altemail string changed valid email address set null altphone string changed 10 digit string set null mobilephone string changed 10 digit string set null fax string changed 10 digit string set null website string 100 characters max must url format changed url set null billingaddress object billing address required included attributes required except streetaddress2 statecode country 10 characters type valid zipcode streetaddress1 string first line billing street address changed required streetaddress2 string second line billing street address changed required set null city string changed required statecode string valid 2 character state territory code us canada changed required zipcode string billing postal code 10 characters changed required country string defaults us max 3 characters changed us shippingsameasbilling boolean set true indicate separate shipping address even including billing address true system set shipping field values equal corresponding billing address fields set false shippingaddress fields linked billing address fields may entered separately shippingaddress object shipping address fields customer record shippingsameasbilling true fields linked corresponding billing fields cannot individually changed otherwise values independent billing address may changed set null one shipping address field used required except streetaddress2 statecode country streetaddress1 string primary shipping address line changed required streetaddress2 string second shipping address line changed required set null city string changed required statecode string valid 2 character state territory code us canada changed required zipcode string shipping postal code 10 characters changed required country string defaults us max 3 characters changed us company string company name customer changed desired notes string open descriptive field changed required customeraccount string account number assigned customer changed required firstname string customer last name changed required lastname string customer first name changed required email string 100 characters max must valid email address changed required phone string 10 characters max numeric string without parenthesis dashes changed required note changes entered fields system ignore retain existing values must include entire set customer object attributes change request even changing one fields failure result non included fields set null note know field set null want keep way need include request edit customer record via api method put uri v4 customer request customer object attributes id specified identify customer record updated original customer object json altemail null field null may required left edit request altphone null mobilephone null fax null website null billingaddress streetaddress1 123 st streetaddress2 city denver statecode co zipcode 80202 country us shippingsameasbilling true shippingaddress streetaddress1 123 st streetaddress2 city denver statecode co zipcode 80202 country us company lisa 's new test company notes null customeraccount null firstname lisa lastname test email lisa testco com phone 3035551212 id 255888 lastmodified 2013 11 01t23 30 12 1201165z createdon 2013 10 01t18 22 47z sample customer record edit request json \\( change company name add note company name change \\) billingaddress streetaddress1 123 st streetaddress2 city denver statecode co zipcode 80202 country us shippingsameasbilling true shippingaddress streetaddress1 123 st streetaddress2 city denver statecode co zipcode 80202 country us company lisa 's company name changed notes company name changed november 6 2013 firstname lisa lastname test email lisa testco com phone 3035551212 id 255888 sample customer object edit response json altemail null altphone null mobilephone null fax null website null billingaddress streetaddress1 123 st streetaddress2 city denver statecode co zipcode 80202 country us shippingsameasbilling true shippingaddress streetaddress1 123 st streetaddress2 city denver statecode co zipcode 80202 country us company lisa 's company name changed notes company name changed november 6 2013 customeraccount null firstname lisa lastname test email lisa testco com phone 3035551212 id 255888 lastmodified 2013 11 06t23 43 58 3091828z createdon 2013 10 01t18 22 47z listing customer payments api used return list payments processed particular customer generated list complete format lite format ideal creating summary tables snapshots full list transactions grow quite large unwieldy api uses paging limit number results returned single request default show recent 200 transactions use pagination filters govern number results returned response well response page would like retrieve also filter list payments date status sort resulting list name company name amount date status note already know paymentid payment want look retrieve directly using method described retrieve payment records use customer route described generate payment list retrieve full list payments associated single customer method get uri v4 customer customerid payments customerid id associated customer object would like retrieve payments sample requests get full payment objects get v4 customer 255939 payments get lite payment objects v4 customer 255939 payments \\? lite true sample complete payment object json customerid 255939 customerfirstname test customerlastname person customercompany abc company referenceid 0 status posted recurringscheduleid 0 paymenttype ach paymentsubtype tel providerauthcode approved tracenumber 93e36116 6f29 4a2c 9ab0 b824fcb4f735 paymentdate 2013 10 15t06 00 00z returndate null estimatedsettledate 2013 10 18t06 00 00z actualsettleddate null canvoiduntil 2013 10 15t23 00 00z failuredata code null description null merchantactiontext null accountid 395564 invoiceid null amount 9 44 isdebit false invoicenumber null purchaseordernumber null orderid null description null latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1610692 lastmodified 2013 10 15t20 37 29z createdon 2013 10 15t20 37 29z lite payment object json customerfirstname test customerlastname person status posted paymentdate 2013 10 15t06 00 00z amount 9 44 id 1610692 pagination filters customer payments list filters used part get uri request return list transactions specific customer page set results want return 1 returns first page 2 second etc filter included request defaults 1 pagesize number payment records per page filter included request defaults 200 meta section response echoes request displays total number records page results returned number results returned per page payment list example 1 default customer payment list response \\( 200 recent transactions \\) json method get uri v4 customer 255939 payments response errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 98 page 1 itemsperpage 200 payment list example 2 50 record customer payment list response \\( 50 recent transactions \\) json method get uri v4 customer 255939 payments \\? pagesize 50 response errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 98 page 1 itemsperpage 50 payment list example 3 customer payment list 10 payments per page page 3 response \\( third recent 10 transactions \\) json method get uri v4 customer 255939 payments \\? page 3 pagesize 10 response errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 98 page 3 itemsperpage 10 sample customer payment list response page page size filters applied json method get uri v4 customer 255939 payments \\? page 2 pagesize 2 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 98 page 2 itemsperpage 2 response customerid 255939 customerfirstname test customerlastname person customercompany abc company referenceid 0 status settled recurringscheduleid 118163 paymenttype cc paymentsubtype moto providerauthcode tracenumber 728528 paymentdate 2013 11 07t07 00 00z returndate null estimatedsettledate 2013 11 11t07 00 00z actualsettleddate 2013 11 08t11 00 00z canvoiduntil 2013 11 08t03 45 00z failuredata code null description null merchantactiontext null accountid 396036 invoiceid null amount 16 isdebit false invoicenumber null purchaseordernumber null orderid null description null latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1690752 lastmodified 2013 11 08t11 00 00z createdon 2013 11 07t08 30 22z customerid 255939 customerfirstname test customerlastname person customercompany abc company referenceid 0 status settled recurringscheduleid 118173 paymenttype cc paymentsubtype moto providerauthcode tracenumber 932611 paymentdate 2013 11 07t07 00 00z returndate null estimatedsettledate 2013 11 11t07 00 00z actualsettleddate 2013 11 08t11 00 00z canvoiduntil 2013 11 08t03 45 00z failuredata code null description null merchantactiontext null accountid 395560 invoiceid null amount 5 isdebit false invoicenumber null purchaseordernumber null orderid null description null latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1690750 lastmodified 2013 11 08t11 00 00z createdon 2013 11 07t08 30 22z sample lite customer payment list response page page size filters applied json method get uri v4 customer 255939 payments \\? page 2 pagesize 2 lite true response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 98 page 2 itemsperpage 2 response customerfirstname test customerlastname person status settled paymentdate 2013 11 07t07 00 00z amount 16 id 1690752 customerfirstname test customerlastname person status settled paymentdate 2013 11 07t07 00 00z amount 5 id 1690750 date filters customer payment list requesting transaction list part customer payments request use date filters return transactions given date range default return transactions regardless date date format uri requests yyyy mm dd filters used part get uri request return list transactions individual customer startdate set filter return transactions processed given date enddate set filter return transactions processed given date meta section response displays number transactions match date filter well pagination filters applied part query date filter example 1 default payment list response json method get uri v4 customer 255939 payments \\? startdate 2013 10 30 response errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 98 page 1 itemsperpage 200 date filter example 2 transactions october 30 2013 json method get uri v4 customer 255939 payments \\? startdate 2013 10 30 response errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 41 page 1 itemsperpage 200 date filter example 3 transactions october 15 2013 json method get uri v4 customer 255939 payments \\? enddate 2013 10 15 response errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 15 page 1 itemsperpage 200 date filter example 4 customer transactions october 1 2013 october 31 2013 json method get uri v4 customer 255939 payments \\? startdate 2013 10 01 enddate 2013 10 31 response errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 70 page 1 itemsperpage 200 sample lite customer payment list response start end date filters applied json method get uri v4 customer 255939 payments \\? startdate 2013 11 02 enddate 2013 11 03 lite true response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 5 page 1 itemsperpage 200 response customerfirstname test customerlastname person status settled paymentdate 2013 11 03t06 00 00z amount 16 id 1688152 customerfirstname test customerlastname person status settled paymentdate 2013 11 03t06 00 00z amount 5 id 1688150 customerfirstname test customerlastname person status settled paymentdate 2013 11 02t06 00 00z amount 16 id 1687606 customerfirstname test customerlastname person status settled paymentdate 2013 11 02t06 00 00z amount 5 id 1687605 customerfirstname test customerlastname person status settled paymentdate 2013 11 02t06 00 00z amount 20 id 1687602 status filter customer payment list returning list payments associated particular customer filter list status generate lists include payments single status group one statuses default return payments statuses following used part get uri request status filter return list customer payments authorized credit card payments refunds authorized yet submitted processing chargeback ach payment disputed customer failed attempted transactions never authorized completed pending initial stage every transaction sent authorization system assigns status waiting authorization response rare cases communication disrupted system gets response transaction remain pending status posted credit card ach payments entered system yet settled initial status authorized unsettled ach transaction refundsettled settled credit card ach refund transaction returned ach payments unsuccessful reason non sufficient funds chargeback reversed transaction reversed \\( refunded \\) settled transaction refunded status transaction changes reversed \\( note status displays refunded paysimple ui \\) reversensf ach transaction failed customer insufficient funds account cover payment \\( note status displays returnednsf paysimple ui \\) reverseposted credit transaction generated settled ach transaction refunded refund settles status changes refundsettled \\( note status displays refund \\( posted \\) paysimple ui \\) settled settled ach credit card payment voided voided ach credit card transaction meta section response displays number transactions match status filter well pagination filters applied part query meta section response displays number transactions match status filter well pagination filters applied part query status filter example 1 default customer payment list response json method get uri v4 customer 255939 payments response errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 98 page 1 itemsperpage 200 status filter example 2 authorized payments customer json method get uri v4 customer 255939 payments \\? status authorized response errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 3 page 1 itemsperpage 200 status filter example 3 returned ach transactions customer \\( status returned reversensf \\) json method get uri v4 customer 255939 payments \\? status returned reversensf response errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 2 page 1 itemsperpage 200 status filter example 4 transactions involved refunds \\( status reversed reverseposted refundsettled \\) json method get uri v4 customer 255939 payments \\? status reversed reverseposted refundsettled response errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 5 page 1 itemsperpage 200 sample lite customer payment list response reversed status filter applied \\( customer refunded payments \\) json method get uri v4 customer 255939 payments \\? status reversed lite true response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 3 page 1 itemsperpage 200 response customerfirstname test customerlastname person status reversed paymentdate 2013 11 06t07 00 00z amount 25 id 1690207 customerfirstname test customerlastname person status reversed paymentdate 2013 11 04t07 00 00z amount 22 id 1688913 customerfirstname test customerlastname person status reversed paymentdate 2013 10 11t06 00 00z amount 12 id 1608311 customer payment list sorting returning list customer payments complete lite form use sorting calls control attribute list sorted whether sort ascending descending order default sort decending paymentid results listing customer recent transactions first sort instruction comprised two calls first determines field payments sorted second determines whether sort high low low high secondary sort always ascending paymentid thus one payment value sortby field listed ascending order paymentid effectively means oldest newest calls used part get uri request designate sort parameters sortby attribute sort returndate sort date ach transaction updated returned returned nsf estimatedsettledate sort estimated settle date actualsettleddate sort actual settle date paymentdate sort date transaction entered paymenttype sort type payment groups ach transactions cc transactions paymentsubtype sort payment sub type group ach ccd ach ppd ach tel ach web cc moto cc swipe amount sort transaction amount direction order sort asc ascending sort low high z direction selected null values appear first list desc descending sort high low z direction selected null values appear last list sample sorting calls sort payment date list descending order \\( newest oldest \\) method get uri v4 customer 255939 payments \\? sortby paymentdate direction desc list ach payments credit card payments method get uri v4 customer 255939 payments \\? sortby paymenttype direction asc list ach returns first list payments method get uri v4 customer 255939 payments \\? sortby returndate direction desc list settled payments first newest oldest method get uri v4 customer 255939 payments \\? sortby actualsettleddate direction desc customer payment list request examples payment list sorting filtering paging combined create type response require additionally customer payment lists return either complete lite records though single response cannot contain following representative samples compound customer payment list requests associated responses note examples purposely use small page sizes order keep response displays readable customer settled payments processed october 2013 sorted amount descending order lite record 2 payment records per page show page 1 json method get uri v4 customer 255939 payments \\? status settled startdate 2013 10 01 enddate 2013 10 31 sortby amount direction desc lite true page 1 pagesize 2 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 71 page 1 itemsperpage 2 response customerfirstname test customerlastname person status settled paymentdate 2013 10 29t19 49 15z amount 100 id 1618760 customerfirstname test customerlastname person status settled paymentdate 2013 10 29t19 57 12z amount 50 id 1618762 payments entered customer current date sorted ascending expected settle date 2 records per page show page 3 json method get uri v4 customer 255939 payments \\? startdate 2013 10 17 enddate 2013 10 17 sortby estimatedsettledate direction asc page 3 pagesize 2 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 8 page 3 itemsperpage 2 response customerid 255939 customerfirstname test customerlastname person customercompany abc company referenceid 0 status voided recurringscheduleid 0 paymenttype cc paymentsubtype moto providerauthcode approved tracenumber 419977 paymentdate 2013 10 17t06 00 00z returndate null estimatedsettledate 2013 10 21t06 00 00z actualsettleddate null canvoiduntil 2013 10 18t02 45 00z failuredata code null description null merchantactiontext null accountid 395560 invoiceid null amount 13 isdebit true invoicenumber null purchaseordernumber null orderid null description null latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1611881 lastmodified 2013 10 17t17 16 41z createdon 2013 10 17t17 15 23z customerid 255939 customerfirstname test customerlastname person customercompany abc company referenceid 0 status voided recurringscheduleid 0 paymenttype ach paymentsubtype web providerauthcode approved tracenumber 7cafb8cc 9413 4af5 9e67 d4789fb1499f paymentdate 2013 10 17t06 00 00z returndate null estimatedsettledate 2013 10 22t06 00 00z actualsettleddate null canvoiduntil 2013 10 17t23 00 00z failuredata code null description null merchantactiontext null accountid 395564 invoiceid null amount 7 isdebit false invoicenumber null purchaseordernumber null orderid null description null latitude null longitude null successreceiptoptions null failurereceiptoptions null id 1611848 lastmodified 2013 10 17t17 11 00z createdon 2013 10 17t16 44 07z listing customer payment schedules api used return list payment schedules attached individual customer object also used return list recurring payment schedules payment plan schedules attached customer generated lists complete format lite format ideal creating summary tables snapshots full list schedules grow quite large unwieldy api uses paging limit number results returned single request default show recent 200 schedules use pagination filters govern number results returned response well response page would like retrieve also filter list schedules start date status sort resulting list name company name amount date status frequency schedule type note already know scheduleid schedule want look retrieve directly using method described retrieve payment schedule use customer route described generate schedules list listing schedules customer use paymentschedules route customerid return set schedules attached single customer record list returned either full lite format detailed descriptions schedule object attributes see payment schedule response object attributes recurring payment response object attributes payment plan response object attributes note lite payment schedule record one contains schedule payment amount \\( amount included field either recurringpayment paymentplan lite records \\) thus would like use lite record display list schedules includes payment amount always use paymentschedules route generate note schedules lite list generated using paymentschedules route listed oldest newest default retrieve list schedules customer method get uri v4 customer customerid paymentschedules customerid id associated customer object would like retrieve schedules retrieve list schedules customer using lite records method get uri v4 customer customerid paymentschedules \\? lite true customerid id associated customer object would like retrieve schedules sample request json get v4 customer 219175 paymentschedules sample response json meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 3 page 1 itemsperpage 200 response paymentplans payment plans always listed first full records customerid 219175 customerfirstname test customerlastname guy customercompany nextscheduledate 2013 12 01t07 00 00z balanceremaining 0 numberofpaymentsremaining 5 pauseuntildate null paymentamount 20 firstpaymentdone false dateoflastpaymentmade null totalamountpaid 0 numberofpaymentsmade 0 totaldueamount 100 totalnumberofpayments 5 paymentsubtype web accountid 373191 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null swipedata null startdate 2013 12 01t07 00 00z schedulestatus active executionfrequencytype firstofmonth executionfrequencyparameter 1 description null id 118830 lastmodified 2013 11 11t19 55 42z createdon 2013 11 11t19 55 42z recurringpayments recurring payments grouped listed second customerid 219175 customerfirstname test customerlastname guy customercompany nextscheduledate 0001 01 01t07 00 00z pauseuntildate null firstpaymentdone false dateoflastpaymentmade 2013 05 31t06 00 00z totalamountpaid 160 numberofpaymentsmade 8 enddate 2013 12 01t07 00 00z paymentamount 90 paymentsubtype ppd accountid 373191 invoicenumber orderid null firstpaymentamount 0 firstpaymentdate null swipedata null startdate 2013 05 24t06 00 00z schedulestatus expired executionfrequencytype daily executionfrequencyparameter 0 description id 110165 lastmodified 2013 10 31t17 11 15z createdon 2013 05 24t19 25 26z customerid 219175 customerfirstname test customerlastname guy customercompany nextscheduledate 2013 12 01t07 00 00z pauseuntildate null firstpaymentdone false dateoflastpaymentmade null totalamountpaid 0 numberofpaymentsmade 0 enddate null paymentamount 12 paymentsubtype web accountid 373191 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null swipedata null startdate 2013 11 15t07 00 00z schedulestatus active executionfrequencytype firstofmonth executionfrequencyparameter 1 description null id 118829 lastmodified 2013 11 11t19 54 27z createdon 2013 11 11t19 54 27z sample request json get v4 customer 219175 paymentschedules \\? lite true sample response json meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 3 page 1 itemsperpage 200 response paymentscheduletype recurringpayment customerfirstname test customerlastname guy customerid 219175 schedulestatus expired nextpaymentdate 0001 01 01t07 00 00z paymentamount 90 id 110165 lastmodified 2013 10 31t17 11 15z createdon 2013 05 24t19 25 26z paymentscheduletype recurringpayment customerfirstname test customerlastname guy customerid 219175 schedulestatus active nextpaymentdate 2013 12 01t07 00 00z paymentamount 12 id 118829 lastmodified 2013 11 11t19 54 27z createdon 2013 11 11t19 54 27z paymentscheduletype paymentplan customerfirstname test customerlastname guy customerid 219175 schedulestatus active nextpaymentdate 2013 12 01t07 00 00z paymentamount 20 id 118830 lastmodified 2013 11 11t19 55 42z createdon 2013 11 11t19 55 42z listing recurring payment schedules customer use route return list recurring payment schedules attached single customer record list returned either complete lite format detailed descriptions schedule object attributes see recurring payment response object attributes retrieve list recurring payment objects customer method get uri v4 customer customerid recurringpayments customerid id associated customer object would like retrieve schedules retrieve list recurring payment objects customer using lite records method get uri v4 customer customerid recurringpayments \\? lite true customerid id associated customer object would like retrieve schedules note lite recurring payment schedule records include schedule payment amount sample request json get v4 customer 219175 recurringpayments sample response json meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 2 page 1 itemsperpage 200 response customerid 219175 customerfirstname test customerlastname guy customercompany nextscheduledate 0001 01 01t07 00 00z pauseuntildate null firstpaymentdone false dateoflastpaymentmade 2013 05 31t06 00 00z totalamountpaid 160 numberofpaymentsmade 8 enddate 2013 12 01t07 00 00z paymentamount 90 paymentsubtype ppd accountid 373191 invoicenumber orderid null firstpaymentamount 0 firstpaymentdate null swipedata null startdate 2013 05 24t06 00 00z schedulestatus expired executionfrequencytype daily executionfrequencyparameter 0 description id 110165 lastmodified 2013 10 31t17 11 15z createdon 2013 05 24t19 25 26z customerid 219175 customerfirstname test customerlastname guy customercompany nextscheduledate 2013 12 01t07 00 00z pauseuntildate null firstpaymentdone false dateoflastpaymentmade null totalamountpaid 0 numberofpaymentsmade 0 enddate null paymentamount 12 paymentsubtype web accountid 373191 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null swipedata null startdate 2013 11 15t07 00 00z schedulestatus active executionfrequencytype firstofmonth executionfrequencyparameter 1 description null id 118829 lastmodified 2013 11 11t19 54 27z createdon 2013 11 11t19 54 27z sample request json get v4 customer 219175 recurringpayments \\? lite true sample response json meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 2 page 1 itemsperpage 200 response customerid 219175 customerfirstname test customerlastname guy nextscheduledate 0001 01 01t07 00 00z schedulestatus expired executionfrequencytype daily executionfrequencyparameter 0 id 110165 customerid 219175 customerfirstname test customerlastname guy nextscheduledate 2013 12 01t07 00 00z schedulestatus active executionfrequencytype firstofmonth executionfrequencyparameter 1 id 118829 listing payment plan schedules customer use route return set payment plan schedules attached single customer record list returned either full lite format detailed descriptions schedule object attributes payment plan response object attributes retrieve list payment plan objects customer method get uri v4 customer customerid paymentplans customerid id associated customer object would like retrieve schedules retrieve list payment plan objects customer using lite records method get uri v4 customer customerid paymentplans \\? lite true customerid id associated customer object would like retrieve schedules note lite payment plan schedule records include schedule payment amount sample request json get v4 customer 219175 paymentplans sample response json meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 1 page 1 itemsperpage 200 response customerid 219175 customerfirstname test customerlastname guy customercompany nextscheduledate 2013 12 01t07 00 00z balanceremaining 0 numberofpaymentsremaining 5 pauseuntildate null paymentamount 20 firstpaymentdone false dateoflastpaymentmade null totalamountpaid 0 numberofpaymentsmade 0 totaldueamount 100 totalnumberofpayments 5 paymentsubtype web accountid 373191 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null swipedata null startdate 2013 12 01t07 00 00z schedulestatus active executionfrequencytype firstofmonth executionfrequencyparameter 1 description null id 118830 lastmodified 2013 11 11t19 55 42z createdon 2013 11 11t19 55 42z sample request json get v4 customer 219175 paymentplans \\? lite true sample response json meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 1 page 1 itemsperpage 200 response customerid 219175 customerfirstname test customerlastname guy nextscheduledate 2013 12 01t07 00 00z schedulestatus active executionfrequencytype firstofmonth executionfrequencyparameter 1 id 118830 filtering customer schedule lists api uses paging control number results returned single customer schedule list request default show recent 200 schedules use pagination filters govern number results returned response well response page would like retrieve also use filters create customer schedule lists based schedule status start date schedule list filtering options detailed following sections customer schedule list pagination filters filters used part get uri request return list schedules specific customer page set results want return 1 returns first page 2 second etc filter included request defaults 1 pagesize number schedule records per page filter included request defaults 200 meta section response echoes request displays total number records page results returned number results returned per page examples use paymentschedules route return list recurring payment payment plan schedules specified customer also use recurringpayments route paymentplans route pagination filters examples replacing paymentschedules alternate route would return recurring payment object list customer payment plan object list customer date filters requesting customer schedule list use date filters return schedules start date given date range default return schedules regardless start date note filter works startdate field consider schedule createdon field date actual first payment generated schedule date format uri requests yyyy mm dd filters used part get uri request return list schedules startdate set filter earliest schedule startdate want return enddate set filter latest schedule startdate want return date filters used get paymentschedules get recurringpayments get paymentplans customer routes default return complete schedule records however use lite filter conjunction date filter return abbreviated schedule records meta section response displays number schedules match date filter well pagination filters applied part query customer schedule list example 1 default schedules list response \\( 200 recent schedules \\) json request method get uri v4 customer 219175 paymentschedules response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 3 page 1 itemsperpage 200 customer schedule list example 2 two record schedule list response \\( 2 oldest schedules \\) json request method get uri v4 customer 219175 paymentschedules \\? pagesize 2 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 3 page 1 itemsperpage 2 sample default customer schedule list response page page size filters applied json request method get uri v4 customer 255939 paymentschedules \\? pagesize 2 page 2 response meta meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 8 page 2 itemsperpage 2 response paymentplans recurringpayments customerid 255939 customerfirstname test customerlastname guy customercompany nextscheduledate 0001 01 01t07 00 00z pauseuntildate null firstpaymentdone false dateoflastpaymentmade 2013 05 31t06 00 00z totalamountpaid 160 numberofpaymentsmade 8 enddate 2013 12 01t07 00 00z paymentamount 90 paymentsubtype ppd accountid 373191 invoicenumber orderid null firstpaymentamount 0 firstpaymentdate null swipedata null startdate 2013 05 24t06 00 00z schedulestatus expired executionfrequencytype daily executionfrequencyparameter 0 description id 110165 lastmodified 2013 10 31t17 11 15z createdon 2013 05 24t19 25 26z customerid 255939 customerfirstname test customerlastname guy customercompany nextscheduledate 2013 12 01t07 00 00z pauseuntildate null firstpaymentdone false dateoflastpaymentmade null totalamountpaid 0 numberofpaymentsmade 0 enddate null paymentamount 12 paymentsubtype web accountid 373191 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null swipedata null startdate 2013 11 15t07 00 00z schedulestatus active executionfrequencytype firstofmonth executionfrequencyparameter 1 description null id 118829 lastmodified 2013 11 11t19 54 27z createdon 2013 11 11t19 54 27z sample lite customer schedule list response page page size filters applied json request method get uri v4 customer 255939 paymentschedules \\? pagesize 2 page 2 response meta meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 18 page 2 itemsperpage 2 response paymentscheduletype recurringpayment customerfirstname test customerlastname person customerid 255939 schedulestatus active nextpaymentdate 2013 11 12t07 00 00z paymentamount 16 id 118163 lastmodified 2013 11 11t08 30 18z createdon 2013 10 28t19 56 38z paymentscheduletype recurringpayment customerfirstname test customerlastname person customerid 255939 schedulestatus active nextpaymentdate 2013 12 01t07 00 00z paymentamount 12 id 118169 lastmodified 2013 11 01t07 30 37z createdon 2013 10 28t21 42 19z customer schedule list sorting returning list customer schedules complete lite form use sorting calls control attribute list sorted whether sort ascending descending order default sort ascending id results listing oldest schedules first note using paymentschedules return list including schedule types payment plans listed first recurring payment schedules second within schedule type sort schedules listed oldest newest sort instruction comprised two calls first determines field schedules sorted second determines whether sort high low low high secondary sort always ascending id thus one schedule value sortby field listed ascending order id effectively means oldest newest calls used part get uri request designate sort parameters sortby attribute sort startdate sort schedule start date enddate sort schedule end date \\( null considered low appear first ascending sorts \\) nextpaymentdate sort schedule next payment date \\( schedules expired paused indefinitely appear first ascending sorts last descending sorts \\) note get recurringpayment get paymentplan routes field called nextscheduledate however use nextpaymentdate query paymentamount sort scheduled payment amount schedulestatus sort schedule status \\( ascending active expired suspended \\) id sort schedule id \\( sorting schedule creation date \\) executionfrequencytype sort schedule frequency \\( note sort group like frequencies together cannot relied upon true ascending descending sorting \\) paymentscheduletype sort schedule type used get paymentschedule route sort used group recurring payments payment plans payment plan considered low direction order sort asc ascending sort low high z direction selected null values appear first list desc descending sort high low z direction selected null values appear last list note default pagination filter 200 records per page applied unless alternate pagination filter included uri sample sorting calls return schedules specific customer sort next payment date ascending order \\( present future \\) method geturi v4 customer 255939 paymentschedule \\? sortby nextpaymentdate direction asc list payment plan schedules specific customer sort end date descending order method get uri v4 customer 255939 paymentplans \\? sortby enddate direction desc list schedules specific customer descending order payment amount method geturi v4 customer 255939 paymentschedule \\? sortby paymentamount direction desc list recurring payment schedules specific customer sort creation date newest oldest method geturi v4 customer 255939 paymentplans \\? sortby id direction desc customer schedule list request examples schedule list sorting filtering paging combined create type response require additionally schedule lists generated specific customer return either complete lite records though single response cannot contain following representative samples compound schedule list requests specific customers associated responses note examples purposely use small page sizes order keep response displays readable active schedules specified customer started november 1 2013 lite records sorted payment amount descending order 2 schedule records per page show page 1 json note start date included paymentschedule lite response however still use sort list method get uri v4 customer 255939 paymentschedules \\? status active startdate 2013 11 01 sortby paymentamount direction desc page 1 pagesize 2 lite true response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 5 page 1 itemsperpage 2 response paymentscheduletype recurringpayment customerfirstname test customerlastname person customerid 255939 schedulestatus active nextpaymentdate 2013 12 04t07 00 00z paymentamount 21 id 118215 lastmodified 2013 11 04t08 30 20z createdon 2013 10 29t16 49 21z paymentscheduletype recurringpayment customerfirstname test customerlastname person customerid 255939 schedulestatus active nextpaymentdate 2013 12 04t07 00 00z paymentamount 22 id 118216 lastmodified 2013 11 04t08 30 20z createdon 2013 10 29t17 12 33z expired recurring payment schedules specific customer sorted schedule end date newest oldest 2 schedule records per page show page 2 json note end date included lite response however still use sort list method get uri v4 customer 255939 paymentschedules \\? status expired sortby enddate direction desc pagesize 2 page 2 response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 3 page 2 itemsperpage 2 note 3 matches page 2 contains 1 record response paymentplans customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 0001 01 01t07 00 00z balanceremaining 0 numberofpaymentsremaining 0 pauseuntildate null paymentamount 25 firstpaymentdone false dateoflastpaymentmade 2013 11 07t07 00 00z totalamountpaid 100 numberofpaymentsmade 4 totaldueamount 100 totalnumberofpayments 4 paymentsubtype moto accountid 395560 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null swipedata null startdate 2013 11 04t07 00 00z schedulestatus expired executionfrequencytype daily executionfrequencyparameter 0 description null id 118323 lastmodified 2013 11 07t08 30 22z createdon 2013 10 31t16 28 11z recurringpayments suspended schedules specific customer lite record sorted next payment date present future 2 records per page show page 1 json method get uri v4 customer 255939 paymentschedules \\? status suspended sortby nextpaymentdate direction asc page 1 pagesize 2 lite true response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 3 page 1 itemsperpage 2 response paymentscheduletype recurringpayment customerfirstname test customerlastname person customerid 255939 schedulestatus suspended nextpaymentdate 2013 12 02t07 00 00z paymentamount 15 id 118161 lastmodified 2013 10 30t19 33 33z createdon 2013 10 28t19 48 09z paymentscheduletype paymentplan customerfirstname test customerlastname person customerid 255939 schedulestatus suspended nextpaymentdate 2014 01 31t07 00 00z paymentamount 10 id 118229 lastmodified 2013 11 11t23 19 38z createdon 2013 10 29t19 57 12z payment plan schedules specific customer started q4 2013 listed order created \\( oldest newest \\) 2 records per page show page 1 complete schedule record json method get uri v4 customer 255939 paymentplans \\? startdate 2013 10 01 enddate 2013 12 31 sortby id direction asc pagesize 2 page 1 lite false response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 2 page 1 itemsperpage 2 response customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 2013 11 30t07 00 00z balanceremaining 80 numberofpaymentsremaining 4 pauseuntildate null paymentamount 20 firstpaymentdone false dateoflastpaymentmade 2013 10 31t06 00 00z totalamountpaid 20 numberofpaymentsmade 1 totaldueamount 100 totalnumberofpayments 5 paymentsubtype moto accountid 395560 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null swipedata null startdate 2013 10 28t06 00 00z schedulestatus active executionfrequencytype lastofmonth executionfrequencyparameter 0 description null id 118171 lastmodified 2013 10 31t07 30 18z createdon 2013 10 28t21 59 00z customerid 255939 customerfirstname test customerlastname person customercompany abc company nextscheduledate 2013 11 30t07 00 00z balanceremaining 95 numberofpaymentsremaining 19 pauseuntildate null paymentamount 5 firstpaymentdone false dateoflastpaymentmade 2013 10 31t06 00 00z totalamountpaid 5 numberofpaymentsmade 1 totaldueamount 100 totalnumberofpayments 20 paymentsubtype moto accountid 395560 invoicenumber null orderid null firstpaymentamount 0 firstpaymentdate null swipedata null startdate 2013 10 28t06 00 00z schedulestatus active executionfrequencytype lastofmonth executionfrequencyparameter 0 description null id 118172 lastmodified 2013 10 31t07 30 18z createdon 2013 10 28t22 42 50z active recurring payment schedules specific customer grouped frequency type lite records 5 records per page show page 1 json method get uri v4 customer 255939 recurringpayments \\? sortby schedulestatus pagesize 5 page 1 lite true response meta errors null httpstatus ok httpstatuscode 200 pagingdetails totalitems 18 page 1 itemsperpage 5 response customerid 255939 customerfirstname test customerlastname person nextscheduledate 2014 10 31t06 00 00z schedulestatus active executionfrequencytype annually executionfrequencyparameter 0 id 118162 customerid 255939 customerfirstname test customerlastname person nextscheduledate 2013 11 12t07 00 00z schedulestatus active executionfrequencytype daily executionfrequencyparameter 0 id 118163 customerid 255939 customerfirstname test customerlastname person nextscheduledate 2013 12 01t07 00 00z schedulestatus active executionfrequencytype firstofmonth executionfrequencyparameter 1 id 118169 customerid 255939 customerfirstname test customerlastname person nextscheduledate 2013 12 04t07 00 00z schedulestatus active executionfrequencytype specificdayofmonth executionfrequencyparameter 4 id 118215 customerid 255939 customerfirstname test customerlastname person nextscheduledate 2013 12 04t07 00 00z schedulestatus active executionfrequencytype specificdayofmonth executionfrequencyparameter 4 id 118216 deleting customer records delete customer object long active payment schedules unsettled payments associated deletes performed via api soft deletes simply flag record deleted deleted customer objects included list responses obtained via api request body required response body provided customer delete uri instruction delete customer object via api method delete uri v4 customer customerid data associated deleted customer object remains saved database accessed via api object id used part request response code 203 non authoritative information used designate deleted object \\( httpstatus field meta section response nonauthoritativeinformation httpstatuscode 203 shown \\) confirm customer deleted retrieve customer object check response information note see retrieving customer records instructions delete error message send uri delete request customer cannot deleted \\( either active schedule unsettled payment associated \\) see error message json meta errors null httpstatus nonauthoritativeinformation httpstatuscode 203 pagingdetails null 400 bad request json meta errors errorcode invalidinput errormessages field message still unsettled transactions outstanding customer cannot deleted tracecode null httpstatus badrequest httpstatuscode 400 pagingdetails null response null api http responses http responses paysimple 4 0 api wrapped json response following format meta section wrapped json response provide http response code numeric text representation response information paging errors respective object contain additional information otherwise object null common http responses paysimple api json meta httpstatus httpstatuscode errors errorcode errormessages pagingdetails totalitems page itemsperpage response results common api errors errors occur top portion response meta contain detailed explanation error error comprised errorcode errormessage former identifies error type latter provides specific information error note request contains multiple errors single type single errorcode used conjunction multiple errormessages note creating log capture api errors strongly recommended extremely helpful work api support team troubleshoot errors error codes following errorcode values used error messages errormessage contains two components field indicates field containing error error field related section blank message provides detailed information error correct message suitable direct display user trace error associated error displayed user reference requesting assistance following example successful request response posting new payment json meta errors null httpstatus created httpstatuscode 201 pagingdetails null response customerid 219175 customerfirstname test customerlastname guy customercompany referenceid 0 status posted recurringscheduleid 0 paymenttype ach paymentsubtype web providerauthcode approved tracenumber 2ecf8cbd 89f9 4027 ac15 b092fad02c3b paymentdate 2013 12 04t07 00 00z returndate null estimatedsettledate 2013 12 09t07 00 00z actualsettleddate null canvoiduntil 2013 12 05t00 00 00z failuredata null accountid 373191 invoiceid null amount 10 isdebit false invoicenumber null purchaseordernumber null orderid null description null successreceiptoptions null failurereceiptoptions null id 1776260 lastmodified 2013 12 04t20 32 00z createdon 2013 12 04t20 32 00z following example bad request response posting new payment json meta errors errorcode invalidinput errormessages field message amount must greater 0 tracecode null httpstatus badrequest httpstatuscode 400 pagingdetails null response null following example error customer object post request include first last name json meta errors errorcode invalidinput errormessages field firstname message firstname field required field lastname message lastname field required tracecode null httpstatus badrequest httpstatuscode 400 pagingdetails null response null missing improper field values type error typically occurs failed include required field customer payment schedule object request errorcode invalidinput errormessage field name missing field message display ready detailed error message error message example 1 customer edit \\( put \\) request contain shippingsameasbilling field json note shippingsameasbilling omitted defaults false thus shippingaddress must included meta errors errorcode invalidinput errormessages field shippingaddress message shippingaddress required shippingsameasbilling false tracecode null httpstatus badrequest httpstatuscode 400 pagingdetails null response null error message example 2 new payment posted without amount json meta errors errorcode invalidinput errormessages field message amount must greater 0 tracecode null httpstatus badrequest httpstatuscode 400 pagingdetails null response null error message example 3 new payment plan posted without billing frequency json meta errors errorcode invalidinput errormessages field executionfrequencytype message invalid billing frequency tracecode null httpstatus badrequest httpstatuscode 400 pagingdetails null response null error message example 4 new weekly recurring payment schedule posted without billing frequency parameter json meta errors errorcode invalidinput errormessages field message weekly schedules must billing frequency parameter set 1 7 tracecode null httpstatus badrequest httpstatuscode 400 pagingdetails null response null error message example 5 routing number entered ach account valid json meta errors errorcode invalidinput errormessages field routingnumber message invalid routing number tracecode null httpstatus badrequest httpstatuscode 400 pagingdetails null response null error message example 6 ccd ach payment attempted consumer \\( customer record company name saved \\) json meta errors errorcode invalidinput errormessages field message company name required ccd transactions tracecode null httpstatus badrequest httpstatuscode 400 pagingdetails null response null object id reference errors type error typically occurs attempt request includes customer account payment schedule id exist client account errorcode invalidinput errormessage field \\( empty \\) message display ready detailed error message error message example 1 attempt process payment non existent account json meta errors errorcode invalidinput errormessages field message specified customer account id valid tracecode null httpstatus badrequest httpstatuscode 400 pagingdetails null response null error message example 2 attempt view customer object belong client json meta errors errorcode invalidinput errormessages field message customer id 219175 belong client tracecode null httpstatus badrequest httpstatuscode 400 pagingdetails null response null error message example 3 attempt process payment deleted payment account json meta errors errorcode invalidinput errormessages field message account id 394099 deleted tracecode null httpstatus badrequest httpstatuscode 400 pagingdetails null response null customer found errors type error occurs attempt edit deleted customer object errorcode notfound errormessage field \\( empty \\) message display ready detailed error message example customer found error message json meta errors errorcode notfound errormessages field null message customer 260860 found deleted tracecode null httpstatus notfound httpstatuscode 404 pagingdetails null response null unavailable functions type error occurs attempt function cannot completed example see error type attempt delete payment account attached active schedule attempt delete customer associated unsettled payments errorcode invalidinput errormessage field \\( empty \\) message display ready detailed error message error message example 1 attempt delete payment account attached active schedule json meta errors errorcode notfound errormessages field null message customer 260860 found deleted tracecode null httpstatus notfound httpstatuscode 404 pagingdetails null response null error message example 2 attempt delete customer unsettled payments json meta errors errorcode invalidinput errormessages field message still unsettled transactions outstanding customer cannot deleted tracecode null httpstatus badrequest httpstatuscode 400 pagingdetails null response null error message example 3 attempt delete schedule started json meta errors errorcode invalidinput errormessages field message payments made schedule payment schedules started cannot deleted suspended tracecode null httpstatus badrequest httpstatuscode 400 pagingdetails null response null improper methods type error occurs attempt route supported api attempting delete payment object system detects using incorrect method using post method trying update object instead put method using unsupported route response body contain error message describing problem system detects identifies incorrect method see full error message errorcode invalidinput errormessage field id message id cannot value mean execute put operation \\? error message example 1 attempt delete payment json message requested resource support http method 'delete' error message example 2 attempt modify payment json message requested resource support http method 'put' error message example 3 use post method modify customer json meta errors errorcode invalidinput errormessages field id message id cannot value mean execute put operation \\? tracecode null httpstatus badrequest httpstatuscode 400 pagingdetails null response null trace errors error occurs system cannot immediately identify cause creates trace record developers look help troubleshoot problem trace record identified trace number returned part api error message cases typically error due unexpected user input trace number displayed errormessage field passed along user user call customer support provide trace code problem investigated cases typically error system level trace number provided tracecode field included error message example case provided trace number tracecode field json meta errors errorcode invalidinput errormessages field message cm 003 unknown error occurred processing request please contact customer service trace number '8d0ae88ccb92cf0' tracecode null httpstatus badrequest httpstatuscode 400 pagingdetails null response null trace number error message json meta errors errorcode unexpectederror errormessages tracecode api8d0ae891fe42f3d httpstatus internalservererror httpstatuscode 500 pagingdetails null response null using api test tool api test tool powerful programming tool designed give quick easy way interact paysimple 4 0 api test available routes visually review api response json tool designed help understand http communications sent received application long application supports http communications able use routes documented guide interface paysimple api api test tool accessed paysimple developer website https sandbox api paysimple com v4 help used correct method route applicable json request api test tool show response expect paysimple api along corresponding json payload data pack may also log paysimple sandbox website using username password see result actions paysimple 's standard user interface getting started creating testing code api test tool accessed paysimple developer website https sandbox api paysimple com v4 help api test tool contains five main sections described username password fields api authentication register developer paysimple provided sandbox environment test code sandbox environment used api test tool enter user id password used login ui version sandbox corresponding fields api test tool instructs tool obtain api key associated sandbox account use processing json requests entered tool note sandbox environment created received two emails one user name one temporary password need reset password upon first login go paysimple sandbox website application reset password resetting password may use username password means authenticate api credentials via api test tool method drop box method drop box allows select action would like take http request types follow crud methods create post retrieve get update put delete delete uri field uri field specify endpoint method may find endpoint across different methods example uri v4 customer accept following methods post put get request information section api calls put post require request body may include json string object create update fields object required schema reference section documents objects attributes response information section request submitted see http response code response information section along response header information also present http header receive response paysimple api response content section contain wrapped response object includes meta data paging information error information applicable http response numeric code text wrapped object also include response json show newly created object requested object collection updated object full detail note response body provided 204 response returned api test tool response body section say null requested object deleted receive 203 response object response content section api test tool example collecting payment new customer create customer enter username password appropriate fields select get method drop box enter v4 new customer uri field obtain schema new customer object click submit button empty customer object code displayed response content text box attributes set null request object use template create new customer note sample object going return applicable customer fields need complete required fields defined customer object attributes copy customer object response content section selecting curly brace response curly brace created date paste copied customer object request body text box \\( external text editor \\) edit customer object attributes request body section \\( external text editor paste request body section done editing \\) replacing 'null' actual customer information please enter values double quotes required desired fields note make sure json code paste request body field valid valid api provide error indicating 'invalid json note json validator available http jsonformatter curiousconcept com create new customer selecting post method drop box entering v4 customer uri field clicking submit button submitted response content textbox refresh display wrapped response including 201 success message meta section along created object response section response header box also contain success message object header shown locate copy numerical customer id use next step note save customer id paste copied id text editor write add account select get method drop box enter v4 new account creditcard uri field obtain schema new payment account object note collecting payments via credit card please replace 'creditcard' 'ach' account route click submit button empty account object code displayed response content text box attributes set null request object use template create new account copy account object response content section selecting curly brace response curly brace created date paste copied account object request body text box edit account object attributes request bodysection \\( external text editor paste back request body area \\) replacing 'null' actual account information values remember include customer id saved previous step ensure attribute values double quotes note see test account numbers sandbox environment bank account credit card information use sandbox create new account selecting post method drop box entering v4 account creditcard uri field click submit button submitted response content text box refresh display wrapped response including 201 success message meta section along created object response section locate copy numerical account id response content next step save id next step note save account id paste copied id text editor write collect payment select get method drop box enter v4 new payment uri field obtain obtain schema new payment object click submit button empty payment object code displayed response content textbox attributes set null request object use template create new payment note fields required see payment request object attributes required fields copy payment object response content section selecting curly brace response curly brace created date paste copied payment object request body text box \\( external text editor \\) edit payment object attributes response content section \\( external text editor paste response content section done editing \\) replacing 'null' actual payment information values enter required information including account id saved previous step amount along pertinent information payment subtype description invoice number order number note cvv attribute applies credit card payments refers credit card security code required field credit card payment however providing cvv credit card processor aware customer credit card hand time payment create new payment selecting post method drop box enter v4 payment uri field click submit button submitted response content text box refresh display wrapped response including 201 success message meta section along created object response section locate copy numerical payment id response content point collected payment api calls may log paysimple website application view payment paysimple 's user interface schema reference schema displays object attributes including required optional system managed also details applicable data constraints minlength maxlength pattern regular expression \\( regex \\) applies attribute information serves reference required information create object assisting designing user interface validate data constraints schema metadata representations system object presented easy read json format two object types request objects response objects request objects request object shows attributes available create object required provide values request object attributes order create edit object response objects response object includes attributes optional required request object along system managed attributes immutable object attributes schema provides detailed descriptions field may understand use system fields display fields application following sections provide detailed definitions paysimple 4 0 api objects associated attributes customer object attributes following sections detail customer request response objects information using api manage customer objects see customers section customer request object attributes required attributes firstname string 150 characters max lastname string 150 characters max shippingsameasbilling boolean set true indicate separate shipping address even including billing address set false require shippingaddress fields optional attributes billingaddress object billing address required included attributes required except streetaddress2 statecode country 10 characters type valid zipcode streetaddress1 string 250 characters max streetaddress2 string optional 250 characters max city string 100 characters max statecode string valid 2 character state territory code us canada zipcode string 10 characters country string optional defaults us max 3 characters shippingaddress object required shippingsameasbilling set true included attributes required except streetaddress2 statecode country 10 characters type valid zipcode streetaddress1 string 250 characters max streetaddress2 string optional 250 characters max city string 100 characters max statecode string valid 2 character state territory code us canada zipcode string 10 characters country string optional defaults us max 3 characters company string 50 characters max customeraccount string 28 characters max phone string 10 characters max enter numeric string include parenthesis dashes altphone string 10 characters max enter numeric string include parenthesis dashes mobilephone string 10 characters max enter numeric string include parenthesis dashes fax string 10 characters max enter numeric string include parenthesis dashes email string 100 characters max must valid email address altemail string 100 characters max must valid email address website string 100 characters max must url format notes string 2048 characters max system attributes fields required components customer object populated system need include requests id integer defaults 0 new requests populated customerid response lastmodified string set system request data disregarded createdon string set system request data disregarded customer response object attributes firstname string customer last name \\( 150 characters max \\) lastname string customer first name \\( 150 characters max \\) shippingsameasbilling boolean set true indicate separate shipping address even including billing address true system set shipping field values equal corresponding billing address fields set false shippingaddress fields linked billing address fields billingaddress object billing address required included attributes required except streetaddress2 statecode country 10 characters type valid zipcode streetaddress1 string first line billing street address \\( 250 characters max \\) streetaddress2 string second line billing street address \\( optional 250 characters max \\) city string billing city \\( 100 characters max \\) statecode string billing state valid 2 character state territory code us canada zipcode string billing postal code 10 characters country string billing country \\( optional defaults us max 3 characters \\) shippingaddress object required shippingsameasbilling set true included attributes required except streetaddress2 statecode country 10 characters type valid zipcode streetaddress1 string primary shipping address line \\( 250 characters max \\) streetaddress2 string second shipping address line \\( optional 250 characters max \\) city string shipping city \\( 100 characters max \\) statecode string shipping state valid 2 character state territory code us canada zipcode string shipping postal code 10 characters country string shipping country \\( optional defaults us max 3 characters \\) company string company name customer \\( 50 characters max \\) customeraccount string account number user entered customer \\( 28 characters max \\) phone string primary phone number customer \\( 10 characters max enter numeric string include parenthesis dashes \\) altphone string secondary phone number customer \\( 10 characters max enter numeric string include parenthesis dashes \\) mobilephone string mobile phone number customer \\( 10 characters max enter numeric string include parenthesis dashes \\) fax string fax number customer \\( 10 characters max enter numeric string include parenthesis dashes \\) email string primary email address customer \\( 100 characters max must valid email address \\) altemail string secondary email address customer \\( 100 characters max must valid email address \\) website string website associated customer \\( 100 characters max must url format \\) notes string open text area \\( 2048 characters max \\) id integer assigned system customerid record id referenced customer api objects defaults 0 new requests populated customerid response lastmodified string set system last time date record changed request data disregarded createdon string set system time date record created request data disregarded account object attributes paysimple 4 0 api supports two types account ach credit card account objects set attributes separate schema account includes attributes types returning list accounts specific customer record response list credit card accounts first ach accounts following sections provide attribute definitions credit card ach accounts ach account objects attributes following sections detail ach account request response objects information using api manage ach account objects see managing customer payment accounts section ach account request object attributes required attributes customerid integer system identifier customer record card added id attribute previously created customer object routingnumber string 9 digit bank routing number accountnumber string min 4 digits max 100 digits bank account number bankname string 100 characters max financial institution name ischeckingaccount boolean enter true indicate checking account false indicate savings account general ledger accounts supported isdefault boolean enter true set account default ach account customer record otherwise enter false ach accounts attached customer record field default true regardless entry system attributes fields required components ach account object populated system need include requests id integer defaults 0 new requests populated accountid response lastmodified string set system request data disregarded createdon string set system request data disregarded ach account response object attributes customerid integer system identifier customer record account associated id attribute previously created customer object routingnumber string 9 digit bank routing number accountnumber string bank account number \\( min 4 digits max 100 digits \\) bankname string financial institution name \\( 100 characters max \\) ischeckingaccount boolean true indicates checking account false indicates savings account general ledger accounts supported isdefault boolean true indicates account default ach account customer record false indicates default adding new accounts ach accounts attached customer record field default true regardless value provided request id integer assigned system accountid record id referenced account api objects defaults 0 new requests populated accountid response lastmodified string set system last time date record changed request data disregarded createdon string set system time date record created request data disregarded credit card account object attributes following sections detail credit card account request response objects information using api manage credit card account objects see managing customer payment accounts section credit card account request object attributes required attributes customerid integer system identifier customer record card added id attribute previously created customer object creditcardnumber string 15 16 digits expirationdate string valid date format mm yyyy issuer integer enumeration 12 visa 13 master \\( mastercard \\) 14 amex \\( american express \\) 15 discover isdefault boolean enter true set card default credit card account customer record otherwise enter false cards attached customer record field default true regardless entry optional attributes billingzipcode string max 10 characters left blank system use billing zip code \\( zipcode attribute customer object \\) processing payment billingzipcode attribute null 10 characters type valid system attributes fields required components credit card account object populated system need include requests id integer defaults 0 new requests populated accountid response lastmodified string set system request data disregarded createdon string set system request data disregarded credit card account response object attributes customerid integer system identifier customer record card added id attribute previously created customer object creditcardnumber string 15 16 digit credit card number expirationdate string valid credit card expiration date format mm yyyy issuer integer enumeration 12 visa 13 master \\( mastercard \\) 14 amex \\( american express \\) 15 discover isdefault boolean true indicates account default credit card account customer record false indicates default adding new accounts credit card accounts attached customer record field default true regardless value provided request billingzipcode string billing postal code associated credit card max 10 characters left blank system use billing zip code \\( zipcode attribute customer object \\) processing payment billingzipcode attribute null 10 characters type valid id integer assigned system accountid record id referenced account api objects defaults 0 new requests populated accountid response lastmodified string set system last date credit card object changed request data disregarded createdon string set system date credit card object created request data disregarded payment object attributes following sections detail payment request response objects information using api manage payment objects see payments section payment request object attributes required attributes accountid integer system identifier credit card account ach account used payment id attribute credit card object ach account object created previous step amount number amount charge enter number include enter integer decimal use 2 decimal places system round nearest penny e entering 3 129 result payment amount 3 13 optional attributes isdebit boolean field defaults false indicate payment whether included entering true result error standalone credits currently supported via api cvv string min 3 digits max 4 digits credit card security code field defaults null included may included credit card payments ignored entered ach payments paymentsubtype string field defaults moto credit card payments web ach payments included left null enumeration \\( ach \\) 4 web 5 tel 6 ppd 7 ccd enumeration \\( cc \\) 10 swipe 11 moto invoiceid integer system invoice identifier included seat associated system invoice number invoicenumber attribute apply payment specified invoice id note invoice creation management available via api invoicenumber string 50 characters max invoice number attached payment number provided system invoice number associated invoiceid attached payment payment applied system invoice note invoice creation management available via api purchaseordernumber string 50 characters max purchase order number attached payment orderid string 50 characters max back end transaction identifier included ui description string 2048 characters max latitude number field currently used ui accept save latitude values longitude number field currently used ui accept save longitude values successreceiptoptions object receipt instructions null means current system default settings used \\( included null default \\) following additional fields used override defaults direct payment receipts sent sendtocustomer true indicates receipt gets sent email address attached customer record false indicates sendtootheraddresses specific email address \\( addresses \\) receipt email sent using brackets enter valid email addresses separated commas failurereceiptoptions object failure notification email instructions null means current system default settings used \\( included null default \\) following additional fields used override defaults direct failure notifications sent sendtocustomer true indicates notification gets sent email address attached customer record false indicates sendtootheraddresses specific email address \\( addresses \\) failure notification email sent using brackets enter valid email addresses separated commas system attributes fields required components payment object populated system need include requests id integer defaults 0 new requests populated paymentid response lastmodified string set system request data disregarded createdon string set system request data disregarded payment response object attributes accountid integer system identifier credit card account ach account used payment id attribute previously created credit card object ach account object amount number payment amount 2 decimal places entered system round nearest penny e entering 3 129 result payment amount 3 13 isdebit boolean false payment true standalone credit field defaults false indicate payment whether included request entering true request body result error standalone credits currently supported via api paymentsubtype string type credit card ach payment defaults moto credit card payments web ach payments included left null enumeration \\( ach \\) 4 web 5 tel 6 ppd 7 ccd enumeration \\( cc \\) 10 swipe 11 moto invoiceid integer invoiceid paysimple system invoice associated payment included seat associated system invoice number invoicenumber attribute apply payment specified invoice id note invoice creation management available via api invoicenumber string invoice number attached payment number provided system invoice number associated invoiceid attached payment payment applied system invoice \\( 50 characters max \\) note invoice creation management available via api purchaseordernumber string purchase order number entered payment \\( 50 characters max \\) orderid string back end transaction identifier may included payment visible paysimple ui \\( 50 characters max \\) description string open text field used provide description goods services paid field included payment receipt templates meet processing requirement description goods services included receipts \\( 2048 characters max \\) latitude number field currently used accept save latitude values longitude number field currently used accept save longitude values successreceiptoptions object receipt instructions specified payment request null means current system default settings used \\( included null default \\) following additional fields used override defaults direct payment receipts sent sendtocustomer true indicates receipt gets sent email address attached customer record false indicates sendtootheraddresses specific email address \\( addresses \\) receipt email sent using brackets enter valid email addresses separated commas failurereceiptoptions object failure notification email instructions specified payment request null means current system default settings used \\( included null default \\) following additional fields used override defaults direct failure notifications sent sendtocustomer true indicates notification gets sent email address attached customer record false indicates sendtootheraddresses specific email address \\( addresses \\) failure notification email sent using brackets enter valid email addresses separated commas id integer assigned system paymentid record id referenced payment future calls related transaction including void refund view details defaults 0 new requests populated paymentid response customerid integer system identifier customer record associated payment \\( system identifies customerid accountid associated \\) customerfirstname string first name customer associated payment system populates field based accountid \\( associated customerid \\) supplied request customerlastname string last name customer associated payment system populates field based accountid \\( associated customerid \\) supplied request customercompany string company associated payment system populates field based accountid \\( associated customerid \\) supplied request referenceid integer refunded payment paymentid refund transaction refund transaction payment id refunded payment field 0 cases status integer payment status set system enumeration 0 pending 1 posted 2 settled 3 failed 5 voided 6 reversed 9 reverseposted 10 chargeback 12 authorized 13 returned 15 reversensf 17 refund settled expected responses new payments posted authorized failed labels correspond paysimple status names ui mapping follows reversed refunded reverseposted refund \\( posted \\) reversensf returned nsf recurringscheduleid integer payment part schedule scheduleid field 0 cases paymenttype integer set system identify transaction type based type account associated accountid used payment enumeration 1 cc \\( credit card \\) 2 ach providerauthcode string pass field displays authorization response transaction tracenumber string pass field displays processor transaction identifier successful transaction provider error message failed transaction paymentdate string set system date payment processed entering new one time payments field set current date date format yyyy mm ddt00 00 00z returndate string set system date ach payment returned field always null new transactions always null credit card transactions date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) estimatedsettledate string date system expects transaction settled based merchant funding time date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) actualsettleddate string date system receives notification transaction actually settled field always null new transactions date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) canvoiduntil string last date transaction may voided failuredata string standardized system information transaction failed 4 components code 4 digit paysimple error code description description error merchantactiontext instructions merchant handle error isdecline true indicates failure due transaction declined false indicates failure due reason note see appendix table containing failure codes associated messages lastmodified string set system date time transaction record last modified date format yyyy mm ddt00 00 00z createdon string set system date time transaction record created \\( e time date payment processed \\) date format yyyy mm ddt00 00 00z schedule object attributes paysimple 4 0 api supports two types schedule recurring payment payment plan schedule objects set request response object attributes separate abbreviated schema paymentschedule condensed response object including set attributes shared schedule types along schedule attribute indicates schedule type following sections provide attribute definitions paymentschedule recurringpayment paymentplan information using api manage schedules see payment schedules section payment schedule response object attributes paymentschedule response object designed creating lists schedules corresponding request object entering new schedule objects modifying existing schedule objects following attributes available paymentscheduletype string recurringpayment recurring payment schedule paymentplan payment plan schedule customerfirstname string first name customer associated schedule customerlastname string last name customer associated schedule customerid integer system identifier customer record associated payment schedulestatus integer current schedule status enumeration 1 active 2 pauseuntil 3 expired 4 suspended nextpaymentdate string next date schedule generate payment based schedule frequency date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) note attribute called nextscheduledate recurringpayment paymentplan objects paymentamount number amount scheduled payment id integer assigned system scheduleid number referenced calls related schedule including pause suspend resume view details lastmodified string set system date time schedule object last modified createdon string set system date time schedule object created recurring payment object attributes following sections detail recurring payment request response objects information using api manage recurring payment objects see payment schedules section recurring payment request object attributes required attributes accountid integer system identifier credit card account ach account used schedule customer object associated accountid associated schedule paymentamount number scheduled payment amount enter number include enter integer decimal use 2 decimal places system round nearest penny e entering 3 129 result paymentamount 3 13 startdate string date schedule start \\( start \\) running necessarily date generate first payment future date used edited prior schedule starting first payment actually generated field becomes read date format yyyy mm dd note make schedule management easier strongly recommended set schedule startdate first day generate payment executionfrequencytype integer primary frequency execute scheduled payments enumeration 1 daily 2 weekly 3 biweekley 4 first month 5 specific day month 6 last month 7 quarterly 8 semi annually 9 annually optional attributes enddate string date schedule stop generating payments included left null schedule default running manually disabled date format yyyy mm dd paymentsubtype string field defaults moto credit card payments web ach payments included left null enumeration \\( ach \\) 4 web 5 tel 6 ppd 7 ccd enumeration \\( cc \\) 10 swipe 11 moto invoicenumber string 50 characters max invoice number attached schedule number provided system invoice number associated system invoiceid attached schedule scheduled payments applied system invoice note ensure collect amount due system invoice better use payment plan schedule \\( instead recurring billing schedule \\) discharge system invoice note invoice creation management available via api orderid string 50 characters max back end transaction identifier included ui firstpaymentamount number custom payment amount executed prior start schedule enter number include enter integer decimal use 2 decimal places system round nearest penny e entering 23 129 result firstpaymentamount 23 13 firstpaymentdate string date custom first payment processed current date future date must prior schedule startdate future date used edited prior custom first payment generated custom first payment actually generated field becomes read date format yyyy mm dd executionfrequencyparameter integer used specify day month specific day month schedule specify day week weekly bi weekly schedule enumeration \\( weekly bi weekly \\) 1 sunday 2 monday 3 tuesday 4 wednesday 5 thursday 6 friday 7 saturday monthly enter integer 1 31 note avoid confusion want bill 30th 31st use last day month frequency type instead specific day month frequency type description string 2048 characters max system attributes fields required components recurring payment object populated system need include requests id integer defaults 0 new requests populated scheduleid response lastmodified string set system request data disregarded createdon string set system request data disregarded recurring payment response object attributes customerid integer system identifier customer record associated schedule value assigned based customer object designated payment account object schedule attached customerfirstname string first name customer associated schedule customerlastname string last name customer associated schedule customercompany string company associated schedule accountid integer system identifier credit card account ach account used schedule customer object associated accountid associated schedule paymentamount number scheduled payment amount integer decimal 2 decimal places entered system round nearest penny e entering 3 129 result paymentamount 3 13 startdate string date schedule start \\( start \\) running necessarily date \\( \\) generate first payment future date used edited prior schedule starting first payment actually generated field becomes read date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) executionfrequencytype integer primary frequency schedule executes payments \\( response displays text integer \\) enumeration 1 daily 2 weekly 3 biweekley 4 first month 5 specific day month 6 last month 7 quarterly 8 semi annually 9 annually enddate string date schedule stop generating payments \\( status changes expired \\) schedule programmed run indefinitely field null date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) paymentsubtype string field defaults moto credit card payments web ach payments included left null enumeration \\( ach \\) 4 web 5 tel 6 ppd 7 ccd enumeration \\( cc \\) 10 swipe 11 moto invoicenumber string 50 characters max invoice number attached schedule number provided system invoice number associated system invoiceid attached schedule scheduled payments applied system invoice note invoice creation management available via api orderid string 50 characters max back end transaction identifier included ui firstpaymentamount number custom payment amount executed prior start schedule enter number include integer decimal 2 decimal places entered system round nearest penny e entering 23 129 result firstpaymentamount 23 13 firstpaymentdate string date custom first payment processed current date future date must prior schedule startdate future date used edited prior custom first payment generated custom first payment actually generated field becomes read date format yyyy mm dd executionfrequencyparameter integer used specify day month specific day month schedule specify day week weekly bi weekly schedule enumeration \\( weekly bi weekly \\) 1 sunday 2 monday 3 tuesday 4 wednesday 5 thursday 6 friday 7 saturday monthly enter integer 1 31 note avoid confusion want bill 30th 31st use last day month frequency type instead specific day month frequency type description string 2048 characters max open text field nextscheduledate string next date schedule generate payment based schedule frequency date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) pauseuntildate string date paused schedule set resume schedule status suspended date automatically resume schedule status active expired field value recent date schedule resumed schedules never paused value null note pauseuntildate field set null paused schedule resumes field always contain date schedule last activated note see pause payment schedule instructions set pause resume date via api firstpaymentdone boolean payment \\( either custom first payment first scheduled payment \\) generated schedule attribute true schedule longer deleted payment activity generated schedule attribute false dateoflastpaymentmade string read system field indicating last date scheduled payment \\( custom first payment \\) generated schedule schedule yet generated payment field null totalamountpaid number read system field indicating sum payments including custom first payment generated schedule numberofpaymentsmade integer read system field indicating number regular payments \\( including custom first payment \\) generated schedule schedulestatus integer current schedule status enumeration 1 active 2 pauseuntil 3 expired 4 suspended note schedule status changed via uri status change requests modifying value field via uri put request see suspend payment schedule pause payment schedule resume payment schedule detailed instructions id integer scheduleid number need reference calls related schedule including pause suspend resume view details lastmodified string set system date time recurring payment object last modified createdon string set system date time recurring payment object created payment plan object attributes following sections detail payment plan request response objects information using api manage payment plan objects see schedules section payment plan request object attributes required attributes accountid integer system identifier credit card account ach account used schedule id attribute credit card object ach account object used schedule customer object associated accountid associated schedule totaldueamount number total amount collected schedule enter number include enter integer decimal use 2 decimal places system round nearest penny e entering 300 129 result totaldueamount 300 13 totalnumberofpayments integer total number schedule payments enter integer 1 99 startdate string first date schedule generate payment based configured frequency current date future date future date used edited prior schedule starting first payment actually generated field becomes read date format yyyy mm dd note make schedule management easier strongly recommended set schedule startdate first day generate payment executionfrequencytype integer primary frequency execute scheduled payments enumeration 1 daily 2 weekly 3 biweekley 4 first month 5 specific day month 6 last month 7 quarterly 8 semi annually 9 annually optional attributes paymentsubtype string field defaults moto credit card payments web ach payments included left null enumeration \\( ach \\) 4 web 5 tel 6 ppd 7 ccd enumeration \\( cc \\) 10 swipe 11 moto invoicenumber string 50 characters max invoice number attached schedule number provided system invoice number associated system invoiceid attached schedule scheduled payments applied system invoice note invoice creation management available via api orderid string 50 characters max back end transaction identifier included ui firstpaymentamount number custom payment amount executed prior start schedule enter number include enter integer decimal use 2 decimal places system round nearest penny e entering 23 129 result firstpaymentamount 23 13 amount subtracted totaldueamount system calculates schedule paymentamount firstpaymentdate string date custom first payment processed current date future date must prior schedule startdate future date used edited prior custom first payment generated custom first payment actually generated field becomes read date format yyyy mm dd executionfrequencyparameter integer used specify day month specific day month schedule specify day week weekly bi weekly schedule enumeration \\( weekly bi weekly \\) 1 sunday 2 monday 3 tuesday 4 wednesday 5 thursday 6 friday 7 saturday monthly enter integer 1 31 note avoid confusion want bill 30th 31st use last day month frequency type instead specific day month frequency type description string 2048 characters max open text field system attributes fields required components recurring payment object populated system need include requests id integer defaults 0 new requests populated scheduleid response lastmodified string set system request data disregarded createdon string set system request data disregarded payment plan response object attributes customerid integer system identifier customer record associated schedule value assigned based customer object designated payment account object schedule attached customerfirstname string first name customer associated schedule customerlastname string last name customer associated schedule customercompany string company associated schedule accountid integer system identifier credit card account ach account used schedule totaldueamount number total amount collected schedule integer decimal without used 2 decimal places entered system round nearest penny e entering 300 129 result totaldueamount 300 13 totalnumberofpayments integer total number schedule payments integer 1 99 startdate string date schedule start \\( start \\) running necessarily date \\( \\) generate first payment future date used edited prior schedule starting first payment actually generated field becomes read date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) executionfrequencytype integer primary frequency schedule executes payments \\( response displays text integer \\) enumeration 1 daily 2 weekly 3 biweekley 4 first month 5 specific day month 6 last month 7 quarterly 8 semi annually 9 annually executionfrequencyparameter integer used specify day month specific day month schedule specify day week weekly bi weekly schedule enumeration \\( weekly bi weekly \\) 1 sunday 2 monday 3 tuesday 4 wednesday 5 thursday 6 friday 7 saturday monthly enter integer 1 31 note avoid confusion want bill 30th 31st use last day month frequency type instead specific day month frequency type paymentsubtype string field defaults moto credit card payments web ach payments included left null enumeration \\( ach \\) 4 web 5 tel 6 ppd 7 ccd enumeration \\( cc \\) 10 swipe 11 moto invoicenumber string 50 characters max invoice number attached schedule number provided system invoice number associated system invoiceid attached schedule scheduled payments applied system invoice note invoice creation management available via api orderid string 50 characters max back end transaction identifier included ui firstpaymentamount number custom payment amount executed prior start schedule integer decimal without used 2 decimal places entered system round nearest penny e entering 23 129 result firstpaymentamount 23 13 firstpaymentdate string date custom first payment processed current date future date must prior schedule startdate future date used edited prior custom first payment generated custom first payment actually generated field becomes read date format yyyy mm dd description string 2048 characters max nextscheduledate string next date schedule generate payment based schedule frequency date format yyyy mm ddt00 00 00z \\( ignore time portion date \\) balanceremaining number read system field indicating total amount still collected part schedule \\( totaldueamount totalamountpaid balanceremaining \\) numberofpaymentsremaining integer read system field indicating number payments left generated schedule schedule yet generate payment equal totalnumberofpayments pauseuntildate string date paused schedule set resume schedule status suspended date automatically resume schedule status active expired field value recent date schedule resumed schedules never paused value null note pauseuntildate field set null paused schedule resumes field always contain date schedule last activated note see pause payment schedule instructions set pause resume date via api paymentamount number system calculated amount scheduled payment paymentamount \\( totalamountdue customfirstpaymentamount \\) numberofpayments firstpaymentdone boolean payment \\( either custom first payment first scheduled payment \\) generated schedule attribute true schedule longer deleted payment activity generated schedule attribute false dateoflastpaymentmade string read system field indicating last date scheduled payment \\( custom first payment \\) generated schedule schedule yet generated payment field null totalamountpaid number read system field indicating sum payments including custom first payment generated schedule numberofpaymentsmade integer read system field indicating number regular payments \\( including custom first payment \\) generated schedule schedulestatus integer current schedule status enumeration 1 active 2 pauseuntil 3 expired 4 suspended note schedule status changed via uri status change requests modifying value field via uri put request see suspend payment schedule pause payment schedule resume payment schedule detailed instructions id integer scheduleid number need reference calls related schedule including pause suspend resume view details lastmodified string set system date time recurring payment object last modified createdon string set system date time recurring payment object created appendix api quick reference following tables provide commonly used routes endpoints paysimple 4 0 api paysimple 4 0 api endpoints api test tool url uri request building tools customer routes payment account routes payment routes payment schedule routes filtering sorting request parameters appendix b failure data error codes messages payment fails \\( submitted processing authorized \\) failuredata object used provide actual failure code passed processor well information payment failed instructions passed directly merchant handle error successful payments failuredata field null four attributes failuredata object code 4 digit paysimple error code description description error merchantactiontext instructions passed merchant handle error note substitute instructions system ones like isdecline true indicates failure due transaction declined false indicates failure due reason depending type payment \\( ach credit card \\) processing pipe used submit payments authorizations different error codes messages used following tables provide error codes expect payment type processor credit card processing paysimple supports credit card processing via tsys global payments unsure pipe used \\( customers \\) credit card merchant processing accounts ask partner support representative tsys processing pipe global processing pipe credit card mock results \\? xml version 1 0 encoding utf 8 \\? mocks mock amount 9999 01 amount providerauthcode decline providerauthcode status failed status tracenumber 05 tracenumber mock mock amount 9999 02 amount providerauthcode cvv2 mismatch providerauthcode status failed status tracenumber 07 tracenumber mock mock amount 9999 03 amount providerauthcode card error providerauthcode status failed status tracenumber 14 tracenumber mock mock amount 9999 04 amount providerauthcode expired card providerauthcode status failed status tracenumber 54 tracenumber mock mock amount 9999 05 amount providerauthcode hold call providerauthcode status failed status tracenumber 41 tracenumber mock mock amount 9999 06 amount providerauthcode serv allowed providerauthcode status failed status tracenumber 41 tracenumber mock mock amount 9999 07 amount providerauthcode received bad bin response processor possible configuration error providerauthcode status failed status mock mock amount 9999 08 amount providerauthcode failure cv providerauthcode status failed status mock mock amount 9999 09 amount providerauthcode account providerauthcode status failed status mock mock amount 9999 10 amount providerauthcode stop recurring providerauthcode status failed status mock mock amount 9999 11 amount providerauthcode call providerauthcode status failed status mock mock amount 9999 12 amount providerauthcode check account providerauthcode status failed status mock mock amount 9999 13 amount providerauthcode issuer providerauthcode status failed status mock mocks ach processing paysimple supports ach processing via forte payliance profitstars vericheck unsure ach processor \\( customers \\) using ask partner support representative forte payliance profitstars vericheck ach mock results \\? xml version 1 0 encoding utf 8 \\? mocks mock amount 9999 01 amount responsecode u03 responsecode failurereason dailylimit failurereason providerauthcode achp 003 merchant daily limit exceeded \\( eft \\) providerauthcode status failed status mock mock amount 9999 02 amount responsecode u02 responsecode failurereason none failurereason providerauthcode achp 002 customer account ach direct known bad account list \\( eft \\) providerauthcode status failed status mock mock amount 9999 03 amount responsecode u04 responsecode failurereason monthlylimit failurereason providerauthcode achp 004 merchant monthly limit exceeded \\( eft \\) providerauthcode status failed status mock mock amount 9999 04 amount responsecode u10 responsecode failurereason none failurereason providerauthcode achp 008 transaction attributes another transaction within time set merchant providerauthcode status failed status mock mock amount 9999 05 amount responsecode u53 responsecode failurereason singletransactionlimit failurereason providerauthcode achp 025 transaction amount exceeds merchant per transaction limit \\( efts \\) providerauthcode status failed status mock mock amount 9999 06 amount responsecode e10 responsecode failurereason none failurereason providerauthcode 're sorry transaction cannot processed merchant processing key password incorrect please contact account executive correct error providerauthcode status failed status mock mock amount 9999 07 amount responsecode u19 responsecode failurereason none failurereason providerauthcode achp 016 account aba number invalid providerauthcode status failed status mock mock amount 9999 08 amount failurereason none failurereason providerauthcode communication failure ach direct providerauthcode status failed status mock mock amount 9999 09 amount responsecode f01 responsecode failurereason none failurereason providerauthcode routing account entered valid providerauthcode status failed status mock mock amount 9999 10 amount responsecode f04 responsecode failurereason none failurereason providerauthcode invalid field value providerauthcode status failed status mock mock amount 9999 11 amount responsecode u51 responsecode failurereason none failurereason providerauthcode achp 023 merchant live providerauthcode status failed status mock mocks pricing support documentation copyright paysimple 2016 rights reserved", 
    "descr2": "loading sorry interruptcss errorrefresh h1 font size 2em margin 0 67em 0 h2 font size 1 5em h3 font size 1 17em h4 font size 1em h5 font size 83em h6 font size 67em hover text decoration none active focus text decoration none", 
    "descr1": "1433 17 th street ste 300 denver co 80202 p 800 466 0992 f 303 374 5378 www paysimple com junior instructional designer paysimple voted one best places work denver 2008 2009 staffing support explosive growth 2011 2012 looking budding instructional designer become integral member team job description paysimple seeking junior instructional designer responsible creating maintaining technical documentation training videos online help system industry leading saas receivables products role junior instructional designer works closely vp knowledge subject matter experts understand capabilities paysimple applications create customer facing h elp materials engage educate ideal candidate flair passion design technical writing well motivation aptitude quickly independently master new technology translate dry technical specif ications compelling resources clearly accurately provide direction common tasks also spark increased utilization want meet attention detail outstanding proofreading skills essential ability work quickly independently meet short deadlines large content revisions responsibilities create new update existing technical documentation including online help pdf tutorials product manuals video help knowledgebase articles review existing documentation publication format propose redesign simplified use simplified maintenance manage maintain white label design system enables single source documents used multiple uni quely branded documents online help systems obtain input subject matter experts create unified co nsistent simplified documents manage communicate delivery timeframes documentation training materials qualifications advanced co ursework equivalent experience using adobe technical communication suite content development tools robohelp framemaker captivate acrobat pro dreamweaver fireworks flash wor king knowledge html css exceptional design skills print online mediums exceptional written oral communication skills ability absorb understand complex busin ess technology terminology highly self motivated able work minimal superv ision meet tight deadlines ability effectively prioritize execute task fast moving environment ba bs degree instructional design technical writing paysimple solution cloud based receivables management software enables small businesses bill friendly system paysimple headquarters located heart lodo building extraordinary company looking talented energetic motivated individuals join unique environment 1433 17 th street ste 300 denver co 80202 p 800 466 0992 f 303 374 5378 www paysimple com looking company truly different beige cubicles typical office politics come join company rewards authenticity supports energy passion visit website www paysimple com click career opportunities read vision energy paysimple paths extraordinary returns truly spe aks click apply fill fun questionnaire send us resume cover letter look forward hearing", 
    "crawled_date": "2017-06-10T13:59:47.760739"
  }, 
  "10": {
    "link4": "http://developer.authorize.net/api/reference/features/transaction_reporting.html", 
    "link1": "http://developer.authorize.net/api/reference/features/payment_transactions.html", 
    "api_url": "authorize.net", 
    "link3": "http://developer.authorize.net/api/reference/", 
    "link2": "http://developer.authorize.net/api/reference/features/recurring_billing.html", 
    "progweb_url": "https://www.programmableweb.com/api/authorizenet", 
    "progweb_date": "02.20.2007", 
    "progweb_descr": "From their site: Since 1996, Authorize.Net has been a leading provider of Internet Protocol (IP) based payment gateway services, enabling merchants to authorize, settle and manage credit card and electronic check transactions from a Web site, retail store, mail order/telephone order (MOTO) call center or mobile device. With a live internet connection, developers can authorize and process payments through the Authorize.Net API, enabling the ability to emulate an HTML Form Post using a Secure Sockets Layer (SSL) connection.", 
    "api_name": "Authorize.Net", 
    "progweb_cat": "Payments,eCommerce", 
    "descr4": "apihello worldsupportsign inour apiapi featuresapi reference sample codesdks github api change loghello worldget startedcommon setup questionstesting guidehow payments work supportget supportnews announcementsforumsauthorize net githubauthorize net stack overflowdeveloper blogresponse \\( error \\) codesfaqscontact ussign insandboxaffiliatesearch developer site transaction reporting authorize net api includes multiple reporting methods allow developers access transaction history retrieving transaction details authorize net api authorize net 's solution developers looking extract reporting statistical data existing transactions use transaction details api must enable merchant interface enabling api account log merchant interface https account authorize netselect settings account management left menu click transaction details api link security settings section transaction details api screen displays already enabled transaction details api enter answer secret question click enable transaction details api successfully enabled transaction details api settings page displays resources api referencesdks sample code github api services transaction details api allows merchants retrieve following sets data settled batch list returns batch id settlement time settlement state settled batches range dates authorize net automatically groups transactions batch every 24 hours submits settlement batch limited single payment type transaction list returns summary details transaction unsettled transactions list returns data 1000 recent transactions customer profile transactions list returns details transaction specific customer profile payment profile transaction details returns complete transaction information batch statistics returns statistics single batch specified batch id merchant details returns setup configuration details merchant 's authorize net account usauthorize netcorporate blogtwittercontact ushow payments workvideo tutorialsunderstanding creditcard processingglossarypci compliancefind partneraffiliate programcertification programcertified 3rd partyproducts servicescybersource comsite mapprivacyterms use 2015 authorize net rights reserved", 
    "descr3": "api hello world support sign api api features api reference sample code sdks github api change log hello world get started common setup questions testing guide payments work support get support news announcements forums authorize net github authorize net stack overflow developer blog response \\( error \\) codes faqs contact us sign sandbox affiliate search developer site api reference authentication calls authorize net api require merchant authentication sign sandbox account get started quickly fields try sandbox credentials api endpoints merchantauthentication enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? authenticatetestresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages authenticatetestresponse messages resultcode ok message code i00001 text successful loading request method post sandbox url https apitest authorize net xml v1 request api production url https api authorize net xml v1 request api xsd url https api authorize net xml v1 schema anetapischema xsd xml content type text xml json content type application json payment transactions createtransactionrequest function enables submit wide variety transaction requests depending structure example differences transactiontype field payment field create different types transactions information different types transactions see payment transactions feature details page charge credit card use method authorize capture credit card payment request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd refid 123456 refid messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode authcode ugelqc authcode avsresultcode e avsresultcode cavvresultcode transid 2148061808 transid reftransid transhash 0b428d8a928aac61121af2f6eac5ff3f transhash accountnumber xxxx0015 accountnumber accounttype mastercard accounttype message code 1 code description transaction approved description message userfields userfield name merchantdefinedfieldname1 name value merchantdefinedfieldvalue1 value userfield userfield name favorite color name value lavender value userfield userfields transactionresponse createtransactionresponse transactionresponse responsecode 1 authcode c1e3i6 avsresultcode cvvresultcode cavvresultcode 9 transid 2149186775 reftransid transhash c85b15ced28462974f1114db07a16c39 accountnumber xxxx0015 accounttype mastercard messages code 1 description transaction approved userfields name merchantdefinedfieldname1 value merchantdefinedfieldvalue1 name favorite color value blue refid 123456 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url authorize credit card use method authorize credit card payment actually charge funds need follow capture transaction request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd refid 123456 refid messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode authcode ugelqc authcode avsresultcode e avsresultcode cavvresultcode transid 2148061808 transid reftransid transhash 0b428d8a928aac61121af2f6eac5ff3f transhash testrequest 0 testrequest accountnumber xxxx0015 accountnumber accounttype mastercard accounttype message code 1 code description transaction approved description message userfields userfield name merchantdefinedfieldname1 name value merchantdefinedfieldvalue1 value userfield userfield name favorite color name value lavender value userfield userfields transactionresponse createtransactionresponse transactionresponse responsecode 1 authcode hh5414 avsresultcode cvvresultcode cavvresultcode 6 transid 2149186848 reftransid transhash fe3ce11e9f7670d3ecd606e455b7c222 testrequest 0 accountnumber xxxx0015 accounttype mastercard messages code 1 description transaction approved userfields name merchantdefinedfieldname1 value merchantdefinedfieldvalue1 name favorite color value blue refid 123456 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url capture previously authorized amount use method capture funds transaction previously authorized using authonlytransaction request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd refid 123456 refid messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode authcode rohnfq authcode avsresultcode p avsresultcode cvvresultcode cavvresultcode transid 2214480791 transid reftransid 2214480791 reftransid transhash 492e8e689ebd28d07749848b7c1e49d3 transhash testrequest 0 testrequest accountnumber xxxx0015 accountnumber accounttype mastercard accounttype messages message code 1 code description transaction approved description message messages transactionresponse createtransactionresponse transactionresponse responsecode 1 authcode hh5414 avsresultcode p cvvresultcode cavvresultcode transid 2149186848 reftransid 2149186848 transhash fe3ce11e9f7670d3ecd606e455b7c222 testrequest 0 accountnumber xxxx0015 accounttype mastercard messages code 1 description transaction approved refid 123456 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url capture funds authorized another channel use method capture funds authorized another channel example phone authorization need capture authorizeonlytransaction use priorauthcapturetransaction instead request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd refid 123456 refid messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode authcode rohnfq authcode avsresultcode p avsresultcode cvvresultcode cavvresultcode transid 2214480791 transid reftransid 2214480791 reftransid transhash 492e8e689ebd28d07749848b7c1e49d3 transhash testrequest 0 testrequest accountnumber xxxx0015 accountnumber accounttype mastercard accounttype messages message code 1 code description transaction approved description message messages transactionresponse createtransactionresponse transactionresponse responsecode 1 authcode rohnfq avsresultcode p cvvresultcode cavvresultcode transid 2149186851 reftransid transhash e385c13a873ec470bb9ad7c2c9d02d13 testrequest 0 accountnumber xxxx0015 accounttype mastercard messages code 1 description transaction approved refid 123456 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url refund transaction transaction type used refund customer transaction successfully settled payment gateway note credit card information bank account information mutually exclusive submit request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd refid 123456 refid messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode authcode avsresultcode p avsresultcode cvvresultcode cavvresultcode transid 1234566778 transid reftransid 1122334455 reftransid transhash 362802181b7d3947e862e42fd0fd8219 transhash testrequest 0 testrequest accountnumber xxxx0015 accountnumber accounttype mastercard accounttype messages message code 1 code description transaction approved description message messages transactionresponse createtransactionresponse transactionresponse responsecode 1 authcode avsresultcode p cvvresultcode cavvresultcode transid 1234566778 reftransid 1122334455 transhash d04b060066ba442aff73a31b97a4693f testrequest 0 accountnumber xxxx0015 accounttype mastercard messages code 1 description transaction approved refid 123456 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url void transaction transaction type used cancel either original transaction yet settled entire order composed one transaction void prevents transaction order sent settlement void submitted transaction type request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse refid 123456 refid messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode authcode ugelqc authcode avsresultcode e avsresultcode cavvresultcode transid 2148061808 transid reftransid transhash 0b428d8a928aac61121af2f6eac5ff3f transhash testrequest 0 testrequest accountnumber xxxx0015 accountnumber accounttype mastercard accounttype message code 1 code description transaction approved description message userfields userfield name merchantdefinedfieldname1 name value merchantdefinedfieldvalue1 value userfield userfield name favorite color name value lavender value userfield userfields transactionresponse createtransactionresponse transactionresponse responsecode 1 authcode hh5414 avsresultcode p cvvresultcode cavvresultcode transid 2149186848 reftransid 2149186848 transhash d3a855f0934eb404de3b13508d0e3826 testrequest 0 accountnumber xxxx0015 accounttype mastercard messages code 1 description transaction approved refid 123456 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url update split tender group use function update status existing order contains multiple transactions splittenderid value request response try sample code updatesplittendergrouprequest updatesplittendergroupresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? updatesplittendergroupresponse xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages updatesplittendergroupresponse messages resultcode error message code e00027 text specified splittenderid invalid loading view php c java ruby python node url url url url url url debit bank account use method process ach debit transaction using bank account details request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse refid 123456 refid messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode authcode avsresultcode p avsresultcode cvvresultcode cavvresultcode transid 2214627492 transid reftransid transhash 7a6dcd2645df873c035dce4832c08036 transhash testrequest 0 testrequest accountnumber xxxx5678 accountnumber accounttype echeck accounttype messages message code 1 code description transaction approved description message messages transactionresponse createtransactionresponse transactionresponse responsecode 1 authcode avsresultcode p cvvresultcode cavvresultcode transid 2149186917 reftransid transhash 803d51fdf65043182bf264b8baa8b2df testrequest 0 accountnumber xxxx5678 accounttype echeck messages code 1 description transaction approved refid 123456 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url credit bank account transaction type used refund customer using bank account credit transaction request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse refid 123456 refid messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode authcode ugelqc authcode avsresultcode e avsresultcode cavvresultcode transid 2148061808 transid reftransid transhash 0b428d8a928aac61121af2f6eac5ff3f transhash testrequest 0 testrequest accountnumber xxxx5678 accountnumber accounttype echeck accounttype message code 1 code description transaction approved description message userfields userfield name merchantdefinedfieldname1 name value merchantdefinedfieldvalue1 value userfield userfield name favorite color name value lavender value userfield userfields transactionresponse createtransactionresponse transactionresponse responsecode 3 authcode avsresultcode p cvvresultcode cavvresultcode transid 0 reftransid 2149181544 transhash d6c9036f443bade785d57da2b44cd190 testrequest 0 accountnumber xxxx5678 accounttype echeck errors errorcode 16 errortext transaction cannot found refid 123456 messages resultcode error message code e00027 text transaction unsuccessful loading view php c java ruby python node url url url url url url charge customer profile use method authorize capture payment using stored customer payment profile note use customer profiles createtransaction using profile field children anywhere use credit card bank account information request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema aneta pischema xsd refid 123456 refid messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode authcode ugelqc authcode avsresultcode e avsresultcode cavvresultcode transid 2148061808 transid reftransid transhash 0b428d8a928aac61121af2f6eac5ff3f transhash testrequest 0 testrequest accountnumber xxxx0015 accountnumber accounttype mastercard accounttype message code 1 code description transaction approved description message userfields userfield name merchantdefinedfieldname1 name value merchantdefinedfieldvalue1 value userfield userfield name favorite color name value lavender value userfield userfields transactionresponse createtransactionresponse transactionresponse responsecode 1 authcode c1e3i6 avsresultcode cvvresultcode cavvresultcode 9 transid 2149186775 reftransid transhash c85b15ced28462974f1114db07a16c39 testrequest 0 accountnumber xxxx0015 accounttype mastercard messages code 1 description transaction approved userfields name merchantdefinedfieldname1 value merchantdefinedfieldvalue1 name favorite color value blue refid 123456 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url charge tokenized credit card use method authorize capture payment using tokenized credit card number processor must support payment network tokenization token must issued certified token provider request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema aneta pischema xsd refid 123456 refid messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode authcode ugelqc authcode avsresultcode e avsresultcode cavvresultcode transid 2148061808 transid reftransid transhash 0b428d8a928aac61121af2f6eac5ff3f transhash testrequest 0 testrequest accountnumber xxxx0015 accountnumber accounttype mastercard accounttype message code 1 code description transaction approved description message userfields userfield name merchantdefinedfieldname1 name value merchantdefinedfieldvalue1 value userfield userfield name favorite color name value lavender value userfield userfields transactionresponse createtransactionresponse transactionresponse responsecode 1 authcode c1e3i6 avsresultcode cvvresultcode cavvresultcode 9 transid 2149186775 reftransid transhash c85b15ced28462974f1114db07a16c39 testrequest 0 accountnumber xxxx0015 accounttype mastercard messages code 1 description transaction approved userfields name merchantdefinedfieldname1 value merchantdefinedfieldvalue1 name favorite color value blue refid 123456 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url create accept payment transaction use function create authorize net payment transaction request using accept payment nonce place card data request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema aneta pischema xsd refid 123456 refid messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode authcode ugelqc authcode avsresultcode e avsresultcode cavvresultcode transid 2148061808 transid reftransid transhash 0b428d8a928aac61121af2f6eac5ff3f transhash testrequest 0 testrequest accountnumber xxxx0015 accountnumber accounttype mastercard accounttype message code 1 code description transaction approved description message userfields userfield name merchantdefinedfieldname1 name value merchantdefinedfieldvalue1 value userfield userfield name favorite color name value lavender value userfield userfields transactionresponse createtransactionresponse transactionresponse responsecode 1 authcode 2768no avsresultcode cvvresultcode p cavvresultcode 2 transid 60006537898 reftransid transhash b3bdc21a6b341938d8f1927492f4d516 testrequest 0 accountnumber xxxx0005 accounttype americanexpress messages code 1 description transaction approved userfields name merchantdefinedfieldname1 value merchantdefinedfieldvalue1 name favorite color value blue transhashsha2 refid 123456 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url get accept payment page use function retrieve form token used request authorize net accept hosted payment page information using hosted payment page see accept hosted feature details page request response try sample code gethostedpaymentpagerequest gethostedpaymentpageresponse enter sandbox credentials sample requests run account sign account really quickly response gethostedpaymentpageresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages token fpxakwfqzjud6zzuu yz9olx2ykohd2bpzjm6u teyyski3kmr9xmszksevw8bafqxwpshkqauuxup0upmvwjelvnzdv tydcsq2 x b7kuoqpnqebnhmzg token gethostedpaymentpageresponse token fcfc6vbkgfztf8g4si0b1bg35quhgglnjx7g8zrpqv0gha2862kkqrq naga6y2sihuecasp cqkqdq0qjr8mofnzd2d0efogswp6tqvg3xlv1ls28wfkzht2u dsh64ea3jliwedu shortened brevity wc1mnvqnkv2z 1msh4oiwoxvleb2q7ezqhyl1fgs8jdayza7ls ayf05s 89ne4beh messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url mobile app transactions enables pass accept mobile apple pay android pay payment data authorize net information app payment transactions see mobile app feature details page create accept transaction use function create authorize net payment transaction request using accept payment nonce place card data request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema aneta pischema xsd refid 123456 refid messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode authcode ugelqc authcode avsresultcode e avsresultcode cavvresultcode transid 2148061808 transid reftransid transhash 0b428d8a928aac61121af2f6eac5ff3f transhash testrequest 0 testrequest accountnumber xxxx0015 accountnumber accounttype mastercard accounttype message code 1 code description transaction approved description message userfields userfield name merchantdefinedfieldname1 name value merchantdefinedfieldvalue1 value userfield userfield name favorite color name value lavender value userfield userfields transactionresponse createtransactionresponse transactionresponse responsecode 1 authcode 2768no avsresultcode cvvresultcode p cavvresultcode 2 transid 60006537898 reftransid transhash b3bdc21a6b341938d8f1927492f4d516 testrequest 0 accountnumber xxxx0005 accounttype americanexpress messages code 1 description transaction approved userfields name merchantdefinedfieldname1 value merchantdefinedfieldvalue1 name favorite color value blue transhashsha2 refid 123456 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url create apple pay transaction use function create authorize net payment transaction request using apple pay data place card data request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema aneta pischema xsd refid 123456 refid messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode authcode ugelqc authcode avsresultcode e avsresultcode cavvresultcode transid 2148061808 transid reftransid transhash 0b428d8a928aac61121af2f6eac5ff3f transhash testrequest 0 testrequest accountnumber xxxx0015 accountnumber accounttype mastercard accounttype message code 1 code description transaction approved description message userfields userfield name merchantdefinedfieldname1 name value merchantdefinedfieldvalue1 value userfield userfield name favorite color name value lavender value userfield userfields transactionresponse createtransactionresponse transactionresponse responsecode 1 authcode 2768no avsresultcode cvvresultcode p cavvresultcode 2 transid 60006537898 reftransid transhash b3bdc21a6b341938d8f1927492f4d516 testrequest 0 accountnumber xxxx0005 accounttype americanexpress messages code 1 description transaction approved userfields name merchantdefinedfieldname1 value merchantdefinedfieldvalue1 name favorite color value blue transhashsha2 refid 123456 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url create android pay transaction use function create authorize net payment transaction request using android pay data place card data request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema aneta pischema xsd refid 123456 refid messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode authcode ugelqc authcode avsresultcode e avsresultcode cavvresultcode transid 2148061808 transid reftransid transhash 0b428d8a928aac61121af2f6eac5ff3f transhash testrequest 0 testrequest accountnumber xxxx0015 accountnumber accounttype mastercard accounttype message code 1 code description transaction approved description message userfields userfield name merchantdefinedfieldname1 name value merchantdefinedfieldvalue1 value userfield userfield name favorite color name value lavender value userfield userfields transactionresponse createtransactionresponse transactionresponse responsecode 1 authcode 2768no avsresultcode cvvresultcode p cavvresultcode 2 transid 60006537898 reftransid transhash b3bdc21a6b341938d8f1927492f4d516 testrequest 0 accountnumber xxxx0005 accounttype americanexpress messages code 1 description transaction approved userfields name merchantdefinedfieldname1 value merchantdefinedfieldvalue1 name favorite color value blue transhashsha2 refid 123456 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url visa checkout visa checkout enables pass visa checkout payment data authorize net information authorize net 's implementation visa checkout see visa checkout feature details page decrypt visa checkout data use method decrypt visa checkout encrypted payment data retrieve information shipping address tax amounts card art request response try sample code decryptpaymentdatarequest decryptpaymentdataresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? decryptpaymentdataresponse xmlns anetapi xml v1 schema anetapischema xsd xmlns xsd http www w3 org 2001 xmlschema xmlns xsi http www w3 org 2001 xmlschema instance messages resultcode ok resultcode message code i00001 code text successful text message messages shippinginfo firstname john firstname lastname doe lastname address 800 main st address city bellevue city state wa state zip 98004 zip country us country shippinginfo billinginfo firstname john firstname lastname doe lastname address 800 main st address city bellevue city state wa state zip 98004 zip country us country email john mail com email billinginfo cardinfo cardnumber xxxx4242 cardnumber expirationdate 12 2022 expirationdate cardart cardbrand visa cardbrand cardimageheight 50 cardimageheight cardimageurl https sandbox secure checkout visa com vmecardarts wv87hr3x3jqlnxnju 6ytlqyyo7mpu2au6yo3vwgkkm png cardimageurl cardimagewidth 77 cardimagewidth cardtype debit cardtype cardart cardinfo paymentdetails currency usd currency amount 16 00 amount paymentdetails decryptpaymentdataresponse shippinginfo firstname john lastname doe address 500 main st city seattle state wa zip 98104 country us billinginfo email john mail com firstname john lastname doe address 500 main st city seattle state wa zip 98104 country us cardinfo cardnumber xxxx4242 expirationdate 12 2018 cardart cardbrand visa cardimageheight 50 cardimageurl https sandbox secure checkout visa com vmecardarts wv87hr3x3jqlnxnju 6ytlqyyo7mpu2au6yo3vwgkkm png cardimagewidth 77 cardtype debit paymentdetails currency usd amount 16 00 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url create visa checkout transaction use function create authorize net payment transaction request using visa checkout data place card data order tax duty shipping customer billing shipping information obtained visa checkout required submit fields request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema aneta pischema xsd refid 123456 refid messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode authcode ugelqc authcode avsresultcode e avsresultcode cavvresultcode transid 2148061808 transid reftransid transhash 0b428d8a928aac61121af2f6eac5ff3f transhash testrequest 0 testrequest accountnumber xxxx0015 accountnumber accounttype mastercard accounttype message code 1 code description transaction approved description message userfields userfield name merchantdefinedfieldname1 name value merchantdefinedfieldvalue1 value userfield userfield name favorite color name value lavender value userfield userfields transactionresponse createtransactionresponse transactionresponse refid 123456 messages resultcode error message code e00007 text user authentication failed due invalid authentication values loading view php c java ruby python node url url url url url url paypal express checkout use following methods process paypal transactions must first sign service authorize net merchant interface https account authorize net sign page accounts digital payment solutions following calls createtransactionrequest calls paypal specific fields information authorize net 's implementation paypal checkout express see paypal feature details page note billing shipping request fields used customer wants use address different one stored paypal billing shipping profiles fields provided address validated paypal ensure valid address transaction declined paypal validation fails billing shipping fields present authorization authorization capture request calls authorization authorization request notifies paypal authorization initiated complete authorization returns secure url token appended purpose token identify transaction customer redirected paypal request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 5 responsecode transid 128 transid reftransid transhash a7c677fbb549f6362bb4017aa844c7ae transhash testrequest 0 testrequest accounttype paypal accounttype messages message code 2000 code description need payer consent description message messages secureacceptance secureacceptanceurl https www paypal com cgibin webscr \\? cmd express checkout token ec 4wl17777v4111184h secureacceptanceurl secureacceptance transactionresponse createtransactionresponse transactionresponse responsecode 5 rawresponsecode 0 transid 2149186954 reftransid transhash a719785ee9752530fdce67695e9a56ee testrequest 0 accounttype paypal messages code 2000 description need payer consent secureacceptance secureacceptanceurl https www sandbox paypal com cgi bin webscr \\? cmd express checkout token ec c506b0lgtg2j800ok messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url authorization capture type transaction common default payment gateway transaction type like authorization request notifies paypal authorization capture transaction initiated complete request also returns secure url token appended purpose token identify transaction customer redirected paypal request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 5 responsecode transid 128 transid reftransid transhash a7c677fbb549f6362bb4017aa844c7ae transhash testrequest 0 testrequest accounttype paypal accounttype messages message code 2000 code description need payer consent description message messages secureacceptance secureacceptanceurl https www paypal com cgibin webscr \\? cmd express checkout token ec 4wl17777v4111184h secureacceptanceurl secureacceptance transactionresponse createtransactionresponse transactionresponse responsecode 3 rawresponsecode 0 transid 0 reftransid transhash 2af9b654fe7745af78ebf7a8dd8a18d2 testrequest 0 accounttype paypal errors errorcode 2001 errortext paypal transactions accepted merchant messages resultcode error message code e00027 text transaction unsuccessful loading view php c java ruby python node url url url url url url get details get details transaction returns customer paypal payer id shipping information get details called time useful customer approved payment paypal request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode rawresponsecode 0 rawresponsecode transid 128 transid reftransid 128 reftransid transhash a7c677fbb549f6362bb4017aa844c7ae transhash testrequest 0 testrequest accounttype paypal accounttype messages message code 2003 code description request completed successfully description message messages shipto firstname first firstname lastname last lastname address 1 abc st suite 100 address city bellevue city state wa state zip 98005 zip country us country shipto secureacceptance payerid s6d5etgsvyx94 payerid secureacceptance transactionresponse createtransactionresponse transactionresponse responsecode 3 authcode avsresultcode p cvvresultcode cavvresultcode transid 0 reftransid 128 transhash b349ac0dcccf601c6db09403341cd18f testrequest 0 accountnumber accounttype errors errorcode 16 errortext transaction cannot found shipto messages resultcode error message code e00027 text transaction unsuccessful loading view php c java ruby python node url url url url url url authorization continued request successful actually authorizes transaction capture request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode rawresponsecode 0 rawresponsecode transid 128 transid reftransid 128 reftransid transhash a7c677fbb549f6362bb4017aa844c7ae transhash testrequest 0 testrequest accounttype paypal accounttype messages message code 1 code description transaction approved description message messages secureacceptance payerid s6d5etgsvyx94 payerid secureacceptance transactionresponse createtransactionresponse transactionresponse responsecode 3 authcode avsresultcode p cvvresultcode cavvresultcode transid 0 reftransid 128 transhash b349ac0dcccf601c6db09403341cd18f testrequest 0 accountnumber accounttype errors errorcode 16 errortext transaction cannot found shipto messages resultcode error message code e00027 text transaction unsuccessful loading view php c java ruby python node url url url url url url prior authorization capture transaction type used capture authorization continue transaction successfully authorized payment gateway request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode rawresponsecode 0 rawresponsecode transid 128 transid reftransid 128 reftransid transhash a7c677fbb549f6362bb4017aa844c7ae transhash testrequest 0 testrequest accounttype paypal accounttype messages message code 1 code description transaction approved description message messages transactionresponse createtransactionresponse transactionresponse responsecode 3 authcode avsresultcode p cvvresultcode cavvresultcode transid 0 reftransid 128 transhash b349ac0dcccf601c6db09403341cd18f testrequest 0 accountnumber accounttype errors errorcode 16 errortext transaction cannot found shipto messages resultcode error message code e00027 text transaction unsuccessful loading view php c java ruby python node url url url url url url authorization capture continue request actually authorizes captures transaction request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode rawresponsecode 0 rawresponsecode transid 139 transid reftransid transhash a7c677fbb549f6362bb4017aa844c7ae transhash testrequest 0 testrequest accounttype paypal accounttype messages message code 2000 code description need payer consent description message messages secureacceptance secureacceptanceurl secureacceptanceurl secureacceptance transactionresponse createtransactionresponse transactionresponse responsecode 3 authcode avsresultcode p cvvresultcode cavvresultcode transid 0 reftransid 139 transhash b349ac0dcccf601c6db09403341cd18f testrequest 0 accountnumber accounttype errors errorcode 16 errortext transaction cannot found shipto messages resultcode error message code e00027 text transaction unsuccessful loading view php c java ruby python node url url url url url url void transaction type used cancel authorization yet captured void used following sequence authorization authorization continue void request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode rawresponsecode 0 rawresponsecode transid 128 transid reftransid 128 reftransid transhash a7c677fbb549f6362bb4017aa844c7ae transhash testrequest 0 testrequest accounttype paypal accounttype messages message code 1 code description transaction approved description message messages transactionresponse createtransactionresponse transactionresponse responsecode 1 authcode hh5414 avsresultcode p cvvresultcode cavvresultcode transid 2149186848 reftransid 2149186848 transhash d3a855f0934eb404de3b13508d0e3826 testrequest 0 accountnumber xxxx0015 accounttype mastercard messages code 1 description transaction approved refid 123456 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url credit transaction type used refund customer transaction originally processed successfully settled payment gateway credits occur transactions settled system happens cutoff time request response try sample code createtransactionrequest createtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createtransactionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode rawresponsecode 0 rawresponsecode transid 128 transid reftransid 128 reftransid transhash a7c677fbb549f6362bb4017aa844c7ae transhash testrequest 0 testrequest accounttype paypal accounttype messages message code 1 code description transaction approved description message messages transactionresponse createtransactionresponse transactionresponse responsecode 3 transid 0 reftransid 2149186775 transhash d6c9036f443bade785d57da2b44cd190 testrequest 0 accounttype paypal errors errorcode 54 errortext referenced transaction meet criteria issuing credit refid 123456 messages resultcode error message code e00027 text transaction unsuccessful loading view php c java ruby python node url url url url url url fraud management use feature authorize net api access suspicious transactions approve decline information fraud management see payment transactions feature details page get held transaction list use function get data suspicious transactions function return data 1000 recent transactions single request paging options sent limit result set retrieve additional transactions beyond 1000 transaction limit add sorting paging options shown customize result set request response try sample code getunsettledtransactionlistrequest getunsettledtransactionlistresponse enter sandbox credentials sample requests run account sign account really quickly response getunsettledtransactionlistresponse xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages transactions transaction transid 60010736710 transid submittimeutc 2016 11 18t18 21 41z submittimeutc submittimelocal 2016 11 18t10 21 41 submittimelocal transactionstatus fdspendingreview transactionstatus invoicenumber inv 12345 invoicenumber firstname ellen firstname lastname johnson lastname accounttype mastercard accounttype accountnumber xxxx0015 accountnumber settleamount 50000 00 settleamount markettype ecommerce markettype product card present product fraudinformation fraudfilterlist fraudfilter amount filter fraudfilter fraudfilterlist fraudaction review fraudaction fraudinformation transaction transactions totalnuminresultset 1 totalnuminresultset getunsettledtransactionlistresponse transactions transid 60010736710 submittimeutc 2016 11 18t18 21 41z submittimelocal 2016 11 18t10 21 41 transactionstatus fdspendingreview invoicenumber inv 12345 firstname ellen lastname johnson accounttype mastercard accountnumber xxxx0015 settleamount 50000 markettype ecommerce product card present fraudinformation fraudfilterlist amount filter fraudaction review totalnuminresultset 1 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url approve decline held transaction approve decline held transaction request response try sample code updateheldtransactionrequest updateheldtransactionresponse enter sandbox credentials sample requests run account sign account really quickly response updateheldtransactionresponse refid 100 refid messages resultcode ok resultcode message code i00001 code text successful text message messages transactionresponse responsecode 1 responsecode authcode gbb32b authcode avsresultcode p avsresultcode cvvresultcode cavvresultcode transid 2153394972 transid reftransid 2153394972 reftransid transhash 49f7dd144d4dc7068d4115fc8082de6b transhash testrequest 0 testrequest accountnumber xxxx0015 accountnumber accounttype mastercard accounttype messages message code 1 code description transaction approved description message messages transhashsha2 transactionresponse updateheldtransactionresponse transactionresponse responsecode 1 authcode 40c68k avsresultcode cvvresultcode p cavvresultcode 2 transid 60010736710 reftransid 60010736710 transhash 722f2079bdc5500935d32beddf6165b1 testrequest 0 accountnumber xxxx0015 accounttype mastercard messages code 1 description transaction approved transhashsha2 eff9481a54853f79c37df2602339102dbb15d9b42d56fc20373b2e48e6918d2fd4b8334c916301af01e41a4fc7159fd434725be9471df285243f6b0a63a99f76 refid 12345 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url recurring billing recurring billing api methods enable manage regular payment subscriptions information recurring billing see recurring billing feature details page create subscription subscriptions monthly interval whose payments begin 31st month payments months fewer 31 days occur last day month request response try sample code arbcreatesubscriptionrequest arbcreatesubscriptionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? arbcreatesubscriptionresponse xmlns anetapi xml v1 schema anetapischema xsd refid sample refid messages resultcode ok resultcode message code i00001 code text successful text message messages subscriptionid 100748 subscriptionid profile customerprofileid 247150 customerprofileid customerpaymentprofileid 215472 customerpaymentprofileid customeraddressid 189691 customeraddressid profile arbcreatesubscriptionresponse subscriptionid 158383 profile customerprofileid 247135 customerpaymentprofileid 215458 customeraddressid 189691 refid sample messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url create subscription customer profile request enables create recurring billing subscription existing customer profile note customer payment profile first last name fields must populated required subscription subscriptions monthly interval whose payments begin 31st month payments months fewer 31 days occur last day month request response try sample code arbcreatesubscriptionrequest arbcreatesubscriptionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? arbcreatesubscriptionresponse xmlns anetapi xml v1 schema anetapischema xsd refid sample refid messages resultcode ok resultcode message code i00001 code text successful text message messages subscriptionid 100748 subscriptionid profile customerprofileid 39931060 customerprofileid customerpaymentprofileid 36223863 customerpaymentprofileid customeraddressid 37726371 customeraddressid profile arbcreatesubscriptionresponse subscriptionid 158383 profile customerprofileid 39931060 customerpaymentprofileid 36223863 customeraddressid 37726371 refid sample messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url get subscription retrieves existing arb subscription request response try sample code arbgetsubscriptionrequest arbgetsubscriptionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? arbgetsubscriptionresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd refid sample refid messages resultcode ok resultcode message code i00001 code text successful text message messages subscription name sample subscription name paymentschedule interval length 1 length unit months unit interval startdate 2020 12 30 startdate totaloccurrences 12 totaloccurrences trialoccurrences 1 trialoccurrences paymentschedule amount 10 29 amount trialamount 0 00 trialamount status active status profile description profile created subscription 2930242 description customerprofileid 37978171 customerprofileid paymentprofile customertype individual customertype billto firstname john firstname lastname smith lastname billto customerpaymentprofileid 34531293 customerpaymentprofileid payment creditcard cardnumber xxxx1111 cardnumber expirationdate xxxx expirationdate creditcard payment paymentprofile profile subscription arbgetsubscriptionresponse arbgetsubscriptionresponse refid sample messages resultcode ok message code i00001 text successful subscription name sample subscription paymentschedule interval length 1 unit months startdate 2020 12 30 totaloccurrences 12 trialoccurrences 1 amount 10 29 trialamount 0 00 status active profile description profile created subscription 2930242 customerprofileid 37978171 paymentprofile customertype individual billto firstname john lastname smith customerpaymentprofileid 34531293 payment creditcard cardnumber xxxx1111 expirationdate xxxx loading view php c java ruby python node url url url url url url get subscription status retrieves status existing arb subscription request response try sample code arbgetsubscriptionstatusrequest arbgetsubscriptionstatusresponse enter sandbox credentials sample requests run account sign account really quickly response arbgetsubscriptionstatusresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd refid sample refid messages resultcode ok resultcode message code i00001 code text successful text message messages status active status arbgetsubscriptionstatusresponse note status capital 's' obsolete status active status active statusspecified true statusspecified true refid sample messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url update subscription updates existing arb subscription subscription id fields wish modify must submitted request response try sample code arbupdatesubscriptionrequest arbupdatesubscriptionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? arbupdatesubscriptionresponse xmlns anetapi xml v1 schema anetapischema xsd refid sample refid messages resultcode ok resultcode message code i00001 code text successful text message messages profile customerprofileid 247150 customerprofileid customerpaymentprofileid 215472 customerpaymentprofileid customeraddressid 189691 customeraddressid profile arbupdatesubscriptionresponse profile customerprofileid 247135 customerpaymentprofileid 215458 customeraddressid 189691 refid sample messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url cancel subscription cancels existing subscription request response try sample code arbcancelsubscriptionrequest arbcancelsubscriptionresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? arbcancelsubscriptionresponse xmlns anetapi xml v1 schema anetapischema xsd refid sample refid messages resultcode ok resultcode message code i00001 code text successful text message messages arbcancelsubscriptionresponse refid sample messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url get list subscriptions use following method request list subscriptions function return 1000 results single request paging options sent limit result set retrieve additional results beyond 1000 item limit add sorting paging options shown customize result set request response try sample code arbgetsubscriptionlistrequest arbgetsubscriptionlistresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? arbgetsubscriptionlistresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages totalnuminresultset 1 totalnuminresultset subscriptiondetails subscriptiondetail id 155551 id name arb subscription test name status active status createtimestamputc 2014 07 11t02 52 42 96 createtimestamputc firstname john firstname lastname doe lastname totaloccurrences 8 totaloccurrences pastoccurrences 5 pastoccurrences paymentmethod creditcard paymentmethod accountnumber xxxx1234 accountnumber invoice amount 19 99 amount currencyid 0 currencyid customerprofileid 35177884 customerprofileid customerpaymentprofileid 32072504 customerpaymentprofileid customershippingprofileid 33354881 customershippingprofileid subscriptiondetail subscriptiondetails arbgetsubscriptionlistresponse totalnuminresultset 1273 totalnuminresultsetspecified true subscriptiondetails id 100188 name subscription status canceled createtimestamputc 2004 04 28t23 59 47 33 firstname joe lastname tester totaloccurrences 12 pastoccurrences 6 paymentmethod creditcard accountnumber xxxx5454 invoice 42820041325496571 amount 10 currencycode usd id 100222 name status canceled createtimestamputc 2004 10 22t21 00 15 503 firstname asdf lastname asdf totaloccurrences 12 pastoccurrences 0 paymentmethod creditcard accountnumber xxxx1111 invoice amount 1 currencycode usd id 100223 name status canceled createtimestamputc 2004 10 22t21 01 27 69 firstname asdf lastname asdf totaloccurrences 12 pastoccurrences 1 paymentmethod echeck accountnumber xxxx3888 invoice amount 10 currencycode usd messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url customer profiles api enables store customer payment address data subsequent use information customer profiles see customer profiles feature details page create customer profile use function create new customer profile including customer payment profiles customer shipping addresses request response try sample code createcustomerprofilerequest createcustomerprofileresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createcustomerprofileresponse xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages customerprofileid 10000 customerprofileid customerpaymentprofileidlist numericstring 20000 numericstring numericstring 20001 numericstring customerpaymentprofileidlist customershippingaddressidlist numericstring 30000 numericstring numericstring 30001 numericstring customershippingaddressidlist validationdirectresponselist string 1 1 1 transaction approved 000000 2000000000 none test transaction validatecustomerpaymentprofile 0 01 cc auth custid123 john doe 123 main st bellevue wa 98004 usa 000 000 0000 mark example com 0 00 0 00 0 00 none d18eb6b211fe0bbf556b271fda6f92ee string validationdirectresponselist createcustomerprofileresponse customerprofileid 190178 customerpaymentprofileidlist 157497 customershippingaddressidlist validationdirectresponselist 1 1 1 \\( testmode \\) transaction approved 000000 p 0 none test transaction validatecustomerpaymentprofile 1 00 cc auth merchant customer id customer profile email com 0 00 0 00 0 00 false none 207bcbbf78e85cf174c87ae286b472d2 xxxx1111 visa messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url get customer profile use function retrieve existing customer profile along associated payment profiles shipping addresses request response try sample code getcustomerprofilerequest getcustomerprofileresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? getcustomerprofileresponse xmlns anetapi xml v1 schema anetapischema xsd xmlns xsd http www w3 org 2001 xmlschema xmlns xsi http www w3 org 2001 xmlschema instance messages resultcode ok resultcode message code i00001 code text successful text message messages profile merchantcustomerid cust001 merchantcustomerid description profile created subscription 3078153 description email joe mail com email customerprofileid 39598611 customerprofileid paymentprofiles customertype individual customertype billto firstname john firstname lastname smith lastname billto customerpaymentprofileid 35936989 customerpaymentprofileid payment creditcard cardnumber xxxx1111 cardnumber expirationdate xxxx expirationdate creditcard payment paymentprofiles profile subscriptionids subscriptionid 3078153 subscriptionid subscriptionid 3078154 subscriptionid subscriptionids getcustomerprofileresponse profile paymentprofiles customerpaymentprofileid 35936989 payment creditcard cardnumber xxxx1111 expirationdate xxxx customertype individual billto firstname john lastname smith customerprofileid 39598611 merchantcustomerid cust001 description profile created subscription 3078153 email joe mail com subscriptionids 3078153 3078154 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url get customer profile ids use function retrieve existing customer profile ids request response try sample code getcustomerprofileidsrequest getcustomerprofileidsresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? getcustomerprofileidsresponse xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages ids numericstring 10000 numericstring numericstring 10001 numericstring numericstring 10002 numericstring ids getcustomerprofileidsresponse ids 47988 47997 48458 48468 189118 190178 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url update customer profile use function update existing customer profile request response try sample code updatecustomerprofilerequest updatecustomerprofileresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? updatecustomerprofileresponse xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages updatecustomerprofileresponse messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url delete customer profile use function delete existing customer profile along associated customer payment profiles customer shipping addresses request response try sample code deletecustomerprofilerequest deletecustomerprofileresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? deletecustomerprofileresponse xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages deletecustomerprofileresponse messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url create customer payment profile use function create new customer payment profile existing customer profile request response try sample code createcustomerpaymentprofilerequest createcustomerpaymentprofileresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createcustomerpaymentprofileresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages customerprofileid 10000 customerprofileid customerpaymentprofileid 20000 customerpaymentprofileid validationdirectresponse 1 1 1 transaction approved 000000 2000000000 none test transaction validatecustomerpaymentprofile 0 00 cc auth none john doe 123 main st bellevue wa 98004 usa 000 000 0000 email example com 0 00 0 00 0 00 false none e42c2f81807aa1b581dea12eb6727604 p 2 xxxx1111 visa validationdirectresponse createcustomerpaymentprofileresponse customerprofileid 10000 customerpaymentprofileid 20000 validationdirectresponse 1 1 1 transaction approved 000000 2000000000 none test transaction validatecustomerpaymentprofile 0 00 cc auth custid123 john doe 123 main st bellevue wa 98004 usa 000 000 0000 email example com 0 00 0 00 0 00 false none d18eb6b211fe0bbf556b271fda6f92ee p 2 xxxx1111 visa messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url get customer payment profile use function retrieve details customer payment profile associated existing customer profile note payment profile previously set default payment profile submit request using customerprofileid parameter submitting request customer profile id cause information default payment profile returned default payment profile previously designated payment profile designated default payment profile failing specify payment profile result error request response try sample code getcustomerpaymentprofilerequest getcustomerpaymentprofileresponse enter sandbox credentials sample requests run account sign account really quickly response getcustomerpaymentprofileresponse xmlns anetapi xml v1 schema anetapischema xsd xmlns xsd http www w3 org 2001 xmlschema xmlns xsi http www w3 org 2001 xmlschema instance messages resultcode ok resultcode message code i00001 code text successful text message messages paymentprofile customertype individual customertype billto firstname john firstname lastname smith lastname billto customerprofileid 39598611 customerprofileid customerpaymentprofileid 35936989 customerpaymentprofileid payment creditcard cardnumber xxxx1111 cardnumber expirationdate xxxx expirationdate creditcard payment subscriptionids subscriptionid 3078153 subscriptionid subscriptionid 3078154 subscriptionid subscriptionids paymentprofile getcustomerpaymentprofileresponse paymentprofile customerprofileid 39598611 customerpaymentprofileid 35936989 payment creditcard cardnumber xxxx1111 expirationdate xxxx subscriptionids 3078153 3078154 customertype individual billto firstname john lastname smith messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url get customer payment profile list use function get list payment profiles match submitted searchtype use function get list cards expiring month function return 1000 results single request paging options sent limit result set retrieve additional results beyond 1000 item limit add sorting paging options shown customize result set request response try sample code getcustomerpaymentprofilelistrequest getcustomerpaymentprofilelistresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? getcustomerpaymentprofilelistresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages totalnuminresultset 1 totalnuminresultset paymentprofiles paymentprofile customerpaymentprofileid 1051079 customerpaymentprofileid customerprofileid 918787 customerprofileid billto firstname john firstname lastname smith lastname company city state zip country billto payment creditcard cardnumber xxxx1111 cardnumber expirationdate xxxx expirationdate creditcard payment paymentprofile paymentprofiles getcustomerpaymentprofilelistresponse getcustomerpaymentprofilelistresponse messages resultcode ok message code i00001 text successful totalnuminresultset 1 paymentprofiles paymentprofile customerpaymentprofileid 1051079 customerprofileid 918787 billto firstname john lastname smith payment creditcard cardnumber xxxx1111 expirationdate xxxx loading view php c java ruby python node url url url url url url validate customer payment profile use function generate test transaction verifies existing customer payment profile customer receipt emails sent validatecustomerpaymentprofilerequest function called request response try sample code validatecustomerpaymentprofilerequest validatecustomerpaymentprofileresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? validatecustomerpaymentprofileresponse xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages directresponse 1 1 1 transaction approved 000000 2000000003 none test transaction validatecustomerpaymentprofile 0 01 cc auth custid123 john doe 123 main st bellevue wa 98004 usa 000 000 0000 mark example com john doe 123 main st bellevue wa 98004 usa 0 00 0 00 0 00 none d18eb6b211fe0bbf556b271fda6f92ee directresponse validatecustomerpaymentprofileresponse directresponse 1 1 1 transaction approved 8f14e1 2149186958 none test transaction validatecustomerpaymentprofile 0 00 cc auth ydidgxugkfsjqpdmxwby john doe 123 main st bellevue wa 98004 usa 000 000 0000 enitsigjfk authorize net 0 00 0 00 0 00 false none 32cb5a012bec7145759edc186968351a 8 xxxx1111 visa messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url update customer payment profile use function update payment profile existing customer profile note fields request submitted submitted blank value values original profile removed best practice prevent happening call getcustomerpaymentprofilerequest calling updatecustomerpaymentprofilerequest getcustomerpaymentprofilerequest call returns current information including masked payment information simply change field needs updating use data existing fields call updatecustomerpaymentprofilerequest test validity new payment information call validatecustomerpaymentprofilerequest successfully updating payment profile request response try sample code updatecustomerpaymentprofilerequest updatecustomerpaymentprofileresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? updatecustomerpaymentprofileresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages validationdirectresponse 1 1 1 transaction approved 000000 2000000000 none test transaction validatecustomerpaymentprofile 0 00 cc auth none john doe 123 main st bellevue wa 98004 usa 000 000 0000 email example com 0 00 0 00 0 00 false none e42c2f81807aa1b581dea12eb6727604 p 2 xxxx1111 visa validationdirectresponse updatecustomerpaymentprofileresponse validationdirectresponse 1 1 1 transaction approved 000000 2000000000 none test transaction validatecustomerpaymentprofile 0 00 cc auth custid123 john doe 123 main st bellevue wa 98004 usa 000 000 0000 email example com 0 00 0 00 0 00 false none d18eb6b211fe0bbf556b271fda6f92ee p 2 xxxx1111 visa messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url delete customer payment profile use function delete customer payment profile existing customer profile request response try sample code deletecustomerpaymentprofilerequest deletecustomerpaymentprofileresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? deletecustomerpaymentprofileresponse xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages deletecustomerpaymentprofileresponse messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url create customer shipping address use function create new customer shipping address existing customer profile request response try sample code createcustomershippingaddressrequest createcustomershippingaddressresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createcustomershippingaddressresponse xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages customeraddressid 30000 customeraddressid createcustomershippingaddressresponse customeraddressid 126406 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url get customer shipping address use function retrieve details customer shipping address associated existing customer profile note shipping address previously set default shipping address submit request using customerprofileid parameter submitting request customer profile id cause information default shipping address returned default shipping address previously designated shipping address designated default shipping address failing specify shipping address result error request response try sample code getcustomershippingaddressrequest getcustomershippingaddressresponse enter sandbox credentials sample requests run account sign account really quickly response getcustomershippingaddressresponse xmlns anetapi xml v1 schema anetapischema xsd xmlns xsd http www w3 org 2001 xmlschema xmlns xsi http www w3 org 2001 xmlschema instance messages resultcode ok resultcode message code i00001 code text successful text message messages address firstname china firstname lastname bayles lastname company thyme tea company address 12 main street address city pecan springs city state tx state zip 44628 zip country usa country customeraddressid 37457091 customeraddressid address subscriptionids subscriptionid 3078184 subscriptionid subscriptionids getcustomershippingaddressresponse address customeraddressid 37457091 firstname china lastname bayles company thyme tea address 12 main street city pecan springs state tx zip 44628 country usa subscriptionids 3078184 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url update customer shipping address use function update shipping address existing customer profile request response try sample code updatecustomershippingaddressrequest updatecustomershippingaddressresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? updatecustomershippingaddressresponse xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages updatecustomershippingaddressresponse messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url delete customer shipping address use function delete customer shipping address existing customer profile request response try sample code deletecustomershippingaddressrequest deletecustomershippingaddressresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? deletecustomershippingaddressresponse xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages deletecustomershippingaddressresponse messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url get accept customer profile page use function initiate request direct access authorize net website request response try sample code gethostedprofilepagerequest gethostedprofilepageresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? gethostedprofilepageresponse xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages token zewdauopoqprgthckd7dybmfcafdrho8gpofnt aczjnvkz awo0sysaa9x602jaikkfuhut2ybwqrag8lzhluur5drgsuh kjarkvd0hpiegjlhmnz0lhmfv1xe9p3zpmawqbcsb d4jcsg9daxecnbuzmwiuyzy vgugluxgr9qparh93hqwzrv4mbwop token gethostedprofilepageresponse token e3x1jmlcm01ev4hvlqjhdbfstnumkmkeq bm jbgrfwpelnax3e6wmqujztlxeymhlcjhnpx471vogzyryf1 vidkk qcdkt9bshn64noft0toiyq07nn1cd w4azk2kwpsjkjs3i92h9yompndxskpkjwopwuesi6n trj96cp m4rf4xv6vvqqs0deu e fongkobjwjop2qhpyop6e ongniycgyc06vkwe3kq zbbpbhlkkrydjjdbyrwdsrtce7ypia2entfgnumyzvfv7rbaobftwmvapk7leb1qce1uq 9x0wlamazbjmubdie4gg5gsiffevmcmehugjylodcktzy yv1tg0kak7gflxlcd 1pwu yar4mascwnfmduwoc3sfoewmhnu cvq messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url create customer profile transaction request enables create customer profile payment profile shipping profile existing successful transaction note tokenized transactions \\( e g apple pay \\) used create payment profiles request response try sample code createcustomerprofilefromtransactionrequest createcustomerprofileresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? createcustomerprofileresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages customerprofileid 1234 customerprofileid customerpaymentprofileidlist numericstring 5678 numericstring customerpaymentprofileidlist customershippingaddressidlist numericstring 1212 numericstring customershippingaddressidlist validationdirectresponselist createcustomerprofileresponse customerprofileid 190179 customerpaymentprofileidlist 157500 customershippingaddressidlist 126407 validationdirectresponselist messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url transaction reporting use feature authorize net api access transaction history details information transaction reporting see transaction reporting feature details page get settled batch list function returns batch id settlement time settlement state settled batches range dates specify includestatistics also receive batch statistics payment type batch totals input parameters merchant authentication optional dates specified default past 24 hours \\( ending time call getsettledbatchlistrequest \\) request response try sample code getsettledbatchlistrequest getsettledbatchlistresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? getsettledbatchlistresponse xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages batchlist batch batchid 12345678 batchid settlementtimeutc 2010 05 30t09 00 00 settlementtimeutc settlementtimelocal 2010 05 30t03 00 00 settlementtimelocal settlementstate settledsuccessfully settlementstate markettype ecommerce markettype product card present product statistics statistic accounttype visa accounttype accounttypeenum chargeamount 200 00 chargeamount chargecount 13 chargecount refundamount 10 00 refundamount refundcount 1 refundcount voidcount 2 voidcount declinecount 4 declinecount errorcount 6 errorcount returneditemamount 0 00 returneditemamount returneditemcount 0 returneditemcount chargebackamount 0 00 chargebackamount chargebackcount 0 chargebackcount correctionnoticecount 0 correctionnoticecount chargechargebackamount 0 00 chargechargebackamount chargechargebackcount 0 chargechargebackcount getbatchstatisticsresponseamount 0 00 getbatchstatisticsresponseamount getbatchstatisticsresponsecount 0 getbatchstatisticsresponsecount chargereturneditemsamount 0 00 chargereturneditemsamount chargereturneditemscount 0 chargereturneditemscount refundreturneditemsamount 0 00 refundreturneditemsamount refundreturneditemscount 0 refundreturneditemscount statistic statistic accounttype mastercard accounttype chargeamount 200 00 chargeamount chargecount 13 chargecount refundamount 10 00 refundamount refundcount 1 refundcount voidcount 2 voidcount declinecount 4 declinecount errorcount 6 errorcount chargebackamount 0 00 chargebackamount chargebackcount 0 chargebackcount correctionnoticecount 0 correctionnoticecount chargechargebackamount 0 00 chargechargebackamount chargechargebackcount 0 chargechargebackcount getbatchstatisticsresponseamount 0 00 getbatchstatisticsresponseamount getbatchstatisticsresponsecount 0 getbatchstatisticsresponsecount statistic statistics batch batch batchid 23456789 batchid settlementtimeutc 2010 05 30t09 00 00 settlementtimeutc settlementtimelocal 2010 05 30t03 00 00 settlementtimelocal settlementstate settledsuccessfully settlementstate statistics statistic accounttype echeck accounttype chargeamount 200 00 chargeamount chargecount 13 chargecount refundamount 10 00 refundamount refundcount 1 refundcount voidcount 2 voidcount declinecount 4 declinecount errorcount 6 errorcount returneditemamount 0 00 returneditemamount returneditemcount 0 returneditemcount correctionnoticecount 0 correctionnoticecount chargereturneditemsamount 0 00 chargereturneditemsamount chargereturneditemscount 0 chargereturneditemscount refundreturneditemsamount 0 00 refundreturneditemsamount refundreturneditemscount 0 refundreturneditemscount statistic statistics batch batchlist getsettledbatchlistresponse batchlist batchid 10198080 settlementtimeutc 2014 10 24t18 48 19z settlementtimeutcspecified true settlementtimelocal 2014 10 24t16 18 19 settlementtimelocalspecified true settlementstate settledsuccessfully paymentmethod echeck batchid 10198081 settlementtimeutc 2014 10 24t18 48 55z settlementtimeutcspecified true settlementtimelocal 2014 10 24t16 18 55 settlementtimelocalspecified true settlementstate settledsuccessfully paymentmethod echeck batchid 10198082 settlementtimeutc 2014 10 24t18 49 37z settlementtimeutcspecified true settlementtimelocal 2014 10 24t16 19 37 settlementtimelocalspecified true settlementstate settledsuccessfully paymentmethod echeck messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url get transaction list use function return data transactions specified batch function return data 1000 recent transactions single request paging options sent limit result set retrieve additional transactions beyond 1000 transaction limit input parameters required authentication information batch id however add sorting paging options shown customize result set request response try sample code gettransactionlistrequest gettransactionlistresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? gettransactionlistresponse xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages transactions transaction transid 12345 transid submittimeutc 2009 05 30t09 00 00 submittimeutc submittimelocal 2009 05 30t04 00 00 submittimelocal transactionstatus settledsuccessfully transactionstatus invoice inv00001 invoice firstname john firstname lastname doe lastname amount 2 00 amount accounttype visa accounttype accountnumber xxxx1111 accountnumber settleamount 2 00 settleamount subscription id 145521 id paynum 1 paynum subscription profile customerprofileid 1806660050 customerprofileid customerpaymentprofileid 1805324550 customerpaymentprofileid profile transaction transaction transid 12345 transid submittimeutc 2009 05 30t09 00 00 submittimeutc submittimelocal 2009 05 30t04 00 00 submittimelocal transactionstatus settledsuccessfully transactionstatus invoice inv00001 invoice firstname john firstname lastname doe lastname amount 2 00 amount accounttype visa accounttype accountnumber xxxx1111 accountnumber markettype ecommerce markettype product card present product mobiledeviceid 2354578983274523978 mobiledeviceid transaction transactions totalnuminresultset 2 totalnuminresultset gettransactionlistresponse gettransactionlistresponse xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok message code i00001 text successful transactions transaction transid 12345 submittimeutc 2009 05 30t09 00 00 submittimelocal 2009 05 30t04 00 00 transactionstatus settledsuccessfully invoice inv00001 firstname john lastname doe amount 2 00 accounttype visa accountnumber xxxx1111 settleamount 2 00 subscription id 145521 paynum 1 profile customerprofileid 1806660050 customerpaymentprofileid 1801644163 transid 12345 submittimeutc 2009 05 30t09 00 00 submittimelocal 2009 05 30t04 00 00 transactionstatus settledsuccessfully invoice inv00001 firstname john lastname doe amount 2 00 accounttype visa accountnumber xxxx1111 markettype ecommerce product card present mobiledeviceid 2354578983274523978 totalnuminresultset 2 loading view php c java ruby python node url url url url url url get unsettled transaction list use function get data unsettled transactions function return data 1000 recent transactions single request paging options sent limit result set retrieve additional transactions beyond 1000 transaction limit input parameters required authentication information however add sorting paging options shown customize result set request response try sample code getunsettledtransactionlistrequest getunsettledtransactionlistresponse enter sandbox credentials sample requests run account sign account really quickly response getunsettledtransactionlistresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages transactions transaction transid 2158982012 transid submittimeutc 2011 04 05t17 30 21z submittimeutc submittimelocal 2011 04 05t18 30 21 submittimelocal transactionstatus authorizedpendingcapture transactionstatus invoicenumber 123124123432 invoicenumber firstname unit firstname lastname tests lastname accounttype visa accounttype accountnumber xxxx1111 accountnumber settleamount 1 11 settleamount profile customerprofileid 1806660050 customerprofileid customerpaymentprofileid 1805324550 customerpaymentprofileid profile transaction transactions getunsettledtransactionlistresponse transactions transid 2149186960 submittimeutc 2014 11 01t06 48 37z submittimelocal 2014 11 01t04 18 37 transactionstatus capturedpendingsettlement firstname ellen lastname johnson accounttype mastercard accountnumber xxxx0015 settleamount 5 markettype ecommerce product card present profile customerprofileid 1806660050 customerpaymentprofileid 1801644163 transid 2149186959 submittimeutc 2014 11 01t06 34 57z submittimelocal 2014 11 01t04 04 57 transactionstatus voided invoicenumber none firstname john lastname doe accounttype visa accountnumber xxxx1111 settleamount 0 markettype ecommerce product card present hasreturneditemsspecified false transid 2149186958 submittimeutc 2014 11 01t06 33 22z submittimelocal 2014 11 01t04 03 22 transactionstatus voided invoicenumber none firstname john lastname doe accounttype visa accountnumber xxxx1111 settleamount 0 markettype ecommerce product card present hasreturneditemsspecified false messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url get customer profile transaction list use method retrieve transactions specific customer profile customer payment profile function return data 1000 recent transactions single request paging options sent limit result set retrieve additional transactions beyond 1000 transaction limit customer payment profile supplied function return transactions customer payment profiles associated specified customer profile allows retrieve transactions customer regardless card type \\( visa mastercard \\) payment type \\( credit card bank account \\) add sorting paging options shown customize result set request response try sample code gettransactionlistforcustomerrequest gettransactionlistforcustomerresponse enter sandbox credentials sample requests run account sign account really quickly response gettransactionlistforcustomerresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages transactions transaction transid 2158982012 transid submittimeutc 2011 04 05t17 30 21z submittimeutc submittimelocal 2011 04 05t18 30 21 submittimelocal transactionstatus authorizedpendingcapture transactionstatus invoicenumber 123124123432 invoicenumber firstname unit firstname lastname tests lastname accounttype visa accounttype accountnumber xxxx1111 accountnumber settleamount 1 11 settleamount profile customerprofileid 1806660050 customerprofileid customerpaymentprofileid 1805324550 customerpaymentprofileid profile transaction transactions totalnuminresultset 1 totalnuminresultset gettransactionlistforcustomerresponse gettransactionlistforcustomerresponse xmlns anetapi xml v1 schema anetapischema xsd transactions transid 2149186960 submittimeutc 2014 11 01t06 48 37z submittimelocal 2014 11 01t04 18 37 transactionstatus capturedpendingsettlement firstname ellen lastname johnson accounttype mastercard accountnumber xxxx0015 settleamount 5 markettype ecommerce product card present profile customerprofileid 1806660050 customerpaymentprofileid 1801644163 transid 2149186959 submittimeutc 2014 11 01t06 34 57z submittimelocal 2014 11 01t04 04 57 transactionstatus voided invoicenumber none firstname john lastname doe accounttype visa accountnumber xxxx1111 settleamount 0 markettype ecommerce product card present profile customerprofileid 1806660050 customerpaymentprofileid 1801644163 transid 2149186958 submittimeutc 2014 11 01t06 33 22z submittimelocal 2014 11 01t04 03 22 transactionstatus voided invoicenumber none firstname john lastname doe accounttype visa accountnumber xxxx1111 settleamount 0 markettype ecommerce product card present profile customerprofileid 1806660050 customerpaymentprofileid 1801644163 messages resultcode ok message code i00001 text successful totalnuminresultset 3 loading view php c java ruby python node url url url url url url get transaction details use function get detailed information specific transaction request response try sample code gettransactiondetailsrequest gettransactiondetailsresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? gettransactiondetailsresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages transaction transid 12345 transid reftransid 12345 reftransid splittenderid 12345 splittenderid submittimeutc 2010 08 30t17 49 20 757z submittimeutc submittimelocal 2010 08 30t13 49 20 757 submittimelocal transactiontype authonlytransaction transactiontype transactionstatus settledsuccessfully transactionstatus responsecode 1 responsecode responsereasoncode 1 responsereasoncode responsereasondescription approval responsereasondescription authcode 000000 authcode avsresponse x avsresponse cardcoderesponse cardcoderesponse cavvresponse 2 cavvresponse fdsfilteraction authandhold fdsfilteraction fdsfilters fdsfilter name hourly velocity filter name action authandhold action fdsfilter fdsfilter name amount filter name action report action fdsfilter fdsfilters batch batchid 12345 batchid settlementtimeutc 2010 08 30t17 49 20 757z settlementtimeutc settlementtimelocal 2010 08 30t13 49 20 757 settlementtimelocal settlementstate settledsuccessfully settlementstate batch order invoicenumber inv00001 invoicenumber description description description purchaseordernumber po000001 purchaseordernumber order requestedamount 5 00 requestedamount authamount 2 00 authamount settleamount 2 00 settleamount tax amount 1 00 amount name wa state sales tax name description washington state sales tax description tax shipping amount 2 00 amount name ground based shipping name description ground based 5 10 day shipping description shipping duty amount 1 00 amount duty lineitems lineitem itemid item00001 itemid name name item sold name description description item sold description quantity 1 quantity unitprice 6 95 unitprice taxable true taxable lineitem lineitem itemid item00001 itemid name name item sold name description description item sold description quantity 1 quantity unitprice 6 95 unitprice taxable true taxable lineitem lineitems prepaidbalanceremaining 30 00 prepaidbalanceremaining taxexempt false taxexempt payment either creditcard bankaccount creditcard cardnumber xxxx1111 cardnumber expirationdate xxxx expirationdate accounttype visa accounttype creditcard bankaccount routingnumber xxxx0000 routingnumber accountnumber xxxx0000 accountnumber nameonaccount john doe nameonaccount echecktype web echecktype bankaccount payment customer type individual type id abc00001 id email mark example com email customer billto firstname john firstname lastname doe lastname company company address 123 main st address city bellevue city state wa state zip 98004 zip country usa country phonenumber 000 000 0000 phonenumber faxnumber faxnumber billto shipto firstname john firstname lastname doe lastname company company address 123 main st address city bellevue city state wa state zip 98004 zip country usa country shipto recurringbilling false recurringbilling customerip 0 0 0 0 customerip subscription id 145521 id paynum 1 paynum markettype ecommerce markettype product card present product returneditems returneditem id 2148878904 id dateutc 2014 05 12t21 22 44z dateutc datelocal 2014 05 12t14 22 44 datelocal code r02 code description account closed description returneditem returneditems solution id a1000004 id name shopping cart name solution mobiledeviceid 2354578983274523978 mobiledeviceid subscription profile customerprofileid 1806660050 customerprofileid customerpaymentprofileid 1805324550 customerpaymentprofileid profile transaction gettransactiondetailsresponse transaction transid 2149181545 submittimeutc 2014 10 24t18 59 07 32z submittimelocal 2014 10 24t16 29 07 32 transactiontype authcapturetransaction transactionstatus settledsuccessfully responsecode 1 responsereasoncode 1 responsereasondescription approval avsresponse p batch batchid 10198093 settlementtimeutc 2014 10 24t18 59 12 933z settlementtimeutcspecified true settlementtimelocal 2014 10 24t16 29 12 933 settlementtimelocalspecified true settlementstate settledsuccessfully order invoicenumber qainv01zwwvssbhccnh requestedamountspecified false authamount 12 22 settleamount 12 22 prepaidbalanceremainingspecified false taxexempt false taxexemptspecified true payment bankaccount accounttype 2 accounttypespecified true routingnumber xxxx0204 accountnumber xxxx5905 nameonaccount account owner echecktype 2 echecktypespecified true bankname null recurringbilling false recurringbillingspecified true returneditems id 2149181546 dateutc 2014 10 24t18 59 44z datelocal 2014 10 24t16 29 44 code r01 description insufficient funds profile customerprofileid 1806660050 customerpaymentprofileid 1801644163 messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url get batch statistics call getbatchstatisticsrequest returns statistics single batch specified batch id request response try sample code getbatchstatisticsrequest getbatchstatisticsresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? getbatchstatisticsresponse xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages batch batchid 24 batchid settlementtimeutc 2011 01 13t20 58 33z settlementtimeutc settlementtimelocal 2011 01 13t12 58 33 settlementtimelocal settlementstate settledsuccessfully settlementstate paymentmethod creditcard paymentmethod statistics statistic accounttype visa accounttype chargeamount 30 15 chargeamount chargecount 7 chargecount refundamount 0 00 refundamount refundcount 0 refundcount voidcount 0 voidcount declinecount 0 declinecount errorcount 0 errorcount statistic statistics batch getbatchstatisticsresponse batch batchid 10198093 settlementtimeutc 2014 10 24t18 59 12z settlementtimeutcspecified true settlementtimelocal 2014 10 24t16 29 12 settlementtimelocalspecified true settlementstate settledsuccessfully paymentmethod echeck statistics accounttype echeck chargeamount 12 22 chargecount 1 refundamount 0 refundcount 0 voidcount 0 declinecount 0 errorcount 0 returneditemamount 0 returneditemamountspecified true returneditemcount 0 returneditemcountspecified true chargebackamount 0 chargebackamountspecified true chargebackcount 0 chargebackcountspecified true correctionnoticecount 0 correctionnoticecountspecified true chargechargebackamount 0 chargechargebackamountspecified true chargechargebackcount 0 chargechargebackcountspecified true refundchargebackamount 0 refundchargebackamountspecified true refundchargebackcount 0 refundchargebackcountspecified true chargereturneditemsamount 12 21 chargereturneditemsamountspecified true chargereturneditemscount 1 chargereturneditemscountspecified true refundreturneditemsamount 0 refundreturneditemsamountspecified true refundreturneditemscount 0 refundreturneditemscountspecified true messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url get merchant details simply call function supply authentication information receive merchant details response request response try sample code getmerchantdetailsrequest getmerchantdetailsresponse enter sandbox credentials sample requests run account sign account really quickly response \\? xml version 1 0 encoding utf 8 \\? getmerchantdetailsresponse xmlns anetapi xml v1 schema anetapischema xsd messages resultcode ok resultcode message code i00001 code text successful text message messages istestmode false istestmode processors processor name first data nashville name processor processors merchantname fwhgwsdcar merchantname gatewayid 565697 gatewayid markettypes markettype ecommerce markettype markettypes productcodes productcode cnp productcode productcodes paymentmethods paymentmethod americanexpress paymentmethod paymentmethod dinersclub paymentmethod paymentmethod discover paymentmethod paymentmethod enroute paymentmethod paymentmethod jcb paymentmethod paymentmethod mastercard paymentmethod paymentmethod visa paymentmethod paymentmethods currencies currency usd currency currencies getmerchantdetailsresponse istestmode false processors name first data nashville merchantname fwhgwsdcar gatewayid 565697 markettypes ecommerce productcodes cnp paymentmethods americanexpress dinersclub discover enroute jcb mastercard visa currencies usd messages resultcode ok message code i00001 text successful loading view php c java ruby python node url url url url url url authentication payment transactions charge credit card authorize credit card capture previously authorized amount capture funds authorized another channel refund transaction void transaction update split tender group debit bank account credit bank account charge customer profile charge tokenized credit card create accept payment transaction get accept payment page mobile app transactions create accept transaction create apple pay transaction create android pay transaction visa checkout decrypt visa checkout data create visa checkout transaction paypal express checkout authorization authorization capture get details authorization continued prior authorization capture authorization capture continue void credit fraud management get held transaction list approve decline held transaction recurring billing create subscription create subscription customer profile get subscription get subscription status update subscription cancel subscription get list subscriptions customer profiles create customer profile get customer profile get customer profile ids update customer profile delete customer profile create customer payment profile get customer payment profile get customer payment profile list validate customer payment profile update customer payment profile delete customer payment profile create customer shipping address get customer shipping address update customer shipping address delete customer shipping address get accept customer profile page create customer profile transaction transaction reporting get settled batch list get transaction list get unsettled transaction list get customer profile transaction list get transaction details get batch statistics get merchant details us authorize net corporate blog twitter contact us payments work video tutorials understanding creditcard processing glossary pci compliance find partner affiliate program certification program certified 3rd partyproducts services cybersource com site map privacy terms use 2015 authorize net rights reserved", 
    "descr2": "apihello worldsupportsign inour apiapi featuresapi reference sample codesdks github api change loghello worldget startedcommon setup questionstesting guidehow payments work supportget supportnews announcementsforumsauthorize net githubauthorize net stack overflowdeveloper blogresponse \\( error \\) codesfaqscontact ussign insandboxaffiliatesearch developer site recurring billing automated recurring billing \\( arb \\) enables automatically process installment based credit card echeck net payments without store sensitive payment data passed directly authorize net secure server recurring billing api reference information see api reference guide subscription set multiple transactions payments created purchase installment based payment plan payment gateway generates payments subscription later based specified payment schedule subscription period resources api reference guidesdks sample code github subscriptions subscription functions whether merchant creates updates cancels subscription merchant interface merchant uses authorize net api merchant creates subscription merchant interface enters required information create new arb subscription form merchant submits information subscription confirmation page returns message merchant indicating whether subscription created successfully subscription id assigned successfully created subscription also displayed authorize net api accomplishes functions api call subsequent response whether subscription created merchant interface api results descriptions code samples api elements used subscriptions see api reference guide subscriptions process transactions real time creating subscription transaction successfully guarantee subscription payments process account successfully subscription transactions process approximately 2 00 pst scheduled payment dates therefore first scheduled transaction sent customer bank authorization approximately 2 00 pst start date specify create subscription account create subscription start date equals creation date first scheduled payment process 2 00 following day wish validate customer payment information creating subscription account use one real time transaction processing methods available authorize net api create update cancel subscription subscriptions contain following information subscription id subscription id generated authorize net used manage subscription also stored transaction generated subscription better track payment schedule start date date date first transaction credit card data verified part first transaction interval units intervals define number total charges made schedule example weekly monthly trial period trial period specify amount charge different amount remainder subscription payment method credit card customers encrypted credit card information stored authorize net secure servers note card code supported pci dss security standards require stored echeck customers banking information stored authorize net secure servers customer information customer information includes name billing address shipping address tip first transaction conducted subscription created edited processed like transaction subject address verification settings account subsequent transactions flagged recurring send processor cases processor verify addresses transactions flagged recurring subscriptions monthly interval whose payments begin 31st month occur last day every month things keep mind subscription start date \\( subscription paymentschedule startdate \\) may updated successful payments completed subscription interval information \\( subscription paymentschedule interval length subscription paymentschedule interval unit \\) may updated number trial occurrences \\( subscription paymentschedule trialoccurrences \\) may updated subscription yet begun still trial period start date 31st interval monthly billing date last day month \\( even month 31 days \\) fields optional payment schedule receive response payment gateway ok result code subscription successfully created response include subscription id individual transactions payments subscription generated automatically 2 pst payment gateway according designated payment schedule subscription period payment viewable merchant payment gateway account actually generated example new subscription created start date june 6 monthly payment interval first payment subscription viewable merchant payment gateway account june 6 subsequent payments visible scheduled dates create new subscription first payment scheduled day initial payment subscription actually submitted next business day merchant notification scheduled transaction subscription submitted usually 2 pst arb transactions merchant receives email payment gateway indicating transaction status merchant also configure account merchant interface receive following arb emails daily transaction summary failed transaction notice sent payment subscription declines receives error response processor subscription due expiration sent second last payment subscription submitted notify merchant next payment final one subscription credit card expiration sent immediately last possible successful payment subscription notify merchant credit card expire next scheduled payment subscription subscription suspension sent notify merchant subscription suspended subscription suspended first payment subscription declined rejected receives error response additionally subscription edited \\( example payment shipping information changed \\) subscription suspended first payment edits declined rejected receives error response subscription termination sent subscription terminated suspended subscription edited fix problem caused suspension terminated next scheduled payment subscription expiration sent subscription expires expired subscription cannot reactivated instead new subscription must created daily transaction summary email returns excel file comma separated value \\( csv \\) format merchant receive successful csv failed csv files subscription status subscription one following statuses given time updating subscriptions update values arbcreatesubscriptionrequest entering arbupdatesubscriptionrequest difference must include subscriptionid value returned arbcreatesubscriptionreponse things keep mind subscription start date \\( subscription paymentschedule startdate \\) may updated successful payments completed subscription interval information \\( subscription paymentschedule interval length subscription paymentschedule interval unit \\) may updated number trial occurrences \\( subscription paymentschedule trialoccurrences \\) may updated subscription yet begun still trial period start date 31st interval monthly billing date last day month \\( even month 31 days \\) fields optional cancel subscription request cancel subscription call arbcancelsubscription enter subscriptionid call successful subscription longer exist system duplicate subscription check recurring billing system checks new subscription duplicates using fields subscription article merchantid subscription article customerinfo payment creditcard cardnumber subscription article customerinfo payment echeck routingnumber subscription article customerinfo payment echeck accountnumber subscription article customerinfo customerid subscription article customerinfo billinginfo billtoaddress firstname subscription article customerinfo billinginfo billtoaddress lastname subscription article customerinfo billinginfo billtoaddress company subscription article customerinfo billinginfo billtoaddress streetaddress subscription article customerinfo billinginfo billtoaddress city subscription article customerinfo billinginfo billtoaddress stateprov subscription article customerinfo billinginfo billtoaddress zip subscription orderinfo amount subscription orderinfo invoice subscription recurrence startdate subscription recurrence interval subscription recurrence unit fields duplicated existing subscription error code e00012 result modifying fields result unique subscription subscription reporting use reporting api retrieve subscription information specifically gettransactionlistresponse gettransactiondetailsresponse contain subscription section information reporting see transaction reporting feature details page webhooks notifications receive subscription related webhooks notifications utilizing webhooks api 's subscription events information see subscription section appendix webhooks documentation usauthorize netcorporate blogtwittercontact ushow payments workvideo tutorialsunderstanding creditcard processingglossarypci compliancefind partneraffiliate programcertification programcertified 3rd partyproducts servicescybersource comsite mapprivacyterms use 2015 authorize net rights reserved", 
    "descr1": "apihello worldsupportsign inour apiapi featuresapi reference sample codesdks github api change loghello worldget startedcommon setup questionstesting guidehow payments work supportget supportnews announcementsforumsauthorize net githubauthorize net stack overflowdeveloper blogresponse \\( error \\) codesfaqscontact ussign insandboxaffiliatesearch developer site payment transactions authorize net api provides robust features processing transactions authorize net gateway api comes xml json flavors detailed api reference information see api reference guide new authorize net payment api recommend begin credit card payment tutorial many core concepts tutorial apply payment types makes good place start also sign sandbox account use testing guide initial tests credit cards remain primary method payment authorize net api increasingly supports new exciting payment types information payment types api features see api features page designing software used multiple merchants consider registering partner obtaining solution id solution id allows source transactions easily identified merchant online reporting reporting api methods credit card process connecting web site software application payment processing networks exceptionally difficult typically beyond expertise technical resources online merchants instead merchants connect authorize net payment gateway provides complex infrastructure security necessary ensure fast reliable secure transmission transaction data api referred page formerly known aim xml referred simply payment api typically actors online credit card transaction consumer buys product merchant web site using credit card issuing bank issuing bank provides credit card consumer represents consumer event dispute acquirer usually bank underwrites merchant ability accept credit cards represents merchant event dispute merchant sells product service consumer website using authorize net payment api information authorize net fits payment network see credit card processing diagram api field descriptions sample code see api reference guide resources api referencesdks sample code githublooking aim sim life transaction online payment transaction goes various phases shown authorize authorization places hold transaction amount customer issuing bank money actually changes hands yet example let say merchant going ship physical product website first authorize amount transaction ship product product shipped merchant capture transaction capture capture essentially marks transaction settlement soon product shipped merchant capture amount amount authorization usually full amount captured example situation whole amount captured might customer ordered multiple items one unavailable important note single authorization captured capture part authorization amount new authorization required order capture settle within 24 hours authorize net settles transaction merchant acquirer deposits funds merchant bank account voids credits void occurs authorization settlement money exchanged authorization simply cancelled credit occurs settlement example merchant ships item transaction settled reason customer becomes unsatisfied product case merchant may decide refund \\( credit \\) money credit new distinct transaction original charge unique transaction id creating transaction createtransactionrequest function used submit type one time payment transaction transaction types described authorization capture transaction common type credit card transaction default payment gateway transaction type amount sent authorization approved automatically submitted settlement unique value authorization capture transaction authcapturetransaction authorization transaction type sent authorization transaction sent settlement credit card transaction type prior authorization capture \\( see definition \\) submitted transaction submitted capture manually merchant interface action taken within 30 days authorization expires longer available capture new authorization transaction submitted obtain new authorization code unique value authorization transaction authonlytransaction prior authorization capture transaction type used complete authorization transaction successfully authorized payment gateway together authorization transaction prior authorization capture transaction considered one complete transaction prior authorization capture submitted transaction sent settlement payment gateway accepts transaction type initiates settlement following conditions met original authorization transaction submitted within previous 30 days \\( authorization transactions expire payment gateway 30 days \\) transaction submitted valid transaction id \\( reftransid \\) original successfully authorized authorization transaction original transaction successful yet captured amount requested capture less equal original authorized amount single prior authorization capture transaction submitted authorization unique element values prior authorization capture transaction transactiontype priorauthcapturetransaction transactiontype addition transaction id original transaction needs specified reftransid element reftransid reftransid 123456 reftransid transaction type amount field required prior authorization capture submitted amount less amount original authorization transaction amount submitted payment gateway initiate settlement amount original authorized transaction capture transaction type used complete previously authorized transaction originally submitted payment gateway required voice authorization payment gateway accepts transaction type initiates settlement transaction submitted valid authorization code issued merchant unique element values capture transaction transactiontype captureonlytransaction transactiontype authcode authorization code authcode market type device type default transactions considered e commerce \\( card present \\) card present transaction considered retail transaction retail transactions must specify market type value 2 device type shown track data submitted conjunction parameters retail markettype 2 markettype devicetype 5 devicetype retail available parameters devicetype 1 unknown2 unattended terminal3 self service terminal4 electronic cash register5 personal computer based terminal7 wireless pos8 website9 dial terminal10 virtual terminal partial authorization partial authorization also known split tender order order two transactions comprise total amount order type transaction allows customer pay one transaction multiple payment types setting allowpartialauth true allowpartialauth request indicates merchant 's system accommodate partial authorizations without flag transaction would processed would either fully authorized declined due lack funds card first transaction successfully approved partial amount total order split tender id generated returned merchant response id must passed back remaining transactions group using splittenderid value splittenderid include split tender id transaction id request error results transactions group held final transaction group successfully authorized merchant needs release group transactions final transaction approved \\( balance paid cash example \\) send updatesplittendergrouprequest request include split tender id instead transaction id case would also submit splittenderstatus field value completed merchant needs void group completion send void request using split tender id instead transaction id action void transactions group transaction submitted settlement either merchant submits payments adding full requested amount merchant indicates transaction complete \\( part remaining balance paid cash \\) unique elements apply partial authorization transactions allowpartialauth true allowpartialauth \\( input optional \\) default value set merchant interface use parameter authorize individual transactions option set false merchant interface including field transaction request overrides merchant 's account configuration balanceoncard \\( output \\) authorized amount remaining card requestedamount amount requested splittenderid \\( output \\) split tender id provided first partial authorization transaction issued use id submitting subsequent transactions related group order splittenderstatus \\( output \\) indicates whether transaction complete basic fraud settings avs address verification service \\( avs \\) system designed bankcard processors help detect suspicious credit card transaction activity avs matches billing address information provided cardholder cardholder 's billing address file credit card issuing bank processing network sends avs response code indicating results match payment gateway avs response code found payment gateway transaction response well transaction detail page merchant interface based merchant 's avs rejection settings transaction accepted rejected rejected transactions display transaction status declined \\( avs mismatch \\) transaction detail page important note merchant cannot retrieve address information issuing bank bank provides match match information implement avs merchant must require address zip code fields payment form manage avs rejection settings log merchant interface choose account settings security settings basic fraud settings avs card code verification \\( ccv \\) feature enables merchants compare card code submitted customer transaction card code file card issuing bank filter settings merchant interface allow merchant reject transactions based ccv response received implement ccv merchant must require card code field payment form manage rejection settings log merchant interface choose account settings security settings basic fraud settings ccv different card companies use different terminologies refer card codes cvv2 visa cvc2 mastercard cid american express discover security reasons cannot store card code data consequently configure fraud velocity rule action authorize hold review card code transactions flagged rule cannot validated approve transaction later daily velocity filter daily velocity filter enables merchants specify threshold number transactions allowed per day transactions exceeding threshold day flagged processed according selected filter action filter helpful preventing certain types fraudulent activity merchant 's account log merchant interface choose account settings security settings basic fraud settings daily velocity retrieving approving declining held transactions authorize net merchant interface provides access advanced fraud detection suite merchants sign functions used api suspicious transactions held review retrieved approved declined using simple api requests see reference information requests see api reference guide compliance payment card industry data security standard \\( pci dss \\) set requirements designed ensure companies process store transmit credit card information maintain secure environment information see pci security standards page authorize net 's pci compliance page following video learn important payment industry security standards critical step assuring clients solid foundation accepting secure payments payment processors authorize net supports following payment processors north american payment processors european payment processors asia pacific payment processors evosnap multiple evosnap processing platforms evosnap u supports us dollar \\( usd \\) currencies including u dollar supported evosnap international accepted authorization settlement currencies usd u dollarcad canada dollarchf switzerland francdkk denmark kroneeur eurogbp united kingdom poundnok norway kronepln poland z oty \\( mastercard \\) sek sweden kronazar south africa rand accepted billing currencies usd u dollaraud australian dollargbp united kingdom pound accepted card types visamastercardamerican expressjcbdiners club u unsupported services apple pay soft descriptors supported evosnap evosnap supported services u services duplication rules evo platform always checks duplicate transactions based terminal idsame card numbersame dollar amount duplicates flagged occur within hour magstripe track 2 data supported card present transactions level 2 support po required level 2 data submitted level 2 data includes tax duty freight information billing address billing fields submitted must submitted first namelast nameaddresscitystate province \\( required country us canada \\) countryzip postal code field requirements employeeid field required however value passed field authorize net sends default value 0000 processor consolidated accounts consolidated accounts feature supported evosnap platform multiples market types require multiple accounts automated recurring billing merchants using automated recurring billing must approved merchant service provider also known acquirer international services supported retaillevel 2 datasoft descriptorspartial authorizationconsolidated accounts \\( moto e commerce \\) separate accounts required automated recurring billing customer information manager card code \\( cvv2 cvc2 cid \\) evosnap requires card code international transactions card code must enabled authorize net merchant interface virtual terminal settings enable card code step 1 navigate authorize net merchant interface step 2 choose accounts settings transaction format settings virtual terminal step 3 check view box card code step 4 click submit evosnap considerations international avs behavior transactions declined submitted address data match merchants override behavior per transaction basis permitted evosnap merchant accounts configured either use use avs processing boarded account configured use avs processing avs performed even data included merchant account configured use avs every transaction must include avs data unless merchant authorized evosnap override avs processing api customer code required present customer code populated 0000 country code must iso format example gbr che aus error codes rtc 350 description evosnap country must valid three character value specified message country must valid three character value specified rtc 351 description evosnap employee id cannot 6 characters length 4 retail transaction message employee id must 1 x characters length note x replaced 6 e commerce moto transaction types 4 retail transaction types billing information billing information submitted billing fields must provided usauthorize netcorporate blogtwittercontact ushow payments workvideo tutorialsunderstanding creditcard processingglossarypci compliancefind partneraffiliate programcertification programcertified 3rd partyproducts servicescybersource comsite mapprivacyterms use 2015 authorize net rights reserved", 
    "crawled_date": "2017-06-10T13:59:47.761678"
  }, 
  "13": {
    "link5": "http://store.payloadz.com/details/392035-software-software-templates-documentation-plan-template.html", 
    "link4": "https://help.payloadz.com/hc/en-us/articles/229545288-PayLoadz-API-Overview-and-Documentation", 
    "link1": "https://help.payloadz.com/hc/en-us/articles/229543208-Payloadz-API", 
    "api_url": "payloadz.com", 
    "link3": "http://store.payloadz.com/details/2030347-software-design-templates-fantastic-worlds-setup-guide-and-documentation.html", 
    "link2": "http://store.payloadz.com/details/2509735-software-software-templates-restweb-api-documentation-template-ms-word.html", 
    "progweb_url": "https://www.programmableweb.com/api/payloadz", 
    "progweb_date": "04.20.2008", 
    "progweb_descr": "From their site: The API allows developers to create a downloadable good, upload a file into our system, create a download transaction, and present an end user with a download link. The API also provides supporting calls for functions like transaction status and product purchase button HTML generation. PayLoadz offers a secure Digital Goods eCommerce service for anyone to sell downloadable goods online. We provide a service to sell downloadable items such as: software, eBooks, music, movies, digital art, manuals, articles, certificates, forms, files, and anything else that can be downloaded. Our automated service delivers your products to your customers instantly after payment. Our system operates using PayPal's online payment system and Google Checkout.", 
    "api_name": "PayLoadz", 
    "progweb_cat": "Storage,Payments", 
    "descr5": "", 
    "descr4": "submit request store home us help contact us submit request sign welcome payloadz help center help \\? hero intro hero unit display none header header background 44474c header search sub nav display inline block header header margin bottom 20px help support advanced functionality sign payloadz api overview documentation support march 13 2017 13 27 follow released application programming interface \\( api \\) allows advanced users programmers developers direct access system programmatic method api format based paypal beta period uses live fully functioning version api full documentation sample code found http api payloadz com docs payloadz api documents samples zip sample code following formats classic asp asp net vb asp net c php latest api update updated api changes please review service description http api payloadz com payloadzws asmx \\? wsdl access full api methods http api payloadz com api method renamed old requestforadditionalldownloademail requestforadditionaldownloademail http tempuri org replaced xmlns 'http api payloadz com removed ebay functions longer supported please contact us specific help integration project integration ideas article helpful \\? 3 3 found helpful facebook twitter linkedin google questions \\? submit request 0 comments please sign leave comment start selling today payloadz sign instant access sign learn related articles solved log contact us working adding html code wordpress page post selling downloadable videos movies online video selling downloads ebay home us help contact us privacy policy terms use sitemap copyright notice follow us copyright 2017 payloadz inc", 
    "descr3": "", 
    "descr2": "", 
    "descr1": "submit request store home us help contact us submit request sign welcome payloadz help center help \\? hero intro hero unit display none header header background 44474c header search sub nav display inline block header header margin bottom 20px help support advanced functionality sign payloadz api frank w payloadz com support october 09 2016 12 31 follow payloadz api released application programming interface \\( api \\) allows advanced users programmers developers direct access system programmatic method api format based paypal ebay formats thus making easier user familiar interfaces transition payloadz api beta period uses live fully functioning version api full documentation sample code found http api payloadz com docs payloadz api documents samples zip sample code following formats classic asp asp net vb asp net c php api updated transactioncreation method access api reference url http api payloadz com v2 payloadzwsv2 asmx \\? op transactioncreation removed extra parameters make method simple please contact us specific help integration project integration ideas article helpful \\? 0 0 found helpful facebook twitter linkedin google questions \\? submit request 0 comments article closed comments start selling today payloadz sign instant access sign learn related articles increasing sales 6 customer satisfaction home us help contact us privacy policy terms use sitemap copyright notice follow us copyright 2017 payloadz inc", 
    "crawled_date": "2017-06-10T13:59:47.758766"
  }, 
  "12": {
    "link5": "http://docs.aws.amazon.com/AWSECommerceService/latest/DG/CHAP_ApiReference.html", 
    "link4": "https://aws.amazon.com/documentation/apigateway/", 
    "link1": "https://aws.amazon.com/documentation/", 
    "api_url": "amazon.com", 
    "link3": "https://aws.amazon.com/documentation/config/", 
    "link2": "https://aws.amazon.com/documentation/cloudformation/", 
    "progweb_url": "https://www.programmableweb.com/api/amazon-flexible-payments-service", 
    "progweb_date": "08.03.2007", 
    "progweb_descr": "From their site: The first payments service designed from the ground up specifically for developers. The set of web services APIs allows the movement of money between any two entities, humans or computers. It is built on top of Amazon's reliable and scalable payment infrastructure. Amazon FPS offers developers unmatched flexibility in how they can structure payment instructions, including standing instructions that can remain in place for multiple transactions.", 
    "api_name": "Amazon Flexible Payments Service", 
    "progweb_cat": "Payments,eCommerce", 
    "descr5": "menu amazon web services sign consoletry aws free deutsch english espa ol fran ais portugu \\( \\) product advertising api developer guide \\( api version 2013 08 01 \\) welcome programming guide getting started becoming associate becoming product advertising api developer reading licensing agreement using product advertising api scratchpad e commerce web services e commerce \\? web service \\? xml \\? xml syntax xml structures using xml wsdl \\? restricted parts wsdl anatomy wsdl definitions namespaces versioning request definitions response definitions response group definitions porttype binding service wsdl location schema \\? schema location product advertising api terminology basic concepts marketplace product advertising api \\? make money using product advertising api \\? items sale item identifiers item identifiers summary product advertising api operations find items find specific items shopping cart operations visual introduction product advertising api search items find item information create shopping cart organization items amazon browse nodes browse node properties browse nodes items browse node ids browse nodes search indices find browse nodes search indices search indices locales variations variation parents return variations variation images variation dimensions accessories related items requests anatomy rest request rest syntax spaces requests separator characters setting parameter values soap requests structure soap request soap endpoints xml message itemsearch soap request request authentication authentication \\? managing aws credentials hmac sha256 signatures rest requests authenticating rest requests java sample code calculating signature version 2 signatures example rest requests authenticating soap requests using soap without ws security batch requests parameters differ shared parameters performing multiple itemlookups one request parameters common product advertising api requests required parameters associatetag parameter optional parameters xml encoding parameters debugging parameters responses anatomy response version information segment operation request segment request validation segment item attributes segment paging sorting responses find items buy search operations items cannot buy availability parameter parameter restrictions availability items sold merchants required itemsearch parameters parameter support search index search indices parameters locales common itemsearch parameters return available items inaccurate availabilities availability parameter restrictions constraints search across indices blended searches power searches power search syntax power search keywords power search operators power search tips use search bins find items narrowby attribute narrowby values narrowby values per search index find items browse nodes traverse browse node hierarchy understand browsenode results drilling request response examples discover accessories discover available items discover newer versions discover similar items discover top lists discover variations find related items find similar items lookup isbn lookup upc retrieve customer reviews retrieve images retrieve price search actor search author search keyword search manufacturer search theme search theme category search title motivate customers buy promotions promotion categories benefit eligible items common response elements reviews suggest similar items buy similaritylookup find similar item ids return items similar cart items similar versions item related items top sellers find top sellers browse node get top sellers shopping cart new releases sort popularity price condition returning price availability information returning prices minimum advertised price offer summaries returning offers returning information offer providing price ranges product categories items offers determining parent items returning offers item variations variation dimensions determining availability availability values checking offer listing id using itemsearch availability parameter working remote shopping carts shopping cart concepts cart identifiers items cannot added active cart area remote shopping carts hosted amazon cart lifespan remote shopping cart tasks creating remote shopping cart specifying items cartcreate request using values returned cartcreate cart operations modifying items remote shopping cart adding items cart adding items saved later removing items cart retrieving contents cart add cart form purchase items remote shopping cart order pipeline implement proceed checkout button purchaseurl troubleshooting syntax parameter errors processing error results errors retrieving errors troubleshooting applications error codes messages error codes error messages best programming practices locale considerations locales associate ids general differences shipping restrictions api reference operations itemsearch browsenodelookup itemlookup similaritylookup cartadd cartclear cartcreate cartget cartmodify common request parameters response groups accessories alternateversions browsenodeinfo browsenodes cart cartnewreleases carttopsellers cartsimilarities editorialreview images itemattributes itemids large medium mostgifted mostwishedfor newreleases offerfull offerlistings offers offersummary promotionsummary relateditems request reviews salesrank searchbins similarities small topsellers tracks variations variation dimensions variationimages variationmatrix variationoffers variationsummary relevant operations variation dimensions response elements common response groups response elements locale reference product advertising api locale information br marketplace locale information ca marketplace locale information cn marketplace locale information de marketplace locale information es marketplace locale information fr marketplace locale information marketplace locale information marketplace locale information jp marketplace locale information mx marketplace locale information uk marketplace locale information us marketplace itemsearch sort values resources document history api reference topics operations common request parameters response groups response elements common response groups response elements locale reference product advertising api itemsearch sort values following sections guide provide reference material product advertising api information concepts programming tasks associated reference material refer previous chapters guide document conventions previous next 2017 amazon web services inc affiliates rights reserved terms use 2017 amazon web services inc affiliates rights reserved question \\? try forums page help \\? yesno feedback", 
    "descr4": "menu click return amazon web services homepage sign account english explore aws solutions products deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) account aws management console account settings billing cost management security credentials aws personal health dashboard aws cloud computing solutions products developers partners training resources documentation support services careers contact us aws cloud computing introduction aws cloud computing \\? choosing cloud platform events webinars customer success global infrastructure getting started getting started aws free tier news 's new aws blog aws news analyst reports solutions websites web apps mobile services backup storage archive big data hpc financial services game development digital media healthcare life sciences business apps start upsstart ups use aws everything app needs enterprisesenterprises use aws deliver innovation globally reducing costs government educationpublic sector organizations use aws improve agility reducing costs products compute storage databases migration networking content delivery developer tools aws cost management management tools security identity compliance analytics artificial intelligence mobile services application services messaging business productivity desktop app streaming internet things contact center game development aws marketplace software developers get startedstart developing amazon web services using one pre built sample apps toolssdks ide toolkits command line tools developer tools aws devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers forums user groups java javascript mobile php ruby python windows net training resources training certification training self paced labs certification resource centers resources whitepapers analyst reports forums aws youtube channel events webinars support services aws support aws support information support center aws trusted advisor technical faqs forums aws personal health dashboard service health dashboard contact us aws professional services aws professional services cloud adoption framework aws managed services aws managed services partners aws partner networklearn aws partner network supporting partner programs find aws partnersfind qualified apn partners help aws projects premier consulting partnerslearn top apn consulting partners globally apn partner solutionsfind validated partner solutions run integrate aws key vertical solution areas log apn portaldownload content access training engage aws partner aws site visit apn blog documentation compute storage database networking content delivery migration developer tools management tools security identity compliance analytics artificial intelligence internet things game development mobile services application services messaging business productivity desktop app streaming sdks toolkits additional software services aws general reference aws management console resources websites web apps websites website hostingpower web social mobile apps cloud devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers ecommerce applicationsbuild secure scalable online storefronts digital marketinghighly scalable online advertising marketing services cloud aws marketplace wordpress powered amimoto movable type 6 drupal powered bitnami view related products \\( 95 \\) backup storage archive backup recoverystore retrieve data anywhere time data archivearchive data long term retention disaster recoveryrecover systems data quickly disaster aws marketplace cloud protection manager standard edition softnas cloud ontap cloud aws view related products \\( 35 \\) big data hpc big datastore process large datasets solve business problems high performance computingrun tightly coupled io intensive workloads solve complex science engineering business problems internet thingsquickly build connected devices backend services serverless computingbuild run applications without thinking servers aws marketplace tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl zoomdata view bi solutions financial services financial servicescustomer applications data analytics storage compliance security cloud aws marketplace tibco spotfire informatica cloud advanced amazon redshift view related products \\( 25 \\) game development game development operationservices infrastructure mobile web pc console games amazon game developerscross platform building blocks help make games aws marketplace orbx cloud game console windows server 2008r2 nvidia grid gpu driver red5 media server view related products \\( 25 \\) digital media digital mediamedia storage archiving processing delivery cloud aws marketplace adobe media server 5 extended wowza streaming engine 4 pro edition vantage transcode server view media solutions healthcare life sciences healthcaredeliver improved care patients reduced time effort life sciencesservices infrastructure help company solve complex problems genomicsaccess powerful computing tools run genomics workloads aws marketplace ncbi blast view related products \\( 25 \\) business apps business appsrun business critical applications secure robust environment oraclerun oracle applications aws cloud saprun sap workloads applications aws scalable infrastructure microsoftall microsoft applications aws cloud aws marketplace sap hana one oddo microsoft sharepoint foundation 2013 view related products \\( 845 \\) compute amazon ec2virtual servers cloud amazon ec2 container registrystore retrieve docker images amazon ec2 container servicerun manage docker containers amazon lightsaillaunch manage virtual private servers amazon vpcisolated cloud resources aws batchrun batch jobs scale aws elastic beanstalkrun manage web apps aws lambda run code without thinking servers auto scaling elastic load balancing aws marketplace centos 7 debian gnu linux 8 \\( jessie \\) alces flight view related products \\( 1800 \\) storage amazon simple storage service \\( s3 \\) scalable storage cloud amazon elastic block storage \\( ebs \\) ec2 block storage volumes amazon elastic file system \\( efs \\) fully managed file system ec2 amazon glacierlow cost archive storage cloud aws storage gatewayhybrid storage integration aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport aws marketplace ontap cloud aws cloud protection manager standard edition panzura nas appliance view storage solutions databases amazon aurorahigh performance managed relational database amazon rdsmanaged relational database service mysql postgresql oracle sql server mariadb amazon dynamodbmanaged nosql database amazon dynamodb accelerator \\( dax \\) fully managed memory cache dynamodb amazon elasticachein memory caching service amazon redshiftfast simple cost effective data warehousing aws database migration servicemigrate databases minimal downtime aws marketplace sap hana one couchbase teradata view database software migration aws application discovery servicediscover premises applications streamline migration aws database migration servicemigrate databases minimal downtime aws server migration servicemigrate premises servers aws aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport networking content delivery amazon vpcisolated cloud resources amazon cloudfrontglobal content delivery network amazon route 53scalable domain name system \\( dns \\) aws direct connectdedicated network connection aws elastic load balancing aws marketplace cisco cloud services router brocade f5 big ip view networking solutions developer tools aws codestardevelop deploy aws applications aws codecommitstore code private git repositories aws codebuildbuild test code aws codedeployautomate code deployments aws codepipelinerelease software using continuous delivery aws x rayanalyze debug applications aws command line interfaceunified tool manage aws services aws marketplace zend server coldfusion chef server view developer tools aws cost management aws cost exploreranalyze aws cost usage aws budgetsset custom cost usage budgets reserved instance reportingdive deeper reserved instances \\( ris \\) aws cost usage reportaccess comprehensive cost usage information aws marketplace zend server coldfusion chef server view developer tools management tools amazon cloudwatchmonitor resources applications amazon ec2 systems managerconfigure manage ec2 instances premises servers aws cloudformationcreate manage resources templates aws cloudtrailtrack user activity api usage aws configtrack resource inventory changes aws opsworksautomate operations chef aws service catalogcreate use standardized products aws trusted advisoroptimize performance security aws personal health dashboardpersonalized view aws service health aws command line interfaceunified tool manage aws services aws management consoleweb based user interface aws managed servicesinfrastructure operations management aws aws marketplace warewolf developers kurian kumolus view related solutions security identity compliance aws identity access management \\( iam \\) manage user access encryption keys amazon inspectoranalyze application security aws certificate managerprovision manage deploy ssl tls certificates aws cloudhsmhardware based key storage regulatory compliance aws directory servicehost manage active directory amazon cloud directorycreate flexible cloud native directories aws key management servicemanaged creation control encryption keys aws organizationspolicy based management multiple aws accounts aws shieldddos protection aws waffilter malicious web traffic aws artifact aws marketplace barracuda web application firewall trend micro deep security vm series next generation firewall bundle 2 view security solutions analytics amazon athenaquery data s3 using sql amazon emrhosted hadoop framework amazon cloudsearchmanaged search service amazon elasticsearch servicerun scale elasticsearch clusters amazon kinesiswork real time streaming data amazon redshiftfast simple cost effective data warehousing amazon quicksightfast business analytics service aws data pipelineorchestration service periodic data driven workflows aws glueprepare load data aws marketplace splunk cloud tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl redshift view bi solutions artificial intelligence amazon lexbuild voice text chatbots amazon pollyturn text lifelike speech amazon rekognitionsearch analyze images amazon machine learningmachine learning developers apache mxnet awsscalable open source deep learning framework aws deep learning amisdeep learning amazon ec2 mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily aws marketplace bitfusion mobile deep learning kony mobilefabric hpe mobile center view mobile solutions mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily application services aws step functionscoordinate distributed applications amazon api gatewaybuild publish manage apis amazon elastic transcodereasy use scalable media transcoding aws marketplace adobe coldfusion 11 nginx citrix netscaler view related products \\( 260 \\) messaging amazon simple queue service \\( sqs \\) managed message queues amazon simple notification service \\( sns \\) pub sub mobile push sms amazon pinpointpush notifications mobile apps amazon simple email service \\( ses \\) email sending receiving business productivity amazon workdocssecure enterprise document storage sharing amazon workmailsecure email calendaring amazon chimefrustration free meetings video calls chat desktop app streaming amazon workspacesvirtual desktops cloud amazon appstream 2 0stream desktop applications securely browser internet things aws iot platformconnect devices cloud aws greengrasslocal compute messaging sync devices aws iot buttoncloud programmable dash button aws marketplace sirqul iot platform opendof iot router view related products contact center amazon connectcloud based contact center service game development amazon gameliftamazon gamelift simple fast cost effective dedicated game server hosting amazon lumberyarda free cross platform 3d game engine full source integrated aws twitch aws marketplace software infrastructure software \\( 1300 \\) application development application servers application stacks big data databases caching network infrastructure operating systems security business software \\( 845 \\) business intelligence collaboration content management crm ecommerce education research financial services high performance computing media project management storage backup developer tools \\( 220 \\) issue bug tracking monitoring log analysis source control testing resource center economics centerfind calculators tools help lower costs aws cloud security centerlearn aws cloud security build secure applications compliance centerlearn compliance programs aws cloud establishing controls architecture centerlearn build scalable reliable applications aws cloud knowledge centerget answers frequently asked technical support questions aws answersget clear guidance aws architects engineers common user questions compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway database amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon simple notification service \\( sns \\) application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile database amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws artifact mobile services aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report application services aws step functions amazon api gateway amazon elastic transcoder messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon chime amazon workdocs amazon workmail desktop app streaming amazon workspaces amazon appstream 2 0 software aws marketplace internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard click return amazon web services homepage aws cloud computing cloud computing choosing cloud platform events webinars customer success global infrastructure getting started aws free tier 's new aws blog aws news analyst reports solutions websites web apps websites website hosting development test ecommerce applications mobile services digital marketing aws marketplace backup storage archive backup recovery data archive disaster recovery aws marketplace big data hpc big data high performance computing internet things aws marketplace financial services game development game development operation amazon game developers aws marketplace digital media digital media aws marketplace healthcare life sciences healthcare life sciences genomics aws marketplace business apps business apps oracle sap microsoft aws marketplace enterprise start ups public sector products compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing aws marketplace storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile aws marketplace databases amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service aws marketplace migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile aws marketplace networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing aws marketplace developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface aws marketplace aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services aws marketplace security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws marketplace analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue aws marketplace artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis mobile aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk application services aws step functions amazon api gateway amazon elastic transcoder aws marketplace messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) aws marketplace business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon appstream 2 0 internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard aws marketplace software infrastructure software \\( 1300 \\) business software \\( 845 \\) developer tools \\( 220 \\) developers get started tools devops forums java javascript mobile php ruby python windows net training resources training self paced labs certification economics center security center architecture center knowledge center whitepapers aws answers analyst reports forums aws youtube channel events webinars documentation compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway databases amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly aws rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon sns application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive support aws support information support center aws trusted advisor technical faqs forums service health dashboard aws personal health dashboard aws managed services contact us partners aws partner network find aws partners premier consulting partners apn competency partners apn partner solutions login apn portal careers contact us sign console download mobile app amazon web services documentation home amazon api gateway documentation related links aws glossary getting started aws sdks tools aws documentation kindle aws general reference aws training aws case studies aws whitepapers amazon api gateway documentation amazon api gateway fully managed service makes easy developers publish maintain monitor secure apis scale create api access data business logic functionality back end services applications running amazon elastic compute cloud \\( amazon ec2 \\) code running aws lambda web application create free account twitter facebook google twitch aws blog 's new \\? rss subscribe updates aws cloud computing cloud computing \\? caching \\? nosql \\? devops \\? products services customer success economics center architecture center security center 's new whitepapers aws blog events sustainable energy press releases aws news analyst reports legal solutions websites website hosting business applications backup recovery disaster recovery data archive devops serverless computing big data high performance computing mobile services digital marketing game development digital media government education health financial services windows aws resources training developers java aws javascript aws mobile aws php aws python aws ruby aws windows net aws sdks tools aws marketplace user groups support plans service health dashboard discussion forums faqs documentation articles tutorials test drives aws business builder manage account management console billing cost management subscribe updates personal information payment method aws identity access management security credentials request service limit increases contact us amazon web services hiring amazon web services \\( aws \\) dynamic growing business unit within amazon com currently hiring software development engineers product managers account managers solutions architects support engineers system engineers designers visit careers page developer specific careers page learn amazon web services equal opportunity employer amazon com company language deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) site terms privacy 2017 amazon web services inc affiliates rights reserved using outdated browser please upgrade internet explorer 11 another modern browser improve experience", 
    "descr3": "menu click return amazon web services homepage sign account english explore aws solutions products deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) account aws management console account settings billing cost management security credentials aws personal health dashboard aws cloud computing solutions products developers partners training resources documentation support services careers contact us aws cloud computing introduction aws cloud computing \\? choosing cloud platform events webinars customer success global infrastructure getting started getting started aws free tier news 's new aws blog aws news analyst reports solutions websites web apps mobile services backup storage archive big data hpc financial services game development digital media healthcare life sciences business apps start upsstart ups use aws everything app needs enterprisesenterprises use aws deliver innovation globally reducing costs government educationpublic sector organizations use aws improve agility reducing costs products compute storage databases migration networking content delivery developer tools aws cost management management tools security identity compliance analytics artificial intelligence mobile services application services messaging business productivity desktop app streaming internet things contact center game development aws marketplace software developers get startedstart developing amazon web services using one pre built sample apps toolssdks ide toolkits command line tools developer tools aws devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers forums user groups java javascript mobile php ruby python windows net training resources training certification training self paced labs certification resource centers resources whitepapers analyst reports forums aws youtube channel events webinars support services aws support aws support information support center aws trusted advisor technical faqs forums aws personal health dashboard service health dashboard contact us aws professional services aws professional services cloud adoption framework aws managed services aws managed services partners aws partner networklearn aws partner network supporting partner programs find aws partnersfind qualified apn partners help aws projects premier consulting partnerslearn top apn consulting partners globally apn partner solutionsfind validated partner solutions run integrate aws key vertical solution areas log apn portaldownload content access training engage aws partner aws site visit apn blog documentation compute storage database networking content delivery migration developer tools management tools security identity compliance analytics artificial intelligence internet things game development mobile services application services messaging business productivity desktop app streaming sdks toolkits additional software services aws general reference aws management console resources websites web apps websites website hostingpower web social mobile apps cloud devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers ecommerce applicationsbuild secure scalable online storefronts digital marketinghighly scalable online advertising marketing services cloud aws marketplace wordpress powered amimoto movable type 6 drupal powered bitnami view related products \\( 95 \\) backup storage archive backup recoverystore retrieve data anywhere time data archivearchive data long term retention disaster recoveryrecover systems data quickly disaster aws marketplace cloud protection manager standard edition softnas cloud ontap cloud aws view related products \\( 35 \\) big data hpc big datastore process large datasets solve business problems high performance computingrun tightly coupled io intensive workloads solve complex science engineering business problems internet thingsquickly build connected devices backend services serverless computingbuild run applications without thinking servers aws marketplace tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl zoomdata view bi solutions financial services financial servicescustomer applications data analytics storage compliance security cloud aws marketplace tibco spotfire informatica cloud advanced amazon redshift view related products \\( 25 \\) game development game development operationservices infrastructure mobile web pc console games amazon game developerscross platform building blocks help make games aws marketplace orbx cloud game console windows server 2008r2 nvidia grid gpu driver red5 media server view related products \\( 25 \\) digital media digital mediamedia storage archiving processing delivery cloud aws marketplace adobe media server 5 extended wowza streaming engine 4 pro edition vantage transcode server view media solutions healthcare life sciences healthcaredeliver improved care patients reduced time effort life sciencesservices infrastructure help company solve complex problems genomicsaccess powerful computing tools run genomics workloads aws marketplace ncbi blast view related products \\( 25 \\) business apps business appsrun business critical applications secure robust environment oraclerun oracle applications aws cloud saprun sap workloads applications aws scalable infrastructure microsoftall microsoft applications aws cloud aws marketplace sap hana one oddo microsoft sharepoint foundation 2013 view related products \\( 845 \\) compute amazon ec2virtual servers cloud amazon ec2 container registrystore retrieve docker images amazon ec2 container servicerun manage docker containers amazon lightsaillaunch manage virtual private servers amazon vpcisolated cloud resources aws batchrun batch jobs scale aws elastic beanstalkrun manage web apps aws lambda run code without thinking servers auto scaling elastic load balancing aws marketplace centos 7 debian gnu linux 8 \\( jessie \\) alces flight view related products \\( 1800 \\) storage amazon simple storage service \\( s3 \\) scalable storage cloud amazon elastic block storage \\( ebs \\) ec2 block storage volumes amazon elastic file system \\( efs \\) fully managed file system ec2 amazon glacierlow cost archive storage cloud aws storage gatewayhybrid storage integration aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport aws marketplace ontap cloud aws cloud protection manager standard edition panzura nas appliance view storage solutions databases amazon aurorahigh performance managed relational database amazon rdsmanaged relational database service mysql postgresql oracle sql server mariadb amazon dynamodbmanaged nosql database amazon dynamodb accelerator \\( dax \\) fully managed memory cache dynamodb amazon elasticachein memory caching service amazon redshiftfast simple cost effective data warehousing aws database migration servicemigrate databases minimal downtime aws marketplace sap hana one couchbase teradata view database software migration aws application discovery servicediscover premises applications streamline migration aws database migration servicemigrate databases minimal downtime aws server migration servicemigrate premises servers aws aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport networking content delivery amazon vpcisolated cloud resources amazon cloudfrontglobal content delivery network amazon route 53scalable domain name system \\( dns \\) aws direct connectdedicated network connection aws elastic load balancing aws marketplace cisco cloud services router brocade f5 big ip view networking solutions developer tools aws codestardevelop deploy aws applications aws codecommitstore code private git repositories aws codebuildbuild test code aws codedeployautomate code deployments aws codepipelinerelease software using continuous delivery aws x rayanalyze debug applications aws command line interfaceunified tool manage aws services aws marketplace zend server coldfusion chef server view developer tools aws cost management aws cost exploreranalyze aws cost usage aws budgetsset custom cost usage budgets reserved instance reportingdive deeper reserved instances \\( ris \\) aws cost usage reportaccess comprehensive cost usage information aws marketplace zend server coldfusion chef server view developer tools management tools amazon cloudwatchmonitor resources applications amazon ec2 systems managerconfigure manage ec2 instances premises servers aws cloudformationcreate manage resources templates aws cloudtrailtrack user activity api usage aws configtrack resource inventory changes aws opsworksautomate operations chef aws service catalogcreate use standardized products aws trusted advisoroptimize performance security aws personal health dashboardpersonalized view aws service health aws command line interfaceunified tool manage aws services aws management consoleweb based user interface aws managed servicesinfrastructure operations management aws aws marketplace warewolf developers kurian kumolus view related solutions security identity compliance aws identity access management \\( iam \\) manage user access encryption keys amazon inspectoranalyze application security aws certificate managerprovision manage deploy ssl tls certificates aws cloudhsmhardware based key storage regulatory compliance aws directory servicehost manage active directory amazon cloud directorycreate flexible cloud native directories aws key management servicemanaged creation control encryption keys aws organizationspolicy based management multiple aws accounts aws shieldddos protection aws waffilter malicious web traffic aws artifact aws marketplace barracuda web application firewall trend micro deep security vm series next generation firewall bundle 2 view security solutions analytics amazon athenaquery data s3 using sql amazon emrhosted hadoop framework amazon cloudsearchmanaged search service amazon elasticsearch servicerun scale elasticsearch clusters amazon kinesiswork real time streaming data amazon redshiftfast simple cost effective data warehousing amazon quicksightfast business analytics service aws data pipelineorchestration service periodic data driven workflows aws glueprepare load data aws marketplace splunk cloud tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl redshift view bi solutions artificial intelligence amazon lexbuild voice text chatbots amazon pollyturn text lifelike speech amazon rekognitionsearch analyze images amazon machine learningmachine learning developers apache mxnet awsscalable open source deep learning framework aws deep learning amisdeep learning amazon ec2 mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily aws marketplace bitfusion mobile deep learning kony mobilefabric hpe mobile center view mobile solutions mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily application services aws step functionscoordinate distributed applications amazon api gatewaybuild publish manage apis amazon elastic transcodereasy use scalable media transcoding aws marketplace adobe coldfusion 11 nginx citrix netscaler view related products \\( 260 \\) messaging amazon simple queue service \\( sqs \\) managed message queues amazon simple notification service \\( sns \\) pub sub mobile push sms amazon pinpointpush notifications mobile apps amazon simple email service \\( ses \\) email sending receiving business productivity amazon workdocssecure enterprise document storage sharing amazon workmailsecure email calendaring amazon chimefrustration free meetings video calls chat desktop app streaming amazon workspacesvirtual desktops cloud amazon appstream 2 0stream desktop applications securely browser internet things aws iot platformconnect devices cloud aws greengrasslocal compute messaging sync devices aws iot buttoncloud programmable dash button aws marketplace sirqul iot platform opendof iot router view related products contact center amazon connectcloud based contact center service game development amazon gameliftamazon gamelift simple fast cost effective dedicated game server hosting amazon lumberyarda free cross platform 3d game engine full source integrated aws twitch aws marketplace software infrastructure software \\( 1300 \\) application development application servers application stacks big data databases caching network infrastructure operating systems security business software \\( 845 \\) business intelligence collaboration content management crm ecommerce education research financial services high performance computing media project management storage backup developer tools \\( 220 \\) issue bug tracking monitoring log analysis source control testing resource center economics centerfind calculators tools help lower costs aws cloud security centerlearn aws cloud security build secure applications compliance centerlearn compliance programs aws cloud establishing controls architecture centerlearn build scalable reliable applications aws cloud knowledge centerget answers frequently asked technical support questions aws answersget clear guidance aws architects engineers common user questions compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway database amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon simple notification service \\( sns \\) application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile database amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws artifact mobile services aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report application services aws step functions amazon api gateway amazon elastic transcoder messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon chime amazon workdocs amazon workmail desktop app streaming amazon workspaces amazon appstream 2 0 software aws marketplace internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard click return amazon web services homepage aws cloud computing cloud computing choosing cloud platform events webinars customer success global infrastructure getting started aws free tier 's new aws blog aws news analyst reports solutions websites web apps websites website hosting development test ecommerce applications mobile services digital marketing aws marketplace backup storage archive backup recovery data archive disaster recovery aws marketplace big data hpc big data high performance computing internet things aws marketplace financial services game development game development operation amazon game developers aws marketplace digital media digital media aws marketplace healthcare life sciences healthcare life sciences genomics aws marketplace business apps business apps oracle sap microsoft aws marketplace enterprise start ups public sector products compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing aws marketplace storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile aws marketplace databases amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service aws marketplace migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile aws marketplace networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing aws marketplace developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface aws marketplace aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services aws marketplace security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws marketplace analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue aws marketplace artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis mobile aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk application services aws step functions amazon api gateway amazon elastic transcoder aws marketplace messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) aws marketplace business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon appstream 2 0 internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard aws marketplace software infrastructure software \\( 1300 \\) business software \\( 845 \\) developer tools \\( 220 \\) developers get started tools devops forums java javascript mobile php ruby python windows net training resources training self paced labs certification economics center security center architecture center knowledge center whitepapers aws answers analyst reports forums aws youtube channel events webinars documentation compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway databases amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly aws rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon sns application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive support aws support information support center aws trusted advisor technical faqs forums service health dashboard aws personal health dashboard aws managed services contact us partners aws partner network find aws partners premier consulting partners apn competency partners apn partner solutions login apn portal careers contact us sign console download mobile app amazon web services documentation home aws config documentation related links aws glossary getting started aws sdks tools aws documentation kindle aws general reference aws training aws case studies aws whitepapers aws config documentation aws config provides detailed view resources associated aws account including configured related one another configurations relationships changed time create free account twitter facebook google twitch aws blog 's new \\? rss subscribe updates aws cloud computing cloud computing \\? caching \\? nosql \\? devops \\? products services customer success economics center architecture center security center 's new whitepapers aws blog events sustainable energy press releases aws news analyst reports legal solutions websites website hosting business applications backup recovery disaster recovery data archive devops serverless computing big data high performance computing mobile services digital marketing game development digital media government education health financial services windows aws resources training developers java aws javascript aws mobile aws php aws python aws ruby aws windows net aws sdks tools aws marketplace user groups support plans service health dashboard discussion forums faqs documentation articles tutorials test drives aws business builder manage account management console billing cost management subscribe updates personal information payment method aws identity access management security credentials request service limit increases contact us amazon web services hiring amazon web services \\( aws \\) dynamic growing business unit within amazon com currently hiring software development engineers product managers account managers solutions architects support engineers system engineers designers visit careers page developer specific careers page learn amazon web services equal opportunity employer amazon com company language deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) site terms privacy 2017 amazon web services inc affiliates rights reserved using outdated browser please upgrade internet explorer 11 another modern browser improve experience", 
    "descr2": "menu click return amazon web services homepage sign account english explore aws solutions products deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) account aws management console account settings billing cost management security credentials aws personal health dashboard aws cloud computing solutions products developers partners training resources documentation support services careers contact us aws cloud computing introduction aws cloud computing \\? choosing cloud platform events webinars customer success global infrastructure getting started getting started aws free tier news 's new aws blog aws news analyst reports solutions websites web apps mobile services backup storage archive big data hpc financial services game development digital media healthcare life sciences business apps start upsstart ups use aws everything app needs enterprisesenterprises use aws deliver innovation globally reducing costs government educationpublic sector organizations use aws improve agility reducing costs products compute storage databases migration networking content delivery developer tools aws cost management management tools security identity compliance analytics artificial intelligence mobile services application services messaging business productivity desktop app streaming internet things contact center game development aws marketplace software developers get startedstart developing amazon web services using one pre built sample apps toolssdks ide toolkits command line tools developer tools aws devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers forums user groups java javascript mobile php ruby python windows net training resources training certification training self paced labs certification resource centers resources whitepapers analyst reports forums aws youtube channel events webinars support services aws support aws support information support center aws trusted advisor technical faqs forums aws personal health dashboard service health dashboard contact us aws professional services aws professional services cloud adoption framework aws managed services aws managed services partners aws partner networklearn aws partner network supporting partner programs find aws partnersfind qualified apn partners help aws projects premier consulting partnerslearn top apn consulting partners globally apn partner solutionsfind validated partner solutions run integrate aws key vertical solution areas log apn portaldownload content access training engage aws partner aws site visit apn blog documentation compute storage database networking content delivery migration developer tools management tools security identity compliance analytics artificial intelligence internet things game development mobile services application services messaging business productivity desktop app streaming sdks toolkits additional software services aws general reference aws management console resources websites web apps websites website hostingpower web social mobile apps cloud devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers ecommerce applicationsbuild secure scalable online storefronts digital marketinghighly scalable online advertising marketing services cloud aws marketplace wordpress powered amimoto movable type 6 drupal powered bitnami view related products \\( 95 \\) backup storage archive backup recoverystore retrieve data anywhere time data archivearchive data long term retention disaster recoveryrecover systems data quickly disaster aws marketplace cloud protection manager standard edition softnas cloud ontap cloud aws view related products \\( 35 \\) big data hpc big datastore process large datasets solve business problems high performance computingrun tightly coupled io intensive workloads solve complex science engineering business problems internet thingsquickly build connected devices backend services serverless computingbuild run applications without thinking servers aws marketplace tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl zoomdata view bi solutions financial services financial servicescustomer applications data analytics storage compliance security cloud aws marketplace tibco spotfire informatica cloud advanced amazon redshift view related products \\( 25 \\) game development game development operationservices infrastructure mobile web pc console games amazon game developerscross platform building blocks help make games aws marketplace orbx cloud game console windows server 2008r2 nvidia grid gpu driver red5 media server view related products \\( 25 \\) digital media digital mediamedia storage archiving processing delivery cloud aws marketplace adobe media server 5 extended wowza streaming engine 4 pro edition vantage transcode server view media solutions healthcare life sciences healthcaredeliver improved care patients reduced time effort life sciencesservices infrastructure help company solve complex problems genomicsaccess powerful computing tools run genomics workloads aws marketplace ncbi blast view related products \\( 25 \\) business apps business appsrun business critical applications secure robust environment oraclerun oracle applications aws cloud saprun sap workloads applications aws scalable infrastructure microsoftall microsoft applications aws cloud aws marketplace sap hana one oddo microsoft sharepoint foundation 2013 view related products \\( 845 \\) compute amazon ec2virtual servers cloud amazon ec2 container registrystore retrieve docker images amazon ec2 container servicerun manage docker containers amazon lightsaillaunch manage virtual private servers amazon vpcisolated cloud resources aws batchrun batch jobs scale aws elastic beanstalkrun manage web apps aws lambda run code without thinking servers auto scaling elastic load balancing aws marketplace centos 7 debian gnu linux 8 \\( jessie \\) alces flight view related products \\( 1800 \\) storage amazon simple storage service \\( s3 \\) scalable storage cloud amazon elastic block storage \\( ebs \\) ec2 block storage volumes amazon elastic file system \\( efs \\) fully managed file system ec2 amazon glacierlow cost archive storage cloud aws storage gatewayhybrid storage integration aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport aws marketplace ontap cloud aws cloud protection manager standard edition panzura nas appliance view storage solutions databases amazon aurorahigh performance managed relational database amazon rdsmanaged relational database service mysql postgresql oracle sql server mariadb amazon dynamodbmanaged nosql database amazon dynamodb accelerator \\( dax \\) fully managed memory cache dynamodb amazon elasticachein memory caching service amazon redshiftfast simple cost effective data warehousing aws database migration servicemigrate databases minimal downtime aws marketplace sap hana one couchbase teradata view database software migration aws application discovery servicediscover premises applications streamline migration aws database migration servicemigrate databases minimal downtime aws server migration servicemigrate premises servers aws aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport networking content delivery amazon vpcisolated cloud resources amazon cloudfrontglobal content delivery network amazon route 53scalable domain name system \\( dns \\) aws direct connectdedicated network connection aws elastic load balancing aws marketplace cisco cloud services router brocade f5 big ip view networking solutions developer tools aws codestardevelop deploy aws applications aws codecommitstore code private git repositories aws codebuildbuild test code aws codedeployautomate code deployments aws codepipelinerelease software using continuous delivery aws x rayanalyze debug applications aws command line interfaceunified tool manage aws services aws marketplace zend server coldfusion chef server view developer tools aws cost management aws cost exploreranalyze aws cost usage aws budgetsset custom cost usage budgets reserved instance reportingdive deeper reserved instances \\( ris \\) aws cost usage reportaccess comprehensive cost usage information aws marketplace zend server coldfusion chef server view developer tools management tools amazon cloudwatchmonitor resources applications amazon ec2 systems managerconfigure manage ec2 instances premises servers aws cloudformationcreate manage resources templates aws cloudtrailtrack user activity api usage aws configtrack resource inventory changes aws opsworksautomate operations chef aws service catalogcreate use standardized products aws trusted advisoroptimize performance security aws personal health dashboardpersonalized view aws service health aws command line interfaceunified tool manage aws services aws management consoleweb based user interface aws managed servicesinfrastructure operations management aws aws marketplace warewolf developers kurian kumolus view related solutions security identity compliance aws identity access management \\( iam \\) manage user access encryption keys amazon inspectoranalyze application security aws certificate managerprovision manage deploy ssl tls certificates aws cloudhsmhardware based key storage regulatory compliance aws directory servicehost manage active directory amazon cloud directorycreate flexible cloud native directories aws key management servicemanaged creation control encryption keys aws organizationspolicy based management multiple aws accounts aws shieldddos protection aws waffilter malicious web traffic aws artifact aws marketplace barracuda web application firewall trend micro deep security vm series next generation firewall bundle 2 view security solutions analytics amazon athenaquery data s3 using sql amazon emrhosted hadoop framework amazon cloudsearchmanaged search service amazon elasticsearch servicerun scale elasticsearch clusters amazon kinesiswork real time streaming data amazon redshiftfast simple cost effective data warehousing amazon quicksightfast business analytics service aws data pipelineorchestration service periodic data driven workflows aws glueprepare load data aws marketplace splunk cloud tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl redshift view bi solutions artificial intelligence amazon lexbuild voice text chatbots amazon pollyturn text lifelike speech amazon rekognitionsearch analyze images amazon machine learningmachine learning developers apache mxnet awsscalable open source deep learning framework aws deep learning amisdeep learning amazon ec2 mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily aws marketplace bitfusion mobile deep learning kony mobilefabric hpe mobile center view mobile solutions mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily application services aws step functionscoordinate distributed applications amazon api gatewaybuild publish manage apis amazon elastic transcodereasy use scalable media transcoding aws marketplace adobe coldfusion 11 nginx citrix netscaler view related products \\( 260 \\) messaging amazon simple queue service \\( sqs \\) managed message queues amazon simple notification service \\( sns \\) pub sub mobile push sms amazon pinpointpush notifications mobile apps amazon simple email service \\( ses \\) email sending receiving business productivity amazon workdocssecure enterprise document storage sharing amazon workmailsecure email calendaring amazon chimefrustration free meetings video calls chat desktop app streaming amazon workspacesvirtual desktops cloud amazon appstream 2 0stream desktop applications securely browser internet things aws iot platformconnect devices cloud aws greengrasslocal compute messaging sync devices aws iot buttoncloud programmable dash button aws marketplace sirqul iot platform opendof iot router view related products contact center amazon connectcloud based contact center service game development amazon gameliftamazon gamelift simple fast cost effective dedicated game server hosting amazon lumberyarda free cross platform 3d game engine full source integrated aws twitch aws marketplace software infrastructure software \\( 1300 \\) application development application servers application stacks big data databases caching network infrastructure operating systems security business software \\( 845 \\) business intelligence collaboration content management crm ecommerce education research financial services high performance computing media project management storage backup developer tools \\( 220 \\) issue bug tracking monitoring log analysis source control testing resource center economics centerfind calculators tools help lower costs aws cloud security centerlearn aws cloud security build secure applications compliance centerlearn compliance programs aws cloud establishing controls architecture centerlearn build scalable reliable applications aws cloud knowledge centerget answers frequently asked technical support questions aws answersget clear guidance aws architects engineers common user questions compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway database amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon simple notification service \\( sns \\) application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile database amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws artifact mobile services aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report application services aws step functions amazon api gateway amazon elastic transcoder messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon chime amazon workdocs amazon workmail desktop app streaming amazon workspaces amazon appstream 2 0 software aws marketplace internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard click return amazon web services homepage aws cloud computing cloud computing choosing cloud platform events webinars customer success global infrastructure getting started aws free tier 's new aws blog aws news analyst reports solutions websites web apps websites website hosting development test ecommerce applications mobile services digital marketing aws marketplace backup storage archive backup recovery data archive disaster recovery aws marketplace big data hpc big data high performance computing internet things aws marketplace financial services game development game development operation amazon game developers aws marketplace digital media digital media aws marketplace healthcare life sciences healthcare life sciences genomics aws marketplace business apps business apps oracle sap microsoft aws marketplace enterprise start ups public sector products compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing aws marketplace storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile aws marketplace databases amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service aws marketplace migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile aws marketplace networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing aws marketplace developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface aws marketplace aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services aws marketplace security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws marketplace analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue aws marketplace artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis mobile aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk application services aws step functions amazon api gateway amazon elastic transcoder aws marketplace messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) aws marketplace business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon appstream 2 0 internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard aws marketplace software infrastructure software \\( 1300 \\) business software \\( 845 \\) developer tools \\( 220 \\) developers get started tools devops forums java javascript mobile php ruby python windows net training resources training self paced labs certification economics center security center architecture center knowledge center whitepapers aws answers analyst reports forums aws youtube channel events webinars documentation compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway databases amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly aws rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon sns application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive support aws support information support center aws trusted advisor technical faqs forums service health dashboard aws personal health dashboard aws managed services contact us partners aws partner network find aws partners premier consulting partners apn competency partners apn partner solutions login apn portal careers contact us sign console download mobile app amazon web services documentation home aws cloudformation documentation related links aws glossary getting started aws sdks tools aws documentation kindle aws general reference aws training aws case studies aws whitepapers aws cloudformation documentation aws cloudformation enables create provision aws infrastructure deployments predictably repeatedly helps leverage aws products amazon ec2 amazon elastic block store amazon sns elastic load balancing auto scaling build highly reliable highly scalable cost effective applications cloud without worrying creating configuring underlying aws infrastructure aws cloudformation enables use template file create delete collection resources together single unit \\( stack \\) create free account twitter facebook google twitch aws blog 's new \\? rss subscribe updates aws cloud computing cloud computing \\? caching \\? nosql \\? devops \\? products services customer success economics center architecture center security center 's new whitepapers aws blog events sustainable energy press releases aws news analyst reports legal solutions websites website hosting business applications backup recovery disaster recovery data archive devops serverless computing big data high performance computing mobile services digital marketing game development digital media government education health financial services windows aws resources training developers java aws javascript aws mobile aws php aws python aws ruby aws windows net aws sdks tools aws marketplace user groups support plans service health dashboard discussion forums faqs documentation articles tutorials test drives aws business builder manage account management console billing cost management subscribe updates personal information payment method aws identity access management security credentials request service limit increases contact us amazon web services hiring amazon web services \\( aws \\) dynamic growing business unit within amazon com currently hiring software development engineers product managers account managers solutions architects support engineers system engineers designers visit careers page developer specific careers page learn amazon web services equal opportunity employer amazon com company language deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) site terms privacy 2017 amazon web services inc affiliates rights reserved using outdated browser please upgrade internet explorer 11 another modern browser improve experience", 
    "descr1": "menu click return amazon web services homepage sign account english explore aws solutions products deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) account aws management console account settings billing cost management security credentials aws personal health dashboard aws cloud computing solutions products developers partners training resources documentation support services careers contact us aws cloud computing introduction aws cloud computing \\? choosing cloud platform events webinars customer success global infrastructure getting started getting started aws free tier news 's new aws blog aws news analyst reports solutions websites web apps mobile services backup storage archive big data hpc financial services game development digital media healthcare life sciences business apps start upsstart ups use aws everything app needs enterprisesenterprises use aws deliver innovation globally reducing costs government educationpublic sector organizations use aws improve agility reducing costs products compute storage databases migration networking content delivery developer tools aws cost management management tools security identity compliance analytics artificial intelligence mobile services application services messaging business productivity desktop app streaming internet things contact center game development aws marketplace software developers get startedstart developing amazon web services using one pre built sample apps toolssdks ide toolkits command line tools developer tools aws devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers forums user groups java javascript mobile php ruby python windows net training resources training certification training self paced labs certification resource centers resources whitepapers analyst reports forums aws youtube channel events webinars support services aws support aws support information support center aws trusted advisor technical faqs forums aws personal health dashboard service health dashboard contact us aws professional services aws professional services cloud adoption framework aws managed services aws managed services partners aws partner networklearn aws partner network supporting partner programs find aws partnersfind qualified apn partners help aws projects premier consulting partnerslearn top apn consulting partners globally apn partner solutionsfind validated partner solutions run integrate aws key vertical solution areas log apn portaldownload content access training engage aws partner aws site visit apn blog documentation compute storage database networking content delivery migration developer tools management tools security identity compliance analytics artificial intelligence internet things game development mobile services application services messaging business productivity desktop app streaming sdks toolkits additional software services aws general reference aws management console resources websites web apps websites website hostingpower web social mobile apps cloud devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers ecommerce applicationsbuild secure scalable online storefronts digital marketinghighly scalable online advertising marketing services cloud aws marketplace wordpress powered amimoto movable type 6 drupal powered bitnami view related products \\( 95 \\) backup storage archive backup recoverystore retrieve data anywhere time data archivearchive data long term retention disaster recoveryrecover systems data quickly disaster aws marketplace cloud protection manager standard edition softnas cloud ontap cloud aws view related products \\( 35 \\) big data hpc big datastore process large datasets solve business problems high performance computingrun tightly coupled io intensive workloads solve complex science engineering business problems internet thingsquickly build connected devices backend services serverless computingbuild run applications without thinking servers aws marketplace tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl zoomdata view bi solutions financial services financial servicescustomer applications data analytics storage compliance security cloud aws marketplace tibco spotfire informatica cloud advanced amazon redshift view related products \\( 25 \\) game development game development operationservices infrastructure mobile web pc console games amazon game developerscross platform building blocks help make games aws marketplace orbx cloud game console windows server 2008r2 nvidia grid gpu driver red5 media server view related products \\( 25 \\) digital media digital mediamedia storage archiving processing delivery cloud aws marketplace adobe media server 5 extended wowza streaming engine 4 pro edition vantage transcode server view media solutions healthcare life sciences healthcaredeliver improved care patients reduced time effort life sciencesservices infrastructure help company solve complex problems genomicsaccess powerful computing tools run genomics workloads aws marketplace ncbi blast view related products \\( 25 \\) business apps business appsrun business critical applications secure robust environment oraclerun oracle applications aws cloud saprun sap workloads applications aws scalable infrastructure microsoftall microsoft applications aws cloud aws marketplace sap hana one oddo microsoft sharepoint foundation 2013 view related products \\( 845 \\) compute amazon ec2virtual servers cloud amazon ec2 container registrystore retrieve docker images amazon ec2 container servicerun manage docker containers amazon lightsaillaunch manage virtual private servers amazon vpcisolated cloud resources aws batchrun batch jobs scale aws elastic beanstalkrun manage web apps aws lambda run code without thinking servers auto scaling elastic load balancing aws marketplace centos 7 debian gnu linux 8 \\( jessie \\) alces flight view related products \\( 1800 \\) storage amazon simple storage service \\( s3 \\) scalable storage cloud amazon elastic block storage \\( ebs \\) ec2 block storage volumes amazon elastic file system \\( efs \\) fully managed file system ec2 amazon glacierlow cost archive storage cloud aws storage gatewayhybrid storage integration aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport aws marketplace ontap cloud aws cloud protection manager standard edition panzura nas appliance view storage solutions databases amazon aurorahigh performance managed relational database amazon rdsmanaged relational database service mysql postgresql oracle sql server mariadb amazon dynamodbmanaged nosql database amazon dynamodb accelerator \\( dax \\) fully managed memory cache dynamodb amazon elasticachein memory caching service amazon redshiftfast simple cost effective data warehousing aws database migration servicemigrate databases minimal downtime aws marketplace sap hana one couchbase teradata view database software migration aws application discovery servicediscover premises applications streamline migration aws database migration servicemigrate databases minimal downtime aws server migration servicemigrate premises servers aws aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport networking content delivery amazon vpcisolated cloud resources amazon cloudfrontglobal content delivery network amazon route 53scalable domain name system \\( dns \\) aws direct connectdedicated network connection aws elastic load balancing aws marketplace cisco cloud services router brocade f5 big ip view networking solutions developer tools aws codestardevelop deploy aws applications aws codecommitstore code private git repositories aws codebuildbuild test code aws codedeployautomate code deployments aws codepipelinerelease software using continuous delivery aws x rayanalyze debug applications aws command line interfaceunified tool manage aws services aws marketplace zend server coldfusion chef server view developer tools aws cost management aws cost exploreranalyze aws cost usage aws budgetsset custom cost usage budgets reserved instance reportingdive deeper reserved instances \\( ris \\) aws cost usage reportaccess comprehensive cost usage information aws marketplace zend server coldfusion chef server view developer tools management tools amazon cloudwatchmonitor resources applications amazon ec2 systems managerconfigure manage ec2 instances premises servers aws cloudformationcreate manage resources templates aws cloudtrailtrack user activity api usage aws configtrack resource inventory changes aws opsworksautomate operations chef aws service catalogcreate use standardized products aws trusted advisoroptimize performance security aws personal health dashboardpersonalized view aws service health aws command line interfaceunified tool manage aws services aws management consoleweb based user interface aws managed servicesinfrastructure operations management aws aws marketplace warewolf developers kurian kumolus view related solutions security identity compliance aws identity access management \\( iam \\) manage user access encryption keys amazon inspectoranalyze application security aws certificate managerprovision manage deploy ssl tls certificates aws cloudhsmhardware based key storage regulatory compliance aws directory servicehost manage active directory amazon cloud directorycreate flexible cloud native directories aws key management servicemanaged creation control encryption keys aws organizationspolicy based management multiple aws accounts aws shieldddos protection aws waffilter malicious web traffic aws artifact aws marketplace barracuda web application firewall trend micro deep security vm series next generation firewall bundle 2 view security solutions analytics amazon athenaquery data s3 using sql amazon emrhosted hadoop framework amazon cloudsearchmanaged search service amazon elasticsearch servicerun scale elasticsearch clusters amazon kinesiswork real time streaming data amazon redshiftfast simple cost effective data warehousing amazon quicksightfast business analytics service aws data pipelineorchestration service periodic data driven workflows aws glueprepare load data aws marketplace splunk cloud tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl redshift view bi solutions artificial intelligence amazon lexbuild voice text chatbots amazon pollyturn text lifelike speech amazon rekognitionsearch analyze images amazon machine learningmachine learning developers apache mxnet awsscalable open source deep learning framework aws deep learning amisdeep learning amazon ec2 mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily aws marketplace bitfusion mobile deep learning kony mobilefabric hpe mobile center view mobile solutions mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily application services aws step functionscoordinate distributed applications amazon api gatewaybuild publish manage apis amazon elastic transcodereasy use scalable media transcoding aws marketplace adobe coldfusion 11 nginx citrix netscaler view related products \\( 260 \\) messaging amazon simple queue service \\( sqs \\) managed message queues amazon simple notification service \\( sns \\) pub sub mobile push sms amazon pinpointpush notifications mobile apps amazon simple email service \\( ses \\) email sending receiving business productivity amazon workdocssecure enterprise document storage sharing amazon workmailsecure email calendaring amazon chimefrustration free meetings video calls chat desktop app streaming amazon workspacesvirtual desktops cloud amazon appstream 2 0stream desktop applications securely browser internet things aws iot platformconnect devices cloud aws greengrasslocal compute messaging sync devices aws iot buttoncloud programmable dash button aws marketplace sirqul iot platform opendof iot router view related products contact center amazon connectcloud based contact center service game development amazon gameliftamazon gamelift simple fast cost effective dedicated game server hosting amazon lumberyarda free cross platform 3d game engine full source integrated aws twitch aws marketplace software infrastructure software \\( 1300 \\) application development application servers application stacks big data databases caching network infrastructure operating systems security business software \\( 845 \\) business intelligence collaboration content management crm ecommerce education research financial services high performance computing media project management storage backup developer tools \\( 220 \\) issue bug tracking monitoring log analysis source control testing resource center economics centerfind calculators tools help lower costs aws cloud security centerlearn aws cloud security build secure applications compliance centerlearn compliance programs aws cloud establishing controls architecture centerlearn build scalable reliable applications aws cloud knowledge centerget answers frequently asked technical support questions aws answersget clear guidance aws architects engineers common user questions compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway database amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon simple notification service \\( sns \\) application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile database amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws artifact mobile services aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report application services aws step functions amazon api gateway amazon elastic transcoder messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon chime amazon workdocs amazon workmail desktop app streaming amazon workspaces amazon appstream 2 0 software aws marketplace internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard click return amazon web services homepage aws cloud computing cloud computing choosing cloud platform events webinars customer success global infrastructure getting started aws free tier 's new aws blog aws news analyst reports solutions websites web apps websites website hosting development test ecommerce applications mobile services digital marketing aws marketplace backup storage archive backup recovery data archive disaster recovery aws marketplace big data hpc big data high performance computing internet things aws marketplace financial services game development game development operation amazon game developers aws marketplace digital media digital media aws marketplace healthcare life sciences healthcare life sciences genomics aws marketplace business apps business apps oracle sap microsoft aws marketplace enterprise start ups public sector products compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing aws marketplace storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile aws marketplace databases amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service aws marketplace migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile aws marketplace networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing aws marketplace developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface aws marketplace aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services aws marketplace security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws marketplace analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue aws marketplace artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis mobile aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk application services aws step functions amazon api gateway amazon elastic transcoder aws marketplace messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) aws marketplace business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon appstream 2 0 internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard aws marketplace software infrastructure software \\( 1300 \\) business software \\( 845 \\) developer tools \\( 220 \\) developers get started tools devops forums java javascript mobile php ruby python windows net training resources training self paced labs certification economics center security center architecture center knowledge center whitepapers aws answers analyst reports forums aws youtube channel events webinars documentation compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway databases amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly aws rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon sns application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive support aws support information support center aws trusted advisor technical faqs forums service health dashboard aws personal health dashboard aws managed services contact us partners aws partner network find aws partners premier consulting partners apn competency partners apn partner solutions login apn portal careers contact us sign console download mobile app aws documentation welcome amazon web services \\( aws \\) documentation whether new aws advanced user find useful information services ranging introductions advanced features click tabs view various categories services tools aws cloud look term aws glossary learn host static website using aws getting started tutorial deploy first application using aws elastic beanstalk getting started tutorial get started relational databases using amazon rds analyze big data amazon elastic mapreduce hadoop getting started tutorial learn host wordpress blog amazon linux learn back files amazon simple storage service \\( s3 \\) quickstart learn launch linux virtual machine amazon ec2 quickstart services getting started services compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway database amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog trusted advisor aws health aws management console aws command line interface aws tools windows powershell security identity compliance identity access management amazon inspector aws artifact aws certificate manager aws cloudhsm aws directory service aws kms aws organizations aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws internet things aws greengrass aws iot contact center amazon connect game development amazon lumberyard \\( beta \\) amazon gamelift mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon sns application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon sns amazon ses amazon sqs business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto 3 \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resource groups tagging api resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive getting started getting started aws get introduction amazon web services including examples get started links resources help learn getting started aws management console learn aws management console includes instructions starting various services steps customizing navigation bar tips accessing region settings security credentials billing updates hosting static website learn deploy static website using aws build wordpress website learn build wordpress website using aws elastic beanstalk amazon s3 amazon rds build drupal website learn build drupal website using aws elastic beanstalk amazon efs amazon rds deploying web app learn deploy node js app using aws elastic beanstalk tutorial deploy net application using aws elastic beanstalk follow instructions visual quickstart deploy sample application aws elastic beanstalk aws devops learn use aws codepipeline automatically deploy source code aws codecommit deployment targets aws codedeploy aws elastic beanstalk aws opsworks getting started resource center start building aws aws training certification develop skills design deploy operate infrastructure applications aws cloud aws glossary learn terms related aws get started aws learn start using aws minutes aws free tier gain free hands experience aws 12 months create free account twitter facebook google twitch aws blog 's new \\? rss subscribe updates aws cloud computing cloud computing \\? caching \\? nosql \\? devops \\? products services customer success economics center architecture center security center 's new whitepapers aws blog events sustainable energy press releases aws news analyst reports legal solutions websites website hosting business applications backup recovery disaster recovery data archive devops serverless computing big data high performance computing mobile services digital marketing game development digital media government education health financial services windows aws resources training developers java aws javascript aws mobile aws php aws python aws ruby aws windows net aws sdks tools aws marketplace user groups support plans service health dashboard discussion forums faqs documentation articles tutorials test drives aws business builder manage account management console billing cost management subscribe updates personal information payment method aws identity access management security credentials request service limit increases contact us amazon web services hiring amazon web services \\( aws \\) dynamic growing business unit within amazon com currently hiring software development engineers product managers account managers solutions architects support engineers system engineers designers visit careers page developer specific careers page learn amazon web services equal opportunity employer amazon com company language deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) site terms privacy 2017 amazon web services inc affiliates rights reserved using outdated browser please upgrade internet explorer 11 another modern browser improve experience", 
    "crawled_date": "2017-06-10T13:59:47.759770"
  }, 
  "15": {
    "link5": "https://developer.firstdata.com/marketplace/api/index.html", 
    "link4": "https://www.firstdata.com/en_us/customer-center/merchants/first-data-global-gateway-api-software-landing.html", 
    "link1": "https://www.firstdata.com/downloads/marketing-merchant/fd_globalgatewayapi_usermanual.pdf", 
    "api_url": "firstdata.com", 
    "link3": "https://www.firstdata.com/downloads/marketing-merchant/fdgg-web-service-api.pdf", 
    "link2": "https://www.firstdata.com/downloads/marketing-merchant/fd_globalgatewayinternetpaymentgateway_integrationguideapi.pdf", 
    "progweb_url": "https://www.programmableweb.com/api/linkpoint", 
    "progweb_date": "07.27.2008", 
    "progweb_descr": "The LinkPoint API provides payment processing services for those who need sophisticated payment processing options. You can control how your payments are processed via code. Process payments from the Web or many terminal types.", 
    "api_name": "LinkPoint", 
    "progweb_cat": "Payments,eCommerce", 
    "descr5": "shell python node js java php sign developer key documentation powered slate marketplace api reference introduction documentation describes rest api resources provided first data reliable system designed simple fast performance scalability industry leader payments first data apis provide unique opportunity developers use payments ecosystem extensive infrastructure apis uri paths use built http authentication providing secure access data entities make http requests using standard methods like get post parse responses returned json format allows developers use development language access apis reliably interact system power variety different applications api endpoints must prefaced base url sent email containing sandbox credentials set sandbox account please click button request sandbox access provide example requests throughout docs shell python node js java use examples create valid requests need use received via email see authentication section detail authentication note shell must include following top file run shell script type following chmod command name file example hmac first data marketplace api requires hmac authentication try code documentation use sandbox credentials sent email credentials \\? request sandbox access expected send following authorization headers api request note valid time stamp \\( \\) mandatory authentication construction hmac sha1 algorithm takes two byte strings input key message use secret \\( received email \\) key utf 8 encoding message output hmac sha1 also byte string called digest signature request parameter constructed base64 encoding digest hmac example hmac signature authorization header signature generated follows client would compose like marketplace apis get categories please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github command returns json structured like \\( partial response \\) endpoint retrieves list business categories \\( retail moto restaurant \\) marketplace request response endpoint returns representing business category following parameters object returned get products please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github command returns json structured like \\( partial response \\) endpoint retrieves list products marketplace request response endpoint returns representing product following parameters object returned possible values get product details please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github command returns json structured like endpoint retrieves product details given product request url use returned response get products api response endpoint returns containing information descriptions price detailed attributes product following parameters object returned possible values together array defines frequency means charged product get product features please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github command returns json structured like endpoint retrieves list features given product request url use returned response get products api response endpoint returns representing feature get product includes please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github command returns json structured like \\( partial response \\) endpoint retrieves list included products come given product may include things built hardware accessories software comes http request url use returned response get products api response endpoint returns representing included product following parameters object returned get product specs please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github command returns json structured like endpoint retrieves list technical specifications given product may include information height weight well materials product made case hardware type product request url use returned response get products api response endpoint returns representing line specification line array may contain multiple lines specifications get product recommended please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github command returns json structured like \\( partial response \\) endpoint retrieves recommended products given product example terminal system may items like weight scale kitchen printer recommended products request url use returned response get products api response endpoint returns representing recommended product following parameters object returned get product faq please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github command returns json structured like endpoint retrieves list frequently asked questions given product request url use returned response get products api response endpoint returns representing faq entry following parameters object returned post cart validate please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github please download sample json files java examples use post requests example payload command returns json structured like success response error response endpoint used validation items shopping cart products product types required bought together etc request endpoint takes json input refer example request json structure request payload response endpoint returns representing validation result following parameters may object returned possible values together array provides filtering guidance needs modified shopping cart get industry please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github command returns json structured like endpoint retrieves broad industry description \\( \\) labels given business category result values returned endpoint used request get mcc industry endpoint need send mcc information request payload pricing apis request url use attribute selected business category get list industries response endpoint returns containing objects represent industry get mcc industry please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github command returns json structured like \\( partial response \\) endpoint retrieves mcc merchant category code \\( \\) given industry need send mcc information request payload pricing apis request url use attribute business category returned get industry response endpoint returns containing two objects represent one mcc code contain numerical code \\( \\) associated description label \\( \\) post pricing equipment please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github please download sample json files java examples use post requests example payload command returns json structured like \\( partial response \\) endpoint used retrieve pricing given product \\( collection products \\) product pricing pricing products included associated fees considered pricing product request endpoint takes json input refer example request payload json structure request payload object response api returns array objects representing pricing product object contains following keyword value pairs return parameters italic used iso program hidden user post pricing acquiring please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github please download sample json files java examples use post requests example payload command returns json structured like post pricing acquiring api used retrieve pricing credit card processing transaction fees rates well associated flat charges considered pricing product request response api returns array objects representing pricing product object contains following keyword value pairs return parameters italic used iso program hidden user post pricing global please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github command returns json structured like post pricing equipment api used retrieve pricing applies every merchant regardless equipment purchased qualifying criteria object returned considered pricing product request response api returns array objects representing pricing product object contains following keyword value pairs return parameters italic used iso program hidden user post application checkout please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github please download sample json files java examples use post requests example payload \\( partial file see full file github \\) command returns json structured like endpoint retrieves unique shopping cart checkout process completed numeric identifier used onboarding \\( merchant application \\) process input reference order checking purposes collecting information shipping product \\( \\) merchant onboarding \\( merchant application \\) process completed approved request endpoint takes json input contains order details cart details products pricing products transaction information shipping information response endpoint returns containing one represents post banks validate please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github please download sample json files java examples use post requests example payload command returns json structured like success response endpoint used verify entered ach information section \\( \\) merchant application form submission every successful match endpoint also retrieves additional information matched bank need use endpoint validate ach information submitting merchant application using post application update endpoint request endpoint takes json input contains bank routing number \\( \\) entered user merchant application form response endpoint returns representing validation result case success bank information following parameters may object returned post tin validate please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github please download sample json files java examples use post requests example payload command returns json structured like error response endpoint used verify tax identification number \\( \\) matches tax filing name \\( \\) entered user merchant application form submission need use endpoint validate information submitting merchant application using post application update endpoint addition parameters returned request used populate input post application update request endpoint takes json input containing data validated \\( tax information \\) well requester information please refer table use value parameter needs defaulted response endpoint returns representing validation result case error additional information error used present error message user following parameters may object returned post application update please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github please download sample json files java examples use post requests example payload \\( partial file see full file github \\) command returns json structured like endpoint submits merchant application form note request occur user completed required fields refer post tin validate post banks validate services validation generation input creating request request possible values response endpoint returns containing application form submission results following parameters may object returned post identity questions please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github command returns json structured like success response example error response response indicated provided information \\( tin information \\) could associated known record endpoint returns multiple choice questions list possible answers presented user verify identity user answers submitted using post identity answers endpoint service uses tin information submitting merchant application using post application update endpoint please note service although takes input called post application update service successfully posted test data need enter valid test data calling post application update endpoint order get successful response identity verification endpoints may use following sample data first name mark last name marsupial tax id ssn 351 76 2213 address 401 n lazy lake rd zip code 48014 city capac state mi b 04 15 1975 aba routing number 021000021 request response endpoint returns containing results record lookup record successfully located \\( see \\) list multiple choice questions list possible answers following parameters may object returned post identity answers please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github command returns json structured like success response endpoint returns results identity verification uses input user answer questions presented post identity questions endpoint request response endpoint returns containing results identity verification following parameters may object returned get contracts agreement please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github command returns json structured like endpoint retrieves information merchant agreement display applicant final signature request url use returned response post application checkout api note although endpoint takes returned post application checkout successfully submit request post application update request processed response endpoint returns containing values entered validated previous endpoints post application update post application checkout possible values possible values used merchant agreement listed post application contractdocument please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github please download sample json files java examples use post requests see complete example payload \\( \\) github command returns json structured like endpoint submits merchant application takes document base64 format uploads first data merchant agreement specific last step merchant application process submits order data necessary first data determine merchant eligibility payment processing request endpoint takes json input containing image contract containing user \\( \\) signature \\( \\) note although endpoint takes returned post application checkout successfully submit request post application update request processed response endpoint returns containing confirmation submission final step merchant application process contract document submitted merchant directed page confirms application submitted post application signup please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github please download sample json files java examples use post requests command returns json structured like endpoint allows us validate merchant information product data submit order time serves combination post application checkout post application update intended used certain cases request endpoint takes json input containing merchant transaction information product data response endpoint returns containing serves confirmation submission marketplace apis \\( pfac \\) post application pfac signup please refer authentication section variable declarations hmac authentication see complete request action please refer sample requests github command returns json structured like endpoint allows us create pfac \\( payment facilitator \\) merchant order using merchant information setup data also validates product data merchant information short serves combination post application checkout post application update request endpoint takes json input containing merchant transaction information product data values marked required column used first data determine credit worthiness merchant possible values bbb assigns ratings \\( highest \\) \\( lowest \\) cases bbb rate business \\( indicated rating \\) reasons include insufficient information business ongoing review update business file click information first data credit decision team also accept values field based pre 2009 system rating companies possible values response endpoint returns containing serves confirmation submission shell python node js java php", 
    "descr4": "seems like visiting x would like continue x english \\? continue x investor information available us english version firstdata com leave website go investors section first data us english website continue investors contact us solutions insights client support news investors investors overview annual reports proxy statement corporate governance email alerts financial news fixed income information quarterly financials sec filings shareowner services stock quote chart webcasts events presentations overview board directors careers client success stories corporate citizenship first data salutes leadership partners sales 866 382 8643 chat sales request callback support 877 810 9315 support phone numbers request callback contacts simple safe rewarding payments learn small businesses overview business go ecommerce food drink retail services businesses solutions large merchants overview credit card terminals pos solutions credit debit card electronic check acceptance solutions ecommerce solutions information analytics reporting marketing solutions merchant mobile commerce solutions prepaid solutions security fraud solutions global national financial institutions overview analytics reporting solutions atm network solutions business referral services card production solutions commercial payments credit processing solutions customer communications solutions digital mobile banking solutions loans processing solutions loyalty rewards solutions paypoint payment gateway professional services operations remittance services security fraud solutions community financial institutions overview account screening trs dda collection services card production solutions consumer lending credit card processing commercial payment solutions customer communications solutions debit processing atm star network information analytics reporting marketing prepaid solutions merchant acquiring referral program mobile commerce solutions online banking solutions security fraud solutions government overview healthcare human services industries overview corporate billers education solutions financial analyst solutions gambling gaming solutions healthcare providers payer solutions seeing future learn topics overview credit issuing debit atm ecommerce mobile commerce fraud risk management gift paycards global financial institutions info analytics internet banking bill pay loyalty pos payments customer contact small business types overview first data perspectives infographics newsletters research success stories webinars white papers serving business learn first data client extranets overview find product support overview keep date first data learn press releases first data facts awards rankings first data news history social media first data events connected magazine investor relations learn annual reports proxy statement corporate governance email alerts financial news fixed income information quarterly financials sec filings shareowner services stock quote chart webcasts events presentations shaping future global commerce learn board directors careers client success stories corporate citizenship first data salutes leadership partners change country client supportfind product supportglobal gateway code wrappers manuals connect us live chat contact info first data global gatewaysm code wrappers manuals search accessing first data global gatewaysm software downloads agreeing accept terms first data global gateway end user agreement manuals guides downloads first data global gateway partial authorization quick reference guide download pdf 554 kb first data global gateway virtual terminal manual v 11 0 download pdf 2 mb first data global gateway connect 2 0 integration guide v 2 0 download pdf 1 mb first data global gateway web service api integration guide v 9 0 download pdf 1 mb first data global gateway customer test environment response codes download pdf 1 mb first data global gateway sgs response codes v 1 0 download pdf 97 kb first data global gateway virtual terminal zero authorization faq download pdf 342 kb first data global gateway general faqs download pdf 122 kb additional resources first data global gateway api solution work \\? global gateway api software modules build payment solutions fit unique needs pick choose modules need integrated global gateway api payment module web site customers purchase items web site payment details processed automatically review transaction activity visiting global gateway virtual terminal example simple transaction travels customer order approval customer makes purchase merchant 's online store internet ordering information received merchant 's csp merchant 's server \\( self hosting \\) merchant 's customized software receives information uses tax shipping calculators needed calculates order total passes relevant order payment information global gateway api payment module global gateway api payment module transports order data secure sockets layer \\( ssl \\) pipeline global gateway api secure server global gateway api service contacts transmits data dedicated secure frame relay system banking network transaction approved settled funds withdrawn credit card issuing bank deposited merchant bank account confirmation e mail sent merchant purchaser transaction completed development knowledge need integrate global gateway api \\? integrating global gateway web services api requires knowledge web services soap xml ssl global gateway api also available programming languages c c asp visual basic \\( vbscript \\) perl php macromedia coldfusion xml javatm however new feature functionality built web services api preferred recommended api first data global gateway much development expertise required integrate global gateway connect \\? global gateway connect service require lot programming expertise however minimum 'll need good working knowledge hypertext markup language \\( html \\) html forms knowledge cgi javascript web technologies helpful implementing web site features calculating order totals collecting storing order data posting url global gateway connect \\? posting url global gateway connect solution https secure linkpt net lpcentral servlet lppay form tags order forms specify url action ensure using latest version global gateway connect reset password global gateway virtual terminal \\? store users click administration click manage users click associated reset password link user enter new password click submit button multi store administrators log multi store administrator administrator login page click administration main menu bar click view hierarchy navigate hierarchy find element \\( user \\) need reset password click associated reset password link element enter new password click submit button i'm trying use com object 64 bit server without success \\( cannot create automation object \\) registered dll apparent success 64 bit compiled version \\? moment time documentation supports 64 bit api wrappers 32bit servers x submission error error submission thank thank submission connect us live chat contact info resources product extranets contact careers privacy legal site map united states change follow first data 2009 2017 first data corporation rights reserved first data name logo related trademarks service marks owned first data corporation registered used u many foreign countries apple pay trademark apple inc emv registered trademark trademark emvco llc united states countries www emvco com trademarks service marks trade names referenced material property respective owners", 
    "descr3": "firstdata com 1 first data global gateway web service api integration guide version 9 0 march 2015 important entities storing processing transmitting cardholder data behalf merchants payment processing transactions otherwise handling cardholder data contact first data global partner management team \\( gpm \\) gpm firstdata com discuss rules regulations associated direct integration first data global gateway 2010 first data corporation rights reserved document contains confidential pr oprietary information first data corporation may disclose copy use part materials without prior written consent first data corporation trademarks service marks trade names used presentation pr operty respective owners contents web service api integration guide 1 1 required data 6 2 web service api works 7 2 1 getting started 8 2 2 login 8 2 3 enter ten \\( 10 \\) digit store number user id 8 2 4 password guidelines 9 3 supported tools 10 4 sending transactions gateway 11 5 building transactions xml 13 5 1 credit card transactions 13 5 1 1 sale 14 5 1 2 preauth \\( aut horize virtual terminal \\) 16 5 1 3 postauth \\( ticket virtual terminal \\) 19 5 1 4 forceticket 20 5 1 5 return 23 5 1 6 credit 24 5 1 7 void 26 5 2 check transactions 27 5 2 1 sale 28 5 2 2 return 30 5 2 3 void 31 5 3 calculating shipping tax 32 5 3 1 calculate shipping 33 5 3 2 calculate tax 33 6 additional web service actions 35 6 1 recurring payments 35 6 1 1 install recurring payment 35 6 1 2 modify recurring payment 37 6 1 3 cancel recurring payment 38 6 2 systemcheck 39 7 xml tag reference 40 7 1 cred itcardtxtype 40 7 2 creditcarddata 40 7 3 creditcard3dsecure 41 7 4 pa yment 42 7 5 transactiondetails 42 7 6 billing 44 7 7 shipping 45 7 8 telechecktxtype 46 7 9 telecheckdata 46 7 10 calculateshipping 47 7 11 calculatetax 47 7 12 recur ringpayment 47 8 building soap request message 50 9 reading soap response message 51 9 1 soap response message 51 9 1 1 transaction 51 9 1 2 action 52 9 2 soap fault essage 53 9 2 2 soap env client 54 10 analyzing transaction response 56 10 1 approval response 56 10 2 failure response 58 11 building https post request 62 11 1 php 63 11 1 1 using curl php extension 63 11 1 2 using curl command line tool 64 11 2 asp 64 12 establishing ssl connection 66 12 1 php 66 12 1 1 using php curl extension 66 12 1 2 using curl command line tool 67 12 2 asp 67 13 sending https post request receiving response 68 13 1 php 68 13 1 1 using php curl extension 68 13 1 2 using curl command line tool 68 13 2 asp 69 14 using net framework 70 14 1 prerequisites 70 14 2 creat ing web service reference classes net 71 14 3 writing net client 74 15 using java framework 77 15 1 axis framework 77 15 1 1 client certificate configuration 77 15 1 2 generating client stubs 77 15 1 3 writing axis client 78 16 ssl http authentication 81 16 2 spring web services 81 16 2 1 client configuration 81 16 2 2 writing spring client 83 16 2 3 ssl certificate configuration 88 17 customer test environment \\( cte \\) 89 18 tax calculator 90 19 shipping calculator 91 20 tro ubleshooting 94 20 1 merchant exceptions 94 20 2 curl login error messages 99 20 3 java client login error messages 100 21 installing client certificate 101 22 glossary 108 1 first data global gateway web service api application programming interface allows connect application first data global gateway using web service api seamlessly accept credit card check payments application note store process cardholder data application must ensure application meets payment card industry data security standard \\( pci dss \\) requirements depending transaction volume may required pplication audited qualified security assessor first data global gateway web service api soap based w eb ervice advantages offering integration using web service include platform ndependence application se nd receive soap messages communicate web service api web service api built using open standards choose technology suits needs \\( e g j2ee net php asp etc \\) integrating first data glob al gateway eas e ntegration application builds soap request message encod es transaction send via http w eb ervice waits soap response message response http designed lightweight protocols building requests parsing responses straightforward furthermore rarely manually since number libraries available various technolog ies b uilding soap requ est handling response reduced lines code note working knowledge web service soap xml addition full understanding integrate dat application web site supporting software needed support web service api installed development environment prior web service implementation integrator must proficient selected programming language security communication application first data global gateway web service api ssl encrypted application client certificate identifies uniquely w eb ervice web service api holds server certifica te application check ensure communicating web service api web service also requires http basic authorization \\( user name password \\) order communicate web service security mechanisms guarantee transaction data sent first data global gateway web service api stays private available application document assist integrating application w eb ervice api provide brief summary web service api solution feature set 1 section describes data required communicating securely web service api following checklist provide overview enabling ensure received whole set registering application first data global gateway tore id store id assigned first data user id password user id password required basic authorization web service api user id format ws store id 1 f example store id 111920 user id ws111920 1 information ws store id 1 auth txt file client certificate p12 file client certificat e stored p12 file named format ws store id 1 p12 example store id 111920 p12 file named ws111920 1 p12 file used au thenticating client first data global gateway connecting java need ks f ile example ws111920 1 ks client certificate installation password password required installing p12 client certificate file information ws store id 1 p12 pw txt file client certificate private key private key client c ertificate stored key file named format ws store id key depending choice tools may required authenticating web service api client certificate private key password passw ord required private key named format ckp creation imestamp examp l e mig ht ckp 1193927132 depending choice tools may required authenticating web service api information ws store id 1 key pw txt file client certificate pem file client certificate stored p em file named format ws store id 1 pem example store id 111920 pem file named ws111920 1 pem file used au th enticating client first data global gateway depending choice tools may required authenticating web service api instead p12 file note files delivered tar gz format opene using recent versions winzip archive applications certificate valid 10 years need renewed expiration date renew certificate call 24 7 gsd help desk 888 477 3611 2 following section describes process performing credit card transaction web service api cases customer starts overall communication process buying goods services credit card online store store sends credit card transaction first data global gateway using web service api received transaction first data global gateway forwards credit card processor authori z ation based n result online store receives approval error response web service api means need able communicate first data global gateway web service api order accept payments web service nte rfaces designed using web service definition language \\( wsdl \\) wsdl file web service api located https ws firstdataglobalgateway com fdggwsapi services order wsdl must install client certificate access wsdl file example web browser see 21 installing client certificate page 101 instructions installing client certificate installing client certificate access wsdl file access wsdl file f ollow steps 1 pen microsoft internet explorer window enter url wsdl address field 2 requesting url server ask browser supply client certificate ensure sure talking application correctly since installed certificate prev ious steps seamlessly transferred server first data global gateway web service api sends server certificate browser verifies comes trusted source done automatically without prompting input secure connection established data transferred application first data api web service ssl encrypted 3 web service api wsdl file displayed note u ser id password required view wsdl required access first data global gateway web service api wsdl file defines operations offered web service api defines th e request response parameters call operations first data global gatewa web service ap wsdl file defines one operation fdggws apiorder called sending soap request following url https ws firstdataglobalgateway com fdggwsapi services operation takes xml encoded transaction request returns x ml encoded response depending tools use integrate web service api may need provide url wsdl file must tell tool communication ssl enabled provide client certificate accept server certificate trusted process depends upon tool consult documentation tool details following chapters guide setting store building performing custom credit card transactions 2 1 getting started account loaded system merchant receives n automated web service api outlines steps needed complete activation process account email contains following information required log dba name store n ame 6 10 digit numeric value user id emporary p assword call support desk 888 477 3611 receive password required login site proc ess transaction reports perform administrative functions virtual terminal url https secure linkpt net lpc servlet lpclogin 2 2 log n 2 3 enter ten \\( 10 \\) digit store number user id enter temporary password click login click accept agreement global gateway user agreement note temporary passwords valid thirty \\( 30 \\) minutes issued suggest change password regularly security specialists recommend merchants avoid using common words n umbers passwords avoid words numbers might associated name date birth 2 4 password guidelines password guidelines follows password length must minimum eight \\( 8 \\) maximum fifteen \\( 15 \\) characters contai n least one \\( 1 \\) letter one \\( 1 \\) number passwords expire every ninety \\( 90 \\) days replaced passwords cannot equivalent previous four \\( 4 \\) passwords account six \\( 6 \\) consecutive failed login attempts temporary \\( 30 \\) thirty minute account lockout occur logged merchant begin processing transactions 3 first data global gateway web service pi uses https soap communicate applications completely p latform independent choice languages frameworks tools integrate web service api first data tested web service api following tools php 5 2 9 asp net framework axis framework 2 1 3 spring ws 1 5 7 use tools integrate api tools first data tested integrating first data global gateway web service api using tools outside scope document 4 ection describes basic steps take place sending transactions first data global gateway customer initiates checkout online store online store displays form asking customer provide credit card number exp iration date customer enters submits data online store receives data builds xml document encoding sale transaction includes data provided customer total amount paid customer building x ml sale transac tion online store wraps soap message describes web service operation called transaction xml passed parameter online store generates http post request containing soap message sets http basic authorization headers online store establishes ssl connection providing client server certificate online store sends http post request first data global gateway web service api waits f http response web service api receives http request parses authorization information provided store http headers authorized store web service api parses soap message contained http request b od trigger ing call transaction operation first data global gateway web service api performs transaction processing builds xml response document wraps soap message sends th e soap message back client body http response online store receives http response depending data contained xml response document online store displays approval error message example describes case sale transaction ransactions fol low process application perform following steps order submit transactions analyze result build xml document encoding transactions wrap xml document soap request message build http pos request information identifying store provided http header soap request message body establish ssl connection application first data global gateway web service api send http post request first data global gateway web service api receive response read soap response message http response body analy z e xml response document contained soap response message following cha pters describe information need perform steps detail guide process setting application perform ransactions 5 chapter describes xml formats submitting first data global gateway web service api encoding transaction xml message wrapped soap envelope submitted web service api tools use generate request messages may allow avoid workin g raw xml still need basic understanding xml format order correctly build xml transactions credit card check transactions contained fdggwsapi fdggwsapiorderrequest element note first data global gateway b service api accepts ascii characters order id contain following characters exceed 100 characters length order id restricted way accepts alpha numeric \\( z z 0 9 \\) special characters merchants convenience allowed special characters given hash \\( \\) underscore \\( \\) hyphen \\( \\) rate \\( \\) dot \\( \\) colon \\( \\) space \\( \\) 5 1 credit card ransactions regardless transaction type basic xml document structure credit card transaction follows fdggwsapi fdggwsapiorderrequest xmlns v1 http secure linkpt net fdggwsapi schemas us xmlns fdggwsapi http secure linkpt net fd ggwsapi schemas us fdggwsapi v1 transaction v1 creditcardtxtype v1 creditcardtxtype v1 creditcarddata v1 creditcarddata v1 payment v1 payment v1 transactiondetails v1 transactiondetails v1 billing v1 billing v1 shipping v1 shipping v1 transaction fdggwsapi fdggwsapiorderrequest creditcarddata txtype creditcarddata payment elements mandatory credit card transactions elements depend transaction type content depends type transaction see 7 xml tag reference pa ge 40 f details required optional elements valid submission credit card transactions 5 1 1 sale following code sample sale transactio n using minimum required elements fdggwsapi fdggwsapiorderrequest xmlns v1 http secure linkpt net fdggwsapi schemas us v1 xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi v1 transaction v1 creditcardtxtype v1 type sale v1 type v1 creditcardtxtype v1 creditcarddata v1 cardnumber 41 11111111111111 v1 cardnumber v1 expmonth 12 v1 expmonth v1 expyear 12 v1 expyear v1 creditcarddata v1 payment v1 chargetotal 19 95 v1 chargetotal v1 payment v1 transactiondetails v1 recurring v1 recurring v1 transactiondetails v1 transaction fdggwsapi fdggwsapiorderrequest fdggwsapi fdggwsapiorderrequest following table lists required optional fields sale transaction \\( v1 billing v1 transaction details v1 shipping optional \\) several situations may occur downgraded 1 failure input required data filed elements 2 swiping credit card designated cnp enviro nment 3 failure input data tax po field fdgg accepts 0 00 transactions processing visa mastercard jcb discover credit cards primary purpose submitting 0 00 cha rgetotal amount billing address credit card verification \\( lost stolen \\) avs \\( address match mismatch \\) settlement return transaction processed paths relative fdggwsapi fdggwsapiorderrequest v1 transaction field required v1 creditcardtxtype v1 type required v1 creditcarddata v1 cardnumber required v1 trackdata submitted v1 expmonth required v1 trackdata submitted v1 expyear required v1 trackdata submitted v1 cardcodevalue optional v1 cardcodeindicator optional v1 trackdata required v1 cardnumber submitted v1 creditcard3dsecure v1 payersecuritylevel required 3d secure transactions v1 authenticationvalue see 7 3 creditcard3dsecure details v1 xid see 7 3 creditcard3dsecure details v1 payment v1 chargetotal required 0 00 v1 subtotal optional v1 vattax optional v1 shipping optional v1 transa ctiondetails v1 userid optional v1 invoicenumber optional v1 orderid optional note certain special characters valid see te characters allowed v1 ip optional v1 referencenumber optional v1 tdate optional v1 recurring required v1 taxexempt optional v1 terminaltype optional v1 transactionorigin required v1 ponumber optional v 1 deviceid optional field required v1 billing prevent possibility downgrading billing data required moto eci transactions v1 customerid optional v1 name moto eci required retail optional v1 company optional v1 address1 moto eci required retail optional v1 address2 optional v1 city moto eci required retail optional v1 state moto eci required retail optional v1 zip moto eci required retail optional v1 country moto eci required retail optional v1 phone optional v1 fax optional v1 email optional required receipts emailed customer administrator v1 shipping v1 type optional v1 name optional v1 address1 optional v1 address2 optional v1 city optional v1 state optional v1 zip optional v1 country optional elements must submitted order defined xsd file transaction c reditcardtxtype creditcarddata payment 5 1 2 preauth \\( authorize virtual terminal \\) pre auth transaction authorizes dollar amount transaction places hold transaction amount limited time epending issuing bank reserve place several days following code sample preauth transaction using minimum required number elements fdggwsapi fdggwsapiorderrequest xmlns v1 http secure linkpt net fdggwsapi schemas us v1 xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggw sapi v1 transaction v1 creditcardtxtype v1 type preauth v1 type v1 creditcardtxtype v1 creditcarddata v1 cardnumber 4111111111111111 v1 cardnumber v1 expmonth 12 v1 expmonth v1 e xpyear 12 v1 expyear v1 creditcarddata v1 payment v1 chargetotal 100 00 v1 chargetotal v1 payment v1 transactiondetails v1 recurring v1 recurring v1 transactiondetails v1 transaction fdggwsapi fdggwsapiorderrequest following table lists required optional fields preauth transaction paths relative fdggwsapi fdggwsapiorderrequest v1 transaction field required v1 creditcardtxtype v1 type required v1 creditcarddata v1 cardnumber required v1 trackdata submitted v1 expmonth required v1 trackdata submitted v1 expyear required v1 trackdata submitted v1 cardcodeindicator optional v1 cardcodevalue optional v1 trackdata required v1 cardnumber submitted v1 creditcard3dsecure v1 payersecuritylevel required 3d secure transactions v1 authenticationvalue see 7 3 creditcard3dsecure details v1 xid see 7 3 creditcard3dsecure details v1 payment v1 chargetotal required 0 00 v1 subtotal optional v1 vattax optional field required v1 shipping optional v1 transa ctiondetails v1 userid optional v1 invoicenumber optional v1 orderid optional first data global gateway web service api accepts ascii characters order id contain following characters exceed 100 characters length order id restricted way accepts alpha numeric \\( z z 0 9 \\) special characters merchants convenience allowed special characters given hash \\( \\) underscore \\( \\) hyphen \\( \\) rate \\( \\) dot \\( \\) colon \\( \\) space \\( \\) v1 ip optional v1 referencenumber optional v1 tdate optional v1 recurring required v1 taxexempt optional v1 terminaltype optional v1 transactionorigin required v1 ponumber optional v1 dev ceid optional v1 billing prevent possibility downgrading billing data required moto eci transactions v1 customerid optional v1 name moto eci required retail optional v1 company optional v1 address1 moto eci required retail optional field required v1 address2 optional v1 city moto eci required retail optional v1 state moto eci required retail optional v1 zip moto eci required retail optional v1 country moto eci required retail optional v1 phone optional v1 fax optional v1 email optional required receipts emailed customer administrator v1 shipping v1 type optional v1 name optional v1 address1 optional v1 address2 optional v1 city optional v1 state optional v1 zip optional v1 country optional 5 1 3 postauth \\( ticket virtual terminal \\) postauth transaction finalizes companion pre auth transaction done time product shipment fulfilment services post auth transaction submitted associated preauth transaction eligible settlement mount postauth transaction must 1 l ess equal amount associated preauth transaction 2 greater 0 00 preauth transaction total greater compan ion postauth transaction total ansaction settled following code sample postauth transaction using minimum required elements fdggwsapi fdggwsapiorderrequest xmlns v1 http secure linkpt net fdggwsapi schemas us xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi v1 transaction v1 creditcardtxtype v1 type postauth v1 type v1 creditcardtxtype v1 payment v1 chargetotal 59 45 v1 chargetotal v1 payment v1 transactiondetails v1 orderid 70 3d2723 99b6 4559 8c6d 797488e8977 v1 orderid v1 transactiondetails v1 transaction fdggwsapi fdggwsapiorderrequest following table lists required optional fields postauth transaction paths relative fdggwsapi fdggwsapiorderrequest v1 transaction field required v1 creditcardtxtype v1 type required v1 payment v1 chargetotal optional amount must less equal preauth transaction associated greater 0 00 v1 transa ctiondetails v1 orderid required first data global gateway web service api accepts ascii characters order id contain following characters exceed 100 characters length order id restricted way accepts alpha numeric \\( z z 0 9 \\) special characters merchants convenience allowed special characters given hash \\( \\) underscore \\( \\) hyphen \\( \\) rate \\( \\) dot \\( \\) colon \\( \\) space \\( \\) 5 1 4 forceticket following code sample forceticket transaction using minimum required elements fdggwsapi fdggwsapiorderrequest xmlns v1 http secure linkpt net fdggwsapi schemas us xmlns fdggwsapi http secure linkpt net fdggw sapi schemas us fdggwsapi v1 transaction v1 creditcardtxtype v1 type forceticket v1 type v1 creditcardtxtype v1 creditcarddata v1 cardnumber 4111111111111111 v1 cardnumber v1 expmonth 12 v1 expmonth v1 expyear 12 v1 expyear v1 creditcarddata v1 payment v1 chargetotal 59 45 v1 chargetotal v1 payment v1 transactiondetails v1 referencenumber 123456 v1 referencenumber v1 transactiondetails v1 transaction fdggwsapi fdggwsapiorderrequest following table lists required optional fields forceticket transaction paths relative fdggwsapi fdggwsapiorderrequest v1 transaction field required v1 creditcardtxtype v1 type required v1 creditcarddata v1 cardnumber required v1 trackdata submitted v1 expmonth required v1 trackdata submitted v1 expyear required v1 trackdata submitted v1 cardcodevalue optional v1 cardcodeindicator optional v1 trackdata required v1 cardnumber submitted v1 creditcard3dsecure v1 payersecuritylevel required 3d secure transactions v1 authenticationvalue see 7 3 creditcard3dsecure details v1 xid see 7 3 creditcard3dsecure details v1 payment v1 chargetotal required must 0 00 v1 subtotal optional v1 vattax optional field required v1 shipping optional v1 transa ctiondetails v1 userid optional v1 invoicenumber optional v1 orderid optional first data global gateway web service api accepts ascii characters order id contain following characters exceed 100 characters length order id restricted way accepts alpha numeric \\( z z 0 9 \\) special characters merchan ts convenience allowed special characters given hash \\( \\) underscore \\( \\) hyphen \\( \\) rate \\( \\) dot \\( \\) colon \\( \\) space \\( \\) v1 ip optional v1 referencenumber required v1 tdate optional v1 billing prevent possibility downgrading billing data required moto eci transactions v1 customerid optional v1 name moto eci required retail optional v1 company optional v1 address1 moto eci required retail optional v1 address2 optional v1 city moto eci required retail optional v1 state moto eci required retail optional v1 zip moto eci required retail optional v1 country moto eci required retail optional v1 fax optional field required v1 email optional required receipts emailed customer administrator v1 shipping v1 type optional v1 name optional v1 address1 optional v1 address2 optional v1 city optional v1 state optional v1 zip optional v1 country optional v1 phone optional v1 fax optional v1 email optional 5 1 5 return following code sample return transaction using minimum required elements fdggwsapi fdggwsapiorderrequest xmlns v1 http secure linkpt net fdggwsapi schemas us xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi v1 transaction v1 creditcardtxtype v1 type return v1 type v1 creditcardtxtype v1 payment v1 chargetotal 19 95 v1 chargetotal v1 payment v1 transactiondetails v1 orderid 62e3b5df 2911 4e89 8356 1e49302b1807 v1 orderid v1 transactiondetails v1 transaction fdggwsapi fdggwsapiorderrequest following table lists required fields return transaction paths relative fdggwsapi fdggwsapiorderrequest v1 transaction field required v1 creditcardtxtype v1 type required v1 payment v1 chargetotal required must 0 00 v1 transa ctiondetails v1 orderid required first data global gateway web service api accepts ascii characters order id contain following characters exceed 100 characters length order id restricted way accepts alpha numeric \\( z z 0 9 \\) special characters merchants convenience allowed special characters given hash \\( \\) underscore \\( \\) hyphen \\( \\) rate \\( \\) dot \\( \\) colon \\( \\) space \\( \\) 5 1 6 credit following code sample credit transaction using minimum required elements fdggwsapi fdggwsapiorderrequest xmlns v1 http secure linkpt net fdggwsapi schemas us xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi v1 transaction v1 creditcardtxtype v1 type credit v1 type v1 creditcardtxtype v1 creditcarddata v1 cardnumber 4111111111111111 v1 cardnumber v1 expmonth 12 v1 expmonth v1 expyear 12 v1 expyear v1 creditcarddata v1 payment v1 chargetotal 50 00 v1 chargetotal v1 payment v1 transaction fdggwsapi fdggwsapiorderrequest following table lists required optional fields credit transaction paths relative fdggwsapi fdggwsap iorderrequest v1 transaction field required v1 creditcardtxtype v1 type required v1 creditcarddata v1 cardnumber required v1 trackdata submitted v1 expmonth required v1 trackdata submitted v1 expyear required v1 trackdata submitted v1 cardcodevalue optional v1 cardcodeindicator optional v1 trackdata required v1 cardnumber submitted v1 creditcard3dsecure v1 payersecuritylevel required 3d secure transactions v1 authenticationvalue see 7 3 creditcard3dsecure details v 1 xid see 7 3 creditcard3dsecure details v1 payment v1 chargetotal required must 0 00 v1 subtotal optional v1 vattax optional v1 shipping optional v1 transa ctiondetails v1 userid optional v1 invoicenumber optional v1 ip optional v1 billing prevent possibility downgrading billing data required moto eci transactions v1 customerid optional v1 name moto eci required retail optional v1 company optional v1 address1 moto eci required retail optional v1 address2 optional v1 city moto eci required retail optional field required v1 state moto eci required retail optional v1 zip moto eci required retail optional v1 country moto eci required retail optional v1 phone optional v1 fax optional v1 email optional required receipts emailed customer administrator v1 shipping v1 type optional v1 name optional v1 address1 optional v1 address2 optional v1 city optional v1 state optional v1 zip optional v1 country optional v1 p hone optional v1 fax optional v1 email optional 5 1 7 void following code sample void transaction using minimum required elements fdggwsapi fdggwsapiorderrequest xmlns v1 http secure linkpt net fdggwsapi schemas us xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi v1 transaction v1 creditcardtxtype v1 type void v1 type v1 creditcardtxtype v1 transactiondetails v1 orderid 62e3b5df 2911 4e89 8356 1e49302b1807 v1 orderid v1 tdate 1190244932 v1 tdate v1 transactiondetails v1 transaction fdggwsapi fdggwsapiorderrequest following table lists required fields void transaction paths relative fdggwsapi fdggwsapiorderrequest v1 transaction field required v1 creditcardtxtype v1 type required v1 transa ctiondetails v1 orderid required first data global gateway web service api accepts ascii characters order id contain following characters exceed 100 characters length order id restricted way accepts alpha numeric \\( z z 0 9 \\) special characters merchants convenience al lowed special characters given hash \\( \\) underscore \\( \\) hyphen \\( \\) rate \\( \\) dot \\( \\) colon \\( \\) space \\( \\) v1 tdate required 5 2 check transactions regardless transaction type basic xml document structure check transaction follows fdggwsapi fdggwsapiorderrequest xmlns v1 http secure linkpt net fdggwsapi schemas us xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi v1 transaction v1 telechecktxtype v1 telecheck txtype v1 telecheck data v1 telecheck data v1 payment v1 payment v1 transactiondetails v1 transactiondetails v1 billing v1 billing v1 shipping v1 shipping v1 transaction fdggwsapi fdggwsapiorde rrequest element telecheck txtype mandatory check transactions elements depend transaction type content depends type transaction see 7 xml tag reference page 40 details required optional elements needed submission check trans actions 5 2 1 sale following code sample check sale transaction using minimum required elements fdggwsapi fdggwsapiorderrequest xmlns v1 http secure linkpt net fdggwsapi schemas us xmlns fdggwsapi http secure linkpt net fdggws api schemas us fdggwsapi v1 transaction v1 telechecktxtype v1 type sale v1 type v1 telechecktxtype v1 telecheckdata v1 checknumber 111 checknumber v1 accounttype pc accounttype v1 accountnumber 1234567890 accountnumber v1 routingnumber 055001054 routingnumber v1 drivinglicensenumber u12345678 drivinglicensenumber v1 drivinglicensestate ca drivinglicensestate v1 telecheckdata v1 payment v1 chargetotal 19 95 v1 chargetotal v1 payment v1 transaction fdggwsapi fdggwsapiorderrequest following table lists required optional fields sale transaction paths relative fdggwsapi fdggwsapiorderrequest v1 transaction field req uired v1 telecheck txtype v1 type required v1 telecheck data v1 checknumber required v1 accounttype required v1 accountnumber required v1 routingnumber required v1 drivinglicensenumber required v1 drivinglicensestate required field req uired v1 payment v1 chargetotal required 0 00 v1 subtotal optional v1 vattax optional v1 shipping optional v1 transa ctiondetails v1 userid optional v1 invoicenumber optional v1 orderid optional first data global gateway web service api accepts ascii characters order id contain following characters exceed 100 characters length order id restricted way accepts alph numeric \\( z z 0 9 \\) special characters merchants convenience allowed special characters given hash \\( \\) underscore \\( \\) hyphen \\( \\) rate \\( \\) dot \\( \\) colon \\( \\) space \\( \\) v1 ip optional v1 referencenumber optional v1 tdate optional v1 recurring required yes v1 taxexempt optional v1 terminaltype optional v1 transactionorigin required v1 ponumber optional v1 billing prevent possibility downgrading billing data required moto eci transactions v1 customerid optional field req uired v1 name moto eci required retail optional v1 company optional v1 address1 moto eci required retail optional v1 address2 optional v1 city moto eci required retail optional v1 state moto eci required retail optional v1 zip moto eci required retail optional v1 country moto eci required retail optional v1 phone optional v1 fax optional v1 email optional required receipts emailed customer administrator 5 2 2 return following code sample c heck return ransaction using minimum required elements fdggwsapi fdggwsapiorderrequest xmlns v1 http secure linkpt net fdggwsapi schemas us xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi v1 transaction v1 telechecktxtype v1 type return v1 type v1 telechecktxtype v1 payment v1 chargetotal 19 95 v1 chargetotal v1 payment v1 transactiondetails v1 orderid 62e3b5df 2911 4e89 8356 1e49302b1807 v1 orderid v1 transactiondetails v1 transaction fdggwsapi fdggwsapiorderrequest following table lists required fields return transaction paths relative fdggwsapi fdggwsapiorderrequest v1 transaction field required v1 telecheck txtype v1 type required field required v1 payment v1 chargetotal required must 0 00 v1 transa ctiondetails v1 orderid required first data global gateway web service api accepts ascii characters order id contain following characters exceed 100 characters length order id restricted way accepts alph numeric \\( z z 0 9 \\) special characters merchants convenience allowed special characters given hash \\( \\) underscore \\( \\) hyphen \\( \\) rate \\( \\) dot \\( \\) colon \\( \\) space \\( \\) 5 2 3 void following code sample c heck void ransaction using minimum required elements fdggwsapi fdggwsapiorderrequest xmlns v1 http secure linkpt net fdggwsapi schemas us xmlns fdggwsapi http secure linkpt net fdggwsapi schemas u fdggwsapi v1 transaction v1 telechecktxtype v1 type void v1 type v1 telechecktxtype v1 payment v1 chargetotal 19 95 v1 chargetotal v1 payment v1 transactiondetails v1 orderid 62e3b5df 2911 4e89 8356 1e49302b1807 v1 orderid v1 transactiondetails v1 transaction fdggwsapi fdggwsapiorderrequest following table lists required fields void transaction paths relative fdggwsapi fdggwsapiorderrequest v1 transaction field required v1 telecheck txtype v1 type required v1 payment v1 chargetotal required must 0 00 v1 transa ctiondetails v1 orderid required first data global gateway web service api accepts ascii characters order id contain following characters exceed 100 characters length order id restricted way accepts alpha numeric \\( z z 0 9 \\) special characters merchants convenience allowed special characters given hash \\( \\) underscore \\( \\) hyphen \\( \\) rate \\( \\) dot \\( \\) colon \\( \\) space \\( \\) v1 tdate required 5 3 calculat ing shipping tax regardless transaction type basic xml document structure tax shipping charge calculation follows fdggwsapi fdggwsapiorderrequest xmlns v1 http secure linkpt net fdggwsapi schemas us xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi v1 transaction v1 calculate v1 calculate v1 transaction fdggwsapi fdggwsapiorderrequest see 7 xml tag reference page 40 details quired optional elements needed tax shipping charge calculations 5 3 1 calculate shipping following code sample shipping charge calculation using minimum required elements fdggwsapi fdggwsapiorderrequest xmlns v1 http secure linkpt net fdggwsapi schemas us xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi v1 transaction v1 calculateshipping v1 subtotal 12 0 v1 subtotal v1 weight 1 2000000476837158 v1 weight v1 itemc ount 1 v1 itemcount v1 carriertype 2 v1 carriertype v1 shipstate ca v1 shipstate v1 calculateshipping v1 transaction fdggwsapi fdggwsapiorderrequest following table lists required optional fields shipping charge calculation paths relative fdggwsapi fdggwsapiorderrequest v1 transaction field required v1 calculateshipping v1 subtotal required v1 weight required v1 itemcount required v1 carriertype required v1 shipstate required 5 3 2 calculate tax following code sample tax calculation using minimum required elements fdggwsapi fdggwsapiorderrequest xmlns v1 http secure linkpt net fdggwsapi schemas us xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi v1 transaction v1 calculatetax v1 subtotal 12 0 v1 subtotal v1 shipstate ca v1 shipstate v1 shipzip 93065 v1 shipzip v1 calc ulatetax v1 transaction fdggwsapi fdggwsapiorderrequest following table lists required optional fields tax calculation paths relative fdggwsapi fdggwsapiorderrequest v1 transaction field required v1 calculatetax v1 subtotal required v1 shipstate required v1 shipzip required 6 addition credit card check transactions first data global gateway web service api supports actions recurring payments system check test system online web service actions contained fdggwsapi fdggwsapiactionrequest element 6 1 recurring payments recurring payment action allows install modify cancel recurring credit card payments 6 1 1 install recurring payment use recurring payment schedule credit card payments future dates transactions begin current date set start date current date first transaction processes immediately feature schedule single transaction future cannot set start date past following example shows install recurring credit card month 12 months starting december 31 2011 fdggwsapi fdggwsapiactionrequest xml ns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi xmlns a1 http secure linkpt net fdggwsapi schemas us a1 xmlns v1 http secure linkpt net fdggwsapi schemas us v1 a1 action a1 recurringpayment a1 recurringpaymen tinformation a1 recurringstartdate 20111231 a1 recurringstartdate a1 installmentcount 12 a1 installmentcount a1 installmentfrequency 1 a1 installmentfrequency a1 installmentperiod month a1 installmentperi od a1 recurringpaymentinformation a1 transactiondatatype a1 creditcarddata v1 cardnumber 4012000033330026 v1 cardnumber v1 expmonth 12 v1 expmonth v1 expyear 12 v1 expyear a1 creditcarddata a1 transacti ondatatype v1 payment v1 chargetotal 10 00 v1 chargetotal v1 subtotal 5 00 v1 subtotal v1 payment v1 shipping v1 address1 v1 address1 v1 carrier v1 carrier v1 city v1 city v1 country v1 country v1 items v1 items v1 state v1 state v1 total v1 total v1 weight v1 weight v1 shipping v1 billing v1 address1 v1 address1 v1 city v1 city v1 country v1 count ry v1 state v1 state v1 zip v1 zip v1 billing v1 transactiondetails v1 invoicenumber v1 invoicenumber v1 transactionorigin v1 transactionorigin v1 userid v1 userid viceid v1 transactiondetails a1 function install a1 function a1 recurringpayment a1 action fdggwsapi fdggwsapiactionrequest following table describes optional required fields installing recurring transaction addition must submit data required credit card check sale transaction paths relative fdggwsapi fdggwsapiactionrequest a1 action a1 recurringpayment maximum failures enter number times first data global gateway retry transaction admin contacted default number three \\( 3 \\) retry transaction range one \\( 1 \\) five \\( 5 \\) example recurring transaction declined retry number three \\( 3 \\) solution attempts process transaction day next three \\( 3 \\) days third decline gateway sends final failure notification email admin email alerts admin transaction submitted processing three \\( 3 \\) tim es declined time system reached retry limit gateway stop attempts obtain authorization admin modifies cancels pb field required a1 function required a1 recurringpaymentinformation a1 recurringstartdate required a1 installmentcount required a1 installmentfrequency required a1 installmentperiod required a1 maximumfailures required 6 1 2 modify recurring payment following example shows modify existing recurring payment using rder id original instalment credit card number required whenever modifying recurring payment fdggwsapi fdggwsapiactionrequest xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi xmlns a1 http secure linkpt net fdggwsapi schemas us a1 xmlns v1 http secure linkpt net fdggwsapi schemas us v1 a1 action a1 recurringpayment a1 function modify a1 function v1 billing v1 billing v1 shipping v1 shipping a1 orderid e368a525 173f 4f56 9ae2 beb4023a6993 a1 orderid a1 recurringpaymentinformation a1 installmentcount 999 a1 installmentcount a1 recurringpaymentinformation a1 recurringpayment v1 transactiondetails v1 invoicenumber v1 invoicenumber v1 transactionorigin v1 transactionorigin v1 userid v1 userid v1 transactiondetails a1 acti fdggwsapi fdggwsapiactionrequest modify recurring payment information transaction details simply include fields need modified dependent fields may required example must update expirati date update card number following table describes optional required fields modifying recurring transaction credit card transaction fields see 5 1 1 sale page 14 check see 5 2 1 sale page 28 details \\( v1 billing v1 shipping optional however transactions include elements may downgrade \\) transaction data must submitted child a1 recurringpayment paths relative fdggwsapi fdggwsapiactionrequest a1 action a1 recurringpayment f ield required a1 function required f ield required a1 orderid required first data global gateway web service api accepts ascii characters order id contain following characters exceed 100 characters length order id restricted way accepts alpha numeric \\( z z 0 9 \\) special characters merchants convenience allowed special characters given hash \\( \\) underscore \\( \\) hyphen \\( \\) rate \\( \\) dot \\( \\) colon \\( \\) space \\( \\) a1 recurringpaymentinfor mation a1 recurringstartdate required a1 installmentcount required a1 installmentfrequency required a1 installmentperiod required a1 charget otal required a1 maximumfailures required v1 cardnumber required 6 1 3 cancel recurring payment following example shows cancel existing recurring payment using rder id original instalment fdggwsapi fdggwsapiactionrequest xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi xmlns a1 http secure linkpt net fdggwsapi schemas us a1 xmlns v1 http secure linkpt net fdggwsapi schemas us v1 a1 action a1 recurringpayment a1 function cancel a1 function a1 orderid e368a525 173f 4f56 9ae2 beb4023a6993 a1 orderid a1 recurringpayment a1 action fdggwsapi fdggwsapiactionrequest following table describes optional required fields cancelling recurring transaction paths relative fdggwsapi fdggwsapiactionrequest a1 action a1 recurringpayment field required a1 function required a1 orderid required 6 2 systemcheck systemcheck action allows check first data global gateway web service api currently available integrators need perform check frequently every 15 minutes perform check frequently every 5 minutes following code sample systemcheck call fdggwsapi fdggwsapiactionrequest xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi xmlns a1 http secure linkpt net fdggwsapi schemas us a1 xmlns v1 http secure linkpt net fdggwsapi schemas us v1 a1 action a1 systemcheck a1 action fdggwsapi fdggwsapiactionrequest 7 chapter provides reference xml elements used sending transactions actions first data global gateway web service api 7 1 creditcardtxtype following table describes sub elements v1 creditcardtxtype element element data type description v1 type xs string transaction type valid values sale f orceticket p reauth postauth r eturn c redit v oid 7 2 creditcarddata following table describes sub elements v1 creditcarddata element element data type description v1 cardnumber xs string string contains digits passing number format xxxx xxxx xxxx xxxx result error v1 expmonth xs string credit card content element always contains two digits example use 07 july v1 expyear xs string credit card content element always contains two digits example use 09 2009 v1 cardcodevalue xs string three \\( 3 \\) four \\( 4 \\) digit card se curity code \\( csc \\) card verification value \\( cvv \\) code \\( cvc \\) typically printed back credit card information us ing csc contact support element data type description v1 cardcodeindicator xs string indicates card code value provided valid values provided provided illegible imprint present v1 trackdata xs string track data card using card reader instead keying card data use value instead cardnumber expmonth expyear swiping card field needs contain either track 1 data track 2 data concatenated track 1 2 data concatenated track data must include trac k field separators stored card track 1 track 2 data format track 1 \\? track 2 \\? 7 3 creditcard3dsecure following table describes sub elements v1 creditcard3dsecure element element data type description v1 payer securitylevel xs string two digit payersecuritylevel returned merchant plug v1 authenticationvalue xs string authenticationvalue \\( mastercard aav visa caav \\) returned merchant plug v1 xid xs string xid returned merchant plug note receive values merchant plug 3d secure 3d secure provider 3d secure functionality first data global gateway connect cann ot used transactions via web service api 7 4 p ayment following table describes sub elements v1 payment element element data type description v1 chargetotal xs double total transaction amount including tax vat shipping amounts number positions decimal point must exceed 2 3 123 invalid 3 12 3 1 3 valid sale transaction type 0 00 v1 subtotal xs double sub total amount transaction including tax vat shipping amounts v1 tax xs double tax amount transaction v1 vattax xs double vat tax amount v1 shipping xs double hipping amount transaction 7 5 transactiondetails following table describes sub elements v1 transactiondetails element element data type description v1 userid xs string u ser id user performed transaction value used reporting v1 invoicenumber xs string nvoice number assigned merchant element data type description v1 orderid xs string rder id must unique store id order id transmitted web service api assigns value first data global gateway web service api accepts ascii characters order id contain following characters exceed 100 characters length order id restricted way accepts alpha numeric \\( z z 0 9 \\) special characters merchants convenience allowed special characters given hash \\( \\) underscore \\( \\) hyphen \\( \\) rate \\( \\) dot \\( \\) colon \\( \\) space \\( \\) v1 ip xs string ip address used web service api fraud detection ip address must format xxx xxx xxx xxx example 128 0 10 2 valid ip v1 referencenumber xs string six \\( 6 \\) digit reference number received result successful external authorization \\( example phone \\) th value required mapping forceticket transaction previous authorization v1 tdate xs st ring tdate sale postauth forceticket return credit transaction referred void transaction tdate value returned response successful transaction performing void transaction tdate orderid iginal transaction required element data type description v1 recurring xs string indicates transaction recurring transaction required field must contain value yes valid values yes v1 taxexempt xs string indicates transaction exempt tax valid values yes v1 terminaltype xs string type terminal performing transaction 32 characters valid values standalone point sale credit card terminal pos electronic cash register integrated pos system unattended self service station unspecified e commerce general crt applications v1 transactionorigin xs string required source transaction valid values eci email internet moto mail order telephone order retail face face v1 ponumber xs string purchase order number transaction applicable v 1 deviceid xs string data help identify potential fraud 7 6 billing following table describes sub elements v1 billing element element data type description v1 customerid xs string id customer v1 name xs string provided appear transaction reports v1 company xs string company provided appear transaction reports element data type description v1 address1 xs string provided appear transaction reports v1 address2 xs string address provided appear transaction reports v1 city xs string city provided appear transaction reports v1 state xs string state provided appear transaction reports v1 zip xs string zip code provided appear transaction reports v1 country xs string country provided appear transaction reports v1 phone xs string phone number provided appear transaction reports v1 fax xs string fax number provided appear transaction reports v1 email xs string e mail address provided appear transaction reports 7 7 shipping following table describes sub elements v1 shipping element element data type description v1 type xs string shipping method v1 name xs string name provided appear transaction reports v1 address1 xs string first line shipping address provided appear transaction reports v1 address2 xs string second line shipping address provided appear transaction reports v1 city xs string city provided appear transaction reports v1 state xs string state provided appear transaction reports element data type description v1 zip xs string zip c ode provided appear transaction reports v1 country xs string country provided appear transaction reports v1 carrier xs integer integer code defined merchant identifying carrier type v1 total xs double transaction amount prior calculating shipping number positions decimal point must exceed 2 3 123 invalid 3 12 3 1 3 valid v1 weight xs double weight item shipped pounds kilograms determined merchant 7 8 telechecktxtype following table describes sub elements v1 telechecktxtype element element data type description v1 type xs string valid transaction type values ale v oid r eturn 7 9 telecheckdata following table describes sub elements v1 telecheckdata element element data type description v1 checknumber xs string c number v1 accounttype xs string valid type account values pc primary checking ps primary savings bc backup checking bs backup savings v1 accountnumber xs string c hecking ccount n umber v1 routingnumber xs string c b ank r outing n umber v1 drivinglicensenumber xs string c l icense n umber element data type description v1 drivinglicensestate xs string two digit abbreviation state 7 10 calculateshipping following table describes sub elements v1 calculateshipping element element data type description v1 subtotal xs double ransaction amount prior calculating shipping number positions decimal point must exceed 2 3 123 invalid 3 12 3 1 3 valid v1 weight xs double weight item shipped pounds kilograms determined merchant v1 itemcount xs integer n umber items shipped v1 carriertype xs integer integer code defined merchant identifying carrier type v1 shipstate v1 zip two digit state abbreviation shipping destinati 7 11 calculatetax following table describes sub elements v1 calculatetax element element data type description v1 subtotal xs double ransaction amount prior calculating tax number positions decimal point must exceed 2 3 123 invalid 3 12 3 1 3 valid v1 shipstate xs string wo digit state abbreviation shipping destination v1 shipzip v1 zip zip code shipping destination 7 12 recurringpayment following table describes sub elements a1 recurringpayment element element data type description a1 function xs string type recurring payment transaction valid values install modify cancel a1 orderid xs string rder id recurring payment modified cancelled first data global gateway web service api accepts ascii characters order id contain following characters exceed 100 characters length order id restricted way accepts alpha numeric \\( z z 0 9 \\) special characters merchants convenience allowed special characters given hash \\( \\) underscore \\( \\) hyphen \\( \\) rate \\( \\) dot \\( \\) colon \\( \\) pace \\( \\) a1 recurringpaymentinformatio n complex contains elements defining recurring payment a1 recurringstartdate xs string start ate recurring payment transaction yyyymmdd format value cannot past a1 installmentcount xs string n umber instalment recurring payment a1 installmentfrequency xs string f requency instalment combines instal l mentperiod determine instalment occur example use 2 instal l mentfrequency week instal l mentperiod bi weekly payments use 1 month monthly element data type description a1 installmentperiod xs string period instalment combines instal l mentfrequency determine instalment occur valid values ar e ay w eek onth ear 8 next step building transaction xml build soap envelope wraps transaction format soap envelope wrapping operation sent first data global gateway web service api follow \\? xml version 1 0 encoding utf 8 \\? soap env envelope xmlns soap env http schemas xmlsoap org soap envelope soap env header soap env body transaction action xml soap env body soa p env envelope soap message contains soap envelope header message body web service api require headers soap message body contains transaction action xml defined previous sections requirements mapping type transaction action soap envelope web service api maps operation based content body example complete soap message credit sale transaction looks like followi ng \\? xml version 1 0 encoding utf 8 \\? soap env envelope xmlns soap env http schemas xmlsoap org soap envelope soap env header soap env body fdggwsapi fdggwsapiorderrequest xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi v1 transaction xmlns v1 http secure linkpt net fdggwsapi schemas us v1 v1 creditcardtxtype v1 type sale v1 type v1 creditcardtxtype v1 creditcarddata v1 cardnumber 4012000033330026 v1 cardnumber v1 expmonth 12 v1 expmonth v1 expyear 12 v1 expyear v1 creditcarddata v1 payment v1 chargetotal 120 v1 chargetotal v1 payment v1 transaction fdggwsapi fdggwsapiorderrequest soap env body soap env en velope 9 first data global gateway web service api returns soap message response transaction action request request successful web service api returns fdggwsapi fdggwsapiorderresponse fdggwsapi fdggwsapiactionresponse body soap message request unsuccessful web service api returns soap fault message soap message types contained body http response message 9 1 soap response message 9 1 1 transaction first data global gateway web service api returns soap response message transaction successful web service api able return approved declined response response message following format \\? xml version 1 0 encoding utf 8 \\? soap env envelope xmlns soap env http schemas xmlsoap org soap envelope soap env header soap env body fdggwsapi fdggwsapiorderresponse xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi transaction result fdggwsapi fdggwsapiorderresponse soap env body soap env envelope soap response contains headers soap body contains actual transaction result contained fdggwsapi fdggwsapiorderres ponse element sub elements defined analy z ing transaction res ponse page 56 following example soap message returned approved sale transaction \\? xml version 1 0 encoding utf 8 \\? soap env envelope xmlns soap env http schemas xmlsoap org soap envelope soap env header oap env body fdggwsapi fdggwsapiorderresponse xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi fdggws api commercialserviceprovider csi fdggws api commercialserviceprovider fdggws api transactiontime tue nov 03 09 35 05 2009 fdggws api transactiontime fdggwsapi transactionid 2000486340 fdggwsapi transactionid fdggws api processorreferencenumber ok289c fdggws api processorreferencenumber fdggws api processorresponsemessag e approved fdggws api processorresponsemessage fdggws api errormessage fdggws api orderid eb0406bc 7eb8 419b aa1a 7a4394e2c83e fdggws api orderid fdggws api approvalcode ok289c0003529354 nnn fdggws api approvalcode fdggws api avsresponse ppx fdggws api avsresponse fdggws api tdate 1256168682 fdggws api tdate fdggws api transactionresult approved fdggws api transactionresult fdggws api processorresponsecode fdggws pi processorresponsecode fdggws api processorapprovalcode 440368 fdggws api processorapprovalcode fdggwsapi calculatedtax fdggwsapi calculatedshipping fdggwsapi transactionscore 496 fdggwsapi transactionscore fdggwsapi fraudaction accept fdggwsapi fraudac tion fdggwsapi authenticationresponsecode xxx fdggwsapi authenticationresponsecode fdggws api fdggws apiorderresponse soap env body soap env envelope 9 1 2 action send ction web service api returns fdggwsapi fdggwsapiactionresponse response successful instalment modification cancellation system check con tains value true parameter fdggwsapi success following example message returned successful action fdggwsapi fdggwsapiactionresponse xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi fdggwsapi success true fdggwsapi success fdggwsapi commerc ialserviceprovider fdggwsapi transactiontime tue nov 03 10 00 58 2009 fdggwsapi transactiontime fdggwsapi transactionid fdggwsapi processorreferencenumber fdggwsapi processorresponsemessage fdggwsapi errormessage fdggwsapi orde rid 3384d07e 699a 48d3 a44a 61ccefde0524 fdggwsapi orderid fdggwsapi approvalcode fdggwsapi avsresponse fdggwsapi tdate fdggwsapi transactionresult approved fdggwsapi transactionresult fdggwsapi processorresponsecode fdggwsapi processorapprovalcode fdggwsapi transactionscore 57 fdggwsapi transactionscore fdggwsapi fraudaction accept fdggwsapi fraudaction fdggwsapi fdggwsapiactionresponse 9 2 soap fault message first data global gateway w eb service api returns soap fault message request unsuccessful fault message following format \\? xml version 1 0 encoding utf 8 \\? soap env envelope xmlns soap env http schemas xmlsoap org soap envelope soap env header soap env body soap env fault faultcode soap env client faultcode faultstring xml lang en us fault message faultstring detail fault message detail soap env fault soap env body soap env envelope soap fault message may contain following elements element data type description faultcode xs string defines error occurred valid values soap env server soap env client faultstring xs string defines fault type detail xs string additional data depending fault type possible return values faultcode faultstring defined following sections 9 2 1 1 soap env server soap env server faultcode indicates web servic e api failed process transaction due internal system error receive response contact support resolve problem soap env server message following format \\? xml version 1 0 encoding utf 8 \\? soap env en velope xmlns soap env http schemas xmlsoap org soap envelope soap env header soap env body soap env fault faultcode soap env server faultcode faultstring xml lang en us unexpected error faultstring soap env fault soap env body soap env envelope soa p soap env envelope soap env body soap env fault contains following elements element data type description faultcode xs string value always soap env server faultstring xs string value always unexpected error 9 2 2 soap env client soap env client response includes merchantexception faultcode indicating web service api found error transaction submitted merchantexception indicates xml authorization data provided merchant faulty may one following reasons store registered closed receive message even though believe store registered open contact sup port store id user id combination provided http authorization syntactically incorrect xml match schema merchantexception message following format \\? xml version 1 0 encoding utf 8 \\? soap env envelope xmlns soap env http schemas xmlsoap org soap envelope soap env header soap env body soap env fault faultcode soap env client faultcode faultstring xml lang en us merchantexception faultstring detail detailed explanation detail soap env fault soap env body soap env envelope soa p soap env envelope soap env body soap env fault contains following elements element data type description faultcode xs string value always soap env client faultstring xs string value always merchantexception detail reason xs string web service api returns minimum one reason see 20 1 merchant exceptions page 94 detailed descriptions errors 10 10 1 approval respon se transaction approved first data global gateway web service api returns soap response message body message contains fdggwsapi fdggwsapiorderresponse fdggwsapi fdggwsapiactionresponse element following table descri bes sub elements fdggwsapi fdggwsapiorderresponse element web service api always returns elements listed however elements may empty element data type description fdggwsapi commercialserviceprovider xs string indicates provider fdggwsapi transactiontime xs string time stamp set first data global gateway web service api returning transaction approval fdggwsapi processorreferencenumber xs string reference number returned processor value may empty needed transaction value may needed contact support regarding transaction fdggwsapi processorresponsemessage xs string case n approval element contains following string approved fdggwsapi processorresponsecode xs string r esponse c ode credit card processor fdggwsapi processorapprovalcode xs string pproval c ode credit card processor fdggwsapi errormessage xs string e rror essage element empty case approval fdggwsapi orderid xs string element contains order id sale preauth forceticket credit transactions new order id returned postauth return void transactions supply number v1 orderid element identifying transaction refer fdggws api orderid element response postauth return void transaction simply returns order id original tran saction orderid generated web service maximum 100 digits first data global gateway web service api accepts ascii characters order id contain following characters exceed 100 characters length order id restricted way accepts alpha numeric \\( z z 0 9 \\) special characters merchants convenience allowed special characters given hash \\( \\) underscore \\( \\) hyphen \\( \\) rate \\( \\) dot \\( \\) colon \\( \\) space \\( \\) fdggwsapi approvalcode xs string approval code returned processor value may empty needed transaction value may needed contact support regarding transaction fdggwsapi avsresponse xs string ddress v erification ystem \\( avs \\) response fdggwsapi tdate xs string tdate required void transactions returned sale forcedticket postauth fdggwsapi transactionresult xs string transaction result always approved case approval fdggws api transactionid xs string transaction id used transaction fdggws api calculatedtax xs string calculated tax transaction fdggws api calculatedshipping xs string calculated shipping transaction fdggws api transactionscore xs string numerical value indicating risk fraud transaction higher values indicate greater risk fraud actual r ange used field yet defined field returns value merchants use optional add fraud service fdggws api authenticationresponsecode xs string r esponse code returned processor 3d ecure transactions see 3ds integration guide values def initions field returns value 3d secure transactions merchants use optional add service fdggwsapi fraudaction xs string element contain value accept reject review 10 2 failure response transaction declined action rejected first data global gateway web service api returns fdggwsapi fdggwsapiorderresponse fdggwsapi fdggwsapiactionresponse element elements returned case succe ssful transaction request values differ following table describes sub elements fdggwsapi fdggwsapiorderresponse element web service api always returns elements listed however elements may emp ty element data type description fdggwsapi commercialserviceprovider xs string indicates provider element data type description fdggwsapi transactiontime xs string time stamp set first data global gateway web service api returning transaction approval fdggwsapi processorreferencenumber xs string r eference n umber returned proc essor value may empty needed transaction value may need ed contact support regarding transaction fdggwsa pi processorresponsemessage xs string e rror essage returned processor value might empty fdggwsapi processorresponsecode xs string r esponse c ode credit card processor fdggwsapi processorapprovalcode xs string pproval c ode credit card processor fdggwsapi errormessage xs string e rror message returned first data global gateway web service api returned format sgs xxxxxx message xxxxxx six digit error code message describing error description might different processor response message instance example follow error message returned sgs 002304 credit card expired may need value contact support regarding transacti element data type description fdggwsapi orderid xs string rder id contrast approval rder id never required transaction may need value contact support regarding transaction order id generated web servic e maximum 100 digits first data global gateway web service api accepts ascii characters order id contain following characters exceed 100 characters length order id restricted way accepts alpha numeric \\( z z 0 9 \\) special characters merchants convenience allowed special characters given hash \\( \\) underscore \\( \\) hyphen \\( \\) rate \\( \\) dot \\( \\) colon \\( \\) space \\( \\) fdggwsapi approvalcode xs string element empty case transaction failure fdggwsapi avsresponse xs string returns ddress v erification ystem \\( avs \\) response null declined transactions fdggwsapi tdate xs string tdate similar rder id tdate never required transaction may need value contact support regarding transaction element data type description fdggwsapi transactionresult xs string valid values decline processor rejected transaction example insufficient funds duplicate orderid used previously fraud fraud detected transaction failed internal error gateway fdggws api transactionid xs string transacti id used transaction fdggws api calculatedtax xs string calculated tax transaction fdggws api calculatedshipping xs string calculated shipping transaction fdggws api transactionscore xs string numerical value indicating risk fraud transaction higher values indicate greater risk fraud actual range used field yet defined field returns value merchants use optional fee based fraud ervice fdggws api authenticationresponsecode xs string returns code case transaction failure 11 generally tools use communicate first data global gateway web service api support building https post requests document describes process using tools tested first data accessing web servic e api using another tool consult documentation following table describes values need build https post request paramete r value description url https w firstdataglobalgateway com fdggwsapi se rvices full url first data global gateway web service api epending functionality use building http requests might split url host service provide information appropriate http request aders content type text xml indicates soap message encoded xml passed content http post request body authorization type basic username ws store id 1 password password identifies store first data global gateway web service api authorization parameter takes following format authorization basic authstring authstring base 64 encoded result string userid password example user name ws 101 1 pas sword mypw complete http authorization header would authorization basic v1mxmdeuxy4wmdc6bxlqv w authorization string base 64 encoding result string ws101 1 mypw http body soap request xml http post request body contain soap request message 11 1 php use either curl library curl command line tool communicate web service api using php recent php versions curl library included extension needs activated straightforward task windows servers may require compile php unix linux machines case may easier call curl command line tool php script 11 1 1 using curl php extension php 5 2 9 2 activating curl extension simply requires uncomment following line php ini file extension php curl dll ther php versions might require actions order enable curl see php documentation info rmation activating curl use following code set https post request \\? php storing soap message variable note plain xml code passed string reasons simplicity however certainly goo practice build xml e g dom furthermore using special characters make sure xml string gets utf 8 encoded \\( done \\) body soap env envelope soap env envelope initializing curl fdggws api url ch curl init \\( https ws firstdataglobalgateway com fdggwsapi services order wsdl \\) setting request type po st curl setopt \\( ch curlopt post 1 \\) setting content type curl setopt \\( ch curlopt httpheader array \\( content type text xml \\) \\) setting authorization method basic curl setopt \\( ch curlopt httpauth curlauth basic \\) supplying credentials curl setopt \\( ch curlopt userpwd ws101 1 mypw \\) filling request body ap message curl setopt \\( ch curlopt postfields body \\) \\? next chapter discusses etting security options necessary enabling ssl communication 11 1 2 using curl command line tool choose use curl command line tool need perform setup following script shows call command line tool php script set https post request \\? php storing soap message variable note escape n since latter makes command line tool fail furthermore note plain xml code passed string reasons simplicity however certainly good practice build xml e g dom finally us ing special characters make sure xml string gets utf 8 encoded \\( done \\) body soap env envelope soap env envelope setting path curl command line tool adapt path path saved curl binaries path c curl cur l exe setting fdggws api url apiurl \\( https ws firstdataglobalgateway com fdggwsapi services order wsdl \\) setting conte nt type contenttype header content type text xml setting authorization method basic supplying credentials user basic user ws101 1 mypw setting request body soap message automatically marks request post da ta data body \\? 11 2 asp winhttp 5 1 included windows server 2003 windows xp sp2 use following code set https post request language javascript html body storing soap message variable note plain xml code passed string reasons simplicity however certainly good practice build xml e g dom furthermore using special characters make sure xml string gets utf 8 encoded \\( done \\) var body soap env envelope soap env envelope constructing request object var request server createobject \\( winhttp winhttprequest 5 1 \\) initializing request object http method post fdggws api url request open \\( pos https ws firstdataglobalgateway com fdggwsapi services order wsdl \\) setting c ontent type request setrequestheader \\( content type text xml \\) setting credentials request setcredentials \\( ws111901 1 e n v ip b 0 \\) body html sample code fragment written javascript u sing vb script instead fundamentally change code 12 must establish secure communication channel send http request built previous chapter ensures data sent client application first data global gateway web service api encrypted parties sure communic ating one else web service api requires ssl connection client server exchanging certificates guarantee level security client server certificates uniquely identify party process work follows 1 client begins process sending client certificate server 2 server receives client certificate verifies client certificate stored client 3 valid server responds sending ts server certificate 4 client receives server certificate verifies trusted server certificate 5 valid parties establish ssl channel sure communicating one else data exchanged parties encrypted following process application two things first start communication sending client certificate second verify received server certificate accomplished dif fers platform platform however order illustrate basic concepts php asp scripts started previous chapter continued extending relevant statements necessary setting ssl connection 12 1 php aga choose use either curl extension curl command line tool integrate web service api using php curl requires client certificate passed pem file client certificate private key passed separate file client certificate private key password supplied private key technically necessary establishing ssl connection required curl php 12 1 1 using php curl extension following code sample e xtends script started previous chapter sample code shows supply parameters necessary establishing ssl connection curl extension \\? php configuring curl verify server certificate curl setopt \\( ch curlopt ssl verifypeer 0 \\) setting path curl find client certificate curl setopt \\( ch curlopt sslcert c certs ws101 1 pem \\) private key curl setopt \\( ch curlopt sslkey c certs ws101 1 key \\) setting key password curl setopt \\( ch curlopt sslkeypasswd ckp 1256591851 \\) \\? next chapter discusses sending message receiving response 12 1 2 using curl command line tool follow ing code sample extends script started previous chapter sample code shows supply parameters necessary establishing ssl connection curl command line tool \\? php configuring curl verify server certificate setting path curl find client certificate cert c certs private key clientkey key c cer ts ws101 1 key setting key password keypw pass ckp 1256591851 \\? next chapter discusses sending message receiving response 12 2 asp communicate using ssl first data global gateway web service ap must install client certificate certificate store see 21 installing client certificate page 101 instructions installing client certificate following code sample extends script started th e previous chapter sample code shows set path winhttp find client certificate language javascript html body setting path client certificate send found request setclientcertificate \\( local machine ws101 1 \\) body html use vbscript instead javascript must replace double backslashes path single backslashes next chapter discusses sending message r eceiving response 13 final step writing client sending https post request first data global gateway web service api receiving response http libraries cover underlying communication details require single call returns http response first data global gateway web service api returns 200 status code soap response response successful http post request send nvalid http post parameters first data global gateway web service api return standard http error code send invalid data \\( example invalid credit card number \\) soap request message web service api return 500 stat us code soap fault message see 9 reading soap response message page 51 instructions reading soap response message 13 1 php choose use either curl extension curl command line tool inte grate web service api using php 13 1 1 using php curl extension sample code shows complete php curl extension script making https post request receiving response \\? php telling curl return http resp onse body operation result value calling curl exec curl setopt \\( ch curlopt returntransfer 1 \\) calling curl saving soap response message variable contains string like soap env envelope soap env envelope result curl exec \\( ch \\) closing curl curl close \\( ch \\) \\? http call returns soap response fault mes sage http response body 13 1 2 using curl command line tool performing https post request curl command line tool simply requires executing curl command php exec command php exec command saves line returned external program element array therefore get complete http response body must concatenate elements array sample code shows complete php curl extension script making https post request receiving response \\? php saving whole command one variable curl path data contenttype u ser servercert clientcert clientkey keypw apiurl preparing array containing lines returned curl command line tool returnarray array \\( \\) performing http call executing curl command line tool exec \\( curl ret urnarray \\) preparing variable taking complete result result concatenating different lines returned curl command line tool result variable result carrying entire soap response message string foreach \\( returnarray item \\) result result item \\? 13 2 asp method soap xml parameter language javascript html body th e http call soap request message input request send \\( body \\) saving soap response message string variable var response request responsetext body html request completed access response body throug h respon setext property request 14 first data tested first data global gateway web service api c 2 0 net framework 14 1 prerequisites first need install client certificate \\( ws store id 1 p12 \\) see 21 installing client certificate page 101 instructions installing client certificate user executing program h access certificate installation first download winhttpcertcfg tool microsoft use following url http www microsoft com downloads details aspx \\? familyid c42e27ac 3409 40e9 8667 c748e422833f displaylang en grant access user using command line navigate directory installed winhttpcertcfg enter following com mand winhttpcertcfg exe g theruserid c local machine ws storeid 1 p12 otheruserid name user executing application ws storeid 1 p12 name client certificate replace value name client certificate name format ws store id 1 verify value install client certificate using instructions must also install web service enhancements \\( wse \\) 3 0 microsoft net use following url view system requirements download installer http www microsoft com downloads details aspx \\? familyid 018a09fd 3a74 43c5 8ec1 8d789091255d displaylang en 14 2 creating web service reference classes net create web service reference classes project net follow steps 1 ri ght click project solution explorer select add web reference 2 download wsdl location https ws firstdataglobalgateway com fdggwsa pi services order wsdl 3 download schemas location https ws firstdataglobalgateway com fdggwsapi schemas us v1 xsd b https ws firstdataglobalgateway com fdggwsapi schemas us a1 xsd c https ws firstdataglobalgateway com fdggwsapi schemas us fdggwsapi xsd 4 following dialog displays enter location wsdl file url field root schema imports two schemas \\( v1 a1 \\) using relative urls shown code directory structure application needs match directory structure shown schema file xs import namespace http secure linkpt net fdggwsapi schemas us v1 schemalocation schemas us v 1 xsd xs import namespace http secure linkpt net fdggwsapi schemas us a1 schemalocation schemas us a1 xsd saved wsdl file c fdggws client wsdl order wsdl save xsd files path c fdggws client schemas us clic k go next url field 5 change name web reference editing web reference name field click add reference 6 project solution explorer press middle button \\( circled image \\) displays files created 7 create instance client web service class code using following format fdggwsapiorderservice ofdggwsapiorderservice new fdggwsapiorderservice \\( \\) 14 3 writing net client sample code shows c net client using system using system collections generic using system componentmodel using system data using system drawing using system text using system windows forms using fdggwsclient fdggwsref using system security cryptography x509certificates using system net namespace fdggwsclient public partial class form1 form public form1 \\( \\) initializecomponent \\( \\) private void button1 click \\( object sender eventargs e \\) servicepointm anager expect100continue false initialize service object fdggwsapiorderservi ce ofdggwsapiorderservice new fdggwsapiorderservice \\( \\) set wsdl url ofdggwsapiorderservice url https ws firstdataglobalgateway com fdggwsapi servic es order wsdl configure client certificate ofdggwsapiorderservice clientcertificates add \\( x509certificate createfromcertfile \\( c fdggwsclient ws111901 1 pem \\) \\) set authentication credentials networkcredenti al nc new networkcredential \\( ws111901 1 js2nd7dc \\) ofdggwsapiorderservice credentials nc create sale transaction request fdggwsapiorderrequest oorderrequest new fdggwsapiorderrequest \\( \\) transaction otransaction new transaction \\( \\) creditcardtxtype ocreditcardtxtype new creditcardtxtype \\( \\) ocreditcardtxtype type creditcardtxtypetype sale creditcarddata ocreditcarddata new creditcardda ta \\( \\) ocreditcarddata itemselementname new itemschoicetype itemschoicetype cardnumber itemschoicetype expmonth itemschoicetype expyear ocreditcarddata items new string 4012000033330026 12 12 otransaction items new object ocreditcardtxtype ocreditcarddata payment opayment new payment \\( \\) opayment chargetotal 120 otransaction payment opayment oorderrequest item otransaction get response fdggwsapiorderresponse oreponse null try oreponse ofdggwsapiorderservice fdggwsapiorder \\( oorderrequest \\) string sapprovalcode oreponse transact ionresult textbox1 text oreponse transactionresult catch \\( system web services protocols soapexception ex \\) catch exception 15 first data tested first data global gateway web service api following java frameworks axis f ramework \\( version 2 1 5 \\) spring ws \\( version 1 5 7 \\) following sections discuss integrating web service api using frameworks 15 1 axis framework axis framework framework building applications create process soap messages section discusses use axis framework connect first data global gateway web se rvice api axis framework provides wsdl2java tool creates stub code based wsdl files 15 1 1 client certificate configuration using wsdl2java tool must configure tool use client certificate configure wsdl2java ool pen wsdl2java bat wsdl2java sh add following java run time optional parameter wsdl2java bat set java opts java opts djavax net ssl keystore client certificate install absolute path ws stor e id 1 ks set java opts java opts djavax net ssl keystorepassword keystore password wsdl2java sh djavax net ssl keystore client certificate install absolute path ws stor djavax net ssl keystorepassword keystore password 15 1 2 generating client stubs wsdl2java tool found bin directory create client stubs enter following command wsdl2java bat uri wsdl url destination folder stub classes 15 1 3 writing axis client generating stubs next step write client program sends receives soap requests responses following sample program makes order request sale transaction imports go public class fdggwsaxis client public static void main \\( string args \\) keystore file password used next 2 lines found within store cert files archive may download via virtual terminal \\( support download center \\) system setproperty \\( javax net ssl keystore path client cert keystore file \\) system setproperty \\( javax net ssl keystorepassword keystore password \\) httptransportproperties authenticator auth new httptransportproperties authenticator \\( \\) auth setpreempt iveauthentication \\( true \\) following username password values come ws store name 1 auth txt file found inside store cert files archive may download via virtual terminal \\( support download center \\) auth se tusername \\( ws store name 1 \\) auth setpassword \\( store password \\) fdggwsapiorderservicestub fdggwsstub new fdggwsapiorderservicestub \\( \\) options options fdggwsstub getserviceclient \\( \\) getoptions \\( \\) options setproperty \\( httpconstants authenticate auth \\) type type1 sale type type type1 value6 creditcardtxtype creditcardtxtype new creditcardtxtype \\( \\) creditcardtxtype settype \\( sale type \\) cardnumber type1 cardnumber type1 new cardnumber type1 \\( \\) cardnumber type1 setcardnumber type0 \\( 4012000033330026 \\) expmonth type1 expmonth type1 new expmonth type1 \\( \\) expmonth type1 setexpmonth type0 \\( 12 \\) expyear type1 expyear type1 new expyear type1 \\( \\) expyear type1 setexpyear type0 \\( 12 \\) card c ard new card \\( \\) card setcardnumber \\( cardnumber type1 \\) card setexpmonth \\( expmonth type1 \\) card setexpyear \\( expyear type1 \\) creditcarddatasequence type0 creditcarddatasequence type0 new creditcarddatasequence type0 \\( \\) creditcarddatasequence type0 setcar \\( card \\) creditcarddatachoice type0 datachoice new creditcarddatachoice type0 \\( \\) datachoice setcreditcarddatasequence type0 \\( creditcarddatasequence type0 \\) creditcarddata creditcarddata new creditcarddata \\( \\) creditcarddata setcreditcarddatachoice type0 \\( datachoice \\) bigdecimal bigdecimal new bigdecimal \\( 10 \\) chargetotal type1 chargetotal type1 new chargetotal type1 \\( \\) chargetotal type1 setchargetotal type0 \\( bigdecimal \\) amount amount new amount \\( \\) amount setchargetotal \\( chargetotal type1 \\) payment type0 payment type0 new payment type0 \\( \\) payment type0 setamount \\( amount \\) payment payment new payment \\( \\) payment setpayment \\( payment type0 \\) transactionsequence type0 transactionsequence type0 ne w transactionsequence type0 \\( \\) transactionsequence type0 setcreditcardtxtype \\( creditcardtxtype \\) transactionsequence type0 setcreditcarddata \\( creditcarddata \\) transactionchoice type0 transactionchoice type0 new transactionchoice type0 \\( \\) transactioncho ice type0 settransactionsequence type0 \\( transactionsequence ype0 \\) transaction new transaction \\( \\) settransactionchoice type0 \\( transactionchoice type0 \\) setpayment \\( payment type0 \\) fdggwsapiorderrequest fdggwsapiorderrequest new fdggwsapiorderrequest \\( \\) fdggwsapiorderrequest settransaction \\( \\) fdggwsapiorderresponse response fdggwsstub fdggwsapiorder \\( fdggwsapiorderrequest \\) system println \\( transaction result response getfdggwsapiorderresponse \\( \\) gettransactionr esult \\( \\) \\) system println \\( order id response getfdggwsapiorderresponse \\( \\) getorderid \\( \\) \\) log \\( transaction result response gettransactionresult \\( \\) \\) log \\( order id response getorderid \\( \\) \\) 16 16 1 1 1 ssl application must provide client certificate security following code sample shows provide client certificate needed client certific ate system setproperty \\( javax net ssl keystore path client cert keystore fil e \\) system setproperty \\( javax net ssl keystorepassw ord keystore password \\) 16 1 1 2 http authentication first data global gateway web service api requires http basic authorization calls web service following code sample shows pass user name password http basic authorization options options ipgstub getserviceclient \\( \\) getoptions \\( \\) httptransportproperties authenticator auth new httptransportproperties authenticator \\( \\) auth setpreemptiveauthentication \\( true \\) auth setusername \\( ws111920 1 \\) auth setpassword \\( 0wrttq1k \\) options setproperty \\( httpconstants authenticate auth \\) 16 2 spring web services spring web services \\( spring ws \\) designed xml based access web services supports use marshallers unmarshallers enables application coded solely using java objects webservicetemplate core class client side w eb service access spring ws contains methods sending source objects receiving response ssages either source result objects additionally marsha l objects xml sending unmarshal response xml object 16 2 1 client configuration following code sample shows required configuration settings go applicationcontext xml fi le \\? x ml version 1 0 encoding utf 8 \\? beans xmlns http www springframework org schema beans xmlns xsi http www w3 org 2001 xmlschema instance xsi schemalocation http www springframework org schema beans http www springframework org schema beans spring beans 2 0 xsd bean id messagfactory class org springframework ws soap saaj saajsoapmessagefactory bean id abstractclient abs tract true constructor arg ref messagfactory property name destinationprovider bean class org springframework ws client support destination wsdl11destinationprovider property name wsdl value https ws firstdataglobalgateway com services order wsdl bean property bean bean id marshaller class org springframework oxm xmlbeans xmlbeansmarshaller bean id httpclientparams class org apache commons httpclient params httpclientparams property name authenticationpreemptive value true property name connectionmanagerclass value org apache commons httpclient multithreadedhttpconnectionmanager bean bean id httpclien class org apache commons httpclient httpclient constructor arg ref httpclientparams bean bean id credentials class org apache commons httpclient usernamepasswordcredentials constructor arg value ws111901 1 constructor arg value qrapl6fy bean bean id messagesender class org springframework ws transport http commonshttpmessagesender constructor arg ref httpclient constructor arg property name credentials ref credentials bean bean id fdggw sapiorder parent abstractclient class com firstdata fdggwsapi client fdggwsapiorder property name marshaller ref marshaller property name unmarshaller ref marshaller property name messagesender ref messagesender bean bea ns webservicetemplate class uses uri message destination defaulturi property lets specify destination uri spring ws creates webservicemessagesender uri responsible sending xml message set one message senders using messagesender messagesenders properties webservicetemplate class following webservicemessagesender interface available sending mes sages via http httpurlconnectionmessagesender commonshttpmessagesender configuration sample shows use commons http messagesender authenticate fdgg web service addition message sender webservicetemplate requires web service message factory code following sections uses saajsoapmessagefactory default used spring ws message factory specified via messagefactory property 16 2 2 writing spring client webservicete mplate contains many convenience methods send receive web service messages methods accept return source return result additionally methods marshal unmarshal objects xml preferred ethod creating messages reading responses use object xml mapping provided spring ws following three sections provide instructions using object xml mapping must work directly xml see 16 2 2 4 sending direct xml request page 87 instructions 16 2 2 1 configuring object xml mapping order facilitate sending plain java objects webservicetemplate number send methods take bject argument marshalsendandreceive method webservicetemplate class delegates conversion request object xml arshaller conve rsion response xml object u nmarshaller order use marshalling functionality set values marshaller unmarshaller properties webservicetemplate class spring provides support bject xml app ing org springframework oxm framework following sample code shows set org springframework oxm xmlbeans xmlbeansmarshaller marshaller unmarshaller applicationcontext xml file bean id marshaller class org springfram ework oxm xmlbeans xmlbeansmarshaller bean id fdggwsapiorder parent abstractclient class com firstdata fdggwsapi client fdggwsapiorder property name marshaller ref marshaller property name unmarshaller ref marshalle r bean 16 2 2 2 generating xmlbean classes must generate java objects based first data global gateway web service api schema files allows work directly java objects writing client application generate java objects follow steps download following schema files save folder called schemas us https ws firstdataglobalgateway com fdggwsapi schemas us fdggwsa pi xsd https ws firstdataglobalgateway com fdggwsapi schemas us v1 xsd https ws firstdataglobalgateway com fdggwsapi schemas us a1 xsd provide root schema parameter xmlbean ant task taskdef name xmlbean classname org apache xmlbeans impl tool xmlbean classpathref classpath xmlbean schema fdggws api xsd srcgendir gen dir classgendir bin dir classpathref classpath download true root schema imports two schemas \\( v1 a1 \\) using relative urls shown code directory structure application needs match directory structure shown schem file xs import namespace http secure linkpt net fdggwsapi schemas us v1 schemalocation schemas us v1 xsd xs import namespace http secure linkpt net fdggwsapi schemas us a1 schemalocation schemas us a1 xsd compile sche mas xml beans need download xmlbeans 2 2 0 see following site installation instructions http xmlbeans apache org documentation coninstallguide html c generate classes using one following tools scomp xmlbean ant task generate classes using xmlbeans scomp tool \\( located xmlbeans bin directory \\) enter following command scomp compiler path extern al java compiler rc target dire ctory generated java files target binary dire ctory class xsb files xsd use ant build use xmlbean ant task instead scomp need download xbean jar xmlbeans developer kit http xmlbeans apache org build script need include taskdef xmlbean add following cod e build script generate classes schema taskdef name xmlbean classname org apache xmlbeans impl tool xmlbean classpath path xbean jar xmlbean schema schema path srcgendir source generation directory classgendir compiled class directory classpath path xbean jar 16 2 2 3 writing client program classes generated xmlbeans allow application work java objects instead xml following code sample shows send order request using spring ws imports go public class fdggwsapiorder extends webservicegatewaysupport public fdggwsapiorder \\( webservicemessagefactory messagefactory \\) super \\( messagefactory \\) public void ccsale \\( \\) try insta ntiate order request document fdggwsapiorderrequestdocument orderrequestdoc fdggwsapiorderrequestdocument factory newinstance \\( \\) instantiate order request fdggwsapiorderrequest orderrequest orderrequestdoc addn ewfdggwsapiorderrequest \\( \\) instantiate transaction object transaction tran orderrequest addnewtransaction \\( \\) create request creditcardtxtype cctxtype tran addnewcreditcardtxtype \\( \\) creditcardtxtype type enum sale creditcardtxtype type sale cctxtype settype \\( sale \\) creditcarddata ccdata tran addnewcreditcarddata \\( \\) ccdata setcardnumber \\( 4012000033330026 \\) ccdata setexpmonth \\( 12 \\) ccdata setexpyear \\( 09 \\) tran setcreditcardtxtype \\( cctxtype \\) tran setcreditcarddata \\( ccdata \\) payment pp tran addnewpayment \\( \\) bigdecimal bd new bigdecimal \\( 31 23 \\) pp setchargetotal \\( bd \\) add request transaction tran setcreditcardtxtype \\( cctxtype \\) tran setcreditcarddata \\( ccdata \\) tran setpayment \\( pp \\) add transaction order request orderrequest settransaction \\( tran \\) add order request order request document orderrequestdoc setfdggwsapiorderrequest \\( orderrequest \\) send request ge response fdggwsapiorderresponsedocument orderresponsedoc \\( fdggwsapiorderresponsedocument \\) getwebservicetemplate \\( \\) marshalsendandrec eive \\( orderrequestdoc \\) fdggwsapiorderresponsedocument fdggwsapiorderresponse response orderresponsedoc getfdggwsapiorderresponse \\( \\) get response results system println \\( result sale transaction response gettransactionresult \\( \\) \\) system println \\( order id sale transaction response getorderid \\( \\) \\) system println \\( tdate sale transaction response gettdate \\( \\) \\) system println \\( error message response geterrormessage \\( \\) \\) handling exception catch \\( soapfaultclientexception e \\) system print ln \\( exception e tostring \\( \\) \\) soapfault sf e getsoapfault \\( \\) \\( sf null \\) domsource \\( domsource \\) sf getsource \\( \\) \\( sf getfaultdetail \\( \\) null \\) node detailnode detailsource getnode \\( \\) \\( detailnode getlocal name \\( \\) equalsignorecase \\( detail \\) \\) system println \\( fault detail detailnode gettextcontent \\( \\) \\) public static void main \\( string args \\) ssl configuration client certs system setproperty \\( javax net ssl keystore ssl ws111901 1 ks \\) system setproperty \\( javax net ssl keystorepassword q6dbysarx1 \\) get application context configuration applicationcontext applicationcontext new classpathxmlapplication context \\( com firstdata fdggwsapi client applicationcontext xml \\) fdggwsapiorder fdggwsapiorder \\( fdggwsapiorder \\) applicationcontext getbean \\( fdggwsapiorder fdggwsapiorder class \\) fdggwsapi order sale request fdggwsapiorder ccs ale \\( \\) 16 2 2 4 sending direct xml request object xml mapping preferred method using spring ws must work directly xml also possible configuration discussed previous sections applicationcontex xml file required following code sample shows send xml order request web service impo rt java io ioexception import javax xml transform source import org springframework context applicationcontext import org springframework context support classpathxmlapplicationcontext import org springframework core io resource import org springframework ws client core support webservicegatewaysupport import org springframework xml transform resourcesource import org springframework xml transform stringresult public class springclient extends webservicegatewaysupport private resource request public void setrequest \\( resource request \\) request request public void fdggwsapi \\( \\) throw ioexception source requestsource new resourcesource \\( request \\) stringresult result new stringresult \\( \\) getwebservicetemplate \\( \\) sendsourceandreceivetoresult \\( requestsource result \\) system println \\( result \\) public static void main \\( string args \\) throws ioexception ssl configuration client certs system setproperty \\( javax net ssl keystore ssl ws111901 1 ks \\) system setproperty \\( javax net ssl keystorepassword q6dbysarx1 \\) applicationcontext xml file contains actual xml request applicationcontext applicationcontext new classpathxmlapplicationcontext \\( applicationcontext xml springclient class \\) springclient springclient \\( springclient \\) applicationcontext getbean \\( springclient \\) springclient fdggwsapi \\( \\) following code sample show configuration required applicationcontext xml file \\? xml vers ion 1 0 encoding utf 8 \\? fdggwsapiorderrequest x mlns http secure linkpt net fdggwsapi schemas us fdggwsapi transaction xmlns http secure linkpt net fdggwsapi schemas us v1 creditcardtxtype storeid 111901 storeid type sale type creditcardtxtype creditcarddata cardnumber 4012000033330028 cardnumber expyear 12 expyear creditcarddata payment chargetotal 120 222 chargetotal payment transaction fdg gwsapiorderrequest 16 2 3 ssl certificate c onfiguration application must provide client certificate security server certificate issued well know n trusted authority already listed trusted store need configure server certificate following code sample shows provide keystore \\( ks \\) file password calling web service ssl configuration client certs system setproperty \\( javax net ssl keystore ssl ws111901 1 ks \\) system setproperty \\( javax net ssl keystorepassword q6dbysarx1 \\) 17 c usto mer test environment \\( cte \\) allows evelopment team test applications process transactions using first data global gateway web service api secure cost environment cte mimics production environmen setup fee processing charges using cte apply f test account access following site complete form click submit receive welcome email within 24 hours http www firstdata com gg apply test account htm test integration first data global gateway web service api use urls listed https ws merchanttest firstdataglobalgateway com fdggwsapi ser v ces order wsdl https ws merchanttest firstdataglobalgateway com fdggwsapi services https ws merchanttest firstdataglobalgateway com fdggwsapi schemas us fdggwsapi x https ws merchanttest firstdataglobalgateway com fdggwsapi schemas us v1 xsd https ws merchanttest firstdataglobalgateway com fdggwsapi schemas us a1 xsd assist testing accuracy development efforts directory cte response codes \\( avs cvm sgs error codes \\) located appendi x section document also located first data corp website http www firstdata com en us customer center merchants support first data global gateway api software landing content product 1 transition test account production account replace cte urls listed https ws firstdataglobalgateway com fdggwsapi schemas us fdgg wsapi xsd https ws firstdataglobalgateway com fdggwsapi schemas us v1 xsd https ws firstdatagl obalgateway com schemas us a1 xsd 18 tax calculator module calculates state municipal sales tax use tax calculator module create fulltax line configuration file secure payment gateway next send fulltax line support order load secure payment gateway fulltax line provides information needed tax module calculate sales tax order line includes entries states sales tax charged entries separated comma may followed space example fulltax tx 8 25 al 7 00 fl 7 00 ut mun entries list consist two digit code state followed space tax rate charged state see u state codes page error bookmark defined state codes tx 8 25 tax includes municipal tax listing two digit state code followed mun ut mun municipal taxes calculated according salestax txt file secure payment gateway server salestax txt file updated monthly en sure accuracy 19 shipping calculator set rules calculating shipping charges use shipping calculator module need create shipping nd carrier file secure payment gateway server create shipping file send support along store number shipping calculator uses shipping address information sent shipping entity along appropriate pricing data defined shipping file calculate charges shipping file plain text file consisting sets code called zone type zone definition lines example lines might appear shipping file shown zone type line zone definition line zone definition line zone type line zone definition line fields within types lines go together define shipping charges zone type line describes general shipping scheme whether costs based item count weight price zone definition line gives specific parameters pricing element pricing scheme one zone definition lines must immediately follow zone type line use zone defini tion lines set shipping prices based specific geographic areas types carriers determine price breaks occur fields within line code separated double colons fields multiple values use commas \\( countries tates \\) single colons \\( range definitions prices \\) zone type line formatted three fields tag name calculation code mer chant created range definitions zone type calculation method range1 range2 create many zone type lines need business use separate zone type line different shipping cost calculations total w eight total cost order separate freight r air transport carrier methods division world shipping zone prices 19 1 creating zone type lines create zone type lines 1 enter following tag name zone type line must precede two colons zone type 2 determine charge customers shipping products enter applicable code number tag name followed double colons spaces zone type 1 zone type 3 3 create quantity ranges share common pricing enter range followed single colon comma zone type 1 1 3 4 5 6 zone type 3 1 24 25 50 51 19 2 calculation method five choices calculating shipping charges select applicable calculation methods business e nter code number tag n zone type line method description 1 charges based total number items 2 charges based item totaled 3 charges based total weight order 4 charges based weight item totaled 5 charges based total price order 19 3 assigning ranges range defined value set values representing items within predetermined category use shipping charge range single number two numbers separated hyphen number followed plus sign specify infinite number ranges number ranges zone type line must correlate exactly number prices zone definition lines following restrictions apply range definitions must contiguous cannot skip numbers range definitions must start integer 1 last range defined line must end zone definition line specifies data required preceding zone type line code several fields specific business including zone name shipping carrier code shipping cost codes range see example zone name country carrier range cost range co st 19 4 creating zone definition lines create zone definition lines 1 enter zone name shipping situation followed two colons northamerica 2 select applicable countries zone name followed double colons use two digit country codes see country codes page error bookmark defined northamerica us mx ca u enter applicable two letter state code country code followed two colons westcoast us ca wa hi 3 determine different shipping methods business enter one merc hant defined shipping carrier code northamerica us mx ca 1 4 determine shipping cost range specified zone type line enter applicable shipping cost followed colon comma zone type 1 1 3 4 5 6 northamerica us mx ca 1 25 40 75 note shipping cost value zone definition line must match range zone type line determine zone name zone definition line name alphabetic string containing less 20 letters cannot include blank spaces offer different types shipping courier overnight two day ground transport zone definition line list shipping carrier option form integer allow charge differen amounts premium shipping services zone definition contains actual charges shipping items range specified preceding zone type merchants determine charges products following rules apply creating zone definition code shipping inter nationally u state code zone definition line ignored shipping prices u states need name states individually exceptions shipping ak hi define zone include remaining states non specific u zone number zone definition lines may follow zone type line zone name range charges must values fiel ds blank shipping calculator looks shipping file match blank field carrier type treated match 20 20 1 merchant exceptions detail xml wellformed premature end message detail explanation sent empty message message contain soap message text http body detail xml wellformed content allowed prolog detail explanation first data global gateway api cannot interpret content xml detail xml wellformed xml document structures must start end within entity detail explanation soap message missing end tag first open tag detail xml wellformed element type soap env body must terminated matching end tag lt soap env body gt detail explanation n open internal tag \\( top level tag \\) missing end tag example end tag soap env body missing detai l xml wellformed element type irgend must followed either attribute pecifications gt gt detail explanation tag malformed example detail xml wel lformed open quote expected attribute xmlns ns3 associated element type ns3 fdggws apiorderrequest detail explanation value one attribute enclosed quotation marks web service api xml attrib utes used name spaces detail xml wellformed prefix fdggws api element fdggws api fdggws apiorderrequest bound detail explanation name space fdggwsapi declared declare name space use xm lns prefix add following attribute fdggws apiorderrequest fdggws apiaction request ele ment x mlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi detail xml wellformed prefix xmln attribute xmln ns2 associated element type ns3 fdggws apiorderrequest bound detail explanation must use pre def ined namespace xmlns declare custom namespace example prefix written xmln xmlns detail xml wellformed unable create envelope given source namespace recognized detail explana tion message could interpreted xml message enclosing soap messag e correct included api message soap body name spaces name spaces declared correctly correct name spaces described xsd detail xml wellformed processing instruction target matching xx mm allowed detail explanation soap body must contain xml detail unexpected characters xml declaration detail explanation xm l must start \\? xml include empty line another white space character front xml detail xml soap message unable create envelope given source root element named envelope detail explanation xml appears valid soap message enclose message soap envelope detail xml valid soap message error determination type probably envelope part correct detail explanation soap body tag missing detail source object passed '' 0 '' conte nts detail explanation soap body empty detail included xml valid fdggws api message u nsupported top level namespace tag irgendwas soap body one http secure linkpt net fdggwsapi schemas us fdggwsapi fdggwsapiactionre quest http secure linkpt net fdggwsapi schemas us fdggwsapi fdggwsapiorder request allowed de tail explanation first tag web service api message contained soap body must either fdggwsapiactionrequest fdggws apiorderrequest case tag namespace detail inc luded xml valid fdggws api message unsupported top level namespace tag http secure linkpt net fdggwsapi schemas us fdggwsapi fdggwsapiorderre quest soap body one http secure linkpt net fdggwsapi schemas us fdggwsapi fdggwsapiactionre quest http secure linkpt net fdggwsapi schemas us fdggwsapi fdggwsapiorderreq uest allow ed detail explanation first tag including web service api message contained soap body must either fdggwsapiactionrequest fdggws apiorderrequest case name space wrong detail cvc pattern valid value '1 234' facet valid respect pattern \\( 1 9 \\( 0 9 0 12 \\) \\) \\? 0 9 \\( 0 9 1 2 \\) \\? type anontype chargetotalamount' cvc type 3 1 3 value '1 234' element 'ns3 chargetotal' valid detail explanation value tag correspond declaration xsd value three decimal places xsd allows two detail cvc co mplex type 2 4 invalid content found starting element 'ns2 expyear' one http secure link pt net fdggwsapi schemas us v1 expmonth expected detail explanation tags must include order declared xsd case tag expmonth expected expyear fdggwsapi fdggwsapiorderresponse xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi fdggwsapi commercialserviceprovider fdggwsapi transactiontime tue nov 03 13 34 02 2009 fdggwsapi transactiontime fdggwsapi transactionid fdggwsapi processorreferencenumber fdggwsapi processorresponsemessage fdggwsapi errormessage sgs 005002 merchant setup support requested service fdggwsapi errormessage fdggwsapi orderid bf98ecb3 c3f7 44e2 97cf 5c965ca84f93 fdggwsapi orderid fdggwsapi approvalcode fdggwsapi avsresponse fdggwsapi tdate fdggwsapi transactionresult declined fdggwsapi transactionresult fdggwsapi processorresponsecode fdggwsapi processorapprovalcode fdggwsapi calculatedtax fdggwsapi calculatedshipping fdggwsapi transactionscore fdggwsapi authenticationresponsecode fdggwsapi fdggwsapiorderresponse explanation th e type transaction submitted allowed merchant receive result transaction type included agreement please contact technical support team fdggwsapi fdggwsapiorderresponse xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi fdggwsapi commercialserviceprovider fdggwsapi transactiontime tue nov 03 17 10 51 2009 fdggwsapi transactiontime fdggwsapi transactionid fdggwsapi processorreferencenumber fdggwsapi processorresponsemessage fdggwsapi errormessage sgs 005005 duplicate transaction fdggwsapi errormessage fdggwsapi orderid e981664e 546f 4db9 895b 6633ee163f69 fdggwsapi orderid fdggwsapi approvalcode fdggwsapi avsresponse fdggwsapi tdate fdggwsapi transactionresult fraud fdggwsapi transactionresult fdggwsapi processorresponsecode fdggwsapi process orapprovalcode fdggwsapi calculatedtax fdggwsapi calculatedshipping fdggwsapi transactionscore fdggwsapi authenticationresponsecode fdggwsapi fdggwsapiorderresponse explanation transaction duplicate transaction transactions data submitted within configurable amount time rejected duplicate transactions fdggwsapi fdggwsapiorderresponse xmlns fdggwsapi http secure linkpt net fd ggwsapi schemas us fdggwsapi fdggwsapi commercialserviceprovider fdggwsapi transactiontime tue nov 03 14 07 13 2009 fdggwsapi transactiontime fdggwsapi transactionid fdggwsapi processorref erencenumber fdggwsapi processorresponsemessage fdggwsapi errormessage sgs 002311 internal error fdggwsapi errormessage fdggwsapi orderid 8a07eaad 26d7 4233 b13a 8a102287f6c8 fdggwsapi orderid fdggwsapi approvalcode fdggwsapi avsresponse fdggwsapi tdate 1257286033 fdggwsapi tdate fdggwsapi transactionresult declined fdggwsapi transactionresult fdggwsapi processorresponsecode fdggwsapi processorapprovalcode fdggwsapi calculatedtax fdggwsapi calc ulatedshipping fdggwsapi transactionscore fdggwsapi authenticationresponsecode fdggwsapi fdggwsapiorderresponse explanation soap request xml might incorrect check correct namespaces tags fdggwsapi fdggwsapiorderresponse xmlns fdggwsapi http secure linkpt net fdggwsapi schemas us fdggwsapi fdggwsapi commercialservicep rovider fdggwsapi transactiontime tue nov 03 17 10 51 2009 fdggwsapi transactiontime fdggwsapi transactionid fdggwsapi processorreferencenumber fdggwsapi processorresponsemessage fdggwsapi errormessage sgs 005999 unknown error database fdggwsapi errormessage fdggwsapi orderid e981664e 546f 4db9 895b 6633ee163f69 fdggwsapi orderid fdggwsapi approvalcode fdggwsapi avsresponse fdggwsapi tdate fdggwsapi transactionresult declined f dggwsapi transactionresult fdggwsapi processorresponsecode fdggwsapi processorapprovalcode fdggwsapi calculatedtax fdggwsapi calculatedshipping fdggwsapi transactionscore fdggwsapi authenticationresponsecode fdggwsapi fdggwsapior derresponse explanation may tried void credit card transaction different payment type 20 2 curl login error messages unable set priv ate key file 'c api config ws120666668 1 key' type pem closing connection 0 curl \\( 58 \\) unable set private key file 'c api config ws120666668 1 key type pem explanation k eystore password match ensure used right keystore password check used ws toreid 1 pem file append cer file name open certificate double click certificate must exposed store r emove extension cer check html head title apache tomcat 5 5 20 error report title style style head body h1 http status 401 h1 hr size 1 noshade noshade p b type b status report p p b message b u u p p b description b u request requires http authentication \\( \\) u p hr size 1 noshade noshade h3 apache tomcat 5 5 20 h3 body html explanation user id password incorrect first data global gateway web service api accepted certificates 20 3 java client login e rror essage java io ioexception keystore tampered password incorrect explanation keystore password es match check password keytool jdk password case sensitive run following command keytool list v keystore absolute path ws store id 1 ks keystore storepass keystore password javax net ssl sslhandshakeexception sun security validator validatorexception trusted certificate found check cacerts file available java home jre lib security folder 21 following instructions assume running asp microsoft iis 5 1 windows xp install client certificate follow steps 1 select run fro start menu enter mmc run dialog click ok 2 file menu select add remove snap 3 click add 4 snap select certificates click add 5 elect account want manage certificates since iis uses computer account choose computer account click next 6 choose local computer click finish 7 click close ok 8 expand certificates \\( local computer \\) tree client certificate installed personal folder 9 r ight click certificates folder select tasks click import h e certificate import wizard displays 10 click next 11 choose client certificate p12 file click next 12 enter client certificate installation password click next 13 select place certificates following store browse personal folder yet displayed click next 14 check displayed settings click finish client certificate installed store iis \\( running asp \\) find client certificate communicating another server via http next g rant iis user access client certificate private key first download winhttpcertcfg tool microsoft use following url http www microsoft com downloads details aspx \\? familyid c42e27ac 3409 40e9 8667 c748e422833f displaylang en g rant access iis user using command line navigate directory installed winhttpcertcfg enter th e following command winhttpcertcfg g c local machine ws101 1 iwam mymachine ws101 1 name client certificate replace value name client certificate name format ws store id 1 verify value install client certificate using instructions iwam mymachine iis user name iis 5 1 uses iwam machinename default replace machinename name machine example f machine name iisservermachine iis user called iwam iisservermachine ther iis versions might use different naming scheme know machine name iis user name check iis documentation contact administrator 22 account number account number checking savings account unique number identifies customer 's account account number appears check next transit routing number numbers usually separated non alphabetic non numeric symbol ach ach abbreviation automated clearing house automated clearing house \\( ach \\) name electronic network financial transactions united states ach processes large volumes credit debit transactions originated batches ach allows merchants accept payments customer 's checking savings account acquiring bank acquiring bank bank provides service business customers allowing accept card payments goods services address verification system address verification system \\( avs \\) system check billing address credit card provided user address file credit card company g ateway provides avs code approved transaction result tells well two addresses match match lower probability fraud discrepancy either address zip code probability fraud higher merchants use avs codes help protect chargebacks fraud antivirus software antivirus software consists computer programs attempt identify deter eliminate computer viruses malicious software antivirus software typically uses two different techniques accomplish examining \\( scanning \\) files look known viruses matching definitions virus dictionary identifying suspicious behavior computer program might indicate infection analysis may include data captures port monitoring methods risk computer viruses harm computer files antivirus software recommended internet users application programming interfa ce \\( api \\) first data global gateway api tool allows merchant create customer commerce solution pplication p rogramming nterface \\( api \\) allows add payment functionality custom built web sites online applications authorization performing authorization reserves funds customer 's credit card authorization charge card perform ticket transaction confirm shipment order period funds reserved may b e little three days long several months authorize \\( preauth \\) authorize transaction reserves funds customer 's credit card authorize transaction charge card perform ticket transact ion confirm shipment order using option available reports section authorize transactions reserve funds varying periods depending issuing credit card company 's policy period may little three days long several months protection confirm shipment soon possible authorization batch group credit card check transactions submitted together payment gateway settlement payment gateway batches submitted automatically day blocking limiting suspect certain transactions might fraudulent block purchases blocking credit card numbers persons' names domain names ip addresses clas c addresses purchasing store limit amount customer spend store setting maximum purchase amount set long automatic lockouts duplicate lockouts continue blocked browser sho rt web browser browser software application enables user display interact text images videos music information typically located web page web site internet cable modem cable modem type modem provides access internet cable television infrastructure cable modems primarily used deliver broadband internet access taking advantage unused bandwidth cable television network cable network hared many internet subscribers internet access speed may go card code card code card security code sometimes called card verification value code \\( cvv cvc \\) security feature credit debit card transaction giving increased protection credit card fraud code \\( also known ccid credit card id \\) often asked merchants secure transactions card present usually occurring internet mail fax phone payment gateway compare card code code file card issuing bank results comparison show transaction approval code u sing card code results conjunction address verification service \\( avs \\) make better informed decisions whether accept transactions mastercard visa discover credit debit cards three digit code called cvc2 \\( card validation code \\) cvv2 \\( card verification value \\) cid \\( card identification number \\) respectively always final group numbers printed back signature panel card new north american mastercard visa cards feature card code separate panel right signature strip merican express cards four digit code printed front side card number referred cid card issuing bank financial institution bank issues credit debit purchasing card business individual card issuing bank address file card address verification system \\( avs \\) compares address given merchant chargeback chargeback forced refund customer bank account chargebacks occur type business whether online actual store location fraudulent credit card transaction typically results chargeback credit card associations penalize merchant banks chargebacks naturally bank passes fines responsible merchant penalties severe consumers provided certain degree protection credit card numbers stolen misused internet merchants fully liable transactions internet transactions classified card present check number check number number unique check check number always found top right corner check check number provided reference process ach transaction commerce service provider \\( csp \\) commerce service provider \\( csp \\) supplies businesses tools services need buy sell products services internet manage online enterprises csps generally host secure web site could connected secure payment gateway selling products services internet credit r number transaction intended returns orders processed outside system credit transactions marked returns reports credit card credit card card \\( usually plastic \\) assures seller person using satisfactory credit rating issuer see seller receives payment merchandise delivered cvc2 cvc2 card validation code card code mastercard see definition card codes inf ormation cvv2 cvc2 card verification value card code visa cards see definition card codes information data field data field area web form software application enter information relevant name field example would enter zip code data field named zip code dda number dda \\( demand deposit account \\) number deposit account held bank financial institution purpose securely quickly providing frequent access funds demand dial connection dial connection way access internet telephone line modem connected computer telephone line dial internet service provider 's \\( isp \\) node establish modem modem link routed internet speed dial connections usually slower internet access options digital certificate digital certificate electronic certificate estab lishes merchant 's credentials performing business internet encrypted set information issued internet certification authority thawte digital certificates required merchants choose use api products merchant need digital certificate domain name name identifies computer computers internet names appear component web site 's url microsoft com type domain name also called hostname dsl dsl \\( digital subscriber line \\) technology bringing fast internet service homes small businesses wires local telephone network e commerce \\( eci \\) e commerce \\( eci \\) electronic commerce consists buying selling products services electronic systems internet computer networks electronic check acceptance \\( eca \\) electronic check acceptance \\( eca \\) check electronically submitted check check longer usable paper check must voided customer signs receives paper receipt eca services may include check guarantee service eca used retail payments field field area web form software applicat ion enter information relevant name field example would enter zip code field named zip code firewall firewall hardware software device configured permit deny proxy data computer network different levels trust firewall protects resources private network users networks first data global gateway connect first data global gateway connect service e commerce solution using hosted payment page eliminates complexity great merchant limited resources expertise forced ticket forced ticket transaction credit card transaction authorizations obtained phone quires reference number \\( approval code \\) received made phone authorization hierarchy term used describe organizational tree structure multi store reports merchants describe organization defin ing org chart form tree structure structure used combining store reports groups different levels term hierarchy refers entire organizational tree structure containing levels elements html html short hypertext markup language html markup language used structure text multimedia documents set hypertext links documents used extensively internet manually entering transactions using virtual pos te rminal html simplest way send payment transactions payment gateway http http \\( hypertext transfer protocol \\) communications protocol used transfer convey information internet example enter url b rowser sends http command web server directing receive transmit requested web page hyperlink hyperlink reference navigation element document web page linking another section document web page another document web page may different web site internet check acceptance \\( ica \\) internet check acceptance \\( ica \\) type check service provided payment gateway ica uses automated clearing house \\( ach \\) tran account information entered online payment form check used customer may may sign payment form either case merchant needs documented record customer 's authori zation transfer funds account ica includes electronic receipt check guarantee service ica ica typically used mail orders telephone orders \\( mo \\) e commerce transactions may also used retail int ernet service provider \\( isp \\) internet service provider \\( isp \\) business organization provides consumers businesses access internet related services isp also host web site ip address ip address short internet protocol address ip address number used identify specific computer network internet format ip address written four numbers separated periods number zero \\( 0 \\) 255 example 1 160 10 240 could ip address issuing bank financial institution bank issues credit debit purchasing card business consumer issuing bank address file card address verification system \\( vs \\) compares address given merchant level level single tier hierarchy organizational tree structure multi store users top level \\( 1 \\) typically root \\( corporate \\) level containin g one \\( 1 \\) element l owest level tree always user level next level lowest store level merchants define number levels names level organization 10 total levels local area network \\( lan \\) local area network \\( lan \\) computer network covering small geographic area like home office group buildings defining characteristics lans contrast wide area networks \\( wans \\) include much higher data transfer rates smaller geogra phic range lack need leased telecommunication lines log log process individual access computer system controlled identification user order obtain credentials permit access integral part computer security user log system obtain acc ess log access longer needed log log \\( aka log sign sign \\) close one 's access computer system previously logged log system click logout link top right corner application prevent unauthorized users accessing account merchants always log close browser window finished using system multi store multi stores multiple accounts different store numbers network network group two computer systems linked together orderid number assigned transaction manually enter number field assign proprietary number transaction ord erid numbers unique enter number field fdgg virtual terminal automatically generates orderid number first data global gateway web service api accepts ascii characters orderid field cannot contain f ollowing characters exceed 100 characters length password password form secret authentication data used control access resource recommend users change password frequently share anyone prevent unauthorized access accounts payment gateway payment gateway e commerce application service authorizes payments e businesses online retailers equivalent physical pos \\( point sale \\) erminal located retail outlets payment gateways encrypt sensitive information credit card numbers ensure information passes securely customer merchant pdf file pdf short portable document format file format created adobe systems 1993 document exchange pdf used representing two dimensional documents device independent display resolution independent fixed layout document format internet users need adobe acrob viewer open pdf file downloaded free http www adobe com periodic billing \\( recurring billing \\) periodic billing recurring payments capability charge customers recurring basis according merchant defined rules gateway products allow merchant charge customer 's card exchange products services one times every day week month year plug plug hardware software module adds specific feature service larger system example number plug ins mozilla firefox browser enable display different types audio video files point sale \\( pos \\) point sale \\( pos \\) purchasing product merchant merchant processing payment transaction pos commonly used refer payment terminals software merchants use process payment transaction protocol protocol set guidelines rules help governing operation internet communications several different protocols http protocol used internet purchasing card purchasing card corporate card used companies business purchases customer pays goods serv ices using purchasing card following information must included order information information optional regular credit card transaction indication whether order tax exempt amount tax applied der order tax exempt tax amount zero purchase order number associated order one purchase order apply several individual orders allow delivery goods time purchase order asso ciated order customer must supply value order recurring payment \\( periodic billing \\) capability charge customers recurring basis according merchant defined rules gateway products allow merchant charge cust omer 's card exchange products services one times every day week month year return system perform return need order number \\( find reports \\) perform return full order amount order appear reports transaction amount 0 00 sale sale transaction immediately charges customer 's credit card batch tr ansactions closed secure shell \\( ssh \\) secure shell \\( ssh \\) network protocol allows data exchanged secure channel two computers secure sockets layer \\( ssl \\) secure sockets layer \\( ssl \\) cryptographic protocols provide secure communications internet transmitting credit card data data transfers settlement settlement completion payment transaction transaction settled funded monies deposited mer chant account store name store name \\( also called storename store number \\) six ten digit number needed identify merchant store name given merchant welcome e mail merchants need store name user id pas sword access virtual pos terminal well reports admin customization functions store name also needed using api products ticket \\( postauth \\) ticket transaction post authorization transaction tha captures funds authorize transaction funds transferred batch transactions settled enter larger total ticket transaction specified authorize transaction ticket tran saction may blocked enter smaller amount authorized adjustment made authorization reserve smaller amount transit routing number transit routing number nine digit bank code used united states appears bottom checks code used automated clearing house process direct deposits automated transfers url url short uniform resource locator u rl address documents pages internet first part address indicates protocol use second part specifies ip address domain name resource located user id accounts multip le users individual user assigned user id user need user id along store name password log system virtual virtual often used internet denote web based program functions simila rly physical device system example virtual point sale terminal computer program performs functions physical point sale terminal void void transaction cancel payment transaction merchants v oid transactions prior settlement transaction settled merchant perform return credit reverse charges credit customer 's card wan wan wide area computer network spans relatively large geographical area typically wan consists two local area networks \\( lans \\) computers connected wide area network often connected public networks telephone system also connected leased lines satellites web server web server computer program responsible accepting http requests clients serving http responses along optional data contents responses usually web pages html documents linked object \\( images etc \\) xml xml extensible markup language universal format representation documents data classified extensible language allows users define tags primary purpose facilitate sharing structured data across different information systems particularly internet 20 10 first data corp rights reserved", 
    "descr2": "internet payment gateway integration guide first data api version 1 5 \\( emea \\) firstdata com 2 first data internet payment gateway integration guide first data api version 1 5 \\( emea \\) contents 1 introduction 4 2 artefacts need 5 3 api works 5 4 sending transactions gateway 7 5 building transactions xml 9 5 1 credit card transactions 9 5 1 1 sale 9 5 1 2 preauth 10 5 1 3 postauth 10 5 1 4 forceticket 11 5 1 5 return 11 5 1 6 credit 12 5 1 7 void 12 5 2 uk debit 12 5 2 1 sale 13 5 2 2 return 13 5 2 3 credit 14 5 2 4 void 14 5 3 german direct debit 15 5 3 1 sale 15 5 3 2 void 15 6 additional web service actions 16 6 1 initiate clearing 16 6 2 inquiry order 16 6 3 recurring payments 18 7 data vault 20 8 xml tag overview 23 8 1 overview transaction type 23 8 2 description xml tags 25 8 2 1 creditcardtxtype 25 8 2 2 creditcarddata 25 8 2 3 creditcard3dsecure 26 8 2 4 de directdebittxtype 26 8 2 5 de directdebitdata 26 8 2 6 payment 27 8 2 7 transactiondetails 27 8 2 8 billing 27 8 2 9 shipping 28 9 building soap request message 29 10 reading soap response message 30 10 1 soap response message 30 10 2 soap fault message 31 10 2 1 soap env server 32 firstdata com 3 10 2 2 soap env client 32 11 analysing transaction result 34 11 1 transaction approval 34 11 2 transaction failure 36 12 building https post request 37 12 1 php 38 12 1 1 using curl php extension 38 12 1 2 using curl command line tool 39 12 2 asp 40 13 establishing ssl connection 40 13 1 php 41 13 1 1 using php curl extension 41 13 1 2 using curl command line tool 41 13 2 asp 42 14 sending https post request receiving sponse 43 14 1 php 44 14 1 1 using php curl extension 44 14 1 2 using curl command line tool 44 14 2 asp 45 15 using java client connect web service 4 5 15 1 instance ipgapiclient 46 15 2 construct transaction handle respo nse 46 15 3 construct action 47 15 4 connect behind proxy 47 appendix 48 ipgapi xsd 48 v1 xsd 50 a1 xsd 60 troubleshooting merchant exceptions 64 troubleshooting processing exceptions 68 troubleshooting login error messages using c url 72 troubleshooting login error messages using java client 74 getting support different manuals available first data internet payment gateway integration guide first data api h elpful integration issues information settings customisation repo rts process transactions manually \\( keying information \\) please refe r first data virtual terminal user guide read documentation cannot find answer question please contact local support team firstdata com 4 1 introduction first data api application programming terface allows connect application first data internet payment ga teway way application able submit credit card transactions without user interference please note store process cardholder data within application must ensure system components complia nt data security standard payment card industry \\( pci dss \\) depending transaction volume assessment qualified security assessor may mandatory declare compliance status technical point view first data api web service offering one remote operation performing transactions three co advantages design summarized follows platform independence communicating first data api web service means application must capable sending receiving soap messages requirements tied speci fic platform since web service technology builds set open standard short free choose technology want \\( e g j2ee net php asp etc \\) making application capable communicating first data api web service easy integration communicating web service simple application build soap request message encoding ransaction send via https web service wait soap response mes sage contains transaction status report since soap http ar e designed lightweight protocols building requests responses becomes straightforward task furthermore rarely manually ince plenty libraries available almost every technology general b uilding soap request handling response reduced lines code security communication application fir st data api ssl encrypted established application holding client certificate identifies uniquely web service ame way first data api holds server certificate application may check making sure speaks api web service finally application basic authorization \\( user name password \\) allowed communicat e web service way users authorized communicate wi th first data api identified two security mechanisms guarantee tr ansaction data sent first data api stays private identified transac tion data application committed belongs one else represents short summary first data api features focus guide lies integrating first data api functi onality application detailed description explaining done step st ep presented guide first chapter describes supported transaction typ es firstdata com 5 2 artefacts need supporting high degree security requires sever al artefacts need communicating securely first data api since artefacts referenced throughout remainder guide following checklist shall provid e overview enabling make sure received whole set registering yo ur application first data internet payment gateway store id store id \\( e g 101 \\) required basic authorization user id user id denoting user allowed ac cess first data api e g 007 required basic authorizati password password required basic authorization client certificate p12 file client certificate stored p12 file naming scheme ws storeid userid p12 e g case store id user id examples would ws101 007 p12 file used authenticating client internet payment g ateway connecting java need ks file e g ws101 007 ks client certificate installation password password required installing p12 client certificate file client certificate private key private key client certificate stored n key file naming scheme ws storeid userid key e g case store id user id examples would b e ws101 007 key tools support setting app lication using first data api require password clien authentication internet payment gateway client certificate private key password password protects private key client certificate tools sup port setting application using first data api require p assword client authentication internet payment gatew ay follows naming scheme ckp creationtimestamp instance might ckp 1193927132 client certificate pem file client certificate stored pem file naming scheme ws storeid userid pem e g case store id user id examples would ws101 007 pem tools support setting application usin g internet payment gateway require file instead p12 file escribed server certificate pem file server certificate stored pem file geotrust pem required authenticating server ru nning first data api connecting java need tru ststore ks file 3 api works following section describes api means credit card transaction process payment types similar firstdata com 6 cases customer starts overall communication process buying goods services credit card online store following store sends credit card transaction \\( mostly order capture cu stomer funds \\) via first data api received transaction first data internet p ayment gateway forwards credit card processor authorisation based resu lt approval error returned online store means communication processing details covered first data api interface know communicate web service web service standard defines interface using web service definition language \\( wsdl \\) case first data api wsdl file defining web service found https test ipg online com ipgapi services order w sdl note supply client certi ficate credentials server certificate viewing requesting file e g web browser instance case want view wsdl file microsoft inter net explorer running microsoft windows xp first install client c ertificate server certificate call url done executing f ollowing steps 1 open folder saved cli ent certificate p12 file 2 double click client certificate p12 file 3 click next check file name \\( already set path client certificate p12 file \\) click next 4 provide client certificate installation pass word click next 5 choose option automatically select certificate store based type certificate click next place certificate personal certificate store \\( precisely local windows user p ersonal certificate store \\) 6 check displayed settings click finish client certificate installed 7 install server certificate straightforward way open folder saved server certificate pem file rename file geotrust crt 8 double click renamed server certificat e file 9 click install certificate starts wizard 10 click next select place certificates following store browse trusted root certification authorities folder click next 11 check displayed settings click finish \\( might confirm installation \\) server certificate instal led local computer trusted certificates store microsoft internet explor er lookup server certificate verifying first data api server certificate received calling wsdl url 12 open microsoft internet explorer window provide url address field 13 requesting url server ask browser supply client certificate making sure talking yo ur application correctly since installed certificate previous step transferred server firstdata com 7 without prompting input \\( e notice process \\) first data api sends server certificate \\( identifying uniquely \\) certificate verified trusted one installed done automatically without prompting input secure connection established data transferred pplication first data api web service ssl encrypted 14 next prompted supply crede ntials authorisation user name provide store id user id encod ed format ws storeid userid instance assuming store id 101 user id 007 password mypw supply ws101 007 user name field mypw password field note credentials encrypted passed server due ssl connectio n established steps click ok 15 first data api wsdl file displayed short wsdl file defines operations offe red web service input return parameters operations invoked case first data api web service defines one operation \\( ipgapiorder \\) callable sending soap http request following url https test ipg online com ipgapi services operation takes xml encoded transaction input returns xml encoded response note necessary understa nd wsdl file composed using first data api following chapters g uide setting store building performing custom credit card transact ions however case using third party tools su pporting setting store accessing first data api might supply url wsdl file found similar way described hav e tell web service tool communication ssl enabled requiring prov ide client certificate accept server certificate trusted one furthermore ou supply credentials done heavily depends web service tool h ence check tool documentation details 4 sending transactions gateway purpose chapter give basic understanding steps taken committing transactions first data inte rnet payment gateway describes happens customer pays credit card online store using first data api committing transactions customer clicks pay button online store online store displays form asking custom er provide credit card number expiry month year customer types three fields submi ts data online store \\( e purchases goods \\) online store receives data builds x ml document encoding sale transaction includes data provided customer total amount paid customer firstdata com 8 building xml sale transaction online store wraps soap essage describes web service operation cal led transaction xml passed parameter built soap message online store pr epares transferred internet packing content ht tps post request furthermore store sets http headers especially cre dentials \\( note credentials ones provide vi ewing wsdl file \\) store establishes ssl connection pr oviding client server certificate online store sends https request first data api web service waits http response first data api receives https request pars es authorization information provided store http heade rs authorized store use first data api soap message contained http request body parsed triggers web service operation handling transaction processing run first data api performs transaction proce ssing builds xml response document wraps soap message sends thi soap message back client body https response receiving https response wakes store w hich reads soap message response xml document part depending data contained xml respons e document approval page sent back customer case successful ransaction otherwise error page returned approval error page displayed example describes case sale transaction transactions basically follow process summarising scenario application p erform following steps order commit credit card transactions analyze res ult build xml document encoding transactions wrap xml document soap request message build https post request information dentifying store provided http header soap request message body establish ssl connection applicati first data api send https post request first data inte rnet payment gateway receive response read soap response message https sponse body analyse xml response document contained soap response message seven steps described following ch apters guide process setting application performi ng custom credit card transactions firstdata com 9 5 building transactions xml chapter describes different transactio n types built xml example scenario outlined transaction fir st encoded xml document wrapped payload soap message mea ns xml encoded transaction represents parameter passed first data pi web service operation note exists variety web service ls supporting generation client stubs might free necessity deal raw xml however basic understanding xml format crucial order build correct transactions regardless available tool support hence recommende become familiar xml format used first data api encoding transactions 5 1 credit card transactions regardless transaction type basic xml ocument structure credit card transaction follows ipgapi ipgapiorderrequest xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 creditcardtxtype v1 creditcardtxtype v1 creditcarddata v1 creditcarddata v1 payment v1 payment v1 transactiondetails v1 transactiondetails v1 billing v1 billing v1 shipping v1 shipping v1 transaction ipgapi ipgapiorderrequest element creditcarddatatxtype mandatory credit card transactions elements depend transaction type transa ction content type specific 5 1 1 sale following xml document represents example sale transaction using minimum set elements ipgapi ipgapiorderrequest xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 creditcardtxtype v1 type sale v1 type v1 creditcardtxtype v1 creditcarddata v1 cardnumber 4111111111111111 v1 cardnumber v1 expmonth 12 v1 expmonth v1 expyear 07 v1 expyear v1 creditcarddata v1 payment v1 chargetotal 19 95 v1 chargetotal v1 currency 978 v1 currency v1 payment v1 transaction firstdata com 10 ipgapi ipgapiorderrequest see chapter xml tag overview detailed description elements used example well optional elements 5 1 2 preauth following xml document represents example preauth transaction using minimum set elements ipgapi ipgapiorderrequest xmlns v1 ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 creditcardtxtype v1 type preauth v1 type v1 creditcardtxtype v1 creditcarddata v1 cardnumber 4111111111111111 v1 cardnumber v1 expmonth 12 v1 expmonth v1 expyear 07 v1 expyear v1 creditcarddata v1 payment v1 chargetotal 100 00 v1 chargetotal v1 currency 978 v1 currency v1 payment v1 transaction ipgapi ipgapiorderrequest see chapter xml tag overview detailed description elements used example well optional elements 5 1 3 postauth following xml document represents example postauth transaction using minimum set elements ipgapi ipgapiorderrequest xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 creditcardtxtype v1 type postauth v1 type v1 creditcardtxtype v1 payment v1 chargetotal 59 45 v1 chargetotal v1 currency 978 v1 currency v1 payment v1 transactiondetails v1 orderid 703d2723 99b6 4559 8c6d 797488e8977 v1 orderid v1 transactiondetails v1 transaction ipgapi ipgapiorderrequest see chapter xml tag overview detailed description elements used example well optional elements firstdata com 11 5 1 4 forceticket following xml document represents example forceticket transaction using minimum set elements ipgapi ipgapiorderrequest xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 creditcardtxtype v1 type forceticket v1 type v1 creditcardtxtype v1 creditcarddata v1 cardnumber 4111111111111111 v1 cardnumber v1 expmonth 12 v1 expmonth v1 expyear 07 v1 expyear v1 creditcarddata v1 payment v1 chargetotal 59 45 v1 chargetotal v1 currency 978 v1 currency v1 payment v1 transactiondetails v1 referencenumber 123456 v1 referencenumber v1 transactiondetails v1 transaction ipgapi ipgapiorderrequest see chapter xml tag overview detailed description elements used example well optional elements 5 1 5 return following xml document represents example return transaction using minimum set elements ipgapi ipgapiorderrequest xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 creditcardtxtype v1 type return v1 type v1 creditcardtxtype v1 payment v1 chargetotal 19 95 v1 chargetotal v1 currency 978 v1 currency v1 payment v1 transactiondetails v1 orderid 62e3b5df 2911 4e89 8356 1e49302b1807 v1 orderid v1 transactiondetails v1 transaction ipgapi ipgapiorderrequest see chapter xml tag overview detailed description elements used example well optional elements firstdata com 12 5 1 6 credit following xml document represents example credit transaction using minimum set elements ipgapi ipgapiorderrequest xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 creditcardtxtype v1 type credit v1 type v1 creditcardtxtype v1 creditcarddata v1 cardnumber 4111111111111111 v1 cardnumber v1 expmonth 12 v1 expmonth v1 expyear 07 v1 expyear v1 creditcarddata v1 payment v1 chargetotal 50 00 v1 chargetotal v1 currency 978 v1 currency v1 payment v1 transaction ipgapi ipgapiorderrequest see chapter xml tag overview detailed description elements used example well optional elements 5 1 7 void following xml document represents example void transaction using minimum set elements ipgapi ipgapiorderrequest xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 creditcardtxtype v1 type void v1 type v1 creditcardtxtype v1 transactiondetails v1 orderid 62e3b5df 2911 4e89 8356 1e49302b1807 v1 orderid v1 tdate 1190244932 v1 tdate v1 transactiondetails v1 transaction ipgapi ipgapiorderrequest see chapter xml tag overview detailed description elements used example well optional elements 5 2 uk debit regardless transaction type basic xml ocument structure uk debit transaction follows ipgapi ipgapiorderrequest firstdata com 13 xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 uk debitcardtxtype v1 uk debitcardtxtype v1 uk debitcarddata v1 uk debitcarddata v1 payment v1 payment v1 transactiondetails v1 transactiondetails v1 billing v1 billing v1 shipping v1 shipping v1 transaction ipgapi ipgapiorderrequest element uk debitcardtxtype mandatory debit card transactions elements depend transaction type transa ction content type specific 5 2 1 sale following xml document represents example sale transaction using minimum set elements ipgapi ipgapiorderrequest xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 uk debitcardtxtype v1 type sale v1 type v1 uk debitcardtxtype v1 uk debitcarddata v1 cardnumber 6799660000000000013 v1 cardnumber v1 expmonth 12 v1 expmonth v1 expyear 07 v1 expyear v1 uk debitcarddata v1 payment v1 chargetotal 19 95 v1 chargetotal v1 currency 978 v1 currency v1 payment v1 transaction ipgapi ipgapiorderrequest see chapter xml tag overview detailed description elements used example well optional elements 5 2 2 return following xml document represents example return transaction using minimum set elements ipgapi ipgapiorderrequest xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 uk debitcardtxtype v1 type return v1 type v1 uk debitcardtxtype v1 payment v1 chargetotal 19 95 v1 chargetotal v1 currency 978 v1 currency v1 payment v1 transactiondetails firstdata com 14 v1 orderid 62e3b5df 2911 4e89 8356 1e49302b1807 v1 orderid v1 transactiondetails v1 transaction ipgapi ipgapiorderrequest see chapter xml tag overview detailed description elements used example well optional elements 5 2 3 credit following xml document represents example credit transaction using minimum set elements ipgapi ipgapiorderrequest xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 uk debitcardtxtype v1 type credit v1 type v1 uk debitcardtxtype v1 uk debitcarddata v1 cardnumber 6799660000000000013 v1 cardnumber v1 expmonth 12 v1 expmonth v1 expyear 07 v1 expyear v1 uk debitcarddata v1 payment v1 chargetotal 50 00 v1 chargetotal v1 currency 978 v1 currency v1 payment v1 transaction ipgapi ipgapiorderrequest see chapter xml tag overview detailed description elements used example well optional elements 5 2 4 void following xml document represents example void transaction using minimum set elements ipgapi ipgapiorderrequest xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 uk debitcardtxtype v1 type void v1 type v1 uk debitcardtxtype v1 transactiondetails v1 orderid 62e3b5df 2911 4e89 8356 1e49302b1807 v1 orderid v1 tdate 1190244932 v1 tdate v1 transactiondetails v1 transaction ipgapi ipgapiorderrequest firstdata com 15 see chapter xml tag overview detailed description elements used example well optional elements 5 3 german direct debit regardless transaction type basic xml ocument structure german direct debit transaction follows ipgapi ipgapiorderrequest xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 de directdebittxtype v1 de directdebittxtype v1 de directdebitdata v1 de directdebitdata v1 payment v1 payment v1 transactiondetails v1 transactiondetails v1 billing v1 billing v1 shipping v1 shipping v1 transaction ipgapi ipgapiorderrequest element de directdebittxtype mandatory debit transactions elements depend transaction type transa ction content type specific 5 3 1 sale following xml document represents example sale transaction using minimum set elements ipgapi ipgapiorderrequest xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 de directdebittxtype v1 type sale v1 type v1 de directdebittxtype v1 de directdebitdata v1 bankcode 50010060 v1 bankcode v1 accountnumber 32121604 v1 accountnumber v1 de directdebitdata v1 payment v1 chargetotal 19 00 v1 chargetotal v1 currency 978 v1 currency v1 payment v1 transaction ipgapi ipgapiorderrequest see chapter xml tag overview detailed description elements used example well optional elements 5 3 2 void following xml document represents example void transaction using minimum set elements ipgapi ipgapiorderrequest firstdata com 16 xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 de directdebittxtype v1 type void v1 type v1 de directdebittxtype v1 transactiondetails v1 orderid 62e3b5df 2911 4e89 8356 1e49302b1807 v1 orderid v1 tdate 1190244932 v1 tdate v1 transactiondetails v1 transaction ipgapi ipgapiorderrequest see chapter xml tag overview detailed description elements used example well optional elements 6 additional web service actions 6 1 initiate clearing clearing german direct debit transactions b e initiated via web service similar payment transaction ipgapi ipgapiactionrequest xmlns a1 http ipg online com ipgapi schemas a1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi a1 action a1 initiateclearing a1 action ipgapi ipgapiactionrequest 6 2 inquiry order action inquiryorder allows get details previously process ed transactions specific order therefore need submit corresponding order id ns4 ipgapiactionrequest xmlns ns4 http ipg online com ipgapi schemas ipgapi xmlns ns2 http ipg online com ipgapi schemas a1 xmlns ns3 http ipg online com ipgapi schemas v1 ns2 action ns2 inquiryorder ns2 orderid b5b7fb49 3310 4212 9103 5da8bd026600 ns2 orderid ns2 inquiryorder ns2 action ns4 ipgapiactionrequest result contains information transacti ons belonging corresponding order id ns4 ipgapiactionresponse firstdata com 17 xmlns ns4 http ipg online com ipgapi schemas ipgapi xmlns ns2 http ipg online com ipgapi schemas a1 xmlns ns3 http ipg online com ipgapi schemas v1 ns4 successfully true ns4 successfully ns2 error ns2 transactionvalues ns3 creditcardtxtype ns3 type sale ns3 type ns3 creditcardtxtype ns3 creditcarddata ns3 cardnumber 5426 4979 ns3 cardnumber ns3 expmonth 12 ns3 expmonth ns3 expyear 2008 ns3 expyear ns3 creditcarddata ns3 payment ns3 chargetotal 1 ns3 chargetotal ns3 currency 978 ns3 currency ns3 payment ns3 transactiondetails ns3 orderid b5b7fb49 3310 4212 9103 5da8bd026600 ns3 orderid ns3 tdate 2008 11 10 08 52 45 0 ns3 tdate ns3 transactionorigin eci ns3 transactionorigin ns3 transactiondetails ns4 ipgapiorderresponse ns4 orderid b5b7fb49 3310 4212 9103 5da8bd026600 ns4 orderid ns4 approvalcode ns4 approvalcode ns4 tdate 2008 11 10 08 52 45 0 ns4 tdate ns4 terminalid 99000002 ns4 terminalid ns4 ipgapiorderresponse ns2 receiptnumber 1865 ns2 receiptnumber ns2 responsecode 0000036686 ppxm 0018841865 ns2 responsecode ns2 tracenumber 001884 ns2 tracenumber ns2 transactionstate voided ns2 transactionstate ns2 transactionvalues ns2 transactionvalues ns3 creditcardtxtype ns3 type credit ns3 type ns3 creditcardtxtype ns3 creditcarddata ns3 cardnumber 5426 4979 ns3 cardnumber ns3 expmonth 12 ns3 expmonth ns3 expyear 2008 ns3 expyear ns3 creditcarddata ns3 payment ns3 chargetotal 1 ns3 chargetotal ns3 currency 978 ns3 currency ns3 payment ns3 transactiondetails ns3 orderid b5b7fb49 3310 4212 9103 5da8bd026600 ns3 orderid ns3 tdate 2008 11 10 08 52 49 0 ns3 tdate ns3 transactionorigin eci ns3 transactionorigin ns3 transactiondetails ns4 ipgapiorderresponse firstdata com 18 ns4 orderid b5b7fb49 3310 4212 9103 5da8bd026600 ns4 orderid ns4 approvalcode ns4 approvalcode ns4 tdate 2008 11 10 08 52 49 0 ns4 tdate ns4 terminalid 99000002 ns4 terminalid ns4 ipgapiorderresponse ns2 receiptnumber 1866 ns2 receiptnumber ns2 responsecode 0000036687 ppxm 0018851866 ns2 responsecode ns2 tracenumber 001885 ns2 tracenumber ns2 transactionstate captured ns2 transactionstate ns2 transactionvalues ns2 transactionvalues ns3 creditcardtxtype ns3 type void ns3 type ns3 creditcardtxtype ns3 creditcarddata ns3 cardnumber 5426 4979 ns3 cardnumber ns3 expmonth 12 ns3 expmonth ns3 expyear 2008 ns3 expyear ns3 creditcarddata ns3 payment ns3 chargetotal 1 ns3 chargetotal ns3 currency 978 ns3 currency ns3 payment ns3 transactiondetails ns3 orderid b5b7fb49 3310 4212 9103 5da8bd026600 ns3 orderid ns3 tdate 2008 11 10 08 52 52 0 ns3 tdate ns3 transactionorigin eci ns3 transactionorigin ns3 transactiondetails ns4 ipgapiorderresponse ns4 orderid b5b7fb49 3310 4212 9103 5da8bd026600 ns4 orderid ns4 approvalcode ns4 approvalcode ns4 tdate 2008 11 10 08 52 52 0 ns4 tdate ns4 terminalid 99000002 ns4 terminalid ns4 ipgapiorderresponse ns2 receiptnumber 1867 ns2 receiptnumber ns2 responsecode 0000036686 ppx 0018861867 ns2 responsecode ns2 tracenumber 001886 ns2 tracenumber ns2 transactionvalues ns4 ipgapiactionresponse 6 3 recurring payments action recurringpayment allows install modify cancel periodic cr edit card payments also allows schedule single payment future following example shows install perio dic payment one execution \\( installmentcount \\) 31 december 2011 ns4 ipgapiactionrequest firstdata com 19 xmlns ns4 http ipg online com ipgapi schemas ipgapi xmlns ns2 http ipg online com ipgapi schemas a1 xmlns ns3 http ipg online com ipgapi schemas v1 ns2 action ns2 recurringpayment ns2 function install ns2 function ns2 recurringpaymentinformation ns2 recurringstartdate 20111231 ns2 recurringstartdate ns2 installmentcount 1 ns2 installmentcount ns2 installmentfrequency 1 ns2 installmentfrequency ns2 installmentperiod month ns2 installmentperiod ns2 recurringpaymentinformation ns2 creditcarddata ns3 cardnumber 4035875676474977 ns3 cardnumber ns3 expmonth 12 ns3 expmonth ns3 expyear 12 ns3 expyear ns3 cardcodevalue 977 ns3 cardcodevalue ns2 creditcarddata ns3 payment ns3 chargetotal 1 ns3 chargetotal ns3 currency 978 ns3 currency ns3 payment ns2 recurringpayment ns2 action ns4 ipgapiactionrequest set recurringstartdate actual date first payment immediat ely initiated start date past allowed modifications existing recurring payment initiated using order id ns4 ipgapiactionrequest xmlns ns4 http ipg online com ipgapi schemas ipgapi xmlns ns2 http ipg online com ipgapi schemas a1 xmlns ns3 http ipg online com ipgapi schemas v1 ns2 action ns2 recurringpayment ns2 function modify ns2 function ns2 orderid e368a525 173f 4f56 9ae2 beb4023a6993 ns2 orderid ns2 recurringpaymentinformation ns2 installmentcount 999 ns2 installmentcount ns2 recurringpaymentinformation ns2 recurringpayment ns2 action ns4 ipgapiactionrequest need include elements need changed change credit card number also required include expiry ate want change amount also need include currency delete recurring payment also use order id firstdata com 20 ns4 ipgapiactionrequest xmlns ns4 http ipg online com ipgapi schemas ipgapi xmlns ns2 http ipg online com ipgapi schemas a1 xmlns ns3 http ipg online com ipgapi schemas v1 ns2 action ns2 recurringpayment ns2 function cancel ns2 function ns2 orderid e368a525 173f 4f56 9ae2 beb4023a6993 ns2 orderid ns2 recurringpayment ns2 action ns4 ipgapiactionrequest response successful instalment modificat ion cancellation contains value true parameter ns4 successfully ns4 ipgapiactionresponse xmlns ns4 http ipg online com ipgapi schemas ipgapi xmlns ns2 http ipg online com ipgapi schemas a1 xmlns ns3 http ipg online com ipgapi schemas v1 ns4 successfully true ns4 successfully ns4 orderid e368a525 173f 4f56 9ae2 beb4023a6993 ns4 orderid ns4 ipgapiactionresponse 7 data vault data vault product store sensitive cardholder data encrypted database first data data centre use subsequent transactions without need store data within systems ordered product api solution offers following functions store update payment information performing transaction additionally send parameter hosteddataid together transaction data unique identification payment information transaction depending payment type credit card number expiry dat e account number bank code stored id cases submitted hosteddataid already exists store stored payment nformation updated ipgapi ipgapiorderrequest xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 creditcardtxtype v1 type sale v1 type v1 creditcardtxtype v1 creditcarddata v1 cardnumber 4111111111111111 v1 cardnumber v1 expmonth 12 v1 expmonth v1 expyear 07 v1 expyear v1 creditcarddata v1 payment v1 hosteddataid hdid customer 1234567 v1 hosteddataid v1 chargetotal 19 00 v1 chargetotal firstdata com 21 v1 currency 978 v1 currency v1 payment v1 transaction ipgapi ipgapiorderrequest record stored authorisatio n payment transaction successful store setup ervice initiate payment transactions using stored data stored cardholder information using data vault product perform transactions using hosteddataid without n eed pass credit card bank account data please note allowed store car code \\( cases back card \\) credit card transactions cardholder still needs enter value checkout process web shop w e recommend also store last four digits credit card number side display comes payment way cardholder see whic h maybe several cards registered shop used payment transaction ipgapi ipgapiorderrequest xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 creditcardtxtype v1 type sale v1 type v1 creditcardtxtype v1 payment v1 hosteddataid hdid customer 1234567 v1 hosteddataid v1 chargetotal 19 00 v1 chargetotal v1 currency 978 v1 currency v1 payment v1 transaction ipgapi ipgapiorderrequest store payment information without performing tran saction time besides possibility store new records p erforming payment transaction store payment information using action r equest way also possible upload multiple records fo llowing example shows upload record credit card data well one w ith account number bank code please note also case existing record updated hosteddataid ns4 ipgapiactionrequest xmlns ns4 http ipg online com ipgapi schemas ipgapi xmlns ns2 http ipg online com ipgapi schemas a1 xmlns ns3 http ipg online com ipgapi schemas v1 ns2 action ns2 storehosteddata ns2 datastorageitem ns2 creditcarddata ns3 cardnumber 4035875676474977 ns3 cardnumber ns3 expmonth 12 ns3 expmonth ns3 expyear 08 ns3 expyear ns2 creditcarddata firstdata com 22 ns2 hosteddataid d763bba7 1cfa 4d3d 94af 9fbe29ec0e26 ns2 hosteddataid ns2 datastorageitem ns2 datastorageitem ns2 de directdebitdata ns3 bankcode 50014560 ns3 bankcode ns3 accountnumber 32121503 ns3 accountnumber ns2 de directdebitdata ns2 hosteddataid 691c7cb3 a752 4d6d abde 83cad63de258 ns2 hosteddataid ns2 datastorageitem ns2 storehosteddata ns2 action ns4 ipgapiactionrequest result successful storage contains va lue true parameter ns4 successfully ns4 ipgapiactionresponse xmlns ns4 http ipg online com ipgapi schemas ipgapi xmlns ns2 http ipg online com ipgapi schemas a1 xmlns ns3 http ipg online com ipgapi schemas v1 ns4 successfully true ns4 successfully ns4 ipgapiactionresponse cases one records st ored successfully corresponding hosted data ids marked res ult ns4 ipgapiactionresponse xmlns ns4 http ipg online com ipgapi schemas ipgapi xmlns ns2 http ipg online com ipgapi schemas a1 xmlns ns3 http ipg online com ipgapi schemas v1 ns4 successfully false ns4 successfully ns2 error code sgsdas 020300 ns2 errormessage could store hosted data id 691c7cb3 a752 4d6d abde 83cad63de258 reason internal error occured process ing request ns2 errormessage ns2 error ns4 ipgapiactionresponse see possibilities data vault produ ct integration guide first data connect firstdata com 23 8 xml tag overview 8 1 overview transaction type following shows xml tags need submi tted transaction type well ones optionally used please u se fields stated also note order abbreviations mandatory optional optional default value und b maximum one two values 1 provided optional mandatory b provided 3 mandatory 3d secure transactions see details 3d secure chapter path name credit card direct debit paths relative ipgapi ipgapiorderrequest v1 transaction sale forceticket preauth postauth return credit void sale void v1 creditcardtxtype v1 type v1 creditcarddata v1 cardnumber v1 creditcarddata v1 expmonth v1 creditcarddata v1 expyear v1 creditcarddata v1 cardcodevalue v1 creditcarddata v1 trackdata b b b b v1 creditcard3dsecure v1 verificationresponse 3 3 3 3 v1 creditcard3dsecure v1 payerauthenticationresponse v1 creditcard3dsecure v1 authenticationvalue v1 creditcard3dsecure v1 xid v1 de directdebittxtype v1 type v1 de directdebitdata v1 bankcode v1 de directdebitdata v1 accountnumber firstdata com 24 v1 de directdebitdata v1 trackdata b v1 payment v1 hosteddataid 1 1 1 1 1 v1 payment v1 chargetotal v1 payment v1 currency v1 transactiondetails v1 orderid v1 transactiondetails v1 ip v1 transactiondetails v1 referencenumber v1 transactiondetails v1 tdate v1 transactiondetails v1 transactionorigin v1 transactiondetails v1 invoicenumber v1 billing v1 customerid v1 billing v1 name v1 billing v1 company v1 billing v1 address1 v1 billing v1 address2 v1 billing v1 city v1 billing v1 state v1 billing v1 zip v1 billing v1 country v1 billing v1 phone v1 billing v1 fax v1 billing v1 email v1 shipping v1 type v1 shipping v1 name v1 shipping v1 address1 v1 shipping v1 address2 firstdata com 25 8 2 description xml tags 8 2 1 creditcardtxtype path name xml schema type description v1 creditcardtxtype v1 type xs string stores transaction type possible values sale forceticket preauth postauth return credit void 8 2 2 creditcarddata path name xml schema type description v1 creditcarddata v1 cardnumber xs string stores customer credit card number make sure string contains digits e passing number e g format xxxx xxxx xxxx xxxx result error returned first data api web service v1 creditcarddata v1 expmonth xs string stores expiration month customer credit card make sure content element always contains two digits e card expiring july element value 07 v1 creditcarddata v1 expyear xs string stores expiration year customer credit card formatting restrictions v1 expmonth element apply v1 creditcarddata v1 cardcodevalue xs string stores three four digit card security code \\( csc \\) sometimes also referred card verification value \\( cvv \\) code \\( cvc \\) typically printed back credit card information benefits csc contact support v1 creditcarddata v1 trackdata xs string stores track data card using card reader instead keying card data \\( optionally used instead transmitting cardnumber expmonth expyear \\) field needs contain v1 shipping v1 city v1 shipping v1 state v1 shipping v1 zip v1 shipping v1 country firstdata com 26 least concatenated track 1 2 data track data 3 optional track data must include track field separators stored card example track data separator track data 1 2 without data \\? \\? 8 2 3 creditcard3dsecure path name xml schema type description v1 creditcard3dsecure v1 verificationresponse xs string stores verificationresponse \\( veres \\) merchant plug v1 creditcard3dsecure v1 payerauthenticationresp onse xs string stores payerauthenticationresponse \\( pares \\) merchant plug v1 creditcard3dsecure v1 authenticationvalue xs string stores authenticationvalue \\( mastercard aav visa caav \\) merchant plug v1 creditcard3dsecure v1 xid xs string stores xid merchant plug please note values receive merchant plug 3d secure solution 3d secure provider integrat ed 3d secure functionality connect feature used transactions via ap technical reasons 8 2 4 de directdebittxtype path name xml schema type description v1 de directdebittxtype v1 type xs string stores transaction type possible values sale void 8 2 5 de directdebitdata path name xml schema type description v1 de directdebitdata v1 bankcode xs string stores bank code customer please make sure value contains numbers spaces v1 de directdebitdata v1 accountnumber xs string stores account number customer please make sure value contains numbers spaces v1 de directdebitdata v1 trackdata xs string stores track data card using card reader instead keying card data \\( optionally used instead transmitting bankcode accountnumber \\) field needs contain concatenated track 2 3 data track data must include track field separators stored card firstdata com 27 8 2 6 payment path name xml schema type description v1 payment v1 hosteddataid xs string stores hosted data id data vault product v1 payment v1 chargetotal xs double stores transaction amount make sure number positions decimal point exceed 2 e g 3 123 would invalid however 3 12 3 1 3 correct v1 payment v1 currency xs string stores currency three digit iso 4217 value \\( e g 978 euro \\) 8 2 7 transactiondetails path name xml schema type description v1 transactiondetails v1 orderid xs string stores order id must unique per store id order id transmitted internet payment gateway generate one automatically v1 transactiondetails v1 ip xs string stores customer ip address used first data api web service fraud detection ip address make sure supply ip format xxx xxx xxx xxx e g 128 0 10 2 would valid ip v1 transactiondetails v1 referencenumber xs string stores six digit reference number received result successful external authorization \\( e g phone \\) first data api web service needs number uniquely mapping forceticket transaction previously performed external authorization v1 transactiondetails v1 tdate xs string stores tdate sale postauth forceticket return credit transaction void transaction refers tdate value returned within response successful transaction one five types performing void transaction pass tdate addition order id uniquely identifying transaction voided scenario presented gives example v1 transactiondetails v1 transactionorigin xs string source transaction possible values eci \\( order received via email internet \\) moto \\( mail order telephone order \\) retail \\( face face \\) v1 transactiondetails v1 invoicenumber xs string stores invoice number 8 2 8 billing path name xml schema description firstdata com 28 type v1 billing v1 customerid xs string stores id customer v1 billing v1 name xs string stores customer name provided appear transaction reports v1 billing v1 company xs string stores customer company provided appear transaction reports v1 billing v1 address1 xs string stores first line customer address provided appear transaction reports v1 billing v1 address2 xs string stores second line customer address provided appear transaction reports v1 billing v1 city xs string stores customer city provided appear transaction reports v1 billing v1 state xs string stores customer state provided appear transaction reports v1 billing v1 zip xs string stores customer zip code provided appear transaction reports v1 billing v1 country xs string stores customer country provided appear transaction reports v1 billing v1 phone xs string stores customer phone number provided appear transaction reports v1 billing v1 fax xs string stores customer fax number provided appear transaction reports v1 billing v1 email xs string stores customer email address provided appear transaction reports 8 2 9 shipping path name xml schema type description v1 shipping v1 type xs string stores way delivery v1 shipping v1 name xs string stores name recipient provided appear transaction reports v1 shipping v1 address1 xs string stores first line shipping address provided appear transaction reports v1 shipping v1 address2 xs string stores second line shipping address provided appear transaction reports v1 shipping v1 city xs string stores recipient city provided appear transaction reports v1 shipping v1 state xs string stores recipient state provided appear transaction reports v1 shipping v1 zip xs string stores recipient zip code provided appear transaction reports v1 shipping v1 country xs string stores recipient country provided firstdata com 29 appear transaction reports 9 building soap request message building transaction xml soap requ est message describing web service operation call wish perform crea ted means xml encoded transaction established described th e previous chapter represents operation argument soap request message encode actual operation call building soap request message rather st raightforward task complete soap message wrapping xml sale transaction looks follows \\? xml version 1 0 encoding utf 8 \\? soap env envelope xmlns soap env http schemas xmlsoap org soap envelope soap env header soap env body ipgapi ipgapiorderrequest xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi v1 transaction v1 creditcardtxtype v1 type sale v1 type v1 creditcardtxtype v1 creditcarddata v1 cardnumber 4111111111111111 v1 cardnumber v1 expmonth 12 v1 expmonth v1 expyear 07 v1 expyear v1 creditcarddata v1 payment v1 chargetotal 19 00 v1 chargetotal v1 currency 978 v1 currency v1 payment v1 transaction ipgapi ipgapiorderrequest soap env body soap env envelope short soap request message contains soap envelope consisting header body specific header entries requir ed calling web service soap body takes transaction xml document sub elem ent shown note requirements transactions ype sale means general format soap request message regardle ss actual transaction type follows \\? xml version 1 0 encoding utf 8 \\? soap env envelope xmlns soap env http schemas xmlsoap org soap envelope soap env header soap env body ipgapi ipgapiorderrequest xmlns ipgapi http ipg online com ipgapi schemas ipgapi xmlns v1 http ipg online com ipgapi schemas v1 firstdata com 30 v1 transaction transaction content v1 transaction ipgapi ipgapiorderrequest soap env body soap env envelope finally may noticed spe cific entries describing web service operation call fact first data api automatically maps ipgapi ipgapiorderrequest element corresponding web service operation 10 reading soap response message soap response message may understood web service operation result hence processing soap request message may either resulted soap response message success case \\( e retu rn parameter \\) soap fault message case failure \\( e thrown exception \\) b oth soap message types contained body http response message 10 1 soap response message soap response message received result credit card processor \\( started first data internet payment gateway \\) app roved transaction always following scheme \\? xml version 1 0 encoding utf 8 \\? soap env envelope xmlns soap env http schemas xmlsoap org soap envelope soap env header soap env body ipgapi ipgapiorderresponse xmlns ipgapi http ipg online com ipgapi schemas ipgapi transaction result ipgapi ipgapiorderresponse soap env body soap env envelope send action get ipgapi ipgapiactionresponse headers defined soap body contai ns actual transaction result contained ipgapi ipgapiorderresponse ipgapi ipgapiorderrequest element sub elements meanings presented n next chapter however order provide quick example approved sale transaction wrapped soap message similar following example \\? xml version 1 0 encoding utf 8 \\? soap env envelope xmlns soap env http schemas xmlsoap org soap envelope soap env header soap env body ipgapi ipgapiorderresponse xmlns ipgapi http ipg online com ipgapi schemas ipgapi ipgapi commercialserviceprovider bnlp ipgapi commercialserviceprovider firstdata com 31 ipgapi transactiontime 1192111687392 ipgapi transactiontime ipgapi processorreferencenumber 3105 ipgapi processorreferencenumber ipgapi processorresponsemessage function performed error free ipgapi processorresponsemessage ipgapi errormessage ipgapi orderid 62e3b5df 2911 4e89 8356 1e49302b1807 ipgapi orderid ipgapi approvalcode 440368 0000057177 ppxm 0043364291 ipgapi approvalcode ipgapi avsresponse ppx ipgapi avsresponse ipgapi tdate 1192140473 ipgapi tdate ipgapi transactionresult approved ipgapi transactionresult ipgapi terminalid 123456 ipgapi terminalid ipgapi processorresponsecode 00 ipgapi processorresponsecode ipgapi processorapprovalcode 440368 ipgapi processorapprovalcode ipgapi processorreceiptnumber 4291 ipgapi processorreceiptnumber ipgapi processortracenumber 004336 ipgapi processortracenumber ipgapi ipgapiorderresponse soap env body soap env envelope 10 2 soap fault message general soap fault message returned fi rst data api web service following format \\? xml version 1 0 encoding utf 8 \\? soap env envelope xmlns soap env http schemas xmlsoap org soap envelope soap env header soap env body soap env fault faultcode soap env client faultcode faultstring xml lang en us fault message faultstring detail fault message detail soap env fault soap env body soap env envelope firstdata com 32 basically faultstring element carries fault type according f ault type elements set note ab ove shown elements occur within soap env fault element elements exist fault type described upcoming sections 10 2 1 soap env server general fault type indicates web service failed process transaction due internal system error receive response please contact support team resolve problem internalexception always looks like example \\? xml version 1 0 encoding utf 8 \\? soap env envelope xmlns soap env http schemas xmlsoap org soap envelope soap env header soap env body soap env fault faultcode soap env server faultcode faultstring xml lang en us unexpected error faultstring soap env fault soap env body soap env envelope soap fault message elements relative soap env envelope soap env body soap env fault element set follows path name xml schema type description faultcode xs string element always set soap env server indicating fault cause due system underlying api failed faultstring xs string element always carries following fault string unexpected error 10 2 2 soap env client 10 2 2 1 merchantexception fault type occurs first data api trace back error store passed incorrect information may one fol lowing reasons 1 store registered closed cas e receive information despite store registered open please contact support 2 store id user id combination prov ided https authorization syntactically incorrect 3 xml match schema merchantexception always looks shown firstdata com 33 \\? xml version 1 0 encoding utf 8 \\? soap env envelope xmlns soap env http schemas xmlsoap org soap envelope soap env header soap env body soap env fault faultcode soap env client faultcode faultstring xml lang en us merchantexception faultstring detail detailed explanation detail soap env fault soap env body soap env envelope soap fault message elements relative soap env envelope soap env body soap env fault element set follows path name xml schema type description faultcode xs string element always set soap env client faultstring xs string element always set merchantexception detail reason xs string minimum one reason see section merchant exceptions appendix detailed analysis errors 10 2 2 2 processingexception fault type raised whenever first data api detected error processing transaction difference fault types transaction passed check xsd processingexception always looks shown soap env envelope xmlns soap env http schemas xmlsoap org soap envelope soap env header soap env body soap env fault faultcode soap env client faultcode faultstring xml lang en us processingexception processing request resulted error see soap details mor e information faultstring detail ipgapi ipgapiorderresponse xmlns ipgapi https ipg online com ipgapi schemes ipgapi ipgapi commercialserviceprovider bnlp ipgapi commercialserviceprovider ipgapi transactiontime 1192111156423 ipgapi transactiontime firstdata com 34 ipgapi processorreferencenumber ipgapi processorresponsemessage card expiry date exceeded ipgapi processorresponsemessage ipgapi errormessage sgs 000033 card expiry date exceeded ipgapi errormessage ipgapi orderid 62e3b5df 2911 4e89 8356 1e49302b1807 ipgapi orderid ipgapi approvalcode ipgapi avsresponse ipgapi tdate 1192139943 ipgapi tdate ipgapi transactionresult declined ipgapi transactionresult ipgapi terminalid 123456 ipgapi terminalid ipgapi processorresponsecode ipgapi processorapprovalcode ipgapi processorreceiptnumber ipgapi processortracenumber ipgapi ipgapiorderresponse detail soap env fault soap env body soap env envelope soap fault message elements relative soap env envelope soap env body soap env fault element set described path name xml schema type description faultcode xs string element always set soap env client indicating fault cause likely found invalid transaction data passed faultstring xs string element always carries following fault string processingexception detail ipgapi ipgapiorderresponse composite element element contains error since numerous causes raising exception next chapter give overview explaining data contained element see section processing exceptions appendix f detailed analysis errors 11 analysing transaction result 11 1 transaction approval soap message wrapping transaction approval ha presented previous chapter together example transaction tatus report generated internet firstdata com 35 payment gateway contained ipgapi ipgapiorderresponse element understood data returned web service operation following elements relative ipgapi ipgapiorderresponse super element described note always full set elements contained response however elements might empty path name xml schema type description ipgapi commercialserviceprovider xs string indicates provider ipgapi transactiontime xs string time stamp set internet payment gateway returning transaction approval ipgapi processorreferencenumber xs string cases element might empty stores number allowing credit card processor refer transaction need provide number transaction however number ready case detect problems transaction want contact support ipgapi processorresponsemessage xs string case approval element contains string function performed error free ipgapi processorresponsecode xs string response code credit card processor ipgapi errormessage xs string element empty case approval ipgapi orderid xs string element contains order id sale preauth forceticket credit transactions new order id returned postauth return void transactions supply number v1 orderid element making clear transaction refer ipgapi orderid element transaction approval postauth return void transaction simply returns order id transaction referred ipgapi approvalcode xs string stores approval code transaction processor created transaction need provide code transaction however number ready case detect problems transaction want contact support ipgapi avsresponse xs string returns address verification system \\( avs \\) response ipgapi tdate xs string stores tdate supply voiding transaction \\( possible sale postauth transactions \\) case pass firstdata com 36 value v1 tdate element void transaction want build ipgapi transactionresult xs string stores transaction result always set approved case approval ipgapi terminalid xs string terminal id used transaction 11 2 transaction failure shown previous chapter soap fault mess age resulting credit card processor failed process transaction contains ipgapi ipgapiorderresponse element passed child soap detail element note sub elements exactly th e transaction approval case meaning failure case described path name xml schema type description ipgapi commercialserviceprovider xs string indicates provider ipgapi transactiontime xs string time stamp set internet payment gateway returning transaction failure ipgapi processorreferencenumber xs string cases element might empty stores number allowing credit card processor refer transaction need provide number transactions however number ready case detect problems transaction want contact support ipgapi processorresponsemessage xs string stores error message credit card processor returned instance case expired credit card might card expiry date exceeded ipgapi processorresponsecode xs string response code credit card processor ipgapi processorapprovalcode xs string approval code credit card processor ipgapi processorreceiptnumber xs string receipt number credit card processor ipgapi processortracenumber xs string trace number credit card processor ipgapi errormessage xs string stores error message returned internet payment gateway always encoded format sgs xxxxxx message xxxxxx six digit error code message describing error \\( description might different processor response message \\) instance example firstdata com 37 error message sgs 000033 card expiry date exceeded returned make sure error code message ready contacting support ipgapi orderid xs string stores order id contrast approval order id never required transaction needed tracing cause error hence make sure ready contacting support ipgapi approvalcode xs string element empty case transaction failure ipgapi avsresponse xs string returns address verification system \\( avs \\) response ipgapi tdate xs string stores tdate similar order id tdate never required transaction needed tracing error cause hence make sure ready contacting support ipgapi transactionresult xs string failure case three possible values decline fraud failed decline returned case credit card processor accept transaction e g finding customer funds sufficient fraud returned case fraud attempt assumed internet payment gateway internal gateway error occur returned value failed ipgapi terminalid xs string terminal id used transaction 12 building https post request building https post request task rarely hand plenty tools libraries supporting compos ition https requests mostly required functionality task conta ined standard set libraries coming technological environment dev elop online store since libraries slightly differ ir usage general building process described order illustrate basic concept following chapters give examples showing build valid https request php nd asp general set parameters provide building valid https request whatever technology follows firstdata com 38 parameter value description url https test ipg online com ipgapi services full url first data api web service depending functionality use building http requests might split url host service provide information appropriate http request headers content type text xml additional http header needed set due soap request message encoded xml passed content http post request body authorization type basic username ws storeid userid password yourpassword store identified internet payment gateway checking credentials order use first data api provide store id user id password content http basic authorization header instance store id 101 user id 007 password mypw authorization user name ws101 007 complete http authorization header would authorization basic v1mxmdeuxy4wmdc6bxlqvw note latter string base 64 encoding result string ws101 007 mypw http body soap request xml http post request bo dy takes soap request message 12 1 php http communication php mostly accomplis hed aid curl shipped library command line tool n ewer php versions curl already included extension activated thus making curl functionality available php script rather straightforward task case web server operates microsoft windows might requ ire compile php unix linux machines therefore might consider call curl command line tool php script instead using curl extension va riants considered following beginning usage curl extension p hp 5 2 4 running windows machine 12 1 1 using curl php extension mostly activating curl extension php 5 2 4 simply requires uncomment following line php ini configuration file extension php curl dll note php versions might require ac tions order enable curl support php refer php documentation infor mation activating curl http request parameters set wi th following php statements \\? php firstdata com 39 storing soap message variable note th plain xml code passed string reasons simplici ty however certainly good practice build xml e g dom furthermore using special characters make ure xml string gets utf 8 encoded \\( done \\) body soap env envelope soap env envel ope initializing curl ipg api url ch curl init \\( https test ipg online com ipgapi services \\) setting request type post curl setopt \\( ch curlopt post 1 \\) setting content type curl setopt \\( ch curlopt httpheader array \\( content type text xml \\) \\) setting authorization method basic curl setopt \\( ch curlopt httpauth curlauth basic \\) supplying credentials curl setopt \\( ch curlopt userpwd ws101 007 mypw \\) filling request body soap message curl setopt \\( ch curlopt postfields body \\) \\? setting security options necessary fo r enabling ssl communication discussed next chapter extending cript 12 1 2 using curl command line tool reasons described might consider using curl command line tool instead extension using tool r equire php configuration efforts php script simply call executable set parameters since security settings postponed next chapter fol lowing script shows set standard http parameters e script extend ed ssl parameters next chapter \\? php storing soap message variable note th escape n since latter makes command lin e tool fail furthermore note plain xml code pass ed string reasons simplicity however certai nly good practice build xml e g dom finally u sing special characters make sure xml st ring gets utf 8 encoded \\( done \\) body soap env envelope soap env envel ope setting path curl command line tool adapt path path saved curl binaries path c curl curl exe setting ipg api url apiurl https test ipg online com ipgapi serv ices setting content type contenttype header content type text xml setting authorization method basic su pplying credentials user basic user ws101 007 mypw setting request body soap message automatically marks request post data data body \\? firstdata com 40 12 2 asp multiple ways building http request asp however following usage winhttp 5 1 described ships windows server 2003 windows xp sp2 furthermore lines code requ ired order set valid http request note following code fragment w ritten javascript using vb script instead fundamentally change shown sta tements language javascript html body storing soap message variable note th plain xml code passed string reasons simplici ty however certainly good practice build xml e g dom furthermore using special characters make ure xml string gets utf 8 encoded \\( done \\) var body soap env envelope soap env en velope constructing request object var request server createobject \\( winhttp winhttpr equest 5 1 \\) initializing request object http thod post ipg api url request open \\( post https test ipg online com pgapi services \\) setting content type request setrequestheader \\( content type text xml \\) setting credentials request setcredentials \\( ws10036000750 1001 tes tinger 0 \\) body html note script extended next chapter setting security options required establishing ssl channel 13 establishing ssl connection sending http request built previo us chapter secure communication channel established guaranteeing th data passed encrypted client \\( application \\) server \\( running first data api web service \\) sure communicating one else achieved establishing ssl connection client server exchanging certificates certificate identifies communicat ion party uniquely basically process works follows 1 client starts establish secure connec tion sending client certificate server 2 server receives client certificate v erifies client certificate stored client 3 valid server responds sending ser ver certificate 4 client receives server certificate v erifies trusted server certificate 5 valid parties establish ssl channel sure communicating one else data exchanged parties encrypted firstdata com 41 following process application two things first start communication sending client certificate second verify received server certificate accomplished differs platform platform ever order illustrate basic concepts php asp scripts started pr evious chapter continued extending relevant statements necessa ry setting ssl connection 13 1 php picking distinction using either php curl extension command line tool following two sections continue two different ways enabling secure http communication however regardless approac h intend use confronted one special feature curl curl r equires client certificate passed pem file client certificate private key passed extra file finally client certificate private key password supplied simply spoken pem file contains certificate information necessary allo wing server identify client private key really necessary kind f communication however crucial making curl work 13 1 1 using php curl extension building script started previous chap ter parameters necessary establishing ssl connection curl set following statements \\? php telling curl verify server certificate curl setopt \\( ch curlopt ssl verifypeer 1 \\) setting path curl find certifi cate verify received server certificate curl setopt \\( ch curlopt cainfo c certs geotrust pem \\) setting path curl find client certificate curl setopt \\( ch curlopt sslcert c certs ws101 007 pem \\) setting path curl find client certificate private key curl setopt \\( ch curlopt sslkey c certs ws101 007 key \\) setting key password curl setopt \\( ch curlopt sslkeypasswd ckp 1193927 132 \\) \\? note script extended next chapt er statements actual http request 13 1 2 using curl command line tool building script started previous chap ter statements initialize ssl parameters passed curl command line tool follows \\? php setting path curl find certifi cate verify received server certificate servercert cacert c certs geotrust pem setting path curl find client certificate clientcert cert c certs ws101 007 pem setting path curl find client certificate private key firstdata com 42 clientkey key c certs ws101 007 key setting key password keypw pass ckp 1193927132 \\? note script extended next chapt er statements actual http request 13 2 asp making ssl initialization process wor k asp requires client server certificate present certificate sto res words asp communicate via ssl certificates nstalled first following steps assume asp running microsoft iis 5 1 windo ws xp guide set process 1 click start click run type mmc click ok 2 open file menu select add remove snap 3 click add 4 snap choose certificates click add 5 prompted select account w hich want manage certificates since iis uses computer account choose computer account click next 6 choose local computer click finish 7 click close ok 8 expand certificates \\( local computer \\) tree client certificate installed personal folder 9 therefore right click certificates folder select tasks click import open certificate import wizard 10 click next choose client certificate p12 file click next 11 provide client certificate installation pas sword click next 12 select place certificates following store browse personal folder yet displayed click next 13 check displayed settings click finish client certificate installed local computer personal certificates store h ere iis \\( running asp \\) lookup client certificate communicating anot server via http 14 server certificate installed trusted root certification authorities store certificates store used verification whenever receiving certificate server means first data api server certificate installed way iis able verify server certificate received contacting web service therefore choose trusted root certification authorities certificates \\( local computer \\) tree open sub folder certificates 15 right click certificates folder select tasks click import open certificate import wizard 16 click next choose server certificate pem file click next 17 select place certificates following store browse trusted root certification authorities folder yet displayed click next 18 check displayed settings click finish server certificate installed local computer trusted certificates store iis lookup server certificate verification first data api server certificate received ssl setup process installing certificates one could assume environment allowing asp communicate via ssl set however st ill one thing makes firstdata com 43 communication fail iis running asp windows user necessary rights access client certificate p rivate key although accessing private key really necessary establishing ss l connection internet payment gateway iis user needs access rights runni ng authentication process asp granting rights user microsoft provides winhttpcertcfg exe tool download free http www microsoft com downloads details aspx \\? fam ilyid c42e27ac 3409 40e9 8667 c748e422833f displaylang en installing tool open command prompt witch directory installed tool type following line granting access iis user winhttpcertcfg g c local machine ws101 00 7 iwam mymachine local machine determines key store personal certif icates local machine account stored installing cl ient certificate personal certificates store described client certificate ca n found path need provide another path ws101 007 name client certificate adapt name name client certific ate therefore check name displayed client certificate mmc console installing described fi nally iwam mymachine denotes iis user name note iis 5 1 uses iwam machinename default means machine name iisservermachine iis user called iwam iisservermachine note iis versions might use differen naming scheme know machine name iis user name check iis documentation contact administrator ready use ssl asp code code extending asp script started previous chapter reduced one addi tional statement tells winhttp client certificate send \\( find \\) contacting internet payment gateway language javascript html body setting path client certificate send found request setclientcertificate \\( local machine ws 101 007 \\) body html note use vb script code looks almo st however forget replace doubled backslashes path si ngle ones \\( e path certificate would local machine ws101 007 instead \\) note script extended next chapt er statements actual http request 14 sending https post request receiving response actual communication first data api b service takes place sending https request waiting response done depends firstdata com 44 technology using http libraries fully cover underlying communication details reduce process single operati call returning http response result object case parameters required successfully performing http post request ssl receiving response \\( carryi ng 200 http status code \\) described previous two chapters setting inv alid incorrect parameters results web server running first data api web service return standard http error code http header response sending ssl f ailure meanings found http ssl guide however one important exception case http parameters provided correct web service failed proc ess transaction due incorrect value contained soap request message \\( e g n invalid credit card number \\) soap exception thrown transferred body http response carrying error code 500 details exception cause provided soap fault message described context next chapter order complete php asp scripts built gradually previous chapters following two chapters provide statements necessary http call using technologies 14 1 php distinction php curl extensi curl command line tool made following 14 1 1 using php curl extension php script using curl extension finally completed call statements shown note http call ret urns soap response fault message http response body \\? php telling curl return http response body operation result value calling curl exec curl setopt \\( ch curlopt returntransfer 1 \\) calling curl saving soap response messag e variable contains string like soap env envelope soap env envelope result curl exec \\( ch \\) closing curl curl close \\( ch \\) \\? 14 1 2 using curl command line tool http call curl command line tool simply requires completing command line statement executing external ool however reading http response complicated php exec command saves line returned external program one element array concat enating elements array results soap response fault message bee n returned http response body following statements handle http call complete script \\? php saving whole command one variable firstdata com 45 curl path data contenttype user servercert clientcert clientkey keypw apiurl preparing array containing lines returne curl command line tool returnarray array \\( \\) performing http call executing curl c ommand line tool exec \\( curl returnarray \\) preparing variable taking complete result result concatenating different lines returned th e curl command line tool result variable result carrying entire soap response message string foreach \\( returnarray item \\) result result item \\? 14 2 asp actual http call winhttp asp l imited one simple operation call taking soap request xml parameter uccessfully performing request soap response fault message returned ca n retrieved string accessing request object responsetext property soap response message looks like described next chapter followin g statements complete asp script language javascript html body http call soap request messag e input request send \\( body \\) saving soap response message string var iable var response request responsetext body html 15 using java client connect web servic e quick simple integration first data provid es java client connect internet payment gateway web service instance f ipgapiclient class manages connection web service builds x ml soap messages evaluates responses construct transac tion handle response developer works simple java bean classes firstdata com 46 15 1 instance ipgapiclient several constructors available instant iate ipgapiclient example illustrates use easiest one constructors getbytes method also included completion simp lification example string url https test ipg online com ipgapi services string storeid store id string password password byte key getbytes \\( path keystore ks \\) string keypw key store password ipgapiclient client new ipgapiclient \\( url storeid password key keypw \\) getbytes reads resource returns byte array param resource resource read return resource byte array public static byte getbytes \\( final string resource \\) throws ioexception final inputstream input io class getresourceasstream \\( resource \\) \\( input null \\) throw new ioexception \\( resource \\) try final byte bytes new byte input available \\( \\) input read \\( bytes \\) return bytes finally try input close \\( \\) catch \\( ioexception e \\) log warn \\( resource \\) 15 2 construct transaction handle response different classes transactions following card types credit card german direct debit uk debit cards following factory class used generate class need de firstdata ipgapi client transaction ipgapitransa ctionfactory following example shows credit card sale tran saction amount 7 euros amount amount new amount \\( 7 978 \\) iso 4217 eur 978 creditcard cc new creditcard \\( 1111222233334444 07 17 null \\) ccsaletransaction transaction ipgapitransactionfactory createsaletransactioncred \\( amount cc \\) firstdata com 47 transactions may include informatio n e g customer transaction setname \\( name \\) try ipgapiresult result client committransaction \\( tra nsaction \\) read conclusion system println \\( result getorderid \\( \\) \\) system println \\( result gettransactiontime \\( \\) \\) catch \\( processingexception e \\) error transaction passed 15 3 construct action following factory class used generate class need de firstdata ipgapi client transaction ipgapiaction factory commit action need use commitaction method ipgapiclient process similar payment transacti ons 15 4 connect behind proxy use ipgapiclient behind proxy must set proxy configuration client ipgapiclient method ipgapiclient setproxy \\( final string host final integer port final string user final string domain final string password \\) parameters user domain password null identification needed need identify ms windows proxy must set parameter domain identify systems like unix parameter domain must null information see apache javadoc usernamepasswordcredentials unix sys tems http hc apache org httpclient 3 x apidocs org apache commons httpclient usernamep asswordcredentials html username passwordcredentials \\( java lang string 20java lang tring \\) ntcredentials ms windows http hc apache org httpclient 3 x apidocs org apache commons httpclient ntcredent ials html ntcredentials \\( java lang stri ng 20java lang string 20java lang string 20java lang string \\) setting proxy parameters must call th e ipgapiclient init \\( \\) method appendix ipgapi xsd \\? xml version 1 0 encoding utf 8 \\? xs schema xmlns xs http www w3 org 2001 xmlschema xmlns ipgapi http ipg online com ipgapi schemas ipgapi xmlns a1 http ipg online com ipgapi schemas a1 xmlns v1 http ipg online com ipgapi schemas v1 elementformdefault qualified targetnamespace http ipg online com ipgapi schemas ipgapi xs import namespace http ipg online com ipgapi schemas v1 schemalocation v1 xsd xs import namespace http ipg online com ipgapi schemas a1 schemalocation a1 xsd request xs element name ipgapiorderrequest xs complextype xs choice xs element ref v1 transaction xs choice xs complextype xs element xs element name ipgapiactionrequest xs complextype xs choice xs element ref a1 action xs choice xs complextype xs element response xs element name ipgapiorderresponse xs complextype xs xs element name approvalcode type xs string xs element name avsresponse type xs string xs element name commercialserviceprovider type xs string xs element name errormessage type xs string xs element name orderid type xs string xs element name processorapprovalcode type xs string xs element name processorreceiptnumber type xs string xs element name processorreferencenumber type xs string xs element name processorresponsecode type xs string xs element name processorresponsemessage type xs string xs element name processortracenumber type xs string xs element name tdate type xs string xs element name terminalid type xs string xs element name transactionresult type xs string xs element name transactiontime type xs string xs xs complextype xs element xs element name ipgapiactionresponse xs complextype xs sequence xs element name successfully type xs boolean xs element name orderid type xs string minoccurs 0 xs element ref a1 error minoccurs 0 maxoccurs unbounded xs element ref a1 transactionvalues minoccurs 0 maxoccurs unbounded xs sequence xs complextype xs element xs schema v1 xsd \\? xml version 1 0 encoding utf 8 \\? xs schema xmlns xs http www w3 org 2001 xmlschema xmlns v1 http ipg online com ipgapi schemas v1 targetnamespace http ipg online com ipgapi schemas v1 elementformdefault qualified main xs element name transaction type v1 transaction xs complextype name transaction xs sequence xs choice xs sequence xs element name creditcardtxtype type v1 creditcardtxtype xs element name creditcarddata type v1 creditcarddata minoccurs 0 xs element ref v1 creditcard3dsecure minoccurs 0 xs sequence xs sequence xs element name customercardtxtype type v1 customercardtxtype xs element name customercarddata type v1 customercarddata minoccurs 0 xs sequence xs sequence xs element name de directdebittxtype type v1 de directdebittxtype xs element name de directdebitdata type v1 de directdebitdata minoccurs 0 xs sequence xs sequence xs element name uk debitcardtxtype type v1 uk debitcardtxtype xs element name uk debitcarddata type v1 uk debitcarddata minoccurs 0 xs sequence xs choice xs element ref v1 payment minoccurs 0 xs element ref v1 transactiondetails minoccurs 0 xs element ref v1 billing minoccurs 0 xs element ref v1 shipping minoccurs 0 xs sequence xs complextype options xs complextype name creditcardtxtype xs complexcontent xs extension base v1 options xs sequence xs element name type xs simpletype xs restriction base xs string xs enumeration value credit xs enumeration value forceticket xs enumeration value postauth xs enumeration value preauth xs enumeration value return xs enumeration value sale xs enumeration value void xs restriction xs simpletype xs element xs sequence xs extension xs complexcontent xs complextype xs complextype name customercardtxtype xs complexcontent xs extension base v1 options xs sequence xs element name type xs simpletype xs restriction base xs string xs enumeration value forceticket xs enumeration value bwlistcheck xs enumeration value sale xs restriction xs simpletype xs element xs sequence xs extension xs complexcontent xs complextype xs complextype name de directdebittxtype xs complexcontent xs extension base v1 options xs sequence xs element name type xs simpletype xs restriction base xs string xs enumeration value sale xs enumeration value void xs restriction xs simpletype xs element xs sequence xs extension xs complexcontent xs complextype xs complextype name uk debitcardtxtype xs complexcontent xs extension base v1 options xs sequence xs element name type xs simpletype xs restriction base xs string xs enumeration value credit xs enumeration value return xs enumeration value sale xs enumeration value void xs restriction xs simpletype xs element xs sequence xs extension xs complexcontent xs complextype xs complextype name options xs sequence xs element name storeid type v1 string20max minoccurs 0 xs sequence xs complextype card xs complextype name creditcarddata xs sequence xs choice xs sequence xs group ref v1 card minoccurs 0 xs element name cardcodevalue type v1 cardcodevalue minoccurs 0 xs sequence xs element name trackdata type v1 trackdata xs choice xs sequence xs complextype xs complextype name customercarddata xs sequence xs choice xs group ref v1 card xs element name trackdata type v1 trackdata xs choice xs sequence xs complextype xs complextype name de directdebitdata xs sequence xs choice xs sequence xs element name bankcode xs simpletype xs restriction base xs string xs pattern value 0 9 8 xs restriction xs simpletype xs element xs element name accountnumber xs simpletype xs restriction base xs string xs pattern value 0 9 1 10 xs restriction xs simpletype xs element xs sequence xs element name trackdata type v1 trackdata xs choice xs sequence xs complextype xs complextype name uk debitcarddata xs sequence xs group ref v1 card xs element name cardcodevalue type v1 cardcodevalue minoccurs 0 xs element name issueno minoccurs 0 xs simpletype xs restriction base xs string xs pattern value 0 9 0 4 xs restriction xs simpletype xs element xs sequence xs complextype xs group name card xs sequence xs element name cardnumber xs simpletype xs restriction base xs string xs pattern value 0 9 13 24 xs restriction xs simpletype xs element xs element name expmonth xs simpletype xs restriction base xs string xs pattern value \\( 0 1 9 \\) \\( 1 0 2 \\) xs restriction xs simpletype xs element xs element name expyear xs simpletype xs restriction base xs string xs pattern value 0 9 2 xs restriction xs simpletype xs element xs sequence xs group xs simpletype name cardcodevalue xs restriction base xs string xs pattern value 0 9 3 4 xs restriction xs simpletype xs simpletype name trackdata xs restriction base xs string track 1 length track 2 length track 3 length 90 64 107 261 xs pattern value za z0 9 \\? 1 261 xs restriction xs simpletype common xs element name creditcard3dsecure xs complextype xs xs element name verificationresponse xs simpletype xs restriction base xs string xs enumeration value n xs enumeration value u xs enumeration value xs restriction xs simpletype xs element xs element name payerauthenticationresponse minoccurs 0 xs simpletype xs restriction base xs string xs enumeration value xs enumeration value e xs enumeration value n xs enumeration value u xs enumeration value xs restriction xs simpletype xs element xs element name authenticationvalue type v1 string20 minoccurs 0 xs element name xid type v1 string20 minoccurs 0 xs xs complextype xs element xs element name payment xs complextype xs sequence xs element name hosteddataid type v1 string128max minoccurs 0 xs group ref v1 amount minoccurs 0 xs sequence xs complextype xs element xs group name amount xs sequence xs element name chargetotal xs simpletype xs restriction base xs decimal xs pattern value \\( 1 9 \\( 0 9 0 12 \\) \\) \\? 0 9 \\( 0 9 1 2 \\) \\? xs restriction xs simpletype xs element xs element name currency xs simpletype xs restriction base xs string http de wikipedia org wiki iso 4217 http en wikipedia org wiki iso 4217 xs pattern value 0 9 3 xs restriction xs simpletype xs element xs sequence xs group xs element name transactiondetails xs complextype xs xs element name invoicenumber type v1 string48max minoccurs 0 xs element name orderid type v1 string100max minoccurs 0 xs element name ip minoccurs 0 xs simpletype xs restriction base xs string xs pattern value \\( 25 0 5 \\( 2 0 4 1 0 9 1 9 \\) \\? 0 9 \\) \\( 25 0 5 \\( 2 0 4 1 0 9 1 9 \\) \\? 0 9 \\) \\( 25 0 5 \\( 2 0 4 1 0 9 1 9 \\) \\? 0 9 \\) \\( 25 0 5 \\( 2 0 4 1 0 9 1 9 \\) \\? 0 9 \\) xs restriction xs simpletype xs element xs element name referencenumber minoccurs 0 xs simpletype xs restriction base xs string xs pattern value \\( new \\) \\? 0 9a za z 1 6 xs restriction xs simpletype xs element xs element name tdate minoccurs 0 xs simpletype xs restriction base xs string xs pattern value 0 9 10 xs restriction xs simpletype xs element xs element name transactionorigin default eci minoccurs 0 xs simpletype xs restriction base xs string xs enumeration value eci xs enumeration value mail xs enumeration value telephone xs enumeration value moto xs enumeration value retail xs restriction xs simpletype xs element xs xs complextype xs element xs element name billing xs complextype xs xs element name customerid type v1 string32max minoccurs 0 xs element name name type v1 string96max minoccurs 0 xs element name company type v1 string96max minoccurs 0 xs element name address1 type v1 string96max minoccurs 0 xs element name address2 type v1 string96max minoccurs 0 xs element name city type v1 string96max minoccurs 0 xs element name state type v1 string96max minoccurs 0 xs element name zip type v1 string24max minoccurs 0 xs element name country type v1 string32max minoccurs 0 xs element name phone type v1 string32max minoccurs 0 xs element name fax type v1 string32max minoccurs 0 xs element name email type v1 string64max minoccurs 0 deprecated field evaluated removed v2 xsd xs element name addrnum type v1 string96max minoccurs 0 xs xs complextype xs element xs element name shipping xs complextype xs xs element name type type v1 string20max minoccurs 0 xs element name name type v1 string96max minoccurs 0 xs element name address1 type v1 string96max minoccurs 0 xs element name address2 type v1 string96max minoccurs 0 xs element name city type v1 string96max minoccurs 0 xs element name state type v1 string96max minoccurs 0 xs element name zip type v1 string24max minoccurs 0 xs element name country type v1 string32max minoccurs 0 xs xs complextype xs element simple types xs simpletype name string128max xs restriction base xs string xs maxlength value 128 xs restriction xs simpletype xs simpletype name string100max xs restriction base xs string xs maxlength value 100 xs restriction xs simpletype xs simpletype name string96max xs restriction base xs string xs maxlength value 96 xs restriction xs simpletype xs simpletype name string64max xs restriction base xs string xs maxlength value 64 xs restriction xs simpletype xs simpletype name string32max xs restriction base xs string xs maxlength value 32 xs restriction xs simpletype xs simpletype name string24max xs restriction base xs string xs maxlength value 24 xs restriction xs simpletype xs simpletype name string20max xs restriction base xs string xs maxlength value 20 xs restriction xs simpletype xs simpletype name string20 xs restriction base xs string xs length value 20 xs restriction xs simpletype xs schema a1 xsd \\? xml version 1 0 encoding utf 8 \\? xs schema xmlns xs http www w3 org 2001 xmlschema xmlns a1 http ipg online com ipgapi schemas a1 xmlns v1 http ipg online com ipgapi schemas v1 xmlns ipgapi http ipg online com ipgapi schemas ipgapi targetnamespace http ipg online com ipgapi schemas a1 elementformdefault qualified xs import namespace http ipg online com ipgapi schemas ipgapi schemalocation ipgapi xsd xs import namespace http ipg online com ipgapi schemas v1 schemalocation v1 xsd request xs element name action xs complextype xs sequence xs choice xs element ref a1 initiateclearing xs element ref a1 inquiryorder xs element ref a1 storehosteddata xs element ref a1 recurringpayment xs choice xs sequence xs complextype xs element xs element name initiateclearing xs complextype xs sequence xs element name storeid type v1 string20max minoccurs 0 xs sequence xs complextype xs element xs element name inquiryorder xs complextype xs xs element name storeid type v1 string20max minoccurs 0 xs element name orderid minoccurs 0 xs simpletype xs restriction base xs string xs maxlength value 100 xs restriction xs simpletype xs element xs xs complextype xs element xs element name storehosteddata xs complextype xs sequence xs element name storeid type v1 string20max minoccurs 0 xs element name datastorageitem maxoccurs unbounded xs complextype xs sequence xs choice xs element name creditcarddata type v1 creditcarddata xs element name customercarddata type v1 customercarddata xs element name de directdebitdata type v1 de directdebitdata xs element name uk debitcarddata type v1 uk debitcarddata xs choice xs element name hosteddataid type v1 string128max xs sequence xs complextype xs element xs sequence xs complextype xs element xs element name recurringpayment xs complextype xs xs element name function xs simpletype xs restriction base xs string xs enumeration value cancel xs enumeration value install xs enumeration value modify xs restriction xs simpletype xs element xs element name orderid type v1 string100max minoccurs 0 xs element name storeid type v1 string20max minoccurs 0 xs element ref a1 recurringpaymentinformation minoccurs 0 trackdata xs element name creditcarddata type v1 creditcarddata minoccurs 0 hosteddataid xs element ref v1 payment minoccurs 0 xs xs complextype xs element xs element name recurringpaymentinformation xs complextype xs xs element name recurringstartdate minoccurs 0 xs simpletype xs restriction base xs string yyyymmdd xs pattern value 0 9 8 xs restriction xs simpletype xs element 999 unlimited xs element name installmentcount minoccurs 0 xs simpletype xs restriction base xs integer xs maxinclusive value 999 xs mininclusive value 1 xs restriction xs simpletype xs element future use xs element name maximumfailures minoccurs 0 xs simpletype xs restriction base xs integer xs maxinclusive value 5 xs mininclusive value 1 xs restriction xs simpletype xs element xs element name installmentfrequency type xs positiveinteger minoccurs 0 xs element name installmentperiod minoccurs 0 xs simpletype xs restriction base xs string xs enumeration value day xs enumeration value week xs enumeration value month xs enumeration value year xs restriction xs simpletype xs element xs xs complextype xs element response xs element name error xs complextype xs xs element name errormessage type xs string xs xs attribute name code type xs string xs complextype xs element xs element name transactionvalues xs complextype xs complexcontent xs extension base v1 transaction xs sequence xs element ref ipgapi ipgapiorderresponse xs element name receiptnumber type xs string xs element name responsecode type xs string xs element name tracenumber type xs string xs element name transactionstate type xs string xs sequence xs extension xs complexcontent xs complextype xs element xs schema troubleshooting merchant exceptions detail xml wellformed premature end message detail possible explanation sent absolutely empty message mess age contains neither soap message ipg api message charact ers http body detail xml wellformed content allowed pr olog detail possible explanation message interpreted xml message detail xml wellformed xml document structures must start end within entity detail possible explanation message starts like xml message end tag first open tag missing detail xml wellformed element type soap env body must terminate matching end tag lt soap env body gt detail possible explanation open internal tag \\( top level tag \\) end tag missing example end tag soap env body missing detail xml wellformed element type irgend must followed either tribute specifications gt gt detail possible explanation message xml message correct xml essage character missing tag irgend detail xml wellformed open quote expected attribute xmlns ns3 associated element type ns3 ipgapiorderreq uest detail possible explanation value one attribute enclosed quotat ion marks ipg api attributes used name spaces detail xml wellformed prefix ipgapi element ipgapi ipgapiorde rrequest bound detail possible explanation name space ipgapi declared declare name space use xmlns prefix case take xmlns ipgapi http ipg online com ipgapi schemas ipgapi attribute top level tag ipg api message \\( ipgapiord errequest ipgapiactionrequest \\) detail xml wellformed prefix xmln attribute xmln ns2 associat ed element type ns3 ipgapiorderrequest bound detail possible explanation declare name space predefined n ame space xmlns allowed case prefix written xmln xmlns detail xml wellformed unable create envelope given source namespace recognized detail possible explanation message could interpreted xml message enclosing soap message correct including ipg api message oap body name spaces name spaces declared correctly correct name spaces described xsd detail xml wellformed processing instruction target matching xx mm allowed detail possible explanation whole message must correct xml message including ipg api message must contains xml declaration \\? xml \\? detail unexpected characters xml declaration detail possible explanation xml must start \\? xml please check ou send empty line another white space character front xml remove detail xml soap message unable create envelope given source root element named envelope detail possible explanation message seems correct xml message nly soap messages accepted message must enclosed soap message detail xml valid soap message error determination type probably envelope part correct detail possible explanation soap body tag missing detail source object passed '' 0 '' contents detail possible explanation soap body empty including ipg api messa ge missing detail included xml valid ipg api message unsupported top level namespace tag irgendwas soap body one http ipg online com ipgapi schemas ipgapi ipgapi actionrequest http ipg online com ipgapi schemas ipgapi ipgap iorderrequest allowed detail possible explanation first tag including ipg api message must one ipgapiactionrequest ipgapiorderrequest tag tag irgendwas n case tag namespace detail included xml valid ipg api message unsupported top level namespace tag http firstdata de ipgapi schemas ipgapi ipgapio rderrequest soap body one http ipg online com ipgapi schemas ipgapi ipgapi actionrequest http ipg online com ipgapi schemas ipgapi ipgapi orderrequest allowed detail possible explanation top level tag included ipg api message n allowed tag case name space wrong detail cvc pattern valid value '1 234' facet valid respect pa ttern \\( 1 9 \\( 0 9 0 12 \\) \\) \\? 0 9 \\( 0 9 1 2 \\) \\? typ e anontype chargetotalamount' cvc type 3 1 3 value '1 234' element 'ns3 chargetotal' n ot valid detail possible explanation value tag correspond dec laration xsd value three decimal places xsd allows two detail cvc complex type 2 4 invalid content found starting element 'ns 2 expyear' one http ipg online com ipgapi schemas v1 expmonth expected detail possible explanation occurrences tags must corresponding xsd recommend use tags sequence declared xsd case tag expmonth expected expyear troubleshooting processing exceptions detail ipgapi ipgapiorderresponse xmlns ipgapi http ipg online com ipgapi schemas ipgapi ipgapi commercialserviceprovider ipgapi transactiontime 1233656751183 ipgapi transactiontime ipgapi processorreferencenumber ipgapi processorresponsemessage ipgapi errormessage sgs c 000003 illegal combination values 3dsecure \\( verificationresponse payerauthenticationresponse payerauthenticationcode \\) null null ipgapi errormessage ipgapi orderid ipgapi approvalcode ipgapi avsresponse ipgapi tdate ipgapi transactionresult failed ipgapi transactionresult ipgapi terminalid ipgapi processorresponsecode ipgapi processorapprovalcode ipgapi processorreceiptnumber ipgapi processortracenumber ipgapi ipgapiorderresponse detail explanation combination three values verificationres ponse payerauthenticationresponse payerauthenticationcode 3dsecure wrong allowed combinations verificationresponse payerauthenticationresponse payerauthenticationcode null null null n null null n n null u null null null x u null null x payer authentication code x means val ue null detail ipgapi ipgapiorderresponse xmlns ipgapi http ipg online com ipgapi schemas ipgapi ipgapi commercialserviceprovider ipgapi transactiontime 1233659493267 ipgapi transactiontime ipgapi processorreferencenumber ipgapi processorresponsemessage ipgapi errormessage sgs 005002 merchant setup support requested service ipgapi errormessage ipgapi orderid ipgapi request 9c555d62 3850 4726 8589 5a2444c98c5d ipgapi orderid ipgapi approvalcode ipgapi avsresponse ipgapi tdate ipgapi transactionresult declined ipgapi transactionresult ipgapi terminalid ipgapi processorresponsecode ipgapi processorapprovalcode ipgapi processorreceiptnumber ipgapi processortracenumber ipgapi ipgapiorderresponse detail explanation example german direct debit trans action supported merchant receive result ransaction type included agreement please contact technical support tea detail ipgapi ipgapiorderresponse xmlns ipgapi http ipg online com ipgapi schemas ipgapi ipgapi commercialserviceprovider ipgapi transactiontime 1233656752933 ipgapi transactiontime ipgapi processorreferencenumber ipgapi processorresponsemessage ipgapi errormessage sgs 005005 duplicate transaction ipgapi errormessage ipgapi orderid ipgapi request 29351d8e 2634 4725 9d93 91b83704e00d ipgapi orderid ipgapi approvalcode ipgapi avsresponse ipgapi tdate ipgapi transactionresult fraud ipgapi transactionresult ipgapi terminalid ipgapi processorresponsecode ipgapi processorapprovalcode ipgapi processorreceiptnumber ipgapi processortracenumber ipgapi ipgapiorderresponse detail explanation transaction transactions ame data blocked configurable time span see user guide virtual terminal deta ils fraud settings detail ipgapi ipgapiorderresponse xmlns ipgapi http ipg online com ipgapi schemas ipgapi ipgapi commercialserviceprovider ipgapi transactiontime 1233656752308 ipgapi transactiontime ipgapi processorreferencenumber ipgapi processorresponsemessage ipgapi errormessage sgs 005009 currency allowed terminal ipgapi errormessage ipgapi orderid ipgapi request a58f6631 eb71 49c8 bbca 23fff53252fc ipgapi orderid ipgapi approvalcode ipgapi avsresponse ipgapi tdate ipgapi transactionresult declined ipgapi transactionresult ipgapi terminalid ipgapi processorresponsecode ipgapi processorapprovalcode ipgapi processorreceiptnumber ipgapi processortracenumber ipgapi ipgapiorderresponse detail explanation example us dollar allo wed currency store detail ipgapi ipgapiorderresponse xmlns ipgapi http ipg online com ipgapi schemas ipgapi ipgapi commercialserviceprovider ipgapi transactiontime 1235390834046 ipgapi transactiontime ipgapi processorreferencenumber ipgapi processorresponsemessage ipgapi errormessage sgs 005999 unknown error datab ase ipgapi errormessage ipgapi orderid ipgapi request d26ea5c1 d0de 41d2 8c41 3d6755fc204c ipgapi orderid ipgapi approvalcode ipgapi avsresponse ipgapi tdate 1235390830 ipgapi tdate ipgapi transactionresult declined ipgapi transactionresult ipgapi terminalid ipgapi processorresponsecode ipgapi processorapprovalcode ipgapi processorreceiptnumber ipgapi processortracenumber ipgapi ipgapiorderresponse detail possible explanation one possible explanation tried void credit card transaction different payment transaction type detail ipgapi ipgapiorderresponse xmlns ipgapi http ipg online com ipgapi schemas ipgapi ipgapi commercialserviceprovider ipgapi transactiontime 1234346305732 ipgapi transactiontime ipgapi processorreferencenumber ipgapi processorresponsemessage ipgapi errormessage sgs 032000 unknown processor error occured ipgapi errormessage ipgapi orderid ipgapi request b3223ee5 156b 4d22 bc3f 910709d59202 ipgapi orderid ipgapi approvalcode ipgapi avsresponse ipgapi tdate 1234346284 ipgapi tdate ipgapi transactionresult declined ipgapi transactionresult ipgapi terminalid ipgapi processorresponsecode ipgapi processorapprovalcode ipgapi processorreceiptnumber ipgapi processortracenumber ipgapi ipgapiorderresponse detail explanation transactions normally executed one pos sible explanation number terminal ids assigned store suffici ent transaction volume please contact sales team order terminal id load balancing troubleshooting login error messages using c url connect \\( \\) test ipg online com port 44 3 \\( 0 \\) trying 217 73 32 55 connected connected test ipg online com \\( 217 73 32 55 \\) p ort 443 \\( 0 \\) unable set private key file 'c api config ws 120666668 1 key' type pem closing connection 0 curl \\( 58 \\) unable set private key file 'c api config ws120666668 1 key' type pem explanation keystore password fit check used right keystore password please check used ws storeid 1 pem file append cer f ile name open certificate double click certi ficate must exposed store please remove extension cer check ssl certificate problem verify ca cert ok details error 14090086 ssl routines ssl3 get server certifi cate certificate verify failed closing connection 0 curl \\( 60 \\) ssl certificate problem verify ca cert ok details error 14090086 ssl routines ssl3 get server certifi cate certificate verify failed details http curl haxx se docs sslcerts html curl performs ssl certificate verification defau lt using bundle certificate authority \\( ca \\) public keys \\( ca certs \\) default bundle named curl ca bundle crt specify alternate file using cacert option https server uses certificate signed ca represented bundle certificate verification probably failed due problem certificate \\( might expired name might match domain name url \\) 'd like turn curl 's verification th e certificate use k \\( insecure \\) option explanation truststore certificate wrong please verify trustore append cer file name geotrust pem open certificate double click see issuer equifax please change name geotrust pem cer est back geotrust pem html head title apache tomcat 5 5 20 error report title style h1 font family tahoma arial sans serif color white background color 525d76 font size 22px h2 font family tahoma arial sans serif color white background color 525d76 font size 16px h3 font family tahoma arial sans serif color white background color 525d76 font size 14px body font family tahoma arial sans serif color bla ck background color white b font family tahoma arial sans serif color white background color 525d76 p font family tahoma arial sans serif background w hite color black font size 12px color black name color black hr color 525d76 style head body h1 http status 401 h1 hr size 1 noshade noshade p b type b status report p p b message b u u p p b description b u request requires http authentication \\( \\) u p hr size 1 noshade noshade h3 apache tomcat 5 5 20 h3 body html explanation certificates ok accepted pass word user wrong troubleshooting login error messages using java client java io ioexception keystore tampered password incorrect explanation keystore password fit keystore truststore password truststore check password key tool component jdk find bin directory jdk fo r testing password call c programme java jdk1 6 0 07 bin keytool exe list v keystore keystore truststore storepass keystore truststore password javax net ssl sslhandshakeexception sun security v alidator validatorexception trusted certificate found explanation truststore wrong inspect trus tstore keytool component jdk call c programme java jdk1 6 0 07 bin keytool exe list v keystore truststore storepass truststore password must find issuer equifax ou equifax secure certificate authority equifax c us output check md5 sha1 values html head title apache tomcat 5 5 20 error report title style h1 font family tahoma arial sans serif color white background color 525d76 font siz e 22px h2 font family tahoma arial sans serif color white backgrou nd color 525d76 font size 16px h3 font family tahoma arial sans serif color white background color 525d76 font size 14px body font family ta homa arial sans serif color black background color white b font family tahoma arial sans serif color white backgrou nd color 525d76 p font family tahoma arial sans serif background whi te color black font size 12px color black name color black hr color 525d76 style head body h1 http status 401 h1 hr size 1 noshade noshade p b type b status report p p b message b u u p p b description b u request requires http authentication \\( \\) u p hr size 1 noshade noshade h3 apache tomcat 5 5 20 h3 body html explanation user id password wrong 2009 first data rights reserved", 
    "descr1": "06 22 2009 first data global gateway api user manual version 1 1 06 22 2009 table contents 1 introduction 4 1 1 api 5 1 1 1 payment process 5 1 2 requirements 6 1 3 openssl 9 1 4 curl 9 1 4 1 installing curl 10 1 5 settings 10 1 5 1 email 10 1 5 1 1 customizing email footer 10 1 5 2 processing transactions nually 10 1 6 support 11 1 6 1 faq 11 1 6 2 contact information 11 2 transactions 12 2 1 transaction types 12 2 2 sending transa ctions 13 2 3 shipping calculator 14 2 3 1 creating zone type lines 14 2 3 2 calculation method 15 2 3 3 assigning ranges 15 2 3 4 creating zone definition lines 15 2 3 5 calculating shipping charges 16 2 4 tax calculator 17 2 4 1 calculating taxes 17 2 5 check transactions 18 2 5 1 e commerce transactions 18 2 5 2 telephone der transactions 19 3 entities data fields 20 3 1 billing entity 20 3 2 shipping entity 23 3 3 transaction details entity 25 3 4 order options entity 28 3 5 payment entity 28 3 6 credit card entity 29 3 7 telecheck entity 31 3 8 periodic entity 33 3 9 merchant info entity 34 3 10 items entity 34 3 10 1 example items entity 35 3 11 option sub entity 35 3 12 es entity 36 3 13 u state codes 36 3 14 country codes 37 4 minimum required fields 44 4 1 credit card transaction 44 4 1 1 xml stream 45 4 2 check transaction 45 4 2 1 xml stream 46 4 3 calculate shipping 47 4 3 1 xml stream 47 4 4 calculate sales tax 48 4 4 1 xml stream 48 06 22 2009 4 5 recurring credit card transaction 49 4 5 1 xml stream 49 4 6 level 2 purchasing card transaction 50 4 6 1 xml stream 51 4 7 avs card code 51 4 7 1 xml stream 52 5 response fields 53 5 1 response examples 53 5 1 1 approved xml res ponse 53 5 1 2 declined xml response 53 5 2 errors 54 5 2 1 fraud error checks 54 5 2 2 payment handler interface 54 5 3 credit card errors 55 5 4 customer information errors 56 5 5 fraud block messages 56 5 6 error messages 57 5 6 1 connection errors 57 5 6 2 errors 58 5 7 shipping calculation errors 59 5 8 tax calculation errors 60 5 9 telecheck errors 60 5 9 1 othe r telecheck messages 63 6 testing 64 6 1 test store policy 64 6 2 support 64 6 3 going live 64 6 4 passwords 64 6 5 settin g test account 65 6 5 1 linkpoint select api 65 6 5 2 downloading software 66 6 6 testing live account 66 6 7 test credit cards 66 6 8 test responses 66 7 fraud protection 68 7 1 avs codes 68 7 1 1 avs codes 69 7 1 2 avs code definitions 69 7 2 card codes 70 7 2 1 using card code 71 7 2 2 card code definitions 71 7 3 blocking limiting 71 7 3 1 fraud settings 71 glossary 73 firstdata com 4 1 introduction first data global gateway api \\( api \\) application programming interface application progr amming interface consists several classes sets related functions procedures first data global gateway api collection functions securely processing payment transactions internet api offers merchants simple payment olution helps connect online store secure payment gateway secure sockets layer \\( ssl \\) protection merchants begin payment processing within 24 hours setting api contact sales representative set first data globa l gateway api using secure sockets layer \\( ssl \\) version 3 0 api provides following data encryption server authentication message integrity optional client authentication ssl protocol developed netscape provide secure transmiss ion private information sent internet process prevents data compromised ssl protocols use public private key pairs encrypt data public key distributed merchant internet service providers \\( isp \\) commerce service providers \\( csp \\) form digital certificate digital certificate contains information verify key holder identity key validity private key kept confidential remains secure payment gatew ay server data encrypted private key public key decrypt api supports following languages choose language want use api c c com object technology \\( allows develop visual bas ic vbscript asp \\) php perl java tm macromedia coldfusion net sample code following languages c com object technology java net c firstdata com 5 coldfusion net visual basic php perl th e sample code go following url http www firstdata com support software downloads global gateway api download htm 1 1 api use api software modules build payment solution n eeds api contains following modules payment module shipping calculator module tax calculator module telecheck module recurring payments module credit card payments managed using payment module telecheck tran sactions managed using telecheck module integrate payment module web site payment details processed automatically review transaction activity visiting first data global gateway virtual terminal 1 1 1 payment process following steps describe payment process api 1 customer purchases items online store 2 order information sent api payment module secure sockets layer \\( ssl \\) pipeline secure payment gateway 3 secure payment gateway transmits order payment information credit card processing network secure line receives response within 6 seconds customer review transaction results 4 customer reviews receipt page confirms details approved credit card transaction 5 merchant reviews online orders logging first data global gateway virtual terminal transaction data downl oaded imported merchant 's order management database firstdata com 6 1 2 requirements requirements using api depend language use following languages need install openssl libraries shared objects web servers c c c com object technology net technology java openssl libraries libssl libcrypto using hp ux file extension openssl libraries sl java quirements java need convert pem file pkcs12 format run following command command prompt window openssl pkcs12 export yourpem pem inkey yourpem pem yourpem p12 passout pass yourpass name yourname yourpem name pem file yourpass password yourname name example openssl pkcs12 export 1234567 pem inkey 1234567 pem 1234567 p12 passout pass 987654321 name first data global gateway output p12 file pa ssword used parameters problem converting pem file please contact support perl requirements perl choose one following options 1 use curl openssl option use shared libraries p rovided perl module using curl default installation option curl installations use option must curl openssl available web server bsditm freebsd 3 3 hpux perl users use curl option shared libraries supported bsdi freebsd version 3 3 hpux perl 2 use provided shared libraries using curl option requires two shared libraries lpbspssl liblphp installed firstdata com 7 openssl built shared object support web server option recommended users admin privileges web server php requirements php choose one following options 1 build xml string yoursel f send directly secure payment gateway option requires php version higher 4 0 2 curl support compiled php \\( default setup red hat linux server installations \\) option use php modu le build xml string need manage xml output option demonstrated php sample program pass xml direct php 2 use curl \\( openssl \\) along lphp php module use option older versions php php compiled support curl object accepts either hash style input xml 3 use php built curl methods along lphp php module easiest option use requires php version higher 4 0 2 curl suppo rt compiled php \\( default setup red hat linux server installations \\) option accepts either hash style input xml 4 use lphp php module provided shared libraries openssl option requires provided sha red libraries libspssl liblphp installed openssl libraries built shared object support web server option uses lphp php module accept either hash style input xml recommended users admin privileges server install shared libraries freebsd 3 3 php users attempt use shared libraries option shared libraries supported freebsd 3 3 php 5 build xml stream send th rough curl shared libraries provided php module option requires provided shared libraries libspssl liblphp installed openssl libraries built shared object support web server op tion demonstrated php sample program pass xml lib php determine whether php curl support installed enter command php command prompt window use curl windows platform follow steps complete php ins tallation 1 notepad open file php ini located winnt folder 2 remove semicolon following line extension php curl dll 3 copy php curl dll c php 4 verify curl works php following open notepad b copy paste script file script phpinfo \\( \\) \\? firstdata com 8 5 save file local web directory phpinfo php 6 type following url web browser http localhost phpinfo php 7 look word curl page displayed coldfusion require ments coldfusion requires following coldfusion server running windows operating system access process \\( cfobject \\) administrator rights configure server installing coldfusion 1 copy ssleay32 dll libeay32 dll root system32 irectory \\( c winnt system32 \\) 2 copy lpicom 6 0 dll root system32 directory \\( c winnt system32 \\) 3 register lpicom 6 0 dll file \\( regsvr32 c winnt system32 lpicom 6 0 dll \\) use sample code provided following web site http www fi rstdata com support software downloads global gateway api download htm samples rely following templates process correctly loaded directory config inc file needs modified reflect accou nt specific information b formatoutput cfm file contains formatted table output return variables ease reading c lpcfm cfm file builds xml sent edit file status cfm file processes tran sactions sets responses output edit file files uploaded server process sample files included sample form input output use sample sale htm relies sample sale cfm process note easily remove formatoutput cfm replace output results format available return variables listed include call found end sample script except shipping cfm whic h rely file response variables returned r approved contains transaction response r code contains approval code approved transaction r error contains error message failed transaction r ordernum contains order number enter order number returned enter order number secure payment gateway return one r time contains time date transaction r ref contains order ference number firstdata com 9 r avs contains address verification system code r message contains order message r apiversion contains version cuff wrapper 1 3 openssl openssl open source software pr ovides following encryption decryption ssl communications digital signature capabilities information see openssl web site http www openssl org obtaining openssl 1 make sure secure web server using latest rsion openssl installed shared libraries 2 openssl installed download source code http www openssl org source 3 follow instructions installing following sites api software wrappers http www firstdata com support software downloads global gateway api wnloads htm global gateway manuals http www firstdata com support manuals guides global gateway htm 4 make sure root permissions web server use openssl openssl required use api required files operating system listed migration step step instructions located following site http www firstdata com support software downloads global gateway api download htm 1 4 c urls curl tool transferring files using url syntax curl open source code supports range common internet protocols including http https ftp ftps gopher firstdata com 10 ldap dict telnet file use curl following operating systems un ix windows amiga beos os 2 os x qnx 1 4 1 installing curl 1 correct version curl installed download appropriate curl binaries source code following site http curl haxx se downl oad html 2 install curl following installation instructions web site listed 3 choose use source code make sure install openssl first curl enable ssl installation 1 5 sett ings 1 5 1 email order processed successfully system automatically sends merchant customer email receipt receipt comes gateway linkpt net feature isabled disable customer merchant email receipts function call support 1 888 477 3611 1 5 1 1 customizing email footer option include text end customer e mail receipt want use feature save text want file named contact txt using text editor email file support store number 1 5 2 processing transactions manually process transactions manually \\( keying information \\) use virtual point sale terminal available first data global gateway virtual terminal log first data global gateway virtual terminal display virtual term inal page reach page time click virtual terminal main menu bar virtual terminal page enter information transaction firstdata com 11 post authorize several transactions simultaneously using reports section th e first data global gateway virtual terminal learn using first data global gateway virtual terminal clicking support main menu bar first data global gateway virtual terminal user manual 1 6 support first data global gateway api variety support options products including searchable online help files user manuals frequently asked questions \\( faqs \\) email telephone support questions mer chant account please contact merchant account provider would like purchase first data global gateway products services please contact authorized reseller information please visit www firstdata com ecommerce e xperiencing issues gateway account please consult gateway status page see issue processed http www firstdata com global gateway gateway status htm 1 6 1 faq helpful list faqs fo r product faqs located following site http www firstdata com support faq global gateway htm 1 6 2 contact information read documentation consulted gateway status page cannot find answer question contact support globalgateway support firstdata com 1 888 477 3611 firstdata com 12 2 transactions secure payment gateway uses xml describe transaction xml usual ly generated first data global gateway api option generate xml send secure payment gateway xml format process transaction api connects secure payment gateway using ssl protocols api sends transaction form xml request waits response response form response contain set response fields may vary depending type transaction requested whether transaction su ccessful xml request includes various entities provide server inputs function performed entities required transaction others optional specific particular transaction types see e ntities data fields page 20 information entities fields required transaction type 2 1 transaction types important u nderstand terminology processing transactions use appropriate transaction type orders returns chargeback fraud addition merchant prevent fraud money associated transaction transfer account batch transactions day first settled \\( also called closing batch \\) automatically occurs default 7 00 pm \\( pst \\) transaction types name description sale sale transact ion credit card transaction immediately charges customer 's credit card also create recurring sale transaction process specified dollar amount specified intervals referred periodic bill sale transaction made recurring entry sale transaction approved authorize credit card transaction reserves funds customer 's credit card authorize transaction charge card perform ticket transaction confirm shipment order note authorizations reserve funds varying periods depending issuing credit card company 's policy period may little three days long several months protection recommended confirm shipment soon possible authorization firstdata com 13 transaction types name description ticket ticket transaction post authorization transaction captures funds authorize transaction reserving funds amount specified funds transferred batch transactions settled enter larger total ticket transaction specified authorize transaction ticket transaction ay declined enter smaller amount authorized adjustment made transaction ticket transactions must completed within 30 days authorization obtained forced ticket forced ticket transaction credit card transaction used similarly ticket transaction except specifically authorizations obtained phone requires reference number \\( approval code \\) received phone authorization return system perform return need order number ca n find reports perform return full order amount order appear reports transaction amount 0 00 credit rder number transaction intended returns orders processed outside system void void transaction cancels transaction transactions current batch \\( sent settlement \\) voided 2 2 sending transactions send transaction secure payment gateway follow steps 1 create instance linkpointtransaction object 2 build xml request directly using lporderpart object build xml fragments combine complete order 3 use linkpointtransaction send \\( \\) method send transaction secure payment gateway processing 4 evaluate values returned response entity errors wil l returned r error field build xml requests need determine entities fields required transaction information entities data fields include transaction included entities data f ields section see entities data fields page 20 look information payment gateway responses error messages response fields section see response fields page 53 firstdata com 14 2 3 shipping calculator shipping calculator set rules calculating shipping charges use shipping calculator module n eed create shipping carrier file secure payment gateway server create shipping file send support along store number shipping calculator uses shipping address information sent shipp ing entity along appropriate pricing data defined shipping file calculate charges shipping file plain text file consisting sets code called zone type zone definition lines example lines might app ear shipping file shown zone type line zone definition line zone definition line zone type line zone definition line fields within types lines go together define shipping charges zone type line describes general shipping scheme whether costs based item count weight price zone definition line gives specific parameters pricing element pricing scheme one zone definition lines must immediately follow zone ype line use zone definition lines set shipping prices based specific geographic areas types carriers determine price breaks occur fields within line code separated double colons fields multiple values use commas \\( countries states \\) single colons \\( range definitions prices \\) zone type line formatted three fields tag name calculation code merchant created range definitions zone type calculation method range1 range2 create many zone type lines need business use separate zone type line different shipping cost calculations total weight total cost order separate freight air transport carrier methods division world shipping zone prices 2 3 1 creating zone type lines create zone type lines 1 enter following tag name zone type line must precede two colons zone type firstdata com 15 2 determine charge custo mers shipping products enter applicable code number tag name followed double colons spaces zone type 1 zone type 3 3 create quantity ranges share common pricing enter range followed single colon r comma zone type 1 1 3 4 5 6 zone type 3 1 24 25 50 51 2 3 2 calculation method five choices calculating shipping charges select applicable calculation methods business en ter code number tag name zone type line method description 1 charges based total number items 2 charges based item totaled 3 charges based total weight order 4 charges bas ed weight item totaled 5 charges based total price order 2 3 3 assigning ranges range defined value set values representing items within predetermined c ategory use shipping charge range single number two numbers separated hyphen number followed plus sign specify infinite number ranges number ranges zone type line must correlate ex actly number prices zone definition lines following restrictions apply range definitions must contiguous cannot skip numbers range definitions must start integer 1 last range defined line must end wi th zone definition line specifies data required preceding zone type line code several fields specific business including zone name shipping carrier code shipping cost codes range see exa mple zone name country carrier range cost range cost 2 3 4 creating zone definition lines create zone definition lines 1 enter zone name shipping situation followed two colons northamerica firstdata com 16 2 select applicable countries zone name followed double colons use two digit country codes see country codes page 37 northamerica us mx ca u enter applicable two letter state code country code followed two colons westcoast us ca wa hi 3 determine different shipping methods business enter one merchant defined shipping carrier co de northamerica us mx ca 1 4 determine shipping cost range specified zone type line enter applicable shipping cost followed colon comma zone type 1 1 3 4 5 6 northamerica us mx ca 1 25 40 75 note shipping cost value zone definition line must match range zone type line determine zone name zone definition line name alphabetic string containing less 20 letters cannot include blank spaces offer different types shipping courier overnight two day ground transport zone definition line list shipping carrier option form integer allow charge different amounts premium shipping ervices zone definition contains actual charges shipping items range specified preceding zone type merchants determine charges products following rules apply creating zone definition code shipping internationally u state codes zone definition line ignored shipping prices u states need name states individually exceptions shipping ak hi ou define zone include remaining states non specific u zone number zone definition lines may follow zone type line zone name range charges must values fields blank shipping calculator looks shipping file match blank field carrier type treated match 2 3 5 calculating shipping charges shipping entity data structure used convey shippin g address price weight item count carrier type data shipping calculator computing shipping charge calculate shipping charges rdertype field set c alcshipping shipping computation based numbe r items weight carrier order total firstdata com 17 calculate shipping charges enter appropriate information \\( shipping calculation method \\) shipping entity also enter state country although country default u entered calculated value shipping charges returned r shipping tag going include shipping amount order amount submit approval must transfer shipping amount secure payment gateway set value shipping data field payment entity calculated shipping charges order 2 4 tax calculator tax calcul ator module calculates state municipal sales tax use tax calculator module create fulltax line configuration file secure payment gateway need send fulltax line support order load secure paym ent gateway fulltax line provides information needed tax module calculate sales tax order line includes entries states sales tax must charged entries separated comma may followed space example fulltax tx 8 25 al 7 00 fl 7 00 ut mun entries list consist two digit code state followed space tax rate charged state see u state codes page 36 state codes tx 8 25 tax includes municipal tax listing two digit state code followed mun ut mun municipal taxes calculated according salestax txt file secure payment gateway server salesta x txt file updated monthly ensure accuracy 2 4 1 calculating taxes calculate sales tax rdertype field set c alctax tax computation based shipping state shipping z ip code use state zip code area shipping product shipping state present shipping zip code secure payment gateway return error pass \\( enter \\) shipping state zip code secure payment gateway uses billing state zip code basis tax computations calculated value sales tax returned r tax tag must transfer tax amount secure payment gateway nclude order regardless use api tax calculator another method make sure set value tax data field payment entity calculated sales tax charges order firstdata com 18 2 5 check transactions telecheck way process automated clearing house \\( ach \\) transactions using internet ach transactions debit customer 's account transfer funds merchant 's account enable telecheck contact merchant ser vice provider rules apply initiating debit customer 's bank account rules established maintained national automated clearing house association \\( nacha \\) published periodically ach rules complete guide rules regulations governing ach network view rules http www nacha org merchant 's responsibility understand abide published rules regulations rules authorization differ depending whether transaction e commerce retail mail order telephone order check transaction real time response provided telecheck whether check accepted based response telecheck transaction either marked submitted declined check declined credit reasons message appear information customer including phone number customer call questions occurs must give nformation word word customer check submitted successfully transaction status submitted error occurred reason error appear error due data entry may opportuni ty enter data error message sorry cannot accept check time decision based whole part information provided us telecheck encourage call telecheck 1 877 678 5898 write tele check customer care p box 4513 houston tx 77210 4513 please provide telecheck driver 's license number state issued complete banking numbers printed bottom check fair credit reporting ct right free copy information held telecheck 's files within 60 days today may also dispute accuracy completeness information telecheck 's customer report telecheck ake adverse decisio n accept check unable explain decision made 2 5 1 e commerce transactions processing e commerce check transactions merchant must obtain electronic authorization customer debit account merchant web site system submits payment processing must present customer authorization form consent language displayed along authorize cancel buttons firstdata com 19 author ize button continues processing transaction cancel button discontinues processing check transaction authorization form must include erchant 's dba name mount transaction ate customer 's account debited ate th e customer 's authorization erchant 's customer service phone number consent language stating customer authorizing merchant debit customer 's bank account authorize button cancel button 2 5 2 telephone order transactions requirements telephone order include information consent language retail mail order transactions difference merchant option tape record customer 's aut horization retain recording proof authorization period four years oral authorization valid merchant must state clearly customer authorizing ach debit entry account express terms th e authorization clear manner merchant recording conversation merchant must send written notification customer confirming verbal authorization prior settlement api email receipts fulfill requirement send w ritten notification merchant chooses use api email receipts notification must include following information erchant 's dba name account debited ate customer 's authorization merchant 's custome r service phone n umber consent language similar sample verbal authorization telephone order transactions amount insert amount withdrawal processed using regular banking system payment returned unpaid charged returned item fee maximum allowed law questions time may call us insert merchant customer care phone number business hours authorize transaction \\? \\( please answer yes \\) firstdata com 20 3 entities data fields table shows xml entities used transaction type function xml entity credit card transaction recurring credit card transaction telecheck transaction shipping calculation sales tax calculation merchantinfo required required required required required orderoptions required requ ired required required required transactiondetails optional optional optional optional optional payment required required required required required creditcard required required n n n telecheck n n required required n shipping optional opt ional optional required required billing required optional required n n periodic n required n n n items optional optional n n n option optional optional n n n notes optional optional optional n n 3 1 billing entity billing entity contains 13 data fields following table shows data fields billing entity using following languages billing fields preceded lower case b bzip zip asp net visual basic net c field name field length characters descriptio n required example name string 96 numbers letters \\( symbols \\) customer 's name required avs fraud blocking name joe customer name company string 96 numbers letters \\( symbols \\) company name company somewhere inc company firstdata com 21 field name field length characters descriptio n required example address1 string 96 numbers letters \\( symbols \\) first line customer 's billing street address required e co mmerce telephone mail order transactions required telecheck telephone web transactions address1 123 broadway address1 address2 string 96 numbers letters \\( symbols \\) second line customer 's billing address address2 suite 23 address2 city string 96 numbers letters \\( symbols \\) billing city required telecheck telephone web transactions city moorpark city state string 96 numbers letters \\( symbols \\) u tate billing address use 2 letter state code u states international addresses use field province territory applicable required e commerce moto transactions required telecheck telephone web tra nsactions state ca state zip string 5 numbers \\( symbols spaces \\) billing zip postal code required telephone mail order transactions \\( moto \\) required telecheck telephone web transactions zip 87123 zip country 2 letter country code billing country may required post authorization transactions country us country firstdata com 2 2 field name field length characters descriptio n required example phone string 32 numbers letters \\( symbols spaces \\) billing phone number number contain dashes exam ple 180047736 11 required e commerce telephone mail order transactions required telecheck telephone web transactions phone 8051234567 phone fax string 32 numbers letters \\( symbols spaces \\) fax number numbe r contain dashes example 180047736 11 fax 8885551212 fax email string 64 numbers letters \\( symbols spaces \\) email address required want send customer email receipt email joe customer somewher e co email addrnum string 96 numbers numeric portion street address required e commerce telephone mail order transactions required telecheck transactions addrnum 1245 addrnum userid string 32 number letters \\( symbols spaces \\) userid field optional custom field track customers userid customer1 userid firstdata com 23 3 2 shipping entity table describes data field shipping entity using following languages shipping fields preceded lower case sname name perl php asp net visual basic net c see shipping calculator page 14 information shipping methods field name field length characters description required example name 96 numbers letters \\( symbols \\) name person order shipped name joe customer name addr ess1 96 numbers letters \\( symbols \\) shipping address cannot spaces address1 123 broadway address1 address2 96 numbers letters \\( symbols \\) second line shipping address address2 suite 23 address2 city 96 numbers letters \\( symbols \\) shipping city cannot spaces city moorpark city state string 96 numbers letters \\( symbols \\) u state shipping address use 2 letter state code u states f international addresses use field province territory applicable required shipping tax calculations state ca state zip 5 numbers \\( symbols spaces \\) shipping zip postal code zip 87123 zip country 2 letter country code country shipping address international addresses supported telecheck orders may required post authorization transactions country us country firstdata com 24 field name field length characters description required example phone 32 numbers letters \\( symbols r spaces \\) phone number person order shipped phone number cannot include spaces dashes example 8884773611 phone 8051234567 phone email 64 numbers letters \\( symbols spaces \\) email address customer order shipped email joe customer somewhere co email weight decimal numbers total weight order shipped field used shipping calculation method based total weigh order required shipping methods 3 4 weight 5 0 weight items decimal numbers total number items order field used shipping calculation method based number items order required fo r shipping methods 1 2 4 items 3 items carrier integer numbers carrier shipping order ground overnight field used merchant specifying carrier merchant assign integer values carrier required merchant using carrier types carrier 2 carrier total numbers 12 2 decimal places order total shipping charges added required shipping method 5 total 5 00 total firstdata com 25 3 3 transaction details entity purpose transactiondetails entity communicate general information payment transaction table describes data field transactiondetails entity field name field length characters description required example transaction origin 10 letters numbers source transaction possible values eci \\( order received via email internet \\) moto \\( mail orde r telephone order \\) telephone \\( telephone order \\) retail \\( face face \\) credit card transactions mail order telephone order transactions treated however telecheck transactions internet orders email orders mail orders nd telephone orders treated differently merchant take care identify separately required e commerce retail mail telephone orders defaults eci transactionorigin ret ail transactionorigin firstdata com 26 field name field length characters description required example oid 100 numbers letters including dashes underscores symbols order id assigned transaction sale pre authorization transactions field must unique void credit post authorization transactions field ust valid order id prior sale pre authorization transaction forced ticket \\( post authorization transaction authorization given phone \\) oid field required reference number field required required credit card void credit post authorization transactions oid order1234 oid taxexempt 1 letter indicator field representing whether order tax exempt values n required level 2 purchasing card transactio ns taxexempt taxexemp ponumber 128 letters numbers purchase order number department number customer supplied number transaction value supplied customer required level 2 purchasing card tran sactions ponumber 123456 ponu mber invoice number 48 numbers letters \\( symbols spaces \\) invoice number required level 2 purchasing card transactions invoice number 123455 64 invoice number firstdata com 27 field name field length characters description required example terminaltype 32 characte rs type terminal sending transaction set value standalone point sale credit card terminal pos electronic cash register integrated pos system unattended self service station unspecified e c ommerce general crt applications required retail transactions card present terminaltype pos ter minaltype ip 254 numbers letters \\( symbols spaces \\) ip address consumer required needed fraud blocking ip address ip 127 0 0 1 ip reference nu mber 128 letters numbers used forced ticket transactions reference number obtained phone set reference number value word new \\( caps \\) fo llowed reference number given phone example reference number given phone 123456 would set reference number new123456 required forced ticket transactions reference number new1 23456 reference nu mbe r recurring letters flag indicate whether transaction recurring transaction transaction recurring \\( merchant using recurring processor provided \\) flag must set yes recurr ing yes recurr ing firstdata com 28 field name field length characters description required example tdate 32 numbers field returned every successful transaction need run void transaction existing order id may need pass tdate field identify specific transacti want void tdate 1195175793 tda te 3 4 order options entity rderoptions entity contains specific instructions process order table de scribes data field rderoptions entity field name field length characters description required example ordertype letters type transaction possible values sale preauth \\( authorize transaction \\) postauth \\( forced ticket ticket onl transaction \\) void credit calcshipping \\( shipping charge calculations \\) calctax \\( sales tax calculations \\) yes ordertype sale ordertype result 15 letters numbers field puts account live mode test mode set live live mode good approved response test mode decline declined response test mode duplicate duplicate response test mode result live result 3 5 payment entity pay ment entity contains transaction totals table describes data field payment entity field name field length characters description required example subtotal numbers 14 2 decimal places transaction subtotal shipping tax subtotal 12 99 subtotal firstdata com 29 field name field length characters description required example tax numbers 14 2 decimal places sales tax dollar amount required level 2 purchasing card transactions tax 1 00 tax vattax numbers 14 2 decimal places amo unt vat \\( typically tax vattax used \\) tax sometimes applied international orders vattax 1 00 vattax shipping numbers 14 2 decimal places shipping charge dollar amount shipping 1 02 shipping charget otal numbers 14 2 decimal places total dollar amount transaction including subtotal tax shipping yes chargetotal 10 00 chargetotal 3 6 credit card entity credit card entity contains details credit card order table describes data field creditcard entity field name field length characters description required example cardnumber 48 numbers customer 's credit card number requ ired credit card transactions track provided cardnumber 4111111111111111 cardnumber cardexpmon th 2 digit number 01 12 numeric expiration month credit card required credit card transactions track provided cardexpmonth 01 cardexpmont h cardexpyear 2 digit number 00 99 two digit expiration year credit card required credit card transactions track provided cardexpyear 10 cardexpyear firstdata com 30 field name field length characters description required example track string contains data swip ed credit card track 1 track 2 required credit card transactions cardnumber cardexpmont h cardexpyear provided track b4012000033330026 fdm test card visa 051210054321 00000000000000 150a \\? 4012000033330026 0512101100001 245678 \\? track cvmvalue 3 4 digit number 0000 9999 3 4 digit numeric value printed front back credit card number typically appears end signature panel visa mastercard discover cards th e front american express cards see card codes page 70 information required recommende fraud prevention cvmvalue 123 cvmvalue cvmindicato r letters numbers indicate whether card code supplied possible values provided provided illegible present imprint yes cvmindicator provided cvmin dicator cavv 28 letters numbers authenticate value required verified visa mastercard securecod e protection value returned firstdata mpi required recommend chargeback protection cavv ja2nissbmbqsareacxu1m1n 53fs cavv eci 2 digits electronic commerce indicator value returned firstdata mpi required recomme nd chargeback protection eci 02 eci firstdata com 31 field name field length characters description required example xid 28 letters numbers authenticate value required verified visa mastercard securecode protection value returned firstdata mpi required recommend chargeback protection xid 8mcgbxm9ucyf5i jydwt8tlt pue xid 3 7 telecheck entity telecheck entity contains information required telecheck process check payment table describes data field telecheck entit field name field length characters description required example account 18 numbers customer 's bank account number yes account 1234567 account routing 9 numbers transit routing number customer 's bank yes routing 123456 routing checknumber 6 numbers check number customer 's check telecheck transaction use check number customer still use paper check another purchase checknumber 1234 checknumbe r bankname 40 numbers letters \\( symbols \\) name customer 's bank yes bankname bank america bankname bankstate string 96 numbers letters \\( symbols \\) state customer 's bank located use 2 letter state code u states international addresses use field province territory applicable yes bankstate ca bankstate firstdata com 32 field name field length characters description required example dl 24 numbers letters \\( symbols spaces \\) customer 's driver 's license number state issued id card number required web telephone transactions dl a12345678 dl dlstate string 96 numbers letters \\( symbols \\) use 2 letter state code u states international addresses use field province territory applicable required web telephone transactions dlstate ca dlstate void integer 1 number void unsettled check enter 1 tag otherwise include data field required void transactions void 1 void accounttype 4 letters numbers type account used purchase possible values pc personal checking ps personal savings bc business checking bs business savings yes accountt ype pc accounttype ssn 24 numbers letters \\( symbols spaces \\) social security number customer ssn 123456789 ssn firstdata com 33 3 8 periodic entity periodic entity used recurring sale tr ansactions table describes data field periodic entity field name field length characters description required example action letters numbers indicates action take regarding periodic transaction possible va lues submit \\( submit recurring transaction processing \\) modify \\( edit previously submitted recurring transaction \\) cancel \\( cancel previously submitted recurring transaction \\) yes action submit action installments integer 0 99 identifies many recurring payments charge customer yes installments 50 installments threshold integer 1 5 indicates many times retry transaction \\( fails \\) contacting merchant threshold 3 thres hold periodicity letters numbers indicates often charge payment possible values daily monthly yearly use code xn x day month year n integer 1 99 example m3 indicates charge customer every 3 months required recurring transactions periodicity m1 periodicity startdate numbers specifies date begin charging recurring payments format yyyymmdd yyyy four di git year mm two digit month dd two digit day example 20070910 september 10 2007 want start payments immediately set tag immediate yes startdate 20081107 startdate firstdata com 34 field name field length characters description required example comments 100 numbers letters ncluding dashes underscores symbols space enter optional comments transaction comments repeat customer comments 3 9 merchant info entity merchantinfo entity contains etails merchant entity required every transaction function using secure payment gateway table describes data field merchantinfo entity field name field length characters description required examp le configfile 20 numbers field contain merchant store name store number generally six ten digit number assigned account set test account store name may text string yes configfile 123456 co nfigfile keyfile letters numbers field contains path filename digital certificate \\( pem file \\) issued given store required api processing keyfile 10 0005 pem k eyfile host letters num bers url ip address secure payment gateway server information provided merchant 's welcome email required api processing host secur e linkpt ne host port integer numbers port appli cation uses communicate secure payment gateway required api processing port 1129 port 3 10 items entity items entity contains one item sub entities item sub entity contains seven data fields data fields used item sub entity listed table firstdata com 35 field name field length characters description required example id 128 numbers letters \\( symbols spaces \\) item id number yes id 123456 id description 128 numbers letters \\( symbols spaces \\) description item description logo shirt description price numbers 12 2 decimal places price item yes price 12 00 price quantity numbers quantity item include order yes quantity 1 quantity 3 10 1 example items entity example selling bowling related products might receive order li ke 1 2 shirts red xl 2 1 bowling ball weight 12 lb 3 1 ebook bowl describe order using items entity use order shown sample code items item description logo shirt description id 123456 id price 12 00 price quantity 1 quantity serial 0987654322 serial options option name color name value red value option option name size name value xl value option options item items 3 11 option sub entity item sub entity may contain option sub entity option sub entity contain two data fields data fields used option sub entity listed table firstdata com 36 field name field length characters description required example name 128 numbers letters \\( symbols \\) name option yes name size name value 128 numbers letters \\( symbols spaces \\) value option yes value xl value 3 12 notes entity notes entity contains optional comments transaction table describes data field notes entity field name field length characters description required example comment 1024 \\( 100 periodic bills recurring transactions \\) numbers letters including dashes underscores symbols optional comments transaction comments repeat customer comments referred 128 letters num bers intended merchants track customer referred url often passed field referred newsletter referred 3 13 u state codes passing value u state billing shipping entity must use two digit codes specified state code alabama al alaska ak arizona az arkansas ar california ca colorado co connecticut ct delaware de district columbia dc florida fl georgia ga hawa ii hi idaho id illinois il indiana firstdata com 37 state code iowa ia kansas ks kentucky ky louisiana la maine maryland md massachusetts michigan mi minnesota mn mississippi ms missouri mo montana mt nebraska ne nevada nv new hampshire nh new jersey nj n ew mexico nm new york ny north carolina nc north dakota nd ohio oh oklahoma ok oregon pennsylvania pa rhode island ri south carolina sc south dakota sd tennessee tn texas tx utah ut vermont vt virginia va washington wa wisconsin wi wes virginia wv wyoming wy 3 14 country codes whenever entering value country shipping billing entity must use following two letter abbreviations country code africa algeria dz firstdata com 38 country code africa benin bj b urkina faso bf burundi bi cameroon cm cape verde cv central african republic cf chad td comoros km congo cg cote d'ivoire ci djibouti dj equatorial guinea gq eritrea er ethiopia et egypt eg gabon ga gambia gm ghana gh guinea bissau gw ke nya ke lesotho ls liberia lr madagascar mg mali ml mauritania mr mayotte yt morocco mozambique mz malawi mw namibia na niger ne nigeria ng reunion st helena sh sao tome principe st senegal sn sierra leone sl somalia south frica za sudan sd swaziland sz tanzania tz togo tg uganda ug firstdata com 39 country code africa western sahara eh zaire zr zambia zm zimbabwe zw country code antarctica antarctica aq country code asia afghanistan af bangladesh bd bhutan bt brunei bn cambodia kh china cn hong kong hk india indonesia id japan jp kazakhstan kz kyrgyzstan kg laos la macau mo malaysia maldives mv mongolia mn nepal np pakistan pk philippines ph republic korea kr russia ru seychelles sc singapore sg sri lanka lk aiwan tw tajikistan tj thailand th turkmenistan tm uzbekistan uz vietnam vn firstdata com 40 country code australia american samoa australia au federated states micronesia fm fiji fj french polynesia pf guam gu kiribati ki marshall islands mh nauru n r new caledonia nc new zealand nz northern mariana islands mp palau pw papua new guinea pg pitcairn pn solomon islands sb tonga tuvalu tv vanuatu vu country code caribbean anguilla ai antigua barbuda ag aruba aw bahamas bs barbados bb bermuda bm british virgin islands vi cayman islands ky dominica dm dominican republic grenada gd guadeloupe gp haiti ht jamaica jm martinique mq netherlands antilles puerto rico pr st kitts nevis kn st lucia lc st vincent grenadines vc trinidad tobago tt turks caicos islands tc firstdata com 41 country code central america belize bz costa rica cr el salvador sv guatemala gt honduras hn nicaragua ni panama pa country code europe albania al andorra ad armenia austria azerbaijan az belarus belgium bulgaria bg croatia hr cyprus cy czech republic cz denmark dk estonia faroe islands ee faroe islands fo finland fi france fr georgia ge germany de gibraltar gi greece gr greenland gl hunga ry hu iceland ireland ie italy latvia lv liechtenstein li lithuania lt luxembourg lu malta mt metropolitan france fx moldova md netherlands nl firstdata com 42 country code europe norway poland pl portugal pt romania ro slovakia sk slovenia si spain es svalbard jan mayan islands sj sweden se switzerland ch former yugoslav republic macedonia mk turkey tr ukraine ua united kingdom gb vatican city va yugoslavia yu country code middle east israel il jordan jo kuwait kw lebanon lb oman om qata r qa saudi arabia sa syria sy united arab emirates ae yemen ye country code north america canada ca mexico mx united states us country code south america argentina ar bolivia bo brazil br chile cl colombia co ecuador ec firstdata com 43 country code south america falkland island fk french guiana gf guyana gy paraguay py peru pe suriname sr uruguay uy venezuela country code bahrain bh bouvet islands bv british indian ocean territory io firstdata com 44 4 minimum required fields transactions minimum required entities data fields minimum required entities data fields change depending type transaction information fields entities see entities data fields pa ge 20 following transaction types different minimum required fields complete transaction credit card transactions check transactions calculating shipping calculating sales tax recurring credit card transactions level 2 purchasing card tra nsactions avs card code fraud prevention 4 1 credit card transaction table shows minimum required entities data fields perform credit card transactio n transactions card present must include billing entity address verification \\( avs \\) information fields entities see entities data fields page 20 using following languages billing fields preceded lower case b bzip zip asp net visual basic net c minimum required fields credit card transaction field name entity configfile merchantinfo ordertype orderoptions chargetotal payment cardnumber creditcard cardexpmonth creditcard cardexpyear creditcard track creditcard oid transactiondetails reference number transactiondetails addrnum billing zip billing firstdata com 45 4 1 1 xml stream sample xml stream credit card transactions minimum required fields minimum required fields credit card sale order merchantinfo replace store number storename configfile 1234 567 configfile merchantinfo orderoptions ordertype sale ordertype orderoptions payment chargetotal 12 99 chargetotal payment creditcard cardnumber 4111 1111 1111 1111 cardnumber cardexpmonth 03 cardexpmonth cardexpyear 05 cardexpyear creditcard order 4 2 check transaction required fields telecheck transaction depend transaction type telecheck transaction types pre authorized telepho ne web orders information fields entities see entities data fields page 20 also specific rules apply type transaction see check transactions page 18 minimum required fields check transaction field name entity configfile merchantinfo ordertype orderoptions chargetotal payment account telecheck routing telecheck bankname telecheck bankstate telecheck dl telecheck dlstate telecheck void telecheck name billing address1 billing city billing state billing zip billing firstdata com 46 minimum required fields check transaction field name entity phone billing email billing transactionorigin transactiondetails 4 2 1 xml st ream sample xml stream telecheck sale transaction minimum fields minimum required fields telecheck sale order merchantinfo replace store number storename configfile 1234567 configfile merchantinfo orderoptions ordertype sale ordertype orderoptions payment chargetotal 12 99 chargetotal payment telecheck customer 's driver 's license dl state dl 120381698 dl dlstate ca dlstate transit routing number customer 's bank routing 123456789 routing customer 's bank account number account 2139842610 account business consumer \\( personal \\) account \\? personal pc business bc acco unttype pc accounttype account 2139842610 account bank name 2 letter bank state bankname mybank bankname bankstate ca bankstate telecheck billing name bill johnson name address1 123 broadway address1 city camarillo city state ca state zip 93010 zip phone 8051234567 phone email bjohnson somewhere com email billing transactiondetails required retail mail telephone orders transactionorigin telephone transactionorigin transactiondetails order firstdata com 47 4 3 calculate shipping table displays minimum required entities data fields calculate shipping charges calculate shipping charges need send information calculate shipping secure payment gateway create shipping file describes calculation method amounts charge several different shipping methods available contact support send shipping file secure payment gateway see shipping calculator page 14 information shipping files information fields entities see entities dat fields page 20 using following languages shipping fields preceded lower case sname name perl php asp net visual basic net c minimum required fie lds calculating shipping field name entity configfile merchantinfo ordertype orderoptions chargetotal payment state shipping weight shipping items shipping carrier shipping total shipping 4 3 1 xml stream sa mple xml stream shipping calculation minimum required fields minimum required fields calculate shipping charges order merchantinfo replace store number storename configfile yourstore configfile merchantinfo orderoptions ordertype calcshipping ordertype orderoptions shipping include factors needed shipping method carrier 1 carrier weight 2 00 weight firstdata com 48 items 2 items total 15 00 total state tx state shipping order 4 4 calculate sales tax table shows minimum required entities data fields calculate sales tax information fields entiti es see entities data fields page 20 using following languages shipping fields preceded lower case sname name perl php asp net visual basic n et c minimum required fields calculating sales tax field name entity configfile merchantinfo ordertype orderoptions subtotal payment state shipping 4 4 1 xml stream sample xml stream minimum required fi elds calculate sales tax minimum required fields calculate sales tax order order merchantinfo replace store number storename configfile yourstore configfile merchantinfo orderoptions dertype calctax ordertype orderoptions shipping carrier 1 carrier weight 1 000000 weight zip 91504 zip total 26 99 total state ca state shipping payment subtotal 26 99 subtotal payment order firstdata com 49 4 5 recurring credit card transaction table shows minimum required entities data fields perform recurring credit card transaction transactions card present ou must include billing entity address verification \\( avs \\) information fields entities see entities data fields page 20 using following languages billing fields preceded lower case b bzip zip asp net visual basic net c minimum required fields recurring credit card transaction field name entity configfile merchantinfo ordertype orderoptions chargetotal paym ent cardnumber creditcard cardexpmonth creditcard cardexpyear creditcard track creditcard action periodic installments periodic periodicity periodic startdate periodic addrnum billing zip billing 4 5 1 xml stream sample xml stream recurring credit card transaction minimum required fields minimum required fields credit card sale order merchantinfo replace store number storename configfile 1234567 configfil e merchantinfo orderoptions ordertype sale ordertype orderoptions payment chargetotal 12 99 chargetotal payment creditcard cardnumber 4111 1111 1111 1111 cardnumber firstdata com 50 cardexpmonth 03 cardexpmonth cardexpyear 0 5 cardexpyear creditcard periodic submits recurring transaction charging card 3 times month starting today action submit action installments 3 installments threshold 3 threshold n't want start today pass date format yyyymmdd startdate immediate startdate periodicity monthly periodicity periodic order 4 6 level 2 purchasing card transaction able shows minimum required entities data fields perform level 2 purchasing card transaction transactions card present must include billing entity address verification \\( avs \\) information fields entities see entities data fields page 20 using following languages billing fields preceded lower case b bzip zip asp net visual b asic net c minimum required fields level 2 purchasing card field name entity configfile merchantinfo ordertype orderoptions chargetotal payment tax payment taxexempt transactiondetails ponumber transactiondetails invoice number transactiondet ails cardnumber creditcard cardexpmonth creditcard cardexpyear creditcard track creditcard addrnum billing zip billing firstdata com 51 4 6 1 xml stream sample xml stream level 2 purchasing card minimum required fiel ds minimum required fields level 2 purchasing card sale order merchantinfo replace store number storename configfile 1234567 configfile merchantinfo orderoptions ordertype sale ordertype order options payment tax required purchasing cards tax 0 00 pass value 0 tax tax 0 32 tax chargetotal 47 32 chargetotal payment creditcard cardnumber 4111 1111 1111 1111 cardnumber cardexpmo nth 03 cardexpmonth cardexpyear 05 cardexpyear creditcard transactiondetails po number order pass department code value make sure value pass supplied customer ponumber 1203a g4567 ponumber purchase tax exempt pass value taxexempt taxexempt n taxexempt transactiondetails order 4 7 avs card code table shows minimum r equired entities data fields perform credit card transaction using address verification system \\( avs \\) card code avs card code results located r avs response field information fields entities see entities data fields page 20 using following languages billing fields preceded lower case b bzip zip asp net visual basic net c minimum required fields avs card code fraud prevention field name entity configfile merchantinfo ordertype orderoptions firstdata com 52 minimum required fields avs card code fraud prevention field name entity chargetotal payment cardnumber creditcard cardexpmonth creditcard cardexpyear creditcard track creditcard cvmvalue creditcard cvmindica tor creditcard oid transactiondetails name billing addrnum billing zip billing 4 7 1 xml stream sample xml stream avs card c ode fraud prevention minimum required fields minimum required fields f credit card transaction using avs card code fraud prevention order merchantinfo replace store number storename configfile 1234567 configfile merchantinfo orderoptions ordertype sale ordertype ord eroptions payment chargetotal 12 99 chargetotal payment creditcard cardnumber 4111 1111 1111 1111 cardnumber cardexpmonth 03 cardexpmonth cardexpyear 05 cardexpyear cvmvalue 123 cvmvalue cvmindicator provided cvmin dicator creditcard billing required address verification addrnum 123 addrnum zip 87123 zip billing order firstdata com 53 5 response fields secure payment gateway transaction engine return set response codes successful transaction response codes returned set xml tags preceded r following table represents possible response tags note error occurs response may contain r error tag although possible tags returned additional information available see errors page 54 information errors might receive 5 1 response examples 5 1 1 approved xml response r csp csi r csp r time mon oct 1 17 17 35 2007 r time r ref 0280908040 r ref r error r error r ordernum cda53434 4753453 255 13453 c r ordernum r message approved r message r code 00845302354353453 yyym 1005354353888 r code r tdate 1191280650 r tdate r authresponse r authresponse r approved approved r approved r avs yyym r avs 5 1 2 declined xml response r csp r csp r time mon oct 1 00 56 16 2007 r time r ref r ref r error sgs 000001 declined xxux r error r ordernum cda78c0b 47009a0f 319 17231c r ordernum r message declined r message r code r cod e r tdate 1191221775 r tdate r authresponse r authresponse r approved declined r approved r avs r avs response field description r avs address verification system \\( avs \\) response transaction r ordernum order number associat ed transaction r error error message associated transaction r approved result transaction may approved declined blocked fraud r code approval code transaction r message mess r time time date transaction server response r ref reference number returned credit card processor firstdata com 54 response field description r tdate server time date stamp transaction used uniq uely identify specific transaction one order number may apply several individual transactions see transaction details entity page 25 information example tdate r tax calculated tax order ordertype field calctax r shipping calculated shipping charges order ordertype field calcshipping r authresponse authentication results returned verifi ed visa mastercard securecode 5 2 errors many different response messages codes may receive secure payment gateway response error decline messages passed n r error data field responses indicate error indicate decline response issuing bank understand error messages receive helps understand transaction process submit transaction secure p ayment gateway throughout transaction process errors declines occur point error codes generated transactions cannot completed machine error incomplete data types connection transmission problems decline essages occur transaction declined reason including transaction fails fraud check 5 2 1 fraud error checks fraud error checks performed secure payment gateway fraud protection module fraud messages declines occur information submitted customer either incomplete incorrect failed fraud checks 5 2 2 payment handler interface transaction processing starts secure payment gateway server passes payment handler payment handler transaction passes card processor card issuing bank every transaction produces return value indicating th e following transaction completed approved transaction completed declined transaction complete failed specific error check point process firstdata com 55 5 3 credi card errors errors occur incomplete erroneous credit card information entered credit card transaction may receive following messages r error field occurs response description reason data field ent ity credit card expiration month must selected either expiration month credit card received value received outside allowed range ensure passing two digit number 01 12 cardexpmonth creditcard credit card expiration year must selected either expiration year credit card received value received outside allowed range ensure passing two digit number 00 99 cardexpyear creditcard credit c ard number must filled credit card number received secure payment gateway ensure passing non empty credit card number check validity number spaces dashes optional use following test values visa level 2 4275330012345675 \\( replies referral message \\) jcb 3566007770003510 discover 6011000993010978 mastercard 5424180279791765 visa 4005550000000019 4111111111111111 mastercard level 2 5404980000008386 diners club 36555565010005 amex 37270099 7251009 cardnumber creditcard valid credit card please try another card card number valid prompt customer enter card number try different card cardnumber creditcard card number digits cred card number provided fewer digits allowed card type check number digits credit card make sure correct length prompt customer enter card number cardnumber creditcard card number many digits credit card number provided digits allowed card type check number digits credit card make sure correct length prompt customer enter card number cardnumber creditcard firstdata com 56 response description reason data field ent ity credit card number must filled credit card number provided credit card transaction ensure creditcard field empty submitting credit card transaction secure payment gateway cardnumber creditcard credi card appears expired expiration date provided past expiration date occurs past tell customer credit card appears expired cardexpmonth cardexpyear creditcard 5 4 customer information errors customer information error responses occur customer information supplied given transaction incomplete erroneous may receive following messages r error field th occurs response description reason data field entity invalid e mail address email address provided right format ensure passing valid email address format name domain com email billing e mail address must filled valid email address required transaction ensure passing valid email address format name domain com email billing zip code given match city state given zip code appears differen city state one specified prompt customer enter zip code check city state zip billing shipping zip postal code found state zip code provided valid u state value received check values state zip code prompt customer check data entered zip billing shipping state must selected state required field transaction make sure entering valid state code state billing shipping name must filled customer 's name required transaction make sure value passed name field name billing ip address given match city state given ip address location invalid check entering va lid customer ip address ip transactiondetails 5 5 fraud block messages transaction blocked risk fraud following messages may appear r error data field message description host ordering blocked merchant blocked customer 's host making transactions credit card using blocked merchant blocked customer 's credit c ard number making transactions firstdata com 57 message description domain host blocked merchant blocked customer 's domain name making transactions class c subnet ip blocked merchant blocked customer 's class c address making transactions name entered blocked merchant temporarily blocked customer 's name making transactions host ordering temporarily blocked merchant temporarily blo cked customer 's host making transactions credit card using temporarily blocked merchant temporarily blocked customer 's credit card making transactions purchase amount exceeds merchant approved lim total amount order exceeds maximum purchase limit set merchant merchant transaction limit less amount requested transaction total amount order less minimum purchase limit set erchant duplicate transaction identical dollar amount identical credit card processed within last x hours x generally 24 hours altered changing duplicate lockout time merchant 's fraud protection se ttings 5 6 error messages many reasons error decline may occur may receive following messages r error field validation transmission err occurs 5 6 1 connection errors errors may occur transaction cannot connect secure payment gateway xml processor response description action creating socket failed cannot create socket co nnect secure payment gateway xml processor check host name digital certificate port number items included merchant 's welcome email host name certificate port number correct retry transaction una ble connect server tcp ip connection secure payment gateway xml server failed check host name digital certificate port number items included merchant 's welcome email host name certificate port n umber correct retry transaction failed resolve host unknown host name check host name host name identified merchant 's welcome email cannot find load cert key file client certificate file missing invalid chec k properly copied digital certificate merchant 's welcome email pem file web server compare path file path file name provided secure payment gateway firstdata com 58 response description action unable connect ssl server cannot establish ssl connection check host name digital certificate port number items included merchant 's welcome email host name certificate port number correct retry transaction ssl read failed one servers \\( either merchant side secure payment gateway side \\) dropped ssl connection check host name digital certificate port number items included merchant 's welcome email host name certificate po rt number correct retry transaction request rejected ssl server make sure supplied valid certificate secure payment gateway server cannot verify client server 's credentials check properly copied digital certificate merchant 's welcome email pem file web server compare path file path file name provided secure payment gateway 5 6 2 errors errors may occur th e merchant csp web server made connection secure payment gateway server case transmission validity error secure payment gateway server processor response description action file accessed opening exist file accessed writing cannot written retry transaction error timeout waiting response process timed waiting response credit card processor message results cred card processor respond leased line transmission transaction data within 60 seconds retry transaction neterr connect unable connect ssl server check network configuration digital certificate connection wo rks contact support neterr ssl unrecoverable ssl error connection closed retry transaction neterr decode unable decode received message check network configuration digital certificate connection works contact support serverer r resource server unable allocate required resources retry transaction servererr database server encountered database error check network configuration digital certificate connection works retry transaction contact support servererr encode server unable encode client response retry transaction servererr decode server unable decode client response check network configuration digital certificate connection works retry transaction contact upport servererr module unsupported server module retry transaction coreerr trunc results truncated retry transaction firstdata com 59 response description action coreerr field format data contains invalid characters check format data fields coreerr alloc unable allo cate memory retry transaction coreerr invalidhandle uninitialized invalid handle supplied argument retry transaction coreerr invalidfield unknown field name check data field names coreerr unknownerror error unknown cause r etry transaction reqerr invalidrequest request context must allocated contact support 5 7 shipping calculation errors shipping calculation errors may occur using secure payment gatewa shipping charge calculations invalid data passed merchant 's shipping file properly configured may receive following messages r error field shipping calculation errors response description reas data field entity shiperr invalidcriteria total items weight must specified calculate shipping charges data required depends shipping calculation method specified merchant 's shipping file check shipping file hipping method provide valid data fields calculation method weight items depending calculation method shipping shiperr invalidcountry shipping country code must valid two letter country code ensure using valid wo letter country code listed country codes section see country codes page 37 country shipping shiperr invalidstate shipping state code must valid two letter u state code ensure using valid two letter u state code listed state codes section see u state codes page 36 state shipping shiperr invalidsyntax shipping file syntax incorrect check hat shipping file properly formatted resubmit support necessary see shipping calculator page 14 information firstdata com 60 5 8 tax calculat ion errors tax calculation errors may occur using secure payment gateway perform tax calculations invalid data passed merchant 's config file properly configured may receive following messages r error field tax calculation errors response description reason data field entity taxerr invalidzip shipping zip code passed invalid check zip code provided zip shipping taxerr invalidstate shipping state passed invalid ensure yo u using valid two letter u state code listed state codes section see u state codes page 36 state shipping taxerr invalidtotal total amount taxed 0 less check zip code provided zip shipping taxerr invalidfulltax invalid fulltax value merchant 's config file secure payment gateway config file set process tax calculations check support merchant 's conf ig file set appropriate values tax calculations 5 9 telecheck errors errors may returned api validation transmission error occurs wh en processing telecheck transaction error code error message comments status code 0 duplicate txn stop two identical transactions received second processed status code 10 invalid parameters check input parameter format validity check required parameters included status code 20 dig sig invalid check digital certificate merchant site status code 30 user canceled auth incomplete data user canceled transaction required fields provided firstdata com 61 error code error message comments status code 40 user account error sorry cannot accept check time decision based whole part information provided us telecheck encourage call telecheck 1 877 678 5898 write telecheck customer care p box 4513 houston tx 77210 4513 please provide state issued complete banking numbers printed bottom check u nder fair credit reporting act right files within 60 days today may also dispute accuracy completeness telecheck di make adverse decision accept check unable explain decision made text block included response merchant legal obligation display customer status code 50 system av ailable contact customer support problem persists 110 payment authorization invalid matching authorization merchant authorization expired voided error message also indicate transaction cannot voided payment already requested authorization merchant must correct problem resubmit clearing request appropriate 120 clearing entry invalid one fields missing malformed merchant must correct problem resubmit clearing request appropriate 130 transfer amount invalid amount requested sum partial payments including transaction exceeds original authorization amount error als indicate amount field malformed merchant must correct problem resubmit clearing request appropriate 140 account disabled user merchant account disabled merchant verify account status contac user find another payment method 180 authorization void confirmation confirmation merchant authorization void received completed initiated merchant user initiated user message field contain additional information firstdata com 62 error code error message comments 210 account invalid user 's checking account longer active telecheck attempt contact user correct problem contact unsuccessful merchant receive funds transfer notification debit credit necessary reverse transaction 220 stop payment user placed stop payment specific transaction action required notification 230 nsf insufficient funds notification telecheck attempt twice transfer funds specified merchant user also contacted correct problem contact successful merchant receive notifications funds cannot obtained user reversed merchant 's account 240 final nsf insufficient funds notification funds reversed merchant 's account merchant receive funds transfer notification debit credit necessary reverse transaction lp 8996 non live telecheck transactions supported telecheck account set yet check sales agent merchant services account status contact customer support problem persists 32001 checkerr invalid order data invalid order data 32002 checkerr invalid check data invalid check data 32003 checkerr invalid request invalid request 32004 checkerr invalid account type invalid account type 32005 checkerr invalid transit routing invalid transit routing 32006 checkerr invalid micr invalid micr 32007 checkerr invalid check number invalid check number 32008 checkerr invalid check comment invalid check comment 32009 checkerr routing number match routing number match 32010 checkerr check order type wrong check order type wrong 32011 checkerr invalid check order data invalid check order data 32012 checkerr error inserting order error inserting order 32013 checkerr error inserting transaction error inserting transaction 32014 checkerr error nserting batch transaction error inserting batch transaction 32015 checkerr unable verify check processing status unable verify check processing status 32016 checkerr error deleting check batch entry error deleting check batch entry 32017 che ckerr check sent processing may trying void check sent processing 32018 checkerr error voiding check error voiding check 32019 checkerr error updating transaction error updating transaction firstdata com 63 5 9 1 telecheck messages session expired exceeded maximum number authorization attempts please choose another payment option unable verify checking account information please review information entered ensure information correct click authorize unable verify checking account information bank account may set handle electronic funds transfers automated cl earing house \\( ach \\) please contact bank determine whether account accepts automated clearing house \\( ach \\) transactions another checking account may change routing account number information please enter first name please enter valid first name please enter last name please enter valid last name please enter address please enter valid address \\( address line 1 \\) please enter valid address \\( address line 2 \\) please enter city please enter val id city please enter entire driver 's license state id number please make sure information entered correctly submit request may also select another payment option please enter valid driver 's license state id nu mber please select state driver 's license state id issued please select state please enter zip code please enter valid zip code please enter email please enter valid email please enter home phone number please en ter valid home phone number please enter name bank please enter valid information name bank please select bank state please enter routing number please enter valid routing number please enter checking account num ber please enter valid checking account number firstdata com 64 6 testing test first data global gateway api need request test account request test account please fill test store form online following site http www firstdata com product solutions ecommerce global gateway index htm maintenance test server may performed without prior adequate notice users first data global gateway notify users possible f maintenance outages staging \\( test \\) server 6 1 test store policy test stores may used following purposes reverse engineer system understand breach security secure payment gateway copy first data global gateway products abuse staging server way first data global gateway frequently monitor test store usage breach policies result suspension permanent removal test store 6 2 support contact support globalgateway support firstdata com 1 888 477 3611 first data global gateway api technical support 6 3 going live apply fo r live store account live store different server different store number need change host name store number html code want go live mak e sure result field rderoptions entity set live 6 4 passwords initial password 12345678 see welcome email initial password temporary passwords valid 30 minutes issued protect test ac count change password first log security specialists recommend avoid using common words numbers passwords avoid words numbers might associated like name date birth ar e several different security measures place help ensure account information protected compliant payment card industry \\( pci \\) guidelines firstdata com 65 password guidelines listed password must 7 8 characters length consistin g least one \\( 1 \\) letter least \\( 1 \\) numerical digit new passwords must previous \\( 4 \\) passwords login account locked 30 minutes \\( 6 \\) consecutive failed login attempts passwords expire every 90 days first data global gateway virtual terminal provides virtual terminal order management functions staging server first data global gateway virtual terminal available http www firsdata com ecommerce log n enter store number ten digit number test accounts user id six digit number password initial password 12345678 6 5 setting test account setting test account storename parameter ten digit number staging server posting url https staging linkpt net lpc servlet lppay admin url https staging linkpt net admin xxxxxxxxxx hlpadmin xxxxxxxxxxx ten digit store number 6 5 1 linkpoint select api set configfile data field ten digit test store number host staging linkpt net keyfile digital certificate downloaded logging firs data global gateway virtual terminal click support download center enter requested information save certificate file web server pem extension using java tm see requirements page 6 port 1129 apis firstdata com 66 6 5 2 downloading software api wrapper downloads visit http www firstdata com support software downloads global gateway api downloa htm ales please call 1 888 477 3611 6 6 testing live account perform tests live account set result field orderoptions entity one following good fo r approved response decline declined response duplicate duplicate response recommended perform tests live account necessary validate correct functionality live account please request test account need extensive testing done testing make sure set result field orderoptions entity live 6 7 test credit cards testing purposes use card numbers listed test card numbers result charges card use card numbers expiration date future visa level 2 4275330012345675 \\( replies referral message \\) jcb 3566007770003510 disco ver 6011000993010978 mastercard 5424180279791765 visa 4005550000000019 4111111111111111 mastercard level 2 5404980000008386 diners 36555565010005 amex 372700997251009 6 8 test responses test st ore generates different errors messages depending dollar amount testing transactions following table displays errors messages generated test store errors r error response variable message r message response variable firstdata com 67 8 9 test account simulator responses control avs response pass zip code digits specified firstdata com 68 control cvm response pass zip code digit specified 7 fraud protection first data global gateway api help prevent fraud fraud results chargebacks chargeback forced refund customer refund comes merchant 's bank account chargeba cks occur internet businesses increased chance fraud credit card associations penalize banks chargebacks bank charges merchant penalties severe internet merchants fully liable transact ions credit card present prevent fraud use following address verification system card codes blocking limiting 7 1 avs codes transactions card present secure payment gateway provides address verification system \\( avs \\) codes help protect costly chargebacks fraud c redit cards discover mastercard visa request use avs processing card present transactions moto e commerce transactions whenever perform credit card sale authorize transaction first data gl obal gateway api compares customer 's address entered address card issuing bank file customer order take advantage avs must enter first line customer 's billing address zip code ret ail keyed transactions need enter customer 's zip code avs code tells well two addresses match receive avs response whether card approved declined decide whether want accept risk continue processing order firstdata com 69 7 1 1 avs codes following string transaction result code avs code first three letters middle number 0097820000019564 yna 123456 78901234567890123 avs compares numeric portion street address zip code information file card issuing bank avs code indicates address zip code es match still complete transaction however exposure fraud increase important know avs limitations avs system always reliable bad results triggered unnecessarily people move report five digit zip codes report n ine digit zip codes may generate response stating address matches zip code match avs system process addresses outside united states decide ship addresses good avs results ou leave international orders recommend ed display message similar following avs code mismatches unable process credit card payment time still want purchase product service p lease call us 1 time obtain information customer verify address n't match recently moved city changed zip codes etc ship product registered mail returned signe receipt ensure received proper person 7 1 2 avs code definitions following table lists th e descriptions avs codes might receive letters credit card columns third letter avs code vary depending type credit card using avs code visa mastercard discover american express description yy address zip code match ny z z z z zip code matches yn address matches nn n n n n neither address zip code match xx w card number file xx u u u u address information verified dome stic transaction xx r r r retry system unavailable xx service supported firstdata com 70 avs code visa mastercard discover american express description xx e avs allowed card type xx address verification requested received xx g global non avs participant normally international transaction yn b street address matches international transaction postal code verified nn c street address postal code verified international transaction yy street address postal code matc h international transaction yy f street address postal code match international transaction \\( uk \\) nn address information verified international transaction yy street address postal code match inte rnational transaction ny p postal codes match international transaction street address verified 7 2 card codes card code three r four digit security code visa mastercard discover number typically appears end signature panel american express number appears front card security card program helps validate genuine c ard used transaction card code mismatch blocks transaction card code circled mail order telephone rder \\( moto \\) transactions card present higher fraud rates face face transactions help reduce fraud use card code always enter card code \\( card \\) processing authorization moto e commerce transactions retail transactions may want enter card code printed card ensure card fraudulently reproduced using card c ode results along address verification system \\( avs \\) make better informed decisions whether accept transactions firstdata com 71 7 2 1 using card code enter card code processing order card code entered compared code card issuing bank results comparison show transaction approval code following string typ ical transaction result 0097820000019564 yna 12345678901234567890123 last alphabetic character middle \\( \\) code indicating whether card code matched card issuing bank 's code 7 2 2 card code definitions card code description card code matches n card code match p processed merchant indicated card code present card u issuer certified provided encryption keys x response credit card association received blank response indicates code sent indication code pr esent card 7 3 blocking limiting first data global gateway api help prevent fraud blocking limiting block anyone purchasing stor e merchant 's responsibility track blocked limited transactions tip blocking help keep competitors buying products set change fraud settings first data global gateway virtual terminal th e fraud settings page first data global gateway virtual terminal mouse administration main menu bar click fraud settings popup menu administration section click fraud settings side menu bar nformation fraud settings see fraud settings section first data global gateway virtual terminal manual change fraud settings log first data global gateway virtual terminal fraud settings page first data global gateway virtual terminal mouse administration main menu bar click fraud settings popup menu administration section click fraud settings side menu bar 7 3 1 fraud se ttings following list contains fraud settings control firstdata com 72 blocking credit card numbers blocking names blocking domain names blocking ip class c addresses setting maximum purchase limit setting auto lockout duplicate lockout time firstdata com 73 glossary account number account number checking savings account unique number identifies customer 's account account number appears check next transit routing number numbers usua lly separated non alphabetic non numeric symbol ach ach abbreviation automated clearing house automated clearing house \\( ach \\) name electronic network financial transactions united states ach processes large volumes credit debit transactions originated batches ach allows merchants accept payments customer 's checking savings account acquiring bank bank provides service business customers allowing accept card payments goods services address verification service address verification system \\( avs \\) system used verify identity person claiming credit card system check stated billing address credit card address file credit card company gateway provides avs code approved transaction result tells well two addresses match match lower probability fraud discrepa ncy either address zip code probability fraud higher merchants use avs codes help protect chargebacks fraud antivirus software antivirus software consists computer programs attempt identify det er eliminate computer viruses malicious software antivirus software typically uses two different techniques accomplish examining \\( scanning \\) files look known viruses matching definitions virus dictionary identifyin g suspicious behavior computer program might indicate infection analysis may include data captures port monitoring methods due risk computer viruses harming computer files antivirus software recommend ed internet users application programming interface \\( api \\) first data global gateway api tool allows merchant create customer commerce sol ution application programming nterface \\( api \\) allows add payment functionality custom built web sites online applications authorization authorization reserves funds customer 's credit card authorization charge card perform ticket transaction confirm shipment order period funds reserved may little three days long several months authorize authorize transaction reserves funds customer 's credit card authorize transaction charge card perform ticket transaction confirm shipment order using option available reports section authorize transactions reserve funds varying periods depending issuing credit card company 's policy period may little three days long several months protection confirm shipment soon possible authorization firstdata com 74 batch credit card c heck transactions combined submitted group payment gateway settlement n payment gateway batches submitted automatically day blocking limiting suspect certain transactions might fraudulent block purchases blocking credit card numbers persons' names domain names ip addr esses class c addresses purchasing store limit amount customer spend store setting maximum purchase amount set long automatic lockouts duplicate lockouts continue blocked b rowser short web browser browser software application enables user display interact text images videos music information typically located web page web site internet cable modem cable modem type modem provides access internet cable television infrastructure cable modems primarily used deliver broadband internet access taking advantage unused bandwidth cable television network cable netwo rk shared many internet subscribers internet access speed may go card code card code card security code sometimes called card verification value code \\( cvv cvc \\) security feature credit debit card trans actions giving increased protection credit card fraud code \\( also known ccid credit card id \\) often asked merchants secure transactions card present usually occurring internet mail fax ver phone payment gateway compare card code code file card issuing bank results comparison show transaction approval code using card code results along address verification servi ce \\( avs \\) make informed decision whether accept transactions mastercard visa discover credit debit cards three digit code called cvc2 \\( card validation code \\) cvv2 \\( card verification value \\) cid \\( car identification number \\) respectively always final group numbers printed back signature panel card new north american mastercard visa cards feature card code separate panel right signature strip american express cards four digit code printed front side card number referred cid card issuing bank financial institution bank issues credit debit purchasing card business consumer card issuing bank address file card address verification system \\( avs \\) compares address given merchant chargeback chargeback forced refund customer bank account chargebacks occur wi th type business whether online actual store location fraudulent credit card transaction typically results chargeback credit card associations penalize merchan banks c hargebacks naturally bank passes fines n responsible merchant penalties severe consumers provided certain degree protection credit card numbers stolen misused internet merchants fully liable transactions interne transactions classified card present firstdata com 75 check number check number number unique check check number always found top right corner check check number provided reference process ach transaction commerce service provider \\( csp \\) commerce service provider \\( csp \\) supplies businesses tools services need buy sell products services internet manage online enterprises csps generally h ost secure web site could connected secure payment gateway selling products services internet credit number transaction inten ded returns orders processed outside system credit transactions marked returns reports credit card credit card card \\( usually plastic \\) assures seller person using satisfactory credit rating nd issuer see seller receives payment merchandise delivered cvc2 cvc2 card validation code card code mastercards see definition card codes information cvv2 cvc2 card veri fication value card code visa cards see definition card codes information data field data field area web form software application enter information relevant name field example would enter zip code data field named zip code dda number dda \\( demand deposit account \\) number deposit account held bank financial institution purpose securely quickly providing frequent access funds n demand dial connection dial connection way access internet telephone line modem connected computer telephone line dial internet service provider 's \\( isp \\) node establish modem modem link w hich routed internet speed dial connections usually slower internet access options digital certificate digital certificate electronic certificate establishes merchant 's credentials performing bu siness internet encrypted set information issued internet certification authority thawte digital certificates required merchants choose use api products merchant need digital certificate domain name name identifies computer computers internet names appear component web site 's url microsoft com type domain name also called hostname dsl dsl \\( digital subscriber line \\) technology bringing fast internet service homes small businesses wires local telephone network firstdata com 76 e commerce \\( eci \\) e commerce \\( eci \\) electronic commerce consists buying selling products services electronic ystems internet computer networks electronic check acceptance \\( eca \\) electronic check acceptance \\( eca \\) check electronically submitted check check longer usable paper check must voided cust omer signs receives paper receipt eca services may include check guarantee service eca used retail payments field field area web form software application enter information relevant name fi eld example would enter zip code field named zip code firewall firewall hardware software device configured permit deny proxy data computer network different levels trust firewall p rotects resources private network users networks first data global gateway connect first data global gateway connect service e commerce solution using hosted payment page eliminates complexity gr eat merchant limited resources expertise forced ticket forced ticket transaction credit card transaction authorizations obtained phone requires reference number \\( approval code \\) received w hen made phone authorization hierarchy term used describe organizational tree structure multi store reports merchants describe organization defining org chart form tree structure structure used com bining store reports groups different levels term hierarchy refers entire organizational tree structure containing levels elements html html short hypertext markup language html markup language used structure text nd multimedia documents set hypertext links documents used extensively internet manually entering transactions using virtual pos terminal html simplest way send payment transactions payment gateway http http \\( hypertext transfer protocol \\) communications protocol used transfer convey information internet example enter url browser sends http command web server directing receive transmi requested web page hyperlink hyperlink reference navigation element document web page linking another section document web page another document web page may different web site internet chec k acceptance \\( ica \\) internet check acceptance \\( ica \\) type check service provided payment gateway ica uses automated clearing house \\( ach \\) transfer funds ent form check used customer may may sign payment form either case merchant needs documented record customer 's authorization transfer funds account ica includes electronic receipt chec k guarantee service firstdata com 77 ica ica typically used mail orders telephone orders \\( mo \\) e commerce transactions may also used retail internet service provider \\( isp \\) internet service provider \\( isp \\) business organization provides consumers businesses access internet related services isp also host web site ip address ip address short internet protocol address ip address number used identify specific computer network internet format ip address written four numbers separated periods number 0 255 example 1 160 10 240 could ip address issuing bank financial institution bank issues credit debit purchasing card business consumer issuing bank address file card address verification system \\( avs \\) compares address given merchant level level single tier hierarchy organizationa l tree structure multi store users top level \\( 1 \\) typically root \\( corporate \\) level containing 1 element lowest level tree always user level next level lowest store level merchants define num ber levels names level organization 10 total levels local area network \\( lan \\) local area network \\( lan \\) computer network covering small geographic area like home office group buildings defining cha racteristics lans contrast wide area networks \\( wans \\) include much higher data transfer rates smaller geographic range lack need leased telecommunication lines log log process individual access computer system controlled identification user order obtain credentials permit access integral part computer security user log system obtain access log access longer needed log log \\( also log sign sign \\) close one 's access computer system previously logged log system click log main menu bar prevent unauthorized users accessing ir account merchants always log close browser window finished using system multi store multi stores multiple accounts different store numbers network network group two computer systems link ed together password password form secret authentication data used control access resource recommend users change password frequently share anyone prevent unauthorized access accou nts payment gateway payment gateway e commerce application service authorizes payments e businesses online retailers equivalent physical pos \\( point sale \\) terminal located retail outlets payment gateways enc rypt sensitive information credit card numbers ensure information passes securely customer merchant firstdata com 78 pdf file pdf short portable document format file format created adobe systems 1993 docume nt exchange pdf used representing two dimensional documents device independent display resolution independent fixed layout document format internet users need adobe acrobat viewer open pdf file downloaded free http www adobe com periodic billing periodic billing recurring payments capability charge customers recurring basis according merchant defined rules gateway products allow merchant charge customer 's card exchange pro ducts services one times every day week month year plug plug hardware software module adds specific feature service larger system example number plug ins netscape navigator brow ser enable display different types audio video files point sale \\( pos \\) consumer purchasing product merchant merchant processing payment transaction pos commonly used refer payment terminal software merchants use process payment transaction protocol protocol set guidelines rules help governing operation internet communications several different protocols http protocol used internet purchasing card purchasing card corporate card used companies business purchases customer pays goods services using purchasing card following information must included order information information optional regular credit card transaction indication whether order tax exempt amount tax applied order order tax exempt tax amount zero purchase order number sociated order one purchase order apply several individual orders allow delivery goods time n't purchase order associated order customer must supply value order recurring payment capability charge customers recurring basis according merchant defined rules gateway products allow merchant charge customer 's card exchange products services one times every day week month year return return system perform return need order number \\( find reports \\) perform return full order amount order appear reports transaction amount 0 00 sale sale transaction immediately charges customer 's credit card batch transactions closed secure shell \\( ssh \\) secure shell \\( ssh \\) network protocol allows data exchanged secure channel two computers firstdata com 79 secure sockets layer \\( ssl \\) secure sockets layer \\( ssl \\) cryptographic protocols provide secure communications internet transmitting credit card data data transfers settlement settle ment completion payment transaction transaction settled funded funds deposited merchant account store name store name \\( also called storename store number \\) six ten digit number needed ide ntify merchant store name given merchant welcome e mail merchants need store name user id password access virtual point sale terminal well reports admin customization functions store name also needed using api products ticket ticket transaction post authorization transaction captures funds authorize transaction funds transferred batch transactions settled ent er larger total ticket transaction specified authorize transaction ticket transaction may blocked enter smaller amount authorized adjustment made authorization reserve transit routing number transit routing number nine digit bank code used united states appears bottom checks code used automated clear ing house process direct deposits automated transfers url url short uniform resource locator url address documents pages internet first part address indicates protocol use econd part specifies ip address domain name resource located user id accounts multiple users individual user assigned user id user need user id along store name password log system virtual virtual often used internet denote web based program functions similarly physical device system example virtual point sale terminal computer program performs functions physical point sale terminal void void transaction cancel payment transaction merchants void transactions prior settlement transaction settled merchant perform return credit reverse charges nd credit customer 's card wan wan wide area computer network spans relatively large geographical area typically wan consists two local area networks \\( lans \\) computers connected wide area network often connected th rough public networks telephone system also connected leased lines satellites web server web server computer program responsible accepting http requests clients serving http responses along opt ional data contents responses usually web pages html documents linked objects \\( images etc \\) firstdata com 80 xml xml extensible markup language universal format representation documents data classified extensible language allows users define tags primary purpose facilitate sharing structured data across different information systems particularly internet 2008 first data rights reserved", 
    "crawled_date": "2017-06-10T13:59:47.756822"
  }, 
  "14": {
    "api_url": "zaypay.com", 
    "progweb_url": "https://www.programmableweb.com/api/zaypay", 
    "progweb_date": "05.11.2008", 
    "progweb_descr": "From their site: Zaypay makes international micropayments through SMS, phone calls and other alternative pay methods a piece of cake. With its free service a micropayment can be integrated into your website for just minutes of your time. Using our API enables your application to talk with Zaypay directly, and allows Zaypay to talk back to your application.", 
    "api_name": "Zaypay", 
    "progweb_cat": "Payments,Mobile", 
    "crawled_date": "2017-06-10T13:59:47.757788"
  }, 
  "17": {
    "link5": "https://www.skrill.com/es/comerciantes/integration/", 
    "link4": "https://content.skrill.com/en/ecommerce-solutions//", 
    "link1": "https://www.skrill.com/fileadmin/content/pdf/Skrill_Quick_Checkout_Guide.pdf", 
    "api_url": "skrill.com", 
    "link3": "https://www.skrill.com/fileadmin/content/pdf/Skrill_Automated_Payments_Interface_Guide.pdf", 
    "link2": "https://content.skrill.com/fileadmin/content/pdf/Skrill_Wallet_Checkout_Guide.pdf", 
    "progweb_url": "https://www.programmableweb.com/api/moneybookers", 
    "progweb_date": "01.01.2009", 
    "progweb_descr": "Use the Moneybookers Automated Payments Interface API to send money, make pay-on-demand transactions, check transaction statuses, and download account histories. Users of the main site send money via Moneybookers by logging into their account and using the Send Money option. You can automate this same process using the API.", 
    "api_name": "Moneybookers", 
    "progweb_cat": "Payments,eCommerce", 
    "descr5": "al utilizar este sitio web acepta el uso que damos las cookies que se instalan en su equipo al navegar por nuestra web appears using outdated browser incompatible current web standards please consider upgrading modern browser improve web experience enhance online security privacy list popular web browsers found google chrome mozilla firefox internet explorer safari skrill es cliente \\? ofertas exclusivas entrar mi cuenta cartera digital soluci n alojada un socio para gestionar todos sus pagos integre skrill con facilidad centro de gesti n de la marca clientes mi cuenta twitter facebook linkedin espa ol change language back english deutsch fran ais espa ol italiano polski rom n rk e esk usa espa ol usa english integre skrill con facilidad es sencillo adir skrill su proceso de caja solo tiene que seleccionar la soluci n flexible de f cil integraci n que mejor se ajuste su negocio para el procesamiento de pagos local con tarjeta para ayudarle hemos desarrollado gu como documentaci n cnica de apoyo con marca para que pueda empezar trabajar contacto button teal hover copy button teal hover icon color 41aeb5 important button teal icon color fff important gu de integraci n scroll gu de integraci n empiece aqu seleccionando la soluci n que prefiera caja r pida una gu cnica que le explica c mo integrar nuestra caja r pida que le permite habilitar de 100 opciones de pago descargar ahora caja con cartera una gu cnica que le explica c mo integrar nuestra caja con cartera para comerciantes que tienen necesidades de pagos \\( por ejemplo apuestas forex mlm etc \\) descargar ahora gu de apoyo interfaz de pagos automatizados complete su integraci n implementando la interfaz de pagos automatizados de consulta de comerciantes que ofrece las siguientes funciones pagos con cartera reembolsos \\( donde procedan \\) trapaso consulta de estado de pagos button dark grey copy button dark grey icon color 404040 important descargar ahora pago masivo informaci n sobre la funci n pago masivo descargar ahora centro de marca skrill todos los logotipos que necesita para su caja sitio web visitar el centro de marca merchant requirements need become one customers merchant requirements soluciones de comercio electr nico active skrill en su carrito de la compra seleccione el carrito de la compra que utiliza para aprender sobre el proceso de activaci n r pido tarifas especiales informaci n magento magento ofrece soluciones flexibles ampliables de comercio electr nico dise adas para ayudarle crecer tener xito en l nea nuestra rentable plataforma tecnol gica le permite controlar el contenido las funciones como el aspecto el comportamiento de su establecimiento en l nea gu del usuario para activar reg strese ya xt commerce xt commerce es un software para comercios en l nea de c digo abierto \\( gpl \\) que ofrece una amplia variedad de funciones una excelente capacidad de ampliaci n que tiene nada que envidiar los sistemas comerciales caros el desarrollo del software para comercios en l nea xt commerce est destinado hacer que el mundo del comercio electr nico est disponible para empresas de mediano tama aspectos destacados sencilla instalaci n trav de una interfaz web cualquier divisa \\( son posibles ltiples divisas en paralelo \\) n mero ilimitado de categor profundidad de categor productos ordenaci n de art culos productos por categor seleccionables libremente establecimiento de un producto en cualquier n mero de categor empleando una sencilla vinculaci n resaltado de productos en la p gina de inicio reg strese ya comandia correos comandia es la soluci n ecommerce de correos un profesional dise pone en marcha la tienda online por ti lista para vender en internet lo mejor total integraci n con los servicios log sticos del mayor operador postal espa ol con descuentos especiales en paqueter herramientas de marketing para ayudarte vender reg strese ya prestashop prestashop es una soluci n de comercio electr nico con c digo abierto descargable de forma gratuita que le permite abrir su establecimiento en l nea con tan solo unos clics gu del usuario para activar reg strese ya plentymarkets plentymarkets es el erp de comercio electr nico integral que le permite realizar autom ticamente todos sus procesos comerciales en l nea el establecimiento en l nea completamente integrado gil puede dise arse individualmente combinado con de 40 mercados en l nea integrados le ofrece incontables oportunidades en el comercio omnicanal el ximo alcance en toda europa utilice la aplicaci n el punto de venta plentymarkets para enlazar su negocio est tico con el sistema plentymarkets plentymarkets siempre est listo para su empresa en crecimiento reg strese ya jtl software con los productos jtl wawi jtl shop3 eazyauction jtl software gmbh se dirige principalmente peque medianas empresas que explotan comercios en l nea jtl wawi es un sistema de gesti n de mercanc gratuito con el que diferentes sistemas para comercios como ofertas de ebay pueden mantenerse bidireccionales jtl shop3 es un software propio para comercios en l nea desarrollado para jtl wawi reg strese ya woocommerce woocommerce la plataforma de comercio electr nico personalizable para crear su negocio en l nea reg strese ya epages epages es el proveedor independiente de software para establecimientos en l nea grande de europa que se basa en ingresos por concesi n de licencias 140 000 empresas de 75 pa ses dirigen establecimientos en l nea profesionales basados en productos de epages se ofrece en 15 idiomas dispone de optimizaci n de motores de b squeda tiene un dise individualizado est optimizado para tablets smartphones gracias las actualizaciones regulares los establecimientos en l nea de epages est n siempre al en las tendencias de comercio electr nico recientes reg strese ya shopify obtendr su propio establecimiento en l nea podr aceptar tarjetas de cr dito utilizar su propio dominio personalizar el dise de su establecimiento shopify lo alojar todo por usted shopify le ofrece su propio escaparate para vender sus productos reg strese ya whmcs whmcs es una soluci n para la gesti n de clientes facturaci n asistencia todo en uno para negocios en l nea ayuda organizar pr cticamente todos los aspectos de su negocio desde la inscripci n inicial realizaci n de pedidos de los clientes pasando por la facturaci n recurrente hasta la asistencia trav del servicio de ayuda incorporado reg strese ya afterbuy afterbuy es una soluci n completamente automatizada varias veces galardonada para vendedores de ebay minoristas en l nea con afterbuy tendr acceso todas las funciones que le ahorran tiempo en su trabajo diario aumentar sus ingresos descripci n general de los aspectos destacados gasto nimo gracias un alto nivel de automatizaci n de procesos eficiencia de ventas maximizada gracias la planificaci n estrat gica de las ventas la administraci n de inventarios el centro de env el sistema de contabilidad el sistema de tickets las estad sticas ventas multicanal con xito trav de plataformas de venta su propio establecimiento en l nea tarifas personalizadas para empresas de cualquier tama reg strese ya resellerclub resellerclub es un establecimiento integral para una gama completa de productos servicios de internet como nombres de dominios alojamiento compartido servidores productos de seguridad la plataforma impulsa los dise adores desarrolladores web de todo el mundo con productos que les permiten realizar sus actividades comerciales reg strese ya tanto si acaba de iniciar un negocio en l nea desea ampliar su negocio una mayor velocidad hotdigital shop es un sistema de alta calidad capaz de satisfacer cualquier requisito adem de que hotdigital shop est disponible en espa ol ingl alem n franc italiano dan polaco la administraci n est en el rea visible para los usuarios finales esta soluci n multiplataforma permite la actividad comercial en todos los pa ses del mundo tiene una lista extremadamente completa de funciones que dejan ninguna necesidad sin resolver reg strese ya xcart x cart es un software de carritos de la compra php mysql perr pido plagado de funciones creado pensando en una flexibilidad capacidad de ampliaci n inigualables con su dise dirigido dispositivos viles optimizaci n de motores de b squeda cientos de extensiones personalizables actualizaciones fluidas un amplio abanico de servicios de comercio electr nico es posible configurar dirigir de forma sencilla un establecimiento de alto rendimiento que cumpla todas sus necesidades comerciales reg strese ya shopware shopware es un fabricante alem n de software de comercio electr nico de c digo abierto fundada en el 2000 la empresa tiene de 100 empleados se centra en el desarrollo la asistencia de su producto principal shopware 5 una soluci n que marca tendencia para negocios de todos los tama os con de 54 000 instalaciones 2 000 complementos 1 200 socios shopware es uno de los fabricantes de software comercio electr nico de mayor xito en europa la empresa est explotada al 100 por sus due os es independiente se financia de forma privada por lo que se garantiza el mayor grado de flexibilidad para obtener informaci n realice la visita guiada descargue el folleto gratuito del producto reg strese ya oscommerce oscommerce es una soluci n de comercio electr nico para establecimientos en l nea que ofrece una amplia variedad de funciones que requieren configuraci n que permiten crear establecimientos en l nea de forma r pida sencilla est disponible de forma gratuita como una soluci n basada en c digo abierto bajo general public license \\( gpl \\) reg strese ya cs cart cs cart es un software de carritos de la compra php mysql que se ofrece con c digo abierto se basa en una arquitectura modular un dise dirigido por plantillas lo que permite los usuarios personalizar sus establecimientos en l nea sin interferir en el c digo fuente existente reg strese ya ekmpowershop ekmpowershop es el proveedor de software de comercio electr nico l der de reino unido presente en 1 de cada 5 establecimientos en l nea ofrece una soluci n alojada en l nea que proporciona todo lo que necesita para vender por internet ekmpowershop tambi n ofrece asistencia registro en buscadores de forma gratuita reg strese ya delcampe un mercado que contiene millones de coleccionables precios fijos de subasta delcampe ofrece sitios web premium reservados para establecimientos profesionales un sitio web de prestigio para casas de subastas reg strese ya shopfactory el software de carritos de la compra todo en uno shopfactory 8 permite cualquier persona crear gestionar su propia tienda profesional en internet parte de ser una de las soluciones de comercio electr nico potentes llenas de funciones del mercado ahora puede actualizar su propio sitio web vender sus productos de forma segura en l nea sin ayuda profesional reg strese ya wifeo wifeo es una plataforma gratuita e ilimitada de creaci n de sitios en l nea para sitios web comercios con wifeo puede crear un establecimiento en l nea que sea potente completamente personalizable de forma totalmente gratuita con una asistencia cnica siempre disponible una comunidad de usuarios muy activa puede crear su establecimiento en l nea de una forma muy profesional reg strese ya commerceguys wifeo es una plataforma gratuita e ilimitada de creaci n de sitios en l nea para sitios web comercios con wifeo puede crear un establecimiento en l nea que sea potente completamente personalizable de forma totalmente gratuita con una asistencia cnica siempre disponible una comunidad de usuarios muy activa puede crear su establecimiento en l nea de una forma muy profesional reg strese ya virtuemart virtuemart es una soluci n de comercio electr nico con c digo abierto que se utiliza conjuntamente con un sistema de gesti n de contenidos \\( cms \\) llamado joomla \\( mambo \\) joomla virtuemart est n escritos en php lo que facilita su uso en un entorno php mysql reg strese ya zen cart zen cart incorpora el aut ntico art e commerce software de carritos de la compra con c digo abierto gratuito dirigido los usuarios el programa de dise de sitios web de comercio electr nico est siendo desarrollado por un grupo de propietarios de establecimientos programadores dise adores asesores con una mentalidad parecida que creen que el dise web de comercio electr nico deber ser hacerse de forma diferente reg strese ya opencart opencart es una soluci n de carritos de la compra sin configuraci n llave en mano solo tiene que instalar seleccionar su plantilla agregar productos estar listo para empezar aceptar pedidos reg strese ya iallashop la empresa de alojamiento de comercio electr nico ialla com siempre ha ofrecido sus clientes un software para establecimientos propio para su descarga gratuita como paquete de instalaci n dentro del servicio de alojamiento iallashop se distingue por su alto n mero de funciones que deben adquirirse como un dulo para otros sistemas para comercios integrarse como est ndar en un establecimiento de pago iallashop se puede utilizar como un dulo de descarga gratuito que ya se ha utilizado de 10 000 veces es adecuado para su establecimiento para generar ingresos adicionales como para aplicaciones de env profesionales empleadas por empresas de mediano tama reg strese ya bigcommerce bigcommerce le permite vender en l nea de forma sencilla rentable sin necesidad de ser un experto en html tener conocimientos de dise sus creadores piensan que el mejor software es el sencillo de utilizar reg strese ya cubecart cubecart es una soluci n de carritos de la compra de comercio electr nico sin configuraci n que se ha creado para ejecutarse en servidores que tienen cobertura php mysql reg strese ya 4sellers con 4sellers le ofrecemos una amplia completa soluci n para su exitoso negocio en l nea 4sellers otorga su empresa un acceso profesional portales de venta como ebay amazon tambi n para la venta de sus productos trav de comercios en l nea como la venta telef nicas las tiendas f sicas lo que es exclusivo la integraci n directa del comercio electr nico en la econom de bienes office line el sistema de contabilidad de sage software en un sistema cerrado reg strese ya procesamiento de pagos 2 90 configuraci n gratuita r pida acceso de 100 soluciones de pago locales con una sola integraci n sencilla conexi n con de 30 millones de titulares de cuentas de skrill los altos est ndares de seguridad tecnolog antifraude experiencia de pago sin complicaciones para tel fono vil tablet ordenador comisiones volver arriba acerca de nosotros soporte empleo prensa skrill ltd condiciones pol tica de privacidad copyright paysafe group plc todos los derechos reservados skrill limited \\( frn 900001 \\) est autorizada por la financial conduct authority en virtud de las regulaciones sobre dinero electr nico 2011 para la emisi n de dinero electr nico e instrumentos de pago skrill es una marca registrada de skrill limited la tarjeta skrill prepaid mastercard es emitida por wirecard card solutions ltd \\( wcs \\) conforme una licencia de mastercard international inc wcs est autorizada por la financial conduct authority para llevar cabo actividades de servicios de dinero electr nico en virtud de las regulaciones sobre dinero electr nico 2011 \\( ref 900051 \\) mastercard es una marca registrada de mastercard international inc twitter facebook linkedin", 
    "descr4": "skrill app skrill free google play download ecommerce solutions looking fast reliable cost effective payment solution \\? skrill partnership ebay offers special rates starting per transaction online shop sign payment processing set monthly fees process credit debit card payments additional payment options available including 100 local payment options highest security standards \\( pci dss level 1 \\) anti fraud checks included free set within 72 hours skrill digital wallet 100 payment methods one solution skrill digital wallet gives access 100 payment options without need pci dss compliant one integration contract password payments made digital wallet faster safer convenient customers removing need supply sensitive financial details fees accept skrill payments offer skrill payment option 1 open skrill account sign skrill account takes two minutes ask basic information 2 account activationonce opened skrill account automatically email list required documentation please reply email necessary information 3 activate skrill skrill account confirmed need activate skrill within ebay need login merchant tools section skrill account enter secret word \\( different password \\) log back ebay shop complete integration activate skrill skrill skrill moving money digitally since 2001 offer online payment solutions businesses consumers allowing pay get paid globally 40 million account holders already trust skrill customers send receive money worldwide 200 countries 40 currencies securely low cost without revealing personal financial details whether simple one step integration fully tailored payment solution whoever however like pay get paid trust skrill make online payments simpler faster safer let business benefit worldwide payment network 100 payment options skrill ebay use website subject terms conditions privacy policy including use cookies clicking link page consent use cookies mastercard mastercard brand mark registered trademarks mastercard international incorporated card issued wirecard card solutions ltd \\( wdcs \\) pursuant license mastercard international inc wdcs authorised financial conduct authority conduct electronic money service activities electronic money regulations 2011 \\( ref 900051 \\) skrill ltd authorised financial conduct authority electronic money regulations 2011 issuing electronic money register 900001 skrill ltd", 
    "descr3": "skrilllimited 25canada square canarywharf london e145lq ukskrillautomatedpaymentsinterface \\( api \\) guideforusebyallmerchantsthisguidedescribes howtoconnecttotheautomatedpaymentsinterface \\( api \\) www skrill comversion2 5 skrill2016 page2copyright 2016 skrillltd allrightsreserved thematerialcontained inthisguideiscopyrighted andowned byskrillltdtogether withanyother intellectual propertyinsuchmaterial except forpersonalandnoncommercial use nopartofthisguidemaybecopied republished performed inpublic broadcast uploaded transmitted distributed modifiedordealtwithinanymanner atall without priorwrittenpermission ofskrillltd onlyinsuchawaythatthesource andintellectual property rightsareacknowledged tothemaximum extent permitted bylaw skrillltdshallnotbeliabletoany personororganisation inanymannerwhatsoeverfromthe use constructionorinterpretationof ortherelianceupon alloranyoftheinformationormaterialscontained inthisguide theinformationinthesematerials issubject tochange withoutnoticeandskrillltd assumesnoresponsibilityforany errors skrillltd registeredoffice skrilllimited 25canada square canary wharf london e145lq uk versioncontrol tablepublication number gwapirel3 24 16date versiondescriptionseptember2013 2 16 newguidetemplate andupdatedcontent november 20132 1 7 removal oflatvian currency february20142 1 8 changes toskrill1march2014 2 19 updates toskrill1returnedstatuscodes november 20142 2 newguidelayoutand content updatesapril20152 3 removal ofslovakiankoruna estonian kroon andlithuanianlitas supported currencies july2015 2 4 changed urls fromwww moneybookers com towww skrill com changed allmethods incorrectly listed asposttoget september2015 2 5 listed theportsthat beused withtherefund status url correctedanumber ofinstancesintherefunds sectionwherethe md5sig exampleswereshown inlowerratherthanupper case clarifiedtheexplanationoftheamountfieldused toprepare apartialrefund correctedthedescription ofthesecretword skrilllimited 25canada square canarywharf london e145lq uk skrill2016 page4 skrillautomatedpaymentsinterface guide2 5 skrill2016 page51 aboutthisguide 61 1 objectives andtargetaudience 61 2 relateddocumentation 61 3 conventions usedinthisguide 62 introduction 73 security 83 1 security requirements 83 2 security restrictions 83 3 separate apiandmqipassword 93 4 secret word 94 sendmoney usinganhttpsrequest 114 1 sending atransfer preparerequest 114 1 1executingthe transfer 134 1 2repostingthehttpstransferrequest 145 merchant query interface 155 1 mqiactions 155 1 1repost transactionstatus 155 1 2viewtransactionstatus 165 1 3viewaccounthistory 175 1 4cancelarecurringpayment 185 1 5viewrecurring payment status 185 1 6extend theend dateofarecurringpayment 195 1 7cancelaskrill 1tappayment 195 1 8viewskrill1tappayment status 195 2 errormessages 206 refunds 216 1 preparationoftherefund 216 1 1errormessages 236 1 2preparerefund examples 236 2 executionoftherefund 236 2 1refundexecutionexample 246 3 refundstatus report 266 3 1md5signature 267 appendices 287 1 iso4217 currencies 287 2 errormessages 298 glossary 31contents skrillautomatedpaymentsinterface guide2 5 skrill2016 page61 thisguide1 1 objectives andtargetaudiencethisguidedescribes howtousetheskrillautomatedpayments interface \\( api \\) theskrillapiprovideanalternative meansofconnectingtotheskrillpaymentgateway andcanbeusedtoautomatetransactionrequests asmasspayments queries refunds \\( whereavailablethisfeatureisnotsupported forallmerchant types \\) youwillneedaworkingknowledgeofhtmlandxmlandanunderstanding ofhowtosendand receive informationusingtheseprotocols theguidecoversthedifferenttransactionrequestoptionsand provides instructionsonhowtoimplement 1 2 related documentationyoushould usethisguide together withtheadditionalskrilldocuments described 1 3 conventions usedinthisguidethetablebelowlistssome oftheconventionsusedinthis guide table 11 otherguides guide descriptionskrillquickcheckout integration guide describes howtointegrateandcustomisetheskrillquickcheckout applicabletoecommerce merchants skrillwalletcheckoutintegration guide describes howtointegrateandcustomisetheskrillwalletcheckout applicabletowalletmerchants table 12 listofconventions conventiondescriptionreferenceindicatesareferencetoanother sectioninthisguide forexample refertouseradministration onpage34 code example usedtoillustrateexample code functions andcommands filepathusedtoindicateafilepathorfolder structure glossary glossary term menu1 menuoption2 indicatesamenu path skrillautomatedpaymentsinterface guide2 5 skrill2016 page72 introductiontheskrillautomatedpayments interfaceenables youtoexecute automatedrequeststoskrill including sending money toyourcustomers skrill 1taptransactions managing recurringpayments checking thestatusoftransactions andrecurring payments downloading accounthistoriesandrepoststatus reports refunding payments \\( whereavailable \\) theseoptions aredescribed indetail inthisguide note westrongly advisethat youcall theskrill urls byhostnamewhenmaking requestsratherthanhardcoding thestaticipofthe skrill server whichissubjecttochange contactforqueriesforallmerchantsupport please contactthe skrill merchantservicedepartment email merchantservices skrill com table 21 contactnumbers language telephone number operating times \\( weekdays \\) english44 203 308 25208am 5pm gmtgerman49 302 2403 02938am 5pm gmtspanish34 935 452 3908am 5pm gmtitalian39 064 523 6612 8am5pm gmtpolish48 221 288 257 8am5pm gmtczech44 203 308 25208am 5pm gmtfrench33 173 443 315 8am5pm gmtrussian7 495 249 5439 8am5pm gmtromanian44 203 308 25208am 5pm gmtturkisj44 203 308 25208am 5pm gmtgreek44 203 308 25208am 5pm gmtchinese44 203 308 25208am 5pm gmtenglish us1 855 719 20878am 6pm estspanish us1 855 719 20878am 6pm est skrillautomatedpaymentsinterface guide2 5 skrill2016 page83 security 3 1 security requirementsallrequests tothe apimust bestandardhttpsget post requests allendpointsaccept methods thehttpsprotocol providesasecure means ofverificationoftheprogram ontheclienthost plain text httprequests areforbiddenandiftheclient sends anhttprequest totheserveritwillbedenied skrill recommend usingpostformaximum security notmixget andpost requests choose whichmethodtouseandapply consistently notmixget andpost calls choose preferred method andusethatforallskrillmqi apicalls post parametersareencodedusingcontent type application xwwwformurlencoded get parametersaresent aspartoftheurl querystringtip ifyoucurrentlydonotsend httpsheaders fortracking reasons youshouldbeaware thatthis beused asaloopholebypotentialwebsitehackers 3 2 security restrictions bydefault theautomatedpayments interface andmerchant query interfacearedisabled themqiisusedfor thefollowingfunctions repost transactionstatus informationforpayment transactions \\( wallet quickcheckout paymentsand1tapsubsequentpayments \\) view transaction status \\( payment andsend moneytransactions \\) view accounthistory cancel arecurring payment view thestatusofarecurringpayment extend theenddateofarecurringpayment cancel a1tap payment view thestatusofa1tappayment theapiisusedforthe following functions refund quick checkout walletcheckout 1tappayments \\( available \\) transfer money toanother skrillaccount \\( send money \\) taking subsequent 1tappayments \\( aftertheinitialsetup payment \\) skrillautomatedpaymentsinterface guide2 5 skrill2016 page9toenablethemqiand orapi 1 log intoyourskrillaccountatwww skrill com 2 go tosettings developer settings 3 check theenable servicecheckbox nexttotheservicesyou wanttoenable figure31 enable api mqiservice4 specify atleast oneipaddressfromwhichrequestswillbemade allrequestsfrom ipaddressesaredenied accesscanbegranted asingle ipaddress \\( e g 192 168 0 2 \\) multiple ipaddresses separatedbyspace \\( e g 192 168 0 2 10 0 0 2 \\) asubnet incidr notation \\( e g 192 168 0 0 24 \\) enter alistofipsoratleastone ipaddress \\( aniprange \\) inthetext fieldsinthecorrespondingsections 5 applyyourchanges click save 3 3 separate apiandmqipasswordyoumustuseaseparate passwordformakingapiormqirequests thisensures thatthepassword youusetoaccessyourskrilldigital walletaccountcan bechangedwithoutaffectingthe apiormqi toenableaseparateapi mqi password 1 thesettings developer settings area check enable separateapi mqipassword checkbox 2 enter anew passwordand confirmitintheretypepassword boxbelow skrillautomatedpaymentsinterface guide2 5 skrill2016 page10figure32 changemqi apipasswordnote thepasswordmustbeatleast8characters longandmustcontainatleastonealphabetic andonenonalphabeticcharacter 3 click save 3 4 secret wordthesecret wordisused forthefollowing constructthe msiddigitalsignature parameter thisparameter issent tothereturn urlifthesecure return urloptionisenabled foryourmerchant account thissignatureisusedtoverifytheauthenticity oftheinformationsenttothereturn url oncepaymentiscomplete createthe digital signature parameters used toverifytheauthenticity ofthepayment status informationthatskrillsends tothestatus url theemailcheck tool tocarryoutantifraud checks onemail addresses toinsert asecret word 1 go tothesettings developer settings sectionofyourskrillaccount 2 thesecretwordfield enteryoursecret word thefollowingrestrictionsapply characters must beinlowercase lengthshouldnot exceed10characters special characters arenotpermitted \\( e g etc \\) note ifyouinsert anyuppercase symbols theywillautomatically beconvertedtolowercase 3 applyyourchanges click save skrillautomatedpaymentsinterface guide2 5 skrill2016 page114 send moneyusinganhttpsrequestyoucanmakemasspayments usingtheskrillautomatedpayments interface \\( api \\) thisoffers thesamefunctionality isavailable onmyaccount enables youtoautomatethesendingofpaymentdetails yourserverstoskrill usinganhttpsrequest automatedpaymenttransfersareimplemented bysending anhttpsrequest tothefollowingurl https www skrill com app pay pl theprocessconsists oftwosteps sending atransfer prepare request executing thetransfer aftereachstep skrillreturns axmlresponsethat contains theresultoftheperformed action seetheexample figure41 steps inthe transferrequestnote werecommend youopenatestaccounttotestyourmass payment transaction youcanopenanewskrilldigital walletaccountonlineandsendarequesttothemerchantservice teamtoenablethisasatestaccount testaccountsoperateinthelive environment funds cannotbesentfrom atestaccounttoaliveaccount 4 1 sending atransferpreparerequestqueryparameter action prepareyoumustinclude theparametersdescribed inyourhttpsrequest table 41 sendmoneyapiprepare requestparametersparameter descriptionrequired \\? example value actiontherequired action inthefirststep thisis prepare yesaction prepare emailyouremail address yesinfo merchant com passwordyourmd5api mqipassword yes9f535b6ae672f627e4a5f79f2b 7c63fe skrillautomatedpaymentsinterface guide2 5 skrill2016 page12skrill responseskrillreturnsanxmlresponse toyourrequest whichcontainsa 'response' tagwithoneofthefollowingelements 'sid' elementreturnediftheauthorisationandpaymentpreparationissuccessful thesid \\( session identifier \\) mustbesubmitted inyourtransfer executionrequest \\( see table4 2onpage13 \\) 'error' element includedifanerroroccurs itincludes an'error msg 'tag whichcontainstheerrormessagedescription example 1 successful prepare requestbelow isanexample ofasuccessful preparerequest request get https www skrill com app pay pl \\? action prepare email merchant host com password 6b4c1ba48880bcd3341dbaeb68b2 647f amount 1 2 currency eur bnf email beneficiary domain com subject subject note note frn trn id 111 response \\? xml version 1 0 encoding utf 8 \\? response sid 5e281d1376d92ba789ca7f0583e045d4 sid response example 2 failedprepare requestthisexampleshows arequestthatfailed duetoamissing amount request get https www skrill com app pay pl \\? action prepare email merchant host com password 6b4c1ba48880bcd3341dbaeb68b2 647f currency eur bnf email beneficiary domain com subject subject note n ote frn trn id 111 amountamount tobetransferred yes10 95currencycurrencyoftheamount yeseur bnf email recipient emailaddress yescustomer host com subject subject ofthenotification email yesyourorder isreadynotecomment tobeincludedinthenotificationemail yesdetailsareavailable onourwebsite frn trn id yourreferenceid \\( must beunique ifsubmitted \\) noa1234table 41 sendmoneyapiprepare requestparametersparameter descriptionrequired \\? example value skrillautomatedpaymentsinterface guide2 5 skrill2016 page13response \\? xml version 1 0 encoding utf 8 \\? response error error msg missing amount error msg error response 4 1 1 executing thetransferquery parameter action transfer webserversshould includethesidinformationprovided inthexmlresponse fromskrillinthe transfer execution request asdescribed skrill responsethecorrect xmlresponsecontains 'response'tagthatincludes thefollowingelements 'transaction' element returned ifthepaymentissuccessful theresponse includesthefieldsdescribed intable4 3below 'error' element returnedifanerroroccurs theresponse includesthe'error msg 'field whichprovides detailsofthe error example ofasuccessfultransferrequestrequest get https www skrill com app pay pl \\? action transfer sid 5e281d1376d92ba789ca7f0583e045d4 response \\? xml version 1 0 encoding utf 8 \\? response transaction amount 1 20 amount currency eur currency id 497029 id status 2 status status msg processed status msg transaction response table 42 execute transfer request parametersfielddescription required \\? example valueactiontherequiredaction inthesecondstep thisis transfer yesaction transfersid session identifier returnedinresponse tothepreparerequest yes5e281d1376d92ba789ca7f0583 e045d4table 43 successfulresponsetotransfer requestfielddescriptionamountamount paidinthecurrency ofyourskrill account currencycurrency ofyourskrillaccount idtransaction id statusnumeric valueofthetransactionstatus 1 scheduled \\( ifbeneficiary isnot yetregisteredatskrill \\) 2processed \\( ifbeneficiaryisregistered \\) status msgtext valueofthetransactionstatus skrillautomatedpaymentsinterface guide2 5 skrill2016 page144 1 2 reposting thehttpstransferrequestifthereisacommunication errorduring thetransfer youmust resendthetransferrequestwithin15minutesoftheprevious request \\( since transferrequestsessions expireafter15minutes \\) note theskrillserver executes onlyonetransactionper session sotherequestwillnotbeduplicated therearethree possibleoutcomes toreposting httpsrequest depending onthetransferexecution status atransactionhas already beenexecutedwithinthissession thenyouwillneedtogenerate anewsession id since onlyonetransactionisallowedper session thereisatransactionintheprocessofexecution whichisalready associatedwiththissession thenskrillrespondswithstatusexecution pending inthis caseyoudonotneed togenerate anewsessionidandcanwaitfortheresponse thetransfer requestisnew \\( e notexecuted orpending \\) thenitwill either succeedorfailandtheresultwillbearesponseasdescribedintheskrillresponse onpage13 skrillautomatedpaymentsinterface guide2 5 skrill2016 page155 merchant queryinterfacethemerchantqueryinterface allows youtoquery theskrilldatabaseforthecurrentstatusofyourtransactionsaswellasperformactionsconnected toskrill1tapand recurringpayments canaccess themqibypostinganhttpsquery https www skrill com app query plthemqirequiresthreegeneralparameterstobeincludedinyourquery \\( email passwordandaction \\) andanumber ofparametersspecific totherequestedaction \\( seemqiactionsbelow \\) 5 1 mqi actionsthefollowingmqiactionsaresupported reposttransaction status viewtransaction status viewaccount history cancelarecurring payment viewrecurring payment status extendthe end date ofarecurring payment cancelaskrill1tap payment viewskrill1tap payment statuseachoftheseisdescribedinmore detailbelow 5 1 1 repost transactionstatusqueryparameter action repost thisactionallowsyoutorequestarepostofthestatusofatransactiontoyourstatus urlpage note isarepostofthesamestatus reportthatwasposted whenthepaymentwasmade andissenttothesamestatusurl thatwasspecifiedinthe originalpayment table 51 generalquery parametersfieldname description required \\? example valueemailthe emailaddress ofyourskrillaccount yesinfo merchant com passwordthe lowercase hexmd5ofyourapi mqipassword yes9f535b6ae672f627e4e5f7 9f2b7c63feactionthe requiredaction yesrepost skrillautomatedpaymentsinterface guide2 5 skrill2016 page16inresponse skrillpostsastatus report \\( details refer tothe skrillquickcheckoutintegrationguide orskrillwalletcheckoutintegrationguide asappropriate \\) ifnostatus reportwaspostedinitially thisactionwillreturn 403transaction found trn id error theparameters listedbelowarerequired notes either trn id ormb trn id mustbesupplied ifbotharegiven trn id willbeused status url isnot provided thestatus url givenatthetime transactionwascreated willbeused asuccessful httprequest thehttp response code200okisreturned 5 1 2 view transactionstatusqueryparameter action status trn thisactiongivesadirect responsewiththestatusofthepayment itincludes thesamedetails asinthe repost action sendsthisadirectresponsetotherequest ratherthan totheoldstatusurl thefollowingparametersarerequired notes either trn id ormb trn id mustbesupplied andifbotharegiven trn id willbeused atransaction withthegivenidisfound theresponsewillbeaquerystringthat containsthetransactiondetails thestring isencodedusingthe application xwwwformurlencoded format table 52 repost parametersfieldname descriptionrequired \\? example value trn idyour transaction id yes no500123 mb trn idskrill transaction id yes no4585262 status urlwhere topostthe notification nohttps www merchant com mb notifications asptable 53 transactionstatusparametersfieldname descriptionrequired \\? example value trn idyour transaction id yes no500123 mb trn idskrill transaction id yes no4585262 skrillautomatedpaymentsinterface guide2 5 skrill2016 page175 1 2 1 examples apitransactionrequest get https www skrill com app query pl \\? action status trn email mb654 abv bg password 53903d217504eb37f3fdb0ce7761 0558 mb trn id 104627261 response 200 ok status 2 merchant id 6999381 mb transaction id 104627261 mb amount 1 2 pay email mb654 40abv bg currency bgn amount 2 346996 transaction id pay email test 40 test bg mb currency eur paymentgatewaytransaction request get https www skrill com app query pl \\? action status trn email merchant host com password 53903d217504eb37f3fdb0c e77610558 mb trn id 104441110 response 200 ok status 2 field1 tr234567 md5sig 6ab68d3465f57492b7412ed0eb013621 merchant id 999998 1 pay email merchant 40host com mb amount 33 24911 mb transaction id 101149910 c urrency eur amount 17 transaction id 49989810fa3ed45c pay email payeremail 40h ost bg mb currency bgn 5 1 3 view accounthistoryqueryparameter action historyyoucanusethe history action torequest alistofallyourtransactionsforaspecified period followingparameters arerequired notes upon success skrillreturnsthecomplete accounthistoryforthespecified periodincsv \\( comma separated values \\) format theend date parameter isnotspecified skrillusestoday sdate table 54 historyparameters fieldname descriptionrequired \\? example value start datethe startdateinddmmyyyyformat yes29 052012 end datethe enddateinddmmyyyy format no30 062013 skrillautomatedpaymentsinterface guide2 5 skrill2016 page185 1 3 1 example request get https www skrill com app query pl \\? email merchant host com password 53903d217504eb37f3fdb0ce77610558 action h istory start date 25 05 2013 end date 25 06 2013 response text csv file mb history csv 5 1 4 cancel arecurringpaymentqueryparameter action cancel recthisactionallowsyoutocancel arecurring payment thefollowingparametersarerequired forasuccessful httprequest thehttp response code200okisreturned 5 1 5 view recurringpaymentstatusqueryparameter action status rec thisactionallowsyoutocheckthestatusofarecurringpayment thefollowingparametersarerequired ifatransaction withthegivenidisfound theresponsecontains thefollowingparameters status 0 active 1 cancelled 2 failed 1 finished next payment dateinddmmyyyyformat thisparameter isreturnedonly ifstatusis active failed end dateinddmmyyyyformat thisparameter isreturnedonlyifstatusis active failed 5 1 5 1 recurring paymentstatusexample request get https www skrill com app query pl \\? action status rec email merchant host com password 2813f1526cd435d296a2a8f ee37889ad trn id yourtansid123 response 200 ok status 0 next payment date 26 05 2013 end date 26 12 2013 table 55 cancelparametersfieldname descriptionrequired \\? example valuetrn idyour transactionid yes500123 table 56 recurring payment statusparametersfieldname descriptionrequired \\? example valuetrn idyour transactionid yes500123 skrillautomatedpaymentsinterface guide2 5 skrill2016 page195 1 6 extend theenddateofarecurringpaymentqueryparameter action extend recthisactionallowsyoutoextend enddate \\( rec end date \\) ofarecurring payment toenablethisoption send arequesttomerchantservices skrill com thefollowingparametersarerequired forasuccessful httprequest thehttp response code200okisreturned 5 1 7 cancel askrill 1tap payment queryparameter action cancel od thisactionallowsyoutocancel askrill1tappayment thefollowing parameterisrequired forasuccessful httprequest thehttp response code200okisreturned 5 1 8 view skrill1tappaymentstatusqueryparameter action status odthisactionallowsyoutocheckthestatusofaskrill1tappayment thefollowingparameter isrequired ifatransaction withthegivenidisfound theresponsewillcontainfollowingparameters status 0 active 1 cancelled last executiondateinddmmyyyyformat table 57 extend end dateparametersfieldname descriptionrequired \\? example value trn idyour transactionid yes500123 rec end datethe recurrentenddateinddmmyyyyformat yes30 062013table 58 cancel1tapparametersfieldname descriptionrequired \\? example value trn idyour transactionid yes500123 table 59 1tappaymentstatusparameters fieldname descriptionrequired \\? example valuetrn idyour transactionid yes500123 skrillautomatedpaymentsinterface guide2 5 skrill2016 page205 2error messagesthefollowingerrormessages bereturned bythemerchant query interface table 510 mqierrormessageserrordescriptionreasonforerror401unauthorised cannotloginauthentication isrequiredandhasfailedorhasnotyetbeen provided 402payment requiredreserved forfutureuse 403forbiddenthe requestwasavalidrequest theserverisrefusingtorespondtoit forexample theprovided credentials weresuccessfully authenticated butdonotgranttheclient permission toaccess theresource 404not foundthe requested resourcecould notbefound 405method notalloweda request wasmadeofaresource usingarequest method notsupported forexample usinggetonamethod whichrequiresdatatobepresented viapost skrillautomatedpaymentsinterface guide2 5 skrill2016 page216 refunds note refundsarenotavailableforgamblingandforexmerchant syoucanusetheautomatedpayments interface tomakeautomatedpartialorfullrefundstocustomers uptotheamountoftheoriginalpayment youmustsend yourhttpsrefundrequesttothefollowingurl https www skrill com app refund pltherefundismadeintwosteps preparation oftherefund execution oftherefund 6 1 preparation oftherefundqueryparameter action preparethefollowingparametersmustbeincluded intherefundpreparerequest table 61 refundauthorisationparametersfielddescriptionrequired example actiondefines thepreparestepoftherefund request yesaction prepare emailyour emailaddress yesinfo merchant com passwordthe md5ofyourapi mqipassword note thelowercaseofthemd5valueisaccepted yes9f535b6ae672f627e4a5 f79f2b7c63fetransaction idyour transactionidtoberefunded yes no500123 mb transaction idthe skrilltransactionidtoberefunded yes no4585262 amountamount torefundinthecurrency usedbythemerchant account field isonlyusedforpartialrefunds no9 99 refund noterefund notesenttothecustomer thisnoteformspartoftheemailsent tothecustomertoinformthem thattheyhavereceivedarefund noproduct nolongerinstockmerchant fields acomma separatedlistoffieldnames thatare passedbacktoyourserverwhen therefundpaymentisconfirmed \\( maximum 5fields \\) nofield1 field2 skrillautomatedpaymentsinterface guide2 5 skrill2016 page22notes mustsubmit either transaction id mb transaction id amount valueissubmitted therefundwillbeforthefullamountoftheoriginal transaction refund note valueissubmitted itisshown inthebody ofthenotificationemailsent tothe customer xmlserverresponsetheresultingxmlcontainsa 'response'tag withoneofthefollowingelements depending onthesuccess oftheoperation 'sid \\( session identifier \\) element returnedifthepreparerequest issuccessful mustbesubmittedwith therefund action inthe nextstep response sid 4504848cb1ed0d29f60458bf992399fd sid response field1an additionalfield youcan include containingyourownuniqueparameters novalue1 field2an additionalfield youcan include containingyourownuniqueparameters novalue2 refund status urlurl oremailaddress towhichstatusupdatesshould besent thefollowing portscan beused forthisurl 80 81 82 83 88 90 178 419 433 443 444 448 451 666 800 888 1025 1430 1680 1888 1916 1985 2006 2221 3000 4111 4121 4423 4440 4441 4442 4443 4450 4451 4455 4567 5443 5507 5653 5654 5656 5678 6500 7000 7001 7022 7102 7777 7878 8000 8001 8002 8011 8014 8015 8016 8027 8070 8080 8081 8082 8085 8086 8088 8090 8097 8180 8181 8443 8449 8680 8843 8888 8989 9006 9088 9443 9797 10088 10443 12312 18049 18079 18080 18090 18443 20202 20600 20601 20603 20607 20611 21301 22240 26004 27040 28080 30080 37208 37906 40002 40005 40080 50001 60080 60443 nohttps www merchant com refund update cqi table 61 refundauthorisationparametersfielddescriptionrequired example skrillautomatedpaymentsinterface guide2 5 skrill2016 page23 'error 'element returned ifanerror occurs containsan'error msg 'tagwiththeerrormessage response error error msg cannot login error msg error response 6 1 1 error messagesseethetablebelowfordetailsoferrormessages 6 1 2 prepare refundexamplessuccessfulpreparerequestrequest post https www skrill com app refund pl content type application x www form urlencoded action prepare email info merchant com password 9f535b6ae672f627e4a5f79f2b7c63fe tr ansaction id 500123 amount 9 99 refund note example note refund status url https www merchant com refund update cqi merchant fields field1 field2 field1 value1 field2 value2 response response sid d831e9072e8b89c57a3654ddf5fcb907 sid response incorrectrequest \\( invalid merchantapi mqipassword \\) request post https www skrill com app refund pl \\? action prepare email info merchant com password 9f535b6ae672f627e4a5f79f2 b7c64fe amount 9 99 refund note example note refund status url https www merchant com refund update cqi merchant fields field1 field2 field1 value1 field2 value2 response response error error msg cannot login error msg error table 62 refundauthorisationerror messageserrormessagedescriptioninvalid missing actionthe action parameter isnotsuppliedinthequery refund deniedrefund featureisnotactivated login invalidmissing email password parameters invalid emailan invalid email parameter issupplied cannot logininvalid combinationofemailandpasswordissupplied skrillautomatedpaymentsinterface guide2 5 skrill2016 page24 response 6 2 execution oftherefundqueryparameter action refundthefollowingparametersmustbeincluded intherefundexecutionrequest xmlserver responsetheserverreturnsxmlcontaining response tag whichincludes ofthefollowingelements depending onthesuccess oftheoperation table 63 refundexecutionparametersfielddescriptionrequiredexample actiondefines theexecutionstepoftherefund request yesaction refund sidsession identifier returnedinresponse tothepreparerequest yesd831e9072e8b89c57a3654d df5fcb907 table 64 refundresponsefielddescriptionexample mb amountamount refunded inthe currencyofyourskrillaccount 9 99 mb currencycurrency ofyourskrillaccount eur transaction idyour refundtransactionidassubmitted intherequest 500123 mb transaction idthe skrilltransactionidfortherefund 5585262 field1the firstadditional fieldpredefined merchant field parameter value1field2the second additionalfieldpredefined merchant field parameter value2status 2 processed 0 pending 2 failed 2 errorbalance enoughrefund amountexceedsaccountbalance cc refund failedcc refund failedrefund toacredit debit cardfailed reserve exceededrefund amountisblocked byrolling fixedreserve generic errorother errors different described note thiserrorcode isalsousedifthistransaction hasalreadybeenrefunded skrillautomatedpaymentsinterface guide2 5 skrill2016 page256 2 1 refund executionexamplerequest gethttps www skrill com app refund pl \\? action refund sid d831e9072e8b89c57a3654ddf5fcb907 response response mb amount 2 mb amount mb currency eur mb currency mb transaction id 381526883 mb transaction id field1 value1 field1 field2 value2 field2 status 2 status transaction id response skrillautomatedpaymentsinterface guide2 5 skrill2016 page266 3 refund statusreportifarequestforrefundcannotbeexecuted atthemoment skrillsends aresponsewithstatus 0 \\( pending \\) inthepreparestep whenskrill receivesanupdate onthestatusofthe refund anotificationissent toyourrefund status url page ifyouwouldlike toreceivenotifications foreverystatusofyourrefundrequest contact themerchant servicesteam thisstatusreportconsistsofthe followingfields 6 3 1 md5 signaturethe md5sig parameterconsists ofanmd5sumonastring builtbyconcatenatingthefollowing parametersandconverting theresulttouppercase table 65 statusreportfieldsfielddescriptionrequiredexample transaction idyour transactionidfortherefundassubmittedinthe request yes no500123 mb transaction idthe skrilltransactionidforthe refund yes5585262 status 2 processed 2 failed yes2 mb amountamount refundedinthecurrencyofyourskrillaccountyes9 99 mb currencycurrency ofyourskrillaccount yeseur md5siguppercase md5signature seemd5signaturebelow yes9f535b6ae672f627e4a5f 79f2b7c63fe sha2siguppercase sha2 signature isconstructedinthesamewayasthemd5 signature butwithadifferenthashingalgorithm parameter isnotavailablebydefault toenablethis option sendarequesttomerchantservices skrill com nodbb7101322257a311f08d 1c527053058fc7e464e30 bcfb4613f09053c22dd1f 8table 66 md5signature parameters value descriptionexample merchant idyour skrill accountuserid 4637827 mb transaction idthe newskrilltransactionidforrefund 5585262 md5ofsecretwordthe uppercase md5valueofthesecretwordsubmittedinthesettings developer settings sectionofyourskrillaccount 327638c253a4637199c eba6642371f20 skrillautomatedpaymentsinterface guide2 5 skrill2016 page27example code concatenatedfields inrubycode fields merchant id mb transaction id digest md5 hexdigest \\( secret \\) upcase mb amount mb currency status join md5sig digest md5 hexdigest \\( fields \\) upcase usingtheexamplevaluesintable6 6above thefollowingmd5codeisreturned cf9dca614656d19772ecab978a56866d mb amountamount refundedinthecurrencyofyouraccount 9 99mb currencycurrency ofyouraccount eur statusthe statusoftherefundtransaction 2 table 66 md5signature parameters skrillautomatedpaymentsinterface guide2 5 skrill2016 page287 appendices 7 1 iso4217currenciestable 77 iso4217currenciesaccepted byskrilleureurotwd taiwandollarusd u dollarthbthailand baht gbp britishpoundczkczechkoruna hkd hongkongdollarhuf hungarian forint sgdsingaporedollar bgn bulgarianlevajpy japaneseyen pln polish zlotycadcanadiandollariskicelandkronaaudaustraliandollarinrindian rupeechfswissfranckrwsouthkoreanwondkkdanish kronezarsouthafrican rand sek swedishkrona ronromanian leunew noknorwegian kronehrk croatian kunailsisraelishekeljod jordaniandinarmyrmalaysian ringgit omromani rial nzd newzealand dollarrsdserbian dinartry newturkishliratnd tunisian dinar aedutd arabemir dirham bhdbahraini dinarmadmoroccan dirhamkwdkuwaiti dinarqarqataririal sarsaudiriyal skrillautomatedpaymentsinterface guide2 5 skrill2016 page297 2 error messagestable 78 errorswhen validatingparameter errorresolution invalid missing actionwrong actionornoactionisprovided login invalidemail address orpasswordwerenotprovidedinvalid rec payment idinvalid recurringpayment idissubmittedbythe merchant missing emailprovide registeredemailaddressofmerchant accountmissing passwordprovide correct api mqi passwordmissing amountprovide amountyouwishtosendmissing currencyprovide currencyyouwishtosendmissing bnf emailprovide email addressofthebeneficiarymissing subjectprovide subjectofthe payment missing noteprovide notes forthe payment table 79 errorsduring loginerrorresolution cannot loginemail address orapi mqipassword areincorrectpayment deniedcheck inyouraccountprofile thattheapiisenabled andyouareposting yourrequestsfrom theipaddressspecifiedtable 710 errorswhenvalidatingpayment details errorresolution invalid bnf emailcheck theformatofthebeneficiaryemailaddress invalid subjectcheck parameter lengthsubmittedinvalid notecheck parameter lengthsubmittedinvalid frn trn idcheck parameter lengthsubmittedinvalid amountcheck amount formatinvalid currencycheck currencycode execution pendingif youresendatransferrequestwith thesamesession identifierbeforethe'transfer' requestwasprocessed thiserrorwillbereturnedalready executedif youhaverequestedthatthevalueforfrn trn idmustbeuniqueforeachtransfer thiserrorwillbereturned whenyoutrytosubmit thesamevalueformorethanonetransfer skrillautomatedpaymentsinterface guide2 5 skrill2016 page30balance enoughsending amountexceedsaccountbalancesingle trn limit violatedmaximum amount pertransaction eur10 000 disallowed recipientyou notpermittedtosend moneytotherecipient e g gamingmerchants arenot permittedtosendorreceivepayments usbased customers check verified emailyour accountemailaddress needstobeverifiedll paymentyour accountislocked securityreasons please contact ustable 711 errorswhenmakingskrill 1tap payment requests errorresolutioncustomer lockedthe customer 's accountislockedforoutgoing payments balance enoughthe customer 's accountbalanceisinsufficient recipient limit exceededthe customer 's accountlimitsarenotsufficientcard failedthe customer 's creditordebit card failedrequest failedgeneric response fortransactionfailingforany reasonondemand cancelledthe customerhascancelled thisskrill1tappayment ondemand invalidthe skrill1tappayment requesteddoes notexistmax req reachedtoo manyfailed skrill1tappayment requeststotheapi forsecurityreasons twofailedattempts peruserper24hoursareallowed max amount reachedthe paymentamountisgreaterthanthe maximum amount configuredwhen1tappaymentsweresetupforthisuser table 710 errorswhenvalidatingpayment details errorresolution skrillautomatedpaymentsinterface guide2 5 skrill2016 page318 glossary thissectionprovides adescriptionofkeytermsusedinthis guide termexplanation acquireranacquiringbank \\( acquirer \\) isthebankorfinancialinstitutionthatprocesses creditandordebit cardpayments foramerchant example barclaysmerchantserviceandeuropean merchant services apitheapiisacollection oftools thatenablesmerchants toexecuterequests totheskrillpayment gateway example tosendmoney make1payments makerefunds check thestatus oftransactions anddownloadreports back endsystem asopposedtoafrontendsystem abackendsystem usedinternally byskrill orwithinthe merchant business skrill merchants alsousepayment informationreturnedfromtheskrillpayment platform ontheirownbackendsystems suchtheir customer order management system batch agroupofapproved creditcardtransactions accumulated onebusinessday \\( weekendsand official bank holidaysexcluded \\) browser application enables acustomerormerchant toaccessweb pages examples include internetexplorer google chrome andmozillafirefox cancel requesttocancels atransaction isonly possiblebeforeyouhavecapturedthepayment oruntilthepreauthorisation expires itcanbeforapartialamount customer idontheskrillpayment platform amerchant maybeconfiguredwithmultiplecustomer idssetupfordifferent channels \\( tobeconfusedwiththecustomerid field \\) customer servicesteamskrill team responsibleforendcustomer supportqueries alsoreferred toasthe merchantservices team integration process undertaken bymerchants toensurethattheirwebsiteorshopping cartcan connecttoandcommunicate withskrill payment processing systems isocountrycodes 3digit country code oftheinternational standards organisation \\( iso \\) identifiesthecountry forexample gbr forunited kingdom isocountrycodesalsoexist ina2digit format isocurrencycodes 3digit currencycodeoftheinternationalstandards organisation \\( iso \\) identifiesthecurrency forexample gbpforbritishpound md5awidelyusedhashalgorithm whichcan beusedforsecurelyencrypting informationsentovertheinternet md5produces a128bit \\( 16byte \\) hashvalue thepurposeofthefield istoensuretheintegrity ofthe datapostedback tothemerchants server skrillautomatedpaymentsinterface guide2 5 skrill2016 page32merchant skrill customer \\( legal ornaturalperson \\) using theirskrillsolutiontoreceivepayments forproducts orservicestheyprovide merchant id \\( mid \\) amerchant identifier providedbythe acquirer usedtouniquely identify amerchant withinthe banking network whenatransactionisprocessed merchant servicesteamskrill team responsibleforprovidingtechnical andservicesupporttomerchants myaccountcustomer accountadministration portalthatenablesviewingoftransactionsandtransferringfunds onboarding process process ofsigningupand verifyingamerchant thisinvolves anumber ofteamsinskrill including salesandriskandcompliance onthepayment processingside thisprocessiscoordinatedbyadedicated onboarding team payment uniquefinancialrecord onthesystem apaymentmayconsistofmultipletransactions payment processing platformsystemusedfortheprocessing ofecommercetransactions pending transactionatransactioninwhichthepayment system iswaitingforaconfirmation aninput orcustomer action refund optiontopaymoney backtoacustomer whichcanbedoneusingtheapi therefund hastobereferencedtotheoriginalpayment andcanonly beuptothatamount skrillenablespartialorfullamountrefunds realtimeaneventthatoccurs instantlyorwithinashort period assecondsorminutes forarealtimetransaction thecustomer merchant orskrill receivearesponsetothetransactionrequestwhilethecustomer isstill online skrilldigital wallet theskrilldigitalwalletallowscustomerstolink cardsand paydirectly fromtheir walletaccountusingcardsorbanktransfer upto4payment cards and10bankaccountscan belinkedtoawalletaccount skrillquickcheckoutskrill product relatedtothe skrill digital wallet whichenablescustomers tobypasstheskrillregistrationdetailspage andsimplyconfirmand pay quickcheckout usesthe ecommerceplatformforprocessing payments skrillpayment platformskrill systemfortheprocessingofecommerce payments transactioneach financialinteractionwiththeskrillpaymentplatform isreferredtoasatransaction transactions arelinked topayments transactionidunique idassignedtoatransactionbythe skrill paymentplatform termexplanation skrillautomatedpaymentsinterface guide2 5 skrill2016 page33transactionstatuseach transactionontheskrillpayment platform isgivenastatus includes processed pending temporary scheduled cancelled failed chargeback andsuccessful termexplanation skrillautomatedpaymentsinterface guide2 5 skrill2016 page1aapiandmqipassword 9ccancel arecurringpayment 18cancel askrill1tap payment 19eenablethemqi andapi 8errormessages 20example ofasuccessful authorisationrequest12example ofasuccessful transferrequest 13executing thetransfer 13executing thetransfer 13execution oftherefund 23extend theenddateofarecurringpayment 19mmd5signature 26merchant queryinterface 15mqi actions 15ppreparation oftherefund 21rrefund errormessages 23refund statusreport 26refunds 21repost transactionstatus 15ssecret word 9security requirements 8security restrictions 8sendmoney usingtheapi 11skrillresponse 12ttransferauthorisationrequest 11transferpreparerequest 11transfersusinganhttpsrequest 11vviewaccounthistory 17viewrecurringpayment status 18viewskrill1tappayment status 19viewtransaction status 16index", 
    "descr2": "skrill limited 25 canada square canary wharf london e14 5lq uk skrill wallet integration guide use skrill wallet merchants guide describes connect skrill wallet checkout applicable wallet merchants www skrill com version 7 1 skrill wallet guide 7 1 skrill 2015 page 2 copyright 201 5 skrill ltd rights reserved material contained guide copyrighted owned skrill ltd together intellectual property material except personal non commercial use part guide may copied republished performed public broadcast uploaded transmitted distributed modified dealt manner without prior written permission skrill ltd way source intellectual property rights acknowledged maximum extent permitted law skrill ltd shall liable person organisation manner whatsoever use construction interpretation reliance upon information materials contained guide information materials subject change without notice skrill ltd assumes responsibility errors skrill ltd registered office skrill limited 25 canada square canary wharf london e14 5lq uk version control table date version description 19 02 2014 6 6 changes skrill 1 tap 20 05 2014 6 7 removal laser addition paysafecard 20 09 2014 6 8 addition trustly codes split gateway 09 01 2015 6 9 changes made coverage visa electron jcb diners 05 05 2015 7 0 removed slovakian koruna estonian kroon lithuanian litas currencies iso 4217 currency table removed individual bank payment method codes poland minor updates payment method codes 07 07 2015 7 1 updated screenshots ade changes modernised wallet checkout ui skrill wallet guide 7 1 skrill 2015 page 3 contents 1 guide 5 1 1 objectives target audience 5 1 2 related documentation 5 1 3 conventions used guide 5 2 introduction 6 2 1 connecting wallet checkout 8 2 1 1 payment process 9 2 2 steps payment process 10 2 2 1 redirecting customers skrill gateway \\( step 1 \\) 10 2 2 2 skrill customer login registration \\( step 2 \\) 15 2 2 3 skrill payment page \\( step 3 \\) 18 2 2 4 skrill transaction status page return merchant \\( steps 4 5 \\) 22 2 2 5 skrill status response 24 2 2 6 detailed status description 27 3 customization options 28 3 1 split gateway 28 3 1 1 fixed split gateway 28 3 1 2 flexible split gateway 28 3 2 reduced header option 28 3 3 recurring billing 30 3 4 skrill 1 tap payment 32 3 5 secure return url option 34 3 6 merchant refunds 35 3 7 chargeback notification 35 3 8 adding descriptor 35 3 9 display iframe 35 3 10 code integration examples 38 3 10 1 generating session identifier 38 3 10 2 redirecting customer skrill 38 4 appendices 39 4 1 iso 4217 cur rencies 39 4 2 iso country codes \\( 3 digit \\) 40 4 3 md5 signature 42 4 4 sha2 ignature 43 skrill wallet guide 7 1 skrill 2015 page 4 4 5 example html forms 43 4 6 payment method codes 45 4 7 failed reason codes 45 5 glossary 48 6 index 50 skrill wallet guide 7 1 skrill 2015 page 5 1 guide 1 1 objectives target audience guide provides details connect website skrill wallet checkout using skri wallet service intended users working knowledge html guide covers steps payment process information needs passed web servers skrill enable skrill process payments guide relevant skrill wallet merchants 1 2 related documentation use guide together additional skrill wallet checkout documents described guide description automated payments interface guide describes connect skrill using automated payments interface \\( api \\) supports functionality merchant queries system sending money processing refunds 1 3 conventions used guide table lists conventions used guide table 1 list conventions convention description reference indicates reference another section guide example refer introduction page 5 file path used indicate file path folder structure glossary glossary term skrill wallet guide 7 1 skrill 2015 page 6 2 introduction skrill wallet checkout secure skrill site redirect customers website make wallet payment skrill gateway collects customer payment details using standard html forms payment complete customer returned website receive real time notification payment includes details transaction requesting test account may need test account test integration skrill wallet checkout test accounts work live environment however funds cannot sent test account live account set test account 1 open n additional skrill digital wa llet account online via skrill website 2 inform skrill email address new account request enabled test account contact queries support queries contact merchant service department email merchantservices skrill com language telephone number operating times \\( weekdays \\) english 44 203 308 2520 8am 5pm gmt german 49 302 2403 0293 8am 5pm gmt spanish 34 935 452 390 8am 5pm gmt italian 39 064 523 6612 8am 5pm gmt polish 48 221 288 257 8am 5pm gmt czech 44 203 308 2520 8am 5pm gmt french 33 173 443 315 8am 5pm gmt russian 7 495 249 5439 8am 5pm gmt romanian 44 203 308 2520 8am 5pm gmt turkish 44 203 308 2520 8am 5pm gmt greek 44 203 308 2520 8am 5pm gmt chinese 44 203 308 2520 8am 5pm gmt english us 1 855 719 2087 8am 6pm est spanish us 1 855 719 2087 8am 6pm est skrill wallet guide 7 1 skrill 2015 page 7 skrill wallet guide 7 1 skrill 2015 page 8 2 1 connecting wallet checkout connecting skrill wallet checkout require adding skrill payment method website checkout payment page customer selects skrill ensure redirected skrill wallet checkout time need submit information payment merchant account email amount paid several hidden text fields use tandard html form collect pass payment customer details skrill example n html form shown section 4 5 example html form page 43 simplified illustration transaction flow shown figure 1 skrill wallet checkout customer 123458967merchant figure 1 skrill transaction flow 1 customer ready pay goods services website select skrill payment option website 2 request session identifier \\( sid \\) passing customer transaction details \\( e g amount currency language \\) skrill wallet checkout 3 skrill returns generated sid 4 using light box iframe redirect customer skrill wallet checkout include session identifier redirect url skrill displays relevant payment page 5 customer enters payment information plus details requested confirm transaction 6 skrill requests authorisation payment customer bank third party provider card issuer 7 bank provider approves rejects transaction 8 display confirmation page containing transaction result skrill wallet checkout 9 skrill provides asynchronous notification status url ipn \\( instant payment notification \\) confirming transaction details status skrill wallet guide 7 1 skrill 2015 page 9 2 1 1 payment process figure 2 provides detailed view interaction customer merchant skrill typical transaction note details l eft simplify diagram cancel url browser posts payment parameters e g payment amount using ssl merchant customer selects skrill payment option clicks cancel button cancel payment selects payment method clicks pay button checkout page merchant cancelled payment page step 5 merchant successful payment page step 2 page login register step 3 page choose payment method enters additional payment details executes payment merchant receives funds sends confirmation status url deliver services customer may directed external providers execute payment \\( e g online banking \\) login register step 4 page status page failed payment customer may need enter additional details clicking pay executes payment merchant receives funds external providers e g sofort paysafecard etc return url figure 2 payment flow customer merchant skrill skrill wallet guide 7 1 skrill 2015 page 10 2 2 steps p ayment process payment details collected customer notified result customer automatically returned relevant page website 123redirect customer skrill payment page iframe customer login registration choose payment method pay 4skrill transaction status page 5return merchant website 2 2 1 redirecting customer skrill gateway \\( step 1 \\) customer online checkout payment page website presented pay skrill button \\( see example \\) download copy button different sizes skrill website https www skrill com en business brand centre select skrill button website post html form containing transaction details http www skrill com app payment pl html form contain hidden input fields listed table 2 note maximise conversion skrill recommends redirect customer skrill wallet checkout browser window embed skrill page iframe \\( see section 3 9 page 35 \\) using standard skrill page minimum width window frame least 600 pixels skrill wallet checkout demonstration want demonstration skrill wallet checkout access test form https www skrill com app test payment pl note transactions processed real payments unless use demo accoun demo cards contact merchant services department merchantservices skrill com demo account download payment method logos skrill logos payment method icons displayed website available https www skrill com en business brand centre note need skrill account customer id use section skrill com see https help skrill com en article money deposits locate customer id number details skrill wallet guide 7 1 skrill 2015 page 11 parameters posted skrill gateway table 2 skrill wallet checkout parameters field name description required max length example value merchant details pay email email address skrill account yes 50 info merchant com recipient description description shown skrill payment page logo area logo url parameter 30 company name transaction id unique r eference identification number transaction \\( must unique payment \\) 100 a205220 return url url customer returned payment made field filled skrill gateway page close automatically end transaction customer returned page website redirected skrill secure return url option available \\( see section 3 5 page 34 \\) 240 http www merchant com payment htm return url text text button customer finishes payment 35 return main website return url target specifies target return url value displayed upon successful payment customer default value 1 1 top' 2 parent' 3 self' 4 blank' 1 3 cancel url url customer returned payment cancelled fails cancel url provided cancel button displayed 240 http www merchant com paymen cancel led htm cancel url target specifies target cancel url value displayed upon cancellation payment customer default value 1 1 top' 2 parent' 3 self' 4 blank' 1 1 status url url transaction details posted payment process complete alternatively may specify email address results sent status url omitted transaction details sent 400 https www merchan com process payme nt cqi mailto info merchant com skrill wallet guide 7 1 skrill 2015 page 12 field name description required max length example value status url2 second url transaction details posted payment process complete alternatively may specify email address results sent 400 https www merchan com process payme nt2 cqi mailto info2 merchant com language 2 letter code language used skrill pages bg cs da de el en es fi fr zh nl pl ro ru sv tr ja yes 2 en logo url url logo would like appear top right skrill page logo must accessible via https shown logo resized fit avoid scaling distortion minimum size follows logo width height least 107px width logo width height least 65px height avoid large images \\( much greater 256 256px \\) minimise page loading time 240 https www merchan com logo jpeg prepare forces sid returned without actual page useful using secure method redirect customer gateway details see section 2 2 1 1 page 14 accepted values 0 \\( default \\) 1 \\( prepare \\) 1 1 rid pass unique referral id email affiliate customer referred rid value must included within actual payment request 100 123456 ext ref id pass additional identifier field order track affiliates must inform account manager exact value submitted affiliates tracked 100 affiliate name merchant fields comma separated list field names passed status url payment confirmed \\( maximum 5 fields \\) 240 field1 field2 field 1 example merchant field 240 value 1 field 2 example merchant field 240 value 2 skrill wallet guide 7 1 skrill 2015 page 13 field name description required max length example value customer details \\( used speed registration login \\) pay email email address customer making payment left empty customer enter email address 100 payer skrill com firstname customer first name 20 john lastname customer last name 50 payer date birth date birth customer format ddmmyyyy numeric values accepted 8 01121980 address customer address \\( e g street \\) 100 payer street address2 customer address \\( e g town \\) 100 payer town phone number customer phone number numeric values accepted 20 0207123456 postal code customer postal code zip code alphanumeric values accepted \\( e g punctuation marks dashes \\) 9 ec45mq city customer city 50 london state customer state region 50 central london country customer country 3 digit iso code \\( see section 4 2 page 40 \\) 3 gbr payment details amount total amount payable note include trailing zeroes amount natural number example 23 \\( 23 00 \\) yes 19 39 68 39 6 39 currency 3 letter code currency amount according iso 4217 \\( see section 4 1 page 39 \\) yes 3 eur amount2 description include calculation total amount payable displayed information section header skrill page note skrill check validity data 240 product price amount2 amount currency defined field 'currency' shown next amount2 description 19 29 90 amount3 description see 240 handing fees charges amount3 see 19 3 10 amount4 description see 240 vat \\( 20 \\) amount4 see 19 6 60 detail1 description show five additional details product information section header skrill gateway page yes 240 product id detail1 text detail 1 text shown next detail 1 description detail1 text also shown customer skrill digital wallet account history yes 240 4509334 skrill wallet guide 7 1 skrill 2015 page 14 field name description required max length example value detail2 description see 240 description detail2 text see 240 romeo juli et \\( w shakespeare \\) detail3 description see 240 special conditions detail3 text see 240 5 6 days delivery detail4 description see 240 detail4 text see 240 detail5 description see 240 detail5 text see 240 language encoding text parameters text fields use utf 8 encoding note however wallet checkout c display latin 1 characters 2 2 1 1 recommended secure method redirecting customer method used ensure details payment communicated securely server skrill important strongly recommend use method redirecting customers skrill require sending payment para meters browser prevents customers able view modify hidden parameters source code implement ensure details payment communicated securely server skrill 1 web ser ver makes standard post requ est payment parameters using prepare parameter \\( see table 2 \\) 2 skrill server prepares session payment returns standard http \\( \\) response 3 web server takes session id cooki e appropriate set cookie http header response 4 using session id value customer redirected https www skrill com app payment pl \\? sid session id normal flow events continues redirect must happen within 15 minutes original request session expire skrill wallet guide 7 1 skrill 2015 page 15 code examples implement see section 3 10 page 38 2 2 2 skrill customer login registration \\( step 2 \\) customer submits html form web browser shown skrill page displays payment amount payment details submitted skrill presents two options login sign two options described detail pay email parameter supplied email ddress field pre filled otherwise field empty figure 3 login page showing pre filled email address customer enters changes email \\( required \\) followed password selects login button redirected next step see section 2 2 3 customer skrill account sign clicking link sign link see section 2 2 2 1 customer view payment details selecting information icon displayed right amount currency see examples figure 4 figure 5 skrill wallet guide 7 1 skrill 2015 page 16 figure 4 top payment form shows total amount figure 5 payment details screen customer selects view payment details customer sees order details included payment request labels configurable 8 label value pairs 5 description fields containing text 3 amount fields contain numeric values example could provide product description skrill wallet guide 7 1 skrill 2015 page 17 figure 6 detail amount fields ssociated description fields 2 2 2 1 customer gistered skrill customer registered skrill click sign presented registration form \\( see figure 4 \\) form used register customer skrill digital wallet account speed registration process provide following additional data pre fill form address firstname lastname postal code city country date birth \\( see table 2 \\) pay email parameter supplied used primary email address new skrill account note form accepts latin 1 characters skrill wallet guide 7 1 skrill 2015 page 18 figure 7 sign page pre filled customer information 2 2 3 skrill payment page \\( step 3 \\) payment page shows payment amount payment details along tabs supported payment methods tabs shown payment amount \\( case 1 00 euro \\) vary depending customer country payment methods selected default skrill wallet guide 7 1 skrill 2015 page 19 one payment option provided pay skrill balance must contact merchant services add additional payment methods four main payment options pay credit debit card indicated two card icons pay direct debit elv \\( germany \\) pay skrill balance pay online ban king alternative payment method payment options described detail 2 2 3 1 pay credit debit card option allows customer pay using cr edit debit card registered skrill account add pay new c ard figure 8 customer clicks pay customers click select existing card enter cvv code click pay alternatively click new card add nd pay new card customer enters card number card number field card type automatically detected card logo displayed \\( see figure 6 \\) skrill wallet guide 7 1 skrill 2015 page 20 figur e 9 brand displayed right card number field card associated skrill account future use note new card cannot used upload funds customer skrill account without verification finish payment using new card customers enter expiry date security code card click pay customer card provider uses 3 secure additiona l prompts enter details payment co mplete customers directed skrill transaction status page described skrill provide following test credit card details \\( note card numbers used test merchant accounts \\) brand card number visa 4000001234567890 mastercard 5438311234567890 2 2 3 2 pay direct debit elv \\( germany \\) german customers option pay using elv customers enter iban swift details account click pay payment complete customers directed skrill transaction status page described skrill wallet guide 7 1 skrill 2015 page 21 figure 10 pay elv example 2 2 3 3 pay skrill balance customer selects skrill balance tab ny time final pay button selected customer click cancel cancel payment process return website \\( url provided 'cancel url' field see table 2 page 11 \\) skrill wallet guide 7 1 skrill 2015 page 22 figure 11 payment confirmation skrill wallet cu stomer insufficient balance payment prompted use another payment method payment complete directed skrill transaction status page described 2 2 3 4 pay instant banking options alternative payment methods \\( poli paysafecard etc \\) skrill supports number instant banking alternative payment methods available methods depend cus tomer country registration payment methods configured merchant account see section 4 6 list payment methods availability use methods customer must enter account details click proceed button go external website complete payment payment complete customer directed krill transaction status page described 2 2 4 skrill transaction status page return merchant \\( steps 4 5 \\) payment process completed successful payment message appears \\( see figure 8 \\) customer click continue go successful payment section website specified return url parameter change button text using return url text parameter payment unsuccessful customer redirected cancel url page skrill wallet guide 7 1 skrill 2015 page 23 note cancel url field filled customer returned page website redirected skrill figure 12 transaction status page showing successful payment skrill wallet guide 7 1 skrill 2015 page 24 2 2 5 skrill status response payment process comp lete skrill send details transaction status url page provided \\( see table 2 page 11 \\) done standard http post request skrill server continue post status response http ok \\( 200 \\) received server number posts exceeds 10 table 4 shows parameters sent status url page skrill wallet guide 7 1 skrill 2015 page 25 table 3 status url parameters field name description required example value pay email email address yes info merchant com note provide test wallet checkout merchant account use demowallet sun fish com pay email email address customer making payment yes payer skrill com merchant id unique id skrill account needed calculation md5 signature \\( see section 4 3 page 42 \\) yes 100005 customer id unique id customer skrill account 200005 transaction id unique r eference identification number provided html form a205220 mb amount total amount payment currency skrill digital wallet account yes 25 46 25 4 25 mb currency currency mb amount always currency skrill digital wallet account yes gbp status status transaction 2 failed 2 processed 0 pending 1 cancelled \\( see detailed explanation \\) yes 2 failed reason code transaction status 2 \\( failed \\) field contain code detailing reason failure 06 md5sig md5 signature \\( see section 4 3 page 42 \\) yes 327638c253a4637199ceb a6642371f20 sha2sig sha2 signature \\( see section 4 4 page 43 \\) dbb7101322257a311f08d1 c527053058fc7e464e30bcf b4613f09053c22dd1f8 amount amount payment posted html form yes 39 60 39 6 39 currency currency payment posted html form yes eur merchant fields submitted list values merchant fields parameter passed back status report field1 value1 skrill wallet guide 7 1 skrill 2015 page 26 notes customer id parameter enabled upon activation receive response status please contact merc hant services transaction id submitted mb transaction id value posted report failed reason code parameter enabled upon activation part response status escription failed reason codes see section 4 7 page 45 enable sha2sig parameter contact merchant services information see section 4 4 page 43 payment type parameter enabled merchant services receive response status please contact merchant services validating status response recommend validate transaction details status response done follows 1 create pending transaction order fixed amount website 2 redirect customer skrill wallet checkout complete transaction 3 skrill post transaction confirmation status url page include 'mb amount' \\( amount \\) parameter 4 website validate parameters received calculating md5 sig nature \\( see section 4 3 page 42 \\) f successful compare value confirmation post \\( amount parameter \\) one pending transaction order website also compare parameter transaction id pay email 5 validated transaction data process transaction example dispatching goods ordered note want restrict receipt status reports based posting ip address use full skrill ip range skrill may time time change ip address post status report field name description required example value payment type payment method customer used contact merchant services enable option choose receive either consolidated values \\( method type e g mbd skrill direct wlt e wallet \\) detailed values \\( specific instrument used e g vsa visa card gir giropay \\) wlt skrill wallet guide 7 1 skrill 2015 page 27 using merchant query interface use merchant query interface repost status report autom atically check status transaction details see automated payments interface guide 2 2 6 detailed status description table 4 transaction status status descr iption 2 processed sent transaction processed funds received skrill account 0 pending sent customers pays via offline bank transfer option transactions auto process bank transfer received skrill note strongly recommend process order transaction system upon receipt status skrill 1 cancelled pending transactions either cancelled manually sender online skrill digital wallet account history auto cancel 14 days still pending 2 failed sent customer tries pay via credit card direct de bit provider declines transaction accept credit card di rect debit payments via skrill never receive failed status 3 chargeback whenever chargeback received skrill 3 status posted status url skrill automatically reverse transaction skrill wallet guide 7 1 skrill 2015 page 28 3 customization options 3 1 split gateway option allows pre select payment method customer list currently supported payment methods see section 4 6 page 45 pre select individual payment method following parameter must included entry form table 5 parameters include split gateway parameter description max length example value payment methods single payment method code indicating payment methods pre select customer note works f accoun fixed split gateway option enabled list codes see section 4 6 page 45 100 important note implementing option confirm payment methods authorised skrill request updated list payment methods respective values confirm merchantservices skrill com fixed split gateway option activated account two split gateway options fixed flexible detailed 3 1 1 fixed split gateway fixed split gateway activated submit single payment method using payment method parameter payment method selected customer login providing payment method supported customer registration country 3 1 2 flexible split gateway flexible spli gateway type activated payment method parameter ignored skrill balance pre selected customer sufficient funds cover payment skrill balance insufficient popular available payment option customer registration country selected 3 2 reduced header option skrill provide hide header option reduce size payment page useful embedding payment form iframe hide h eader option displays minimal header without logo payment details see figure 10 example skrill wallet guide 7 1 skrill 2015 page 29 figure 13 hide header option option described detail table table 6 payment page display option option description notes hide header shows minimal header without logo payment details cannot select different language language customer chose registering account shown see payment amount times payment details skrill wallet checkout page header amount field removed skrill wallet guide 7 1 skrill 2015 page 30 3 3 recurring billing skrill offers tool recurring payments available stand alone product via skrill wallet checkout addition standard html form parameters \\( see table 2 page 11 \\) supply following parameters set recurring payment table 7 recurring billing parameters field name description requi red max length example value rec amount amount recurring payment \\( taken recurring period \\) yes 19 19 90 rec start date start date period dd mm yyy format 10 01 08 201 3 rec end date final date period dd mm yyyy format 10 31 08 201 4 rec period period payments yes 6 14 rec cycle time period measure require day month year parameter submitted skrill assume rec cycle days 5 day rec grace period set period days customer still process transaction originally failed value submitted always days 5 7 rec status url url skrill notifies recurring payment cancelled 400 http www merchant c om rec payment cancel led htm rec status url2 second url skrill noti fies recurring payment cancelled 400 http www merchant c om rec payment cancel led2 htm notes rec start date parameter set future recurring credit card payments rec amount 0 \\( amount charged immediately \\) recurring billing setup options set recurring billing payment using one following options option 1 take initial payment followed recurring payments different amount enter specific amount \\( e g eur 4 99 \\) amount parameter html form specific amount \\( e g eur 19 90 \\) rec amount option 2 take initial payment set recurring payments leave amount parameter empty enter rec amount value skrill wallet guide 7 1 skrill 2015 page 31 payment methods used recurring billing recurring billing payment set one following payment methods credit debit card \\( visa stercard \\) direct debit customers skrill account balance example code code snippet shows example parameters included recurring payment input type hidden name rec amount value 19 90 input type hidden name rec start date value 01 08 2013 input type hidden name rec end date value 31 08 2014 input type hidden name rec period value 14 input type hidden name rec cycle value day input type hidden name rec grace period value 7 input type hidden name rec status url value http www merchant com rec pay cancel htm input type hidden name rec status url2 value http www merchant com rec pay cancel2 htm recurring billing status recurring billing set provided rec status url html form skrill post transaction details payment rec status url page following table shows parameters received page tabl e 8 recurring billing status parameters field name description required example value merchant id unique id skrill account needed calculation md5 signature \\( see section 4 3 page 42 \\) yes 100005 transaction id r eference identification number provided yes a205220 status recurring payment status 2 processed 2 failed yes 2 rec payment id recurring payment id yes 200005 rec payment type type payment recurring skrill 1 tap yes recurring md5sig md5 signature \\( see section 4 3 page 42 \\) yes 327638c253a46371 99ceba6642371f20 merchant fields comma separated list field names passed back status page payment confirmed \\( see table 2 \\) field1 field2 using merchant query interface use merchant query interface check status cancel extend end date recurring payment details see automated payments interface guide skrill wallet guide 7 1 skrill 2015 page 32 3 4 skrill 1 tap payment skrill offers single click payment service enables automatically debit transactions customer skrill account without customer authorise time setup skrill 1 tap payment service must made regular payment process customer prompted choo se payment method skrill 1 tap payment enabled enable service contact merchantservices skrill com skrill 1 tap payment service also available skrill automated payments interface \\( api \\) details see automated payments interface guide addition standard parameters described table 2 supply following parameters set skrill 1 tap payment via skrill wallet checkout table 9 skrill 1 tap parameters field name description requi red max length example value ondemand max amount maximum amount future payments debited customer account yes 9 11 50 ondemand max currency 3 letter code currency maximum amount according iso 4217 \\( see section 4 1 page 39 \\) yes 3 eur ondemand note text shown customer payment confirmation email reason skrill 1 tap payment yes 1000 credit topped ondemand status url url skrill notifies skrill 1 tap payment cancelled 400 http www mercha nt com od payment cancelled htm ondemand status url2 second url skrill notifies skrill 1 tap payment cancelled 400 http www mercha nt com od payment cancelled2 htm frn trn id transaction id used recurring payment unique reference transaction yes 100 a205220 rec payment id recurring payment id sent status url rec status url pages upon creating skrill 1 tap payment original skrill transaction id returned systems original transaction yes 100 200005 notes ondemand max currency provided currenc value one provided currency standard html form \\( see table 2 page 11 \\) session identifier \\( sid \\) parameter returned upon success skrill response includes rec payment id store rec payment id field reference original 1 tap transaction skrill wallet guide 7 1 skrill 2015 page 33 track status 1 tap transaction perform refunds using unique transaction id transaction using skrill 1 tap payment interface skrill 1 tap payment set must use skrill 1 tap payment interface make individual requests debit customers skrill account details see automated payments interface guide provided status url value html form skrill post tran saction details payment url using merchant query interface use merchant query interface execute check status cancel skrill 1 tap payment authorisation details see automated payments interface guide paym ent methods supported skrill 1 tap payments payment methods skrill 1 tap payment include credit debit card \\( visa mastercard \\) direct debit customers skrill account balance skrill 1 tap button skrill 1 tap ton must displayed website setting skrill 1 tap mandates well subsequent transactions performed skrill 1 tap button available different sizes details contact merchantservices skrill com note must set separate merchant account taking skrill 1 tap payments skrill wallet guide 7 1 skrill 2015 page 34 3 5 secure return url option option allows certain customer arrived return url page completing payment process looking return url value page source code entering browser however function guarantees customer completed payment process payment processed feature activated please contact merchantservices skrill com must submit following parameters transaction return url transaction id secret word \\( automatically submitted entered settings developer settings page skrill account \\) skrill add followi ng parameters return url table 10 parameters returned return url parameter description example value transaction id transaction id submitted a205220 msid md5 signature following values merchant id e g 123456 transaction id e g a205220 uppercase md5 value ascii equivalent secret word e g f76538e261e8009140af89e001341f17 730743ed4ef7ec631155f5e1 5d2f4fa0 two examples secure return url using values example 1 merchant submits return url without additional parameters example https merchant com return url cgi case skrill redirect customer https merchant com return url cgi \\? transaction id a205220 msid 730743ed4ef7ec631155f5e15 d2f4fa0 example 2 merchant submits return url additional parameters example https merchant com return url cgi \\? par1 val1 par2 val2 case skrill redirect customer https merchant com return url cgi \\? par1 val1 par2 val2 transaction id a205220 msid 73074 3ed4ef7ec631155f5e15d2f4fa0 skrill wallet guide 7 1 skrill 2015 page 35 3 6 merchant refunds option enables refund payment back customer skrill account credit debit card bank account \\( depending original payment method used \\) feature activated please contact merchantservices skrill com note account configured allow refunds additional action link transaction history next entry trigger refund customer also make refunds skrill automated payments interface \\( api \\) details see automated payments interface guide 3 7 chargeback notification skrill receives chargeback request provider send chargeback notification r status url page indicated status 3 \\( description transaction statuses see table 5 page 27 \\) 3 8 adding escriptor customer pays skrill skrill submits descriptor transaction containing business trading name brand name descriptor typically displayed bank credit card statement customer want change descriptor please contact merchantservices skrill com functionality available following payment methods visa mastercard online bank transfer \\( obt \\) sofortu berweisung direct debit 3 9 display iframe option enables display skrill wallet checkout iframe website define frameset return url cancel url pages opened upon successful payment cancell ation customer figure 14 shows example gateway displayed iframe skrill wallet guide 7 1 skrill 2015 page 36 merchant website header area return main website contact us merchant website footer area 450 pixels 650 pixels figure 14 wallet checkout displayed iframe ize iframe 450px 650px \\( including gateway header footer \\) note vertical height required reduced using hide header option see section 3 2 details minimum vertical height increase 1 tap payments accommodate 1 tap information banner option implemented submitting two additional parameters html form table 11 parameters submitted using iframe field name description values max length default example return url target specifies target return url page displayed upon successful payment 1 top' 2 parent' 3 self' 4 blank' 1 1 3 cancel url target specifies target cancel url page displ ayed customer cancels payment 1 top' 2 parent' 3 self' 4 blank' 1 1 3 skrill wallet guide 7 1 skrill 2015 page 37 table 12 iframe targets value equivalent description 1 top' opens target url full body window url contents fills entire browser window 2 parent' opens target url parent frame 3 self' opens target url frame using self effect using iframe target 4 blank' opens target url new browser window skrill wallet guide 7 1 skrill 2015 page 38 3 10 code integration examples use examples generate session id skrill recommended method connecting skrill wallet checkout described section 2 2 1 1 page 14 3 10 1 generating session identifier examples generate sid using ifferent programming methods curl curl x post https www skrill com app payment pl pay email merchant email mail com amount 10 99 currency eur language en prepare 1 ruby require 'net http' require 'net https' require 'uri' uri uri \\( 'https www skrill com app payment pl' \\) http net http new \\( uri host uri port \\) http use ssl true req net http post new \\( uri path \\) req set form data \\( 'pay email' 'merchant email mail com' 'amount' '10 99' 'currency' 'eur' 'language' 'en' 'prepare only' '1' \\) res http request \\( req \\) puts res body 3 10 2 redirecting customer skrill session identifier \\( sid \\) redirect customer skrill incl uding session identifier https www skrill com app payment pl \\? sid generated sid generated sid sid returned skrill open url sid l ight box iframe skrill wallet guide 7 1 skrill 2015 page 39 4 appendi ces 4 1 iso 4217 currencies table 13 iso 4217 currencies accepted skrill eur euro twd taiwan dollar usd u dollar thb thailand baht gbp british pound czk czech koruna hkd hong kong dollar huf hungarian forint sgd singapore dollar bgn bulgarian leva jpy japanese yen pln polish zloty cad canadian dollar isk iceland krona aud australian dollar inr indian rupee chf swiss franc krw south korean dkk danish krone zar south african rand sek swedish krona ron romanian leu new nok norwegian krone hrk croatian kuna ils israeli shekel jod jordanian dinar myr malaysian ringgit omr omani rial nzd new zealand dollar rsd serbian inar try new turkish lira tnd tunisian dinar aed utd arab emir dirham mad moroccan dirham qar qatari rial sar saudi riyal skrill wallet guide 7 1 skrill 2015 page 40 4 2 iso country codes \\( 3 digit \\) skrill accept customers following countries afghanistan cuba myanmar nigeria north korea sudan syria somalia yemen aland islands ala christmas island cxr guernsey ggy albania alb cocos \\( keeling \\) islands cck guinea hti algeria dza congo democratic republic cod guinea bissau hmd american samoa asm cook islands cok guyana vat andorra costa rica cri haiti gin angola ago colombia col heard island mcdonald islands gnb anguilla aia comoros com holy see \\( vatican city state \\) guy antarctica ata congo republic cog honduras hnd antigua barbuda atg cot e d'ivoire civ hong kong hkg argentina arg croatia hrv hungary hun armenia arm cyprus cyp iceland isl aruba abw czech republic cze india ind australia aus denmark dnk indonesia idn austria aut djibouti dji iran islamic republic irn azerbaijan aze dominica dma iraq irq bahamas bhs dominican republic dom ireland irl bahrain bhr ecuador ecu isle man imn bangladesh bgd egypt egy israel isr barbados brb el salvador slv italy ita belarus blr equatorial guinea gnq jamaica jam belgium bel eritrea eri japan jpn belize blz estonia est jersey jey benin ben ethiopia eth jordan jor bermuda bmu falkland islands \\( malvinas \\) flk kazakhstan kaz bhutan btn faroe islands fro kenya ken bolivia bol fiji fji kiribati kir bosnia herzegovina bih finland fin korea republic kor botswana bwa france fra kuwait kwt bouvet island bvt french guiana guf kyrgyzstan kgz brazil bra french polynesia pyf lao people 's democratic republic lao brunei darussalam brn french southern territories atf latvia lva bulgaria bgr gabon gab lebanon lbn burkina faso bfa gambia gmb lesotho lso burundi bdi georgia geo liberia lbr cambodia khm germany deu libyan arab jamahiriya lby cameroon cmr ghana gha liechtenstein lie canada gibraltar gib lithuania ltu cape verde cpv greece grc luxembourg lux cayman islands cym greenland grl macao mac central african republic caf grenada grd macedonia mkd chad tcd guadeloupe glp madagascar mdg chile chl guam gum malawi mwi china chn guatemala gtm malaysia mys skrill wallet guide 7 1 skrill 2015 page 41 maldives mdv peru per sweden swe mali mli philippines phl switzerland che malta mlt pitcairn pcn taiwan province china twn marshall islands mhl poland pol tajikistan tjk martinique mtq portugal prt tanzania united republic tza mauritania mrt puerto rico pri thailand tha mauritius mus qatar qat timor leste tls mayotte myt reunion reu togo tgo mexico mex romania rou tokelau tkl micronesia federated states fsm russian federation rus tonga ton moldova mda rwanda rwa trinidad tobago tto monaco mco saint helena shn tunisia tun mongolia mng saint kitts nevis kna turkey tur montenegro mne saint lucia lca turkmenistan tkm montserrat msr saint martin \\( french part \\) maf turks caicos islands tca morocco mar saint pierre miquelon spm tuvalu tuv mozambique moz saint vincent grenadines vct uganda uga namibia nam samoa wsm ukraine ukr nepal npl san marino smr united arab emirates netherlands nld sao tome principe stp united kingdom gbr netherlands antilles ant saudi arabia sau united states usa new caledonia ncl senegal sen united states minor outlying islands umi new zealand nzl serbia srb uruguay ury nicaragua nic seychelles syc uzbekistan uzb niger ner sierra leone sle vanuatu vut niue niu singapore sgp venezuela ven norfolk island nfk slovakia svk viet nam vnm northern mariana islands mnp slovenia svn virgin islands british vgb norway solomon islands slb virgin islands u vir oman omn south africa zaf wallis futuna wlf pakistan pak south georgia south sandwich islands sgs western sahara esh palau plw spain esp zambia zmb palestinian territory occupied pse sri lanka lka zimbabwe zwe panama pan suriname sur papua new guinea png svalbard jan mayen sjm paraguay pry swaziland swz skrill wallet guide 7 1 skrill 2015 page 42 4 3 md5 signature hidden text field called md5sig included form submitted server value field 128 bit message digest expressed string thirty two hexadecimal digits uppercase md5sig constructed performing md5 calculation string built concatenating fields returned status url page includes merchant id transaction id uppercase md5 value ascii equivalent secret word submitted settings developer settings section online skrill account mb amount mb currency status purpose md5sig field ensure integrity data posted back server always compare md5sig field 's value posted skrill servers one calculated calculate md5sig need take values fiel ds listed exactly posted back concatenate perform md5 calculation string cancelled payment md5 hash posted 'ondemand status url skrill 1 tap payment cancelled concatenation following fields merchant id merchant id merchant trn id transaction id uppercase md5 value ascii equivalent secret word submitted settings developer settings section merchant online skrill account rec pmt statu status trn id rec payment id md5 hash 1 tap payments posted status url calculated way normal payments refunds secret word secret word must submitted settings developer settings section skrill digital wallet account md5sig used following restrictions apply submitting secret word characters must lowercase length exceed 10 characters special characters permitted \\( e g etc \\) note settings developer settings section displayed account contact merchantservices skrill com skrill wallet guide 7 1 skrill 2015 page 43 4 4 sha2 signature improve security stat us reports skrill post additional parameter report called 'sha2sig' constructed way md5 signature different hashing algorithm new parameter available default enable option send request merchantservices skrill com 4 5 example html form two example html forms submitted skrill first one basic example second example uses several additional features currently available skrill wallet checkout use forms ensuring values replaced values note experimental purposes use test fo rm https www skrill com app test payment pl request test account test data c ontact merchantservices skrill com provide te st wallet checkout merchant account demowallet sun fish com set pay email simple html form form action https www skrill com app payment pl method post target blank input type hidden name pay email value contact merchant com input type hidden name status url value contact merchant com input type hidden name recipient description value acme solutions input type hidden name language value en input type hidden name amount value 39 60 input type hidden name currency value gbp input type hidden name detail1 description value description input type hidden name detail1 text value romeo juliet \\( w shakespeare \\) input type submit value pay form skrill wallet guide 7 1 skrill 2015 page 44 advanced html form form action https www skrill com app payment pl method post target blank input type hidden name pay email value merchant skrill com input type hidden name transaction id value a10005 input type hidden name recipient description value acme solutions input type hidden name return url value http www skrill com payment made html input type hidden name cancel url value http www skrill com payment cancelled html input type hidden name status url value https www skrill com process payment cgi input type hidden name language value en input type hidden name merchant fields value customer number session id input type hidden name customer number value c1234 input type hidden name session id value a3dfa2234 input type hidden name pay email value payer skrill com input type hidden name amount2 description value product price input type hidden name amount2 value 29 90 input type hidden name amount3 description value handling fees charges input type hidden name amount3 value 3 10 input type hidden name amount4 description value vat \\( 20 \\) input type hidden name amount4 value 6 60 input type hidden name amount value 39 60 input type hidden name currency value gbp input type hidden name firstname value john input type hidden name lastname value payer input type hidden name address value payerstreet input type hidden name postal code value ec45mq input type hidden name city value payertown input type hidden name country value gbr input type hidden name detail1 description value product id input type hidden name detail1 text value 4509334 input type hidden name detail2 description value description input type hidden name detail2 text value romeo juliet \\( w shakespeare \\) input type hidden name detail3 description value special conditions input type hidden name detail3 text value 5 6 days delivery input name logo url type text value https s3 eu west 1 amazonaws com uploads eu hipchat com 85350 649769 30jtx2nnznv6sgx screen 20shot 202014 08 14 20at 2017 39 12 png input type submit value pay form skrill wallet guide 7 1 skrill 2015 page 45 4 6 payment method c odes table details codes required pre select payment method using split gateway codes also used payment type field \\( used \\) return th e payment type customer used note individual credit card codes msc vsd vse mae amx jcb used payment type field table 14 payment method codes payment method value supported countries skrill wallet wlt credit debit cards card types acc visa vsa mastercard msc visa delta debit vsd united kingdom visa electron vse \\( excluding us \\) maestro mae united kingdom spain ireland austria american express amx diners din \\( excluding us \\) jcb jcb \\( excluding us \\) paysafecard psc american samoa austria belgium canada croatia cyprus czech republic denmark finland france germany greece guam hungary ireland italy latvia luxembourg malta mexico netherlands northern mariana islands norway poland portugal puerto rico romania slovakia slovenia spain sweden switzerland turkey united kingdom united states america us virgin islands carte b leue gcb france dankort dnk denmark postepay psp italy cartasi csi italy instant banking options skrill direct \\( online bank transfer \\) obt germany united kingdom france italy spain hungary austria giropay gir germany direct debit elv germany sofort \\( sofortueberweisung \\) sft germany austria belgium netherlands italy france poland united kingdom enets ent singapore nordea solo ebt sweden ideal idl netherlands eps \\( netpay \\) npy austria poli pli australia przelewy24 pwy poland epay bg epy bulgaria trustly glu sweden finland estonia denmark spain poland 4 7 failed reason codes table contains possible values failed reason code parameter corresponding meanings failed reason codes mapping codes skrill receives external processors failures due internal procedures skrill wallet guide 7 1 skrill 2015 page 46 table 15 failed reason codes code description 01 referred 02 invalid merchant number 03 pick card 04 authorisation declined 05 error 06 cvv mandatory set invalid 07 approved authorisation honour identification 08 delayed processing 09 invalid transaction 10 invalid currency 11 invalid amount available l imit exceeded amount high 12 invalid credit card bank account 13 invalid card issuer 14 annulation client 15 duplicate transaction 16 acquirer error 17 reversal processed matching authorisation found 18 file ransfer available unsuccessful 19 reference number error 20 access denied 21 file transfer failed 22 format error 23 unknown acquirer 24 card expired 25 fraud suspicion 26 security code expired 27 requested function available 28 lost stolen card 29 stolen card pick 30 duplicate authorisation 31 limit exceeded 32 invalid security code 33 unknown invalid card bank account 34 illegal transaction 35 transaction permitted 36 card blocked local blacklist 37 restricted card bank account 38 security rules violation 39 transaction amount referencing transaction higher transaction amount original transaction 40 transaction frequency limit exceeded override possible 41 incorrect usage count authorisation system exceeded 42 card blocked 43 rejected credit card issuer 44 card issuing bank network available 45 card type processed authorisation centre authorisation system determined incorrect routing 47 processing temporarily possible 48 security breach 49 date time plausible trace increasing 50 error pac encry ption detected 51 system error 52 mb denied potential fraud 53 mobile verification failed skrill wallet guide 7 1 skrill 2015 page 47 code description 54 failed due internal security restrictions 55 communication verification problem 56 3d verification failed 57 avs check failed 58 invalid bank code 59 invalid account code 60 card authorised 61 credit worthiness 62 communication error 63 transaction allowed cardholder 64 invalid data request 65 blocked bank code 66 cvv2 cvc2 failure 99 general error skrill wallet guide 7 1 skrill 2015 page 48 5 glossary section provides description key terms used guide term explanation automated payments interface \\( api \\) api collection tools enables merchants execute requests skrill wallet checkout example send money make 1 tap payments make refunds check status transactions download reports browser application enables customer merchant access web pages examples include internet explorer google chrome mozilla firefox chargeback r eturn funds previously authorised transaction customer initiated bank merchant may incur administration cost skrill processing dispute addition amount eventually credited back customer concatenation combining multiple fields parameters single text string parameter credit card type payment card allows customers pay goods services using funds loaned loan must paid back within specified period interest typically charged balance grace period \\( typically 20 55 days \\) examples visa mastercard diners amex see also debit card customer id unique identifier customer merchant skrill digital wallet account customer services team skrill team responsible end customer support queries also referred skrill help team see also merchant services team debit card type payment card provides customers instant access funds bank account unlike credit cards payments using debit card immediately taken customer account instea paid back later date customer must sufficient funds account agreed overdraft limit cover payment dynamic descriptor option allows merchant trading brand name shown bank credit card statement customer description change per transaction basis option supported visa mastercard online bank transfer \\( obt \\) sofort berweisung direct debit html post int egration method merchant sends details skrill wallet checkout using standard html form posts information html header iframe html feature enables skrill wallet checkout pages displayed within frame merchant website customer aware redirected third party website integration process undertaken merchants ensure website shopping cart connect communicate skrill iso country codes 3 digit country code international standards organisation \\( iso \\) identifies country example gbr united kingdom iso country codes also exist 2 digit format skrill wallet guide 7 1 skrill 2015 page 49 term explanation iso currency codes 3 digit currency code international standards organisation \\( iso \\) identifies currency example gbp british pound merchant services team skrill team responsible providing technical service support merchants account merchant customer account administrati portal enables viewing trans actions transferring funds online bank transfer payment method enabling customers transfer funds bank accounts skrill account real time see also skrill direct payment option thod payment method used customer debit card credit card bank transfer note payments industry terms payment method payment option payment type often used interchangeably payment page page used collected payment method details customer online transaction real time event occurs instantly within short period seconds minutes real time transaction customer merchant skrill rec eive response transaction request customer still online reason code every transaction reason code indicates status transaction skrill receives variety reason codes bank scheme authorising th e transaction consolidates providing merchants transaction financial interaction system referred transaction skrill 1 tap skrill product enables customers pay online single tap click enables merchants automatically debit transactions customer 's skrill account without customer authorise time skrill digital wallet skrill digital wallet enabling customers link cards pay directly wallet account using cards bank transfer 4 payment cards 10 bank accounts linked wallet account skrill wallet checkout skrill secure page processing transactions using customer skrill account merchants connect wallet checkout process transactions website sofort sofort berweisung sofort berweisung real time bank transfer payment method sofort ag custo mers initiate credit transfer online purchase transfer order instantly confirmed merchant allowing instant delivery goods services split gateway option allows merchants pre select payment method want display first customers payment page transaction financial interaction skrill wallet checkout referred transaction transactions linked payments transaction id unique id assigned transaction skrill wallet checkout transaction status transaction skrill wallet checkout given status includes processed pending temporary scheduled cancelled failed chargeback successful skrill wallet guide 7 1 skrill 2015 page 50 6 index advanced html form 41 alternative method redirect ing customer 13 chargeback notification 32 connect payment gateway 7 contact queries 5 customer registered skrill 16 dynamic descriptor 32 example html forms 40 failed reason codes 42 fixed split gateway 25 flexible split gateway 25 gateway demonstration 9 gateway options 25 iframe target 32 iso 4217 currencies 36 iso country codes \\( 3 digit \\) 37 md5 signature 39 merchant query interface 24 merchant refunds 32 parameters posted skrill gateway 10 payment method codes 42 payment process 8 steps 9 payment process steps redirect skrill gateway 9 status page 21 recurring billing 27 recurring billing status 28 secure return url parameter 31 sha2 signature 40 simple html form 40 skrill 1 tap button 30 skrill 1 tap payment 29 skrill status report 22 split gateway 25 status description 24 test account 5 validating status report 23", 
    "descr1": "code example input type hidden name payment methods value wlt acc input type hidden name payment methods value acc input type hidden name payment methods value vsa input type hidden name payment methods value obt input type hidden name logo value https www skrill com fileadmin content pdf acme png curl x post https pay skrill com pay email merchant email mail com amount 10 99 currency eur language en prepare 1 require 'net http' require 'net https' require 'uri' uri uri \\( 'https pay skrill com' \\) http net http new \\( uri host uri port \\) http use ssl true req net http post new \\( uri path \\) req set form data \\( 'pay email' 'merchant email mail com' 'amount' '10 99' 'currency' 'eur' 'language' 'en' 'prepare only' '1' \\) res http request \\( req \\) puts res body prepare 1 pay email resursdemo sun fish com transaction id 12345 return url https shop representative com order 12345 success cancel url https shop representative com order 12345 fail firstname vincent lastname williamsson language en countrycode se address alexandersson address2 glassgatan 15 city g teborg postal code 41655 customertype legal amount 106 payment methods rsb paymentdata paymentmethodid invoice orderdata orderlines totalamount 106 vatpct 6 quantity 1 unitamountwithoutvat 100 artno 123456 description product description1 totalvatamount 6 totalvatamount 6 form action https pay skrill com method post target blank input type hidden name pay email value input type hidden name status url value input type hidden name language value input type hidden name amount value input type hidden name currency value input type hidden name detail1 description value input type hidden name detail1 text value input type submit value form form action https pay skrill com method post target blank input type hidden name pay email value input type hidden name transaction id value input type hidden name return url value input type hidden name cancel url value input type hidden name status url value input type hidden name language value input type hidden name merchant fields value input type hidden name customer number value input type hidden name session id value input type hidden name pay email value input type hidden name amount2 description value input type hidden name amount2 value input type hidden name amount3 description value input type hidden name amount3 value input type hidden name amount4 description value input type hidden name amount4 value input type hidden name amount value input type hidden name currency value input type hidden name firstname value input type hidden name lastname value input type hidden name address value input type hidden name postal code value input type hidden name city value input type hidden name country value input type hidden name detail1 description value input type hidden name detail1 text value input type hidden name detail2 description value input type hidden name detail2 text value input type hidden name detail3 description value input type hidden name detail3 text value input type submit value form content type application json content type application json charset utf8 email merchant sun fish com password 1bw8e40ebe9759b55948bbce8aaa460d transactionid 166462653 outrequestnumber 9193457120563834 amount 32 89 merchantcustomscode hanguo merchantcustomsname jwyhanguo card customsplace hangzhou alipaytrnid 2013111511001004390000105126 alipaydeclarationnumber 2013112611001004680073956707 alipaytrnid 2013111511001004390000105126 error code invalid transaction status message customs declaration allowed transactions yet completed refunded error code invalid parameter message outrequestnumber must exceed specified length https api skrill com mqi customs alipay 1705513403 \\? email merchant sun fish com password 1bw8e40ebe9759b55948bbce8aaa460d alipaytrnid 2013111511001004390000105126 alipaydeclarationnumber 2013112611001004680073956707 error code found message transaction found specified id", 
    "crawled_date": "2017-06-10T13:59:47.754814"
  }, 
  "16": {
    "link5": "https://www.trustcommerce.com/support/merchant-faqs/", 
    "link4": "https://www.trustcommerce.com/integrate-technology/apis-and-sdks/", 
    "link1": "https://vault.trustcommerce.com/downloads/TC_Link_API_Developer_Guide.pdf", 
    "api_url": "trustcommerce.com", 
    "link3": "https://www.trustcommerce.com/blog/the-definitive-list-of-resources-for-trustcommerce-clients/", 
    "link2": "http://www.trustcommerce.com/wp-content/uploads/2017/03/TC_Epic_Fact-Sheet.pdf", 
    "progweb_url": "https://www.programmableweb.com/api/trustcommerce", 
    "progweb_date": "08.02.2008", 
    "progweb_descr": "Most payment processing APIs are tough to use, but these are simpler. Wide variety of platforms are supported. Subscription payments, Virtual Terminal, Fraud Controls, and more.", 
    "api_name": "TrustCommerce", 
    "progweb_cat": "Payments,eCommerce", 
    "descr5": "1 800 915 1680 contact support contact client login executive team news press resources clients partners video library careers blog free trial us trustcommerce products services products tc ipa tc vault virtual terminal tc smart products tc trustee tc citadel services real time reporting reconciliation tc cardcurrent accept payments retail pos e commerce moto mobile omnichannel manage risk p2pe emv tokenization fraud tools integrate technology partner apis sdks 3rd party integration directory e commerce shopping carts healthcare software municipality software verticals healthcare non profit parking municipality insurance education retail menu back client login executive team news press resources clients partners video library careers blog free trial us merchant faqsyou homesupportmerchant faqs merchant faqs find responses commonly asked questions q quickly begin accepting payments sign trustcommerce \\? running little 24 hours already merchant account established bank require customization complex environment timeframe increase merchant account trustcommerce recommend one many banking partners assist q trustcommerce solutions work enterprise environment \\? yes many fortune 1000 companies use tc enterprise vault pci compliant payment application designed enable users utilize tc vault across multiple locations different departments multiple users additionally supplies users advanced reporting capabilities ability assign unique user ids define specific access control levels individual users q trustcommerce provide merchant account \\? benefit working trustcommerce preserve existing merchant banking relationship require new merchant account trustcommerce recommend one many banking partners assist q trustcommerce integrate point sale \\( pos \\) system \\? trustcommerce large api library integrate pos systems q know customer transaction data secure \\? trustcommerce pci dss compliant organization additionally applies highest security standards industry part pci compliance trustcommerce required undergo yearly third party audits certified card associations pci dss security standard includes requirements security management policies procedures network architecture software design critical protective measures standard developed help organizations proactively protect customer account data q trustcommerce pci compliant \\? \\? yes trustcommerce pci dss certified adheres applicable industry requirements best practices including pci data security standards service providers applications trustcommerce data centers type ii sas 70 certified trustcommerce implemented intrusion prevention detection containment beyond industry standard q online store must manage ssl certificates every year protect customer credit card data make payment online anything trustcommerce help remove responsibility shoulders \\? two primary products address need tc trustee host tc payment portal tc trustee host customizable pci compliant hosted payment page designed seamlessly integrate checkout process merchant shopping cart payment page online payment system supports credit cards debit cards ach types payment merchant access sensitive cardholder data using solution greatly reduces costly complex certifications audits trustcommerce also offers transparent web application pass solution customers never leave merchant web site payment submitted goes directly trustcommerce secure processing tc payment portal makes easy affordable convenient merchants size offer online payment options customers allowing integration support customer bill presentment users securely log website immediate access account information single login customers initiate real time payments easily setup recurring payment cycle using credit cards online debit cards ach enrolled accounts customer reporting also available payment history information merchants define customized notifications notifying customers important updates information news items tc payment portal complete secure compliant solution customer online payment needs q need get account start processing payments \\? order start processing payments trustcommerce need merchant account possibly shopping cart pos system signed agreement trustcommerce account set trustcommerce contact provide customer id \\( custid \\) password instructions make account live reference user guides documentation available test account trustcommerce provides trustcommerce takes great pride excellent customer service working trustcommerce expect around clock live courteous professional support q already merchant bank compatible provider \\? trustcommerce work virtually us merchant bank provider q trouble logging tc vault reset password \\? convenience trustcommerce provides forgot password link tc vault login page simply enter customer id e mail address email temporary password still trouble please contact customer support 800 915 1680 ext 3 questions \\? contact sales team submit form trustcommerce team member contact shortly questions \\? contact sales 800 915 1680 contact support available 24 7 365 start free trial credit card needed trustcommerce pci compliant service provider copyright 2017 trustcommerce rights reserved website design incitrio accept paymentsretail pos e commerce moto mobile omnichannel manage riskp2pe emv tokenization fraud tools integrate technologywhy partner apis sdks 3rd party integration directory shopping carts healthcare software municipality software trustcommercecorporate headquarters 1 macarthur place suite 400 south coast metro ca 92707 5927 phone 800 915 1680 fax 949 266 0359products servicestc citadel tc vault virtual terminal tc smart products tc ipa tc trustee reporting verticalshealthcare non profit parking municipality insurance education retail aboutexecutive team news press careers clients partners resources connect us find us facebooktwitterlinkedinyoutuberss commitment community support families friends abroad privacy policy terms conditions equal employment opportunity policy sitemap cta float button position fixed right 0 top 50 height 240px margin top 120px z index 99999 cursor pointer cta float button hover opacity 95 cta float button img width auto height auto cta float button img cta button img desktop display block cta float button img cta button img mobile display none cta float wrapper position fixed top 50 right 0 width 350px margin top 182px background color f2f4f7 webkit box shadow 0px 0px 16px 0px rgba \\( 0 0 0 0 34 \\) moz box shadow 0px 0px 16px 0px rgba \\( 0 0 0 0 34 \\) box shadow 0px 0px 16px 0px rgba \\( 0 0 0 0 34 \\) z index 99998 padding 20px 68px 20px 20px font family open sans helvetica arial verdana sans serif color 002d62 display none cta float wrapper cta form show display block cta float wrapper cta content h2 margin bottom 0 cta float wrapper cta content margin bottom 10px cta float wrapper hs form hs button font weight 600 important text transform uppercase width 40 font family open sans helvetica arial verdana sans serif important padding top 13px important padding bottom 13px important cta float wrapper hs form stacked inputs list li label font size 9px cta float wrapper input hs input cta float wrapper textarea hs input cta float wrapper select hs input padding 8px 4px cta float wrapper hs form stacked actions margin top 5px padding 0 20px cta float wrapper hs form label font family open sans helvetica arial verdana sans serif important media queries media screen \\( max width 1200px \\) cta float wrapper padding right 60px cta float button img width 40px height auto media screen \\( max width 767px \\) cta float wrapper padding right 55px cta float button img width 35px height auto media screen \\( max height 675px \\) cta float wrapper overflow hide top 50 margin top 182px cta float button top 50 height 175px margin top 87px cta float button img width 35px height auto media screen \\( max width 737px \\) cta float wrapper left 0 top 0 width 100 height 100 overflow x hidden overflow auto margin 0px padding 0px cta float wrapper inner position absolute width 100 height 100 left 0 top 0 padding 0 8px webkit box sizing border box moz box sizing border box box sizing border box cta float wrapper cta content cta float wrapper cta form padding 0 20px margin right 50px cta float wrapper cta content padding top 20px cta float wrapper cta content cta float wrapper cta form margin right 50px cta float wrapper cta form padding bottom 50px cta float button position fixed width 220px bottom 0 left 50 margin left 110px height 44px margin top 0 right auto top auto cta float button img cta button img desktop display none cta float button img cta button img mobile display block cta float button img width 220px height auto media screen \\( max height 380px \\) cta float wrapper left 0 top 0 width 100 height 100 overflow x hidden overflow auto margin 0px padding 0px cta float wrapper inner position absolute width 100 height 100 left 0 top 0 padding 0 8px webkit box sizing border box moz box sizing border box box sizing border box cta float wrapper cta content cta float wrapper cta form padding 0 20px margin right 50px cta float wrapper cta content padding top 20px cta float wrapper cta content cta float wrapper cta form margin right 50px cta float wrapper cta form padding bottom 50px speak sales information trustcommerce contact solutions consultant via form", 
    "descr4": "1 800 915 1680 contact support contact client login executive team news press resources clients partners video library careers blog free trial us trustcommerce products services products tc ipa tc vault virtual terminal tc smart products tc trustee tc citadel services real time reporting reconciliation tc cardcurrent accept payments retail pos e commerce moto mobile omnichannel manage risk p2pe emv tokenization fraud tools integrate technology partner apis sdks 3rd party integration directory e commerce shopping carts healthcare software municipality software verticals healthcare non profit parking municipality insurance education retail menu back client login executive team news press resources clients partners video library careers blog free trial us apis sdksyou homeintegrate technologyapis sdks enable payments tc link api access apis sdks easy integration offer tc link api popular web development platforms including php perl many others success founded commitment developer community developers love flexibility tc link api multiple languages support simplicity integrating trustcommerce taking advantage easy use apis developers merchants process numerous major us based processing platforms send funds nearly us based merchant banks developers access technical guides sdks sample code within tc vault free trial sand box established community readily find resources code need get started today easy \\? trustcommerce takes complexity integrating payments enabling payment acceptance application trustcommerce easier trustcommerce secure payment processing api tc link enables straightforward implementation supports major payment types including credit cards debit cards pin less debit ach electronic check payments purchase card \\( level ii level iii \\) processing supports online mail order telephone order point sale \\( pos \\) mobile payments process one time recurring payments access comprehensive payment reporting easier reconciliation explore technical resources training videos user guides offer variety technical resources may access apis sdks resources tc vault homepage already login cust id password please complete form request one available 20 programming languages platforms java \\( class \\) ejb \\( enterprise java bean \\) perl unix php unix python unix ruby unix c library linux cold fusion win32 com ocx activex win32 cold fusion win32 asp script start free 30 day trial submit form trustcommerce team member contact shortly questions \\? contact sales 800 915 1680 contact support available 24 7 365 start free trial credit card needed trustcommerce pci compliant service provider copyright 2017 trustcommerce rights reserved website design incitrio accept paymentsretail pos e commerce moto mobile omnichannel manage riskp2pe emv tokenization fraud tools integrate technologywhy partner apis sdks 3rd party integration directory shopping carts healthcare software municipality software trustcommercecorporate headquarters 1 macarthur place suite 400 south coast metro ca 92707 5927 phone 800 915 1680 fax 949 266 0359products servicestc citadel tc vault virtual terminal tc smart products tc ipa tc trustee reporting verticalshealthcare non profit parking municipality insurance education retail aboutexecutive team news press careers clients partners resources connect us find us facebooktwitterlinkedinyoutuberss commitment community support families friends abroad privacy policy terms conditions equal employment opportunity policy sitemap cta float button position fixed right 0 top 50 height 240px margin top 120px z index 99999 cursor pointer cta float button hover opacity 95 cta float button img width auto height auto cta float button img cta button img desktop display block cta float button img cta button img mobile display none cta float wrapper position fixed top 50 right 0 width 350px margin top 182px background color f2f4f7 webkit box shadow 0px 0px 16px 0px rgba \\( 0 0 0 0 34 \\) moz box shadow 0px 0px 16px 0px rgba \\( 0 0 0 0 34 \\) box shadow 0px 0px 16px 0px rgba \\( 0 0 0 0 34 \\) z index 99998 padding 20px 68px 20px 20px font family open sans helvetica arial verdana sans serif color 002d62 display none cta float wrapper cta form show display block cta float wrapper cta content h2 margin bottom 0 cta float wrapper cta content margin bottom 10px cta float wrapper hs form hs button font weight 600 important text transform uppercase width 40 font family open sans helvetica arial verdana sans serif important padding top 13px important padding bottom 13px important cta float wrapper hs form stacked inputs list li label font size 9px cta float wrapper input hs input cta float wrapper textarea hs input cta float wrapper select hs input padding 8px 4px cta float wrapper hs form stacked actions margin top 5px padding 0 20px cta float wrapper hs form label font family open sans helvetica arial verdana sans serif important media queries media screen \\( max width 1200px \\) cta float wrapper padding right 60px cta float button img width 40px height auto media screen \\( max width 767px \\) cta float wrapper padding right 55px cta float button img width 35px height auto media screen \\( max height 675px \\) cta float wrapper overflow hide top 50 margin top 182px cta float button top 50 height 175px margin top 87px cta float button img width 35px height auto media screen \\( max width 737px \\) cta float wrapper left 0 top 0 width 100 height 100 overflow x hidden overflow auto margin 0px padding 0px cta float wrapper inner position absolute width 100 height 100 left 0 top 0 padding 0 8px webkit box sizing border box moz box sizing border box box sizing border box cta float wrapper cta content cta float wrapper cta form padding 0 20px margin right 50px cta float wrapper cta content padding top 20px cta float wrapper cta content cta float wrapper cta form margin right 50px cta float wrapper cta form padding bottom 50px cta float button position fixed width 220px bottom 0 left 50 margin left 110px height 44px margin top 0 right auto top auto cta float button img cta button img desktop display none cta float button img cta button img mobile display block cta float button img width 220px height auto media screen \\( max height 380px \\) cta float wrapper left 0 top 0 width 100 height 100 overflow x hidden overflow auto margin 0px padding 0px cta float wrapper inner position absolute width 100 height 100 left 0 top 0 padding 0 8px webkit box sizing border box moz box sizing border box box sizing border box cta float wrapper cta content cta float wrapper cta form padding 0 20px margin right 50px cta float wrapper cta content padding top 20px cta float wrapper cta content cta float wrapper cta form margin right 50px cta float wrapper cta form padding bottom 50px speak sales information trustcommerce contact solutions consultant via form", 
    "descr3": "1 800 915 1680 contact support contact client login executive team news press resources clients partners video library careers blog free trial us trustcommerce products services products tc ipa tc vault virtual terminal tc smart products tc trustee tc citadel services real time reporting reconciliation tc cardcurrent accept payments retail pos e commerce moto mobile omnichannel manage risk p2pe emv tokenization fraud tools integrate technology partner apis sdks 3rd party integration directory e commerce shopping carts healthcare software municipality software verticals healthcare non profit parking municipality insurance education retail menu back client login executive team news press resources clients partners video library careers blog free trial us definitive list resources trustcommerce clientsyou homepaymentsthe definitive list resources trustcommerce clients july 28 2014paymentsby trustcommerce staff like large vitamin sliding sideways throat things uncomfortable goal trustcommerce make sure payment processing one developed continue expand client resources trustcommerce offer great payment processing solutions also pride relationship develop clients partners people comprehensive technical resources training ongoing support provide trustcommerce client many ways learn use products features included account whether prefer self paced training want speak live specialist got covered enjoy list happy learning client support people heart trustcommerce whether working client services merchant boarding specialist solution consultants account management product implementation team staff friendly knowledgeable responsive client services team serves central support system trustcommerce provides customer support 24 7 365 via phone email always working live experienced professional happy assist product functionality service related questions partner directory visited online solutions directory \\? showcase integration partners looking shopping cart electronic health software \\( ehr \\) ivr software hardware solution already integrated trustcommerce solutions directory perfect place start add new partners regularly let us know would like see join network tell solution partner integrating trustcommerce search partner solutions directory documentation question want look answer documentation going best bet written trustcommerce information management team find comprehensive developer guides user guides available within tc vault whether learning use new product leveraging existing feature guides show path check trustcommerce documentation within tc vault product support select downloads training getting started trustcommerce adding new locations leveraging new products training provided needed schedule train trainer session training administrators primary users help get running quickly training videos prefer independent learning depth training videos accessible 24 7 365 fit unique schedule videos chock full content help become familiar trustcommerce training helpful new customers users looking learn new trustcommerce feature left hand navigation menu select training videos product help working within tc vault virtual terminal take advantage help tool guidance simply select help icon top right hand corner choose category interested getting started information billingid tokens look answers common questions quickly trustcommerce blog sharing part dna trustcommerce one vehicle like use blog trustcommerce blog find articles educate new products features raise security awareness keep industry insights find events attending much already subscribe trustcommerce blog follow us social media learn new articles posted want hear like hearing clients easy give feedback using orange colored give feedback tool right edge tc vault knows suggestion might make future product release always thank trustcommerce customer hope take advantage client resources built payment processingtc smart productshare postfacebooktwitterlinkedin related postsinternet things \\( iot \\) payments worldjune 1 2017visit us upcoming conferences eventsapril 14 2017prepare pci validated p2pemarch 23 2017 share post035 recent posts internet things \\( iot \\) payments world trustcommerce supports latest version ge centricity business visit us upcoming conferences events prepare pci validated p2pe accept online payments securely reduce pci scope \\? servicesaccept paymentsthe trustcommerce payment acceptance system dynamic business learn manage risksecurity privacy elements built foundation learn integrate technologyleverage expertise grow solutions business learn query api provides real time results payment information updates custom fields customer invoice system automatically updated incredible efficiency us provider offered although city complex set requirements trustcommerce solutions built ease integration leveraging tc link api long standing system integration partners comprehensive set payment solutions sensitive payment data enter systems convention center able reduce pci dss scope liability happy one benefit ease refunding voiding credit card payments city primary processor parking services manager everyone trustcommerce account manager customer service technical support groups always diligent responsive working staff identify formulate well thought professional solutions issues identify unequivocally recommend trustcommerce services entity need payment processing solutions treasury manager city tacoma washington online transactions important organization protecting donor information critical us never problems trustcommerce appreciate dedication efficiency reliable processing great customer service security chief operating officer surfrider foundation archives 2017 \\( 10 \\) june \\( 1 \\) internet things \\( iot \\) payments world may \\( 1 \\) april \\( 1 \\) march \\( 2 \\) february \\( 1 \\) january \\( 4 \\) 2016 \\( 23 \\) december \\( 3 \\) november \\( 2 \\) october \\( 1 \\) september \\( 2 \\) august \\( 1 \\) june \\( 5 \\) may \\( 3 \\) april \\( 1 \\) march \\( 2 \\) february \\( 1 \\) january \\( 2 \\) 2015 \\( 36 \\) december \\( 1 \\) october \\( 3 \\) september \\( 6 \\) august \\( 2 \\) july \\( 2 \\) june \\( 4 \\) may \\( 4 \\) april \\( 5 \\) march \\( 4 \\) february \\( 5 \\) 2014 \\( 25 \\) december \\( 2 \\) november \\( 1 \\) october \\( 1 \\) september \\( 1 \\) august \\( 2 \\) july \\( 3 \\) june \\( 3 \\) may \\( 4 \\) april \\( 2 \\) february \\( 4 \\) january \\( 2 \\) 2013 \\( 24 \\) december \\( 1 \\) november \\( 3 \\) october \\( 3 \\) september \\( 2 \\) july \\( 3 \\) june \\( 1 \\) may \\( 1 \\) april \\( 1 \\) march \\( 3 \\) february \\( 5 \\) january \\( 1 \\) 2012 \\( 12 \\) june \\( 4 \\) may \\( 1 \\) april \\( 2 \\) february \\( 2 \\) january \\( 3 \\) 2011 \\( 24 \\) december \\( 2 \\) october \\( 1 \\) september \\( 4 \\) august \\( 5 \\) july \\( 1 \\) june \\( 3 \\) may \\( 2 \\) march \\( 2 \\) february \\( 2 \\) january \\( 2 \\) 2010 \\( 7 \\) december \\( 1 \\) november \\( 2 \\) october \\( 1 \\) september \\( 1 \\) august \\( 2 \\) trustcommerce pci compliant service provider copyright 2017 trustcommerce rights reserved website design incitrio accept paymentsretail pos e commerce moto mobile omnichannel manage riskp2pe emv tokenization fraud tools integrate technologywhy partner apis sdks 3rd party integration directory shopping carts healthcare software municipality software trustcommercecorporate headquarters 1 macarthur place suite 400 south coast metro ca 92707 5927 phone 800 915 1680 fax 949 266 0359products servicestc citadel tc vault virtual terminal tc smart products tc ipa tc trustee reporting verticalshealthcare non profit parking municipality insurance education retail aboutexecutive team news press careers clients partners resources connect us find us facebooktwitterlinkedinyoutuberss commitment community support families friends abroad privacy policy terms conditions equal employment opportunity policy sitemap cta float button position fixed right 0 top 50 height 240px margin top 120px z index 99999 cursor pointer cta float button hover opacity 95 cta float button img width auto height auto cta float button img cta button img desktop display block cta float button img cta button img mobile display none cta float wrapper position fixed top 50 right 0 width 350px margin top 182px background color f2f4f7 webkit box shadow 0px 0px 16px 0px rgba \\( 0 0 0 0 34 \\) moz box shadow 0px 0px 16px 0px rgba \\( 0 0 0 0 34 \\) box shadow 0px 0px 16px 0px rgba \\( 0 0 0 0 34 \\) z index 99998 padding 20px 68px 20px 20px font family open sans helvetica arial verdana sans serif color 002d62 display none cta float wrapper cta form show display block cta float wrapper cta content h2 margin bottom 0 cta float wrapper cta content margin bottom 10px cta float wrapper hs form hs button font weight 600 important text transform uppercase width 40 font family open sans helvetica arial verdana sans serif important padding top 13px important padding bottom 13px important cta float wrapper hs form stacked inputs list li label font size 9px cta float wrapper input hs input cta float wrapper textarea hs input cta float wrapper select hs input padding 8px 4px cta float wrapper hs form stacked actions margin top 5px padding 0 20px cta float wrapper hs form label font family open sans helvetica arial verdana sans serif important media queries media screen \\( max width 1200px \\) cta float wrapper padding right 60px cta float button img width 40px height auto media screen \\( max width 767px \\) cta float wrapper padding right 55px cta float button img width 35px height auto media screen \\( max height 675px \\) cta float wrapper overflow hide top 50 margin top 182px cta float button top 50 height 175px margin top 87px cta float button img width 35px height auto media screen \\( max width 737px \\) cta float wrapper left 0 top 0 width 100 height 100 overflow x hidden overflow auto margin 0px padding 0px cta float wrapper inner position absolute width 100 height 100 left 0 top 0 padding 0 8px webkit box sizing border box moz box sizing border box box sizing border box cta float wrapper cta content cta float wrapper cta form padding 0 20px margin right 50px cta float wrapper cta content padding top 20px cta float wrapper cta content cta float wrapper cta form margin right 50px cta float wrapper cta form padding bottom 50px cta float button position fixed width 220px bottom 0 left 50 margin left 110px height 44px margin top 0 right auto top auto cta float button img cta button img desktop display none cta float button img cta button img mobile display block cta float button img width 220px height auto media screen \\( max height 380px \\) cta float wrapper left 0 top 0 width 100 height 100 overflow x hidden overflow auto margin 0px padding 0px cta float wrapper inner position absolute width 100 height 100 left 0 top 0 padding 0 8px webkit box sizing border box moz box sizing border box box sizing border box cta float wrapper cta content cta float wrapper cta form padding 0 20px margin right 50px cta float wrapper cta content padding top 20px cta float wrapper cta content cta float wrapper cta form margin right 50px cta float wrapper cta form padding bottom 50px speak sales information trustcommerce contact solutions consultant via form", 
    "descr2": "trustcommerce \\( tc \\) payment engine secure processing credit cards interfaced epic together solutions aid organizations achieving maintaining compliance payment card industry data security standards \\( pci dss \\) payment interface epic trustcommerce payment engine integrated epic secure processing credit cards interface provides single point entry front ce back ce website payments virtual terminal mobile devices kiosks comprehensive payment support centralized customizable enterprise level reporting safe secure payments trustcommerce dedicated removing credit card data healthcare provider environments reducing pci dss scope protecting patient payments throughout revenue cycle accomplished encryption supports end end encryption epic resolute welcome use encrypted card swipes encrypted key entry transparent redirect supports transparent redirect model mychart helping ensure sensitive cardholder data never enters healthcare organization environment tokenization healthcare organizations use tokenization within epic mychart welcome secure storage payment information dependent client overall system design using combination solutions helps ensure patients safe transaction environment dedicated support trustcommerce works closely epic support mutual clients addition dedicated support team tc continually working epic enhance integration provide collaborative support approach products integrated epic www trustcommerce com p 800 915 1680 2017 trustcommerce rights reserved epic resolute welcome mychart registered trademarks epic systems corporation trustcommerce healthcare solutions epic integration tc ipa tmresolute tc link mychart resolute welcome willow ambulatory tc trustee mychart willow ambulatory tc citadel mychart resolute \\( 2014 \\) welcome trustcommerce supports epic community connect mychart e visit client hosted epic hosted environments please refer epic documentation regarding supported hardware tc vault available reporting integrated epic modules", 
    "descr1": "2016 trustcommerce rights reserved tc link api developer guide version 5 3 4 note document classified public use tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page contents tc link 1 tc link \\? 1 tc link works 1 intended audience guide 2 go information 2 tc link functions 2 tc link data 3 rules 3 supported payment types industry segments 4 supported payment types 4 supported industry segments 4 getting started tc link 5 supported platforms 5 installing tc link 5 network configuration 5 testing connection 6 windows xp 6 windows vista windows 7 6 unix linux 7 first transaction 8 sample tc link \\( java \\) 8 sample compile response 9 basic transaction processing 10 basic transaction requests 10 required fields 10 basic transaction responses 11 transid 11 status 11 testing application 12 test data 12 test cards appro ved 13 test cards declined 13 ach test numbers 13 tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page ii sale \\( authorization host capture \\) 14 sale required fields 14 sale suggested notable optional fields 14 sale common responses 15 sale transaction example 15 preauth \\( authorization \\) 16 preauth required fields 16 preauth suggested notable optiona l fields 17 preauth common responses 17 preauth transaction example 18 postauth \\( capture \\) 19 postauth required fields 19 postauth suggested notable optional fields 19 postauth common responses 19 postauth transaction example 20 offline sale \\( offline authorization \\) 21 offline sale required fields 21 offline sale suggested notable optional fields 21 offline sale common responses 22 offline authorization example 22 verify \\( card verification \\) 23 verify required fields 23 veri fy suggested notable optional fields 23 verify common responses 24 verify example 24 credit \\( refund \\) 25 credit required fields 25 credit suggested notable fields 25 credit amount field 25 credit common responses 25 credit example 26 credit2 \\( stand alone refund \\) 27 credit2 required fields 27 credit2 suggested notable fields 27 credit2 common responses 27 tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page iii credit2 example 28 void \\( void transaction \\) 29 void required fields 29 void common responses 29 void transaction example 29 reve rsal \\( reversal transaction \\) 30 reversal required fields 30 reversal suggested notable fields 30 reversal common responses 31 reversal transaction example 31 chargeback 32 chargeback required fields 32 chargeback common responses 32 chargeback transaction example 33 transaction responses 34 general fields 34 transaction status 35 returned transaction statuses 35 approved accepted 35 decline type 36 declinetype fields 36 error response 37 error fields 37 error type 38 errortype fields 38 response field groups 39 response code 39 payload sent f ield 39 platform 40 baddata 40 server 41 client 41 card present \\( cp \\) 42 card swipe processing 42 tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page iv track data 42 card swipe fields 42 card swipe common responses 43 card swipe transaction example 43 encrypted card swipe processing 44 encrypted card swipe fields 44 encrypted card swipe common responses 44 encrypted card swipe transaction example 45 digital signature capture 45 signature capture fields 45 signature capture common responses 46 signature capture transaction example 46 card present \\( cnp \\) 47 e commerce mail order telephone order 47 e commerce moto fields 47 e commerce moto common responses 47 e commerce moto example 48 debit 49 signature debit 49 pin based de bit 49 pin based debit sale fields 50 pin based debit common responses 50 pin based debit sale example 51 pin less debit 52 pin less debit fields 52 pin less debit common responses 52 submitting pin less debit sale 53 using pin less debit bin lookup 53 electronic checks ach 54 ach fields 54 ach common respo nses 54 electronic check transaction example 55 purchase card 56 purchase level ii 56 purchase level ii fields 56 tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page v purc hase level ii common responses 57 purchase level ii transaction example sale 57 purchase level ii transaction example postauth 58 purchase level iii 58 purchase level iii integration 58 purchase level iii fields 59 line item data 60 purchase level iii line item data 60 purchase level iii common responses 61 purchase level iii transaction examp le 62 inventory information approval system \\( iias \\) 63 iias transaction fields 63 heal thcare eligible prescription amount fields 64 iias sale transaction examples 64 example 64 example ii 65 example iii 66 example iv 66 iias reversal transaction example 67 iias partial authorization response field 67 recurring installment payments \\( non tc citadel \\) 68 recurring installment fields 68 recurring installment common responses 68 submit ting recurring installment payment 69 restaurant \\( tip \\) 70 restaurant fields 70 restaurant transaction example 70 initial preauth 70 postauth tip 70 tc citadel 71 tc citadel fields 71 creating billing id 72 tc citadel responses 72 verify ing billing id 73 verify common responses 73 tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page vi unstoring billing id 74 unstore common responses 74 updating billing id 75 billingid updates common responses 75 shared access billingids 76 example scenario 76 sale transaction existing billingid 76 continuity payments recurring installment deferred 77 recurring payments 77 installment payments 77 deferred payments 77 example 77 continuity payments common responses 78 one time subscription transactions 79 one time subscription payments common sponses 79 one time payment 80 one time payments common responses 80 fraud score 81 fraud threshold 81 using fraudt hreshold 81 fraudthreshold returned values 82 blacklists 83 handling blacklist responses 83 velocity 84 velocity fields 84 velocity tra nsaction example 84 velocity returned values 85 address verification system \\( avs \\) 86 avs field 86 using avs 86 handling avs return codes 87 ca rd security code \\( csc \\) 88 card security code fields 88 using card security codes \\( csc \\) 89 tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page vii handling cvv response codes 89 discretionary fields 90 ticket operator fields 90 tc transaction custom fields 90 tc citadel custom fields 91 query api 92 best practice 92 email receipts 93 tc link api request 93 sale transaction example 93 tc l ink api receipt status 94 https post query types 95 https post query fields 96 query api tc vault example 97 tc vault query api transaction id example 101 enterprise example 101 format comma delimited list 101 format ii range custids 102 tc batch 103 batch file format 103 naming conventions 104 batch submission 104 curl example 104 batch upload interface example 105 batch response 106 batch results download interface example 106 batch status 107 https post 108 tc trustee api 109 externally ntegrated applications 110 appendix fields list 111 appendix b avs response codes 116 updates revisions 118 tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 1 tc link tc link \\? tc link api \\( tc link \\) fundamental interface payment processing trustcommerce tc link thin open source messaging api facilitates processing wide variety payment types wide variety platforms languages tc link get following comprehensive dependability security payment support ease integration full featured test platform integration account implementation support hig h availability client server side fail load balancing platform independence \\( microsoft windows unix derivatives linux derivatives \\) language framework independence \\( c c java com net perl python php \\) code samples est scripts tc link works specifics may vary different languages platforms however tc link implementations provide equal functionality 1 initiate secure connection 2 securely collect transaction details 3 securely transmit transaction de tails 4 securely receive response 5 parse response easy handling 6 close connection higher languages java perl python php provide send \\( \\) method combines steps 3 6 easier integrations send \\( \\) accep ts associative array input fields returns associative array output fields implementations c c com net cfx provide create \\( \\) pushparam \\( \\) send \\( \\) getresponse \\( \\) methods accomplish important send \\( \\) method transmits receives data trustcommerce servers generally method returns two seconds fyi trustcommerce recommends windows developers use either com net implementation facilitate many languages asp classic asp net cfx perl python php tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 2 intended audience guide guide assumes foundation software developer \\( standalone web otherwise \\) basic understanding electronic payment processing important developers fully review contents guide attempting install implement tc link payment related functionality failure may result compromised implementation go information developer guide provides platform language independent primer integrating trustcommerce payment processing reconciliation payment applications additional documentation available tc vault downloads page documents interest tc vault user guide tc trustee api developer guide tc link platform language specific readme files important unless otherwise indicated examples used throughout guide presented c c custids passwords cardholder primary account numbers \\( pans \\) used throughout guide example purposes attempt use readme files language specific information always used first step integration tc link functions following table summarizes primary methods found c c tc link implementation subsequent sections define specifics various transaction types function name description createlink \\( \\) create new transaction instance pushparam \\( \\) set single input request field custid action amount send \\( \\) process transaction getresponse \\( \\) retrieve single output response field getentireresponse \\( \\) retrieve output response fields tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 3 function name description destroy \\( \\) perform garbage collection close handles free allocated memory getversion \\( \\) get tc link version important tc link may vary version version consult readme file tc link package chose environment readme file describes specifics language platform tc link data tc link processes inputs outputs key field value pairs field ordering arbitrary input fields submitted ny order output fields expected order rules tc link requires data belong subset ascii character set non printable characters cr lf control characters must submitted pipe character must submitted spaces beginning end fields pre served spaces middle preserved dates must submitted yyyy mm dd yyyy four digit year mm two digit month dd two digit day example february 1 2015 submitted 2015 02 01 payment card expiration date \\( exp \\) must submitted mmyy mm two digit month yy last two digits year example february 2015 submitted 0215 tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 4 supported payment types industry segments trustcommerce certified processing numerous major front end processors major payment types major card types important supported payment types industry segments vary processor processor consult trustcommerce solutions consultant discuss specific needs \\( 800 \\) 915 1680 option 2 supported payment types following payment types supported payment type description credit cards visa mastercard american express discover diners club jcb debit cards pin based debit signature debit pin less debit purchase cards purchase level ii level iii checking savings electronic checks automated clearing house \\( ach \\) supported industry segments following industry segments supported situation industry card present \\( cp \\) retail restaurant card present \\( cnp \\) direct marketing mail order telephone order \\( moto \\) e commerce \\( shopping carts donation sites \\) continuity payments \\( recurring installment deferred \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 5 getting started tc link get started tc link first obtain appropriate tc link tc vault downloads page separate trustcommerce login required login tc vault begin testing tc link integration trustcommerce account may sign free trial trustcommerce free trial alternatively call \\( 800 \\) 915 1680 option 2 speak solutions consultant supported platforms tc link available following languages platforms c c cfx com net java perl php python ruby installing tc link tc link installation instructi ons well language platform specifics included readme file contained within tc link package important cannot install tc link environment \\( example application runs shared server \\) see alterna tive processing interfaces tc trustee api network configuration network must configured follows dns required must restricted must honor ttls must otherwise rfc compliant acls must restrict outbound traffic related inbound traffic ip addresses trustcommerce ip blocks trustcommerce may time add change remove ip addresses within published ip blocks please notify account manager client services representative want informed changes trustcommerce provide 30 days advance notice adding removing blocks important trustcommerce strongly recommends hard coding ip addresses firewalls software conf igurations may result connectivity interruptions use protocol filters helpers application layer firewalls recommended trustcommerce currently uses following ip blocks cidr notation netmask 207 38 18 32 27 207 38 18 32 255 255 255 224 207 38 46 0 26 207 38 46 0 255 255 255 192 207 38 125 80 28 207 38 125 80 255 255 255 240 208 42 227 128 26 208 42 227 128 255 255 255 192 tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 6 testing connection telnet used test environments ability connect trustcommerce generally tc link connects trustcommerce via tcp pgw1 trustcommerce com port 443 able connect successfully tc link problem connec ting computer fyi unable establish connection contact trustcommerce client services \\( 800 \\) 915 1680 option 3 windows xp 1 click start run type telnet pgw1 trustcommerce com 443 2 press ctrl \\( close square bracket \\) simultaneously 3 type status prompt message connected pgw1 trustcommerce com indicates successful connection 4 type quit press enter exit telnet windows vista windows 7 1 click start type cmd press enter cmd exe window appears 2 type telnet pgw1 trustcommerce com 443 3 press ctrl \\( close square bracket \\) simultaneously 4 type status prompt message connected pgw1 trustcommerce com indicates successful connection 5 type quit press enter exit telnet welcome microsoft telnet client escape character 'ctrl microsoft telnet status connected pgw1 trustcommerce com microsoft telnet quit tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 7 unix linux 1 open console shell run telnet pgw1 rustcommerce com 443 message connected pgw1 trustcommerce com indicates successful connection 2 press ctrl \\( close square bracket \\) simultaneously 3 type quit exit telnet yourhost telnet pgw1 trustcommerce com 443 trying 207 38 46 26 connected pgw1 trustcommerce com escape character telnet quit connection closed tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 8 first transaction point correct tc link package environment downloaded installed network configured properly ready run first test transaction keep following tips mind follow readme instructions examples chosen package test payment transaction types intend use busin ess model use test examples provided tc link package build run test \\( demo \\) transaction \\( \\) satisfied results go live run production test transactions verify account set properly processing platform fyi contact client services questions \\( 800 \\) 915 1680 option 3 sample tc link \\( java \\) tctest java import java security generalsecurityexception import java util hashmap import java uitl iterator import java util map import com trustcommerce tclink public class tctest public static void main \\( string argv \\) try tclink init \\( \\) catch \\( generalsecurityexception e \\) return tclink tc new tclink \\( \\) map new hashmap \\( \\) put \\( custid 962100 \\) put \\( password xxxxxxxx \\) put \\( action sale \\) put \\( amount 100 \\) put \\( cc 4111111111111012 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 9 put \\( exp 1012 \\) map tc submit \\( \\) iterator keyset \\( \\) iterator \\( \\) \\( hasnext \\( \\) \\) object key next \\( \\) system println \\( key get \\( key \\) \\) sample compile response cd usr src unzip tclink 3 4 4 java zip export classpath classpath usr src tclink 3 4 4 java trustcommerce jar javac tctest java java tctest avs 0 authcode 1a64lq status approved transid 028 0029514119 tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 10 basic transaction processing section discusses specific details basic transaction types supported tc link information section language platform independent please refer specific readme file chosen tc link language platform early step integration important unless otherwise indicated examples used throughout guide presented c c custids passwords cardholders primary account numbers used thro ughout guide example purposes attempt use basic transaction requests tc link used process supported payment type supported industry segment tc link accepts wide variety input parameters transaction built keep following mind input parameters mandatory custid password action many input parameters optional used either qualify preferred rates advanced reporting transactions sent parameters input parameters specific one transaction type input parameters minimally validated tc link declines rejections processing errors detailed within response fyi trustcommerce authenticates incoming tc link requests using trustcommerce issued custid password combination whereas tc vault tc link custid passwords may differ unless otherwise specified document refers tc link password required fields following fields required transactions field name description custid trustcommerce assigned numeric custid example 962100 password tc link password associated aforementioned custid action sale preauth postauth credit void store tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 11 basic transaction responses transaction sent return several parameters describing success failure transaction additional fields may returned based type action described detail along examples throughout document status transid returned every transaction transid properly formatted transactions always return transaction id \\( transid \\) trans id unique identifier transaction used retrieve transaction tc vault website otherwise access transaction future example order credit previous transaction need send transid original transaction status transactions always return status parameter describes success failure transaction status set one following name description approved transaction successfully authorized accepted transaction successfully accepted system decline transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details fyi comprehensive list see ransaction responses tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 12 testing application trustcommerce tc link test environment fully functional available 24 7 tc link test account demo environment available long want use many integrators continue use test account future development projects evaluation new products training new staff account production \\( live \\) indicate whether transacti live se tting demo field n transaction demo transaction setting field default configured test accounts automatically send test transactions \\( demo \\) result required pass fiel field name description demo n used indicate transaction request test demo transaction regardless account status following example shows field used tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action store \\) tclinkpushparam \\( handle demo \\) tclinkpushparam \\( handle cc 411111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle name test person \\) tclinkpushparam \\( handle amount 455 \\) test data testing may want experiment different responses generated following table provides test card numbers produce approval includes address data testing address verification system \\( avs \\) want test cvv code listed right hand column correct cvv code valid payment cards work produce u avs code important test cards work transactions flagged demo accounts test mode run live transactions wi return decline declinetype carderror tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 13 test cards approved card type card number exp date address 1 city state zip cvv visa 4111111111111111 04 19 123 test st somewhere ca 90001 123 mastercard 5411111111111115 04 19 4000 main st anytown az 85001 777 mastercard 2223000010020888 04 19 4001 main st anytown az 85002 657 american express 341111111111111 04 19 12 colorado blvd elsewhere il 40000 4000 discover 60110000000000 12 04 19 6789 green ave nowhere 12345 n diners club 36484444444446 04 19 7390 del mar blvd anytown ny 01101 n jcb 213122222222221 04 19 350 madison ave springfield oh 40000 n test card numbers preceding table duplicated without spaces use copy paste visa 4111111111111111 mastercard 5411111111111115 american express 341111111111111 discover 60110000000000 diner 's club 36484444444446 jcb 213122222222221 test cards declined following card numbers wil l generate decline declinetype listed may use test code takes different paths dependent upon type decline card number without spaces \\( copying \\) exp date decline type 4012 3456 7890 9 4012345678909 04 19 decline 5555 4444 3333 2226 5555444433332226 04 19 call 4444 1111 4444 1111 444411114444111 1 04 19 carderror ach test numbers routing number account number 789456124 55544433221 tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 14 sale \\( authorization host capture \\) sale transaction simplest method process complete payment upon submission sale transaction attempts authorization approved schedules capture initiates process results funding important one payment type processed time following basic payment types supported card pres ent \\( cp \\) payments track1 track2 encryp ted card present payments encryptedtrack card n ot present \\( cnp \\) payments cc exp checking savin gs payments routing account sale required fields field name description action sale cc cardholder primary account number \\( pan \\) \\( example credit debit card number \\) exp payment card expiration date mmyy format amount transaction amount cents \\( example 1 00 would submitted 100 \\) sale suggested notable optional fields field name description address1 zip address verification system fields see address verification system \\( avs \\) cvv card security code see card security code \\( csc \\) ticket discretionary field used merchant specified transaction identifier searching reporting cases value field passed financial institutions store n function pushes credit card data tc citadel returns billingid enables merchants charge cardholder keep record file use later date store function pushes data citadel sale preauth approved billingid returned sale preauth transaction response sale preauth associated billingid record tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 15 sale common responses following table demonstrates common fields values returned sale transaction request comprehensive list refer transaction responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible val ues include approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details authcode numeric alphanumeric code received processor response transaction value provided sale transaction approved merchant configured response avs avs response code returned address verification system \\( avs \\) transaction verify parameter \\( verify \\) included request see address verification system \\( avs \\) response codes additional information sale transaction example following example demonstrates sale attempts charge 1 25 payment card 4111111111111111 expiring december 2015 tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle amount 125 \\) tclinkpushparam \\( handle cc 411111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 16 preauth \\( authorization \\) preauth used verify sufficient funds available valid payment card place temporary hold requested funds transaction finalized postauth used authorization hold remain effect either transaction funded \\( following successful p ostauth \\) authorization expired canceled card issuer preauth transactions often used merchant cannot ful fill purchase immediately \\( example stock item ust ordered manufactured \\) merchant yet know final total \\( example pre tip restaurant transactions shipping costs manufacturing costs \\) preauth required fie lds field name description action preauth cc cardholder primary account number \\( pan \\) \\( example credit debit card number \\) exp payment card expiration date mmyy format amount transaction amount cents \\( example 1 00 would submitted 100 \\) important preauth authorization transactions must captured \\( postauth ed \\) reversed reauthorized within 72 hours card present \\( cnp \\) processing within 24 hours card present \\( cp \\) processing failure comply may result transaction downgrades additional processing fees penalties tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 17 preauth suggested notable optional fields field name description address1 zip address verification system fields \\( see address verification system \\( avs \\) \\) cvv card security code \\( see card security code \\( csc \\) \\) ticket discretionary field used merchant specified transaction identifier searching reporting cases value field passed financial institutions store n function pushes credit card data tc citadel returns billingid enables merchants charge cardholder keep record file use later date store function pushes data tc citadel sale preauth approved billingid returned sale preauth transaction response sale preauth associated billingid record preauth common responses following table demonstrates common fields values returned preauth transaction request comprehensive list refer transaction responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible val ues include approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details authcode numeric alphanumeric code received processor response transaction value provided sale transaction approved merchant configured response avs avs response code returned address verification system \\( avs \\) transaction verify parameter \\( verify \\) included request see address verification system \\( avs \\) additional information tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 18 preauth transaction example following example demonstrates preauth requests 1 25 reserved payment card 4111111111111111 expiring december 2015 tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action preauth \\) tclinkpushparam \\( handle cc 4111111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle amount 125 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 19 postauth \\( capture \\) postauth transaction used finalize preauth thereby initiating funding cases postauth transactions submitted amount preauth postauth amount differs preauth amount reversal issued new authorization obt ained see reversal \\( reversal transaction \\) important trustcommerce allows postauth 14 days preauth postauth required fields amount specified postauth automatically submitted amount original preauth following minimum required field value pairs postauth transaction name description action postauth transid transid returned preauth transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 postauth suggested notable optional fields field name description amount transaction amount cents \\( 1 00 submitted 100 \\) general postauth amount match preauth amount ticket discretionary field used merchant specified transaction identifier searching reporting cases value field passed financial institutions postauth common responses following table demonstrates common fields values returned postauth transaction request comprehensive list refer transaction responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values include accepted transaction successfully accepted system baddata invalid fields passed see error type details error system error processing transaction see error type details tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 20 postauth transaction example following example demonstrates postauth attempts capture 3 66 based preauth transid 012 1234567890 tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action postauth \\) tclinkpushparam \\( handle transid 012 1234567890 \\) tclinkpushparam \\( handle amount 366 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 21 offline sale \\( offline authorization \\) offline sale transaction used initiate capture authorization outside trustcommerce systems offline sale generally used attempt process payment card transaction automatically unsuccessful whatever reason \\( e xample decline type call unreadable track data \\) occasions operator may call customer service number listed card request offlineauthcode card issuer may provide six digit authorization code enable offli ne processing fyi offlineauthcode provided six digits operator ask six digit code offline sale required fields field name description offlineauthcode six digit numeric code used force transaction action preauth cc cardholder primary account number \\( pan \\) \\( example credit debit card number \\) exp payment card expiration date mmyy format amount transaction amount cents \\( 1 00 would submitted 100 \\) offline sale suggested notable optional fields field name description ticket discretionary field used merchant specified transaction identifier searching reporting cases value field passed financial institutions tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 22 offline sale common responses following table demonstrates common fields values returned offline authorization transaction request comprehensive list refer transaction responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values include approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details offline authorization example tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle cc 4111111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle amount 5000 \\) tclinkpushparam \\( handle offlineauthcode a12345 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 23 verify \\( card verification \\) verify transaction verifies payment card \\( credit debit \\) information valid generally verify used validate cardholder information merchant commits inventory resources product service delivery additionally verify used merchants payment information file changes important verify may apply cardholder primary account number \\( credit debit card \\) expiration date card security code billing address verify check available funds verify required fields field name description action verify cc cardholder primary account number \\( pan \\) \\( example credit debit card number \\) exp payment card expiration date mmyy format verify suggested notable optional fields field name description ticket discretionary field used merchant specified transaction identifier searching reporting cases value field passed financial institutions address1 zip address verification system fields see address verification system \\( avs \\) cvv card security code see card security code \\( csc \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 24 verify common responses following table demonstrates common fields values returned offline authorization transaction request comprehensive list refer transaction responses field name description transid tra nsid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values include approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details authcode numeric alphanumeric code received processor response transaction value provided sale transaction approved merchant configured response avs avs response code returned th e address verification system \\( avs \\) transaction verify parameter \\( verify \\) included request see address verification system \\( avs \\) response codes additional information verify example following example demonstrates verify transaction attempts validate payment card 4111111111111111 expiring december 2015 tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action verify \\) tclinkpushparam \\( handle cc 411111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 25 credit \\( refund \\) credit transaction request reimburses funds previous transaction merchant bank account back cardholder payment card account credits generally performed specific transaction id perform standalone refund \\( reference prior trustcommerce transaction \\) refer credit2 \\( standalone refund \\) credit required fields field name description action credit transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 credit suggested notable fields field name description amount transaction amount cents \\( 1 00 submitted 100 \\) credit amount field credit amount field optional included full amount previous transaction credited included must value greater equal 0 01 less equal amount collected previ ous transaction minus credits already run otherwise transaction credited example full amount previous transaction 25 12 2 00 credit already run amount want credit 2 3 12 amount would submitted 2312 amount less 1 00 amount must prepended zeros length three digits example 75 cents would submitted 075 credit common responses following table demonstrates common fields values returned credit transaction request comprehensive list refer transaction responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 26 field name description status status indicator transaction request possible values include accepted transaction successfully accepted system baddata invalid fields passed see error type details error system error processing transaction see error type details credit example following example credit \\( refund \\) transaction amount 3 66 tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action credit \\) tclinkpushparam \\( handle transid 012 1234567890 \\) tclinkpushparam \\( handle amount 366 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 27 credit2 \\( standalone refund \\) another type credit transaction known credit2 solocredit designed new merchants navigating one solution another may need issue credits transactions originate trustcommerce system credit2 one time transaction important trustcommerce strongly commends payment card number cardholder identity verified prior running credit2 transaction consult solutions consultant discuss specific needs \\( 800 \\) 915 1680 option 2 credit2 required fields field name description cc cardholder primary account number \\( pan \\) \\( example credit debit card number \\) exp payment card expiration date mmyy format amount transaction amount credit back cents \\( 1 00 submitted 100 \\) credit2 suggested notable fields field name description ticket discretionary field used merchant specified transaction identifier searching reporting cases value field passed financial institutions credit2 common responses following table demonstrates common fields values returned credit2 transaction request comprehensive list refer transaction responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values include accepted transaction successfully accepted system baddata invalid fields passed see error type furthe r details error system error processing transaction see error type details tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 28 credit2 example following example credit2 \\( standalone refund \\) payment card number expiration date provided tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action credit2 \\) tclinkpushparam \\( handle cc 4111111111111111 \\) tclinkpushparam \\( handle exp 0412 \\) tclinkpushparam \\( handle amount 500 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 29 void \\( void transaction \\) void transaction used cancel postauth sale credit credit2 sent settlement void required fields field name description action void transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 void common responses following table demonstrates common fields values returned void transaction request comprehensive list refer transaction responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values include accepted transaction successfully accepted system baddata invalid fields passed see error type details error system error processing transaction see error type details void transaction example following illustrates attempt void previously approved sale transaction sale transactions reversal request also submitted behind scenes free funds authorization tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action void \\) tclinkpushparam \\( handle transid 012 1234567890 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 30 reversal \\( reversal transaction \\) reversal transaction allows operator reverse credit hold previously approved authorization prior settlement transaction often used e commerce mail order telephone order \\( moto \\) environment original authorization amount changes cardholder cancels order reversal processed cannot undone reversal time limit card present \\( cp \\) environments 24 hours please contact merchant bank full details amount field optional included full amount previous transaction reversed included must value greater equal 0 01 less tha n equal amount collected previous transaction otherwise transaction reversed trustcommerce supports partial full reversals visa branded cards full reversals mastercard branded cards feature ava ilable consult trustcommerce solutions consultant discuss specific needs \\( 800 \\) 915 1680 option 2 important trustcommerce recommends implementing reversal transaction type within processing model authorizations still open aft er 72 hours failure reverse capture authorizations within 72 hours may result transaction downgrade different rate category merchant may subject additional fees penalties reversal required fields field name description action reversal transid transid returned preauth transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 reversal suggested notable fields field name description amount transaction amount cents \\( example 1 00 would submitted 100 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 31 reversal common responses following table demonstrates common fields values returned reversal transaction request comprehensive list refer transaction responses field name description transid transid returned preauth transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator ransaction request possible values include accepted transaction successfully accepted system baddata invalid fields passed see error type details error system error processing transaction see error type details reversal transaction example basic fields reversal transactions tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action reversal \\) tclinkpushparam \\( handle transid 012 1234567890 \\) tclinkpushparam \\( handle amount 500 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 32 chargeback chargeback occurs cardholder disputes item payment card statement never authorized charge victim identity theft received damaged late goods receive services merchandise dispute resolved favor customer card issue r provides refund cardholder operators mark transaction disputed cardholder chargeback transaction tc link important within trustcommerce chargeback action simply reconciliation purposes \\( reporting \\) return funds back cardholder chargeback required fields field name description action chargeback transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 chargeback common responses following table demonstrates common fields values returned chargeback request comprehensive list refer transaction responses field name description transid transid returned preauth transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values include accepted transaction successfully accepted system baddata invalid fields passed see error type details error system error processing trans action see error type details tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 33 chargeback transaction example following example illustrates attempt perform chargeback transid 012 1234567890 tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action chargeback \\) tclinkpushparam \\( handle transid 012 1234567890 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 34 transaction responses transaction submitted results returned using array field value pairs similar transaction input \\( see tc link functions tc link data \\) method used retri eve response fields depends integration method used please see examples detail retrieve response values general fields following response fields common transaction field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request specif ic values returned documented later table declinetype response field status returned decline declinetype field also included providing detail regarding reason decline error response field status returned baddata error field also included providing detail regarding reason response offenders error response field included offenders response field also included indicate field fields responsible error errortype response field status returned error errortype field also included providing detail regarding reason error authcode numeric alphanumeric code received processor response transaction tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 35 transaction status transactions always return status field describes success failure transacti properly formatted transactions always return transaction id trustcommerce uses 14 digit alphanumeric value formatted like example transid 012 1234567890 rans id unique identifier transaction used retrieve specific transaction tc vault website access transaction future example credit previous transaction need send original transid returned transaction statuses returned transaction statuses one following status value description approved transaction successfully authorized accepted transaction successfully accepted system decline transaction declined see decline type fields baddata invalid fields passed see error type error system error processing transaction see error type approved accepted difference accepted approved subtle important accepted response means transaction queued trustcommerce system without errors rejected later approved response means transaction authorization sort successfully cleared bank example difference approved accepted sale versus credit transaction sale real time authorization returns approved status success credit real time thing credit authorization credit transaction queued processing bank possibility may rejected later tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 36 decline type declinetype fields status set decline declinetype field contains one following declinetype value description decline true decline almost always result insufficient funds card avs address verification system \\( avs \\) failed address entered match billing address file bank cvv cvv failed number provided correct verification number card see card security code \\( csc \\) call card must authorized manually phone may choose call customer service number listed card ask offline authcode passed offlineauthcode field expiredcard card expired request updated expiration date cardholder carderror card number invalid could typo card reported stolen authexpired attempt postauth expired \\( 14 days old \\) preauth fraud tc crediguard fraud score requested threshold see fraud score blacklist tc crediguard blacklist value triggered see blacklists velocity tc crediguard velocity control triggered see velocity tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 37 error response error fields status baddata indicates transaction attempted one fields invalid case field error indicate problem offender field lists offending input fields error field may returned one followin g field name description missingfields one fields required transaction type sent extrafields fields allowed transaction type sent badformat field improperly formatted non digit characters number field badlength field longer shorter server allows merchantcantaccept merchant cannot accept data passed field offender cc example usually means tried run card type \\( american express discover \\) supported account currency tried run currency type supported account mismatch data one offending fields crosscheck offending field tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 38 error type errortype fields status error indicates error occurred processing transaction fields \\( avs billingid \\) may returned transaction depending action see sections covering transaction type running detailed information specialized return values status error errortype field returned one following field name description cantconnect could connect trustcommerce check internet connection make sure dnsvalue tc link software unable resolve dns hostnames make sure name resolving ability machine note dnsfailure response given test transaction live transactions never receive response used identify dns connectivity issues prior merchant going live linkfailure connection established severed transaction could complete avoid duplication check transaction independently determine transaction successfully processed failtoprocess transmission errors encountered trustcommerce connection payment processor notallowed certain actions permitted custid configured perform action transaction attempted custid authorized perform errortype returned important linkfailure failtoprocess errors dicate non specific communication breakdown payment processor trustcommerce resubmission may result duplicate authorization reservation though result duplicate capture avoid duplication check transaction independently determine transaction successfully processed tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 39 response field groups trustcommerce provide additional details front end processing platforms features must requested custid activated trustcommerce important please refer individual processing platform messaging documentation possible return values meanings response code response codes sent trustcommerce front end processing platforms passed directly integrator additional response fields configured ret urn fields follows response field description responsecode response code sent trustcommerce processing platform responsecodedescriptor textual description code indicates documented processing platform messaging documentation payload sent field trustcommerce provide response front end processing platforms indicating transaction payload submitted front end processor indicator provided \\( 1 \\) enabled custid \\( 2 \\) front end proces sor reached error processing transaction transaction considered safe resubmit transaction error value payloadsent set n front end processor consulted see transa ction processed time payloadsent set absence field transaction response means applicable transaction configured return field follows response field description payloadsent set n indicate transaction payload submitted front end processor tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 40 platform baddata error may occur transaction fails meet tc link internal validation checks may result malformed data sent trustcommerce functionality required processing network failover component correctly missin g errors usually corrected modifying environment application send correct data tc link important try solve errors test environment prior moving production environment helps business minimize interruptions processing live transactions baddata status value baddata following errors may returned comma delimited list input fields named offenders baddata error description missingfields missing fields required transaction processed provide fields specified offenders field names offenders value comma delimited extrafields providing fields allowed transaction type provide fields specified offenders badlength input field minimum maximum length restrictions review field description provide corrected version meets field length requirements badformat field characteristics match value provided review field description submit correct accepted format merchantcantaccept custid setup process given card type currency type contact solutions consultant determine processing type transaction mismatch field provided contains conflicting data another field example cc field match data provided track1 data yo u would encounter error like remove one fields try tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 41 server server generated error conditions may due unavailability unreliable communication card processing networks unrecognized response code actual card processing networks cases transaction may actually processed way card issuer happens cardholder contact bank authorization present reverse following table contains details server generated error conditions server error description offenders linkfailure occurs issues receiving response data trustcommerce avoid duplication check transaction independen tly determine application successfully processed n unsupported action provided supported processing platform action unsupported use tip field supported industry platform tip unsupported use shipdate field supported industry platform shipdate failtoprocess transmission errors encountered trustcommerce connection payment processor n important linkfailure failtoprocess errors indicate non specific communication breakdown payment processor trustcommerce resubmission may result duplicate authorization reservation though result duplicate capture avoid duplication check transaction independently determine transaction successfully processed client errors may occur indicate network connectivity issues regardless transaction type submitted trustcommerce fields present indicated n return appropriate type determined tc link implementation try check transid field may allow differentiate various error types following table describes two errors might see trouble connecting receiving data trustcommerce error description cantco nnect occurs connection cannot made transaction processing server linkfailure occurs issues receiving response data trustcommerce avoid duplication check transaction independently determine application successfully processed tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 42 card present \\( cp \\) card swipe processing track data track data information encoded within magnetic strip back credit card electronic reader swipe device point sale \\( pos \\) location reads data retail environments card swipe devices pass magnetic str ipe data along payment card information preauth sale transaction two fields used send data track1 track2 data track2 preferred platforms data track1 contents track2 read successfully please submit part transaction need submit track1 data track2 cannot read data read tracks may included however data start sentinel \\( percent character track1 semicolon track2 \\) end sentinel \\( question mark \\? \\) used everything outside start end sentinels \\( trailing lrc character \\) discarded track1 track2 data used substitutes th e cc exp fields important pci compliance security reasons never store save track data temporary files card swipe fields field name description track1 track1 data card swiped magnetic stripe reader available merchants conduct face face transactions many card issuer regulations store capture data beyond time needed perform transaction store track2 track2 data card swiped magnetic stripe reader available merchants conduct face face transactions many card issuer regulations store capture data beyond time needed perform transaction store tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 43 card swipe common responses following table demonstrates common fields values returned card swipe transaction request comprehensive list refer transaction responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values include approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details authcode numeric alphanumeric code received processor response transaction value provided sale transaction approved merchant configured response avs avs response code returned address verification system \\( avs \\) see app endix b address verification system \\( avs \\) response codes card swipe transaction example following example card swipe transaction track2 data submitted tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle track2 4111111111111111 07120000000000000000 \\? \\) tclinkpushparam \\( handle amount 1500 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 44 encrypted card swipe processing trustcommerce key injected point sale \\( pos \\) swipe devices return track data encrypted format added security trustcommerce systems securely decrypt process track data scenario instead sending track1 track 2 fields use encryptedtrack field important pos swipe devices functionality consult trustcommerce solutions consultant discuss specific needs \\( 800 \\) 915 1680 option 2 encrypted card swipe fields field name description encryptedtrack track1 track2 data encrypted swipe device encrypted card swipe common responses following table demonstrates common fields values returned encrypted card swipe transaction request comprehensive list please refer transaction responses field name description transi transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values include approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details authcode numeric alphanumeric code received processor response transaction value provided sale transaction approved merchant configured response avs avs response code returned address verification system \\( avs \\) see app endix b address verification system \\( avs \\) response codes tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 45 encrypted card swipe transaction example following example encrypted card swipe transaction tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle encryptedtrack 4111111111111111 \\) tclinkpushparam \\( handle amount 1500 \\) digital signature capture trustcommerce store display digital signatures transactions provided signature image presented within tc vault visible viewing printable receipt signature image data supplied sale credit ransaction submission separate signature transaction important trustcommerce supports gif png bitmap tiff jpeg image data images always presented receipts png signature capture fields field name description sigparts number pieces image data broken corresponding number sigdata fields sigdata signature image data binary image data shall hex encoded supplied chunks 1024 hex characters replace w ith image part number starting 1 action action signature authorization signature submission also sale credit credit2 transaction request signature submission transid transid signature associated required action signature tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 46 signature capture common responses following table demonstrates common fields values returned authorization signature request comprehensive list please refer transaction responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values include accepted signature received baddata invalid fields passed see error type details error system error processing transaction see error type details signature capture transaction example following example authorization signature submission tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action signature \\) tclinkpushparam \\( handle transid 012 1234567890 \\) tclinkpushparam \\( handle sigparts 2 \\) tclinkpushparam \\( handle sigdata1 89504e470d0a1a0a0000000d49484452000000c80000004b0806000000357cc8e8000000017352474200aece1ce90000000467414d410000b18f0bfc6105000000206348524d00007a26000080840000fa00000080e8000075300000ea6000003a98000017709cba513c0000076749444154785eed5ccb4a25311075fec8c7a70822b8134410972e4570e30f88206e5c8a4b77fe895b3722eef407ec99ba43393545d2a9cea393be39bdb9e3bd79d5a973924a253dbf863fcf061e200004dc089040f0000120e0466003c0000120e0470002013b80c008021008e801042010700008c4218015240e37d4ea040108a41347c3cc3804209038dc50ab130420904e1c0d33e3108040e27043ad4e1080403a7134cc8c43000289c30db53a410002e9c4d130330e0108240e37d4ea040108a41347c3cc3804209038dc50ab130420904e1c0d33e3108040e27043ad4e1080403a7134cc8c43000289c30db53a410002e9c4d130330e0108240e37d4ea040108a41347c3cc3804209038dc50ab130420904e1c0d33e3108040e27043ad4e1080401a73f4c7c7c7f0f4f434d0279efa08402033f880496f213e95d9dcdc5c89044f7d042090197cc0a4b7101f0299c12113ba80402680155b54923e143a4120b12897a9078194c1f5bf56ada427f15c5e5eae422cfa0c896986a177dfc56204b2e4cdab45 \\) tclinkpushparam \\( handle sigdata2 2039c43165afd33df38d002c46201692196d9ebd9865eca90291f52d7b9dd94158688710c80c8e0b0924a7382834b364cb66307b2dba684a2063615488642d7b2334f6d7d7d7616f6f2f29bdbbe410b465df35259031228548d632c8f7f7f72bf2d3a77e52578f5276633ff317d94508a4551259c839b63ad4b0cb427c2e43a2ee7d3fd3bc406a90c8427c6b19b97ae8b4 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 47 card present \\( cnp \\) e commerce mail order telephone order merchants process payments telephone mail considered direct marketing mail order telephone order \\( moto \\) merchants transactions face face acquirers often charge higher fees mitigate higher risk ship products customers use postauth transaction specify shipdate field default shipdate day postauth initiated consistent industry clearing requirements ship date form mm dd yyyy mm represents two digit month dd represents two digit day yyyy represents four digit year e commerce mot fields merchants set direct marketing default encompasses moto e commerce setup process within application transactions e commerce merchant wants process transactions occurring v ia telephone mail order would submit type moto preauth postauth sale transaction field name description shipdate date products shipped type moto e commerce moto common responses following table demonstrates common fields values returned encrypted card swipe transaction request comprehensive list refer transaction responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values include approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 48 e commerce moto example following example moto transaction tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action postauth \\) tclinkpushparam \\( handle transid 012 1234567890 \\) tclinkpushparam \\( handle ticket 011112222 \\) tclinkpushparam \\( handle shipdate 12 01 2010 \\) tclinkpushparam \\( handle type moto \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 49 debit debit cards enable direct withdrawal user 's savings checking account since debit cards represent actual money transf erred failure process failure communicate simple unavailability may produce undesirable results duplicate charges mitigate may want consider response approval decline requiring follow trustcommerce merchant bank three primary types debit card transactions pin based debit signature debit pin less debit important ability process pin based debit pin less debit transactions restaurant \\( tip support \\) functionality depends processing platform industry segment questions call \\( 800 \\) 915 1680 option 2 speak trustcommerce solutions consultant signature debit often called offline debit type p ayment made check debit card displaying visa mastercard logo signature debit transactions accepted signature lieu pin processed similarly credit cards pin based debit pin based debit transaction occur point sale cardholder enters personal identification number \\( pin \\) instead signing receipt available everywhere type transaction common retail environments offers merchants lower processing fees amo unt cost goods services plus merchant 's surcharge cash back amount requested cardholder debit sale additional constraints fields may submitted processing respect section preaut h sale required fields specifically track2 amount must submitted transaction process recommended integrator populate additional fields section trustcommerce system may reject tr ansaction validation criteria \\( example lack availability unsuitability \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 50 pin based debit sale fields fields described table generally required process debit sale transaction field name required description pin field includes dukpt encrypted pin block \\( 16 hex characters \\) followed ksn \\( 16 20 hex characters \\) surcharge n amount cents surcharge assessed transaction commonly used merchants wanting charge arbitrary amount money using device portion amount field indicating surcharge merch ants wish charge surcharge must provide information required acquiring bank amount may 0 field omitted altogether surcharge amount considered 0 cashback n amount money cents merchant return cardholder portion amount field indicating cash back merchants want provide cash back cardholder must provide information required th e acquiring bank amount may 0 field omitted altogether cashback amount considered 0 pin based debit common responses following table demonstrates common fields values returned pin based deb transaction request comprehensive list refer transaction responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible value include approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type detai ls authcode numeric alphanumeric code received processor response transaction value provided sale transaction approved merchant configured response avs avs response code returned address verification system \\( avs \\) see appendix b address verification system \\( avs \\) response codes tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 51 pin based debit sale example example performs sale debit card track data pin information extracted card track data cost goods purchased 4 00 surcharge 1 00 included well request 20 00 cash back net total transaction therefo 25 00 tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle track2 41111111111111111 1215 \\? \\) tclinkpushparam \\( handle pin becd3379a717d40e4b00010000200000001a \\) tclinkpushparam \\( handle amount 2500 \\) tclinkpushparam \\( handle surcharge 100 \\) tclinkpushparam \\( handle cashback 2000 \\) important pin based debit refunds generally processed \\( signature debit \\) credit card refunds please see credit \\( refund \\) information tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 52 pin less debit pin less debit transactions card present \\( cnp \\) transactions customer use debit card make payments online phone without entering pin pin less debit processing allows certain industry segments process payments taking advantage lower processing fees traditional credit card transactions pin less debit transactions may credited debit transaction use pin less debit cards supported e commerce moto integrations platforms custid must configured support trans action type contact trustcommerce account manager solutions consultant details regarding support setup functionality integrating pin less debit important able distinguish cards upport concept functionality added tc link assist determination pin less debit fields field name required description pinless debit indicates transaction processed pin less debit pinless lookup n set bin lookup cc number provided performed first depending results lookup transaction submitted pinless debit transaction standard cc transaction pin less debit common responses following table demonstrates common fields values returned pin less debit transaction request comprehensive list see transaction responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible value include approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details authcode numeric alphanumeric code received p rocessor response transaction value provided sale transaction approved merchant configured response tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 53 field name description avs avs response code returned address verification system \\( avs \\) see ap pendix b address verification system \\( avs \\) response codes submitting pin less debit sale pinless lookup parameter submitted transaction integrator bank identification number \\( bin \\) lookup prior submitting transaction bin first six digits account number used payment card issuer identify stitution used properly identify card pin less eligible example simple pin less debit transaction might look like following tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle cc 4111111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle amount 1000 \\) tclinkpushparam \\( handle pinless debit \\) using pin less debit bin lookup following example bin lookup first performed locally card number provided single transaction attempted based result lookup either pin less debit transact ion standard credit card sale transaction integrators use field ability perform bin lookup prior submitting transaction tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle cc 4111111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle amount 1000 \\) tclinkpushparam \\( handle pinless debit \\) tclinkpushparam \\( handle pinless lookup \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 54 electronic checks ach automated clearing house \\( ach \\) back end process electronic checks may processed ach used move money checking savings accounts concept authorization apply ach transactions purely money transfer reason transacti types available ach sale credit ach credits identical types credits trustcommerce system please refer credit2 \\( standalone refund \\) details issuing credits ach sales use fields payment card sales exception cc exp fields instead use following fields account routing address verification system \\( avs \\) available ach transactions avs setting ignored fyi ach transactions sometimes associated savings accounts instead checking accounts processing platforms support savings field consult trustcommerce solutions consultant discuss specific needs \\( 800 \\) 915 1680 option 2 ach fields field name description routing checking savings account routing number account checking savings account number media media ach savings field set indicate referenced routing account field values savings account otherwise assumed checking account ach common responses following table demonstrates common fields values returned ach transacti request field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values include accepted transaction successfully accepted system baddata invalid fields passed see error type details error system error processing transaction see error type details tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 55 electronic check transaction example following example includes data necessary perform ach transaction tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle media ach \\) tclinkpushparam \\( handle account 123456789123 \\) tclinkpushparam \\( handle routing 789456124 \\) tclinkpushparam \\( handle amount 5000 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 56 purchase card purchase card transaction processing allows government agencies universities medium large sized businesses qualified entities process transactions varying levels information done primarily improved reconciliation reporting may also result preferred discount rate purchase level ii purchase level ii cards used business business \\( b2b \\) business government \\( b2g \\) tra nsactions selling products directly consumers need use purchase level ii additionally purchase level ii used cardholder using one three types commercial cards corporate card business c ard purchase card depending platform receive indicator specifying whether card business card purchase card business card return value b purchase card return value corporate card value r submit additional data based indicators application prompt accordingly processor support identifier return trustcommerce return identifier submit th e data every transaction avoid non compliance fees potential discount rate downgrades purchase level ii trustcommerce supports use preauth postauth sale transaction sets trustcommerce supports american express corpora te purchase card none optional charge descriptors important trustcommerce supports purchase level ii level iii transactions variety processing platforms however specific fields available required highly de pendent processing platform using please consult trustcommerce account manager solutions consultant prior attempting integrate level ii transactions purchase level ii fields field name description tax amount tax cents charged order order tax exempt may omit field set field 0 taxidentifier set localsales taxexempt indicate specific tax status order shipto zip zip code destination goods shipped field provided trustcommerce send blanks duty duty charged \\( cents \\) goods imported field provided trustcommerce send zeros ship pinghandling total freight amount order cents \\( including handling \\) field must populated numbers input results badformat error field provided trustcommerce send zeros tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 57 purchase level ii common responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values include approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details authcode nume ric alphanumeric code received processor response transaction value provided sale transaction approved merchant configured response avs avs response code returned address verification system \\( avs \\) transaction verify parameter \\( verify \\) included request see appendix b address verification system \\( avs \\) response codes commercialcard indicator specifies whether card purchase corporate business card returned purchasing card r corporate card b business card purchase level ii transaction example sale following example purchase level ii sale transaction tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle cc 4111111111111111 \\) tclinkpushparam \\( handle exp 0412 \\) tclinkpushparam \\( handle amount 1000 \\) tclinkpushparam \\( handle name john smith \\) tclinkpushparam \\( handle purchaselevel 2 \\) tclinkpushparam \\( handle purchaseordernum 12345678901234567 \\) tclinkpushparam \\( handle taxidentifier localsales \\) tclinkpushparam \\( handle tax 100 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 58 purchase level ii transaction example postauth applicable send tax purchaselevel taxidentifier purchaseordernum shipto zip information postauth transaction following example postauth transaction including purchase level ii fields tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action postauth \\) tclinkpushparam \\( handle transid 012 1234567890 \\) tclinkpushparam \\( handle purchaselevel 2 \\) tclinkpushparam \\( handle taxidentifier localsales \\) tclinkpushparam \\( handle tax 100 \\) tclinkpushparam \\( handle shipto zip 92606 \\) purchase level iii purchase level iii transactions essentially level ii transactions additional data elements data elements help cardholder 's business identify items purchased provide information order whole trustcommerce supports purchase level iii transactions variety processing platforms however specific fields available required highly dependent processing platform using appropriate data submitted transaction may clear fyi issuers support fields data elements may change merchant bank merchant bank check merchant bank correct data element mapping trustcommerce supports following items purchase level iii transactions non travel entertainment non fleet transactions specific providers data elements level ii level iii \\( ii line item data \\) transactions limited preauth postauth configuration f ull support use sale transaction sets trustcommerce supports american express corporate purchase card none opt ional charge descriptors purchase level iii integration important please consult trustcommerce account manager solutions consultant attempting integrate level iii transactions additional information business required tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 59 additional fields may defined needed process orders outside u acquiring bank may additional requirements level iii transactions purchase level iii fields visa level iii transactions may contain following information bout order whole field name description purchaselevel must specified 3 vatnum vat registration number associated customer field provided trustcommerce send blank spaces commoditycode commodity code assigned acquiring bank field provided trustcommerce send 7472 discount total discount amount order \\( cents \\) field provided trustcommerce send zeros direct sum discount items provided individually shippinghandling total freight amount order cents \\( including handling \\) field provided trustcommerce send zeros duty duty charged \\( cents \\) goods imported field provided trustcommerce send zeros shipto zip zip code destination goods shipped field provided trustcommerce send blanks numitems field used indicate number line item details associated order mandatory line item data submi tted used determine many available 99 line items supported amount level iii transactions represents sum total entire transaction value equal tax shippinghandling sum \\( price quantity \\) tax total tax amount order \\( cents \\) field provided trustcommerce send zeros direct sum tax items provided individually purchaseordernum purchase order number visa purchasing card either 16 17 digit number non visa card used pass field taxidentifier set localsales taxexempt indicate specific tax status order tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 60 line item data additional input fields included define individual line items order hash mark pound sign \\( \\) following field names replaced list item number example referring second item would replace 2 provide data accordingly tc link supports 999 distinct line items differentiated line item number scheme line item data may submitted visa level iii transactions follows table bel ow purchase level iii line item data field name description productcode product code sku item question price unit price sku item question discount discount amount cents discount applicable single sku product code regardless number items quantity number units ordered productdescription description product question product description must keyed follows first 12 characters product description represent item commodity code item commodity code visa specific field iso value assigned given product contact acquiring bank information field contain commodity l ist codes referenced commodity code listing insufficient number characters less 12 space fill remaining characters remaining 35 characters product description represent item descriptor must submitte non blank data unitofmeasures type measurement used respect product code example products might sold cases six individually hence merchant might define case respectively unit measure field capitalized tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 61 purchase level iii common responses following table demonstrates common fields values returned purchase level iii transaction request comprehensive list refer transaction responses fyi processor supp ort commercialcard identifier return trustcommerce return commercialcard identifier please submit data every transaction avoid non compliance fees potential discount rate downgrades field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values include approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details authcode numeric alphanumeric code received processor response transaction value provided sale transaction approved merchant configured response avs avs response code returned address verification system \\( avs \\) transaction verify parameter \\( verify \\) included request see appendix b address verification system \\( avs \\) response codes commercialcard indicator specifies whether card purchase corporate business card returned purchasing card r corporate card b business card tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 62 purchase level iii transaction example following example send purchase level iii sale transaction tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle cc 4111111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle amount 2000 \\) tclinkpushparam \\( handle purchaselevel 3 \\) tclinkpushparam \\( handle tax 120 \\) tclinkpushparam \\( handle discount 200 \\) tclinkpushparam \\( handle zip 90000 \\) tclinkpushparam \\( handle vatnum 123 \\) tclinkpushparam \\( handle cvv 999 \\) tclinkpushparam \\( handle shippinghandling 300 \\) tclinkpushparam \\( handle numitems 2 \\) tclinkpushparam \\( handle purchaseordernum 1234567 \\) tclinkpushparam \\( handle productcode1 p003 \\) tclinkpushparam \\( handle price1 300 \\) tclinkpushparam \\( handle discount1 050 \\) tclinkpushparam \\( handle quantity1 2 \\) tclinkpushparam \\( handle productdescription1 20966 pinpad \\) tclinkpushparam \\( handle unitofmeasure1 \\) tclinkpushparam \\( handle productcode2 t300010 \\) tclinkpushparam \\( handle price2 455 \\) tclinkpushparam \\( handle discount2 045 \\) tclinkpushparam \\( handle quantity2 1 \\) tclinkpushparam \\( handle productdescription2 20693 terminal \\) tclinkpushparam \\( handle unitofmeasure2 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 63 inventory information approval system \\( iias \\) trustcommerce processing platform supports inventory information approval system \\( iias \\) transactions healthcare applications iias available merchants registered special interest group iias standards \\( sigis \\) using sigis approved inventory management system merchants registered sigis 90 rule program requir ed submit additional fields processing platforms support functionality please check account manager trustcommerce solutions consultant information fyi please refer iias transaction rule set \\( available download tc vault \\) specific code samples developer notes iias transaction fields following fields available submitting iias transactions field name required description iias transaction indicates submitting iias eligible transaction iias lookup indicates want trustcommerce qualify eligibility card number provided partialauth n default trustcommerce submits transaction software supports partialauth transactions software cannot accept partial payments submit flag n marketindicator submit value identify transaction healthcare specific additionalamount1 indicates portion amount total althcare eligible see section formatting details additionalamount2 indicates portion amount total prescription see section formatting details iias transaction indicates submitting iias eligible transaction iias lookup indicates want trustcommerce qualify eligibility card number provided partialauth n default trustcommerce submits transaction software supports partialauth transactions software cannot accept partial payments submit flag n tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 64 healthcare eligible prescription amount fields healthcare prescription amounts field values must formatted used specific way transa ction 20 character fixed length strings prefix indicating value type followed amount cents healthcare amount prefix 004s840c followed 12 digit zero padded integer value representing amount cents healthcare amount field 10 00 submitted 004s840c000000001000 prescription amount prefix 004u840c followed 12 digit zero padded integer value representing amount cents prescription amount field 10 00 shoul submitted 004u840c000000001000 iias sale transaction examples example following example iias sale transaction iias data included integrator performing bin lookup prior submitting transacti total transaction amount 25 67 \\( amount \\) 18 23 healthcare eligible \\( additionalamount1 \\) 15 99 designated prescriptions \\( additionalamount2 \\) tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle cc 4111111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle amount 2567 \\) tclinkpushparam \\( handle iias transaction \\) tclinkpushparam \\( handle iias lookup n \\) tclinkpushparam \\( handle marketindicator \\) tclinkpushparam \\( handle partialauth n \\) tclinkpushparam \\( handle additionalamount1 004s840c000000001823 \\) tclinkpushparam \\( handle additionalamount2 004u840c000000001599 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 65 example ii example total healthcare eligible amount authorized amounts could happen card restricted healthcare eligible costs tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action preauth \\) tclinkpushparam \\( handle cc 4111111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle amount 22789 \\) tclinkpushparam \\( handle iias transaction \\) tclinkpushparam \\( handle iias lookup \\) tclinkpushparam \\( handle marketindicator \\) tclinkpushparam \\( handle partialauth \\) tclinkpushparam \\( handle additionalamount1 004s840c000000019753 \\) tclinkpushparam \\( handle additionalamount2 004u840c000000004784 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 66 example iii following example encompasses several actual transactions demonstrating partialauth capability example requested application perform bin lookup part transaction processing partialauth allowed total transaction 227 89 amount 197 53 healthcare eligible amount 47 84 directly prescriptions tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action preauth \\) tclinkpushparam \\( handle cc 4111111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle amount 22789 \\) tclinkpushparam \\( handle iias transaction \\) tclinkpushparam \\( handle iias lookup \\) tclinkpushparam \\( handle marketindicator \\) tclinkpushparam \\( handle partialauth \\) tclinkpushparam \\( handle additionalamount1 004s840c000000019753 \\) tclinkpushparam \\( handle additionalamount1 004u840c000000004784 \\) example iv example total healthcare eligible amount \\( 197 53 \\) authorized amounts could happen card restricted healthcare eligible costs response fields would look like response field response fie ld transaction examples status approved authcode 123456 transid 011 1234567890 partialamount 19753 tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 67 iias reversal transaction example point depending merchant business rules may choose either following reverse transid 011 1234567890 cancel entire transaction get information another card accept non healthcare charges submit another transaction difference reversal transaction would simply tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action reversal \\) tclinkpushparam \\( handle transid 012 1234567890 \\) iias partial authorization response field iias transactions return partial authorizations account configured support reason partialamount field returned iias transactions indicate partial amount authorization response field name descr iption partialamount represents amount cents authorized amount returned partialauth field set transaction definition equal amount field transaction fully authorized response iias transaction partialamount field returned would look like response field response field value examples status approved authcode 123456 transid 011 1234567890 partialamount 19753 tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 68 recurring installment payments \\( non tc citadel \\) merchants initiate recurring installment payments outside tc citadel system must send fields represent transactions part previously established recurring installment payment plan transactions paymentnumber field marked recurring transactions fields sent installment payments sale transactions support indicator addition fields recommend submit address verification system \\( avs \\) data first transaction whenever cardholder changes address records recurring installment fields field name description paymentnumber field payment number associated transaction required recurring installment payment transactions required transaction flagged recurring totalpayments field indicates number installments required install ment payment transactions recurring installment common responses following table demonstrates common fields values returned recurring installment transaction request comprehensive list see transaction responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values include approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details authcode numeric alphanumeric code received processor response transaction value provided sale transaction approved merchant configured response avs avs response code returned address verification system \\( avs \\) transaction verify parameter \\( verify \\) included request see avs response codes tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 69 submitting recurring installment payment following example installment payment transaction first three payments 15 00 tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle cc 4111111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle amount 1500 \\) tclinkpushparam \\( handle address1 123 anywhere st \\) tclinkpushparam \\( handle zip 90210 \\) tclinkpushparam \\( handle paymentnumber 1 \\) tclinkpushparam \\( handle totalpayments 3 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 70 restaurant \\( tip \\) transactions processed restaurant environment may want use optional tip \\( gratuity \\) field tip field allows integrator designate much transaction went towards gratuity tip may also supplied sale restaurant fields field name description tip amount tip \\( cents \\) included postauth request \\( example 1 00 would submitted 100 \\) restaurant transaction example restaurant environment tips provided tip parameter submitted postauth transaction following example transaction tip shows authorization 15 00 added tip customer amount 2 00 total dollar amount 17 00 initial preauth tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action preauth \\) tclinkpushparam \\( handle track2 4111111111111111 07120000000000000000 \\? \\) tclinkpushparam \\( handle amount 1500 \\) postauth tip tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action postauth \\) tclinkpushparam \\( handle transid 012 1234567890 \\) tclinkpushparam \\( handle tip 200 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 71 tc citadel tc citadel trustcommerce multi use tokenization product tc citadel allows merchants defer risks costs pan retention trustcommerce merchants submit request store payment account detail receive billingid billingid token used pan replacement future one time subscription payments derived pan stored merchant plain text billingid access controlled used merchant created tc citadel fields following fields unique creating updating billingids field name description action store verify n applicable non ach transactions field set verify transaction submitted using card information provided determine card valid card verification transaction supported acquiring bank return unspecified 1 00 preauth run card determine validity cycle w time interval transactions processed days weeks w months years trustcommerce supports numbers 1 99 require leading zero start yyyy mm dd date offset current date transactions start occurring start date provided start date presumed day billingid record created valid offset constraints cycle field payments number payments make billingid record default field set 0 indicate billingid requested either recurring store authnow n field determines whether trustcommerce attempt authorization immediately amount specified trustcommerce perform authorization amount specified attempt capture \\( postauth \\) day specified start field lastpaymentunstore n field determines whether trustcommerce unstore installment billingid record payments made default field set tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 72 field name description tells us perform unstore firstamount used first payment recurring installment payment different regular payment lastamount used final payment installment payment different gular payment creating billing id following example use tc citadel purpose storing customer payment account information tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action store \\) tclinkpushparam \\( handle name john smith \\) tclinkpushparam \\( handle cc 4111111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle zip 90000 \\) tc citadel responses following table demonstrates common fields values returned store transaction request comprehensive list see transaction responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values include approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details billingid six character alphanumeric token used reference customer payment card ach information future one time recurring installment transactions tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 73 verifying billing id integrators able verify card stored tc citadel valid include verify parameter initial store request following example store request verify performs store card number 4111111111111111 expiration date december 2015 verify transaction also run validate card formation tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action store \\) tclinkpushparam \\( handle cc 4111111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle verify \\) response field status returned decline declinetype field also included see decline type fields details verify common responses following table demonstrates common fields values returned verify request comprehensive list see transaction responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values nclude approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details avs avs response code returned address verificat ion system \\( avs \\) transaction verify parameter \\( verify \\) included request please see appendix b address verification system \\( avs \\) response codes billingid six character alphanumeric token used reference customer payment card ach information future one time recurring installment transactions tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 74 unstoring billing id action type unstore removes access existing billingid maintain integrity existing transactions data deleted however use billingid transactions permanently disabled following minimum required fields un store billingid tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action unstore \\) tclinkpushparam \\( handle billingid b12345 \\) unstore common responses following table demonstrates common fields values returned unstore request comprehensive list see transaction responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values nclude approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 75 updating billing id sometimes necessary update cardholder information stored billingid card expires update similar original store action except billingid included along information upd ated two fields highlighted reflect information changed billingid billingid updates common responses following table demonstrates common fields values returned billingid update request field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values include approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details request message \\( required field \\) custid 1008000 password xxxxxxxx action store billingid abc123 cc 4111111111111012 exp 1217 response trustcommerce transid 012 1234567890 status accepted tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 76 shared access billingids shared access billingids \\( multi use tokens \\) tc link api feature available trustcommerce enterprise clients functionality useful customer one stored billingid wishes make payments multiple custids also provides enterprise client distin ct reporting data custids shared access billingids allows custid reference billingid another custid accomplish custid password used originally create billingid used authenticate bil lingid important note following live controller account cannot used store billingids one custid cannot store unstore billingid another custid example scenario cardholder payments due physician h ospital hospital pharmacy payees custid cardholder able initiate payment enterprise client interface individual payees using payment information securely stored l inked unique billingid sale transaction existing billingid process sale transaction stored billingid must include custid billingid stored \\( 1008000 \\) well custid account process transaction \\( 1008001 \\) transaction status related information reported custid 1008001 request message \\( required field \\) master custid 1008000 master password xxxxxxxx custid 1008001 password xxxxxxxx action sale amount 1000 billingid abc123 name john doe address1 123 main city anywhere state ca resp onse trustcommerce transid 012 1234567890 status approved authcode 123456 avs tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 77 continuity payments recurring installment deferred integrators want implement tc citadel recurring billing engine extension use continuity payments feature \\( recurring installment deferred \\) feature provides ability set repetitive billing cycles without known end date addition relieves integrator responsibility managing recurring transactions throu gh application tc citadel provides three classifications continuity payments recurring payments recurring payments end date payments continue run card longer valid billingid deactivated installment paym ents installment payments used regularly scheduled payments known end date known number payments processed deferred payments deferred payments generally structured commencing installment payments begi n specified future date continue payment \\( \\) completed example following example recurring payment setup absence payments field indicates recurring payment setup run indefinitely tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action store \\) tclinkpushparam \\( handle cc 4111111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle amount 500 \\) tclinkpushparam \\( handle name john smith \\) tclinkpushparam \\( handle address1 321 main st \\) tclinkpushparam \\( handle verify \\) tclinkpushparam \\( handle cycle 1m \\) tclinkpushparam \\( handle start 3d \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 78 continuity payments common responses following table demonstrates common fields values returned continuity transaction request comprehensive list refer transaction responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values include approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details authcode numeric alphanumeric code received processor response transaction value provided sale transaction approved merchant configured response avs avs response code returned address verification system \\( avs \\) transaction verify parameter \\( verify \\) included request please see appendix b address verification system \\( avs \\) response codes tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 79 one time subscription ransactions occasionally tc citadel recurring billing engine may unable process continuity payment due decline response occurs one time subscription transaction may run billingid collect outstanding ubscription amount following example one time subscription transaction using billingid tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle billingid b12345 \\) tclinkpushparam \\( handle amount 5000 \\) tclinkpushparam \\( handle name john smith \\) tclinkpushparam \\( handle cyclepayment \\) tclinkpushparam \\( handle paymentnumber 3 \\) one time subscription payments common responses following table demonstrates common fields values returned one time subscription transaction request comprehensive list refer transact ion responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values include approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details authcode numeric alphanumeric code received processor response transaction value provided sale transaction approved merchant configured response avs avs response code returned address verifi cation system \\( avs \\) transaction verify parameter \\( verify \\) included request please see appendix b address verification system \\( avs \\) response codes tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 80 one time payment mentioned tc citad el allows billingid used process one time transaction later ideal integrators want manage recurring payments application cases billingid field included substitute payme nt card ach information following example one time sale transaction using billingid tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle billingid b12345 \\) tclinkpushparam \\( handle amount 1000 \\) one time payments common responses following table demonstrates common fields values returned one time transaction request comprehensive list refer transaction responses field name description transid transid 14 character unique identifier assigned transaction regardless status composed 13 numbers 1 hyphen formatted follows 123 1234567890 status status indicator transaction request possible values nclude approved transaction successfully authorized declined transaction declined see decline type fields details baddata invalid fields passed see error type details error system error processing transaction see error type details authcode numeric alphanumeric code received processor response transaction value provided sale transaction approved merchant configured response avs avs response code returned address verification system \\( avs \\) transaction verify parameter \\( verify \\) included request please see appendix b address verification system \\( avs \\) response co des tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 81 fraud score fraud score represents evaluation legitimate fraudulent transaction appears fraud score close 0 means transaction likely fraudulent fraud score close 100 means transa ction likely legitimate may want handle score result implement logic treats certain range low scores outright declines high range approvals middle range accepted pending pr ocessing last category transactions could set aside local database trigger email designated person department review transaction follow necessary please see tc vault user guide details sist fraud prevention tc crediguard enabled return fields transaction contain additional field calculated fraud score field name description fraudscore actual numeric score \\( 0 100 \\) assigned tc crediguard transaction fraud threshold tc crediguard enabled fraud threshold assigned transaction based appearance fraud legitimacy field name description fraudthreshold fraud threshold current transaction transaction receives fraud score threshold declined default value defined tc vault tc crediguard settings submitted via tc link significant business reason verride specified default value account value optional using fraudthreshold following example sale transaction using fraudthreshold field tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle cc 411111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle amount 1299 \\) tclinkpushparam \\( handle fraudthreshold 45 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 82 fraudth reshold returned values field name description status decline declinetype fraud fraudscore 32 tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 83 blacklists tc crediguard blacklists used detect block specific cardholder information know fraudulent blacklist input fields submitted via tc link blacklist rules configured within tc vault web interface apply transactions account configured use tc crediguard blacklists change tc link integrators need aware possible additional return fields fyi refer tc vault user guide details use configuration blacklists handling blacklist responses transaction declined matches blacklist rule reason decline returned following fields field name description blacklistfield name input field contained blacklisted value one following name cc ach zip address1 state country email phone ip blacklistvalue input value triggered blacklist decline instance decline due blacklisted ip address offending ip address would returned tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 84 velocity velocity rules used restrict transactions certain repeated values indicating may fraudulent velocity input fields submitted via tc link velocity rules configured within tc vault web interface apply transactions acco unt configured use tc crediguard velocity rules change tc link integrators need aware possible additional return fields fyi please refer tc vault user guide details use configuration velo city rules velocity fields transaction declined violates velocity rule reason returned fields described following table field name description velocitytype brief string contains precise reason velocity decline first part string contains velocity type either global zip ip cc second part string contains time period either 1day 3day 15day 30day third part string contains indicator type violation count transaction count velocity type time period exceeded total dollar amount sum exceeded velocityvalue value exceeded velocity rule example rule limit cc usage would set last four digits credit card number velocity transaction example following example demonstrates sale transaction exceeds v elocity rule regarding count transactions single card single day tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle cc 411111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle amount 500 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 85 velocity returned values field name description status decline declinetype velocity velocitytype cc1daycount tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 86 address verification system \\( avs \\) address verification system used verify address customer presenting payment card avs system checks billing address numeric part street address zip code payment card provided user address file card fraud tool supported preauth sale store verify card transactions avs parameter tells trustcommerce whether issue soft declines based avs result code card issuing bank cases card issuing banks give approval even though avs information provided match values file cases trustcommerce optionally provide response indicates decline avs cardhol ders may receive false negatives avs e commerce verification systems may require manual overrides voice authorization reprogramming avs entries card issuing bank fyi trustcommerce strongly recommends integrator encounter card swipe problems \\( example unable read track data \\) process mail order telephone order \\( moto \\) e commerce transactions submit avs data avs field field name description avs n included n assumed using avs following example sends address 123 main st zip code 926148561 card issuer validation part sale transaction addresses number part street name numeric form sent example send one hundred twenty three main st 123 main st tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle cc 4111111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle avs \\) tclinkpushparam \\( handle amount 5000 \\) tclinkpushparam \\( handle address1 123 main st \\) tclinkpushparam \\( handle zip 926148561 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 87 handling avs return codes payment card issuer trustcommerce determines avs response codes avs responses serve guideline fo r integrator make business decision whether process card trustcommerce decline match response integrator responsible decisions based return values use response code det ermine appropriate business logic particular business example shipping physical product avs response code n might choose ship product investigate please see appendix b address verification system \\( avs \\) response codes list avs response codes tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 88 card security code \\( csc \\) visa mastercard discover american express implement additional security feature known card security code \\( csc \\) csc three four digit value printed card signature strip encoded magnetic stripe generally accepted best practice send data card present codes different names unique brand follows visa cvv2 \\( card verification value \\) mastercard cvc2 \\( card validation code \\) discover cid \\( card identification number \\) american express cid unique card code data \\( appropriate indicator u navailable \\) sent non swiped transactions cases non compliance fees may assessed information submitted trustcommerce attempt send response available cases response may space \\( n indicate anything \\) cvv field important pci compliance security reasons never store save csc value temporary files card security code fields field name description cvv three four character field located front back card visa mastercard discover three character field located back card far right american express four character value located front card primary account number cvvstatus field assigned cvv field submitted possible values include present notpresent illegible default treated notpresent although processors may treat otherwise field submitted integrator present value states integrator provide card code stated even though present notpresent value states integrator see card code illegible value states integrator could read card code cases field used csc submitted submitting csc merchant stating csc present th e value cvv indicated used cvv provided checkcvv n default set determines whether trustcommerce decline transaction behalf integrator csc match reported card issuing bank used cvv provided tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 89 using card security codes \\( csc \\) following example sends sale transaction including cvv value 123 tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle cc 411111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle amount 1299 \\) tclinkpushparam \\( handle cvv 123 \\) following example sends sale transaction cvv present tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle cc 411111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle amount 1299 \\) tclinkpushparam \\( handle cvvstatus notpresent \\) handling cvv response codes cvv response field result code included transaction response cvv input field included following table details possible response co des cvv result code meaning implementation comments cvv2 cvc2 discover cid match none n cvv2 cvc2 discover cid match none p processed data forwarded issuer acknowledgement cvv2 cvc2 cid sent would happen cvvstatus set notpresent u issuer support field none tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 90 discretionary fields important discretionary custom ticket fields intended used pci pi phi sensitive data use fields stated purpose enter transmit sensitive data appropriate fields described within trustcommerce guides specifications ticket operator fields ticket operator fields described following table optional fields associated transaction built tc link use internal custom field number format field name description ticket ticket discretionary field used merchant specified transaction identifier searching reporting cases value field passed financial institutions operator field integrator may choose use multiple operators potentially entering transactions operator field used reporting within trustcommerce systems tc transaction custom fields tc vault allows merchants create custom fields fields assigned names data types specific business operation part definition custom field associated internal custom field number enter values fo r custom fields using tc link integrator must use internal custom field number rather name displayed tc vault example customfield field name description customfield defined tc vault custom field number example sale transaction includes custom fields might look like following tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle cc 411111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle name test person \\) tclinkpushparam \\( handle customfield5 n123456 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 91 tc citadel custom fields similar c ustom fields tc citadel offers billingid custom fields interface tc link similar instead referencing customfield tc citadel trustcommerce refers bcustomfield enter values billingid custom fie lds using tc link integrator must use internal custom field number rather name displayed tc citadel one additional field required tc citadel custom field entry via tc link value indicate specific list tc c itadel custom field definitions follow specific tc citadel custom field definitions must created tc vault tc citadel custom field references example demonstrates use previously created existing tc citadel custom f ields field name description bcustomfieldlist comma separated list tc citadel custom field ids included transaction bcustomfield defined tc citadel billingid custom field 1 following example store action new billingid includes specification tc citadel custom fields tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action store \\) tclinkpushparam \\( handle cc 411111111111111 \\) tclinkpushparam \\( handle exp 1215 \\) tclinkpushparam \\( handle name test person \\) tclinkpushparam \\( handle bcustomfieldlist 1 3 5 \\) tclinkpushparam \\( handle bcustomfield1 n123456 \\) tclinkpushparam \\( handle bcustomfield3 abcdef \\) tclinkpushparam \\( handle bcustomfield5 1275 \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 92 query api query api provides integrators way request transaction data trustcommerce data may clude single transaction large quantities data input field value pairs similar definition transactions previous methods however query api search filters instead transaction definitions four types queries performed chain summary transaction billingid \\( see query types \\) similar behavior reports generated tc vault query api returns data three formats csv html r xml type specified using format field run one report time obtain summary chain report need execute query twice summary chain report cases document tc link password used however query api uses tc vault password best practice depending system conditions query api requests may pick transactions immediately best results trustcomme rce recommends schedule automated process pull transactions immediately end time window example creating tool pull transactions daily basis 10 00 p one day 10 00 p next day schedule job run 10 15 p later ensure transactions fully processed report runs tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 93 email receipts merchants set accounts email receipts cardholders successful sale pre auth credit2 \\( standalone credit \\) transactions configure email receipts settings tc vault using functionality tc link api email receipts tab tc vault accessible level 40 users \\( controller \\) fyi actions currently supported email receipts feature sale preauth credit2 \\( standalone \\) see tc vault user guide email receipts topic information setting functionality tc link api request use email recei pt field \\( emailreceipt n \\) email field \\( example email abc abc com \\) send email receipts tc link tc batch transactions value emailreceipt trustcommerce sends email receipt provided cardholder email addr ess successful sale preauth credit2 \\( standalone credit \\) transaction processed single well formatted email address \\( example abc abc com \\) must provided email field value emailreceipt n email receipt sent provided email address field name type minimum characters maximum characters possible values emailreceipt boolean 1 1 n sale transaction example following example demonstrates sale requesting 1 25 reserved payment card 4111111111111111 expiring december 2015 tclinkpushparam \\( handle custid 962100 \\) tclinkpushparam \\( handle password xxxxxx \\) tclinkpushparam \\( handle action sale \\) tclinkpushparam \\( handle amount 125 \\) tclinkpushparam \\( handle cc 411111111111111 \\) tclinkpushparam \\( handle emailreceipt \\) tclinkpushparam \\( handle email john smith mail com \\) tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 94 tc link api receipt status value emailreceipt tc link api returns status value indicating result email receipt attempt email receipt status field batch results file field name type possible values receiptstatus string accepted emailmissing malformattedemail actionnotsupported noteligibleforemailing receipt status values defined follows accepted indicates email receipt request passed initial validation trustcommerce attempt email receipt provided email address emailmissing indicates email address provided transaction malformattedemail indicates provided email address formatted incorrectly actionnotsupported indicates emailing receipt supported transa ction type \\( emailing receipts supported action void action postauth action credit \\) noteligibleforemailing indicates email receipt sent transaction declined error occurred tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 95 https post query types query ty pe comparable tc vault reports chain tc vault user request chain report report contains single record summarizing transactions related one transaction \\( example postauth associated preauth credit associated sale \\) individual transaction chain meets search criteria chain included chain report transaction tc vault user request transaction report report contains specific details transaction meets search criteria summary tc vault user request summary report report summarizes transactions meeting search criteria billingid tc citadel user request billingid report report displays information billingids meeting search criteria tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 96 https post query fields following table describes required optional fields used build query field possible values format required description custid trustcommerce customer id \\( custid \\) number password tc vault password querytype chain transaction summary billingid response corresponding equivalent reports tc vault website format text html xml n set text \\( default \\) csv text output html html format xml xml format media cc ach n filters results based media type begindate mm dd yyyy hh mm ss n filters results based beginning date included enddate mm dd yyyy hh mm ss n filters results based ending date included chain n filters results specified chain id transid 012 0123456778 n filters results specified transaction id billingid abc123 n filters results include transactions referencing specified billingid pastdue n n querytype billingid reports filters results include billingids flagged pastdue action preauth sale credit n filters results transactions referencing specified action status approved accepted decline n filters results transaction reporting specified status name value n filters results transactions referencing specified cardholder name includes partial matches cc cardholder primary account number \\( pan \\) n filters results transactions referencing specified cc either full credit card number last four digits tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 97 field possible values format required description ticket value n filters results transactions referencing specified ticket field value limit number n field specifies maximum number records return works conjunction offset field allow integrator page thro ugh results instead returning large quantities data offset number n field specifies starting point records returned works conjunction offset field allow integrator page results instead returning large quantities data showcount yes n request total record count included additional record end results set query api tc vault example sample html code shown illustrates functionality query api pasted file loaded web browser want try queries begin write code html head title trustcommerce query interface title head body h2 trustcommerce query interface h2 form action https vault trustcommerce com query table align center border 1 tr td custid td td input type text name custid td td trustcommerce custid \\( required \\) td tr tr td password td td input type password name password td td trustcommerce password \\( required \\) td tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 98 tr tr td format td td select name format option value text text option option value html html option select td td human readable \\( html \\) computer readable \\( text \\) results td tr tr td query type td td select name querytype option value chain chain option option value transaction transaction option option value summary summary option option value billingid billingid option select td td type query td tr tr td media td td input type text name media value cc td td must cc td tr tr td begindate mm dd yyyy hh mm ss td td input type text name begindate td td query begins date td tr tr td enddate mm dd yyyy hh mm ss td td input type text name enddate td td query ends date td tr tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 99 tr td chain td td input type text name chain td td narrow search single chain transactions td tr tr td transid td td input type text name transid td td narrow search single transactions td tr tr td billingid td td input type text name billingid td td narrow search single billingid td tr tr td pastdue td td select name pastdue option value option option value n n option select td td use n billingid search show recurring billingids unable capture requested funds td tr tr td action td td input type text name action td td narrow search action \\( example preauth postauth \\) td tr tr td status td tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 100 td input type text name status td td narrow search status \\( example approved accepted \\) td tr tr td name td td input type text name name td td narrow search name td tr tr td cc td td input type text name cc td td narrow search credit card field td tr tr td limit td td input type text name limit value 20 td td limit results number fields \\( used summary \\) td tr tr td offset td td input type text name offset value 0 td td report results offset \\( used limit page results \\) td tr tr td showcount td td select name showcount option value yes option option value n option select td td show number limited rows last line result td tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 101 tr tr td colspan 3 input type submit td tr table form body html tc vault query api transaction id example following example demonstrates send receive chain report specified transaction http vault trustcommerce com query \\? custid 911111 password xxxxxx querytype chain transid 024 0106430891 enterprise example enterprise account controller id sub custids pull records multiple custids sending single query controller id setup previous tc vault example could also specified important referenced controller custid must control custids specified range password defined must controller custid format comma delimited list first format comma delimited list custids specified custid field controller custid must th e first custid list unlimited list sub custids included sub custids must defined controlled referenced controller id custid 12340 controller custids 12341 12342 12343 defined controlled custid request transactions custids could obtained specifying custid field shown custid 12340 12341 12342 12343 tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 102 format ii range custids second format allows specification range format controller custid specified first followe range custids range specified start custid followed followed end custid custid 12340 12341 12343 tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 103 tc batch trustcommerce batch processing \\( tc batch \\) service allows submission large number transactions single file offline processing file contain mixture transaction types \\( example preauth postauth cre dits sale stores unstores \\) able use tc citadel billingids ach routing numbers payment card information identify account charged fyi multiple custids may used batch file long transaction contains custid password account transaction processed batch file format format submitting batch files simple csv file first row file contains various field names described previously tc link transactions order columns arbitrary need include columns providing data subsequent rows represent individual transactions blank value transaction row equivalent submitti ng field positive identifiers record required \\( invoice number \\) include identifier ticket field input file value echoed back ticket field results file sample batc h upload file might look like ticket action cc exp amount name email 01 1224 sale 4111111111111111 0404 999 test person person example com 00 1175 preauth 4111111111111111 0404 333 test person person example com fyi field found appendix fields list guide included batch processing tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 104 naming conventions required naming convention transaction file trustcommerce recommends following recommended syntax description batch custid mmddyy x txt input file containing list transactions processed custid numeric trustcommerce custid mmddyy numeric date associated particular batch x optional alpha identifier distinguish multiple batches sent one day result file name txt file contains response record transaction record sent batch batch submission batches transactions uploaded automatically using https post posting file trustcommerce batch processing system method post call enable root direct access servers simply send batch file standard https post cgi parameters url encod ed https post processing done encrypted url https batch trustcommerce com submit php form data posted trustcommerce url encoded custid xxxxxx password ppppp file batch file curl example example might work curl follows curl f custid x f password p f file batchfile txt https batch trustcommerce com submit php batch file uploaded successfully p href https batch trustcommerce com list php view batch results tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 105 batch upload interface example sample html code illustrates functionality batch processing service invocation tc link paste sample file load web browser experiment batch processing fyi client requires batch responses certain format best query fields source response document assume header information always stay response file h2 trustcommerce batch upload interface h2 form action https batch trustcommerce com submit php method post enctype multipart form data table align center border 1 tr td custid td td input type text name custid td td trustcommerce custid \\( required \\) td tr tr td password td td input type password name password td td trustcommerce password \\( required \\) td tr tr td batch file td td input name file type file td td batch file upload \\( required \\) td tr tr td colspan 3 input type submit td tr table form body html tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 106 batch response response file contains one response record uploaded transaction record results file downloaded tc vault invoking language https post function pointed https batch trustcommerce com download php sample response file might look like ticket status transid billingid declinetype errortype offenders avs 01 1224 approved 010 0001364786 n 00 1175 approved 010 0001364785 n batch results download interface example html head title trustcommerce batch results download interface title head body h2 trustcommerce batch results download interface h2 form action https batch trustcommerce com download php method post table align center border 1 tr td custid td td input type text name custid td td trustcommerce custid \\( required \\) td tr tr td password td td input type password name password td td trustcommerce password \\( required \\) td tr tr td result file name td td input name file type text td td result file name download \\( required \\) td tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 107 tr tr td colspan 3 input type submit td tr table form body html batch status email primary means used batch processing service provide status updates please contact account manager trustcommerce client services \\( 800 \\) 915 1680 option 3 request email address added distribution list file uploaded system r esponds immediately acknowledged message followed email providing processing statistics including number records found file email subject look like subject batch file file name picked pro cessing completed second email sent body email contains relevant information including number approvals declines accepts settlements email subject time look like subject batch file file name comp lete tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 108 https post unable install tc link software still process trustcommerce processing platform using https post method post call enable root direct access trustcommerce servers transaction sent standard https post cgi parameters url encoded fields otherwise identical used tc link api processing https post done via encrypted url https vault trustcommerce com trans \\? form data post trustcommerce url encoded text equal sign name field text equal sign value field pair fiel name field value separated ampersand \\( \\) symbol custid xxxxxx password ppppp action sale amount 100 cc 4111111111111111 people use sort software library perform actual transaction \\( example curl net webrequest \\) integrate application library able call software externally order use following curl example text equal sign name field text equal sign va lue field pair field name field value separated unix newline curl custid x action sale https vault trustcommerce com trans offenders password amount cc exp error missingfields status baddata tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 109 tc trustee api tc trustee api transparent web application pass allows merchants process payments directly website without ever handling sensitive cardholder data tc trustee api seamlessly integrates checkout process merchant shopping cart payment page online payment system customers enter payment card data form merchant web site submit payment form data seamlessly redirected trustcommerce payment gateway trustcommerce stores transmits sensitive cardholder data solution gives merchant full branding customization capabilities tc trustee api easy integrate supports language handles web processing asp net php python cases installation requires fewer 30 lines code fyi information trustcommerce products may refer documentation available downloads section tc vault interface call \\( 800 \\) 915 1680 option 2 speak trustcommerce solutions consultant tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 110 externally integrated applications tc link api open developers e commerce firms would like integrate trustcommerce services front end products several third party products including shopping carts patient management systems event management systems successfully integrated tc link api within environments accept payment applications must first acquire tc link credentials solutions consultant reference application integration please see th e documentation third party provider information integrating application product important trustcommerce control responsible compatibility performance reliability aspec third party products used conjunction trustcommerce application associated device solely responsible determining whether use third party products verify products \\( 1 \\) violate compa ny policy regarding installation use third party products \\( 2 \\) interfere company authorized software devices tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 111 appendix fields list following table provides basic validation parameters various input fields included tc link api transaction requests please see content document understand context fields used examples parameters may customized field name data type \\( length \\) service account number \\( 3 17 \\) ach action string \\( 10 \\) additionalamount string \\( 20 \\) iias address1 string \\( 80 \\) personal info address2 string \\( 80 \\) personal info amount number \\( 3 8 \\) many authnow n \\( 1 \\) tc citadel avs n \\( 1 \\) avs bcustomfield string \\( 1024 \\) tc citadel bcustomfieldlist string \\( 1024 \\) tc citadel billingid string \\( 6 \\) many cashback number \\( 12 \\) debit cc number \\( 13 16 \\) many checkcvv n \\( 1 \\) cvv city string \\( 40 \\) personal info commoditycode string \\( 4 \\) level iii country string \\( 20 \\) personal info custid string \\( 20 \\) customfield string \\( 1024 \\) cust fields cvv number \\( 3 4 \\) cvv cvvstatus string \\( 20 \\) cvv tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 112 field name data type \\( length \\) service cycle string \\( 2 4 \\) tc citadel cyclepayment n \\( 1 \\) tc citadel debitdata string \\( 52 \\) debit demo n \\( 1 \\) general discount number \\( 12 \\) level iii discount number \\( 12 \\) level iii duty number \\( 12 \\) level ii iii email string \\( 50 \\) personal info encryptedtrack string \\( 512 \\) card swipe exp number \\( 4 \\) many firstamount number \\( 3 8 \\) tc citadel fraudthreshold number \\( 2 \\) tc crediguard iias lookup n \\( 1 \\) iias iias transaction n \\( 1 \\) iias ip string \\( 7 15 \\) personal info lastamount number \\( 3 8 \\) tc citadel lastpaymentunstore n \\( 1 \\) tc citadel marketindicator string \\( 1 \\) iias media string \\( 10 \\) many name string \\( 60 \\) personal info numitems number \\( 3 \\) level iii offlineauthcode string \\( 6 \\) offline auth operator string \\( 20 \\) many tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 113 field name data type \\( length \\) service originalsaledate string \\( 14 \\) debit partialauth n \\( 1 \\) iias password string \\( 20 \\) paymentnumber number \\( 6 \\) tc citadel payments number \\( 4 \\) tc citadel phone string \\( 30 \\) personal info pin string \\( 16 36 \\) debit pinless debit n \\( 1 \\) pinless debit pinless lookup n \\( 1 \\) pinless debit price number \\( 6 \\) level iii productcode string \\( 20 \\) level iii productdescription string \\( 47 \\) level iii purchaselevel number \\( 1 \\) level ii iii purchaseordernum string \\( 17 \\) level ii iii quantity number \\( 3 \\) level iii routing number \\( 9 \\) ach savings n \\( 1 \\) ach shipdate string \\( 10 \\) ecom moto shippinghandling number \\( 3 8 \\) level iii shipto address1 string \\( 80 \\) ship info shipto address2 string \\( 80 \\) ship info shipto city string \\( 20 \\) ship info shipto country string \\( 20 \\) ship info tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 114 field name data type \\( length \\) service shipto name string \\( 60 \\) ship info shipto state string \\( 2 \\) ship info shipto zip string \\( 20 \\) ship info shiptosame n \\( 1 \\) ship info sigdata string \\( 1024 \\) signature capture sigparts number \\( 1 3 \\) signature capture start string \\( 2 10 \\) tc citadel state string \\( 20 \\) personal info surcharge number \\( 5 \\) debit tax number \\( 12 \\) level ii iii tax number \\( 6 \\) level iii taxamount number \\( 12 \\) level iii taxidentifier string \\( 12 \\) level ii iii taxidentifier string \\( 15 \\) level iii ticket string \\( 30 \\) many tip number \\( 3 8 \\) restaurant totalpayments number \\( 3 \\) tc citadel track1 string \\( 79 \\) card swipe track2 string \\( 40 \\) card swipe transid string \\( 14 \\) many type string \\( 20 \\) ecom moto unitofmeasure string \\( 12 \\) level iii vatnum string \\( 13 \\) level iii tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 115 field name data type \\( length \\) service verify n \\( 1 \\) tc citadel verify n \\( 1 \\) tc citadel zip string \\( 20 \\) personal info tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 116 appendix b avs response codes use information determine meaning address verification system \\( avs \\) response code avs code description street address matches five digit nine digit postal code match b street address matches postal code verified c street address postal code match street address postal code match code equivalent e avs data invalid avs allowed card type f card member 's name match billing postal code matches g non u issuing bank support avs h card member 's name match street address postal code match address verified j card member 's name billing address postal code match k card member 's name matches billing address billing postal code match l card member 's name billing postal code match billing address match street address postal code match code equivalent n street address postal code match card member 's name billing address match billing postal code match p postal code matches street address verified q card member 's name billing address postal code match r system unavailable bank support avs card member 's name match street address matches u address information unavailable tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 117 avs code description v card member 's name billing address billing postal code match w street address match nine digit postal code matches x street address nine digit postal code match street address five digit postal code match z street address match five digit postal code matches tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 118 updates revisions topic describes history updates revisions tc link api developer guide date version description 11 17 2016 5 3 4 updated testing application topic current discover test card number added second mastercard test number new bin range 08 04 2016 5 3 3 updated purchase level 3 per line item field items 5 18 2016 5 3 2 updated card number test card decline table number without spaces \\( copying \\) correctly matches coordinating number tabl e 5 11 2016 5 3 1 updated alphabetized appendix fields list added note email receipts topic clarify supported email receipt actions corrected example shared access billingid topic example properly display amount 1000 rather 10 00 02 26 2016 5 3 0 updated testing application topic current discover test card number updated discretionary fields topic important note regarding intended use discretionary custom icket fields added new payload sent section response field groups topic added new digital signature capture topic added sigparts sigdata appendix fields list added overview paragraph tc citadel topic describing billingids tokens added new topic shared access billingids added mportant note regarding use third party products within externally integrated applications topic added new cover page clear information classification tc link api developer guide version 5 3 4 public use 201 6 trustcommerce public use page 119 updated th roughout document current styles 09 15 2014 5 2 1 minor update email receipts topic 03 05 2014 5 2 0 added emailing receipts topic 02 19 2014 5 1 3 corrected https post topic 02 10 2014 5 1 2 corrected https post transaction url 09 15 2014 5 2 1 minor update email receipts topic 03 05 2014 5 2 0 added emailing receipts topic 02 19 2014 5 1 3 corrected https post topic 02 10 2014 5 1 2 corrected https post transaction url corrected void \\( void transaction \\) topic 09 19 2013 5 1 1 updated telephone option reach solutions consultants 05 03 2013 5 0 0 changed title document tc software developer guide tc link api developer guide updated references tc trustee merchant host developer guide reflect document 's new name tc trustee api developer guide updated sale common responses table 03 15 2013 4 0 3 updated syntax example code updating expiration date existing billingid updated url processing transaction via https post section 12 12 2012 4 0 2 added code syntax tables test cards updated typo fields list unitofmeasure 11 21 2012 4 0 1 updated headings http post clarity 09 27 20 12 4 0 0 updated expiration dates 04 12 04 19 added spaces every fourth digit test cards better readability", 
    "crawled_date": "2017-06-10T13:59:47.755821"
  }, 
  "19": {
    "link1": "http://www.daopay.com/wp-content/uploads/2017/02/API-2.0-Integration-Guide-vX.pdf", 
    "api_url": "daopay.com", 
    "progweb_url": "https://www.programmableweb.com/api/daopay", 
    "progweb_date": "03.03.2009", 
    "progweb_descr": "Daopay enables global payments, charged to the phone bill. Supports payments from mobile and landline phones and by SMS and works in over 200 countries. Our API sends you HTTP Notifications; we call your web app when you've received a payment.", 
    "api_name": "DaoPay", 
    "progweb_cat": "eCommerce,Billing", 
    "descr1": "1 5version daopay api 2 0 integration guide daopay api 2 0 integration guide2 90daopay 2 0integration guideauthors roy brichta josef florian sahadete jashari 2016 daopay gmbh rights reserved daopay registered trademark daopay gmbh trademarks belong respective owner document solely destined customers daopay information contained herein confidential neither document whole parts may given persons belonging customers company daopay website table contents1overview 51 1payment flow 61 2price jumping 81 3payment methods 81 4transaction states 101 5subscription states 121 5 1pending states 121 6contenttypes 141 7targetgroups 152technical information 152 1integration requirements 172 2visual layout 172 3sending requests 192 4receiving requests 202 5calculating signature 212 5 1request signing example 212 5 2php example 242 5 3java example 252 6testing payments 273functions 293 1create 303 1 1function parameters create 303 1 2response format create 363 2createsubscription 383 2 1function parameters createsubscription 38 3 2 2response format createsubscription 463 3cancelsubscription 483 3 1function parameters cancelsubscription 483 3 2response format cancelsubscription 503 4productdeliveryconfirmation 523 4 1function parameters productdeliveryconfirmation 523 4 2response format productdeliveryconfirmation 533 5createfuelstation 553 5 1function parameters createfuelstation 553 5 2response format createfuelstation 604payment status notifications \\( psn \\) 614 1function parameters \\( one time payments \\) 634 1 1pending 634 1 2completed 654 1 3failed 694 1 4expired 714 2function parameters \\( subscriptions \\) 734 2 1active 734 2 2inactive expired cancelled 774 3response codes psn 795additional information 795 1supported country codes 805 2supported currency codes 805 3api error codes 816clearing api 826 1introduction clearing api 836 2regular money flow 836 3chargebacks 84 6 3 1how chargebacks generated 846 3 2why chargebacks matter 846 3 3handling chargebacks 856 4technical information clearing api 876 4 1message parameters 876 4 2clearing api message example 896 4 3clearing api response codes 90 daopay api 2 0 integration guide6 901 overviewthis guide meant people charge integrating daopay products services since 's technical documentation 's assumed basic knowledge web technologies \\( http html server side programming like php \\) well daopay account application website set merchant 's portal n't daopay account yet please visit contact http www daopay com contact phpus account credentials please login https portal daopay com set application 1 1 payment flowin order enable customers make payments daopay need implement payment flow please note communication daopay use signature information signature mechanism used please look well technical information calculating signaturethe following steps happen every time customer makes payment 1 payment requestfirst need create new transaction used customer make payment need call create function \\( see details \\) createspecify payment parameters want supply individual payment price country etc detailed list available payment parameters please refer function parameters create2 request response \\( transactionid \\) payment request processed return \\( transactionid userurlerror problem request \\) detailed response format create api error codes3 forward customer daopay \\( userurl \\) userurl forward customer payment screen redirecting obtained last step userurlyour customer start payment payment screen moment customer lands payment screen finalizes payment send payment status notifications \\( psn \\) webhook \\( details please refer well \\) transaction statespayment status notifications \\( psn \\) daopay api 2 0 integration guide7 904 return pagethe payment process finalized 2 ways \\) customer made successful payment case customer taken \\( together daopayreturnurl parameters provided original request \\) transactionidb \\) customer failed make successful payment different reasons customer might able successfully finalize payment happens customer 's payment either fails aborted expires default redirect failed payments order redirect failed payments different returnurlurl please specify request failureurl daopay api 2 0 integration guide8 901 2 price jumpingby default price points match desired amount request exactly matched system since might undesirable cases offer price jumping feature price jumping set independently application merchant portal \\( portal daopay com \\) please note price jumping applies exact price request could n't matched cases \\( assuming price jumping enabled application \\) system try match prices parameters pricejumping behavior required specify pricejumping behavior information parameters please refer function parameters createexample using pricejumping 3 \\( jumping lower higher price points \\) amount 1 eur tolerance 20 would allow price jumping prices 0 80 1 20 eur 1 3 payment methodspayment methods describe different types payments made daopay currently following payment methods supported \\( details please refer website \\) payment methodsnameone offsubscriptionpaymentmethodsms1drop call2timed call3direct billing4direct debit8 daopay api 2 0 integration guide9 90nameone offsubscriptionpaymentmethodcredit card9sepa payment10paysafecard11soforbanking15ideal16przelewy2417paypal18payment groupssometimes want allow several payment methods payment request cases use payment group id instead individual payment method id parameter list currently available payment groups paymentmethodpayment group idnamedescription1002voice groupthis group includes voice payment methods \\( drop call timed call \\) 1003mobile groupthis group includes payment methods paid mobile phone \\( sms direct billing \\) fuel stationspecial case timed call final amount specified depend call duration please refer details createfuelstation daopay api 2 0 integration guide10 901 4 transaction statesa transaction one following states specific point time states \\( except state new \\) notification sent daopay webhook specified merchant state descriptionsstate namedescriptionnewthe initial state transaction remains active start billing phase fails expirespendingwith start billing phase \\( e g waiting user pay waiting tan etc \\) pending state enteredfailedthis state indicates transaction failed reason \\( e g msisdn blocked server reachable spending limit reached transaction possible \\) aborted userexpiredtransactions n't complete successfully fail time \\( see note \\) expire longer completed failcompletedafter transaction fully paid enters completed state daopay api 2 0 integration guide11 90please note send notifications order occur rare cases might receive wrong order due network delays etc therefore please make sure ignore pending notifications received corresponding completed expired notification transaction expiration datestransactions n't get finished within certain time frame expire automatically exact duration expiration depends payment method \\( see payment methodsdetails \\) transaction state cases \\( payment method id \\) newpendingdefault1 hour24 hoursvoice payments \\( 2 3 6 \\) 24 hours14 daysgreat britain \\( 4 subscriptions \\) 1 hour72 hours please note subscriptions refers subscription payments therefore great britain subscriptions direct billing payments \\( payment method id 4 \\) non default expiration daopay api 2 0 integration guide12 901 5 subscription statesplease note status notifications sent every time existing subscription enters state status notification sent state new 1 5 1 pending statespending cancellationwhen active subscription cancelled send pending cancellation status notification pending cancellation active user technically still please note valid subscription since already paid original subscription period validity subscription ends send cancelled status notification end subscription period pending inactivationbefore subscription period ends automatically try renew subscription renewal fails send pending inactivation status notification renewal successful send new active notification able renew subscription send inactive notification please remove please note subscription rewards user received final inactive daopay api 2 0 integration guide13 90pending expirationsimilar pending cancellation status notification sent expiration date \\( parameter \\) reached subscription cancelled validity stopsubscription ends send expired status notification end subscription period daopay api 2 0 integration guide14 901 6 contenttypesthe describes type content gets sold particular transaction contenttypedepending certain price points may may available contenttypepossible values parameter contenttypecontenttypevaluenamedescription1online gamesall online game providers publishers2virtual currencyall merchants sell credits gold virtual currencies \\( directly implemented game \\) 3social media social networksall social networks \\( closed virtual currency structure \\) 4media digital contentall music downloads video downloads newspapers5file sharing servicesall webhosting filesharing software download providers6datingall online dating services without adult content7physical goodsall kind physical goods8in app paymentsall kind app payments9ticketingall kind ticket purchases daopay api 2 0 integration guide15 901 7 targetgroupsthe describes group expected use service targetgrouppossible values parameter targetgrouptargetgroup valuenamedescription2minorsproducts specifically advertised children3adultsany services target group 18 \\( gambling \\) daopay api 2 0 integration guide16 902 technical informationhttp getall communication daopay done via http \\( \\) protocol parameter passing method use http \\( \\) get requests sslall communication server anddaopay done via https \\( ssl \\) ip restrictionsfor payment status notifications \\( psn \\) recommend verifying ip address webhook called information psns webhooks please refer payment status notifications \\( psn \\) call webhook exclusively following ip addresses ip address195 58 177 2195 58 177 3195 58 177 4195 58 177 5we recommend accepting payment information comes ip addresses strongly recommended specify ip addresses servers daopay merchant portal case daopay accept requests ip addresses please note apache web servers may filter authorization headers requests default making impossible verify authorization case please review web server configuration \\( details verification authorization header please refer \\) receiving requests daopay api 2 0 integration guide17 902 1 integration requirementsbefore starting integration process following requirements need met pricepoint configuration starting integration discussed price points payment methods countries intend use sales team set everything work integration account account required create configure portal daopay comapplications please contact integration team n't received email account credentials application setup account need create configure application use future payments 2 2 visual layoutdaopay logoswe offer graphics containing logo different formats \\( currently tiff gif png \\) sizes embed directly web server payment buttons web site find logos following url https daopay com logos implementing daopaythis section describes two basic ways implement daopay product assume working payment url want customer use make payment \\( please refer n't payment url yet \\) payment flow linkthe first option consists adding link website customer clicks link redirected website daopay 's side \\( ideally \\) finishes payment successfully gets redirected returnurl daopay api 2 0 integration guide18 90 href https pay daopay com \\? transactionid transactionid pay daopay clicking link start payment process sure replace transactionid transactionid \\( please refer information request transactionid \\) create iframeour experience shows achieve higher conversion rates \\( thus higher payouts \\) customer stays web page entire payment process therefore strongly recommend method customer chosen desired payment method product embed payment screen web page using iframe iframe src https pay daopay com \\? transactionid transactionid width 530 height 350 iframe please note due current technical restrictions recommend using iframes mobile applications services using 3g \\( mobile \\) flow custom stylesdepending graphic design website might want use custom visual style daopay payment screen using parameter please customstyleidrefer see daopay functions support custom styles functionshere list currently available custom styles customstyleiddescriptionbackground color1default style fixed size border radiusgrey2default style flexible 100 width rounded edgestransparent666dark style fixed sizegreyplease note need personalized style apart styles feel free get touch us daopay api 2 0 integration guide19 902 3 sending requestsin order send requests following steps required 1 add timestamp create request signaturefor details step please refer calculating signaturephp example2 add authentication information requestwe use standard http authorization header authentication http requests sent received us please add following request header 3 send request verify responseyour request sent authentication request successful respond http status code 200 ok n't receive status code please compare received code following table find error occurred http status codedescription400bad request parameter 'appcode' missing null invalid 400bad request timestamp request invalid please generate new request current timestamp 401unauthorized signature verification failed please make sure calculate signature correctly 403forbidden ip address made request allowed application daopay api 2 0 integration guide20 902 4 receiving requestswhen receiving request important verify signature well make additional checks make sure request valid 1 verify timestamp older 15 minutesfor request valid must include requesttimestamp parameter \\( see calculating details \\) signatureshould value parameter older 15 minutes please discard request respond http status code 400 bad request2 verify ip address request sentwe send requests following ip addresses ip address195 58 177 2195 58 177 3195 58 177 4195 58 177 5if request sent ip address different please discard request respond http status code 403 forbidden3 read signature request headerthe signature request located header following form authorization signature 4 calculate compare request signaturefor details step please refer calculating signaturephp exampleplease note since parameters already sorted requesttimestamp added need concatenate form key1 value1 key2 value2 daopay api 2 0 integration guide21 901 2 3 4 5 compare request signature calculated signature match authentication successful case please respond request http status code 200 okshould signatures mismatch please discard request respond http status code 401 unauthorized2 5 calculating signaturein order calculate signature following data required secret key \\( obtained merchant portal \\) list request parameters representing payment informationa timestamp represents current time \\( format seconds since unix timeepoch \\) together millisecond value please note append current milliseconds timestamps value timestamp together millisecond value would therefore 1397564362123 1397564362123the signature calculated executing following steps create query string urlencoded valuesappend timestamp concatenated request parameters example requesttimestamp 1397564395 calculate hash value \\( hmac sha512 \\) string last step combination secret keybase64 encode resulting hash valuefinally urlencode stringplease note order parameters used calculate signature must match order parameters request otherwise signature verification fail 2 5 1 request signing examplelet 's assume want sign following request parameters daopay api 2 0 integration guide22 901 2 3 4 5 keyvalueappcode12345price1 0product berfor example using following timestamp secret key values keyvaluerequesttimestamp1397564362123secret key123create query string urlencoded valuesappcode 12345 price 1 0 product c3 bcberappend timestampappcode 12345 price 1 0 product c3 bcber requesttimestamp 1397564362123calculate hash value \\( hmac sha512 \\) using previous string secret key raw binary data base64 encode hash valuersxrnbwyhlygkzpdw4fsu khntiqloyd96ew2qg4hjtboshmgjohqpd bspok1jaemhcr43nnlpcal czpfag daopay api 2 0 integration guide23 905 url encode string obtain final signature requestrsxrnbwyhlygkzpdw4fsu 2bkhntiqloyd96ew2qg4hjtboshmgjohqpd 2f 2bbspok1jaemhcr43nnlpcal 2fczpfagplease note final urlencode encode upper case characters e g 2f 2f implementations urlencode automatically \\( currently net exception \\) encounter issues signature please make sure using correct case daopay api 2 0 integration guide24 902 5 2 php examplecreating signature php input parameters parameters array key value pairs contains payment parameters timestamp current unix time \\( seconds \\) current milliseconds \\( e 1411370116036 \\) secretkey secret key function computeapisignature \\( parameters timestamp secretkey \\) timestamp number format \\( timestamp 0 '' '' \\) build query string foreach \\( parameters key value \\) querystring key urlencode \\( value \\) append timestamp querystring requesttimestamp timestamp hash hmac output raw format true hmac hash hmac \\( 'sha512' querystring secretkey true \\) base64 encode base64 base64 encode \\( hmac \\) urlencode final urlencode \\( base64 \\) return final daopay api 2 0 integration guide25 902 5 3 java examplecreate signature java input parameters string requestparameters list payment parameters http get form \\( appcode 123 price 1 0 product test \\) string secretkey secret key prepare timestampstring timestamp string valueof \\( system currenttimemillis \\( \\) \\) append timestamp requesturlfinal string payload requestparameters requesttimestamp timestamp generate hmacbyte hmac gethmac \\( secretkey payload hmacsha512 \\) urlencode signaturefinal string encodedsignature urlencoder encode \\( datatypeconverter printbase64binary \\( hmac \\) utf 8 \\) daopay api 2 0 integration guide26 90generate hmacprivate static byte gethmac \\( string secretkey string payload string hmactype \\) throws unsupportedencodingexception nosuchalgorithmexception invalidkeyexception final mac mac byte hmac final byte secretkeybytes \\( secretkey null secretkey trim \\( \\) isempty \\( \\) \\) secretkeybytes new byte 0 else secretkeybytes secretkey getbytes \\( utf 8 \\) secretkeyspec keyspec new secretkeyspec \\( secretkeybytes hmactype \\) mac mac getinstance \\( hmactype \\) mac init \\( keyspec \\) hmac mac dofinal \\( payload getbytes \\( utf 8 \\) \\) return hmac daopay api 2 0 integration guide27 902 6 testing paymentswe offer simple way test functionality payments verify integration handles payment status notifications \\( details see payment status notifications \\) properly \\( psn \\) starting testing toolinside applications list merchant portal \\( \\) find https portal daopay combutton called test clicking button take test tool respective application opening test tool choose values common payment parameters amount currency targetgroup entering desired values test transaction click create transaction create new transaction desired value following step depends state respective application application live modeif application live mode testing tool display payment screen allowing make live payments testing purposes payments get handled regular payments therefore psns sent \\( please refer payment status notifications \\( psn \\) details \\) application test modeif application test mode instead payment screen see testing interface interface allows test different ways payment behave click desired test case e g payment expired system simulate desired behavior sending respective psns please note n't need use testing tool use testing interface application test mode payment requests make show testing interface instead payment screen currently testing tool used test behavior following payment methods payment methodnotesdirect billingthis method allows testing direct billing paymentssmsallows testing sms payments daopay api 2 0 integration guide28 90callallows testing voice paymentssubscriptionthis allows testing subscriptions \\( subscription expires subscription becomes inactive \\) every time run test case \\( clicking respective button test interface \\) system sends matching payment status notifications displays well response system allows test way system responds different situations may arise payment please note psns get sent payment tester may use parameter values differ live payments importantly affects payout telephone numbers simplicity use static values parameters one time payment test casestest case nameexplanationpendinga partially paid payment completeda successful payment expireda payment n't complete fail expiry date faileda failed payment may fail due repeated entry wrong cli tan code future could cover spending limits blocked users clissubscription test cases test case nameexplanationactivethis case called every time successful payment made subscription inactive daopay api 2 0 integration guide29 90test case nameexplanationa payment fails previously active subscription may fail due repeated entry wrong cli tan code future could cover spending limits blocked users clisexpiredan expired subscription subscriptions expire end date reached end date specified creating subscription cancelleda cancelled subscription state entered customer actively cancels transaction daopay api 2 0 integration guide30 903 functionswe provide various ways handle payments following find list functions currently available 3 1 createthe function used create particular price createtransactionid used send buyer payment screen transactionidthe function called following endpoint createhttps api daopay com v1 2 create3 1 1 function parameters createyou make requests calling endpoint providing payment parameters example https api daopay com v1 2 create \\? appcode appcode following table lists available payment parameters parameter nameformatdescriptionrequiredappcode1234integerthe appcode used uniquely identify application yesamount1 00float numberthe price want bill customer yescurrencyeur3 charsthe currency price billed please refer iso 4217information yes daopay api 2 0 integration guide31 90parameter nameformatdescriptionrequiredcountrycodeat 89 12 1 342 chars ipv4this parameter used preselect country customer located please refer details iso 3166 1valid country codes may also pass ipv4 address case ip resolved country ip lookup functionality yesproductname 100 gold coins stringa description product want bill please note due layout reasons productnameshould longer 80 characters yesproductdescription gold coins used buy ingame items ingame shop stringa detailed description product nocustomtransactionid transactionid stringa unique id transactions within system database yesuserid userid stringa unique id used identify individual customers users yescontenttype1integerthis identifies type product billed \\( gaming \\) please refer details contenttypesand list possible values yes \\( aggregators \\) daopay api 2 0 integration guide32 90parameter nameformatdescriptionrequiredplease note parameter required product want sell differs default content type aggregator aggregate different content types submerchantid submerchantid stringif aggregator online gaming plattform sell virtual currency different merchants please use unique id identify individual merchants games please note submerchants set merchant portal yes \\( aggregators \\) paymentmethod1integerthis parameter specifies payment method want use please refer payment details methodsa list possible values yeslanguagede2 charsthe language displayed customer please refer iso 639 1more information notargetgroup2integerif service specific target group please specify using parameter please refer targetgroupsdetails list possible values daopay api 2 0 integration guide33 90parameter nameformatdescriptionrequiredplease note parameter required target group differs default target group operatorid 1223354 stringthis parameter identifies single operator buyer using direct billing available operators country intend use parameter required nocallerid 4312345678stringif already know telephone number customer provide using parameter allows us verify number allowed make payments please refer e regarding required 164format noreturnurlhttp www site com success htmlurlif specified parameter overrides default url customer redirected payment n't failureurlset failed payments also redirected returnurl nofailureurlwww site http com failure htmlurlif specified parameter overrides default url customer redirected failed expired aborted payment nopsnurlwww site http com psn htmlurlif specified parameter overrides default url psns payment sent daopay api 2 0 integration guide34 90parameter nameformatdescriptionrequiredinformation psns please refer payment status notifications \\( psn \\) returntarget selfstringspecifies customer returned returnurlor failureurl opens url inside selfthe payment screen frame opens url parentinside parent frame opens url blanknew window tab opens url topfull body window nopricejumping1 2 3integerdescribes desired pricejumping behavior 1 jump nearest higheravailable amount2 jump nearest loweravailable amount3 jump nearest amount \\( lower higher \\) ornopricetolerance20percentage \\( 0 100 \\) percentage \\( amount \\) specifies interval within price jumping possiblenocustomstyleid7integerif specified parameter overrides default style payment information available styles please refer visual layoutnocustomparameterparam1 value1 param2 value2stringyou use parameter add number custom parameters maximum daopay api 2 0 integration guide35 90parameter nameformatdescriptionrequiredlength parameters values exceed 255 characters please note individual parameters values need combined shown format column please note api requests need properly signed accepted \\( details please refer \\) calculating signature daopay api 2 0 integration guide36 903 1 2 response format createonce processed transaction request respond uniquely transactioniddescribes requested transaction well url userurlsend buyer creating transaction success response example request responsetimestamp 2015 01 30t18 00 00 000 02 00 apiversion 0 2 requesturl https api daopay com v1 2 create \\? appcode 99999 amount 10 currency eur countrycode de parameters appcode 99999 currency eur amount 10 countrycode de transactions transactionid 024b3cf8 9f51 4042 808b 609f68a8c656 userurl https pay daopay com \\? transactionid 024b3cf8 9f51 4042 808b 609f68a8c656 please note request could n't successfully processed system return error response contains information error source describing error code \\( full list error codes please refer \\) api error codes daopay api 2 0 integration guide37 90error response example request responsetimestamp 2015 01 30t18 00 00 000 02 00 apiversion 0 2 requesturl https api daopay com v1 2 create \\? appcode 99999 amount 10 currency eur countrycode de parameters appcode 99999 currency eur amount 10 countrycode de error errorcode 1016 errordescription parameter 'targetgroup' invalid daopay api 2 0 integration guide38 903 2 createsubscriptionthe function used create subscription trigger first createsubscriptiontransaction return identifier subscription transactionidtransactionidcan used send buyer payment screen endpoint function following createsubscriptionhttps api daopay com v1 2 createsubscription3 2 1 function parameters createsubscriptionyou make requests calling endpoint providing payment parameters example https api daopay com v1 2 createsubscription \\? appcode appcode following table lists available payment parameters parameter nameformatdescriptionrequiredappcode99999integerthe appcode used identify application yesamount1 00float numberthe price want bill customer yescurrencyeur3 charsthe currency price billed please refer iso 4217more information yespaymentmethod1integerthis parameter specifies payment method want use yes daopay api 2 0 integration guide39 90parameter nameformatdescriptionrequiredplease refer payment methodsfor details list possible values billingperiodhour day week monthstringthe unit time billingfrequencydescribes billingperiod billingfrequencydescribe recurring interval subscription yesbillingfrequency1 1000integerthe value provide parameter number times transactions made subscription per billingperiod yesstop2015 01 30t18 00 00 000 02 00yyyy mm ddthh mm ss ssstzdthe date subscription expire details please refer iso 8601please make sure specify time zone designator well 3 digits fractions second nocountrycodeat 89 12 1 342 chars ipv4this parameter used preselect country customer yes daopay api 2 0 integration guide40 90parameter nameformatdescriptionrequiredlocated case using countrycode iso standards please refer iso 3166 1for information case ipv4 ip resolved country userip lookup functionality subscriptionname 100 gold coins stringa description subscription want bill please note due layout reasons subscriptionnameshould longer 80 characters yessubscriptiondescription gold coins used buy ingame items ingame shop stringa detailed description product nocustomsubscriptionid customsubscriptionid stringa unique id subscriptions within system database yesuserid userid stringa unique id identifies individual users yescontenttype1integerthis identifies type product billed \\( gaming \\) please yes \\( aggregators \\) daopay api 2 0 integration guide41 90parameter nameformatdescriptionrequiredrefer contenttypesfor details list possible values please note parameter required product want sell differs default content type aggregator aggregate different content types submerchantid submerchantid stringif aggregator online gaming plattform sell virtual currency different merchants please use unique id identify individual merchants games please note submerchants set merchant portal yes \\( aggregators \\) languagede2 charsthe language displayed customer please refer iso 639 1information notargetgroup2integerno daopay api 2 0 integration guide42 90parameter nameformatdescriptionrequiredif service specific target group please specify using parameter please refer targetgroupsfor details list possible values please note parameter required target group differs default target group operatorid 1223354 stringthis parameter identifies single operator buyer using direct billing available operators country intend use parameter required nocallerid 4312345678stringif already know telephone number customer provide using parameter allows us verify number allowed make daopay api 2 0 integration guide43 90parameter nameformatdescriptionrequiredpayments please refer e 164regarding required format returnurlwww site comhttp success htmlurlif specified parameter overrides default url customer redirected payment n't set failed failureurlpayments also redirected returnurl nofailureurlwww site comhttp failure htmlurlif specified parameter overrides default url customer redirected failed expired aborted payment n't set cancelurl customer redirected failureurlcancellation nocancelurlwww site comhttp failure htmlurlif specified customer redirected url cancellation nopsnurlwww site comhttp psn htmlurlif specified parameter overrides default url daopay api 2 0 integration guide44 90parameter nameformatdescriptionrequiredwhich psns payment sent information psns please refer 4 payment status notifications \\( psn \\) returntarget selfstringspecifies customer returned returnurlfailureurl cancelurl opens selfurl inside payment screen frame opens parenturl inside parent frame opens blankurl new window tab opens topurl full body window nocustomstyleid7integerif specified parameter overrides default style payment information available styles please refer visual layoutnocustomparameterparam1 value1 param2 value2stringyou use parameter add number daopay api 2 0 integration guide45 90parameter nameformatdescriptionrequiredcustom parameters maximum length parameters values exceed 255 characters please note individual parameters values need combined shown format column please note api requests need properly signed accepted \\( details please refer \\) calculating signature daopay api 2 0 integration guide46 903 2 2 response format createsubscriptiononce processed subscription request respond subscriptionid transactionid uniquely describes requested transaction url forward user success response example request responsetimestamp 2015 01 30t18 00 00 000 02 00 apiversion 0 2 requesturl https api daopay com v1 2 createsubscription \\? appcode 99999 amount 10 currency eur countrycode de parameters appcode 99999 currency eur amount 10 countrycode de subscriptions transactionid 2bdc2319 4f31 46fe 9150 4d797b40e381 subscriptionid 024b3cf8 9f51 4042 808b 609f68a8c656 userurl https pay daopay com \\? transactionid 2bdc2319 4f31 46fe 9150 4d797b40e381 please note request could n't successfully processed system return error response contains information error source describing error code \\( full list error codes please refer \\) api error codeserror response example request responsetimestamp 2015 01 30t18 00 00 000 02 00 apiversion 0 2 daopay api 2 0 integration guide47 90 requesturl https api daopay com v1 2 createsubscription \\? appcode 99999 amount 10 currency eur countrycode de parameters appcode 99999 currency eur amount 10 countrycode de error errorcode 1016 errordescription parameter 'targetgroup' invalid daopay api 2 0 integration guide48 903 3 cancelsubscriptionthe function used initiate cancellation subscription cancelsubscriptionrequested user endpoint function following cancelsubscriptionhttps api daopay com v1 2 cancelsubscriptionplease note cancelling subscription means payments made subscription future mean past user payments invalidated 3 3 1 function parameters cancelsubscriptionyou make requests calling endpoint providing payment parameters example https api daopay com v1 2 cancelsubscription \\? appcode appcode following table lists available payment parameters parameter nameformatdescriptionrequiredappcode99999integerthe appcode used identify applicationyessubscriptionid024b3cf8 9f51 4042 808b 609f68a8c656 stringthe unique id subscription cancelled yescancelurlif specified customer redirected url cancellation parameter daopay api 2 0 integration guide49 90parameter nameformatdescriptionrequiredwww http site com cancel htmlurlused neither respective create subscription request customer redirected instead failureurlcommentuser requested cancellationstringan optional description reason subscription cancelled nopsnurlwww http site com psn htmlurlif specified parameter overrides url psns subscription sent \\( affects default psn url psn url provided create subscription \\) information psns please refer payment status notifications \\( psn \\) nocustomparameterparam1 value1 param2 value2stringyou use parameter add number custom parameters provided customparameterduring create subscription value overwritten maximum length parameters values exceed 255 characters please note individual parameters values need combined shown format column noplease note api requests need properly signed accepted \\( details please refer \\) calculating signature daopay api 2 0 integration guide50 903 3 2 response format cancelsubscriptiononce processed cancellation request respond subscriptionid cancellation token url forward user success response example request responsetimestamp 2015 01 30t18 00 00 000 02 00 apiversion 0 2 requesturl https api daopay com v1 2 cancelsubscription \\? appcode 99999 subscriptionid parameters appcode 99999 subscriptionid 024b3cf8 9f51 4042 808b 609f68a8c656 cancellations subscriptionid 024b3cf8 9f51 4042 808b 609f68a8c656 userurl https pay daopay com cancelsubscription \\? token please note request could n't successfully processed system return error response contains information error source describing error code \\( full list error codes please refer \\) api error codeserror response example request responsetimestamp 2015 01 30t18 00 00 000 02 00 apiversion 0 2 requesturl https api daopay com v1 2 cancelsubscription \\? appcode 99999 subscriptionid parameters appcode 99999 subscriptionid 024b3cf8 9f51 4042 808b 609f68a8c656 daopay api 2 0 integration guide51 90 error errorcode 2222 errordescription parameter 'subscriptionid' missing null invalid daopay api 2 0 integration guide52 903 4 productdeliveryconfirmationafter receiving psn successful transaction \\( one time payment subscription activation renewal \\) merchant needs confirm delivery purchased product confirmation missing product delivery needs confirmed manually merchant customer support purpose show unconfirmed payments within merchant portal endpoint function following productdeliveryconfirmation https api daopay com v1 2 productdeliveryconfirmation3 4 1 function parameters productdeliveryconfirmationyou make requests calling endpoint providing payment parameters example https api daopay com v1 2 productdeliveryconfirmation \\? transactionid following table lists available payment parameters parameter nameformatdescriptionrequiredappcode99999integerthe appcode used uniquely identify application yestransactionid24b3cf8 9f51 4042 808b 609f68a8c656 stringthe transactionid confirmedyesplease note api requests need properly signed accepted \\( details please refer \\) calculating signature daopay api 2 0 integration guide53 903 4 2 response format productdeliveryconfirmationonce processed confirmation request respond status indicating confirmation successful success response example request responsetimestamp 2015 01 30t18 00 00 000 02 00 apiversion 0 2 requesturl https api daopay com v1 2 productdeliveryconfirmation \\? transactionid parameters transactionid 24b3cf8 9f51 4042 808b 609f68a8c656 productdeliveryconfirmation transactionid 24b3cf8 9f51 4042 808b 609f68a8c656 please note request could n't successfully processed system return error response contains information error source describing error code \\( full list error codes please refer \\) api error codeserror response example request responsetimestamp 2015 01 30t18 00 00 000 02 00 apiversion 0 2 requesturl https api daopay com v1 2 productdeliveryconfirmation \\? transactionid parameters transactionid 24b3cf8 9f51 4042 808b 609f68a8c656 error errorcode 1301 errordescription invalid transactionid daopay api 2 0 integration guide54 90 daopay api 2 0 integration guide55 903 5 createfuelstationthe function used create transaction special type pay per createfuelstation minute price specified user calls end call final price known function called following endpoint createfuelstation https api daopay com v1 2 createfuelstation3 5 1 function parameters createfuelstationyou make requests calling endpoint providing payment parameters example https api daopay com v1 2 createfuelstation \\? appcode appcode following table lists available payment parameters parameter nameformatdescriptionrequiredappcode99999integerthe appcode used uniquely identify application yescountrycodeat 89 12 1 342 chars ipv4this parameter used preselect country customer located please refer details iso 3166 1valid country codes may also pass ipv4 address case ip resolved country ip lookup functionality yescreditsname diamonds stringthe plural name game credits yes daopay api 2 0 integration guide56 90parameter nameformatdescriptionrequiredplease note due layout reasons creditsnameshould longer 20 characters creditexchangerate100 0float numberbase amount credits paid user depending creditsexchangetype creditsexchangerate multiplied different number yescreditexchangetype0integerdefines basis exchange credits using either revenue per currency unit revenue per second parameter ommitted use value 0 default 0 revenue per currency unit \\( e g 100 credits per euro buyer paid \\) 2 revenue per second \\( e g 10 credits per second buyer stays line \\) noproductdescription gold coins used buy ingame items ingame shop stringa detailed description product nocustomtransactionid transactionid stringa unique id transactions within system database yesuserid userid stringa unique id used identify individual customers users yes daopay api 2 0 integration guide57 90parameter nameformatdescriptionrequiredemailuser merchant comstringwill used send notifications user e g case chargebacks user receive reminder please also add parameter userid already contains emailnocontenttype1integerthis identifies type product billed \\( gaming \\) please refer details contenttypesand list possible values please note parameter required product want sell differs default content type aggregator aggregate different content types yes \\( aggregators \\) submerchantid submerchantid stringif aggregator online gaming plattform sell virtual currency different merchants please use unique id identify individual merchants games please note submerchants set merchant portal yes \\( aggregators \\) languagede2 charsthe language displayed customer please refer iso 639 1more information notargetgroupno daopay api 2 0 integration guide58 90parameter nameformatdescriptionrequired2integerif service specific target group please specify using parameter please refer targetgroupsdetails list possible values please note parameter required target group differs default target group operatorid 1223354 stringthis parameter identifies single operator buyer using direct billing available operators country intend use parameter required nocallerid 4312345678stringif already know telephone number customer provide using parameter allows us verify customer make payment please refer e regarding required 164format noreturnurlhttps www site com success htmlurlif specified parameter overrides default url customer redirected payment n't failureurlset failed payments also redirected returnurl nofailureurlwww site https com failure htmlurlno daopay api 2 0 integration guide59 90parameter nameformatdescriptionrequiredif specified parameter overrides default url customer redirected failed expired aborted payment psnurlwww site https com psn htmlurlif specified parameter overrides default url psns payment sent information psns please refer payment status notifications \\( psn \\) nocustomstyleid7integerif specified parameter overrides default style payment information available styles please refer visual layoutnocustomparameterparam1 value1 param2 value2stringyou use parameter add number custom parameters maximum length parameters values exceed 255 characters please note individual parameters values need combined shown format column noplease note api requests need properly signed accepted \\( details please refer \\) calculating signature daopay api 2 0 integration guide60 903 5 2 response format createfuelstationplease refer details expected response codes response format create daopay api 2 0 integration guide61 90 daopay api 2 0 integration guide62 904 payment status notifications \\( psn \\) notify real time status ongoing payment status subscription using payment status notifications \\( psn \\) state change results new psn information transaction subscription states please refer transaction statesand subscription statesit calling webhook provide \\( webhooks user defined callbacks http information please refer \\) webhook http webhooks orgused receive sometimes also called psnsstatus callbacksinstant payment notifications \\( ipn \\) payment status notification system similar mechanism paypal amazon call instant payment notifications google checkout calls notification callbacks 's custom program \\( cgi servlet etc \\) implement preferred programming language call http get request inform real time status payment changes status change sms received payment completed use payment status notifications update customer accounts generate serial number things necessary order automatically process payments note status notification webhook called background user interface may use return url display information user payment depending type transaction \\( subscription onetime payment \\) sent different psns e g reward buyer purchase soon transaction enters state completed similarly subscription services grant user access content soon subscription enters state active psn calls sent us signed please make sure verify signature psn ignore case signature n't match \\( details please refer receiving \\) requestsyou configure default url webhook merchant portal account please note recommend using https protocol access webhook additionally allow webhook accessed ip addresses defined technical information daopay api 2 0 integration guide63 904 1 function parameters \\( one time payments \\) soon new transactionid generated set transaction 's status new please note system send notification initial status function parameters depend type psn find parameters used different types psns 4 1 1 pendingparameter name valueformatdescriptionappcode99999integerthe appcode used identify application transactionidfa6a8417 321d 4fea 851f ab182d35cc70alphanumeric chars z0 9 36 chars longan unique id used identify current payment customtransactionid transactionid stringthe custom transactionid provided creating transaction defined format type like specific hash string statuspendingstringthe state payment statusdescription payment progress stringa detailed description status customparameteryour custom parameters provided creating transaction daopay api 2 0 integration guide64 90parameter name valueformatdescription custom parameter string stringresendcount1integerdisplays amount times psn sent parameter added original psn call failed least useriduser123stringthe userid customer id provided creating payment requesttimestamp1397564362123this parameter provided every request needed verify signature request \\( details please refer \\) calculating signature daopay api 2 0 integration guide65 904 1 2 completedparameter name valueformatdescriptionappcode99999integerthe appcode used identify application transactionidfa6a8417 321d 4fea 851f ab182d35cc70alphanumeric chars z0 9 36 chars longan unique id used identify current payment customtransactionid transactionid stringthe custom transactionid provided creating transaction defined format type like specific hash string statuscompletedstringthe state payment statusdescription payment completed successfully stringa detailed description status substatus1000integerthe code exact substatus possible substatus values 1000 successful payment1001 compensationpaidamount24 44float numberthe amount paid client payout18 97float numberthe payout receive transaction currencyeur3 chars daopay api 2 0 integration guide66 90parameter name valueformatdescriptionthe currency paidamount payout please refer iso 4217for information countrycodede2 charscountrycode payment callerid4915732789123integeryour client 's telephone number hashedcalleridba310178e29a040eef6ee86d42d9a230 charshashed value client telephone number paidtime2015 01 30t18 00 00 000 02 00yyyy mm ddthh mm ss ssstzdthis parameter describes date time transaction paid completely details please refer iso please make sure 8601specify time zone designator well 3 digits fractions second customparameter custom parameter string stringyour custom parameters provided creating transaction operatoridde e plusstringdaopay 's internal operator name \\( countrycode operatorname \\) resendcount1integerdisplays amount times psn sent parameter added original psn call failed least daopay api 2 0 integration guide67 90parameter name valueformatdescriptionuseriduser123stringthe userid customer id provided creating payment vatcollected1 40float numberthe amount vat still needs paid country payment originated please note case need handle payment vat vatcleared1 40float numberthe amount vat already paid country payment transaction vat needs paid case credits98integerthe amount credits buyer rewarded details please refer function parameters createfuelstationplease note parameter added successful fuel station payments callduration12 0float numberthe duration call value depends creditsexchangerate creditsexchangetype chose creating daopay api 2 0 integration guide68 90parameter name valueformatdescriptionpayment details please refer function parameters createfuelstationplease note parameter added fuel station payments requesttimestamp1397564362123integerthis parameter provided every request needed verify signature request \\( details please refer calculating \\) signature daopay api 2 0 integration guide69 904 1 3 failedparameter name valueformatdescriptionappcode99999integerthe appcode used identify application transactionidfa6a8417 321d 4fea 851f ab182d35cc70alphanumeric chars z0 9 36 chars longan unique id used identify current payment customtransactionid transactionid stringthe custom transactionid provided creating transaction defined format type like specific hash string statusfailedstringthe state payment statusdescription user blocked operatorstringa detailed description status substatus 3000 stringthe code used identify type error customparameter custom parameter string stringyour custom parameters provided creating transaction resendcount1integerdisplays amount times psn sent parameter added original psn call failed least userid daopay api 2 0 integration guide70 90parameter name valueformatdescriptionuser123stringthe userid customer id provided creating payment requesttimestamp1397564362123this parameter provided every request needed verify signature request \\( details please refer \\) calculating signaturepossible different statuses statusdescriptionssubstatusstatusdescription2004 invalid pin entered repeatedly 2005 payment could billed due insufficient funds 2006 user blocked operator 2007 invalid cli entered repeatedly 2998 payment failed \\( error daopay internal unknown \\) 2999 error reaching user 's operator \\( error internal unknown \\) 3000 payment aborted user please note applications test mode always send substatus 1000 case please read find psn status statusdescription daopay api 2 0 integration guide71 904 1 4 expiredparameter name valueformatdescriptionappcode99999integerthe appcode used identify applicationtransactionidfa6a8417 321d 4fea 851f ab182d35cc70alphanumeric chars z0 9 36 chars longan unique id used identify current paymentcustomtransactionid transactionid stringthe custom transactionid provided creating transaction defined format type like specific hash stringstatusexpiredstringthe state paymentstatusdescription payment expired due inactivity stringa detailed description status customparameter custom parameter string stringyour custom parameters provided creating transaction resendcount1integerdisplays amount times psn sent parameter added original psn call failed least useriduser123stringthe userid customer id provided creating payment requesttimestamp1397564362123 daopay api 2 0 integration guide72 90parameter name valueformatdescriptionthis parameter provided every request needed verify signature request \\( details please refer \\) calculating signature daopay api 2 0 integration guide73 904 2 function parameters \\( subscriptions \\) soon new subscription generated set subscription 's status inactive please note system send notification initial status function parameters depend type psn find parameters used different types psns 4 2 1 activeparameter name valueformatdescriptionappcode99999integerthe appcode used identify application subscriptionidfa6a8417 321d 4fea 851f ab182d35cc70alphanumeric chars z0 9 36 chars longan unique id used identify subsciption transactionidfa6a8417 321d 4fea 851f ab182d35cc70alphanumeric chars z0 9 36 chars longan unique id used identify current payment transactioncounter2integerindicates number successful payments customsubscriptionid subscriptionid stringthe custom subscriptionid provided creating subscription defined format type like specific hash string status daopay api 2 0 integration guide74 90parameter name valueformatdescriptionactivestringthe state subscription statusdescription subscription activated renewed stringa detailed description status paidamount4 99float numberthe amount paid client payout3 99float numberthe payout receive transaction currencyeur3 charsthe currency paidamount payout please refer iso 4217for information countrycodede2 charscountrycode payment hashedcalleridba310178e29a040eef6ee86d42d9a230 charshashed value client telephone number paidtime2015 01 30t18 00 00 000 02 00yyyy mm ddthh mm ss ssstzdthis parameter describes date time payment paid completely subscription details please refer please make iso 8601sure specify time zone designator well 3 digits fractions second customparameter daopay api 2 0 integration guide75 90parameter name valueformatdescription custom parameter string stringyour custom parameters provided creating subscription operatoridde e plusstringdaopay 's internal operator name \\( countrycode operatorname \\) resendcount1integerdisplays amount times psn sent parameter added original psn call failed least useriduser123stringthe userid customer id provided creating payment vatcollected1 40float numberthe amount vat still needs paid country payment originated please note case need handle payment vat vatcleared1 40float numberthe amount vat already paid country payment transaction vat needs paid case requesttimestamp1397564362123 daopay api 2 0 integration guide76 90parameter name valueformatdescriptionthis parameter provided every request needed verify signature request \\( details please refer calculating \\) signature daopay api 2 0 integration guide77 904 2 2 inactive expired cancelledparameter name valueformatdescriptionappcode99999integerthe appcode used identify application subscriptionidfa6a8417 321d 4fea 851f ab182d35cc70alphanumeric chars z0 9 36 chars longan unique id used identify subscription customsubscriptionid subscriptionid stringthe custom subscription id provided creating subscription defined format type like specific hash string statusinactive expired cancelledstringthe state subscription statusdescription subscription expired stringa detailed description status customparameter custom parameter string stringyour custom parameters provided creating subscription resendcount1integerdisplays amount times psn sent parameter added original psn call failed least useriduser123stringthe userid customer id provided creating payment daopay api 2 0 integration guide78 90parameter name valueformatdescriptionrequesttimestamp1397564362123this parameter provided every request needed verify signature request \\( details please refer \\) calculating signaturepossible different statuses statusdescriptionsstatusstatusdescriptioninactivethe subscription deactivatedexpiredthe subscription expiredcancelledthe subscription cancelled daopay api 2 0 integration guide79 904 3 response codes psnthe following table describes specific response error codes expect psn function call http status response codes http status codedescriptionnotes200okuse code valid requests400bad request requesttimestamp missinguse code request n't contain requesttimestamp400bad request requesttimestamp invaliduse code requesttimestamp invalid \\( details please refer \\) receiving requests400bad request unknown statususe code status passed psn status value n't known status401unauthorized authentication header missinguse code request n't contain authorization header401unauthorized signature mismatchuse code signature calculated n't match signature provided request \\( details please refer \\) calculating signature403forbiddenuse code psn called unknown ip address also store http status please ensure map ones correctly return specified cases please note receive http status code 200 response webhook resend psn question please contact team would like us resend psns http status codes daopay api 2 0 integration guide80 905 additional information5 1 supported country codesfor country codes use 2 letter iso code \\( iso 3166 alpha 2 \\) information standard please refer http www iso org iso country codes5 2 supported currency codesfor currency codes use iso 4217 standard information standard please refer list http www iso org iso home standards currency codes htmpossible values please refer http www xe com iso4217 php daopay api 2 0 integration guide81 905 3 api error codesthis list currently used error codes additional error codes might added future error codedescription english1005parameter missing null invalid must 2 characters according 'countrycode'to codes iso 3166 1 alpha 2or ipv4 conforming value 1006value parameter invalid must 2 characters according 'language'iso 639 11009parameter missing null invalid must positive double float 'amount'with two decimal places dot decimal point 1010parameter missing null invalid must 3 characters according 'currency' iso 42171011parameter missing null 'productname'1013parameter missing null 'customtransactionid'1014parameter missing null 'userid'1015parameter missing null invalid 'contenttype'1016parameter invalid 'targetgroup'1017value parameter invalid 'paymentmethod'1018value parameter 'pricejumping' invalid 1019value parameter 'pricetolerance' invalid 1022parameter null invalid 'operatorid'1090parameter missing null invalid 'submerchantid'1103value parameter existing customstyleid 'customstyleid' daopay api 2 0 integration guide82 90error codedescription english1111this 'callerid' blocked 1112this 'callerid' n't enough spending limit left 1120112111221123the requested pricepoint available 1036parameter invalid 'returnurl'1037parameter invalid 'failureurl'1038parameter invalid 'psnurl'1201parameter 'subscriptionid' missing null invalid 1202parameter 'billingperiod' missing null invalid 1203parameter 'billingfrequency' missing null invalid 1204parameter 'stop' invalid 1205parameter 'subscriptionname' missing null invalid 1206parameter 'customsubscriptionid' missing null invalid 1208parameter 'creditexchangerate' missing null invalid 1209parameter 'creditsname' missing null invalid 1301invalid transactionid 1302this transactionid already confirmed daopay api 2 0 integration guide83 906 clearing api6 1 introduction clearing apithis manual explains payment process special focus transactions money collected buyer \\( chargebacks \\) work department company payments managerfinances guide help understand chargebacks occur handle guide contains technical information get software engineer notified chargebacks use notifications update user account reverse transactions required 6 2 regular money flowto understand chargebacks risks associated payments helpful gain insight funds transferred buyer seller using daopay daopay maintains worldwide network relationships phone operators different countries turn maintain relationships customers buyer made payment daopay respective operator bills collects funds \\( local currency \\) operator received funds buyer forwards daopay figure 1 regular money flow buyer \\( right \\) seller \\( left \\) daopay api 2 0 integration guide84 906 3 chargebacksas always exceptions rule countries enforce consumers reverse withhold payments purchase countries may occur buyer purchase item pay phone bill called chargebackchargebacks specific phone payments occur payment methods well especially credit cards checks 6 3 1 chargebacks generatednot every chargeback fraudulent though buyers may also generate chargebacks whenthere delay paymenttheir mobile phone stolen used online paymentsa home phone used without owner permissionchildren ask parents permission spent much phone parents refuse pay billthey receive items purchased6 3 2 chargebacks matterchargebacks matter probably delivered items performed services customer receiving money sale depending sell may able reverse transaction e sell virtual currency might want choose deduct funds user account sell premium accounts could revert particular account back non premium status daopay api 2 0 integration guide85 901 2 6 3 3 handling chargebackswhen receiving chargeback \\( collection \\) information important handle properly 2 ways track chargeback status particular payment \\( list parameters provided clearing api please refer \\) clearing api message structureusing balance parameterthe balance parameter used track overall balance given transaction due ease use suggested method chargeback handling suggest implementing following behavior balance 0 suggest blocking buyer responsible transaction \\( already blocked \\) depending system might mean removing premium features purchased transaction allowing buyer use system balance 0 case outstanding amount transaction could collected user n't transactions generated chargebacks unlocked using billingtype amount parametersif want track exact occurrence chargebacks collections recommend using parameters \\( list parameters provided billingtypeamountclearing api please refer \\) clearing api message structurethe following combinations 2 parameters possible billingtypeamountcasedescription3negative amountchargebacka regular chargeback 3positive amountchargeback cancellationa previous chargeback might get cancelled reason chargeback gets invalidated time 4positive amountcollectionmoney previous chargeback could collected 4positive amountcollection cancellationif problem previous collection collection might get cancelled daopay api 2 0 integration guide86 90 daopay api 2 0 integration guide87 906 4 technical information clearing api6 4 1 message parametersparameter namevalueformatdescriptionbillingtype1numbertype billing record 3 chargeback4 collectionid77616645numberunique identifier messageappcode12345numberthe appcode used identify applicationmodified2014 07 12date yyyy mm dd date update \\( e g chargeback \\) please date note expressed cet cest time zone transactionidfa6a8417 321d 4fea 851f ab182d35cc70or180364 1405175288526chars z 0 9 20 36 chars longan unique id used identify current payment second format \\( 180364 1405175288526 \\) used old daopay system describes unique id transaction \\( ordernumber subid \\) customtransactionid transactionid stringthe custom transactionid provided creating transaction defined format type like specific hash string daopay api 2 0 integration guide88 90parameter namevalueformatdescriptionuserid userid stringan unique id used identify individual customers user submerchantid submerchantid stringif aggregator onlinegaming plattform sell virtual currency different merchants please use unique id identify individual merchants game submerchants set merchant portal currencyeur3 charsthe currency amount transferred merchants account please refer supported currency codesinformation amount1 00floatthe payout amount local currency \\( also negative value \\) duedate2014 07 12date yyyy mm dd due date payout date please note expressed cet cest time zone hashedcalleridba310178e29a040eef6ee86d42d9a230 charshashed value client telephone numbertransactiondate2014 05 02date yyyy mm dd daopay api 2 0 integration guide89 90parameter namevalueformatdescriptionthe date transaction made please note date expressed cet cest time zone requesttimestamp1397564362123this parameter provided every request needed verify signature request \\( details please refer calculating \\) signatureadditionally chargebacks collectionsbalance 1 21floatshowing balance chargebacks collectionscarrierinvoicenumber inv 234094095 stringthe carrier 's invoice number \\( available \\) carrierinvoicedate2014 07 12date yyyy mm dd carrier 's invoice date \\( available \\) please note date expressed cet cest time zone 6 4 2 clearing api message exampleassuming clearing api url merchant set https clearing endpoint com chargeback \\( billingtype 3 \\) https clearing endpoint com \\? billingtype 3 id 77616645 appcode 1172 modified 2014 08 14 transactionid 180364 1405175288526 customtransactionid 26979306 userid user1 submerchantid submerchant1 currency eur amount 7 14 duedate 2014 10 daopay api 2 0 integration guide90 9010 hashedcallerid e8f917233f8bcfc98fc9ca31ca8c0f3e transactiondate 2014 05 02 balance 7 14 carrierinvoicenumber 9775864898 carrierinvoicedate 2014 07 24collection \\( billingtype 4 \\) https clearing endpoint com \\? billingtype 4 id 77671436 appcode 1172 modified 2014 08 17 transactionid 180364 1405175288526 customtransactionid 26979306 userid user1 submerchantid submerchant1 currency eur amount 7 14 duedate 2014 10 10 hashedcallerid e8f917233f8bcfc98fc9ca31ca8c0f3e transactiondate 2014 05 02 balance 0 carrierinvoicenumber 9775864898 carrierinvoicedate 2014 07 246 4 3 clearing api response codeswhen receiving clearing api message please make sure verify incoming api request valid information available response codes well verify incoming requests please refer response codes psn", 
    "crawled_date": "2017-06-10T13:59:47.751775"
  }, 
  "18": {
    "link5": "https://knowledgecenter.zuora.com/DC_Developers/C_REST_API", 
    "link4": "https://knowledgecenter.zuora.com/DC_Developers/C_REST_API/B_REST_API_reference", 
    "link1": "https://knowledgecenter.zuora.com/DC_Developers", 
    "api_url": "zuora.com", 
    "link3": "https://www.zuora.com/developer/api-reference/", 
    "link2": "https://knowledgecenter.zuora.com/", 
    "progweb_url": "https://www.programmableweb.com/api/zuora-soap", 
    "progweb_date": "02.24.2009", 
    "progweb_descr": "Zuora is the leader in subscription billing and recurring payments. Our Z-Billing and Z-Payments products make it fast and easy to launch new products, scale operations, and automate recurring billing and subscription payments in one solution.", 
    "api_name": "Zuora SOAP", 
    "progweb_cat": "Subscriptions,Billing", 
    "descr5": "sign forgot password loginemployee logincustomer logincommunitydocumentationknowledge centerdeveloper centerideassubscription management ideasbilling payment ideasfinance ideasinsights ideaszuora salesforce ideasadmin settings ideasannouncementszuora announcementsrelease notificationspartner announcementsdiscussionssubscription managementbilling paymentsfinanceinsightszuora salesforceadmin settingsapiintegrations extensionsknowledge center apiwhat 's newrbm solutionssubscription managementcommercebilling paymentsfinancereportingconnectadminintegrations extensionsapiinsightshow \\? glossarygetting started zuora universityrest apirest apisoap apizoqlexport zoqlaggregate query api \\( aqua \\) articlesrest api introductionrest api basicsrest api referencerest sample code libraries knowledge center api rest api rest api table contentsadd article user guide browse zuora rest api articles get started sending requests webstore front integrations revenue recognition contentsreference \\( 86 \\) add article user guidehow articles describe steps completing end user task add new article follow steps select topic want add underclick new page top pageselect toreference articlesclose accounting perioddescribes close accounting period rest apicreate accounting perioddescribes create accounting period rest apidelete accounting perioddescribes delete accounting period rest apiget accounting perioddescribes query accounting period rest apiget accounting periodsdescribes query accounting periods tenant rest apire open accounting perioddescribes open accounting period rest apirun trial balancedescribes run trial balance rest apiset accounting period pending closedescribes set accounting period pending close rest apiupdate accounting perioddescribes update accounting period rest apicreate accountdescribes rest method creating customer account credit card payment method bill contact optional sold contactget accountdescribes rest method retrieve basic information customer accountget account summarydescribes rest method retrieving detailed information customer account including subscriptions invoices payments usageupdate accountdescribes rest method updating customer account specifying account keycatalogdescribes rest request retrieving entire product catalog including products features corresponding rate plans charges connectionsdescribes rest method establishing connection zuora rest api serviceget filesdescribes retrieve files rest api specifying file idget revenue automation start datedescribes rest method getting revenue automation start datehmac signaturesdescribes rest method returning unique signature token values used process cors enabled api callhosted pagesdescribes rest method returning payment pages configuration metadata page id page version payment method typequotes documentdescribes rest method posting quote documentsrevenue itemsdescribes rest revenue items resource group includes methods get revenue items either charge revenue summary number revenue event number revenue schedule includes methods update custom fieldsrevenue rules get rule associated chargedescribes rest method get revenue recognition rule associated subscription charge specifying charge idrevenue schedulesthe rest revenue schedule resource group includes methods create update get revenue schedules methods distribute revenuersa signaturesdescribes rest method generating returning digital signature token payment pages 2 0 formget charge summary details crs numberdescribes rest method retrieving charge revenue summary details specifying charge revenue summary number \\( crs \\) get charge revenue summary details charge iddescribes rest method retrieving charge revenue summary details specifying subscription charge idactivate accounting codedescribes activate accounting code rest apicreate accounting codedescribes create new accounting code rest apideactivate accounting codedescribes deactivate accounting code rest apidelete accounting codedescribes delete accounting code rest apiget accounting codedescribes query accounting code rest apiget accounting codesdescribes query accounting codes chart accounts rest apiupdate accounting codedescribes update existing accounting code rest apiget custom foreign currency exchange ratesdescribes get data custom foreign exchange rates rest apicancel journal rundescribes cancel journal run using rest apicreate journal rundescribes rest method creating journal rundelete journal rundescribes delete journal run using rest apiget journal rundescribes rest method getting information journal runperform mass actiondescribes perform mass action rest apiget mass action resultdescribes get information result mass action rest apistop mass actiondescribes stop mass action rest apiget callout notification historiesdescribes rest method retrieving notification history calloutsget email notification historiesdescribes rest method retrieving history notification emailsevent categories notification historiesdescribes event categories notification historiescreate payment methoddescribes rest method creating new credit card payment method customer accountget payment methodsdescribes rest method retrieving credit card information specific customer accountupdate payment methoddescribes rest method updating credit card payment method specific customer accountdelete payment methoddescribes rest method deleting credit payment method associated customer accountget revenue event detailsdescribes rest method getting revenue event details specifying revenue event numberget revenue events revenue scheduledescribes rest method getting revenue events revenue schedule specifying revenue schedule numberget revenue items charge revenue summary numberdescribes rest method getting revenue item details specifying charge revenue summary numberget revenue items revenue event numberdescribes rest method getting details revenue item associated revenue eventget revenue items revenue scheduledescribes rest method getting details revenue item associated revenue scheduleupdate custom fields revenue items revenue event numberdescribes rest method updating custom fields revenue items specifying revenue event numberupdate custom fields revenue items revenue schedule numberdescribes rest method updating custom fields revenue items specifying revenue schedule numbercreate revenue schedule invoice item \\( distribute date range \\) describes rest method creating revenue schedule invoice item distributing revenue date rangecreate revenue schedule invoice item \\( manual distribution \\) describes rest method creating revenue schedule invoice item distributing revenue manuallycreate revenue schedule invoice item adjustment \\( distribute date range \\) describes rest method creating revenue schedule invoice item adjustment distributing revenue date rangecreate revenue schedule invoice item adjustment \\( manual distribution \\) describes rest method creating revenue schedule invoice item adjustment distributing revenue manuallycreate revenue schedule subscription chargedescribes rest method creating revenue schedule specifying subscription chargedelete revenue scheduledescribes rest method deleting revenue scheduledistribute revenue across accounting periodsdescribes rest method distributing revenue specifying revenue schedule numberdistribute revenue specific datedescribes rest method distributing revenue specific datedistribute revenue recognition start end datesdescribes rest method distributing revenue specifying recognition start end datesget revenue schedule invoice itemdescribes rest method getting details revenue schedule specifying invoice item identfierget revenue schedule invoice item adjustmentdescribes rest method getting details revenue schedule specifying invoice item adjustment identiferget revenue schedule detailsdescribes rest method getting details revenue schedule specifying revenue schedule numberget revenue schedule details subscription chargedescribes rest method getting details revenue schedule specifying subscription charge idupdate revenue schedule basic informationdescribes rest method updating basic information associated revenue scheduledecryptdescribes rest method decrypting digital signature payment pages 2 0 form validating signature keypreview subscriptiondescribes rest method creating subscription preview modecreate subscriptiondescribes rest method creating subscription existing customer accountget subscriptions accountdescribes rest method getting subscriptions associated customer accountupdate subscriptiondescribes rest method updating subscription adding note changing renewal term adding rate plan changing quantity rate planrenew subscriptiondescribes rest method renewing termed subscription using existing renewal termscancel subscriptiondescribes rest method canceling active subscriptioncreate summary journal entrydescribes rest method creating summary journal entrycancel summary journal entrydescribes cancel summary journal entry using rest apidelete summary journal entrydescribes delete summary journal entry using rest apiget summary journal entries journal rundescribes rest method getting information summary journal entries associated journal runget summary journal entrydescribes rest method getting summary journal entryupdate basic information summary journal entrydescribes rest method updating basic information summary journal entryget paymentsdescribes rest method getting payments processed specified customer accountinvoice collectdescribes rest method generating invoices collecting payments based default payment associated customer accountpost usagedescribes post import usage data one accounts csv format using zuora rest api get usagethis rest api reference describes retrieve usage details account articles article type topic could found rest api introductionintroduces benefits using zuora rest apirest api referencelists zuora rest api resources methodsaccounting periodsaccountscharge revenue summariescustom exchange ratejournal runsmass updaternotification historypayment methodsrevenue eventssubscriptionssummary journal entriestransactionsusagecatalogconnectionsget filesget revenue automation start datehmac signatureshosted pagesquotes documentrevenue itemsrevenue rules get rule associated chargerevenue schedulesrsa signaturesmore less rest api basicshelps get started zuora rest apizuora cors restresponses errorsrest sample code librariesprovides list software development kits available use rest api methods previous next save pdf email page last modified 08 10 3 jun 2015 related articles recommended articles tags rest api classifications translation status \\( set \\) apply new tags subpages \\? finding subpages updating update subpagescancel copyright 2017 zuora powered mindtouch li padding right 6em important footer nav main link font weight bold footer colophon p font family brandon grotesque 'helvetica neue' helvetica arial sans serif important z footer ul li hover color 6c97a2 zuora vision product customers marketplace support community knowledge center developer center training support center trust story team news press awards careers contact events subscribed regional webinars user groups social facebook linkedin twitter medium instagram youtube slideshare 2017 zuora inc sitemap privacy statement terms conditions", 
    "descr4": "sign forgot password loginemployee logincustomer logincommunitydocumentationknowledge centerdeveloper centerideassubscription management ideasbilling payment ideasfinance ideasinsights ideaszuora salesforce ideasadmin settings ideasannouncementszuora announcementsrelease notificationspartner announcementsdiscussionssubscription managementbilling paymentsfinanceinsightszuora salesforceadmin settingsapiintegrations extensionsknowledge center apiwhat 's newrbm solutionssubscription managementcommercebilling paymentsfinancereportingconnectadminintegrations extensionsapiinsightshow \\? glossarygetting started zuora universityrest apirest apisoap apizoqlexport zoqlaggregate query api \\( aqua \\) rest api referencerest api introductionrest api basicsrest api referencerest sample code librariesarticlesaccounting periodsaccountsamendmentsattachmentscatalogcharge revenue summarieschart accountsconnectionscustom exchange rateget filesget revenue automation start datehmac signatureshosted pagesjournal runsmass updaternotification historypayment methodsquotes documentrevenue eventsrevenue itemsrevenue rules get rule associated chargerevenue schedulesrsa signaturessubscriptionssummary journal entriestransactionsusage knowledge center api rest api rest api reference rest api reference table contentsresources methods zuora provides many rest resources accounts subscriptions support several methods exceptions catalog returns zuora product catalog connections logs create session cookie general rest api duplicate functions soap api instead supports basic use cases needed web based self service storefront resources methods complete list resources methods accounting periodsclose accounting periodcreate accounting perioddelete accounting periodget accounting periodget accounting periodsre open accounting periodrun trial balanceset accounting period pending closeupdate accounting periodaccountscreate accountget accountget account summaryupdate accountamendmentsget amendments keyget amendments subscription idattachmentsadd attachmentdelete attachmentedit attachmentview attachmentview attachment listcatalogcharge revenue summariesget charge summary details crs numberget charge revenue summary details charge idchart accountsactivate accounting codecreate accounting codedeactivate accounting codedelete accounting codeget accounting codeget accounting codesupdate accounting codeconnectionscustom exchange rateget custom foreign currency exchange ratesget filesget revenue automation start datehmac signatureshosted pagesjournal runscancel journal runcreate journal rundelete journal runget journal runmass updaterperform mass actionget mass action resultstop mass actionnotification historyget callout notification historiesget email notification historiesevent categories notification historiespayment methodscreate payment methodget payment methodsupdate payment methoddelete payment methodquotes documentrevenue eventsget revenue event detailsget revenue events revenue schedulerevenue itemsget revenue items charge revenue summary numberget revenue items revenue event numberget revenue items revenue scheduleupdate custom fields revenue items revenue event numberupdate custom fields revenue items revenue schedule numberrevenue rules get rule associated chargerevenue schedulescreate revenue schedule invoice item \\( distribute date range \\) create revenue schedule invoice item \\( manual distribution \\) create revenue schedule invoice item adjustment \\( distribute date range \\) create revenue schedule invoice item adjustment \\( manual distribution \\) create revenue schedule subscription chargedelete revenue scheduledistribute revenue across accounting periodsdistribute revenue specific datedistribute revenue recognition start end datesget revenue schedule invoice itemget revenue schedule invoice item adjustmentget revenue schedule detailsget revenue schedule details subscription chargeupdate revenue schedule basic informationrsa signaturesdecryptsubscriptionspreview subscriptioncreate subscriptionget subscriptions accountupdate subscriptionrenew subscriptioncancel subscriptionget subscriptions keyresume subscriptionsuspend subscriptionsummary journal entriescreate summary journal entrycancel summary journal entrydelete summary journal entryget summary journal entries journal runget summary journal entryupdate basic information summary journal entrytransactionsget invoicesget paymentsinvoice collectusagepost usageget usage previous next save pdf email page last modified 08 59 3 feb 2016 related articles recommended articles tags rest api classifications translation status \\( set \\) apply new tags subpages \\? finding subpages updating update subpagescancel copyright 2017 zuora powered mindtouch li padding right 6em important footer nav main link font weight bold footer colophon p font family brandon grotesque 'helvetica neue' helvetica arial sans serif important z footer ul li hover color 6c97a2 zuora vision product customers marketplace support community knowledge center developer center training support center trust story team news press awards careers contact events subscribed regional webinars user groups social facebook linkedin twitter medium instagram youtube slideshare 2017 zuora inc sitemap privacy statement terms conditions", 
    "descr3": "redoc body api content span font family museo sans 'helvetica neue' helvetica arial sans serif important redoc body link redoc body color 6ec5ab font weight 500 redoc body hover color 5ea58e cursor pointer left panel redoc body nghost redoc 39 margin 90px 0 0 redoc body menu content resources nav menu cat menu cat header resources nav menu subitems li background color ffffff letter spacing 05em resources nav menu content h5 menu header font size 20px text transform uppercase resources nav menu header padding 10px 20px letter spacing 05em font size 16px color 384b5d resources nav menu item depth 1 menu item header \\( disabled \\) hover menu item depth 1 active menu item header color 384b5d important resources nav menu cat header color a9b4bf letter spacing 05em important text transform uppercase important font size 13px important font weight 500 important resources nav menu cat header hover resources nav menu subitems li hover resources nav menu cat header active color 384b5d resources nav menu cat header hover resources nav menu subitems li label hover background color e9ebee resources nav menu subitems li label resources nav menu subitems li label font size 13px color a9b4bf font family museo sans 'helvetica neue' helvetica arial sans serif important font weight 300 resources nav menu subitems li label hover resources nav menu subitems li label active menu item depth 2 menu item header hover menu item depth 2 active menu item header background color e9ebee important color 384b5d important content middle panel api content h1 font size 1 8em text transform uppercase font weight 100 color 384b5d api content tag info padding 20px 45px api content p api content ul api content li api content label color 687c8c font size 16px line height 24px letter spacing 05em font weight 300 mark background 384b5d color fff search results li color 384b5d important api content openapi button padding 5px 15px border radius 4px color fff important background color 6ec5ab border color transparent important api content openapi button hover background color 5ea58e api content method padding bottom 20px api content method content padding 0px 40px 40px 40px api content param required color c05f68 api content zippy success zippy title color 6ec5ab important background color d4ece9 important api content zippy indicator api content zippy success zippy title polygon fill 6ec5ab api content nested schema background f2f2f2 api content param name span background color 9fb1bf api content param name api content param schema td border left 1px solid 9fb1bf api content param name span border top 1px solid 9fb1bf api content param first type param name api content params wrap param last param name color f2f2f2 background color transparent border color transparent api content param first type param name color f2f2f2 background color transparent border color transparent api content param first type param name color f2f2f2 background color transparent border color transparent api content nested schema param first type param name api content param last param name border color f2f2f2 api content nested schema api content nested schema border top color transparent border width 0 left 0 api content param param name color ffffff api content svg polygon fill 687c8c api content params wrap params array api content params wrap params array color 687c8c api content hint top left api content hint top right api content hint top color 384b5d api content class hint background 4d4d4d color e9ebee padding 15px font size 12px font family museo sans 'helvetica neue' helvetica arial sans serif border radius 4px line height 20px important api content action buttons class hint box shadow 0 0 30px 4px 333 api content code color 87e8c7 api content redoc markdown block code background color 4d4d4e api content p code color 87e8c7 border 1px solid 4d4d4e right code panel api content method samples header ngcontent iom 7 api content method samples h4 color e9ebee important letter spacing 05em api content method endpoint h5 padding 5px background color f2f2f2 color 4d4d4d important api content api url color e9ebee font size 1em important font family museo sans 'helvetica neue' helvetica arial sans serif important api content method api url path color 87e8c7 font size 1em important font family museo sans 'helvetica neue' helvetica arial sans serif important api content property color d0d4d8 api content type string color 6ec5ab api content hoverable type boolean color c05f68 api content tab success box shadow 0 0 3px 0 6ec5ab background color 6ec5ab api content redoc json margin bottom 0 api content pre border 2px solid 2d2d2d box shadow 0 0 30px 3px 2d2d2d color fff font family menlo monaco consolas courier new monospace api content pre span border none color fff font family menlo monaco consolas courier new monospace api content tabs ul li color fff api content tabs ul li active color 263238 background actual api content method endpoint api content method samples background 4d4d4d important api content redoc json background color 1e272c api content responses samples overflow visible api content action buttons padding 15px 10px 15px 0 api content action buttons span hover background color transparent api content hint inversed border top color 4d4d4d redoc body api logo background image url \\( 'https www zuora com wp content uploads 2016 10 zuora dev logo api ref svg' \\) background repeat repeat background position center background color ffffff position fixed z index 99999 width 248px height 80px display none resources nav margin top 30px redoc body api logo img display none api ref logo position fixed top 0 left 0 background color ffffff position fixed z index 99999 width 262px height 80px text align center hiding figure js acting mobile nav display none important top header position relative important background ffffff important top header header nav ul li color 384b5d important developer logo link background url \\( wp content uploads 2016 09 zuora dev logo svg' \\) background repeat repeat media \\( max width 783px \\) anchored menu content top 65px important menu content side menu display none top header placeholder height 0 important share link display none important api ref logo position fixed top 0 left 0 background color ffffff position fixed z index 99999 width 100 height 83px text align center border bottom 1px solid cccccc api ref logo img width 250px", 
    "descr2": "sign forgot password loginemployee logincustomer logincommunitydocumentationknowledge centerdeveloper centerideassubscription management ideasbilling payment ideasfinance ideasinsights ideaszuora salesforce ideasadmin settings ideasannouncementszuora announcementsrelease notificationspartner announcementsdiscussionssubscription managementbilling paymentsfinanceinsightszuora salesforceadmin settingsapiintegrations extensions categorieswhat 's newrbm solutionssubscription managementcommercebilling paymentsfinancereportingconnectadminintegrations extensionsapiinsightshow \\? glossarygetting started zuora university knowledge center knowledge center table contentsdocs z azuora 's rbm solutionsmanage extendrelease notesgetting startedadditional topics docs z explore depth knowledge base zuora community knowledge center release notes announcements zuora 's rbm solutions set manage subscription business zuora 's relationship business management solutions subscription management billing payments finance insights reporting zuora salesforce manage extend configure manage relationship business management platform grow scale subscription management system admin settings connect integrations extensions api release notes zuora release notes zuora quotes release notes zuora 360 release notes product versions release dates getting started training resources getting started tutorial additional topics zuora editions zuora environments zuora policies previous next save pdf email page last modified 23 09 15 mar 2017 contribute share contentcommentsstart conversation commenting page contribute information reply user 's comments comments section found bottom article learn morehow contribute share contentfeedbackprovide us valuable feedback content site article helpful \\? click yes click leave feedback tell us improve learn morehow contribute share contentnotificationsreceive notifications pages child pages get updated comments added attached every page ability subscribe updates look notification icon tray next print icon learn moresite statistics751 registered user \\( \\) 1 003 tag \\( \\) 2 129 page \\( \\) 28 380 page edit \\( \\) related articles recommended articles tags page custom tags classifications translation status \\( set \\) apply new tags subpages \\? finding subpages updating update subpagescancel copyright 2017 zuora powered mindtouch li padding right 6em important footer nav main link font weight bold footer colophon p font family brandon grotesque 'helvetica neue' helvetica arial sans serif important z footer ul li hover color 6c97a2 zuora vision product customers marketplace support community knowledge center developer center training support center trust story team news press awards careers contact events subscribed regional webinars user groups social facebook linkedin twitter medium instagram youtube slideshare 2017 zuora inc sitemap privacy statement terms conditions", 
    "descr1": "sign forgot password loginemployee logincustomer logincommunitydocumentationknowledge centerdeveloper centerideassubscription management ideasbilling payment ideasfinance ideasinsights ideaszuora salesforce ideasadmin settings ideasannouncementszuora announcementsrelease notificationspartner announcementsdiscussionssubscription managementbilling paymentsfinanceinsightszuora salesforceadmin settingsapiintegrations extensionsknowledge center apiwhat 's newrbm solutionssubscription managementcommercebilling paymentsfinancereportingconnectadminintegrations extensionsapiinsightshow \\? glossarygetting started zuora universityguidesrest apisoap apizoqlexport zoqlaggregate query api \\( aqua \\) knowledge center api api table contentshelp resourcesrecommended links help resourcesrecommended linksrest apirest api introductionrest api basicsrest api referencezoqlfilter statementsquery statement examplesexport zoqlexport zoql select statementsexport zoql clausesexport zoql filter statementsaggregate query api \\( aqua \\) aqua api introductiongetting started aquapost queryaqua job finderzuora salesforce development resourceszuora salesforce component libraryorder buildersoap apisoap api object relationshipssoap api object referencesoap api callssoap api complex types previous next save pdf email page last modified 17 29 27 feb 2017 related articles recommended articles tags page custom tags classifications translation status \\( set \\) apply new tags subpages \\? finding subpages updating update subpagescancel copyright 2017 zuora powered mindtouch li padding right 6em important footer nav main link font weight bold footer colophon p font family brandon grotesque 'helvetica neue' helvetica arial sans serif important z footer ul li hover color 6c97a2 zuora vision product customers marketplace support community knowledge center developer center training support center trust story team news press awards careers contact events subscribed regional webinars user groups social facebook linkedin twitter medium instagram youtube slideshare 2017 zuora inc sitemap privacy statement terms conditions", 
    "crawled_date": "2017-06-10T13:59:47.752781"
  }, 
  "62": {
    "api_url": "zeevex.com", 
    "progweb_url": "https://www.programmableweb.com/api/zeevex-game-wallet", 
    "progweb_date": "11.16.2012", 
    "progweb_descr": "Zeevex is a virtual currency sold on gift cards in retailers across the USA, and designed to be used for online games and other digital content. The Zeevex Game Wallet provides a RESTful interface for merchants to interact directly with purchase requests.", 
    "api_name": "Zeevex Game Wallet", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:37.997794"
  }, 
  "322": {
    "api_url": "chargeio.com", 
    "progweb_url": "https://www.programmableweb.com/api/chargeio-merchant", 
    "progweb_date": "06.03.2016", 
    "progweb_descr": "ChargeIO is an Austin based payment processing platform for ACH and credit card payments. The Merchant API is used to access and edit merchant and accounts information, and it allows accepting and refunding payments to bank accounts and cards. Additionally, secure storage and customer information retrieval are supported. This API uses JSON for data exchange, and Tokens for authentication.", 
    "api_name": "ChargeIO Merchant", 
    "progweb_cat": "Payments,Automation", 
    "crawled_date": "2017-06-10T13:59:26.381096"
  }, 
  "323": {
    "api_url": "buckybox.com", 
    "progweb_url": "https://www.programmableweb.com/api/bucky-box", 
    "progweb_date": "06.07.2016", 
    "progweb_descr": "The Bucky Box API simplifies the integration of shopping carts for third-party sites. Users can also embed it as a turnkey system for channeling new customers along with new orders into the Bucky Box ecommerce platform for food distribution. The API is a full release and well documented version that requires authorized access through an API Key. Developers must contact the API provider to access the instructions for purchasing API Keys.", 
    "api_name": "Bucky Box", 
    "progweb_cat": "eCommerce,Ordering", 
    "crawled_date": "2017-06-10T13:59:26.379885"
  }, 
  "320": {
    "api_url": "digitzs.com", 
    "progweb_url": "https://www.programmableweb.com/api/digitzs", 
    "progweb_date": "05.29.2016", 
    "progweb_descr": "The Digitzs REST API allows developers to access and integrate the functionality of Digitzs with other applications. Some example API methods include managing merchants, managing and accepting payments, and managing customers. Digitzs provides payment processing tools for applications and platforms so users can accept payments in applications and on platforms.", 
    "api_name": "Digitzs", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:26.383564"
  }, 
  "321": {
    "api_url": "satoshipay.io", 
    "progweb_url": "https://www.programmableweb.com/api/satoshipay", 
    "progweb_date": "05.31.2016", 
    "progweb_descr": "You can use the SatoshiPay API to make digital goods like articles, images, video/audio and downloadable files available for purchase using the SatoshiPay widget. SatoshiPay is a nanopayment / bitcoin payment platform for web content.", 
    "api_name": "SatoshiPay", 
    "progweb_cat": "Payments,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:26.382344"
  }, 
  "326": {
    "api_url": "alternativepayments.com", 
    "progweb_url": "https://www.programmableweb.com/api/alternative-payments", 
    "progweb_date": "06.22.2016", 
    "progweb_descr": "Alternative Payments is an eCommerce payment provider based in California which features a Smart Button that automatically displays the consumer's local payment solutions. This platform offers direct debit, bank transfer, and credit transfer options. The Alternative Payments REST API offers integration with a real time payment acceptance method. JSON is used for data exchange, and HTTP Basic Auth for authentication.", 
    "api_name": "Alternative Payments", 
    "progweb_cat": "Payments,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:26.375540"
  }, 
  "327": {
    "api_url": "binfind.com", 
    "progweb_url": "https://www.programmableweb.com/api/binfind", 
    "progweb_date": "07.10.2016", 
    "progweb_descr": "The BINFind API determines the bank, type, and country of an issued card using it's first 6 digits (BIN number). Available in JSON and XML formats with GET and URL as API usage.", 
    "api_name": "BinFind", 
    "progweb_cat": "Financial,Banking", 
    "crawled_date": "2017-06-10T13:59:26.373937"
  }, 
  "324": {
    "api_url": "monei.net", 
    "progweb_url": "https://www.programmableweb.com/api/monei-payment-platform", 
    "progweb_date": "06.15.2016", 
    "progweb_descr": "MONEI is a payment gateway focused on the European market, and offers an AWS EC2 PCI compliant infrastructure. Prices are per transaction, and differ if the card used is European or non European. Additionally, customized pricing is available if transactions sum up to over \u20ac100,000 a month. MONEI offers its REST API which facilitates integration with MONEI's platform, and frontend widgets. JSON is used for data exchange, and HTTP Basic Auth for authentication.", 
    "api_name": "MONEI Payment Platform", 
    "progweb_cat": "Payments,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:26.378476"
  }, 
  "325": {
    "api_url": "mypaymentsavvy.com", 
    "progweb_url": "https://www.programmableweb.com/api/payment-savvy", 
    "progweb_date": "06.20.2016", 
    "progweb_descr": "Payment Savvy is a payment processing provider that offers ACH, credit card support, and online payment gateway. Additionally, it supports chargeback protection, recurring billing, and pay by texting. The Payment Savvy API integrates this platform with third party applications, and offers low rates and free payment processing using a convenience fee model.", 
    "api_name": "Payment Savvy", 
    "progweb_cat": "Payments,Billing", 
    "crawled_date": "2017-06-10T13:59:26.376994"
  }, 
  "328": {
    "api_url": "aligncommerce.com", 
    "progweb_url": "https://www.programmableweb.com/api/align-commerce", 
    "progweb_date": "07.14.2016", 
    "progweb_descr": "The Align Commerce API integrates payments via email. Developers can access with OAuth2 to make HTTP requests. Actions include issuing an access token, create new products, and list merchant invoices. Align Commerce is an ecommerce payment service provider (PSP).", 
    "api_name": "Align Commerce", 
    "progweb_cat": "Payments,Currency", 
    "crawled_date": "2017-06-10T13:59:26.372135"
  }, 
  "329": {
    "link1": "https://github.com/zipmark/rspec_api_documentation", 
    "api_url": "github.com", 
    "link3": "https://github.com/documentationjs/documentation", 
    "link2": "https://github.com/tootsuite/documentation", 
    "progweb_url": "https://www.programmableweb.com/api/incomm-agent-solutions-qpay", 
    "progweb_date": "07.25.2016", 
    "progweb_descr": "The Incomm Agent Solutions QPay API integrates the Incomm Agent Solutions payments processing interface into the point-of-sale (POS) transactional platforms of authorized vendors. The API is a full release that is accompanied by its latest documentation version.", 
    "api_name": "Incomm Agent Solutions QPay", 
    "progweb_cat": "Payments,Credit Cards", 
    "descr3": "skip content features business explore marketplace pricing sign sign watch 44 star 2 790 fork 169 documentationjs documentation code issues 117 pull requests 6 wiki insights pulse graphs documentation modern javascript http documentation js org documentation tool documentation jsdoc javascript babel 874 commits 25 branches 43 releases 51 contributors javascript 81 6 html 7 5 c 6 7 css 4 2 javascript html c css clone download clone https use git checkout svn using web url open desktop download zip find file branch master switch branches tags branches tags anchors links dangerous custom inference v1 dep upgrades greenkeeper babel traverse 6 25 0 greenkeeper babel traverse pin 6 24 1 greenkeeper chokidar 1 7 0 greenkeeper chokidar pin 1 6 1 greenkeeper eslint 4 0 0 greenkeeper flow bin 0 47 0 greenkeeper flow bin 0 48 0 greenkeeper fs extra pin 3 0 0 greenkeeper git url parse 7 0 0 greenkeeper highlight js 9 11 0 greenkeeper jest pin 20 0 3 greenkeeper js yaml pin 3 8 3 greenkeeper remark html 6 0 1 greenkeeper tiny lr 1 0 5 greenkeeper tiny lr pin 1 0 4 greenkeeper vfile 2 1 0 inline destructuring parameter docs master native nothing see special names utf8 test fixture nothing show v4 0 0 rc 1 v4 0 0 rc 0 v4 0 0 beta 19 v4 0 0 beta 18 v4 0 0 beta 17 v4 0 0 beta16 v4 0 0 beta15 v4 0 0 beta14 v4 0 0 beta13 v4 0 0 beta12 v4 0 0 beta11 v4 0 0 beta10 v4 0 0 beta9 v4 0 0 beta7 v4 0 0 beta6 v4 0 0 beta5 v4 0 0 beta4 v4 0 0 beta3 v4 0 0 beta2 v4 0 0 beta1 v4 0 0 beta v3 0 4 v3 0 3 v3 0 2 v3 0 1 v3 0 0 v2 1 0 alpha v2 0 1 v2 0 0 v2 0 0 alpha2 v1 4 0 v1 3 2 v1 3 1 v1 3 0 v1 2 0 v1 1 0 v1 0 7 v1 0 6 v1 0 5 v1 0 4 v1 0 3 v1 0 2 v1 0 1 nothing show new pull request latest commit 65f5a37 jun 8 2017 greenkeeper bot committed tmcw fix \\( package \\) update babel generator version 6 25 0 \\( 804 \\) permalink readme md documentation system modern javascript supports modern javascript es5 es2017 jsx flow type annotations infers parameters types membership write less documentation let computer write integrates github link directly documentation code refers customizable output html json markdown examples html output default template markdown json documentation getting started start usage use documentation js recipes tricks writing effective jsdoc docs node api documentation js 's self generated documentation configuring documentation js faq troubleshooting theming tips theming documentation output html see also list projects similar documentation js user guide globally install using npm package manager npm install g documentation installs command called path point jsdoc annotated source code generate human readable documentation first run option help usage generate markdown docs index js files references bin documentation js build index js f md generate html docs files src bin documentation js build src f html docs document index js ignoring files requires imports bin documentation js build index js f md shallow build serve html docs app js bin documentation js serve app js build serve live update html docs app js bin documentation js serve watch app js validate jsdoc syntax util js bin documentation js lint util js update api section readme md docs index js bin documentation js readme index js section api build docs values exported index js bin documentation js build document exported index js commands serve input generate update display html documentation build input build documentation lint input check common style uniformity mistakes readme input inject documentation readme md options version show version number boolean help show help boolean contributing plenty issues 'd love help robust complete support including typedefs strong support html markdown output documentation coverage statistics validation documentation open open source project means individuals making significant valuable contributions given commit access project contribute see fit project like open wiki standard guarded open source project contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "descr2": "skip content features business explore marketplace pricing sign sign watch 46 star 458 fork 286 tootsuite documentation code issues 13 pull requests 11 projects 0 insights pulse graphs full documentation repository mastodon https github com tootsuite mastodon mastodon 675 commits 2 branches 11 releases 203 contributors agpl 3 0 clone download clone https use git checkout svn using web url download zip find file branch master switch branches tags branches tags master revert 122 patch 1 nothing show v1 1 v1 0 v0 9 9 v0 9 v0 8 v0 7 v0 6 v0 1 2 v0 1 1 v0 1 0 last mastodon state nothing show new pull request latest commit eb317b3 jun 17 2017 foxsan48 committed wxcafe added missing info prod \\( 306 \\) added missing info changed login user creation corrected user creation login hopefully permalink readme md mastodon documentation mastodon free open source gnu social compatible social network server decentralized alternative commercial platforms avoids risks single company monopolizing communication anyone run mastodon participate social network seamlessly using mastodon frequently asked questions list mastodon instances apps user guide using api api documentation libraries streaming api documentation testing api curl oauth details tips app developers push notifications running mastodon please note highly recommended run tagged release mastodon run current branch resources needed production guide docker guide alternative running heroku development guide alternative development vagrant alternative development production nanobox administration guide maintenance tasks tuning mastodon system configuration alternatives contributing mastodon sponsors translate mastodon language report bugs submit ideas protocols list used specs rfcs federation extensions protocols contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "descr1": "skip content features business explore marketplace pricing sign sign watch 26 star 915 fork 229 zipmark rspec api documentation code issues 30 pull requests 8 projects 0 wiki insights pulse graphs automatically generate api documentation rspec 784 commits 4 branches 5 releases 61 contributors mit ruby 67 0 gherkin 26 2 html 5 8 1 0 ruby gherkin html clone download clone https use git checkout svn using web url open desktop download zip find file branch master switch branches tags branches tags gh pages master new dsl rename dsl methods nothing show v4 9 0 v4 8 0 v4 7 0 v4 4 0 5 0 0 nothing show new pull request latest commit 36a0c41 jun 6 2017 oestrich bump version permalink readme md rspec api doc generator generate pretty api docs rails apis check sample changes please see wiki latest changes installation add rspec api documentation gemfile bundle set specs require 'rails helper' require 'rspec api documentation dsl' resource orders get orders example listing orders request status 200 end end end generate docs viewers consider adding viewer enhance generated documentation rspec api documentation generate simple html viewers use generated json raddocs sinatra app apitome rails engine gemfile spec spec helper rb rspecapidocumentation configure config config format json end sample app see folder sample rails app documented configuration options values listed default values rspecapidocumentation configure config set application rack test uses config app rails application output folder config docs dir rails root join \\( doc api \\) array output format \\( \\) possible values json html combined text combined json json iodocs textile markdown append json slate api blueprint config format html location templates config template path inside gem filter example document type config filter filter example document type config exclusion filter nil used adding curl output docs config curl host nil used adding curl output docs allows filter headers needed curl request host cookie set array config curl headers filter nil default settings nil headers shown sometimes chatty setting parameters array headers render headers config request headers include nil config response headers include nil default examples resources ordered description set true keep source order config keep source order false change name api index pages config api name api documentation redefine method dsl thinks client useful need `let` client likely model config client method client change iodocs writer protocol config io docs protocol http define documentation groups well group allows generate multiple sets documentation config define group public config default group 's doc dir subfolder parent group based group 's name config docs dir rails root join \\( doc api public \\) change filter include public examples config filter public end change post body formatted default still override `raw post` json xml proc passed params config request body formatter proc new params params change response body formatted default proc called response content type response body default response content type `application json` pretty formated config response body formatter proc new response content type response body response body change embedded style html output file processed rspecapidocumentation plain css config html embedded css file nil removes dsl method `status` required parameter named status config disable dsl status removes dsl method `method` required parameter named method config disable dsl method end format json generates index file example files json html generates index file example files html combined text generates single file resource used raddocs command line docs combined json generates single file examples json iodocs generates docs style documentation textile generates index file example files textile markdown generates index file example files markdown api blueprint generates index file example files apiblueprint append json lets selectively run specs without destroying current documentation see section append json format cannot run formats delete entire documentation folder upon run format appends new examples index file writes run examples correct folder rake task allows format used easily rspec core raketask new \\( 'docs generate append' spec file \\) task args spec file task args spec file env doc format append json end pattern spec file 'spec acceptance spec rb' rspec opts format rspecapidocumentation apiformatter end env doc format json rspecapidocumentation configure config config format env doc format end rake docs generate append spec acceptance orders spec rb update current index 's examples include file examples inside rewritten api blueprint format \\( apib \\) additional functions apib groups urls together http verbs route orders orders collection get returns orders end delete deletes orders end end n't use param url states rest documentation apib attributes besides parameters use attributes exactly like 'd use \\( see documentation \\) filtering exclusion rspec api documentation lets determine examples get outputted final documentation filtering done via metadata key tag examples either single symbol array symbols also false make sure get outputted resource account get accounts parameter page page view default document example get list accounts request status 200 end n't actually document example purely testing purposes example get list page 2 document false request \\( page 2 \\) status 404 end example request ca n't change document example request get list page 3 page 3 status 404 end end post accounts parameter email user email example creating account document private request \\( email eric example com \\) status 201 end example creating account errors document private developers request status 422 end end end documents generated top folder document false examples never generated rspecapidocumentation configure config exclude document examples marked 'private' config define group non private config config exclusion filter private end document examples marked 'public' config define group public config config filter public end document examples marked 'developer' config define group developers config config filter developers end end dsl require dsl beginning acceptance spec rb file make sure require following pull dsl definitions require 'rspec api documentation dsl' example group methods resource create set documentation examples go together acts describe block resource orders end get head post put delete patch method sent along url resource orders post orders end get orders end head orders end put orders id let \\( id \\) order id example get order path orders 1 ` id` replaced value `id` end end delete orders id end patch orders id end end example rspec 's built example method hook metadata surrounding could also used resource orders post orders example creating order request make assertions end end end example request example except calls first step assertions required block similar pass hash last parameter passed along extra parameters become metadata like resource orders parameter name order name post orders example request creating order name name make assertions end end end explanation method takes string representing detailed explanation example resource orders post orders example creating order explanation method creates new order request make assertions end end end resource also explanation resource orders explanation orders top level business objects created post request post orders example creating order explanation method creates new order request make assertions end end end header method takes header name value value string symbol symbol symbol allowing header values resource orders header accept application json header x custom custom header let \\( custom header \\) dynamic get orders example request headers headers accept application json x custom dynamic end end end parameter method takes parameter name description optional hash extra metadata displayed raddocs extra columns method parameter name exists e g send returned value server url encoded data special values display red show 's required scope parameters hash scoping nested see example use specified method parameter value retrieving parameter value goes several steps option defined test case responds method method used test case responds scoped method method used overwise unscoped method used resource orders parameter auth token authentication token let \\( auth token \\) user authentication token post orders parameter name order name required true scope order parameter item order items scope order parameter item id item id scope order item method custom item id let \\( name \\) order let \\( order name \\) order let \\( item id \\) 1 let \\( custom item id \\) 1 let \\( order item item id \\) 1 example creating order params eq \\( order name order item item id 1 auth token auth token \\) end end end response field method takes response field name description optional hash extra metadata displayed raddocs extra columns special values scope response field hash resource orders response field page current page get orders example request getting orders expect \\( response body \\) eq \\( page 1 json \\) end end end also group metadata using options factor duplications resource orders post orders options scope order required true parameter name order name parameter item order items end options scope order response field id order id response field status order status end let \\( name \\) order let \\( item id \\) 1 example creating order expect \\( status \\) 201 end end end callback complicated see relish docs trigger callback pass method block evaluated cause application make request example methods callback url defines destination callback example see relish docs client returns test client makes requests documents responses resource order get orders example listing orders create order via api instead via factories client post orders order hash request status 200 end end end callback evaluate block passed cause application test make callback request see relish docs request sends request app parameters headers defined resource order get orders example listing orders request status 200 end end end doc wish make request via client included documentation inside doc block resource order get orders example listing orders doc create order via api instead via factories n't document client post orders order hash end request status 200 end end end params get hash parameters sent see documentation example header method takes header name value resource orders header accept application json end get orders example request headers headers accept application json end end end headers returns headers sent request see documentation example response body returns string containing response body previous request resource order get orders example listing orders request response body name order 1 json end end end response headers returns hash response headers previous request resource order get orders example listing orders request response headers content type application json end end end status response status returns numeric status code response eg 200 alias status status commonly parameter resource order get orders example listing orders request status 200 response status 200 end end end query string data sent query string instead post data used get requests resource orders parameter name let \\( name \\) order get orders example list orders query string name orders end end end raw post completely override gets sent parameters ing resource orders header content type application json parameter name let \\( name \\) order post orders let \\( raw post \\) params json example request create new order params get sent json end end end rake task gem contains railtie defines rake task generating docs easily rails loads files rake docs generate using rails use rake following task require 'rspec core rake task' desc 'generate api request documentation api specs' rspec core raketask new \\( 'docs generate' \\) pattern 'spec acceptance spec rb' rspec opts format rspecapidocumentation apiformatter end require 'rspec api documentation' load 'tasks docs rake' using rake rspec spec acceptance format rspecapidocumentation apiformatter uploading file example uploading file see gotchas rspec api documentation relies variable test client define please configure rspec api documentation use another one see configuration make heavy use rspec metadata actually use entire gem without dsl hand write metadata must use etc access data last response able use response object created contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "crawled_date": "2017-06-10T13:59:26.370186"
  }, 
  "201": {
    "api_url": "mifos.org", 
    "progweb_url": "https://www.programmableweb.com/api/mifos", 
    "progweb_date": "12.27.2013", 
    "progweb_descr": "Mifos is an organization comprised of microfinance institutions and IT and business professionals who work to expand the technological capacity of micro-lending networks to increase their impact around the world. The Mifos API allows users programmatic access to the Mifos platform through REST calls. An account is required with service.", 
    "api_name": "Mifos", 
    "progweb_cat": "Financial,Payments", 
    "crawled_date": "2017-06-10T13:59:33.647895"
  }, 
  "200": {
    "api_url": "payscape.com", 
    "progweb_url": "https://www.programmableweb.com/api/payscape-advisors", 
    "progweb_date": "12.23.2013", 
    "progweb_descr": "Payscape Advisors provides financial tools to help businesses accept payments, streamline their business, and increase cash flow. The Payscape Advisors\u00e2\u20ac\u2122 payment gateway is programmatically accessible through an API. Applications are able to request transactions through several methods, each with varying ease of integration, features, required resources, and level of security. The API is also able to retrieve transaction data and manage shopping carts.", 
    "api_name": "Payscape Advisors", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:33.648891"
  }, 
  "203": {
    "api_url": "imonggo.com", 
    "progweb_url": "https://www.programmableweb.com/api/imonggo", 
    "progweb_date": "12.29.2013", 
    "progweb_descr": "Imonggo is a web-based point of sale service that provides inventory management, sales analysis, and business intelligence. The Imonggo API allows users to integrate third party applications and website with the Imonggo platform. The API provides primary resources for access such as: products, customers, invoices, documents, and inventories. The API uses REST calls, returns XML, and uses SSL for authentication. An account is required with service.", 
    "api_name": "Imonggo", 
    "progweb_cat": "eCommerce,Payments", 
    "crawled_date": "2017-06-10T13:59:33.645842"
  }, 
  "202": {
    "api_url": "cloudlendinginc.com", 
    "progweb_url": "https://www.programmableweb.com/api/cloudlendinginc", 
    "progweb_date": "12.27.2013", 
    "progweb_descr": "Cloud Lending Inc provides technology to assist small and medium sized business to manage loan and investment portfolio for lending institutions. The Cloud Lending Inc platform allows creation of extensions for various industry verticals (eg Auto, P2P, Mortgage and Micro-Finance). The Cloud Lending Inc API allows users to integrate with the Lending Core and makes it possible to fully integrate the P2PFlex with an external website. The API lets users provide current loan information to both borrowers and investors. The API can also use the API to create investor and borrower dashboards on the website.", 
    "api_name": "CloudLendingInc", 
    "progweb_cat": "Financial,Social", 
    "crawled_date": "2017-06-10T13:59:33.646828"
  }, 
  "205": {
    "api_url": "myintervals.com", 
    "progweb_url": "https://www.programmableweb.com/api/myintervals", 
    "progweb_date": "12.30.2013", 
    "progweb_descr": "MyIntervals is a project management service that offers time tracking, project management, billing, and other project services. The MyIntervals API allows users to sync Intervals tasks with another applications, create tasks or add time quickly create graphs or reports based on time entries within a company, create a client overview showing current activity and what is being worked on by whom, and other execute other functions. An account is required with service.  The API uses REST calls, and returns XML.", 
    "api_name": "MyIntervals", 
    "progweb_cat": "Project Management,Financial", 
    "crawled_date": "2017-06-10T13:59:33.643917"
  }, 
  "204": {
    "api_url": "smallinvoice.de", 
    "progweb_url": "https://www.programmableweb.com/api/smallinvoice", 
    "progweb_date": "12.30.2013", 
    "progweb_descr": "SmallInvoice is an invoice servce designed for small and medium sized businesses, as well as freelance workers. The base service is free to use, and additional tiers of service are available. The SmallInvoice API uses REST calls and allows users to perform tasks involving user accounts and invoices. Sample calls include creating invoices, submitting invoices, accepting offers, drafting receipts, and other calls. An account is required with service.", 
    "api_name": "SmallInvoice", 
    "progweb_cat": "Financial,Accounting", 
    "crawled_date": "2017-06-10T13:59:33.644839"
  }, 
  "207": {
    "api_url": "moltin.com", 
    "progweb_url": "https://www.programmableweb.com/api/moltin-v1", 
    "progweb_date": "01.17.2014", 
    "progweb_descr": "Unified APIs for inventory, carts, the checkout process, payments and more, so you can focus on creating seamless customer experiences at any scale.  Moltin is a SaaS cloud based eCommerce platform for developers. Moltin provides decoupled components to create customised solutions for websites, mobile and desktop applications, as well as powering physical retail stores through point-of-sale and stock management systems.  Core components of the API include, inventory management (products & variations, categories, collections, brands), carts, orders, customers, addresses, checkout and payment gateways. As a developer you can choose which of these components to use in your project and create completely unique checkout flows without the limitations found in existing e-commerce solutions.  You can use Moltin anywhere to do any kind of commerce you or your client wants in any programming language.  Having one centralized cloud based e-commerce platform allows you to have multiple store fronts across a range of devices. This even allows you to switch out and/or upgrade your front end technology without having to completely migrate between systems.", 
    "api_name": "Moltin V1", 
    "progweb_cat": "eCommerce,Addresses", 
    "crawled_date": "2017-06-10T13:59:33.642054"
  }, 
  "206": {
    "link1": "https://github.com/zipmark/rspec_api_documentation", 
    "api_url": "github.com", 
    "link3": "https://github.com/documentationjs/documentation", 
    "link2": "https://github.com/tootsuite/documentation", 
    "progweb_url": "https://www.programmableweb.com/api/gittip", 
    "progweb_date": "01.17.2014", 
    "progweb_descr": "Gittip is a weekly crowdfunding \"gifting\" platform. Users of Gittip can send and received weekly payments to and from other Gittip users.   The Gittip API allows developers to access and integrate the functionality of Gittip with other applications. Some example API methods include returning payment information, retrieving stats, and managing user information.", 
    "api_name": "Gittip", 
    "progweb_cat": "Payments,Charity", 
    "descr3": "skip content features business explore marketplace pricing sign sign watch 44 star 2 790 fork 169 documentationjs documentation code issues 117 pull requests 6 wiki insights pulse graphs documentation modern javascript http documentation js org documentation tool documentation jsdoc javascript babel 874 commits 25 branches 43 releases 51 contributors javascript 81 6 html 7 5 c 6 7 css 4 2 javascript html c css clone download clone https use git checkout svn using web url open desktop download zip find file branch master switch branches tags branches tags anchors links dangerous custom inference v1 dep upgrades greenkeeper babel traverse 6 25 0 greenkeeper babel traverse pin 6 24 1 greenkeeper chokidar 1 7 0 greenkeeper chokidar pin 1 6 1 greenkeeper eslint 4 0 0 greenkeeper flow bin 0 47 0 greenkeeper flow bin 0 48 0 greenkeeper fs extra pin 3 0 0 greenkeeper git url parse 7 0 0 greenkeeper highlight js 9 11 0 greenkeeper jest pin 20 0 3 greenkeeper js yaml pin 3 8 3 greenkeeper remark html 6 0 1 greenkeeper tiny lr 1 0 5 greenkeeper tiny lr pin 1 0 4 greenkeeper vfile 2 1 0 inline destructuring parameter docs master native nothing see special names utf8 test fixture nothing show v4 0 0 rc 1 v4 0 0 rc 0 v4 0 0 beta 19 v4 0 0 beta 18 v4 0 0 beta 17 v4 0 0 beta16 v4 0 0 beta15 v4 0 0 beta14 v4 0 0 beta13 v4 0 0 beta12 v4 0 0 beta11 v4 0 0 beta10 v4 0 0 beta9 v4 0 0 beta7 v4 0 0 beta6 v4 0 0 beta5 v4 0 0 beta4 v4 0 0 beta3 v4 0 0 beta2 v4 0 0 beta1 v4 0 0 beta v3 0 4 v3 0 3 v3 0 2 v3 0 1 v3 0 0 v2 1 0 alpha v2 0 1 v2 0 0 v2 0 0 alpha2 v1 4 0 v1 3 2 v1 3 1 v1 3 0 v1 2 0 v1 1 0 v1 0 7 v1 0 6 v1 0 5 v1 0 4 v1 0 3 v1 0 2 v1 0 1 nothing show new pull request latest commit 65f5a37 jun 8 2017 greenkeeper bot committed tmcw fix \\( package \\) update babel generator version 6 25 0 \\( 804 \\) permalink readme md documentation system modern javascript supports modern javascript es5 es2017 jsx flow type annotations infers parameters types membership write less documentation let computer write integrates github link directly documentation code refers customizable output html json markdown examples html output default template markdown json documentation getting started start usage use documentation js recipes tricks writing effective jsdoc docs node api documentation js 's self generated documentation configuring documentation js faq troubleshooting theming tips theming documentation output html see also list projects similar documentation js user guide globally install using npm package manager npm install g documentation installs command called path point jsdoc annotated source code generate human readable documentation first run option help usage generate markdown docs index js files references bin documentation js build index js f md generate html docs files src bin documentation js build src f html docs document index js ignoring files requires imports bin documentation js build index js f md shallow build serve html docs app js bin documentation js serve app js build serve live update html docs app js bin documentation js serve watch app js validate jsdoc syntax util js bin documentation js lint util js update api section readme md docs index js bin documentation js readme index js section api build docs values exported index js bin documentation js build document exported index js commands serve input generate update display html documentation build input build documentation lint input check common style uniformity mistakes readme input inject documentation readme md options version show version number boolean help show help boolean contributing plenty issues 'd love help robust complete support including typedefs strong support html markdown output documentation coverage statistics validation documentation open open source project means individuals making significant valuable contributions given commit access project contribute see fit project like open wiki standard guarded open source project contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "descr2": "skip content features business explore marketplace pricing sign sign watch 46 star 458 fork 286 tootsuite documentation code issues 13 pull requests 11 projects 0 insights pulse graphs full documentation repository mastodon https github com tootsuite mastodon mastodon 675 commits 2 branches 11 releases 203 contributors agpl 3 0 clone download clone https use git checkout svn using web url download zip find file branch master switch branches tags branches tags master revert 122 patch 1 nothing show v1 1 v1 0 v0 9 9 v0 9 v0 8 v0 7 v0 6 v0 1 2 v0 1 1 v0 1 0 last mastodon state nothing show new pull request latest commit eb317b3 jun 17 2017 foxsan48 committed wxcafe added missing info prod \\( 306 \\) added missing info changed login user creation corrected user creation login hopefully permalink readme md mastodon documentation mastodon free open source gnu social compatible social network server decentralized alternative commercial platforms avoids risks single company monopolizing communication anyone run mastodon participate social network seamlessly using mastodon frequently asked questions list mastodon instances apps user guide using api api documentation libraries streaming api documentation testing api curl oauth details tips app developers push notifications running mastodon please note highly recommended run tagged release mastodon run current branch resources needed production guide docker guide alternative running heroku development guide alternative development vagrant alternative development production nanobox administration guide maintenance tasks tuning mastodon system configuration alternatives contributing mastodon sponsors translate mastodon language report bugs submit ideas protocols list used specs rfcs federation extensions protocols contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "descr1": "skip content features business explore marketplace pricing sign sign watch 26 star 915 fork 229 zipmark rspec api documentation code issues 30 pull requests 8 projects 0 wiki insights pulse graphs automatically generate api documentation rspec 784 commits 4 branches 5 releases 61 contributors mit ruby 67 0 gherkin 26 2 html 5 8 1 0 ruby gherkin html clone download clone https use git checkout svn using web url open desktop download zip find file branch master switch branches tags branches tags gh pages master new dsl rename dsl methods nothing show v4 9 0 v4 8 0 v4 7 0 v4 4 0 5 0 0 nothing show new pull request latest commit 36a0c41 jun 6 2017 oestrich bump version permalink readme md rspec api doc generator generate pretty api docs rails apis check sample changes please see wiki latest changes installation add rspec api documentation gemfile bundle set specs require 'rails helper' require 'rspec api documentation dsl' resource orders get orders example listing orders request status 200 end end end generate docs viewers consider adding viewer enhance generated documentation rspec api documentation generate simple html viewers use generated json raddocs sinatra app apitome rails engine gemfile spec spec helper rb rspecapidocumentation configure config config format json end sample app see folder sample rails app documented configuration options values listed default values rspecapidocumentation configure config set application rack test uses config app rails application output folder config docs dir rails root join \\( doc api \\) array output format \\( \\) possible values json html combined text combined json json iodocs textile markdown append json slate api blueprint config format html location templates config template path inside gem filter example document type config filter filter example document type config exclusion filter nil used adding curl output docs config curl host nil used adding curl output docs allows filter headers needed curl request host cookie set array config curl headers filter nil default settings nil headers shown sometimes chatty setting parameters array headers render headers config request headers include nil config response headers include nil default examples resources ordered description set true keep source order config keep source order false change name api index pages config api name api documentation redefine method dsl thinks client useful need `let` client likely model config client method client change iodocs writer protocol config io docs protocol http define documentation groups well group allows generate multiple sets documentation config define group public config default group 's doc dir subfolder parent group based group 's name config docs dir rails root join \\( doc api public \\) change filter include public examples config filter public end change post body formatted default still override `raw post` json xml proc passed params config request body formatter proc new params params change response body formatted default proc called response content type response body default response content type `application json` pretty formated config response body formatter proc new response content type response body response body change embedded style html output file processed rspecapidocumentation plain css config html embedded css file nil removes dsl method `status` required parameter named status config disable dsl status removes dsl method `method` required parameter named method config disable dsl method end format json generates index file example files json html generates index file example files html combined text generates single file resource used raddocs command line docs combined json generates single file examples json iodocs generates docs style documentation textile generates index file example files textile markdown generates index file example files markdown api blueprint generates index file example files apiblueprint append json lets selectively run specs without destroying current documentation see section append json format cannot run formats delete entire documentation folder upon run format appends new examples index file writes run examples correct folder rake task allows format used easily rspec core raketask new \\( 'docs generate append' spec file \\) task args spec file task args spec file env doc format append json end pattern spec file 'spec acceptance spec rb' rspec opts format rspecapidocumentation apiformatter end env doc format json rspecapidocumentation configure config config format env doc format end rake docs generate append spec acceptance orders spec rb update current index 's examples include file examples inside rewritten api blueprint format \\( apib \\) additional functions apib groups urls together http verbs route orders orders collection get returns orders end delete deletes orders end end n't use param url states rest documentation apib attributes besides parameters use attributes exactly like 'd use \\( see documentation \\) filtering exclusion rspec api documentation lets determine examples get outputted final documentation filtering done via metadata key tag examples either single symbol array symbols also false make sure get outputted resource account get accounts parameter page page view default document example get list accounts request status 200 end n't actually document example purely testing purposes example get list page 2 document false request \\( page 2 \\) status 404 end example request ca n't change document example request get list page 3 page 3 status 404 end end post accounts parameter email user email example creating account document private request \\( email eric example com \\) status 201 end example creating account errors document private developers request status 422 end end end documents generated top folder document false examples never generated rspecapidocumentation configure config exclude document examples marked 'private' config define group non private config config exclusion filter private end document examples marked 'public' config define group public config config filter public end document examples marked 'developer' config define group developers config config filter developers end end dsl require dsl beginning acceptance spec rb file make sure require following pull dsl definitions require 'rspec api documentation dsl' example group methods resource create set documentation examples go together acts describe block resource orders end get head post put delete patch method sent along url resource orders post orders end get orders end head orders end put orders id let \\( id \\) order id example get order path orders 1 ` id` replaced value `id` end end delete orders id end patch orders id end end example rspec 's built example method hook metadata surrounding could also used resource orders post orders example creating order request make assertions end end end example request example except calls first step assertions required block similar pass hash last parameter passed along extra parameters become metadata like resource orders parameter name order name post orders example request creating order name name make assertions end end end explanation method takes string representing detailed explanation example resource orders post orders example creating order explanation method creates new order request make assertions end end end resource also explanation resource orders explanation orders top level business objects created post request post orders example creating order explanation method creates new order request make assertions end end end header method takes header name value value string symbol symbol symbol allowing header values resource orders header accept application json header x custom custom header let \\( custom header \\) dynamic get orders example request headers headers accept application json x custom dynamic end end end parameter method takes parameter name description optional hash extra metadata displayed raddocs extra columns method parameter name exists e g send returned value server url encoded data special values display red show 's required scope parameters hash scoping nested see example use specified method parameter value retrieving parameter value goes several steps option defined test case responds method method used test case responds scoped method method used overwise unscoped method used resource orders parameter auth token authentication token let \\( auth token \\) user authentication token post orders parameter name order name required true scope order parameter item order items scope order parameter item id item id scope order item method custom item id let \\( name \\) order let \\( order name \\) order let \\( item id \\) 1 let \\( custom item id \\) 1 let \\( order item item id \\) 1 example creating order params eq \\( order name order item item id 1 auth token auth token \\) end end end response field method takes response field name description optional hash extra metadata displayed raddocs extra columns special values scope response field hash resource orders response field page current page get orders example request getting orders expect \\( response body \\) eq \\( page 1 json \\) end end end also group metadata using options factor duplications resource orders post orders options scope order required true parameter name order name parameter item order items end options scope order response field id order id response field status order status end let \\( name \\) order let \\( item id \\) 1 example creating order expect \\( status \\) 201 end end end callback complicated see relish docs trigger callback pass method block evaluated cause application make request example methods callback url defines destination callback example see relish docs client returns test client makes requests documents responses resource order get orders example listing orders create order via api instead via factories client post orders order hash request status 200 end end end callback evaluate block passed cause application test make callback request see relish docs request sends request app parameters headers defined resource order get orders example listing orders request status 200 end end end doc wish make request via client included documentation inside doc block resource order get orders example listing orders doc create order via api instead via factories n't document client post orders order hash end request status 200 end end end params get hash parameters sent see documentation example header method takes header name value resource orders header accept application json end get orders example request headers headers accept application json end end end headers returns headers sent request see documentation example response body returns string containing response body previous request resource order get orders example listing orders request response body name order 1 json end end end response headers returns hash response headers previous request resource order get orders example listing orders request response headers content type application json end end end status response status returns numeric status code response eg 200 alias status status commonly parameter resource order get orders example listing orders request status 200 response status 200 end end end query string data sent query string instead post data used get requests resource orders parameter name let \\( name \\) order get orders example list orders query string name orders end end end raw post completely override gets sent parameters ing resource orders header content type application json parameter name let \\( name \\) order post orders let \\( raw post \\) params json example request create new order params get sent json end end end rake task gem contains railtie defines rake task generating docs easily rails loads files rake docs generate using rails use rake following task require 'rspec core rake task' desc 'generate api request documentation api specs' rspec core raketask new \\( 'docs generate' \\) pattern 'spec acceptance spec rb' rspec opts format rspecapidocumentation apiformatter end require 'rspec api documentation' load 'tasks docs rake' using rake rspec spec acceptance format rspecapidocumentation apiformatter uploading file example uploading file see gotchas rspec api documentation relies variable test client define please configure rspec api documentation use another one see configuration make heavy use rspec metadata actually use entire gem without dsl hand write metadata must use etc access data last response able use response object created contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "crawled_date": "2017-06-10T13:59:33.642995"
  }, 
  "209": {
    "api_url": "trade.tf", 
    "progweb_url": "https://www.programmableweb.com/api/tradetf", 
    "progweb_date": "01.17.2014", 
    "progweb_descr": "Trade.tf is a product sales site for steam users. Users can post for sale or buy items. The site includes trading segregated by quality, spreadsheets of pricing, and crates of items. The Trade.tf API allows uses to use REST calls to get a spreadsheet to display prices on a user's website. The API returns JSON and an API Key is required for use. An account is required with service.", 
    "api_name": "Trade.tf", 
    "progweb_cat": "Games,Entertainment", 
    "crawled_date": "2017-06-10T13:59:33.640085"
  }, 
  "208": {
    "api_url": "openpay.mx", 
    "progweb_url": "https://www.programmableweb.com/api/openpay", 
    "progweb_date": "01.17.2014", 
    "progweb_descr": "Openpay is an integrated service solution for Latin America that allows users to accept and send payments online without dealing with banking systems, compliance, fraud, and security.  The Openpay API allows to handle Charges (from cards, banks and stores), Payouts (to debit cards and banks accounts), Transfers between accounts, Customers, Cards, Bank Accounts, Plans, Subscriptions and Fees. The API uses RESTful calls and responses are formatted in JSON.", 
    "api_name": "Openpay", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:33.641099"
  }, 
  "77": {
    "api_url": "chargebee.com", 
    "progweb_url": "https://www.programmableweb.com/api/chargebee", 
    "progweb_date": "12.29.2012", 
    "progweb_descr": "Chargebee is a subscription billing service for recurring charges for software as a service (SaaS) subscriptions. \r \r The Chargebee API allows developers to access and integrate the functionality of Chargebee with other applications. Some example API methods include managing customer information, managing subscriptions, and retrieving information about subscriptions.", 
    "api_name": "Chargebee", 
    "progweb_cat": "Subscriptions,Automation", 
    "crawled_date": "2017-06-10T13:59:37.978090"
  }, 
  "76": {
    "link4": "http://developer.shopatron.com/", 
    "link1": "http://developer.shopatron.com/api", 
    "api_url": "shopatron.com", 
    "link3": "http://developer.shopatron.com/io-docs", 
    "link2": "http://developer.shopatron.com/Getting_Started", 
    "progweb_url": "https://www.programmableweb.com/api/shopatron", 
    "progweb_date": "12.27.2012", 
    "progweb_descr": "The service provides online shopping cart services to be integrated with web pages either via Javascript or via REST web service requests. Implementation options include linking to white-label pages on the provider's site and processing cart updates and payment requests via API calls. Functions include add to cart, view and update existing cart items, remove items, and process credit card payments.  API methods support adding a product to the buyer's shopping cart with specified quantity and product options then completing credit card prequalification and final payment. Methods also allow review of pending cart items and updating the cart. The API allows retrieval of shipping data and processing of return  authorizations and refunds to the purchaser's credit card.", 
    "api_name": "Shopatron", 
    "progweb_cat": "eCommerce,Payments", 
    "descr4": "shopatron sign register welcome shopatron developer network ecommerce transformed welcome shopatron developer one stop resource want integrate solutions shopatron order exchange deliver best class order management solutions branded manufacturers multi channel retailers website find information need use shopatron integration toolset click one links get started learn use apis part shopatron best class order exchange management ecommerce solutions getting started information prospective new api users solutions access shopatron apis specific solution looking apis documentation apis links code samples related documentation home io docs developer getting started getting started solutions shopatron manufacturer shopatron retailer ecommerce shopatron fulfillment partner solution partner apis support faq 's api toolbox glossary api terms", 
    "descr3": "shopatron sign register docs api documentation test api services using docs select api shopping cart service order service use add cart apis include add cart buttons web pages provide quick cart view display shopping cart shopping cart page standard shopatron cart stylized version shopatron cart cart design coordinate website use order service get information pertaining particular shopatron order toggle endpoints toggle methods cart list methods expand methods get add cart id cartitems jsonp get order list methods expand methods get get order id home io docs developer getting started getting started solutions shopatron manufacturer shopatron retailer ecommerce shopatron fulfillment partner solution partner apis support faq 's api toolbox glossary api terms", 
    "descr2": "shopatron sign register getting started getting started implement apis 're going need programming experience wait second 's api \\? \\( already ahead know answer \\) api acronym application program interface set routines protocols tools building software applications good api makes easier develop program providing building blocks programmer \\( \\) puts blocks together shopatron provides apis variety formats xml rpc rest soap stay tuned updates 're actively converting either rest soap 's next \\? make api request need know resource 're looking retrieve look api toolbox section support area libraries frameworks available particular platform read documentation find details apis work \\( examples \\) xml rpc requests require username password testing integration rest apis require api key get access \\? read getting access newer apis provide test key documentation \\( applicable \\) allows test functionality prior getting production key site xml rpc apis please contact account manager obtain username password soon allow provisioning developer keys coupled testing apis site make one stop shop every shopatron api home io docs developer getting started getting started solutions shopatron manufacturer shopatron retailer ecommerce shopatron fulfillment partner solution partner apis support faq 's api toolbox glossary api terms", 
    "descr1": "shopatron sign register shopatron api listing shopatron api listing curabitur blandit tempus porttitor cras mattis consectetur purus sit amet fermentum maecenas sed diam eget risus varius blandit sit amet non magna praesent commodo cursus magna vel scelerisque nisl consectetur et cum sociis natoque penatibus et magnis dis parturient montes nascetur ridiculus mus vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor customer care shopatron manufacturer shopatron retailer ecommerce fulfillment partner home io docs developer getting started getting started solutions shopatron manufacturer shopatron retailer ecommerce shopatron fulfillment partner solution partner apis support faq 's api toolbox glossary api terms", 
    "crawled_date": "2017-06-10T13:59:37.979305"
  }, 
  "75": {
    "api_url": "primopay.com.au", 
    "progweb_url": "https://www.programmableweb.com/api/primopay", 
    "progweb_date": "12.26.2012", 
    "progweb_descr": "The service provides payment processing for e-commerce and other online transactions within Australia. It works through Australian banks to verify customer accounts and availability of funds, then completes credit card processing to transfer funds to a seller. Batching functions retry transactions that fail initially due to problems with a bank's processing system. Because it remains independent of banks, sellers can change banking relationships without reconfiguring online payment functionality.  API methods support payment submission using popular credit cards Visa, MasterCard, American Express, and Diners Club, among others. Methods interact with issuing banks to pre-authorize cards and verify available account balances, then obtain buyer confirmation and complete payment processing. The API also handles refunds for cancelled or returned purchases.", 
    "api_name": "PrimoPay", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:37.980697"
  }, 
  "74": {
    "api_url": "mysuitecfdi.com", 
    "progweb_url": "https://www.programmableweb.com/api/mysuite", 
    "progweb_date": "12.23.2012", 
    "progweb_descr": "MYSuite is an electronic billing service for companies that do business in Mexico, especially independent, small, and medium companies. MYSuite is also an authorized provider of Digital Online Tax Receipts (CFDI). As a result, customers can use MYSuite to generate, deliver, receive, and store bills in a manner that complies with Mexican laws regarding online billing. MYSuite's functions can be accessed programmatically via SOAP API.", 
    "api_name": "MYSuite", 
    "progweb_cat": "Payments,Billing", 
    "crawled_date": "2017-06-10T13:59:37.981994"
  }, 
  "73": {
    "api_url": "fel.mx", 
    "progweb_url": "https://www.programmableweb.com/api/facturar-en-l%C3%A3%C2%ADnea-remote-connection", 
    "progweb_date": "12.22.2012", 
    "progweb_descr": "Facturar en L\u00c3\u00adnea (FEL) provides Mexican companies with electronic billing services. These services adhere to Mexico's legal requirements regarding the use of CFDIs in online billing. CFDI stands for Comprobantes Fiscales Digitales por Internet (trans. Digital Online Tax Receipts). The Remote Connection API provides programmatic access to FEL's billing services via SOAP calls issued in XML format. The FEL website is provided solely in Spanish.", 
    "api_name": "Facturar en L\u00c3\u00adnea Remote Connection", 
    "progweb_cat": "Payments,Mexican", 
    "crawled_date": "2017-06-10T13:59:37.983022"
  }, 
  "72": {
    "api_url": "mocapay.com", 
    "progweb_url": "https://www.programmableweb.com/api/mocapay", 
    "progweb_date": "12.12.2012", 
    "progweb_descr": "Mocapay offers users a platform that mobile-enables their businesses\u00e2\u20ac\u2122 current payment, loyalty, gift, social media and coupon programs. The Mocapay API allows developers to integrate the Mocapay mobile commerce system into any third party or POS solution. Full public documentation is not available but interested developers should contact the provider for more details.", 
    "api_name": "Mocapay", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:37.985038"
  }, 
  "71": {
    "api_url": "crowdtilt.com", 
    "progweb_url": "https://www.programmableweb.com/api/crowdtilt", 
    "progweb_date": "12.12.2012", 
    "progweb_descr": "CrowdTilt is an online group fundraising site. CrowdTilt offers features for users to create their own crowd-funding sites to raise money for various reasons and sites to allow for group funding.  The CrowdTilt API allows developers to access and integrate the functionality of CrowdTilt with other applications and to create new applications. Some example API methods include accessing user information, accessing campaign information, and managing campaigns.", 
    "api_name": "CrowdTilt", 
    "progweb_cat": "Payments,Charity", 
    "crawled_date": "2017-06-10T13:59:37.986051"
  }, 
  "70": {
    "api_url": "ukashbusiness.com", 
    "progweb_url": "https://www.programmableweb.com/api/ukash", 
    "progweb_date": "12.10.2012", 
    "progweb_descr": "Ukash is a form of eMoney - it is treated exactly like cash, but it is spent online. Ukash is useful for those who don\u00e2\u20ac\u2122t have a credit or debit card, or who don\u00e2\u20ac\u2122t want to use their card to pay online. Customers exchange cash for a unique 19-digit Ukash code and use it to pay at the thousands of websites that accept Ukash. It can also be used to load prepaid cards and eWallets. If the Ukash code is more than the value of the purchase, change will be refunded as a new code. Ukash is available in over 55 countries at outlets that include shops, petrol stations, kiosks, ATMs, and online.", 
    "api_name": "Ukash", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:37.987040"
  }, 
  "79": {
    "api_url": "seqrpay.com", 
    "progweb_url": "https://www.programmableweb.com/api/seqr-pay", 
    "progweb_date": "01.12.2013", 
    "progweb_descr": "SeQR Pay provides a new way to purchase products. The basic concept is that products, product packaging, and advertisements have unique SeQR Pay QR codes on them so that anyone may scan that QR code and purchase the product using the SeQR Pay app. As a results, users no longer need to go to a store or website to make purchases. The user's payment information and shipping address are stored on SeQR Pay's secure server and only needs to be entered once.  So far, only a few brands have incorporated SeQR Pay technology. However, the SeQR Pay API still appears to be functional. It includes functions for both customers and merchants who want to integrate the SeQR Pay functions with other application or services.", 
    "api_name": "SeQR Pay", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:37.973757"
  }, 
  "78": {
    "api_url": "paypoint.net", 
    "progweb_url": "https://www.programmableweb.com/api/paypoint", 
    "progweb_date": "01.03.2013", 
    "progweb_descr": "The service headquartered in the UK provides payment processing for e-commerce transactions and other online exchanges. It can verify validity and credit limits for credit and debit cards, then complete real-time payment and transfer funds to the seller's account. Payment options include Visa, MasterCard/Maestro, and Paypal.  API methods support secure, real time payment processing. Methods handle pre-authorization for credit and debit card number and transaction amount, providing an authorization code for use in completing payment. Methods also clear payments through the card provider's system and return confirmation of the funds transfer to both buyer and seller.", 
    "api_name": "PayPoint", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:37.976346"
  }, 
  "2": {
    "link5": "https://doc.bunq.com/", 
    "link4": "https://doc.bunq.com/api/2/page/callbacks", 
    "link1": "https://doc.bunq.com/api/1/call/session", 
    "api_url": "bunq.com", 
    "link3": "https://doc.bunq.com/api/1/call/user", 
    "link2": "https://doc.bunq.com/settings", 
    "progweb_url": "https://www.programmableweb.com/api/bunq-public-beta", 
    "progweb_date": "04.25.2017", 
    "progweb_descr": "The bunq Public (Beta) supports the integration of payments interface and other financial processing functionalities in applications. The RESFful API sends requests in HTTP format and returns responses in JSON format. Developers are required to pay monthly fees to be able to deploy the API either as business users on consumers. The API is currently a beta release and subject to future changes.", 
    "api_name": "bunq Public (Beta)", 
    "progweb_cat": "Financial,Banking", 
    "descr5": "", 
    "descr4": "", 
    "descr3": "", 
    "descr2": "", 
    "descr1": "", 
    "crawled_date": "2017-06-10T13:59:23.032968"
  }, 
  "8": {
    "api_url": "paychannel.net", 
    "progweb_url": "https://www.programmableweb.com/api/paychannel", 
    "progweb_date": "10.08.2012", 
    "progweb_descr": "PayChannel is a provider of payment processing software solutions and services. Their PayChannel gateway securely manages users' credit card transactions. Other services offered include interactive voice response, front counter payments, e-bill presentment, ACH/e-check and convenience fee model.  The PayChannel API lets developers integrate the functionality of the PayChannel service into their existing software systems. API functionality includes credit card, debit card and electronic check (ACH) processing options, authorization and settlement processing, voids and reversals, recurring payment setup and processing, convenience fee transaction processing, shopping cart option, front counter processing capability and secure processing. Public documentation is not available.", 
    "api_name": "PayChannel", 
    "progweb_cat": "Payments,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:38.019999"
  }, 
  "68": {
    "api_url": "kusinaatbp.com", 
    "progweb_url": "https://www.programmableweb.com/api/kusinaatbp-payplus", 
    "progweb_date": "12.02.2012", 
    "progweb_descr": "Kusinaatbp is an online database of Filipino recipes. It provides recipes for traditional Filipino and Filipinized dishes ranging from the very popular to the very unique.  The Kusinaatbp website also provides a Market Place where people can advertise items they wish to sell or buy. Kusinaatbp uses the PayPlus software to enable people to make purchases through the website. This implementation comes with an API that allows people to make purchases programmatically via SOAP calls.", 
    "api_name": "Kusinaatbp PayPlus", 
    "progweb_cat": "Payments,Food", 
    "crawled_date": "2017-06-10T13:59:37.988972"
  }, 
  "120": {
    "api_url": "mybillaway.com", 
    "progweb_url": "https://www.programmableweb.com/api/billaway", 
    "progweb_date": "05.08.2013", 
    "progweb_descr": "Billaway offers businesses a rewards program that reduces customers\u00e2\u20ac\u2122 monthly bills at the time of payment. The users can shop at designated locations and earn points that cab be applied towards monthly bills. Users can apply reward points towards bills with utility companies, grocery stores, trash companies, gas stations, and many other locations. The Billaway API allows merchants to integrate the Billaway platform directly at the customer payment location. This allows users to join the Billaway rewards system more readily.", 
    "api_name": "Billaway", 
    "progweb_cat": "Enterprise,Rewards", 
    "crawled_date": "2017-06-10T13:59:37.931750"
  }, 
  "121": {
    "api_url": "bitmymoney.com", 
    "progweb_url": "https://www.programmableweb.com/api/bitmymoney", 
    "progweb_date": "05.20.2013", 
    "progweb_descr": "BitMyMoney is a Netherlands based payment service that allows users to accept and make payments in Bitcoins as well as hold their Bitcoin investments securely offline. The BitMyMoney API allows users to make call to get the Bitcoin exchange rate for current Euro transactions, start a transaction, see a payment page, check a transaction status, and make other payment related calls. The service uses REST calls and returns JSON or JSONP. An account is required with service, and SSL is used for security.", 
    "api_name": "BitMyMoney", 
    "progweb_cat": "Payments,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:37.930624"
  }, 
  "122": {
    "api_url": "catlab.eu", 
    "progweb_url": "https://www.programmableweb.com/api/catlab-bitcoin-gateway", 
    "progweb_date": "05.20.2013", 
    "progweb_descr": "CatLab Interactive is a computer game and browser based game development community. The CatLab Bitcoin Gateway is a user interface designed to ease the bitcoin transfer process. The service uses an API key, returns JSON, and cost 1% of transferred amount, plus a transaction fee. Instead of a pop up or third party service, users are able to type in the address to send the Bitcoin to, and the rest is done on the backend.", 
    "api_name": "CatLab Bitcoin Gateway", 
    "progweb_cat": "Payments,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:37.929438"
  }, 
  "123": {
    "api_url": "unocoin.com", 
    "progweb_url": "https://www.programmableweb.com/api/unocoin", 
    "progweb_date": "05.20.2013", 
    "progweb_descr": "Unocoin aims to be a centralized location for all Bitcoin information. It provides lists of forums, news, mining technology, Bitcoin wallets, and other information. The The Unocoin API allows users to display payment instructions on a merchant site, receive notification with payment and status, submit an order in over 30 currencies, and receive payouts to bank accounts in 9 countries. The API is based on JSON, an account is required with service.", 
    "api_name": "Unocoin", 
    "progweb_cat": "Financial,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:37.928229"
  }, 
  "124": {
    "api_url": "litepay-app.com", 
    "progweb_url": "https://www.programmableweb.com/api/litepay", 
    "progweb_date": "05.22.2013", 
    "progweb_descr": "LitePay-App is a web payment service that handles payment for merchants utilizing litecoins.  The service takes orders, issues a litecoin pay address to the customer to use, and confirms payment to the merchant. The Litepay-App API allows users to request a litecoin address and confirm a payment. The service uses REST calls, returns JSON, and uses Access Tokens for authentication.", 
    "api_name": "Litepay", 
    "progweb_cat": "Payments,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:37.927002"
  }, 
  "125": {
    "api_url": "trycelery.com", 
    "progweb_url": "https://www.programmableweb.com/api/celery", 
    "progweb_date": "05.22.2013", 
    "progweb_descr": "Celery is an application that lets businesses and merchants accept pre-orders and allow customers to pre-pay for goods and services.   The Celery API allows developers to access and integrate the functionality of Celery with other applications. Some example API methods include managing orders, managing account information, and managing products.", 
    "api_name": "Celery", 
    "progweb_cat": "eCommerce,Payments", 
    "crawled_date": "2017-06-10T13:59:37.925739"
  }, 
  "126": {
    "api_url": "donecard.com", 
    "progweb_url": "https://www.programmableweb.com/api/donecard", 
    "progweb_date": "05.24.2013", 
    "progweb_descr": "A DoneCard is a type of cash card that can be used for online, mobile, and in-person transactions. The card does not require a bank account and can only be used to spend as much money as is placed on it by the cardholder. The DoneCard API allows users to manage card transactions and orders, get card details, and to verify their cards and transactions.", 
    "api_name": "DoneCard", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:37.924509"
  }, 
  "127": {
    "api_url": "payneteasy.com", 
    "progweb_url": "https://www.programmableweb.com/api/payneteasy", 
    "progweb_date": "06.03.2013", 
    "progweb_descr": "PayNetEasy is a payment service that handles payment processing, payment management, fraud prevention, security analysis, and mobile payment. The service is targeted towards banks, credit card companies, loyalty card operators, and other payment services. The PayNetEasy API allows users to complete Bitcoin transactions. The API can return the transaction type, status, bitcoin address, paynet order id, merchant order id, and several other calls. The service uses REST calls and uses SSL for authentication.", 
    "api_name": "PayNetEasy", 
    "progweb_cat": "Payments,Merchants", 
    "crawled_date": "2017-06-10T13:59:37.923248"
  }, 
  "128": {
    "api_url": "ndrix.com", 
    "progweb_url": "https://www.programmableweb.com/api/coincard", 
    "progweb_date": "06.04.2013", 
    "progweb_descr": "CoinCard is a service that allows users to submit Bitcoins and receive giftcards in return. The CoinCard API can convert Bitcoins into giftcards and allows users to structure requests to include the type of giftcard, the card amount, the currency to put the card in, the email to send the giftcard to, and a test run. The API uses REST calls and returns JSON.", 
    "api_name": "CoinCard", 
    "progweb_cat": "Payments,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:37.921785"
  }, 
  "129": {
    "api_url": "btc.to", 
    "progweb_url": "https://www.programmableweb.com/api/btcto-0", 
    "progweb_date": "06.04.2013", 
    "progweb_descr": "Btc.co allows users to shorten bitcoin addresses. This service was designed because the entry of bitcoin address into mobile devices and other places can be difficult to perform due the length of the address. The shortener aims to make them easier to remember and easier to use. The Btc.co API allows users to submit a bitcoin address and receive back a shortened address. The service uses REST calls.", 
    "api_name": "Btc.to", 
    "progweb_cat": "Tools,Financial", 
    "crawled_date": "2017-06-10T13:59:37.920333"
  }, 
  "414": {
    "api_url": "neto.com.au", 
    "progweb_url": "https://www.programmableweb.com/api/neto", 
    "progweb_date": "02.16.2017", 
    "progweb_descr": "The Neto application programmer interface enables third party software to interact with the Neto E-commerce Suite.   Requests can be made in XML or JSON and returns Categories, Warehouses, Customers and more.  Neto is an all-in-one hosted ecommerce software solution based in Australia.", 
    "api_name": "Neto", 
    "progweb_cat": "eCommerce,Accounting", 
    "crawled_date": "2017-06-10T13:59:23.052544"
  }, 
  "415": {
    "api_url": "payfort.com", 
    "progweb_url": "https://www.programmableweb.com/api/payfort", 
    "progweb_date": "02.17.2017", 
    "progweb_descr": "The Payfort REST API integrates payments into merchant applications in the Middle East. JSON formats are available to perform callbacks that display amount, customer, language, payment and signature in return.", 
    "api_name": "Payfort", 
    "progweb_cat": "Payments,Merchants", 
    "crawled_date": "2017-06-10T13:59:23.051398"
  }, 
  "416": {
    "api_url": "sc.com", 
    "progweb_url": "https://www.programmableweb.com/api/standard-chartered-straight2bank", 
    "progweb_date": "02.27.2017", 
    "progweb_descr": "The Standard Chartered API provides access to corporate banking services such as payments, balances and reference data.  It returns the various types of \u201cAccount Balances\u201d applicable for the specified Account Number, Account Detail and Balance as well as finds all support transaction types for a given account. This includes; Accounts, Bank Code Inquiry, Holiday Calendar Inquiry and more.    Standard Chartered is an international banking group, committed to building a sustainable business that provides a wide-range of products and services for personal and business customers across 71 countries.", 
    "api_name": "Standard Chartered Straight2Bank", 
    "progweb_cat": "Banking,Data", 
    "crawled_date": "2017-06-10T13:59:23.050280"
  }, 
  "417": {
    "api_url": "mashape.com", 
    "progweb_url": "https://www.programmableweb.com/api/noodlio-pay", 
    "progweb_date": "02.28.2017", 
    "progweb_descr": "The Noodlio Pay API simplifies the integration of payments acceptance portals in websites and apps. Its RESTful architecture allows apps to initiate instant API requests for validating input data and applying charges on purchases made on a website. The API uses Stripe to expedite the instantaneous transfer of funds to destination accounts. It sends requests in JSON or HTTP format and returns responses in JSON format.", 
    "api_name": "Noodlio Pay", 
    "progweb_cat": "Payments,Business", 
    "crawled_date": "2017-06-10T13:59:23.049200"
  }, 
  "410": {
    "api_url": "ubivar.com", 
    "progweb_url": "https://www.programmableweb.com/api/ubivar", 
    "progweb_date": "02.10.2017", 
    "progweb_descr": "Ubivar offers fraud detection and financial risk tools that help eMerchants in detecting and verifying payments. Ubivar features self-learning risk score, blacklist update automation, and multiple payment feeds. The API allows to request data in bulk, and can be used to list transactions, accounts, and login times. The Ubivar API is REST based, and returns JSON data.", 
    "api_name": "Ubivar", 
    "progweb_cat": "Payments,Machine Learning", 
    "crawled_date": "2017-06-10T13:59:23.057314"
  }, 
  "411": {
    "api_url": "pandapay.io", 
    "progweb_url": "https://www.programmableweb.com/api/pandapay", 
    "progweb_date": "02.13.2017", 
    "progweb_descr": "PandaPay offers a donation platform that features integrated payment gateway, ACH processing, crowdfunding support, and PCI-DSS compliance. The PandaPay API uses POST for donation objects, customer objects, and grant objects. API Keys are required for authentication, and JSON is used for data exchange. PandaPay charges 1% of all donations as main fee. Also, 2.9% + 30\u00a2 per donation for credit and debit transactions, and 25\u00a2 per donation for ACH transfers. However, discounts are available for high-volume platforms, and for public charities using the API.", 
    "api_name": "PandaPay", 
    "progweb_cat": "Charity,Application Development", 
    "crawled_date": "2017-06-10T13:59:23.056090"
  }, 
  "412": {
    "api_url": "payoneer.com", 
    "progweb_url": "https://www.programmableweb.com/api/payoneer", 
    "progweb_date": "02.14.2017", 
    "progweb_descr": "The Payoneer REST API allows developers to access and integrate the functionality of Payoneer with other applications. Public documentation is not available; interested developers should sign up here: https://www.payoneer.com/en/products/integrated-payments-api/. Payoneer is an online payment platform that allows companies to pay and receive payments cross borders and sell things in local currencies.", 
    "api_name": "Payoneer", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:23.054921"
  }, 
  "413": {
    "api_url": "iban.com", 
    "progweb_url": "https://www.programmableweb.com/api/iban-swiftbic-validation", 
    "progweb_date": "02.15.2017", 
    "progweb_descr": "IBAN.com operates as a web-based portal for real-time identification, validation, and calculation of International Bank Account Numbers (IBAN). This platform uses algorithmic formulas to determine the validity of IBANs. The IBAN SWIFT/BIC Validation API allows developers to integrate BIC code authentication functionality in applications. It simplifies access to the BIC code directory and makes it easier for users to validate SWIFT and BIC codes in banking transactions. The API sends HTTP-formatted requests and returns responses in JSON or XML format.", 
    "api_name": "IBAN SWIFT/BIC Validation", 
    "progweb_cat": "Banking,Financial", 
    "crawled_date": "2017-06-10T13:59:23.053753"
  }, 
  "418": {
    "api_url": "yodlee.com", 
    "progweb_url": "https://www.programmableweb.com/api/yodlee-ebills", 
    "progweb_date": "03.05.2017", 
    "progweb_descr": "The Yodlee eBills REST API allows developers to access and integrate the eBills functionality with other applications. The Yodlee eBills API opens up online bill paying capabilities to offer customers the opportunity to pay bills online with electronic or paper check payments. Yodlee Interactive is a cloud platform that provides digital financial services for businesses.", 
    "api_name": "Yodlee eBills", 
    "progweb_cat": "Payments,Banking", 
    "crawled_date": "2017-06-10T13:59:23.047962"
  }, 
  "419": {
    "api_url": "sdk.finance", 
    "progweb_url": "https://www.programmableweb.com/api/sdkfinance", 
    "progweb_date": "03.14.2017", 
    "progweb_descr": "The SDK.finance API offers integration with several financial products that help build eCommerce and merchant platforms. Integrated services include payment systems, payment processing, E-wallets, virtual money, gift cards, prepaid cards, money exchange, and P2P money transfers. SDK.finance offers flexible price terms tailored to the client's needs. The API offers anti-fraud measures at no additional cost. SDK.finance is headquartered in Czech Republic.", 
    "api_name": "SDK.finance", 
    "progweb_cat": "Financial,Accounting", 
    "crawled_date": "2017-06-10T13:59:23.046648"
  }, 
  "319": {
    "api_url": "squareup.com", 
    "progweb_url": "https://www.programmableweb.com/api/square-register-android", 
    "progweb_date": "05.27.2016", 
    "progweb_descr": "The Square Register Android API mediates communication between Android apps and Square\u2019s payments processing apps. The API\u2019s provider is the vendor of Square payments processing hardware that include the Square contactless and chip reader. Developers can choose between the Android and iOS versions of the Square Register API, although the Android option provides access to only native apps while the iOS option provides access to both web and native apps. The API that requires OAuth 2.0 authorization transmits requests and responses in HTTP and JSON formats.", 
    "api_name": "Square Register Android", 
    "progweb_cat": "eCommerce,Payments", 
    "crawled_date": "2017-06-10T13:59:26.384772"
  }, 
  "318": {
    "api_url": "chartmogul.com", 
    "progweb_url": "https://www.programmableweb.com/api/chartmogul-metrics", 
    "progweb_date": "05.26.2016", 
    "progweb_descr": "The ChartMogul Metrics API integrates metrics into applications and web services. It is available in JSON protocol with secure HTTPS. Authentication is required via account token and secret key. ChartMogul is a subscription revenue analytics platform that integrates with Stripe, Braintree, Recurly and Chargify and others.", 
    "api_name": "ChartMogul Metrics", 
    "progweb_cat": "Subscriptions,Business", 
    "crawled_date": "2017-06-10T13:59:26.385860"
  }, 
  "313": {
    "api_url": "w3.org", 
    "progweb_url": "https://www.programmableweb.com/api/w3c-payment-request", 
    "progweb_date": "05.24.2016", 
    "progweb_descr": "The W3C Payment Request API integrates payment methods into  merchants' applications. Callbacks are available via JSON and token and system-level are required to authenticate.", 
    "api_name": "W3C Payment Request", 
    "progweb_cat": "Payments,Browsers", 
    "crawled_date": "2017-06-10T13:59:26.391208"
  }, 
  "312": {
    "api_url": "ravelin.com", 
    "progweb_url": "https://www.programmableweb.com/api/ravelin-fraud-detection", 
    "progweb_date": "05.23.2016", 
    "progweb_descr": "The RavelinAPI is a real-time fraud detection and prevention solution for web-based payment platforms. It must be integrated through a three-phase procedure that begins with events and followed by backfill and banning, respectively. The events interface sends real time data Ravelin while the backfill interface tracks users\u2019 historical data to aid tailoring of service delivery to customer-specific profiles. Banning, on the other hand, enables the blacklisting and blocking of transactions from suspicious customers. The fraud detection API transmits requests and responses in JSON format. It is currently a full release that comes with detailed documentation.", 
    "api_name": "Ravelin fraud detection", 
    "progweb_cat": "Payments,Algorithms", 
    "crawled_date": "2017-06-10T13:59:26.392262"
  }, 
  "311": {
    "api_url": "fit-pay.com", 
    "progweb_url": "https://www.programmableweb.com/api/fitpay", 
    "progweb_date": "05.10.2016", 
    "progweb_descr": "FitPay offers payment processing enabled by user biometric information. Consumers will not be required to carry cash, credit cards or even a smartphone when integrating this API. This payment platform works by authenticating with unique biometric patterns by using wearables, and features PCI Level 1 compliant encryption, and true touch-free payments. Developers need to register in order to access API documentation.", 
    "api_name": "FitPay", 
    "progweb_cat": "Payments,Authentication", 
    "crawled_date": "2017-06-10T13:59:26.393300"
  }, 
  "310": {
    "api_url": "flipkart.com", 
    "progweb_url": "https://www.programmableweb.com/api/flipkart-books-category-feed", 
    "progweb_date": "05.05.2016", 
    "progweb_descr": "The Flipkart Books Category Feed API allows users to add a feed of top selling Flipkart books affiliate links to applications to help monetize apps. Flipkart is an online shopping portal based in India for clothing, furniture, electronics, books, sporting goods, and everything else.", 
    "api_name": "Flipkart Books Category Feed", 
    "progweb_cat": "eCommerce,Indian", 
    "crawled_date": "2017-06-10T13:59:26.394292"
  }, 
  "317": {
    "api_url": "chartmogul.com", 
    "progweb_url": "https://www.programmableweb.com/api/chartmogul-enrichment", 
    "progweb_date": "05.26.2016", 
    "progweb_descr": "The ChartMogul Enrichment API integrates enrichment features into applications and web services. It is available in JSON protocol with secure HTTPS. Authentication is required via account token and secret key. ChartMogul is a subscription revenue analytics platform that integrates with Stripe, Braintree, Recurly and Chargify and others.", 
    "api_name": "ChartMogul Enrichment", 
    "progweb_cat": "Subscriptions,Business", 
    "crawled_date": "2017-06-10T13:59:26.386997"
  }, 
  "316": {
    "api_url": "chartmogul.com", 
    "progweb_url": "https://www.programmableweb.com/api/chartmogul-import", 
    "progweb_date": "05.26.2016", 
    "progweb_descr": "The ChartMogul Import API integrates data sources, customers, plans, and invoices into business applications. It is available in JSON protocol with secure HTTPS. Authentication is required via account token and secret key. ChartMogul is a subscription revenue analytics platform that integrates with Stripe, Braintree, Recurly and Chargify and others.", 
    "api_name": "ChartMogul Import", 
    "progweb_cat": "Subscriptions,Business", 
    "crawled_date": "2017-06-10T13:59:26.388072"
  }, 
  "315": {
    "api_url": "gamecredits.org", 
    "progweb_url": "https://www.programmableweb.com/api/gamecredits-payment", 
    "progweb_date": "05.26.2016", 
    "progweb_descr": "The GameCredits Payment API integrates wallet features into gaming applications. It provides game monetization by implementing GameCredits cryptocurrency capacities. Contact support@gamecredits.net to obtain additional information about authentication and protocols.", 
    "api_name": "GameCredits Payment", 
    "progweb_cat": "Payments,Cryptocurrency", 
    "crawled_date": "2017-06-10T13:59:26.389123"
  }, 
  "314": {
    "api_url": "payleven.com", 
    "progweb_url": "https://www.programmableweb.com/api/payleven-point-pay", 
    "progweb_date": "05.25.2016", 
    "progweb_descr": "The Payleven Point Pay API integrates payments into web services and mobile applications. It provides multi-channel developer support and EMV/PCI certified bluetooth card reader. Contact Sign up to receive API Key at https://service.payleven.com/uk/developer?product=pointpay", 
    "api_name": "Payleven Point Pay", 
    "progweb_cat": "Payments,Merchants", 
    "crawled_date": "2017-06-10T13:59:26.390184"
  }, 
  "3": {
    "link4": "https://www.flutterwave.com/documentation/", 
    "link1": "https://www.flutterwave.com/documentation/card-payments/", 
    "api_url": "flutterwave.com", 
    "link3": "https://www.flutterwave.com/documentation/pay/", 
    "link2": "https://flutterwave.com/documentation/compliance/", 
    "progweb_url": "https://www.programmableweb.com/api/flutterwave", 
    "progweb_date": "08.23.2016", 
    "progweb_descr": "The Flutterwave API is a new payment solution that allows anyone in Africa to accept payments - essentially Paypal for Africa. Available in JSON architecture with secure HTTPS protocol.", 
    "api_name": "Flutterwave", 
    "progweb_cat": "Payments,African", 
    "descr4": "flutterwave sign overview getting started get paid card payments tokenize charge validate recurrent payments card payments preauthorization tokenize preauthorize capture refund void alternative payments charge validate validate \\( alt \\) recurrent payments w alternative payments initiate validate charge ach payments get institutions get institution id add user charge transaction status pesa pay pay apis compliance verification compliance kyc financial information card enquiry account enquiry banks enquiry flutterwave documentation welcome flutterwave get familiar flutterwave products tools using tutorials references get paid complete set apis accept online payments pay manage every aspect recurring billing compliance verification build marketplace get people paid overview flutterwave simple secure payments infrstructure focused redefining pay get paid simplifying convoluted world payments africa across cards bank accounts mobile money wallets power integrations gateways across world via one single api rule find detailed information apis use use questions comments feel free drop us message getstarted flutterwavego com get started decide use api need create account us validate sign agreement provide credentials sandbox production environments points remember using apis also note api parameters exception merchantid variable encrypted tripledes algorithm using api key value available dashboard encryption key value protected sent part payload requests include api responses formatted using jsend \\( familiar jsend read https labs omniti com labs jsend success status response always mean payment successful probably simply means able make attempt processing payment means customer ensure check content data returned proper response base url http staging1flutterwave co 8080 pwc rest endpoints relative base url known bug 3des encryption javascript recommend java php languages choice phpjava 2017 flutterwave us terms privacy policy", 
    "descr3": "flutterwave sign overview getting started get paid card payments tokenize charge validate recurrent payments card payments preauthorization tokenize preauthorize capture refund void alternative payments charge validate validate \\( alt \\) recurrent payments w alternative payments initiate validate charge ach payments get institutions get institution id add user charge transaction status pesa pay pay apis compliance verification compliance kyc financial information card enquiry account enquiry banks enquiry pay apis pay api allows send money 135 million accounts 9 countries one api pay api flow link validate step 1 validate step 2 send link account sample requestsample response validate step 1 sample requestsample response validate step 2 sample requestsample response send sample requestsample response get linked accounts sample requestsample response unlink account sample requestsample response get transaction status sample requestsample response 2017 flutterwave us terms privacy policy", 
    "descr2": "flutterwave sign overview getting started get paid card payments tokenize charge validate recurrent payments card payments preauthorization tokenize preauthorize capture refund void alternative payments charge validate validate \\( alt \\) recurrent payments w alternative payments initiate validate charge ach payments get institutions get institution id add user charge transaction status pesa pay pay apis compliance verification compliance kyc financial information card enquiry account enquiry banks enquiry compliance check kyc apis compliance apis combined api build suite fraud prevention tools product client bvn \\( nigeria \\) verify bank account nigeria real time via bank verification api verify card bin card bin ip verification used instantly identify local global card bins bvn api bvn api flow verify resend otp validate verify \\( request user enter bvn verification \\) nodephppythonsample requestsample response attribute specify user would receive otp either via sms voice call resend otp \\( used case otp failure \\) nodephppythonsample requestsample response validate \\( used validate otp entered user \\) nodephppythonsample requestsample response verify card bin api nodephppythonsample requestsample response validate ussd otp sample requestsample response 2017 flutterwave us terms privacy policy", 
    "descr1": "flutterwave sign overview getting started get paid card payments tokenize charge validate recurrent payments card payments preauthorization tokenize preauthorize capture refund void alternative payments charge validate validate \\( alt \\) recurrent payments w alternative payments initiate validate charge ach payments get institutions get institution id add user charge transaction status pesa pay pay apis compliance verification compliance kyc financial information card enquiry account enquiry banks enquiry get paid get paid suite apis accepting local global payment cards well alternative payment methods like bank account payment mobile money wallet payment online app payment service providers card payments important parameters note authorization model function method security charge consumer payment card available options include pin authorization model require payment cards atm pin complete authorization used mastercard verve cards bvn bvn bank verification authorization model exclusive nigeria bank verification linked payment card verified via sms voice verification verification token gotten cardholder via sms voice verification required complete authorization model supports payment cards nigeria random debit random debit similar paypal mode verification linked cards random amount debited payment card real time debited amount required final authorization supported mastercard visa vbv securecode authorization model used 3ds methods authorization verified visa visa cards securecode mastercard used visa mastercard cards payload must include responseurl value responsehtml variable sent back response must decrypted using api key loaded browser vbv securecode validation takes place control sent back responseurl supplied original request noauth authorization model allows transaction go without authorization particularly useful card present ussd channels low risk transaction clients customer auth systems use underlying model bespoke models country selector country selector switch get paid apis allows client target specific geography cardholders target market located passing 2 letter parameter helps us route transaction desired destination list supported countries available currencies ng nigeria ngn usd gbp eur gh ghana ghs usd us united states usd ke kenya kes usd uk united kingdom gbp usd eur hit us activate desired location get paid api flow 1 tokenize charge validate \\( required bvn pin random debit auth model \\) 2 recurrent charge \\( using token step 1 \\) tokenize charge nodephppythonsample requestsample response response payload could also look like sample indicates transaction need validation endpoint needs called case complete transaction transactions need validation authmodel alternate response validate \\( required bvn pin random debit auth model \\) calls previous endpoint return need validated call transactions need validation authmodel case would amount like 1 20 customer provide full like nodephppythonsample requestsample response used previous call subsequent charges recurrent charge could saved used charge card sent request payload using alternate endpoint described subsequent charges tokenized cards \\( integrator token saved previous pay tokenize call \\) sample requestsample response 2017 flutterwave us terms privacy policy", 
    "crawled_date": "2017-06-10T13:59:23.142412"
  }, 
  "368": {
    "api_url": "sagepayments.com", 
    "progweb_url": "https://www.programmableweb.com/api/sage-direct", 
    "progweb_date": "11.06.2016", 
    "progweb_descr": "The Sage Direct API brings Sage Payments to a whole new level with its full suite of products and services. Using this API, developers can integrate healthcare, retail, e-commerce, and more with the Sage Direct features. Sage Payment Solutions is a full service payment provider, offered through Sage, providing services for businesses and human resource professionals.", 
    "api_name": "Sage Direct", 
    "progweb_cat": "Payments,Banking", 
    "crawled_date": "2017-06-10T13:59:23.105697"
  }, 
  "369": {
    "api_url": "slimpay.net", 
    "progweb_url": "https://www.programmableweb.com/api/slimpay-rest", 
    "progweb_date": "11.10.2016", 
    "progweb_descr": "This REST API is primarily used to enable users to program the execution of payments.   Some features include; Mandate Signature, Direct Debit, Card Payment and more.  SlimPay provides payments for subscriptions and intelligent solutions to improve your recurring payments collection using electronically signed on-line SEPA Mandate capture, SEPA migration, payment account management and turnkey recurring payment solution.", 
    "api_name": "SlimPay REST", 
    "progweb_cat": "Financial,Banking", 
    "crawled_date": "2017-06-10T13:59:23.103812"
  }, 
  "366": {
    "api_url": "sellercloud.com", 
    "progweb_url": "https://www.programmableweb.com/api/sellercloud", 
    "progweb_date": "10.31.2016", 
    "progweb_descr": "The SellerCloud API supports the development of web-based ordering and inventory management apps. Developers can also use the API to integrate the SellerCloud platform to their third-party applications such as ordering, shipping, purchasing, catalog, and inventory applications. This API is readily compatible with third-party application because it operates on a SOAP-based web service.", 
    "api_name": "SellerCloud", 
    "progweb_cat": "Inventory,Accounting", 
    "crawled_date": "2017-06-10T13:59:23.107949"
  }, 
  "367": {
    "api_url": "limelightcrm.com", 
    "progweb_url": "https://www.programmableweb.com/api/lime-light-crm", 
    "progweb_date": "11.05.2016", 
    "progweb_descr": "The Lime Light CRM API integrates customer memberships into applications. It aims to automate selling processes, by providing JSON protocols using HTTPS POST as request format. Developers can use Lime Light to target direct response advertiser interested in marketing strategies integrations.", 
    "api_name": "Lime Light CRM", 
    "progweb_cat": "Customer Relationship Management,Automation", 
    "crawled_date": "2017-06-10T13:59:23.106734"
  }, 
  "364": {
    "api_url": "visa.com", 
    "progweb_url": "https://www.programmableweb.com/api/visa-mtx-checkout-transaction", 
    "progweb_date": "10.31.2016", 
    "progweb_descr": "This API allows you to; purchase products on the MTX platform, supports purchasing products managed by an external catalog system and purchasing products managed by the MTX platform with one-click checkout or shopping cart checkout. This includes; Offerless Checkout, One Click Direct Checkout and Cart Checkout.  MTX provides a service that lets developers create payment solutions using points, promotional rewards, or virtual currency and coupons. MTX provides access to in-app microtransactions on top of a highly-scalable hosted environment for application developers to offload the heavy transaction burden.", 
    "api_name": "Visa MTX Checkout Transaction", 
    "progweb_cat": "Financial,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:23.110007"
  }, 
  "365": {
    "link5": "http://docs.aws.amazon.com/AWSECommerceService/latest/DG/CHAP_ApiReference.html", 
    "link4": "https://aws.amazon.com/documentation/apigateway/", 
    "link1": "https://aws.amazon.com/documentation/", 
    "api_url": "amazon.com", 
    "link3": "https://aws.amazon.com/documentation/config/", 
    "link2": "https://aws.amazon.com/documentation/cloudformation/", 
    "progweb_url": "https://www.programmableweb.com/api/amazon-app-purchasing", 
    "progweb_date": "10.31.2016", 
    "progweb_descr": "The Amazon In-App Purchasing API simplifies the integration of transactional and functional features in ecommerce apps. It allows developers to create portal for posting offerings or executing subscriptions and purchases of digital content and other products within apps. This makes it possible for Amazon customers to access and purchase the digital content and other product offerings. The API\u2019s infrastructure consists of unique receipt identifiers that simplify the conveyance of the purchased in-app items to customers.", 
    "api_name": "Amazon In-App Purchasing", 
    "progweb_cat": "eCommerce,Inventory", 
    "descr5": "menu amazon web services sign consoletry aws free deutsch english espa ol fran ais portugu \\( \\) product advertising api developer guide \\( api version 2013 08 01 \\) welcome programming guide getting started becoming associate becoming product advertising api developer reading licensing agreement using product advertising api scratchpad e commerce web services e commerce \\? web service \\? xml \\? xml syntax xml structures using xml wsdl \\? restricted parts wsdl anatomy wsdl definitions namespaces versioning request definitions response definitions response group definitions porttype binding service wsdl location schema \\? schema location product advertising api terminology basic concepts marketplace product advertising api \\? make money using product advertising api \\? items sale item identifiers item identifiers summary product advertising api operations find items find specific items shopping cart operations visual introduction product advertising api search items find item information create shopping cart organization items amazon browse nodes browse node properties browse nodes items browse node ids browse nodes search indices find browse nodes search indices search indices locales variations variation parents return variations variation images variation dimensions accessories related items requests anatomy rest request rest syntax spaces requests separator characters setting parameter values soap requests structure soap request soap endpoints xml message itemsearch soap request request authentication authentication \\? managing aws credentials hmac sha256 signatures rest requests authenticating rest requests java sample code calculating signature version 2 signatures example rest requests authenticating soap requests using soap without ws security batch requests parameters differ shared parameters performing multiple itemlookups one request parameters common product advertising api requests required parameters associatetag parameter optional parameters xml encoding parameters debugging parameters responses anatomy response version information segment operation request segment request validation segment item attributes segment paging sorting responses find items buy search operations items cannot buy availability parameter parameter restrictions availability items sold merchants required itemsearch parameters parameter support search index search indices parameters locales common itemsearch parameters return available items inaccurate availabilities availability parameter restrictions constraints search across indices blended searches power searches power search syntax power search keywords power search operators power search tips use search bins find items narrowby attribute narrowby values narrowby values per search index find items browse nodes traverse browse node hierarchy understand browsenode results drilling request response examples discover accessories discover available items discover newer versions discover similar items discover top lists discover variations find related items find similar items lookup isbn lookup upc retrieve customer reviews retrieve images retrieve price search actor search author search keyword search manufacturer search theme search theme category search title motivate customers buy promotions promotion categories benefit eligible items common response elements reviews suggest similar items buy similaritylookup find similar item ids return items similar cart items similar versions item related items top sellers find top sellers browse node get top sellers shopping cart new releases sort popularity price condition returning price availability information returning prices minimum advertised price offer summaries returning offers returning information offer providing price ranges product categories items offers determining parent items returning offers item variations variation dimensions determining availability availability values checking offer listing id using itemsearch availability parameter working remote shopping carts shopping cart concepts cart identifiers items cannot added active cart area remote shopping carts hosted amazon cart lifespan remote shopping cart tasks creating remote shopping cart specifying items cartcreate request using values returned cartcreate cart operations modifying items remote shopping cart adding items cart adding items saved later removing items cart retrieving contents cart add cart form purchase items remote shopping cart order pipeline implement proceed checkout button purchaseurl troubleshooting syntax parameter errors processing error results errors retrieving errors troubleshooting applications error codes messages error codes error messages best programming practices locale considerations locales associate ids general differences shipping restrictions api reference operations itemsearch browsenodelookup itemlookup similaritylookup cartadd cartclear cartcreate cartget cartmodify common request parameters response groups accessories alternateversions browsenodeinfo browsenodes cart cartnewreleases carttopsellers cartsimilarities editorialreview images itemattributes itemids large medium mostgifted mostwishedfor newreleases offerfull offerlistings offers offersummary promotionsummary relateditems request reviews salesrank searchbins similarities small topsellers tracks variations variation dimensions variationimages variationmatrix variationoffers variationsummary relevant operations variation dimensions response elements common response groups response elements locale reference product advertising api locale information br marketplace locale information ca marketplace locale information cn marketplace locale information de marketplace locale information es marketplace locale information fr marketplace locale information marketplace locale information marketplace locale information jp marketplace locale information mx marketplace locale information uk marketplace locale information us marketplace itemsearch sort values resources document history api reference topics operations common request parameters response groups response elements common response groups response elements locale reference product advertising api itemsearch sort values following sections guide provide reference material product advertising api information concepts programming tasks associated reference material refer previous chapters guide document conventions previous next 2017 amazon web services inc affiliates rights reserved terms use 2017 amazon web services inc affiliates rights reserved question \\? try forums page help \\? yesno feedback", 
    "descr4": "menu click return amazon web services homepage sign account english explore aws solutions products deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) account aws management console account settings billing cost management security credentials aws personal health dashboard aws cloud computing solutions products developers partners training resources documentation support services careers contact us aws cloud computing introduction aws cloud computing \\? choosing cloud platform events webinars customer success global infrastructure getting started getting started aws free tier news 's new aws blog aws news analyst reports solutions websites web apps mobile services backup storage archive big data hpc financial services game development digital media healthcare life sciences business apps start upsstart ups use aws everything app needs enterprisesenterprises use aws deliver innovation globally reducing costs government educationpublic sector organizations use aws improve agility reducing costs products compute storage databases migration networking content delivery developer tools aws cost management management tools security identity compliance analytics artificial intelligence mobile services application services messaging business productivity desktop app streaming internet things contact center game development aws marketplace software developers get startedstart developing amazon web services using one pre built sample apps toolssdks ide toolkits command line tools developer tools aws devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers forums user groups java javascript mobile php ruby python windows net training resources training certification training self paced labs certification resource centers resources whitepapers analyst reports forums aws youtube channel events webinars support services aws support aws support information support center aws trusted advisor technical faqs forums aws personal health dashboard service health dashboard contact us aws professional services aws professional services cloud adoption framework aws managed services aws managed services partners aws partner networklearn aws partner network supporting partner programs find aws partnersfind qualified apn partners help aws projects premier consulting partnerslearn top apn consulting partners globally apn partner solutionsfind validated partner solutions run integrate aws key vertical solution areas log apn portaldownload content access training engage aws partner aws site visit apn blog documentation compute storage database networking content delivery migration developer tools management tools security identity compliance analytics artificial intelligence internet things game development mobile services application services messaging business productivity desktop app streaming sdks toolkits additional software services aws general reference aws management console resources websites web apps websites website hostingpower web social mobile apps cloud devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers ecommerce applicationsbuild secure scalable online storefronts digital marketinghighly scalable online advertising marketing services cloud aws marketplace wordpress powered amimoto movable type 6 drupal powered bitnami view related products \\( 95 \\) backup storage archive backup recoverystore retrieve data anywhere time data archivearchive data long term retention disaster recoveryrecover systems data quickly disaster aws marketplace cloud protection manager standard edition softnas cloud ontap cloud aws view related products \\( 35 \\) big data hpc big datastore process large datasets solve business problems high performance computingrun tightly coupled io intensive workloads solve complex science engineering business problems internet thingsquickly build connected devices backend services serverless computingbuild run applications without thinking servers aws marketplace tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl zoomdata view bi solutions financial services financial servicescustomer applications data analytics storage compliance security cloud aws marketplace tibco spotfire informatica cloud advanced amazon redshift view related products \\( 25 \\) game development game development operationservices infrastructure mobile web pc console games amazon game developerscross platform building blocks help make games aws marketplace orbx cloud game console windows server 2008r2 nvidia grid gpu driver red5 media server view related products \\( 25 \\) digital media digital mediamedia storage archiving processing delivery cloud aws marketplace adobe media server 5 extended wowza streaming engine 4 pro edition vantage transcode server view media solutions healthcare life sciences healthcaredeliver improved care patients reduced time effort life sciencesservices infrastructure help company solve complex problems genomicsaccess powerful computing tools run genomics workloads aws marketplace ncbi blast view related products \\( 25 \\) business apps business appsrun business critical applications secure robust environment oraclerun oracle applications aws cloud saprun sap workloads applications aws scalable infrastructure microsoftall microsoft applications aws cloud aws marketplace sap hana one oddo microsoft sharepoint foundation 2013 view related products \\( 845 \\) compute amazon ec2virtual servers cloud amazon ec2 container registrystore retrieve docker images amazon ec2 container servicerun manage docker containers amazon lightsaillaunch manage virtual private servers amazon vpcisolated cloud resources aws batchrun batch jobs scale aws elastic beanstalkrun manage web apps aws lambda run code without thinking servers auto scaling elastic load balancing aws marketplace centos 7 debian gnu linux 8 \\( jessie \\) alces flight view related products \\( 1800 \\) storage amazon simple storage service \\( s3 \\) scalable storage cloud amazon elastic block storage \\( ebs \\) ec2 block storage volumes amazon elastic file system \\( efs \\) fully managed file system ec2 amazon glacierlow cost archive storage cloud aws storage gatewayhybrid storage integration aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport aws marketplace ontap cloud aws cloud protection manager standard edition panzura nas appliance view storage solutions databases amazon aurorahigh performance managed relational database amazon rdsmanaged relational database service mysql postgresql oracle sql server mariadb amazon dynamodbmanaged nosql database amazon dynamodb accelerator \\( dax \\) fully managed memory cache dynamodb amazon elasticachein memory caching service amazon redshiftfast simple cost effective data warehousing aws database migration servicemigrate databases minimal downtime aws marketplace sap hana one couchbase teradata view database software migration aws application discovery servicediscover premises applications streamline migration aws database migration servicemigrate databases minimal downtime aws server migration servicemigrate premises servers aws aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport networking content delivery amazon vpcisolated cloud resources amazon cloudfrontglobal content delivery network amazon route 53scalable domain name system \\( dns \\) aws direct connectdedicated network connection aws elastic load balancing aws marketplace cisco cloud services router brocade f5 big ip view networking solutions developer tools aws codestardevelop deploy aws applications aws codecommitstore code private git repositories aws codebuildbuild test code aws codedeployautomate code deployments aws codepipelinerelease software using continuous delivery aws x rayanalyze debug applications aws command line interfaceunified tool manage aws services aws marketplace zend server coldfusion chef server view developer tools aws cost management aws cost exploreranalyze aws cost usage aws budgetsset custom cost usage budgets reserved instance reportingdive deeper reserved instances \\( ris \\) aws cost usage reportaccess comprehensive cost usage information aws marketplace zend server coldfusion chef server view developer tools management tools amazon cloudwatchmonitor resources applications amazon ec2 systems managerconfigure manage ec2 instances premises servers aws cloudformationcreate manage resources templates aws cloudtrailtrack user activity api usage aws configtrack resource inventory changes aws opsworksautomate operations chef aws service catalogcreate use standardized products aws trusted advisoroptimize performance security aws personal health dashboardpersonalized view aws service health aws command line interfaceunified tool manage aws services aws management consoleweb based user interface aws managed servicesinfrastructure operations management aws aws marketplace warewolf developers kurian kumolus view related solutions security identity compliance aws identity access management \\( iam \\) manage user access encryption keys amazon inspectoranalyze application security aws certificate managerprovision manage deploy ssl tls certificates aws cloudhsmhardware based key storage regulatory compliance aws directory servicehost manage active directory amazon cloud directorycreate flexible cloud native directories aws key management servicemanaged creation control encryption keys aws organizationspolicy based management multiple aws accounts aws shieldddos protection aws waffilter malicious web traffic aws artifact aws marketplace barracuda web application firewall trend micro deep security vm series next generation firewall bundle 2 view security solutions analytics amazon athenaquery data s3 using sql amazon emrhosted hadoop framework amazon cloudsearchmanaged search service amazon elasticsearch servicerun scale elasticsearch clusters amazon kinesiswork real time streaming data amazon redshiftfast simple cost effective data warehousing amazon quicksightfast business analytics service aws data pipelineorchestration service periodic data driven workflows aws glueprepare load data aws marketplace splunk cloud tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl redshift view bi solutions artificial intelligence amazon lexbuild voice text chatbots amazon pollyturn text lifelike speech amazon rekognitionsearch analyze images amazon machine learningmachine learning developers apache mxnet awsscalable open source deep learning framework aws deep learning amisdeep learning amazon ec2 mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily aws marketplace bitfusion mobile deep learning kony mobilefabric hpe mobile center view mobile solutions mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily application services aws step functionscoordinate distributed applications amazon api gatewaybuild publish manage apis amazon elastic transcodereasy use scalable media transcoding aws marketplace adobe coldfusion 11 nginx citrix netscaler view related products \\( 260 \\) messaging amazon simple queue service \\( sqs \\) managed message queues amazon simple notification service \\( sns \\) pub sub mobile push sms amazon pinpointpush notifications mobile apps amazon simple email service \\( ses \\) email sending receiving business productivity amazon workdocssecure enterprise document storage sharing amazon workmailsecure email calendaring amazon chimefrustration free meetings video calls chat desktop app streaming amazon workspacesvirtual desktops cloud amazon appstream 2 0stream desktop applications securely browser internet things aws iot platformconnect devices cloud aws greengrasslocal compute messaging sync devices aws iot buttoncloud programmable dash button aws marketplace sirqul iot platform opendof iot router view related products contact center amazon connectcloud based contact center service game development amazon gameliftamazon gamelift simple fast cost effective dedicated game server hosting amazon lumberyarda free cross platform 3d game engine full source integrated aws twitch aws marketplace software infrastructure software \\( 1300 \\) application development application servers application stacks big data databases caching network infrastructure operating systems security business software \\( 845 \\) business intelligence collaboration content management crm ecommerce education research financial services high performance computing media project management storage backup developer tools \\( 220 \\) issue bug tracking monitoring log analysis source control testing resource center economics centerfind calculators tools help lower costs aws cloud security centerlearn aws cloud security build secure applications compliance centerlearn compliance programs aws cloud establishing controls architecture centerlearn build scalable reliable applications aws cloud knowledge centerget answers frequently asked technical support questions aws answersget clear guidance aws architects engineers common user questions compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway database amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon simple notification service \\( sns \\) application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile database amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws artifact mobile services aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report application services aws step functions amazon api gateway amazon elastic transcoder messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon chime amazon workdocs amazon workmail desktop app streaming amazon workspaces amazon appstream 2 0 software aws marketplace internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard click return amazon web services homepage aws cloud computing cloud computing choosing cloud platform events webinars customer success global infrastructure getting started aws free tier 's new aws blog aws news analyst reports solutions websites web apps websites website hosting development test ecommerce applications mobile services digital marketing aws marketplace backup storage archive backup recovery data archive disaster recovery aws marketplace big data hpc big data high performance computing internet things aws marketplace financial services game development game development operation amazon game developers aws marketplace digital media digital media aws marketplace healthcare life sciences healthcare life sciences genomics aws marketplace business apps business apps oracle sap microsoft aws marketplace enterprise start ups public sector products compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing aws marketplace storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile aws marketplace databases amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service aws marketplace migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile aws marketplace networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing aws marketplace developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface aws marketplace aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services aws marketplace security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws marketplace analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue aws marketplace artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis mobile aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk application services aws step functions amazon api gateway amazon elastic transcoder aws marketplace messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) aws marketplace business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon appstream 2 0 internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard aws marketplace software infrastructure software \\( 1300 \\) business software \\( 845 \\) developer tools \\( 220 \\) developers get started tools devops forums java javascript mobile php ruby python windows net training resources training self paced labs certification economics center security center architecture center knowledge center whitepapers aws answers analyst reports forums aws youtube channel events webinars documentation compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway databases amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly aws rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon sns application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive support aws support information support center aws trusted advisor technical faqs forums service health dashboard aws personal health dashboard aws managed services contact us partners aws partner network find aws partners premier consulting partners apn competency partners apn partner solutions login apn portal careers contact us sign console download mobile app amazon web services documentation home amazon api gateway documentation related links aws glossary getting started aws sdks tools aws documentation kindle aws general reference aws training aws case studies aws whitepapers amazon api gateway documentation amazon api gateway fully managed service makes easy developers publish maintain monitor secure apis scale create api access data business logic functionality back end services applications running amazon elastic compute cloud \\( amazon ec2 \\) code running aws lambda web application create free account twitter facebook google twitch aws blog 's new \\? rss subscribe updates aws cloud computing cloud computing \\? caching \\? nosql \\? devops \\? products services customer success economics center architecture center security center 's new whitepapers aws blog events sustainable energy press releases aws news analyst reports legal solutions websites website hosting business applications backup recovery disaster recovery data archive devops serverless computing big data high performance computing mobile services digital marketing game development digital media government education health financial services windows aws resources training developers java aws javascript aws mobile aws php aws python aws ruby aws windows net aws sdks tools aws marketplace user groups support plans service health dashboard discussion forums faqs documentation articles tutorials test drives aws business builder manage account management console billing cost management subscribe updates personal information payment method aws identity access management security credentials request service limit increases contact us amazon web services hiring amazon web services \\( aws \\) dynamic growing business unit within amazon com currently hiring software development engineers product managers account managers solutions architects support engineers system engineers designers visit careers page developer specific careers page learn amazon web services equal opportunity employer amazon com company language deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) site terms privacy 2017 amazon web services inc affiliates rights reserved using outdated browser please upgrade internet explorer 11 another modern browser improve experience", 
    "descr3": "menu click return amazon web services homepage sign account english explore aws solutions products deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) account aws management console account settings billing cost management security credentials aws personal health dashboard aws cloud computing solutions products developers partners training resources documentation support services careers contact us aws cloud computing introduction aws cloud computing \\? choosing cloud platform events webinars customer success global infrastructure getting started getting started aws free tier news 's new aws blog aws news analyst reports solutions websites web apps mobile services backup storage archive big data hpc financial services game development digital media healthcare life sciences business apps start upsstart ups use aws everything app needs enterprisesenterprises use aws deliver innovation globally reducing costs government educationpublic sector organizations use aws improve agility reducing costs products compute storage databases migration networking content delivery developer tools aws cost management management tools security identity compliance analytics artificial intelligence mobile services application services messaging business productivity desktop app streaming internet things contact center game development aws marketplace software developers get startedstart developing amazon web services using one pre built sample apps toolssdks ide toolkits command line tools developer tools aws devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers forums user groups java javascript mobile php ruby python windows net training resources training certification training self paced labs certification resource centers resources whitepapers analyst reports forums aws youtube channel events webinars support services aws support aws support information support center aws trusted advisor technical faqs forums aws personal health dashboard service health dashboard contact us aws professional services aws professional services cloud adoption framework aws managed services aws managed services partners aws partner networklearn aws partner network supporting partner programs find aws partnersfind qualified apn partners help aws projects premier consulting partnerslearn top apn consulting partners globally apn partner solutionsfind validated partner solutions run integrate aws key vertical solution areas log apn portaldownload content access training engage aws partner aws site visit apn blog documentation compute storage database networking content delivery migration developer tools management tools security identity compliance analytics artificial intelligence internet things game development mobile services application services messaging business productivity desktop app streaming sdks toolkits additional software services aws general reference aws management console resources websites web apps websites website hostingpower web social mobile apps cloud devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers ecommerce applicationsbuild secure scalable online storefronts digital marketinghighly scalable online advertising marketing services cloud aws marketplace wordpress powered amimoto movable type 6 drupal powered bitnami view related products \\( 95 \\) backup storage archive backup recoverystore retrieve data anywhere time data archivearchive data long term retention disaster recoveryrecover systems data quickly disaster aws marketplace cloud protection manager standard edition softnas cloud ontap cloud aws view related products \\( 35 \\) big data hpc big datastore process large datasets solve business problems high performance computingrun tightly coupled io intensive workloads solve complex science engineering business problems internet thingsquickly build connected devices backend services serverless computingbuild run applications without thinking servers aws marketplace tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl zoomdata view bi solutions financial services financial servicescustomer applications data analytics storage compliance security cloud aws marketplace tibco spotfire informatica cloud advanced amazon redshift view related products \\( 25 \\) game development game development operationservices infrastructure mobile web pc console games amazon game developerscross platform building blocks help make games aws marketplace orbx cloud game console windows server 2008r2 nvidia grid gpu driver red5 media server view related products \\( 25 \\) digital media digital mediamedia storage archiving processing delivery cloud aws marketplace adobe media server 5 extended wowza streaming engine 4 pro edition vantage transcode server view media solutions healthcare life sciences healthcaredeliver improved care patients reduced time effort life sciencesservices infrastructure help company solve complex problems genomicsaccess powerful computing tools run genomics workloads aws marketplace ncbi blast view related products \\( 25 \\) business apps business appsrun business critical applications secure robust environment oraclerun oracle applications aws cloud saprun sap workloads applications aws scalable infrastructure microsoftall microsoft applications aws cloud aws marketplace sap hana one oddo microsoft sharepoint foundation 2013 view related products \\( 845 \\) compute amazon ec2virtual servers cloud amazon ec2 container registrystore retrieve docker images amazon ec2 container servicerun manage docker containers amazon lightsaillaunch manage virtual private servers amazon vpcisolated cloud resources aws batchrun batch jobs scale aws elastic beanstalkrun manage web apps aws lambda run code without thinking servers auto scaling elastic load balancing aws marketplace centos 7 debian gnu linux 8 \\( jessie \\) alces flight view related products \\( 1800 \\) storage amazon simple storage service \\( s3 \\) scalable storage cloud amazon elastic block storage \\( ebs \\) ec2 block storage volumes amazon elastic file system \\( efs \\) fully managed file system ec2 amazon glacierlow cost archive storage cloud aws storage gatewayhybrid storage integration aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport aws marketplace ontap cloud aws cloud protection manager standard edition panzura nas appliance view storage solutions databases amazon aurorahigh performance managed relational database amazon rdsmanaged relational database service mysql postgresql oracle sql server mariadb amazon dynamodbmanaged nosql database amazon dynamodb accelerator \\( dax \\) fully managed memory cache dynamodb amazon elasticachein memory caching service amazon redshiftfast simple cost effective data warehousing aws database migration servicemigrate databases minimal downtime aws marketplace sap hana one couchbase teradata view database software migration aws application discovery servicediscover premises applications streamline migration aws database migration servicemigrate databases minimal downtime aws server migration servicemigrate premises servers aws aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport networking content delivery amazon vpcisolated cloud resources amazon cloudfrontglobal content delivery network amazon route 53scalable domain name system \\( dns \\) aws direct connectdedicated network connection aws elastic load balancing aws marketplace cisco cloud services router brocade f5 big ip view networking solutions developer tools aws codestardevelop deploy aws applications aws codecommitstore code private git repositories aws codebuildbuild test code aws codedeployautomate code deployments aws codepipelinerelease software using continuous delivery aws x rayanalyze debug applications aws command line interfaceunified tool manage aws services aws marketplace zend server coldfusion chef server view developer tools aws cost management aws cost exploreranalyze aws cost usage aws budgetsset custom cost usage budgets reserved instance reportingdive deeper reserved instances \\( ris \\) aws cost usage reportaccess comprehensive cost usage information aws marketplace zend server coldfusion chef server view developer tools management tools amazon cloudwatchmonitor resources applications amazon ec2 systems managerconfigure manage ec2 instances premises servers aws cloudformationcreate manage resources templates aws cloudtrailtrack user activity api usage aws configtrack resource inventory changes aws opsworksautomate operations chef aws service catalogcreate use standardized products aws trusted advisoroptimize performance security aws personal health dashboardpersonalized view aws service health aws command line interfaceunified tool manage aws services aws management consoleweb based user interface aws managed servicesinfrastructure operations management aws aws marketplace warewolf developers kurian kumolus view related solutions security identity compliance aws identity access management \\( iam \\) manage user access encryption keys amazon inspectoranalyze application security aws certificate managerprovision manage deploy ssl tls certificates aws cloudhsmhardware based key storage regulatory compliance aws directory servicehost manage active directory amazon cloud directorycreate flexible cloud native directories aws key management servicemanaged creation control encryption keys aws organizationspolicy based management multiple aws accounts aws shieldddos protection aws waffilter malicious web traffic aws artifact aws marketplace barracuda web application firewall trend micro deep security vm series next generation firewall bundle 2 view security solutions analytics amazon athenaquery data s3 using sql amazon emrhosted hadoop framework amazon cloudsearchmanaged search service amazon elasticsearch servicerun scale elasticsearch clusters amazon kinesiswork real time streaming data amazon redshiftfast simple cost effective data warehousing amazon quicksightfast business analytics service aws data pipelineorchestration service periodic data driven workflows aws glueprepare load data aws marketplace splunk cloud tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl redshift view bi solutions artificial intelligence amazon lexbuild voice text chatbots amazon pollyturn text lifelike speech amazon rekognitionsearch analyze images amazon machine learningmachine learning developers apache mxnet awsscalable open source deep learning framework aws deep learning amisdeep learning amazon ec2 mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily aws marketplace bitfusion mobile deep learning kony mobilefabric hpe mobile center view mobile solutions mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily application services aws step functionscoordinate distributed applications amazon api gatewaybuild publish manage apis amazon elastic transcodereasy use scalable media transcoding aws marketplace adobe coldfusion 11 nginx citrix netscaler view related products \\( 260 \\) messaging amazon simple queue service \\( sqs \\) managed message queues amazon simple notification service \\( sns \\) pub sub mobile push sms amazon pinpointpush notifications mobile apps amazon simple email service \\( ses \\) email sending receiving business productivity amazon workdocssecure enterprise document storage sharing amazon workmailsecure email calendaring amazon chimefrustration free meetings video calls chat desktop app streaming amazon workspacesvirtual desktops cloud amazon appstream 2 0stream desktop applications securely browser internet things aws iot platformconnect devices cloud aws greengrasslocal compute messaging sync devices aws iot buttoncloud programmable dash button aws marketplace sirqul iot platform opendof iot router view related products contact center amazon connectcloud based contact center service game development amazon gameliftamazon gamelift simple fast cost effective dedicated game server hosting amazon lumberyarda free cross platform 3d game engine full source integrated aws twitch aws marketplace software infrastructure software \\( 1300 \\) application development application servers application stacks big data databases caching network infrastructure operating systems security business software \\( 845 \\) business intelligence collaboration content management crm ecommerce education research financial services high performance computing media project management storage backup developer tools \\( 220 \\) issue bug tracking monitoring log analysis source control testing resource center economics centerfind calculators tools help lower costs aws cloud security centerlearn aws cloud security build secure applications compliance centerlearn compliance programs aws cloud establishing controls architecture centerlearn build scalable reliable applications aws cloud knowledge centerget answers frequently asked technical support questions aws answersget clear guidance aws architects engineers common user questions compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway database amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon simple notification service \\( sns \\) application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile database amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws artifact mobile services aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report application services aws step functions amazon api gateway amazon elastic transcoder messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon chime amazon workdocs amazon workmail desktop app streaming amazon workspaces amazon appstream 2 0 software aws marketplace internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard click return amazon web services homepage aws cloud computing cloud computing choosing cloud platform events webinars customer success global infrastructure getting started aws free tier 's new aws blog aws news analyst reports solutions websites web apps websites website hosting development test ecommerce applications mobile services digital marketing aws marketplace backup storage archive backup recovery data archive disaster recovery aws marketplace big data hpc big data high performance computing internet things aws marketplace financial services game development game development operation amazon game developers aws marketplace digital media digital media aws marketplace healthcare life sciences healthcare life sciences genomics aws marketplace business apps business apps oracle sap microsoft aws marketplace enterprise start ups public sector products compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing aws marketplace storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile aws marketplace databases amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service aws marketplace migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile aws marketplace networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing aws marketplace developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface aws marketplace aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services aws marketplace security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws marketplace analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue aws marketplace artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis mobile aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk application services aws step functions amazon api gateway amazon elastic transcoder aws marketplace messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) aws marketplace business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon appstream 2 0 internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard aws marketplace software infrastructure software \\( 1300 \\) business software \\( 845 \\) developer tools \\( 220 \\) developers get started tools devops forums java javascript mobile php ruby python windows net training resources training self paced labs certification economics center security center architecture center knowledge center whitepapers aws answers analyst reports forums aws youtube channel events webinars documentation compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway databases amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly aws rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon sns application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive support aws support information support center aws trusted advisor technical faqs forums service health dashboard aws personal health dashboard aws managed services contact us partners aws partner network find aws partners premier consulting partners apn competency partners apn partner solutions login apn portal careers contact us sign console download mobile app amazon web services documentation home aws config documentation related links aws glossary getting started aws sdks tools aws documentation kindle aws general reference aws training aws case studies aws whitepapers aws config documentation aws config provides detailed view resources associated aws account including configured related one another configurations relationships changed time create free account twitter facebook google twitch aws blog 's new \\? rss subscribe updates aws cloud computing cloud computing \\? caching \\? nosql \\? devops \\? products services customer success economics center architecture center security center 's new whitepapers aws blog events sustainable energy press releases aws news analyst reports legal solutions websites website hosting business applications backup recovery disaster recovery data archive devops serverless computing big data high performance computing mobile services digital marketing game development digital media government education health financial services windows aws resources training developers java aws javascript aws mobile aws php aws python aws ruby aws windows net aws sdks tools aws marketplace user groups support plans service health dashboard discussion forums faqs documentation articles tutorials test drives aws business builder manage account management console billing cost management subscribe updates personal information payment method aws identity access management security credentials request service limit increases contact us amazon web services hiring amazon web services \\( aws \\) dynamic growing business unit within amazon com currently hiring software development engineers product managers account managers solutions architects support engineers system engineers designers visit careers page developer specific careers page learn amazon web services equal opportunity employer amazon com company language deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) site terms privacy 2017 amazon web services inc affiliates rights reserved using outdated browser please upgrade internet explorer 11 another modern browser improve experience", 
    "descr2": "menu click return amazon web services homepage sign account english explore aws solutions products deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) account aws management console account settings billing cost management security credentials aws personal health dashboard aws cloud computing solutions products developers partners training resources documentation support services careers contact us aws cloud computing introduction aws cloud computing \\? choosing cloud platform events webinars customer success global infrastructure getting started getting started aws free tier news 's new aws blog aws news analyst reports solutions websites web apps mobile services backup storage archive big data hpc financial services game development digital media healthcare life sciences business apps start upsstart ups use aws everything app needs enterprisesenterprises use aws deliver innovation globally reducing costs government educationpublic sector organizations use aws improve agility reducing costs products compute storage databases migration networking content delivery developer tools aws cost management management tools security identity compliance analytics artificial intelligence mobile services application services messaging business productivity desktop app streaming internet things contact center game development aws marketplace software developers get startedstart developing amazon web services using one pre built sample apps toolssdks ide toolkits command line tools developer tools aws devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers forums user groups java javascript mobile php ruby python windows net training resources training certification training self paced labs certification resource centers resources whitepapers analyst reports forums aws youtube channel events webinars support services aws support aws support information support center aws trusted advisor technical faqs forums aws personal health dashboard service health dashboard contact us aws professional services aws professional services cloud adoption framework aws managed services aws managed services partners aws partner networklearn aws partner network supporting partner programs find aws partnersfind qualified apn partners help aws projects premier consulting partnerslearn top apn consulting partners globally apn partner solutionsfind validated partner solutions run integrate aws key vertical solution areas log apn portaldownload content access training engage aws partner aws site visit apn blog documentation compute storage database networking content delivery migration developer tools management tools security identity compliance analytics artificial intelligence internet things game development mobile services application services messaging business productivity desktop app streaming sdks toolkits additional software services aws general reference aws management console resources websites web apps websites website hostingpower web social mobile apps cloud devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers ecommerce applicationsbuild secure scalable online storefronts digital marketinghighly scalable online advertising marketing services cloud aws marketplace wordpress powered amimoto movable type 6 drupal powered bitnami view related products \\( 95 \\) backup storage archive backup recoverystore retrieve data anywhere time data archivearchive data long term retention disaster recoveryrecover systems data quickly disaster aws marketplace cloud protection manager standard edition softnas cloud ontap cloud aws view related products \\( 35 \\) big data hpc big datastore process large datasets solve business problems high performance computingrun tightly coupled io intensive workloads solve complex science engineering business problems internet thingsquickly build connected devices backend services serverless computingbuild run applications without thinking servers aws marketplace tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl zoomdata view bi solutions financial services financial servicescustomer applications data analytics storage compliance security cloud aws marketplace tibco spotfire informatica cloud advanced amazon redshift view related products \\( 25 \\) game development game development operationservices infrastructure mobile web pc console games amazon game developerscross platform building blocks help make games aws marketplace orbx cloud game console windows server 2008r2 nvidia grid gpu driver red5 media server view related products \\( 25 \\) digital media digital mediamedia storage archiving processing delivery cloud aws marketplace adobe media server 5 extended wowza streaming engine 4 pro edition vantage transcode server view media solutions healthcare life sciences healthcaredeliver improved care patients reduced time effort life sciencesservices infrastructure help company solve complex problems genomicsaccess powerful computing tools run genomics workloads aws marketplace ncbi blast view related products \\( 25 \\) business apps business appsrun business critical applications secure robust environment oraclerun oracle applications aws cloud saprun sap workloads applications aws scalable infrastructure microsoftall microsoft applications aws cloud aws marketplace sap hana one oddo microsoft sharepoint foundation 2013 view related products \\( 845 \\) compute amazon ec2virtual servers cloud amazon ec2 container registrystore retrieve docker images amazon ec2 container servicerun manage docker containers amazon lightsaillaunch manage virtual private servers amazon vpcisolated cloud resources aws batchrun batch jobs scale aws elastic beanstalkrun manage web apps aws lambda run code without thinking servers auto scaling elastic load balancing aws marketplace centos 7 debian gnu linux 8 \\( jessie \\) alces flight view related products \\( 1800 \\) storage amazon simple storage service \\( s3 \\) scalable storage cloud amazon elastic block storage \\( ebs \\) ec2 block storage volumes amazon elastic file system \\( efs \\) fully managed file system ec2 amazon glacierlow cost archive storage cloud aws storage gatewayhybrid storage integration aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport aws marketplace ontap cloud aws cloud protection manager standard edition panzura nas appliance view storage solutions databases amazon aurorahigh performance managed relational database amazon rdsmanaged relational database service mysql postgresql oracle sql server mariadb amazon dynamodbmanaged nosql database amazon dynamodb accelerator \\( dax \\) fully managed memory cache dynamodb amazon elasticachein memory caching service amazon redshiftfast simple cost effective data warehousing aws database migration servicemigrate databases minimal downtime aws marketplace sap hana one couchbase teradata view database software migration aws application discovery servicediscover premises applications streamline migration aws database migration servicemigrate databases minimal downtime aws server migration servicemigrate premises servers aws aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport networking content delivery amazon vpcisolated cloud resources amazon cloudfrontglobal content delivery network amazon route 53scalable domain name system \\( dns \\) aws direct connectdedicated network connection aws elastic load balancing aws marketplace cisco cloud services router brocade f5 big ip view networking solutions developer tools aws codestardevelop deploy aws applications aws codecommitstore code private git repositories aws codebuildbuild test code aws codedeployautomate code deployments aws codepipelinerelease software using continuous delivery aws x rayanalyze debug applications aws command line interfaceunified tool manage aws services aws marketplace zend server coldfusion chef server view developer tools aws cost management aws cost exploreranalyze aws cost usage aws budgetsset custom cost usage budgets reserved instance reportingdive deeper reserved instances \\( ris \\) aws cost usage reportaccess comprehensive cost usage information aws marketplace zend server coldfusion chef server view developer tools management tools amazon cloudwatchmonitor resources applications amazon ec2 systems managerconfigure manage ec2 instances premises servers aws cloudformationcreate manage resources templates aws cloudtrailtrack user activity api usage aws configtrack resource inventory changes aws opsworksautomate operations chef aws service catalogcreate use standardized products aws trusted advisoroptimize performance security aws personal health dashboardpersonalized view aws service health aws command line interfaceunified tool manage aws services aws management consoleweb based user interface aws managed servicesinfrastructure operations management aws aws marketplace warewolf developers kurian kumolus view related solutions security identity compliance aws identity access management \\( iam \\) manage user access encryption keys amazon inspectoranalyze application security aws certificate managerprovision manage deploy ssl tls certificates aws cloudhsmhardware based key storage regulatory compliance aws directory servicehost manage active directory amazon cloud directorycreate flexible cloud native directories aws key management servicemanaged creation control encryption keys aws organizationspolicy based management multiple aws accounts aws shieldddos protection aws waffilter malicious web traffic aws artifact aws marketplace barracuda web application firewall trend micro deep security vm series next generation firewall bundle 2 view security solutions analytics amazon athenaquery data s3 using sql amazon emrhosted hadoop framework amazon cloudsearchmanaged search service amazon elasticsearch servicerun scale elasticsearch clusters amazon kinesiswork real time streaming data amazon redshiftfast simple cost effective data warehousing amazon quicksightfast business analytics service aws data pipelineorchestration service periodic data driven workflows aws glueprepare load data aws marketplace splunk cloud tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl redshift view bi solutions artificial intelligence amazon lexbuild voice text chatbots amazon pollyturn text lifelike speech amazon rekognitionsearch analyze images amazon machine learningmachine learning developers apache mxnet awsscalable open source deep learning framework aws deep learning amisdeep learning amazon ec2 mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily aws marketplace bitfusion mobile deep learning kony mobilefabric hpe mobile center view mobile solutions mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily application services aws step functionscoordinate distributed applications amazon api gatewaybuild publish manage apis amazon elastic transcodereasy use scalable media transcoding aws marketplace adobe coldfusion 11 nginx citrix netscaler view related products \\( 260 \\) messaging amazon simple queue service \\( sqs \\) managed message queues amazon simple notification service \\( sns \\) pub sub mobile push sms amazon pinpointpush notifications mobile apps amazon simple email service \\( ses \\) email sending receiving business productivity amazon workdocssecure enterprise document storage sharing amazon workmailsecure email calendaring amazon chimefrustration free meetings video calls chat desktop app streaming amazon workspacesvirtual desktops cloud amazon appstream 2 0stream desktop applications securely browser internet things aws iot platformconnect devices cloud aws greengrasslocal compute messaging sync devices aws iot buttoncloud programmable dash button aws marketplace sirqul iot platform opendof iot router view related products contact center amazon connectcloud based contact center service game development amazon gameliftamazon gamelift simple fast cost effective dedicated game server hosting amazon lumberyarda free cross platform 3d game engine full source integrated aws twitch aws marketplace software infrastructure software \\( 1300 \\) application development application servers application stacks big data databases caching network infrastructure operating systems security business software \\( 845 \\) business intelligence collaboration content management crm ecommerce education research financial services high performance computing media project management storage backup developer tools \\( 220 \\) issue bug tracking monitoring log analysis source control testing resource center economics centerfind calculators tools help lower costs aws cloud security centerlearn aws cloud security build secure applications compliance centerlearn compliance programs aws cloud establishing controls architecture centerlearn build scalable reliable applications aws cloud knowledge centerget answers frequently asked technical support questions aws answersget clear guidance aws architects engineers common user questions compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway database amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon simple notification service \\( sns \\) application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile database amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws artifact mobile services aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report application services aws step functions amazon api gateway amazon elastic transcoder messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon chime amazon workdocs amazon workmail desktop app streaming amazon workspaces amazon appstream 2 0 software aws marketplace internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard click return amazon web services homepage aws cloud computing cloud computing choosing cloud platform events webinars customer success global infrastructure getting started aws free tier 's new aws blog aws news analyst reports solutions websites web apps websites website hosting development test ecommerce applications mobile services digital marketing aws marketplace backup storage archive backup recovery data archive disaster recovery aws marketplace big data hpc big data high performance computing internet things aws marketplace financial services game development game development operation amazon game developers aws marketplace digital media digital media aws marketplace healthcare life sciences healthcare life sciences genomics aws marketplace business apps business apps oracle sap microsoft aws marketplace enterprise start ups public sector products compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing aws marketplace storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile aws marketplace databases amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service aws marketplace migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile aws marketplace networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing aws marketplace developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface aws marketplace aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services aws marketplace security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws marketplace analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue aws marketplace artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis mobile aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk application services aws step functions amazon api gateway amazon elastic transcoder aws marketplace messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) aws marketplace business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon appstream 2 0 internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard aws marketplace software infrastructure software \\( 1300 \\) business software \\( 845 \\) developer tools \\( 220 \\) developers get started tools devops forums java javascript mobile php ruby python windows net training resources training self paced labs certification economics center security center architecture center knowledge center whitepapers aws answers analyst reports forums aws youtube channel events webinars documentation compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway databases amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly aws rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon sns application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive support aws support information support center aws trusted advisor technical faqs forums service health dashboard aws personal health dashboard aws managed services contact us partners aws partner network find aws partners premier consulting partners apn competency partners apn partner solutions login apn portal careers contact us sign console download mobile app amazon web services documentation home aws cloudformation documentation related links aws glossary getting started aws sdks tools aws documentation kindle aws general reference aws training aws case studies aws whitepapers aws cloudformation documentation aws cloudformation enables create provision aws infrastructure deployments predictably repeatedly helps leverage aws products amazon ec2 amazon elastic block store amazon sns elastic load balancing auto scaling build highly reliable highly scalable cost effective applications cloud without worrying creating configuring underlying aws infrastructure aws cloudformation enables use template file create delete collection resources together single unit \\( stack \\) create free account twitter facebook google twitch aws blog 's new \\? rss subscribe updates aws cloud computing cloud computing \\? caching \\? nosql \\? devops \\? products services customer success economics center architecture center security center 's new whitepapers aws blog events sustainable energy press releases aws news analyst reports legal solutions websites website hosting business applications backup recovery disaster recovery data archive devops serverless computing big data high performance computing mobile services digital marketing game development digital media government education health financial services windows aws resources training developers java aws javascript aws mobile aws php aws python aws ruby aws windows net aws sdks tools aws marketplace user groups support plans service health dashboard discussion forums faqs documentation articles tutorials test drives aws business builder manage account management console billing cost management subscribe updates personal information payment method aws identity access management security credentials request service limit increases contact us amazon web services hiring amazon web services \\( aws \\) dynamic growing business unit within amazon com currently hiring software development engineers product managers account managers solutions architects support engineers system engineers designers visit careers page developer specific careers page learn amazon web services equal opportunity employer amazon com company language deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) site terms privacy 2017 amazon web services inc affiliates rights reserved using outdated browser please upgrade internet explorer 11 another modern browser improve experience", 
    "descr1": "menu click return amazon web services homepage sign account english explore aws solutions products deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) account aws management console account settings billing cost management security credentials aws personal health dashboard aws cloud computing solutions products developers partners training resources documentation support services careers contact us aws cloud computing introduction aws cloud computing \\? choosing cloud platform events webinars customer success global infrastructure getting started getting started aws free tier news 's new aws blog aws news analyst reports solutions websites web apps mobile services backup storage archive big data hpc financial services game development digital media healthcare life sciences business apps start upsstart ups use aws everything app needs enterprisesenterprises use aws deliver innovation globally reducing costs government educationpublic sector organizations use aws improve agility reducing costs products compute storage databases migration networking content delivery developer tools aws cost management management tools security identity compliance analytics artificial intelligence mobile services application services messaging business productivity desktop app streaming internet things contact center game development aws marketplace software developers get startedstart developing amazon web services using one pre built sample apps toolssdks ide toolkits command line tools developer tools aws devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers forums user groups java javascript mobile php ruby python windows net training resources training certification training self paced labs certification resource centers resources whitepapers analyst reports forums aws youtube channel events webinars support services aws support aws support information support center aws trusted advisor technical faqs forums aws personal health dashboard service health dashboard contact us aws professional services aws professional services cloud adoption framework aws managed services aws managed services partners aws partner networklearn aws partner network supporting partner programs find aws partnersfind qualified apn partners help aws projects premier consulting partnerslearn top apn consulting partners globally apn partner solutionsfind validated partner solutions run integrate aws key vertical solution areas log apn portaldownload content access training engage aws partner aws site visit apn blog documentation compute storage database networking content delivery migration developer tools management tools security identity compliance analytics artificial intelligence internet things game development mobile services application services messaging business productivity desktop app streaming sdks toolkits additional software services aws general reference aws management console resources websites web apps websites website hostingpower web social mobile apps cloud devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers ecommerce applicationsbuild secure scalable online storefronts digital marketinghighly scalable online advertising marketing services cloud aws marketplace wordpress powered amimoto movable type 6 drupal powered bitnami view related products \\( 95 \\) backup storage archive backup recoverystore retrieve data anywhere time data archivearchive data long term retention disaster recoveryrecover systems data quickly disaster aws marketplace cloud protection manager standard edition softnas cloud ontap cloud aws view related products \\( 35 \\) big data hpc big datastore process large datasets solve business problems high performance computingrun tightly coupled io intensive workloads solve complex science engineering business problems internet thingsquickly build connected devices backend services serverless computingbuild run applications without thinking servers aws marketplace tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl zoomdata view bi solutions financial services financial servicescustomer applications data analytics storage compliance security cloud aws marketplace tibco spotfire informatica cloud advanced amazon redshift view related products \\( 25 \\) game development game development operationservices infrastructure mobile web pc console games amazon game developerscross platform building blocks help make games aws marketplace orbx cloud game console windows server 2008r2 nvidia grid gpu driver red5 media server view related products \\( 25 \\) digital media digital mediamedia storage archiving processing delivery cloud aws marketplace adobe media server 5 extended wowza streaming engine 4 pro edition vantage transcode server view media solutions healthcare life sciences healthcaredeliver improved care patients reduced time effort life sciencesservices infrastructure help company solve complex problems genomicsaccess powerful computing tools run genomics workloads aws marketplace ncbi blast view related products \\( 25 \\) business apps business appsrun business critical applications secure robust environment oraclerun oracle applications aws cloud saprun sap workloads applications aws scalable infrastructure microsoftall microsoft applications aws cloud aws marketplace sap hana one oddo microsoft sharepoint foundation 2013 view related products \\( 845 \\) compute amazon ec2virtual servers cloud amazon ec2 container registrystore retrieve docker images amazon ec2 container servicerun manage docker containers amazon lightsaillaunch manage virtual private servers amazon vpcisolated cloud resources aws batchrun batch jobs scale aws elastic beanstalkrun manage web apps aws lambda run code without thinking servers auto scaling elastic load balancing aws marketplace centos 7 debian gnu linux 8 \\( jessie \\) alces flight view related products \\( 1800 \\) storage amazon simple storage service \\( s3 \\) scalable storage cloud amazon elastic block storage \\( ebs \\) ec2 block storage volumes amazon elastic file system \\( efs \\) fully managed file system ec2 amazon glacierlow cost archive storage cloud aws storage gatewayhybrid storage integration aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport aws marketplace ontap cloud aws cloud protection manager standard edition panzura nas appliance view storage solutions databases amazon aurorahigh performance managed relational database amazon rdsmanaged relational database service mysql postgresql oracle sql server mariadb amazon dynamodbmanaged nosql database amazon dynamodb accelerator \\( dax \\) fully managed memory cache dynamodb amazon elasticachein memory caching service amazon redshiftfast simple cost effective data warehousing aws database migration servicemigrate databases minimal downtime aws marketplace sap hana one couchbase teradata view database software migration aws application discovery servicediscover premises applications streamline migration aws database migration servicemigrate databases minimal downtime aws server migration servicemigrate premises servers aws aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport networking content delivery amazon vpcisolated cloud resources amazon cloudfrontglobal content delivery network amazon route 53scalable domain name system \\( dns \\) aws direct connectdedicated network connection aws elastic load balancing aws marketplace cisco cloud services router brocade f5 big ip view networking solutions developer tools aws codestardevelop deploy aws applications aws codecommitstore code private git repositories aws codebuildbuild test code aws codedeployautomate code deployments aws codepipelinerelease software using continuous delivery aws x rayanalyze debug applications aws command line interfaceunified tool manage aws services aws marketplace zend server coldfusion chef server view developer tools aws cost management aws cost exploreranalyze aws cost usage aws budgetsset custom cost usage budgets reserved instance reportingdive deeper reserved instances \\( ris \\) aws cost usage reportaccess comprehensive cost usage information aws marketplace zend server coldfusion chef server view developer tools management tools amazon cloudwatchmonitor resources applications amazon ec2 systems managerconfigure manage ec2 instances premises servers aws cloudformationcreate manage resources templates aws cloudtrailtrack user activity api usage aws configtrack resource inventory changes aws opsworksautomate operations chef aws service catalogcreate use standardized products aws trusted advisoroptimize performance security aws personal health dashboardpersonalized view aws service health aws command line interfaceunified tool manage aws services aws management consoleweb based user interface aws managed servicesinfrastructure operations management aws aws marketplace warewolf developers kurian kumolus view related solutions security identity compliance aws identity access management \\( iam \\) manage user access encryption keys amazon inspectoranalyze application security aws certificate managerprovision manage deploy ssl tls certificates aws cloudhsmhardware based key storage regulatory compliance aws directory servicehost manage active directory amazon cloud directorycreate flexible cloud native directories aws key management servicemanaged creation control encryption keys aws organizationspolicy based management multiple aws accounts aws shieldddos protection aws waffilter malicious web traffic aws artifact aws marketplace barracuda web application firewall trend micro deep security vm series next generation firewall bundle 2 view security solutions analytics amazon athenaquery data s3 using sql amazon emrhosted hadoop framework amazon cloudsearchmanaged search service amazon elasticsearch servicerun scale elasticsearch clusters amazon kinesiswork real time streaming data amazon redshiftfast simple cost effective data warehousing amazon quicksightfast business analytics service aws data pipelineorchestration service periodic data driven workflows aws glueprepare load data aws marketplace splunk cloud tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl redshift view bi solutions artificial intelligence amazon lexbuild voice text chatbots amazon pollyturn text lifelike speech amazon rekognitionsearch analyze images amazon machine learningmachine learning developers apache mxnet awsscalable open source deep learning framework aws deep learning amisdeep learning amazon ec2 mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily aws marketplace bitfusion mobile deep learning kony mobilefabric hpe mobile center view mobile solutions mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily application services aws step functionscoordinate distributed applications amazon api gatewaybuild publish manage apis amazon elastic transcodereasy use scalable media transcoding aws marketplace adobe coldfusion 11 nginx citrix netscaler view related products \\( 260 \\) messaging amazon simple queue service \\( sqs \\) managed message queues amazon simple notification service \\( sns \\) pub sub mobile push sms amazon pinpointpush notifications mobile apps amazon simple email service \\( ses \\) email sending receiving business productivity amazon workdocssecure enterprise document storage sharing amazon workmailsecure email calendaring amazon chimefrustration free meetings video calls chat desktop app streaming amazon workspacesvirtual desktops cloud amazon appstream 2 0stream desktop applications securely browser internet things aws iot platformconnect devices cloud aws greengrasslocal compute messaging sync devices aws iot buttoncloud programmable dash button aws marketplace sirqul iot platform opendof iot router view related products contact center amazon connectcloud based contact center service game development amazon gameliftamazon gamelift simple fast cost effective dedicated game server hosting amazon lumberyarda free cross platform 3d game engine full source integrated aws twitch aws marketplace software infrastructure software \\( 1300 \\) application development application servers application stacks big data databases caching network infrastructure operating systems security business software \\( 845 \\) business intelligence collaboration content management crm ecommerce education research financial services high performance computing media project management storage backup developer tools \\( 220 \\) issue bug tracking monitoring log analysis source control testing resource center economics centerfind calculators tools help lower costs aws cloud security centerlearn aws cloud security build secure applications compliance centerlearn compliance programs aws cloud establishing controls architecture centerlearn build scalable reliable applications aws cloud knowledge centerget answers frequently asked technical support questions aws answersget clear guidance aws architects engineers common user questions compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway database amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon simple notification service \\( sns \\) application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile database amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws artifact mobile services aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report application services aws step functions amazon api gateway amazon elastic transcoder messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon chime amazon workdocs amazon workmail desktop app streaming amazon workspaces amazon appstream 2 0 software aws marketplace internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard click return amazon web services homepage aws cloud computing cloud computing choosing cloud platform events webinars customer success global infrastructure getting started aws free tier 's new aws blog aws news analyst reports solutions websites web apps websites website hosting development test ecommerce applications mobile services digital marketing aws marketplace backup storage archive backup recovery data archive disaster recovery aws marketplace big data hpc big data high performance computing internet things aws marketplace financial services game development game development operation amazon game developers aws marketplace digital media digital media aws marketplace healthcare life sciences healthcare life sciences genomics aws marketplace business apps business apps oracle sap microsoft aws marketplace enterprise start ups public sector products compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing aws marketplace storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile aws marketplace databases amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service aws marketplace migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile aws marketplace networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing aws marketplace developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface aws marketplace aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services aws marketplace security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws marketplace analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue aws marketplace artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis mobile aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk application services aws step functions amazon api gateway amazon elastic transcoder aws marketplace messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) aws marketplace business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon appstream 2 0 internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard aws marketplace software infrastructure software \\( 1300 \\) business software \\( 845 \\) developer tools \\( 220 \\) developers get started tools devops forums java javascript mobile php ruby python windows net training resources training self paced labs certification economics center security center architecture center knowledge center whitepapers aws answers analyst reports forums aws youtube channel events webinars documentation compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway databases amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly aws rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon sns application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive support aws support information support center aws trusted advisor technical faqs forums service health dashboard aws personal health dashboard aws managed services contact us partners aws partner network find aws partners premier consulting partners apn competency partners apn partner solutions login apn portal careers contact us sign console download mobile app aws documentation welcome amazon web services \\( aws \\) documentation whether new aws advanced user find useful information services ranging introductions advanced features click tabs view various categories services tools aws cloud look term aws glossary learn host static website using aws getting started tutorial deploy first application using aws elastic beanstalk getting started tutorial get started relational databases using amazon rds analyze big data amazon elastic mapreduce hadoop getting started tutorial learn host wordpress blog amazon linux learn back files amazon simple storage service \\( s3 \\) quickstart learn launch linux virtual machine amazon ec2 quickstart services getting started services compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway database amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog trusted advisor aws health aws management console aws command line interface aws tools windows powershell security identity compliance identity access management amazon inspector aws artifact aws certificate manager aws cloudhsm aws directory service aws kms aws organizations aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws internet things aws greengrass aws iot contact center amazon connect game development amazon lumberyard \\( beta \\) amazon gamelift mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon sns application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon sns amazon ses amazon sqs business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto 3 \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resource groups tagging api resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive getting started getting started aws get introduction amazon web services including examples get started links resources help learn getting started aws management console learn aws management console includes instructions starting various services steps customizing navigation bar tips accessing region settings security credentials billing updates hosting static website learn deploy static website using aws build wordpress website learn build wordpress website using aws elastic beanstalk amazon s3 amazon rds build drupal website learn build drupal website using aws elastic beanstalk amazon efs amazon rds deploying web app learn deploy node js app using aws elastic beanstalk tutorial deploy net application using aws elastic beanstalk follow instructions visual quickstart deploy sample application aws elastic beanstalk aws devops learn use aws codepipeline automatically deploy source code aws codecommit deployment targets aws codedeploy aws elastic beanstalk aws opsworks getting started resource center start building aws aws training certification develop skills design deploy operate infrastructure applications aws cloud aws glossary learn terms related aws get started aws learn start using aws minutes aws free tier gain free hands experience aws 12 months create free account twitter facebook google twitch aws blog 's new \\? rss subscribe updates aws cloud computing cloud computing \\? caching \\? nosql \\? devops \\? products services customer success economics center architecture center security center 's new whitepapers aws blog events sustainable energy press releases aws news analyst reports legal solutions websites website hosting business applications backup recovery disaster recovery data archive devops serverless computing big data high performance computing mobile services digital marketing game development digital media government education health financial services windows aws resources training developers java aws javascript aws mobile aws php aws python aws ruby aws windows net aws sdks tools aws marketplace user groups support plans service health dashboard discussion forums faqs documentation articles tutorials test drives aws business builder manage account management console billing cost management subscribe updates personal information payment method aws identity access management security credentials request service limit increases contact us amazon web services hiring amazon web services \\( aws \\) dynamic growing business unit within amazon com currently hiring software development engineers product managers account managers solutions architects support engineers system engineers designers visit careers page developer specific careers page learn amazon web services equal opportunity employer amazon com company language deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) site terms privacy 2017 amazon web services inc affiliates rights reserved using outdated browser please upgrade internet explorer 11 another modern browser improve experience", 
    "crawled_date": "2017-06-10T13:59:23.109037"
  }, 
  "362": {
    "api_url": "visa.com", 
    "progweb_url": "https://www.programmableweb.com/api/visa-payment-account-attributes-inquiry", 
    "progweb_date": "10.31.2016", 
    "progweb_descr": "This API is used with a funds transfer to/from a Visa payment account to determine key characteristics of a recipient card before initiating the transfer like country, card-type, block status and more.  It has been enhanced to query PullFundsTransactions(AFT) and PushFundsTransactions(OCT) eligibility (both domestic and cross-border) for multiple U.S. debit networks. This includes Attributes Inquiry and Funds Transfer Attributes Inquiry. The two APIs take the primary account number as an input and return a variety of attributes associated with the payment account. This allows you to access both general attributes of the account and specific attributes that are needed to use a payment account as part of a funds transfer.", 
    "api_name": "Visa Payment Account Attributes Inquiry", 
    "progweb_cat": "Financial,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:23.112001"
  }, 
  "363": {
    "api_url": "visa.com", 
    "progweb_url": "https://www.programmableweb.com/api/visa-mtx-catalog-management", 
    "progweb_date": "10.31.2016", 
    "progweb_descr": "This API provides the functionality to create and organize products for purchase and allows creating one or more categories. A category can be used to group similar product offers and includes; Category Import, Get Property, Get Offer and more.  MTX provides a service that lets developers create payment solutions using points, promotional rewards, or virtual currency and coupons. MTX provides access to in-app microtransactions on top of a highly-scalable hosted environment for application developers to offload the heavy transaction burden.", 
    "api_name": "Visa MTX Catalog Management", 
    "progweb_cat": "Financial,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:23.111035"
  }, 
  "360": {
    "link5": "http://docs.aws.amazon.com/AWSECommerceService/latest/DG/CHAP_ApiReference.html", 
    "link4": "https://aws.amazon.com/documentation/apigateway/", 
    "link1": "https://aws.amazon.com/documentation/", 
    "api_url": "amazon.com", 
    "link3": "https://aws.amazon.com/documentation/config/", 
    "link2": "https://aws.amazon.com/documentation/cloudformation/", 
    "progweb_url": "https://www.programmableweb.com/api/amazon-incentives", 
    "progweb_date": "10.27.2016", 
    "progweb_descr": "Amazon Gift Codes may be used to incentivize customers and employees or disburse payments. The Amazon Incentives API supports the requisition and distribution of the Amazon Gift Codes. Recipients can instantly redeem and use their rewards to shop on the Amazon. Developers can also use the different functional and automation features of the API to streamline inventory management and enhance operational efficiency. The API\u2019s documentation is accessible upon signing up for an account through a link provided at its portal homepage. The signup is a simple registration process that allows developers to access administrative and technical support from the Amazon Incentives team.", 
    "api_name": "Amazon Incentives", 
    "progweb_cat": "Customer Relationship Management,eCommerce", 
    "descr5": "menu amazon web services sign consoletry aws free deutsch english espa ol fran ais portugu \\( \\) product advertising api developer guide \\( api version 2013 08 01 \\) welcome programming guide getting started becoming associate becoming product advertising api developer reading licensing agreement using product advertising api scratchpad e commerce web services e commerce \\? web service \\? xml \\? xml syntax xml structures using xml wsdl \\? restricted parts wsdl anatomy wsdl definitions namespaces versioning request definitions response definitions response group definitions porttype binding service wsdl location schema \\? schema location product advertising api terminology basic concepts marketplace product advertising api \\? make money using product advertising api \\? items sale item identifiers item identifiers summary product advertising api operations find items find specific items shopping cart operations visual introduction product advertising api search items find item information create shopping cart organization items amazon browse nodes browse node properties browse nodes items browse node ids browse nodes search indices find browse nodes search indices search indices locales variations variation parents return variations variation images variation dimensions accessories related items requests anatomy rest request rest syntax spaces requests separator characters setting parameter values soap requests structure soap request soap endpoints xml message itemsearch soap request request authentication authentication \\? managing aws credentials hmac sha256 signatures rest requests authenticating rest requests java sample code calculating signature version 2 signatures example rest requests authenticating soap requests using soap without ws security batch requests parameters differ shared parameters performing multiple itemlookups one request parameters common product advertising api requests required parameters associatetag parameter optional parameters xml encoding parameters debugging parameters responses anatomy response version information segment operation request segment request validation segment item attributes segment paging sorting responses find items buy search operations items cannot buy availability parameter parameter restrictions availability items sold merchants required itemsearch parameters parameter support search index search indices parameters locales common itemsearch parameters return available items inaccurate availabilities availability parameter restrictions constraints search across indices blended searches power searches power search syntax power search keywords power search operators power search tips use search bins find items narrowby attribute narrowby values narrowby values per search index find items browse nodes traverse browse node hierarchy understand browsenode results drilling request response examples discover accessories discover available items discover newer versions discover similar items discover top lists discover variations find related items find similar items lookup isbn lookup upc retrieve customer reviews retrieve images retrieve price search actor search author search keyword search manufacturer search theme search theme category search title motivate customers buy promotions promotion categories benefit eligible items common response elements reviews suggest similar items buy similaritylookup find similar item ids return items similar cart items similar versions item related items top sellers find top sellers browse node get top sellers shopping cart new releases sort popularity price condition returning price availability information returning prices minimum advertised price offer summaries returning offers returning information offer providing price ranges product categories items offers determining parent items returning offers item variations variation dimensions determining availability availability values checking offer listing id using itemsearch availability parameter working remote shopping carts shopping cart concepts cart identifiers items cannot added active cart area remote shopping carts hosted amazon cart lifespan remote shopping cart tasks creating remote shopping cart specifying items cartcreate request using values returned cartcreate cart operations modifying items remote shopping cart adding items cart adding items saved later removing items cart retrieving contents cart add cart form purchase items remote shopping cart order pipeline implement proceed checkout button purchaseurl troubleshooting syntax parameter errors processing error results errors retrieving errors troubleshooting applications error codes messages error codes error messages best programming practices locale considerations locales associate ids general differences shipping restrictions api reference operations itemsearch browsenodelookup itemlookup similaritylookup cartadd cartclear cartcreate cartget cartmodify common request parameters response groups accessories alternateversions browsenodeinfo browsenodes cart cartnewreleases carttopsellers cartsimilarities editorialreview images itemattributes itemids large medium mostgifted mostwishedfor newreleases offerfull offerlistings offers offersummary promotionsummary relateditems request reviews salesrank searchbins similarities small topsellers tracks variations variation dimensions variationimages variationmatrix variationoffers variationsummary relevant operations variation dimensions response elements common response groups response elements locale reference product advertising api locale information br marketplace locale information ca marketplace locale information cn marketplace locale information de marketplace locale information es marketplace locale information fr marketplace locale information marketplace locale information marketplace locale information jp marketplace locale information mx marketplace locale information uk marketplace locale information us marketplace itemsearch sort values resources document history api reference topics operations common request parameters response groups response elements common response groups response elements locale reference product advertising api itemsearch sort values following sections guide provide reference material product advertising api information concepts programming tasks associated reference material refer previous chapters guide document conventions previous next 2017 amazon web services inc affiliates rights reserved terms use 2017 amazon web services inc affiliates rights reserved question \\? try forums page help \\? yesno feedback", 
    "descr4": "menu click return amazon web services homepage sign account english explore aws solutions products deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) account aws management console account settings billing cost management security credentials aws personal health dashboard aws cloud computing solutions products developers partners training resources documentation support services careers contact us aws cloud computing introduction aws cloud computing \\? choosing cloud platform events webinars customer success global infrastructure getting started getting started aws free tier news 's new aws blog aws news analyst reports solutions websites web apps mobile services backup storage archive big data hpc financial services game development digital media healthcare life sciences business apps start upsstart ups use aws everything app needs enterprisesenterprises use aws deliver innovation globally reducing costs government educationpublic sector organizations use aws improve agility reducing costs products compute storage databases migration networking content delivery developer tools aws cost management management tools security identity compliance analytics artificial intelligence mobile services application services messaging business productivity desktop app streaming internet things contact center game development aws marketplace software developers get startedstart developing amazon web services using one pre built sample apps toolssdks ide toolkits command line tools developer tools aws devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers forums user groups java javascript mobile php ruby python windows net training resources training certification training self paced labs certification resource centers resources whitepapers analyst reports forums aws youtube channel events webinars support services aws support aws support information support center aws trusted advisor technical faqs forums aws personal health dashboard service health dashboard contact us aws professional services aws professional services cloud adoption framework aws managed services aws managed services partners aws partner networklearn aws partner network supporting partner programs find aws partnersfind qualified apn partners help aws projects premier consulting partnerslearn top apn consulting partners globally apn partner solutionsfind validated partner solutions run integrate aws key vertical solution areas log apn portaldownload content access training engage aws partner aws site visit apn blog documentation compute storage database networking content delivery migration developer tools management tools security identity compliance analytics artificial intelligence internet things game development mobile services application services messaging business productivity desktop app streaming sdks toolkits additional software services aws general reference aws management console resources websites web apps websites website hostingpower web social mobile apps cloud devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers ecommerce applicationsbuild secure scalable online storefronts digital marketinghighly scalable online advertising marketing services cloud aws marketplace wordpress powered amimoto movable type 6 drupal powered bitnami view related products \\( 95 \\) backup storage archive backup recoverystore retrieve data anywhere time data archivearchive data long term retention disaster recoveryrecover systems data quickly disaster aws marketplace cloud protection manager standard edition softnas cloud ontap cloud aws view related products \\( 35 \\) big data hpc big datastore process large datasets solve business problems high performance computingrun tightly coupled io intensive workloads solve complex science engineering business problems internet thingsquickly build connected devices backend services serverless computingbuild run applications without thinking servers aws marketplace tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl zoomdata view bi solutions financial services financial servicescustomer applications data analytics storage compliance security cloud aws marketplace tibco spotfire informatica cloud advanced amazon redshift view related products \\( 25 \\) game development game development operationservices infrastructure mobile web pc console games amazon game developerscross platform building blocks help make games aws marketplace orbx cloud game console windows server 2008r2 nvidia grid gpu driver red5 media server view related products \\( 25 \\) digital media digital mediamedia storage archiving processing delivery cloud aws marketplace adobe media server 5 extended wowza streaming engine 4 pro edition vantage transcode server view media solutions healthcare life sciences healthcaredeliver improved care patients reduced time effort life sciencesservices infrastructure help company solve complex problems genomicsaccess powerful computing tools run genomics workloads aws marketplace ncbi blast view related products \\( 25 \\) business apps business appsrun business critical applications secure robust environment oraclerun oracle applications aws cloud saprun sap workloads applications aws scalable infrastructure microsoftall microsoft applications aws cloud aws marketplace sap hana one oddo microsoft sharepoint foundation 2013 view related products \\( 845 \\) compute amazon ec2virtual servers cloud amazon ec2 container registrystore retrieve docker images amazon ec2 container servicerun manage docker containers amazon lightsaillaunch manage virtual private servers amazon vpcisolated cloud resources aws batchrun batch jobs scale aws elastic beanstalkrun manage web apps aws lambda run code without thinking servers auto scaling elastic load balancing aws marketplace centos 7 debian gnu linux 8 \\( jessie \\) alces flight view related products \\( 1800 \\) storage amazon simple storage service \\( s3 \\) scalable storage cloud amazon elastic block storage \\( ebs \\) ec2 block storage volumes amazon elastic file system \\( efs \\) fully managed file system ec2 amazon glacierlow cost archive storage cloud aws storage gatewayhybrid storage integration aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport aws marketplace ontap cloud aws cloud protection manager standard edition panzura nas appliance view storage solutions databases amazon aurorahigh performance managed relational database amazon rdsmanaged relational database service mysql postgresql oracle sql server mariadb amazon dynamodbmanaged nosql database amazon dynamodb accelerator \\( dax \\) fully managed memory cache dynamodb amazon elasticachein memory caching service amazon redshiftfast simple cost effective data warehousing aws database migration servicemigrate databases minimal downtime aws marketplace sap hana one couchbase teradata view database software migration aws application discovery servicediscover premises applications streamline migration aws database migration servicemigrate databases minimal downtime aws server migration servicemigrate premises servers aws aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport networking content delivery amazon vpcisolated cloud resources amazon cloudfrontglobal content delivery network amazon route 53scalable domain name system \\( dns \\) aws direct connectdedicated network connection aws elastic load balancing aws marketplace cisco cloud services router brocade f5 big ip view networking solutions developer tools aws codestardevelop deploy aws applications aws codecommitstore code private git repositories aws codebuildbuild test code aws codedeployautomate code deployments aws codepipelinerelease software using continuous delivery aws x rayanalyze debug applications aws command line interfaceunified tool manage aws services aws marketplace zend server coldfusion chef server view developer tools aws cost management aws cost exploreranalyze aws cost usage aws budgetsset custom cost usage budgets reserved instance reportingdive deeper reserved instances \\( ris \\) aws cost usage reportaccess comprehensive cost usage information aws marketplace zend server coldfusion chef server view developer tools management tools amazon cloudwatchmonitor resources applications amazon ec2 systems managerconfigure manage ec2 instances premises servers aws cloudformationcreate manage resources templates aws cloudtrailtrack user activity api usage aws configtrack resource inventory changes aws opsworksautomate operations chef aws service catalogcreate use standardized products aws trusted advisoroptimize performance security aws personal health dashboardpersonalized view aws service health aws command line interfaceunified tool manage aws services aws management consoleweb based user interface aws managed servicesinfrastructure operations management aws aws marketplace warewolf developers kurian kumolus view related solutions security identity compliance aws identity access management \\( iam \\) manage user access encryption keys amazon inspectoranalyze application security aws certificate managerprovision manage deploy ssl tls certificates aws cloudhsmhardware based key storage regulatory compliance aws directory servicehost manage active directory amazon cloud directorycreate flexible cloud native directories aws key management servicemanaged creation control encryption keys aws organizationspolicy based management multiple aws accounts aws shieldddos protection aws waffilter malicious web traffic aws artifact aws marketplace barracuda web application firewall trend micro deep security vm series next generation firewall bundle 2 view security solutions analytics amazon athenaquery data s3 using sql amazon emrhosted hadoop framework amazon cloudsearchmanaged search service amazon elasticsearch servicerun scale elasticsearch clusters amazon kinesiswork real time streaming data amazon redshiftfast simple cost effective data warehousing amazon quicksightfast business analytics service aws data pipelineorchestration service periodic data driven workflows aws glueprepare load data aws marketplace splunk cloud tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl redshift view bi solutions artificial intelligence amazon lexbuild voice text chatbots amazon pollyturn text lifelike speech amazon rekognitionsearch analyze images amazon machine learningmachine learning developers apache mxnet awsscalable open source deep learning framework aws deep learning amisdeep learning amazon ec2 mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily aws marketplace bitfusion mobile deep learning kony mobilefabric hpe mobile center view mobile solutions mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily application services aws step functionscoordinate distributed applications amazon api gatewaybuild publish manage apis amazon elastic transcodereasy use scalable media transcoding aws marketplace adobe coldfusion 11 nginx citrix netscaler view related products \\( 260 \\) messaging amazon simple queue service \\( sqs \\) managed message queues amazon simple notification service \\( sns \\) pub sub mobile push sms amazon pinpointpush notifications mobile apps amazon simple email service \\( ses \\) email sending receiving business productivity amazon workdocssecure enterprise document storage sharing amazon workmailsecure email calendaring amazon chimefrustration free meetings video calls chat desktop app streaming amazon workspacesvirtual desktops cloud amazon appstream 2 0stream desktop applications securely browser internet things aws iot platformconnect devices cloud aws greengrasslocal compute messaging sync devices aws iot buttoncloud programmable dash button aws marketplace sirqul iot platform opendof iot router view related products contact center amazon connectcloud based contact center service game development amazon gameliftamazon gamelift simple fast cost effective dedicated game server hosting amazon lumberyarda free cross platform 3d game engine full source integrated aws twitch aws marketplace software infrastructure software \\( 1300 \\) application development application servers application stacks big data databases caching network infrastructure operating systems security business software \\( 845 \\) business intelligence collaboration content management crm ecommerce education research financial services high performance computing media project management storage backup developer tools \\( 220 \\) issue bug tracking monitoring log analysis source control testing resource center economics centerfind calculators tools help lower costs aws cloud security centerlearn aws cloud security build secure applications compliance centerlearn compliance programs aws cloud establishing controls architecture centerlearn build scalable reliable applications aws cloud knowledge centerget answers frequently asked technical support questions aws answersget clear guidance aws architects engineers common user questions compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway database amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon simple notification service \\( sns \\) application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile database amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws artifact mobile services aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report application services aws step functions amazon api gateway amazon elastic transcoder messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon chime amazon workdocs amazon workmail desktop app streaming amazon workspaces amazon appstream 2 0 software aws marketplace internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard click return amazon web services homepage aws cloud computing cloud computing choosing cloud platform events webinars customer success global infrastructure getting started aws free tier 's new aws blog aws news analyst reports solutions websites web apps websites website hosting development test ecommerce applications mobile services digital marketing aws marketplace backup storage archive backup recovery data archive disaster recovery aws marketplace big data hpc big data high performance computing internet things aws marketplace financial services game development game development operation amazon game developers aws marketplace digital media digital media aws marketplace healthcare life sciences healthcare life sciences genomics aws marketplace business apps business apps oracle sap microsoft aws marketplace enterprise start ups public sector products compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing aws marketplace storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile aws marketplace databases amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service aws marketplace migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile aws marketplace networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing aws marketplace developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface aws marketplace aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services aws marketplace security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws marketplace analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue aws marketplace artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis mobile aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk application services aws step functions amazon api gateway amazon elastic transcoder aws marketplace messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) aws marketplace business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon appstream 2 0 internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard aws marketplace software infrastructure software \\( 1300 \\) business software \\( 845 \\) developer tools \\( 220 \\) developers get started tools devops forums java javascript mobile php ruby python windows net training resources training self paced labs certification economics center security center architecture center knowledge center whitepapers aws answers analyst reports forums aws youtube channel events webinars documentation compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway databases amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly aws rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon sns application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive support aws support information support center aws trusted advisor technical faqs forums service health dashboard aws personal health dashboard aws managed services contact us partners aws partner network find aws partners premier consulting partners apn competency partners apn partner solutions login apn portal careers contact us sign console download mobile app amazon web services documentation home amazon api gateway documentation related links aws glossary getting started aws sdks tools aws documentation kindle aws general reference aws training aws case studies aws whitepapers amazon api gateway documentation amazon api gateway fully managed service makes easy developers publish maintain monitor secure apis scale create api access data business logic functionality back end services applications running amazon elastic compute cloud \\( amazon ec2 \\) code running aws lambda web application create free account twitter facebook google twitch aws blog 's new \\? rss subscribe updates aws cloud computing cloud computing \\? caching \\? nosql \\? devops \\? products services customer success economics center architecture center security center 's new whitepapers aws blog events sustainable energy press releases aws news analyst reports legal solutions websites website hosting business applications backup recovery disaster recovery data archive devops serverless computing big data high performance computing mobile services digital marketing game development digital media government education health financial services windows aws resources training developers java aws javascript aws mobile aws php aws python aws ruby aws windows net aws sdks tools aws marketplace user groups support plans service health dashboard discussion forums faqs documentation articles tutorials test drives aws business builder manage account management console billing cost management subscribe updates personal information payment method aws identity access management security credentials request service limit increases contact us amazon web services hiring amazon web services \\( aws \\) dynamic growing business unit within amazon com currently hiring software development engineers product managers account managers solutions architects support engineers system engineers designers visit careers page developer specific careers page learn amazon web services equal opportunity employer amazon com company language deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) site terms privacy 2017 amazon web services inc affiliates rights reserved using outdated browser please upgrade internet explorer 11 another modern browser improve experience", 
    "descr3": "menu click return amazon web services homepage sign account english explore aws solutions products deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) account aws management console account settings billing cost management security credentials aws personal health dashboard aws cloud computing solutions products developers partners training resources documentation support services careers contact us aws cloud computing introduction aws cloud computing \\? choosing cloud platform events webinars customer success global infrastructure getting started getting started aws free tier news 's new aws blog aws news analyst reports solutions websites web apps mobile services backup storage archive big data hpc financial services game development digital media healthcare life sciences business apps start upsstart ups use aws everything app needs enterprisesenterprises use aws deliver innovation globally reducing costs government educationpublic sector organizations use aws improve agility reducing costs products compute storage databases migration networking content delivery developer tools aws cost management management tools security identity compliance analytics artificial intelligence mobile services application services messaging business productivity desktop app streaming internet things contact center game development aws marketplace software developers get startedstart developing amazon web services using one pre built sample apps toolssdks ide toolkits command line tools developer tools aws devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers forums user groups java javascript mobile php ruby python windows net training resources training certification training self paced labs certification resource centers resources whitepapers analyst reports forums aws youtube channel events webinars support services aws support aws support information support center aws trusted advisor technical faqs forums aws personal health dashboard service health dashboard contact us aws professional services aws professional services cloud adoption framework aws managed services aws managed services partners aws partner networklearn aws partner network supporting partner programs find aws partnersfind qualified apn partners help aws projects premier consulting partnerslearn top apn consulting partners globally apn partner solutionsfind validated partner solutions run integrate aws key vertical solution areas log apn portaldownload content access training engage aws partner aws site visit apn blog documentation compute storage database networking content delivery migration developer tools management tools security identity compliance analytics artificial intelligence internet things game development mobile services application services messaging business productivity desktop app streaming sdks toolkits additional software services aws general reference aws management console resources websites web apps websites website hostingpower web social mobile apps cloud devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers ecommerce applicationsbuild secure scalable online storefronts digital marketinghighly scalable online advertising marketing services cloud aws marketplace wordpress powered amimoto movable type 6 drupal powered bitnami view related products \\( 95 \\) backup storage archive backup recoverystore retrieve data anywhere time data archivearchive data long term retention disaster recoveryrecover systems data quickly disaster aws marketplace cloud protection manager standard edition softnas cloud ontap cloud aws view related products \\( 35 \\) big data hpc big datastore process large datasets solve business problems high performance computingrun tightly coupled io intensive workloads solve complex science engineering business problems internet thingsquickly build connected devices backend services serverless computingbuild run applications without thinking servers aws marketplace tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl zoomdata view bi solutions financial services financial servicescustomer applications data analytics storage compliance security cloud aws marketplace tibco spotfire informatica cloud advanced amazon redshift view related products \\( 25 \\) game development game development operationservices infrastructure mobile web pc console games amazon game developerscross platform building blocks help make games aws marketplace orbx cloud game console windows server 2008r2 nvidia grid gpu driver red5 media server view related products \\( 25 \\) digital media digital mediamedia storage archiving processing delivery cloud aws marketplace adobe media server 5 extended wowza streaming engine 4 pro edition vantage transcode server view media solutions healthcare life sciences healthcaredeliver improved care patients reduced time effort life sciencesservices infrastructure help company solve complex problems genomicsaccess powerful computing tools run genomics workloads aws marketplace ncbi blast view related products \\( 25 \\) business apps business appsrun business critical applications secure robust environment oraclerun oracle applications aws cloud saprun sap workloads applications aws scalable infrastructure microsoftall microsoft applications aws cloud aws marketplace sap hana one oddo microsoft sharepoint foundation 2013 view related products \\( 845 \\) compute amazon ec2virtual servers cloud amazon ec2 container registrystore retrieve docker images amazon ec2 container servicerun manage docker containers amazon lightsaillaunch manage virtual private servers amazon vpcisolated cloud resources aws batchrun batch jobs scale aws elastic beanstalkrun manage web apps aws lambda run code without thinking servers auto scaling elastic load balancing aws marketplace centos 7 debian gnu linux 8 \\( jessie \\) alces flight view related products \\( 1800 \\) storage amazon simple storage service \\( s3 \\) scalable storage cloud amazon elastic block storage \\( ebs \\) ec2 block storage volumes amazon elastic file system \\( efs \\) fully managed file system ec2 amazon glacierlow cost archive storage cloud aws storage gatewayhybrid storage integration aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport aws marketplace ontap cloud aws cloud protection manager standard edition panzura nas appliance view storage solutions databases amazon aurorahigh performance managed relational database amazon rdsmanaged relational database service mysql postgresql oracle sql server mariadb amazon dynamodbmanaged nosql database amazon dynamodb accelerator \\( dax \\) fully managed memory cache dynamodb amazon elasticachein memory caching service amazon redshiftfast simple cost effective data warehousing aws database migration servicemigrate databases minimal downtime aws marketplace sap hana one couchbase teradata view database software migration aws application discovery servicediscover premises applications streamline migration aws database migration servicemigrate databases minimal downtime aws server migration servicemigrate premises servers aws aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport networking content delivery amazon vpcisolated cloud resources amazon cloudfrontglobal content delivery network amazon route 53scalable domain name system \\( dns \\) aws direct connectdedicated network connection aws elastic load balancing aws marketplace cisco cloud services router brocade f5 big ip view networking solutions developer tools aws codestardevelop deploy aws applications aws codecommitstore code private git repositories aws codebuildbuild test code aws codedeployautomate code deployments aws codepipelinerelease software using continuous delivery aws x rayanalyze debug applications aws command line interfaceunified tool manage aws services aws marketplace zend server coldfusion chef server view developer tools aws cost management aws cost exploreranalyze aws cost usage aws budgetsset custom cost usage budgets reserved instance reportingdive deeper reserved instances \\( ris \\) aws cost usage reportaccess comprehensive cost usage information aws marketplace zend server coldfusion chef server view developer tools management tools amazon cloudwatchmonitor resources applications amazon ec2 systems managerconfigure manage ec2 instances premises servers aws cloudformationcreate manage resources templates aws cloudtrailtrack user activity api usage aws configtrack resource inventory changes aws opsworksautomate operations chef aws service catalogcreate use standardized products aws trusted advisoroptimize performance security aws personal health dashboardpersonalized view aws service health aws command line interfaceunified tool manage aws services aws management consoleweb based user interface aws managed servicesinfrastructure operations management aws aws marketplace warewolf developers kurian kumolus view related solutions security identity compliance aws identity access management \\( iam \\) manage user access encryption keys amazon inspectoranalyze application security aws certificate managerprovision manage deploy ssl tls certificates aws cloudhsmhardware based key storage regulatory compliance aws directory servicehost manage active directory amazon cloud directorycreate flexible cloud native directories aws key management servicemanaged creation control encryption keys aws organizationspolicy based management multiple aws accounts aws shieldddos protection aws waffilter malicious web traffic aws artifact aws marketplace barracuda web application firewall trend micro deep security vm series next generation firewall bundle 2 view security solutions analytics amazon athenaquery data s3 using sql amazon emrhosted hadoop framework amazon cloudsearchmanaged search service amazon elasticsearch servicerun scale elasticsearch clusters amazon kinesiswork real time streaming data amazon redshiftfast simple cost effective data warehousing amazon quicksightfast business analytics service aws data pipelineorchestration service periodic data driven workflows aws glueprepare load data aws marketplace splunk cloud tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl redshift view bi solutions artificial intelligence amazon lexbuild voice text chatbots amazon pollyturn text lifelike speech amazon rekognitionsearch analyze images amazon machine learningmachine learning developers apache mxnet awsscalable open source deep learning framework aws deep learning amisdeep learning amazon ec2 mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily aws marketplace bitfusion mobile deep learning kony mobilefabric hpe mobile center view mobile solutions mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily application services aws step functionscoordinate distributed applications amazon api gatewaybuild publish manage apis amazon elastic transcodereasy use scalable media transcoding aws marketplace adobe coldfusion 11 nginx citrix netscaler view related products \\( 260 \\) messaging amazon simple queue service \\( sqs \\) managed message queues amazon simple notification service \\( sns \\) pub sub mobile push sms amazon pinpointpush notifications mobile apps amazon simple email service \\( ses \\) email sending receiving business productivity amazon workdocssecure enterprise document storage sharing amazon workmailsecure email calendaring amazon chimefrustration free meetings video calls chat desktop app streaming amazon workspacesvirtual desktops cloud amazon appstream 2 0stream desktop applications securely browser internet things aws iot platformconnect devices cloud aws greengrasslocal compute messaging sync devices aws iot buttoncloud programmable dash button aws marketplace sirqul iot platform opendof iot router view related products contact center amazon connectcloud based contact center service game development amazon gameliftamazon gamelift simple fast cost effective dedicated game server hosting amazon lumberyarda free cross platform 3d game engine full source integrated aws twitch aws marketplace software infrastructure software \\( 1300 \\) application development application servers application stacks big data databases caching network infrastructure operating systems security business software \\( 845 \\) business intelligence collaboration content management crm ecommerce education research financial services high performance computing media project management storage backup developer tools \\( 220 \\) issue bug tracking monitoring log analysis source control testing resource center economics centerfind calculators tools help lower costs aws cloud security centerlearn aws cloud security build secure applications compliance centerlearn compliance programs aws cloud establishing controls architecture centerlearn build scalable reliable applications aws cloud knowledge centerget answers frequently asked technical support questions aws answersget clear guidance aws architects engineers common user questions compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway database amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon simple notification service \\( sns \\) application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile database amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws artifact mobile services aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report application services aws step functions amazon api gateway amazon elastic transcoder messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon chime amazon workdocs amazon workmail desktop app streaming amazon workspaces amazon appstream 2 0 software aws marketplace internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard click return amazon web services homepage aws cloud computing cloud computing choosing cloud platform events webinars customer success global infrastructure getting started aws free tier 's new aws blog aws news analyst reports solutions websites web apps websites website hosting development test ecommerce applications mobile services digital marketing aws marketplace backup storage archive backup recovery data archive disaster recovery aws marketplace big data hpc big data high performance computing internet things aws marketplace financial services game development game development operation amazon game developers aws marketplace digital media digital media aws marketplace healthcare life sciences healthcare life sciences genomics aws marketplace business apps business apps oracle sap microsoft aws marketplace enterprise start ups public sector products compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing aws marketplace storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile aws marketplace databases amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service aws marketplace migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile aws marketplace networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing aws marketplace developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface aws marketplace aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services aws marketplace security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws marketplace analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue aws marketplace artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis mobile aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk application services aws step functions amazon api gateway amazon elastic transcoder aws marketplace messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) aws marketplace business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon appstream 2 0 internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard aws marketplace software infrastructure software \\( 1300 \\) business software \\( 845 \\) developer tools \\( 220 \\) developers get started tools devops forums java javascript mobile php ruby python windows net training resources training self paced labs certification economics center security center architecture center knowledge center whitepapers aws answers analyst reports forums aws youtube channel events webinars documentation compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway databases amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly aws rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon sns application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive support aws support information support center aws trusted advisor technical faqs forums service health dashboard aws personal health dashboard aws managed services contact us partners aws partner network find aws partners premier consulting partners apn competency partners apn partner solutions login apn portal careers contact us sign console download mobile app amazon web services documentation home aws config documentation related links aws glossary getting started aws sdks tools aws documentation kindle aws general reference aws training aws case studies aws whitepapers aws config documentation aws config provides detailed view resources associated aws account including configured related one another configurations relationships changed time create free account twitter facebook google twitch aws blog 's new \\? rss subscribe updates aws cloud computing cloud computing \\? caching \\? nosql \\? devops \\? products services customer success economics center architecture center security center 's new whitepapers aws blog events sustainable energy press releases aws news analyst reports legal solutions websites website hosting business applications backup recovery disaster recovery data archive devops serverless computing big data high performance computing mobile services digital marketing game development digital media government education health financial services windows aws resources training developers java aws javascript aws mobile aws php aws python aws ruby aws windows net aws sdks tools aws marketplace user groups support plans service health dashboard discussion forums faqs documentation articles tutorials test drives aws business builder manage account management console billing cost management subscribe updates personal information payment method aws identity access management security credentials request service limit increases contact us amazon web services hiring amazon web services \\( aws \\) dynamic growing business unit within amazon com currently hiring software development engineers product managers account managers solutions architects support engineers system engineers designers visit careers page developer specific careers page learn amazon web services equal opportunity employer amazon com company language deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) site terms privacy 2017 amazon web services inc affiliates rights reserved using outdated browser please upgrade internet explorer 11 another modern browser improve experience", 
    "descr2": "menu click return amazon web services homepage sign account english explore aws solutions products deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) account aws management console account settings billing cost management security credentials aws personal health dashboard aws cloud computing solutions products developers partners training resources documentation support services careers contact us aws cloud computing introduction aws cloud computing \\? choosing cloud platform events webinars customer success global infrastructure getting started getting started aws free tier news 's new aws blog aws news analyst reports solutions websites web apps mobile services backup storage archive big data hpc financial services game development digital media healthcare life sciences business apps start upsstart ups use aws everything app needs enterprisesenterprises use aws deliver innovation globally reducing costs government educationpublic sector organizations use aws improve agility reducing costs products compute storage databases migration networking content delivery developer tools aws cost management management tools security identity compliance analytics artificial intelligence mobile services application services messaging business productivity desktop app streaming internet things contact center game development aws marketplace software developers get startedstart developing amazon web services using one pre built sample apps toolssdks ide toolkits command line tools developer tools aws devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers forums user groups java javascript mobile php ruby python windows net training resources training certification training self paced labs certification resource centers resources whitepapers analyst reports forums aws youtube channel events webinars support services aws support aws support information support center aws trusted advisor technical faqs forums aws personal health dashboard service health dashboard contact us aws professional services aws professional services cloud adoption framework aws managed services aws managed services partners aws partner networklearn aws partner network supporting partner programs find aws partnersfind qualified apn partners help aws projects premier consulting partnerslearn top apn consulting partners globally apn partner solutionsfind validated partner solutions run integrate aws key vertical solution areas log apn portaldownload content access training engage aws partner aws site visit apn blog documentation compute storage database networking content delivery migration developer tools management tools security identity compliance analytics artificial intelligence internet things game development mobile services application services messaging business productivity desktop app streaming sdks toolkits additional software services aws general reference aws management console resources websites web apps websites website hostingpower web social mobile apps cloud devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers ecommerce applicationsbuild secure scalable online storefronts digital marketinghighly scalable online advertising marketing services cloud aws marketplace wordpress powered amimoto movable type 6 drupal powered bitnami view related products \\( 95 \\) backup storage archive backup recoverystore retrieve data anywhere time data archivearchive data long term retention disaster recoveryrecover systems data quickly disaster aws marketplace cloud protection manager standard edition softnas cloud ontap cloud aws view related products \\( 35 \\) big data hpc big datastore process large datasets solve business problems high performance computingrun tightly coupled io intensive workloads solve complex science engineering business problems internet thingsquickly build connected devices backend services serverless computingbuild run applications without thinking servers aws marketplace tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl zoomdata view bi solutions financial services financial servicescustomer applications data analytics storage compliance security cloud aws marketplace tibco spotfire informatica cloud advanced amazon redshift view related products \\( 25 \\) game development game development operationservices infrastructure mobile web pc console games amazon game developerscross platform building blocks help make games aws marketplace orbx cloud game console windows server 2008r2 nvidia grid gpu driver red5 media server view related products \\( 25 \\) digital media digital mediamedia storage archiving processing delivery cloud aws marketplace adobe media server 5 extended wowza streaming engine 4 pro edition vantage transcode server view media solutions healthcare life sciences healthcaredeliver improved care patients reduced time effort life sciencesservices infrastructure help company solve complex problems genomicsaccess powerful computing tools run genomics workloads aws marketplace ncbi blast view related products \\( 25 \\) business apps business appsrun business critical applications secure robust environment oraclerun oracle applications aws cloud saprun sap workloads applications aws scalable infrastructure microsoftall microsoft applications aws cloud aws marketplace sap hana one oddo microsoft sharepoint foundation 2013 view related products \\( 845 \\) compute amazon ec2virtual servers cloud amazon ec2 container registrystore retrieve docker images amazon ec2 container servicerun manage docker containers amazon lightsaillaunch manage virtual private servers amazon vpcisolated cloud resources aws batchrun batch jobs scale aws elastic beanstalkrun manage web apps aws lambda run code without thinking servers auto scaling elastic load balancing aws marketplace centos 7 debian gnu linux 8 \\( jessie \\) alces flight view related products \\( 1800 \\) storage amazon simple storage service \\( s3 \\) scalable storage cloud amazon elastic block storage \\( ebs \\) ec2 block storage volumes amazon elastic file system \\( efs \\) fully managed file system ec2 amazon glacierlow cost archive storage cloud aws storage gatewayhybrid storage integration aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport aws marketplace ontap cloud aws cloud protection manager standard edition panzura nas appliance view storage solutions databases amazon aurorahigh performance managed relational database amazon rdsmanaged relational database service mysql postgresql oracle sql server mariadb amazon dynamodbmanaged nosql database amazon dynamodb accelerator \\( dax \\) fully managed memory cache dynamodb amazon elasticachein memory caching service amazon redshiftfast simple cost effective data warehousing aws database migration servicemigrate databases minimal downtime aws marketplace sap hana one couchbase teradata view database software migration aws application discovery servicediscover premises applications streamline migration aws database migration servicemigrate databases minimal downtime aws server migration servicemigrate premises servers aws aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport networking content delivery amazon vpcisolated cloud resources amazon cloudfrontglobal content delivery network amazon route 53scalable domain name system \\( dns \\) aws direct connectdedicated network connection aws elastic load balancing aws marketplace cisco cloud services router brocade f5 big ip view networking solutions developer tools aws codestardevelop deploy aws applications aws codecommitstore code private git repositories aws codebuildbuild test code aws codedeployautomate code deployments aws codepipelinerelease software using continuous delivery aws x rayanalyze debug applications aws command line interfaceunified tool manage aws services aws marketplace zend server coldfusion chef server view developer tools aws cost management aws cost exploreranalyze aws cost usage aws budgetsset custom cost usage budgets reserved instance reportingdive deeper reserved instances \\( ris \\) aws cost usage reportaccess comprehensive cost usage information aws marketplace zend server coldfusion chef server view developer tools management tools amazon cloudwatchmonitor resources applications amazon ec2 systems managerconfigure manage ec2 instances premises servers aws cloudformationcreate manage resources templates aws cloudtrailtrack user activity api usage aws configtrack resource inventory changes aws opsworksautomate operations chef aws service catalogcreate use standardized products aws trusted advisoroptimize performance security aws personal health dashboardpersonalized view aws service health aws command line interfaceunified tool manage aws services aws management consoleweb based user interface aws managed servicesinfrastructure operations management aws aws marketplace warewolf developers kurian kumolus view related solutions security identity compliance aws identity access management \\( iam \\) manage user access encryption keys amazon inspectoranalyze application security aws certificate managerprovision manage deploy ssl tls certificates aws cloudhsmhardware based key storage regulatory compliance aws directory servicehost manage active directory amazon cloud directorycreate flexible cloud native directories aws key management servicemanaged creation control encryption keys aws organizationspolicy based management multiple aws accounts aws shieldddos protection aws waffilter malicious web traffic aws artifact aws marketplace barracuda web application firewall trend micro deep security vm series next generation firewall bundle 2 view security solutions analytics amazon athenaquery data s3 using sql amazon emrhosted hadoop framework amazon cloudsearchmanaged search service amazon elasticsearch servicerun scale elasticsearch clusters amazon kinesiswork real time streaming data amazon redshiftfast simple cost effective data warehousing amazon quicksightfast business analytics service aws data pipelineorchestration service periodic data driven workflows aws glueprepare load data aws marketplace splunk cloud tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl redshift view bi solutions artificial intelligence amazon lexbuild voice text chatbots amazon pollyturn text lifelike speech amazon rekognitionsearch analyze images amazon machine learningmachine learning developers apache mxnet awsscalable open source deep learning framework aws deep learning amisdeep learning amazon ec2 mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily aws marketplace bitfusion mobile deep learning kony mobilefabric hpe mobile center view mobile solutions mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily application services aws step functionscoordinate distributed applications amazon api gatewaybuild publish manage apis amazon elastic transcodereasy use scalable media transcoding aws marketplace adobe coldfusion 11 nginx citrix netscaler view related products \\( 260 \\) messaging amazon simple queue service \\( sqs \\) managed message queues amazon simple notification service \\( sns \\) pub sub mobile push sms amazon pinpointpush notifications mobile apps amazon simple email service \\( ses \\) email sending receiving business productivity amazon workdocssecure enterprise document storage sharing amazon workmailsecure email calendaring amazon chimefrustration free meetings video calls chat desktop app streaming amazon workspacesvirtual desktops cloud amazon appstream 2 0stream desktop applications securely browser internet things aws iot platformconnect devices cloud aws greengrasslocal compute messaging sync devices aws iot buttoncloud programmable dash button aws marketplace sirqul iot platform opendof iot router view related products contact center amazon connectcloud based contact center service game development amazon gameliftamazon gamelift simple fast cost effective dedicated game server hosting amazon lumberyarda free cross platform 3d game engine full source integrated aws twitch aws marketplace software infrastructure software \\( 1300 \\) application development application servers application stacks big data databases caching network infrastructure operating systems security business software \\( 845 \\) business intelligence collaboration content management crm ecommerce education research financial services high performance computing media project management storage backup developer tools \\( 220 \\) issue bug tracking monitoring log analysis source control testing resource center economics centerfind calculators tools help lower costs aws cloud security centerlearn aws cloud security build secure applications compliance centerlearn compliance programs aws cloud establishing controls architecture centerlearn build scalable reliable applications aws cloud knowledge centerget answers frequently asked technical support questions aws answersget clear guidance aws architects engineers common user questions compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway database amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon simple notification service \\( sns \\) application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile database amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws artifact mobile services aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report application services aws step functions amazon api gateway amazon elastic transcoder messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon chime amazon workdocs amazon workmail desktop app streaming amazon workspaces amazon appstream 2 0 software aws marketplace internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard click return amazon web services homepage aws cloud computing cloud computing choosing cloud platform events webinars customer success global infrastructure getting started aws free tier 's new aws blog aws news analyst reports solutions websites web apps websites website hosting development test ecommerce applications mobile services digital marketing aws marketplace backup storage archive backup recovery data archive disaster recovery aws marketplace big data hpc big data high performance computing internet things aws marketplace financial services game development game development operation amazon game developers aws marketplace digital media digital media aws marketplace healthcare life sciences healthcare life sciences genomics aws marketplace business apps business apps oracle sap microsoft aws marketplace enterprise start ups public sector products compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing aws marketplace storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile aws marketplace databases amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service aws marketplace migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile aws marketplace networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing aws marketplace developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface aws marketplace aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services aws marketplace security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws marketplace analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue aws marketplace artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis mobile aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk application services aws step functions amazon api gateway amazon elastic transcoder aws marketplace messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) aws marketplace business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon appstream 2 0 internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard aws marketplace software infrastructure software \\( 1300 \\) business software \\( 845 \\) developer tools \\( 220 \\) developers get started tools devops forums java javascript mobile php ruby python windows net training resources training self paced labs certification economics center security center architecture center knowledge center whitepapers aws answers analyst reports forums aws youtube channel events webinars documentation compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway databases amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly aws rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon sns application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive support aws support information support center aws trusted advisor technical faqs forums service health dashboard aws personal health dashboard aws managed services contact us partners aws partner network find aws partners premier consulting partners apn competency partners apn partner solutions login apn portal careers contact us sign console download mobile app amazon web services documentation home aws cloudformation documentation related links aws glossary getting started aws sdks tools aws documentation kindle aws general reference aws training aws case studies aws whitepapers aws cloudformation documentation aws cloudformation enables create provision aws infrastructure deployments predictably repeatedly helps leverage aws products amazon ec2 amazon elastic block store amazon sns elastic load balancing auto scaling build highly reliable highly scalable cost effective applications cloud without worrying creating configuring underlying aws infrastructure aws cloudformation enables use template file create delete collection resources together single unit \\( stack \\) create free account twitter facebook google twitch aws blog 's new \\? rss subscribe updates aws cloud computing cloud computing \\? caching \\? nosql \\? devops \\? products services customer success economics center architecture center security center 's new whitepapers aws blog events sustainable energy press releases aws news analyst reports legal solutions websites website hosting business applications backup recovery disaster recovery data archive devops serverless computing big data high performance computing mobile services digital marketing game development digital media government education health financial services windows aws resources training developers java aws javascript aws mobile aws php aws python aws ruby aws windows net aws sdks tools aws marketplace user groups support plans service health dashboard discussion forums faqs documentation articles tutorials test drives aws business builder manage account management console billing cost management subscribe updates personal information payment method aws identity access management security credentials request service limit increases contact us amazon web services hiring amazon web services \\( aws \\) dynamic growing business unit within amazon com currently hiring software development engineers product managers account managers solutions architects support engineers system engineers designers visit careers page developer specific careers page learn amazon web services equal opportunity employer amazon com company language deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) site terms privacy 2017 amazon web services inc affiliates rights reserved using outdated browser please upgrade internet explorer 11 another modern browser improve experience", 
    "descr1": "menu click return amazon web services homepage sign account english explore aws solutions products deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) account aws management console account settings billing cost management security credentials aws personal health dashboard aws cloud computing solutions products developers partners training resources documentation support services careers contact us aws cloud computing introduction aws cloud computing \\? choosing cloud platform events webinars customer success global infrastructure getting started getting started aws free tier news 's new aws blog aws news analyst reports solutions websites web apps mobile services backup storage archive big data hpc financial services game development digital media healthcare life sciences business apps start upsstart ups use aws everything app needs enterprisesenterprises use aws deliver innovation globally reducing costs government educationpublic sector organizations use aws improve agility reducing costs products compute storage databases migration networking content delivery developer tools aws cost management management tools security identity compliance analytics artificial intelligence mobile services application services messaging business productivity desktop app streaming internet things contact center game development aws marketplace software developers get startedstart developing amazon web services using one pre built sample apps toolssdks ide toolkits command line tools developer tools aws devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers forums user groups java javascript mobile php ruby python windows net training resources training certification training self paced labs certification resource centers resources whitepapers analyst reports forums aws youtube channel events webinars support services aws support aws support information support center aws trusted advisor technical faqs forums aws personal health dashboard service health dashboard contact us aws professional services aws professional services cloud adoption framework aws managed services aws managed services partners aws partner networklearn aws partner network supporting partner programs find aws partnersfind qualified apn partners help aws projects premier consulting partnerslearn top apn consulting partners globally apn partner solutionsfind validated partner solutions run integrate aws key vertical solution areas log apn portaldownload content access training engage aws partner aws site visit apn blog documentation compute storage database networking content delivery migration developer tools management tools security identity compliance analytics artificial intelligence internet things game development mobile services application services messaging business productivity desktop app streaming sdks toolkits additional software services aws general reference aws management console resources websites web apps websites website hostingpower web social mobile apps cloud devopstooling infrastructure resources devops serverless computingbuild run applications without thinking servers ecommerce applicationsbuild secure scalable online storefronts digital marketinghighly scalable online advertising marketing services cloud aws marketplace wordpress powered amimoto movable type 6 drupal powered bitnami view related products \\( 95 \\) backup storage archive backup recoverystore retrieve data anywhere time data archivearchive data long term retention disaster recoveryrecover systems data quickly disaster aws marketplace cloud protection manager standard edition softnas cloud ontap cloud aws view related products \\( 35 \\) big data hpc big datastore process large datasets solve business problems high performance computingrun tightly coupled io intensive workloads solve complex science engineering business problems internet thingsquickly build connected devices backend services serverless computingbuild run applications without thinking servers aws marketplace tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl zoomdata view bi solutions financial services financial servicescustomer applications data analytics storage compliance security cloud aws marketplace tibco spotfire informatica cloud advanced amazon redshift view related products \\( 25 \\) game development game development operationservices infrastructure mobile web pc console games amazon game developerscross platform building blocks help make games aws marketplace orbx cloud game console windows server 2008r2 nvidia grid gpu driver red5 media server view related products \\( 25 \\) digital media digital mediamedia storage archiving processing delivery cloud aws marketplace adobe media server 5 extended wowza streaming engine 4 pro edition vantage transcode server view media solutions healthcare life sciences healthcaredeliver improved care patients reduced time effort life sciencesservices infrastructure help company solve complex problems genomicsaccess powerful computing tools run genomics workloads aws marketplace ncbi blast view related products \\( 25 \\) business apps business appsrun business critical applications secure robust environment oraclerun oracle applications aws cloud saprun sap workloads applications aws scalable infrastructure microsoftall microsoft applications aws cloud aws marketplace sap hana one oddo microsoft sharepoint foundation 2013 view related products \\( 845 \\) compute amazon ec2virtual servers cloud amazon ec2 container registrystore retrieve docker images amazon ec2 container servicerun manage docker containers amazon lightsaillaunch manage virtual private servers amazon vpcisolated cloud resources aws batchrun batch jobs scale aws elastic beanstalkrun manage web apps aws lambda run code without thinking servers auto scaling elastic load balancing aws marketplace centos 7 debian gnu linux 8 \\( jessie \\) alces flight view related products \\( 1800 \\) storage amazon simple storage service \\( s3 \\) scalable storage cloud amazon elastic block storage \\( ebs \\) ec2 block storage volumes amazon elastic file system \\( efs \\) fully managed file system ec2 amazon glacierlow cost archive storage cloud aws storage gatewayhybrid storage integration aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport aws marketplace ontap cloud aws cloud protection manager standard edition panzura nas appliance view storage solutions databases amazon aurorahigh performance managed relational database amazon rdsmanaged relational database service mysql postgresql oracle sql server mariadb amazon dynamodbmanaged nosql database amazon dynamodb accelerator \\( dax \\) fully managed memory cache dynamodb amazon elasticachein memory caching service amazon redshiftfast simple cost effective data warehousing aws database migration servicemigrate databases minimal downtime aws marketplace sap hana one couchbase teradata view database software migration aws application discovery servicediscover premises applications streamline migration aws database migration servicemigrate databases minimal downtime aws server migration servicemigrate premises servers aws aws snowballpetabyte scale data transport aws snowball edgepetabyte scale data transport board compute aws snowmobileexabyte scale data transport networking content delivery amazon vpcisolated cloud resources amazon cloudfrontglobal content delivery network amazon route 53scalable domain name system \\( dns \\) aws direct connectdedicated network connection aws elastic load balancing aws marketplace cisco cloud services router brocade f5 big ip view networking solutions developer tools aws codestardevelop deploy aws applications aws codecommitstore code private git repositories aws codebuildbuild test code aws codedeployautomate code deployments aws codepipelinerelease software using continuous delivery aws x rayanalyze debug applications aws command line interfaceunified tool manage aws services aws marketplace zend server coldfusion chef server view developer tools aws cost management aws cost exploreranalyze aws cost usage aws budgetsset custom cost usage budgets reserved instance reportingdive deeper reserved instances \\( ris \\) aws cost usage reportaccess comprehensive cost usage information aws marketplace zend server coldfusion chef server view developer tools management tools amazon cloudwatchmonitor resources applications amazon ec2 systems managerconfigure manage ec2 instances premises servers aws cloudformationcreate manage resources templates aws cloudtrailtrack user activity api usage aws configtrack resource inventory changes aws opsworksautomate operations chef aws service catalogcreate use standardized products aws trusted advisoroptimize performance security aws personal health dashboardpersonalized view aws service health aws command line interfaceunified tool manage aws services aws management consoleweb based user interface aws managed servicesinfrastructure operations management aws aws marketplace warewolf developers kurian kumolus view related solutions security identity compliance aws identity access management \\( iam \\) manage user access encryption keys amazon inspectoranalyze application security aws certificate managerprovision manage deploy ssl tls certificates aws cloudhsmhardware based key storage regulatory compliance aws directory servicehost manage active directory amazon cloud directorycreate flexible cloud native directories aws key management servicemanaged creation control encryption keys aws organizationspolicy based management multiple aws accounts aws shieldddos protection aws waffilter malicious web traffic aws artifact aws marketplace barracuda web application firewall trend micro deep security vm series next generation firewall bundle 2 view security solutions analytics amazon athenaquery data s3 using sql amazon emrhosted hadoop framework amazon cloudsearchmanaged search service amazon elasticsearch servicerun scale elasticsearch clusters amazon kinesiswork real time streaming data amazon redshiftfast simple cost effective data warehousing amazon quicksightfast business analytics service aws data pipelineorchestration service periodic data driven workflows aws glueprepare load data aws marketplace splunk cloud tibco jaspersoft reporting analytics aws \\( hourly \\) matillion etl redshift view bi solutions artificial intelligence amazon lexbuild voice text chatbots amazon pollyturn text lifelike speech amazon rekognitionsearch analyze images amazon machine learningmachine learning developers apache mxnet awsscalable open source deep learning framework aws deep learning amisdeep learning amazon ec2 mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily aws marketplace bitfusion mobile deep learning kony mobilefabric hpe mobile center view mobile solutions mobile services aws mobile hubbuild test monitor mobile apps amazon api gatewaybuild deploy manage apis amazon cognitouser identity app data synchronization amazon pinpointpush notifications mobile apps aws device farmtest android ios web apps real devices aws cloud aws mobile sdkbuild high quality mobile apps quickly easily application services aws step functionscoordinate distributed applications amazon api gatewaybuild publish manage apis amazon elastic transcodereasy use scalable media transcoding aws marketplace adobe coldfusion 11 nginx citrix netscaler view related products \\( 260 \\) messaging amazon simple queue service \\( sqs \\) managed message queues amazon simple notification service \\( sns \\) pub sub mobile push sms amazon pinpointpush notifications mobile apps amazon simple email service \\( ses \\) email sending receiving business productivity amazon workdocssecure enterprise document storage sharing amazon workmailsecure email calendaring amazon chimefrustration free meetings video calls chat desktop app streaming amazon workspacesvirtual desktops cloud amazon appstream 2 0stream desktop applications securely browser internet things aws iot platformconnect devices cloud aws greengrasslocal compute messaging sync devices aws iot buttoncloud programmable dash button aws marketplace sirqul iot platform opendof iot router view related products contact center amazon connectcloud based contact center service game development amazon gameliftamazon gamelift simple fast cost effective dedicated game server hosting amazon lumberyarda free cross platform 3d game engine full source integrated aws twitch aws marketplace software infrastructure software \\( 1300 \\) application development application servers application stacks big data databases caching network infrastructure operating systems security business software \\( 845 \\) business intelligence collaboration content management crm ecommerce education research financial services high performance computing media project management storage backup developer tools \\( 220 \\) issue bug tracking monitoring log analysis source control testing resource center economics centerfind calculators tools help lower costs aws cloud security centerlearn aws cloud security build secure applications compliance centerlearn compliance programs aws cloud establishing controls architecture centerlearn build scalable reliable applications aws cloud knowledge centerget answers frequently asked technical support questions aws answersget clear guidance aws architects engineers common user questions compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway database amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon simple notification service \\( sns \\) application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile database amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws artifact mobile services aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report application services aws step functions amazon api gateway amazon elastic transcoder messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon chime amazon workdocs amazon workmail desktop app streaming amazon workspaces amazon appstream 2 0 software aws marketplace internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard click return amazon web services homepage aws cloud computing cloud computing choosing cloud platform events webinars customer success global infrastructure getting started aws free tier 's new aws blog aws news analyst reports solutions websites web apps websites website hosting development test ecommerce applications mobile services digital marketing aws marketplace backup storage archive backup recovery data archive disaster recovery aws marketplace big data hpc big data high performance computing internet things aws marketplace financial services game development game development operation amazon game developers aws marketplace digital media digital media aws marketplace healthcare life sciences healthcare life sciences genomics aws marketplace business apps business apps oracle sap microsoft aws marketplace enterprise start ups public sector products compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing aws marketplace storage amazon simple storage service \\( s3 \\) amazon elastic block storage \\( ebs \\) amazon elastic file system \\( efs \\) amazon glacier aws storage gateway aws snowball aws snowball edge aws snowmobile aws marketplace databases amazon aurora amazon rds amazon dynamodb amazon dynamodb accelerator \\( dax \\) amazon elasticache amazon redshift aws database migration service aws marketplace migration aws application discovery service aws database migration service aws server migration service aws snowball aws snowball edge aws snowmobile aws marketplace networking content delivery amazon vpc amazon cloudfront amazon route 53 aws direct connect elastic load balancing aws marketplace developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws command line interface aws marketplace aws cost management aws cost explorer aws budgets reserved instance reporting aws cost usage report management tools amazon cloudwatch amazon ec2 systems manager aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog aws trusted advisor aws personal health dashboard aws command line interface aws management console aws managed services aws marketplace security identity compliance aws identity access management \\( iam \\) amazon inspector aws certificate manager aws cloudhsm aws directory service amazon cloud directory aws key management service aws organizations aws shield aws waf aws marketplace analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline aws glue aws marketplace artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws aws deep learning amis mobile aws mobile hub amazon api gateway amazon cognito amazon pinpoint aws device farm aws mobile sdk application services aws step functions amazon api gateway amazon elastic transcoder aws marketplace messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) aws marketplace business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon appstream 2 0 internet things aws iot platform aws greengrass aws iot button contact center amazon connect game development amazon gamelift amazon lumberyard aws marketplace software infrastructure software \\( 1300 \\) business software \\( 845 \\) developer tools \\( 220 \\) developers get started tools devops forums java javascript mobile php ruby python windows net training resources training self paced labs certification economics center security center architecture center knowledge center whitepapers aws answers analyst reports forums aws youtube channel events webinars documentation compute amazon ec2 amazon ecr amazon ecs amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway databases amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog trusted advisor aws health aws management console aws command line interface aws tools powershell security identity compliance aws identity access management \\( iam \\) amazon inspector aws artifact aws certificate manager aws directory service aws cloudhsm aws kms aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly aws rekognition amazon machine learning internet things aws iot game development amazon gamelift amazon lumberyard mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon sns application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon simple queue service \\( sqs \\) amazon simple notification service \\( sns \\) amazon pinpoint amazon simple email service \\( ses \\) business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) aws general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive support aws support information support center aws trusted advisor technical faqs forums service health dashboard aws personal health dashboard aws managed services contact us partners aws partner network find aws partners premier consulting partners apn competency partners apn partner solutions login apn portal careers contact us sign console download mobile app aws documentation welcome amazon web services \\( aws \\) documentation whether new aws advanced user find useful information services ranging introductions advanced features click tabs view various categories services tools aws cloud look term aws glossary learn host static website using aws getting started tutorial deploy first application using aws elastic beanstalk getting started tutorial get started relational databases using amazon rds analyze big data amazon elastic mapreduce hadoop getting started tutorial learn host wordpress blog amazon linux learn back files amazon simple storage service \\( s3 \\) quickstart learn launch linux virtual machine amazon ec2 quickstart services getting started services compute amazon ec2 amazon ec2 container registry amazon ec2 container service amazon lightsail amazon vpc aws batch aws elastic beanstalk aws lambda auto scaling elastic load balancing storage amazon s3 amazon ebs amazon efs amazon glacier aws snowball aws storage gateway database amazon rds amazon dynamodb amazon elasticache amazon redshift networking content delivery amazon vpc amazon cloudfront aws direct connect elastic load balancing amazon route 53 migration aws database migration service aws server migration service aws schema conversion tool aws import export aws application discovery service developer tools aws codestar aws codecommit aws codebuild aws codedeploy aws codepipeline aws x ray aws tools sdks management tools amazon cloudwatch aws cloudformation aws cloudtrail aws config aws opsworks aws service catalog trusted advisor aws health aws management console aws command line interface aws tools windows powershell security identity compliance identity access management amazon inspector aws artifact aws certificate manager aws cloudhsm aws directory service aws kms aws organizations aws shield aws waf analytics amazon athena amazon emr amazon cloudsearch amazon elasticsearch service amazon kinesis amazon redshift amazon quicksight aws data pipeline artificial intelligence amazon lex amazon polly amazon rekognition amazon machine learning apache mxnet aws internet things aws greengrass aws iot contact center amazon connect game development amazon lumberyard \\( beta \\) amazon gamelift mobile services aws mobile hub amazon api gateway amazon cognito aws device farm amazon mobile analytics amazon pinpoint aws mobile sdk android aws mobile sdk ios aws mobile sdk unity aws mobile sdk xamarin amazon sns application services amazon api gateway amazon elastic transcoder amazon swf aws step functions messaging amazon sns amazon ses amazon sqs business productivity amazon workdocs amazon workmail amazon chime desktop app streaming amazon workspaces amazon wam amazon appstream 2 0 sdks toolkits aws sdk c aws sdk go aws sdk java aws sdk javascript aws sdk net aws sdk php aws sdk python \\( boto 3 \\) aws sdk ruby aws toolkit eclipse aws toolkit visual studio additional software services aws billing cost management aws marketplace aws support alexa top sites alexa web information service amazon silk aws govcloud \\( us \\) general reference regions endpoints security credentials arns service namespaces service limits aws glossary aws management console resource groups tag editor resource groups tagging api resources aws quick starts aws whitepapers aws training certification aws case studies aws documentation kindle aws documentation archive getting started getting started aws get introduction amazon web services including examples get started links resources help learn getting started aws management console learn aws management console includes instructions starting various services steps customizing navigation bar tips accessing region settings security credentials billing updates hosting static website learn deploy static website using aws build wordpress website learn build wordpress website using aws elastic beanstalk amazon s3 amazon rds build drupal website learn build drupal website using aws elastic beanstalk amazon efs amazon rds deploying web app learn deploy node js app using aws elastic beanstalk tutorial deploy net application using aws elastic beanstalk follow instructions visual quickstart deploy sample application aws elastic beanstalk aws devops learn use aws codepipeline automatically deploy source code aws codecommit deployment targets aws codedeploy aws elastic beanstalk aws opsworks getting started resource center start building aws aws training certification develop skills design deploy operate infrastructure applications aws cloud aws glossary learn terms related aws get started aws learn start using aws minutes aws free tier gain free hands experience aws 12 months create free account twitter facebook google twitch aws blog 's new \\? rss subscribe updates aws cloud computing cloud computing \\? caching \\? nosql \\? devops \\? products services customer success economics center architecture center security center 's new whitepapers aws blog events sustainable energy press releases aws news analyst reports legal solutions websites website hosting business applications backup recovery disaster recovery data archive devops serverless computing big data high performance computing mobile services digital marketing game development digital media government education health financial services windows aws resources training developers java aws javascript aws mobile aws php aws python aws ruby aws windows net aws sdks tools aws marketplace user groups support plans service health dashboard discussion forums faqs documentation articles tutorials test drives aws business builder manage account management console billing cost management subscribe updates personal information payment method aws identity access management security credentials request service limit increases contact us amazon web services hiring amazon web services \\( aws \\) dynamic growing business unit within amazon com currently hiring software development engineers product managers account managers solutions architects support engineers system engineers designers visit careers page developer specific careers page learn amazon web services equal opportunity employer amazon com company language deutsch english espa ol fran ais italiano portugu \\( \\) \\( \\) site terms privacy 2017 amazon web services inc affiliates rights reserved using outdated browser please upgrade internet explorer 11 another modern browser improve experience", 
    "crawled_date": "2017-06-10T13:59:23.113864"
  }, 
  "361": {
    "api_url": "omise.co", 
    "progweb_url": "https://www.programmableweb.com/api/omise-webhooks", 
    "progweb_date": "10.29.2016", 
    "progweb_descr": "Omise is a provider of intermediary financial and payments services. The Omise Webhooks API allows developers to integrate secure payments portals in web and mobile apps. Users can use the RESTful API to add payments option in websites for purposes of optimizing revenue receipts and automating payouts. The API consists of fortified security features that enhance the safety of card transactions. This API transmits JSON-formatted requests and responses.", 
    "api_name": "Omise Webhooks", 
    "progweb_cat": "Payments,Automation", 
    "crawled_date": "2017-06-10T13:59:23.112938"
  }, 
  "380": {
    "api_url": "ooyala.com", 
    "progweb_url": "https://www.programmableweb.com/api/ooyala-ecommerce", 
    "progweb_date": "11.30.2016", 
    "progweb_descr": "The Ooyala Ecommerce API operates as a payments platform for Ooyala\u2019s Revenue Builder project. It allows developers to simplify the processing of payments and allocation of entitlements to users. It processes and validates payments using a custom billing vendor, in addition to managing product catalogues and handling entitlements using the Vindicia Cashbox and Ooyala Rights Locker, respectively. The Ooyala Ecommerce API conveys JSON-formatted requests and responses.", 
    "api_name": "Ooyala Ecommerce", 
    "progweb_cat": "Video,Billing", 
    "crawled_date": "2017-06-10T13:59:23.092261"
  }, 
  "381": {
    "api_url": "tmforum.org", 
    "progweb_url": "https://www.programmableweb.com/api/tm-forum-prepay-balance-management", 
    "progweb_date": "12.06.2016", 
    "progweb_descr": "The TM Forum Prepay Balance Management API supports the development of access, top-up, and fund transfer functionalities for prepaid accounts. It allows operators to create portals through which subscribers can access account balances or recharge accounts in addition to performing other transactions such as transferring funds to other user accounts. This API is still a beta release. It sends requests in URI Query/CRUD format and returns responses in JSON format.", 
    "api_name": "TM Forum Prepay Balance Management", 
    "progweb_cat": "Payments,Accounts", 
    "crawled_date": "2017-06-10T13:59:23.091217"
  }, 
  "382": {
    "api_url": "invoiceninja.com", 
    "progweb_url": "https://www.programmableweb.com/api/invoiceninja", 
    "progweb_date": "12.07.2016", 
    "progweb_descr": "The InvoiceNinja API integrates invoicing and emailing into web services, providing clientID, page, and serializer as optional methods. JSON format is available for callbacks with PHP SDK as an API facilitator.", 
    "api_name": "InvoiceNinja", 
    "progweb_cat": "Invoicing,Open Source", 
    "crawled_date": "2017-06-10T13:59:23.090121"
  }, 
  "383": {
    "api_url": "cms.gov", 
    "progweb_url": "https://www.programmableweb.com/api/cms-quality-payment-quality-measures-list", 
    "progweb_date": "12.08.2016", 
    "progweb_descr": "The CMS Quality Payment Quality Measures List API allows developers to get a list of all measures in the Quality performance category. It is one of four performance categories that will replace the existing Physician Quality Reporting System (PQRS). This API supports the Quality Payment Program provided by the CMS (Centers for Medicare & Medicaid Services).", 
    "api_name": "CMS Quality Payment Quality Measures List", 
    "progweb_cat": "Healthcare,Government", 
    "crawled_date": "2017-06-10T13:59:23.088914"
  }, 
  "384": {
    "api_url": "cms.gov", 
    "progweb_url": "https://www.programmableweb.com/api/cms-quality-payment-advancing-care-information", 
    "progweb_date": "12.09.2016", 
    "progweb_descr": "The CMS Quality Payment Advancing Care Information API allows developers to get a list of all measures for the Advancing Care Information category, which is one of four performance categories in the Quality Payment Program. It is replacing the Meaningful Use program that currently exists. This API supports the Quality Payment Program provided by the CMS (Centers for Medicare & Medicaid Services).", 
    "api_name": "CMS Quality Payment Advancing Care Information", 
    "progweb_cat": "Healthcare,Government", 
    "crawled_date": "2017-06-10T13:59:23.087623"
  }, 
  "385": {
    "api_url": "cms.gov", 
    "progweb_url": "https://www.programmableweb.com/api/cms-quality-payment-improvement-activities", 
    "progweb_date": "12.09.2016", 
    "progweb_descr": "The CMS Quality Payment Improvement Activities API allows developers to get a complete list of Improvement Activities, one of the four performance categories for the Quality Payment Program. This API requires no input and returns a full list of improvement activities. This API supports the Quality Payment Program provided by the CMS (Centers for Medicare & Medicaid Services).", 
    "api_name": "CMS Quality Payment Improvement Activities", 
    "progweb_cat": "Healthcare,Government", 
    "crawled_date": "2017-06-10T13:59:23.086441"
  }, 
  "386": {
    "api_url": "orange.com", 
    "progweb_url": "https://www.programmableweb.com/api/orange-direct-carrier-billing-europe", 
    "progweb_date": "12.14.2016", 
    "progweb_descr": "The Orange Direct Carrier Billing Europe API provides users an efficient way to incorporate billing digital services while increasing revenue across Europe. This API can be integrated easily into the payment process, and is for digital goods or services for micro-payments. Access to the Direct Carrier Billing Europe API must be requested by filling out the form at: https://partner.orange.com/apply-for-direct-billing/. Orange is a global telecommunication company that provides IT and telecommunications services.", 
    "api_name": "Orange Direct Carrier Billing Europe", 
    "progweb_cat": "Payments,Billing", 
    "crawled_date": "2017-06-10T13:59:23.085347"
  }, 
  "387": {
    "api_url": "orange.com", 
    "progweb_url": "https://www.programmableweb.com/api/orange-direct-carrier-billing-africa-and-middle-east", 
    "progweb_date": "12.14.2016", 
    "progweb_descr": "Orange Direct Carrier Billing Africa and Middle-East provides users an efficient way to incorporate billing digital services while increasing revenue in Africa and the Middle-East. This API can be integrated easily into the payment process. Access to the Direct Carrier Billing Africa and Middle-East API must be requested by filling out the form at: https://partner.orange.com/apply-for-direct-carrier-billing-in-mea/. Orange is a global telecommunication company that provides IT and telecommunications services.", 
    "api_name": "Orange Direct Carrier Billing Africa and Middle-East", 
    "progweb_cat": "Payments,African", 
    "crawled_date": "2017-06-10T13:59:23.084290"
  }, 
  "388": {
    "api_url": "orange.com", 
    "progweb_url": "https://www.programmableweb.com/api/orange-money-web-payment", 
    "progweb_date": "12.14.2016", 
    "progweb_descr": "The Orange Money Web Payment API boosts e-commerce in Africa by offering users services to accept online payments. With this API, Orange Money merchants can benefit from other services for web payment as well, such as tax collection, school fees, donations, and more. This API can be easily integrated. Access to the Orange Money Web Payment API must be requested by applying at: https://partner.orange.com/apply-orange-money/. Orange is a global telecommunication company that provides IT and telecommunications services.", 
    "api_name": "Orange Money Web Payment", 
    "progweb_cat": "Payments,African", 
    "crawled_date": "2017-06-10T13:59:23.083255"
  }, 
  "389": {
    "api_url": "mastercard.com", 
    "progweb_url": "https://www.programmableweb.com/api/mastercard-fraud-scoring-merchants", 
    "progweb_date": "12.21.2016", 
    "progweb_descr": "The MasterCard Fraud Scoring for Merchants API is a risk management solution for card payments. The API facilitates the calculation of risk probabilities associated with payment authorizations for card transactions. It uses a risk scoring range of between 000 and 999 to show the likelihood of fraud on outside payment authorizations, with higher scores signaling higher fraud occurrence probabilities. Developers can schedule the API to process requests at the beginning of the authorization process or at the user\u2019s preferred time.", 
    "api_name": "MasterCard Fraud Scoring for Merchants", 
    "progweb_cat": "Financial,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:23.082210"
  }, 
  "60": {
    "link4": "http://wiki.cashu.com/api.php?action=query&meta=siteinfo&siprop=statistics&maxlag=5", 
    "link1": "https://www.cashu.com/site/en/TermsOfUse/ConsumerTermsandconditions", 
    "api_url": "cashu.com", 
    "link3": "http://wiki.cashu.com/api.php?action=query&meta=siteinfo&siprop=general%7Cnamespaces%7Cnamespacealiases%7Cstatistics", 
    "link2": "https://www.cashu.com/mall/fr/merchant/1837/0", 
    "progweb_url": "https://www.programmableweb.com/api/cashu", 
    "progweb_date": "11.15.2012", 
    "progweb_descr": "cashU is an online payment service provider that focuses on serving the Middle East and North Africa. They provide global and regional online merchants with a suite of payment solutions designed to cater to the local culture and to Arabic online buying habits. Today, cashU serves online shoppers in all Arabic-speaking and surrounding countries, giving people the opportunity to buy online regardless of age, income, nationality, or banking contacts.  cashU is built on and around sophisticated, up-to-date fraud prevention and AML systems, reducing the risks associated with online payments for both buyers and sellers. cashU's online payment services can be accessed programmatically using SOAP calls issued in XML format.", 
    "api_name": "cashU", 
    "progweb_cat": "Payments", 
    "descr4": "looking html representation xml format html good debugging probably suitable application see complete documentation api help information \\? xml version 1 0 encoding utf 8 \\? api query statistics pages 33 articles 11 views 762341 edits 70 images 20 users 643 admins 1 jobs 0 query api", 
    "descr3": "looking html representation xml format html good debugging probably suitable application see complete documentation api help information \\? xml version 1 0 encoding utf 8 \\? api query general mainpage main page base http wiki cashu com index php main page sitename cashu wiki generator mediawiki 1 13 2 case first letter rights lang en fallback8bitencoding windows 1252 timezone utc timeoffset 0 namespaces ns id 2 media ns ns id 1 special ns ns id 0 ns id 1 subpages talk ns ns id 2 subpages user ns ns id 3 subpages user talk ns ns id 4 cashu wiki ns ns id 5 subpages cashu wiki talk ns ns id 6 image ns ns id 7 subpages image talk ns ns id 8 mediawiki ns ns id 9 subpages mediawiki talk ns ns id 10 template ns ns id 11 subpages template talk ns ns id 12 help ns ns id 13 subpages help talk ns ns id 14 category ns ns id 15 subpages category talk ns namespaces namespacealiases statistics pages 33 articles 11 views 762341 edits 70 images 20 users 643 admins 1 jobs 0 query api", 
    "descr2": "", 
    "descr1": "consumer merchant vendor home terms conditions user agreement cashu services user agreement cashu services agree user agreement effective customers january 15th 2016 terms conditions governing access use website www cashu com related sub domains sites services tools mobile application \\( site \\) accepting terms conditions \\( including linked information herein \\) using site \\( customer \\) represent agree comply terms conditions cashu pte ltd singaporean company \\( us cashu \\) \\( party together parties \\) relation use site \\( user agreement \\) user agreement effective upon acceptance agree bound user agreement please access register use site may become customer must read agree accept user agreement privacy policy \\( privacy policy \\) read user agreement privacy policy also access read linked information referred user agreement fees schedule please note accepting user agreement also accepting privacy policy \\( cashu policies \\) important review privacy policy contains terms conditions apply user site consumer advisory cashu service regarded stored value facility singapore law cashu pte ltd holder cashu stored value facility require approval monetary authority singapore consumers \\( users \\) advised read terms conditions carefully 1 description service 1 1 cashu operates electronic payment service enables customers make payment transactions online \\( cashu service \\) registration customers allocated online account \\( customer account \\) holds electronic money use online transactions 1 2 fees use cashu service \\( cashu fees \\) set forth fees schedule posted site acknowledge agree cashu fees may amended time time accordance terms user agreement check fees schedule posted site regularly changes cashu fees 1 3 agree receive interest earnings balance customer account 1 4 beneficial owner must beneficial owner cashu account conduct business behalf 2 relationship 2 1 cashu helps make payments certain third parties sites platforms applications cashu independent contractor acts agent respect custody electronic money customer account cashu control liability items may purchase online ensuring online transactions completed party cashu hold funds equivalent balance customer account separately corporate funds use funds operating expenses corporate purpose 2 2 acknowledge agree \\( \\) cashu bank providing banking services related banking services carrying functions integral closely related banking business cashu allowed grant form credit engage business accepting deposits \\( ii \\) customer accounts insured government agency voluntary compulsory scheme cashu member compensates customer case cashu becomes unable satisfy claims relating customer account otherwise relation cashu service \\( iii \\) whilst cashu acts agent respect custody electronic money cashu act trustee accept fiduciary role respect electronic money customer account 3 registration 3 1 eligibilityin order eligible using cashu services must least 18 years old less 18 must parental guardian consent 3 2 sign creating cashu account unique provided email phone number signup process create cashu account ask provide certain information must enter maintain true date accurate complete information requested us including without limitation name address telephone number date birth email address \\( information \\) order become continue customer cashu may \\( sole discretion \\) request provide information documentation time reason including without limitation confirm identity age confirm ownership financial instruments agree provide information documentation promptly cashu request provide information documentation promptly cashu request cashu may without liability limit use cashu service suspend close customer account authorize cashu make enquiries considers necessary validate verify identity \\( whether directly third parties \\) time reason cashu 's sole discretion person entitled open one customer account register one customer account cashu shall contact ask identify account customer account cashu shall without liability close accounts transfer balances customer accounts remaining customer account 3 3 responsible maintaining confidentiality restricting access use user name password details customer account accept responsibility activities occur relation user name password customer account agree immediately notify cashu unauthorized use user name password customer account breach security event cashu liable direct indirect loss damage whatsoever resulting disclosure user name password customer account details agree reimburse cashu improper unauthorized illegal use customer account whether person every person logs site entering correct user name password undertakes transaction transfer correct password customer account number assumed cashu rightful customer account holder cashu regards related transactions transfers valid acknowledge agree cashu reverse refund transactions transfers 3 4 identity authentication agree comply requests made cashu third party service providers connection cashu account identify authenticate identity validate source funding cashu account transactions cashu reserves right close suspend limit access cashu account cashu services event unable obtain verify information authorize cashu directly make inquiries consider necessary validate identity may include asking information requiring provide date birth information form identity allow cashu reasonably identify including requiring take steps confirm ownership email phone number payment instruments verifying information third party databases sources cashu may also request provided identifying documents time 4 adding funds cashu account order add electronic money customer account otherwise purchase goods services online using cashu service may choose one options available depending country situated please refer top section site details hereby authorize cashu obtain receive funds behalf chosen payment source cashu deduct necessary fees \\( including cashu fees per section 6 user agreement relation obtaining receiving funds \\) also agree upload electronic money customer account accordance directions site \\( may updated amended cashu time time \\) agree use unauthorized invalid illegal payment method upload electronic money customer account 5 payment 5 1 agree cashu independent contractor acts agent respect custody electronic money facilitating payment third party sites platforms applications \\( cashu merchant \\) although cashu makes reasonable efforts reviewing cashu merchants cashu assumes responsibility legitimacy quality services rendered cashu merchants acknowledge sole responsibility identify pay services cashu merchants trust 5 2 make payment customer account cashu authorize transfer necessary electronic money \\( including necessary fees \\( including cashu fees \\( defined \\) \\) customer account acknowledge agree insufficient funds customer account make necessary payment cashu authorize payment cancel transaction cashu shall liable loss damage liability suffered incurred results transaction cancelled circumstances insufficient funds customer account prevent making payment 5 3 methods spending money spending money authorize instruct cashu execute transaction provided authorization transaction able cancel except provided applicable law solely responsible confirming accuracy transactions made 5 4 cashu may delay execution transaction reason believe transaction may involve fraud misconduct violate applicable law user agreement applicable issuing cashu policies determined cashu 's sole absolute discretion 5 5 fraud monitoring cashu may monitor transactions purpose determining fraudulent activities whether good standing cashu may also decide suspend cashu account limit privileges cashu use available information help combat fraud system 5 6 cashu maintains right discretion define certain usage limitation cashu accounts including account limitations may include limited limitations maximum number payment transactions allowed within period time maximum amount transactions within period time limitations maximum amount per single transaction cashu merchants limitations amounts fund allowed added cashu account 6 fees 6 1 responsible payment cashu fees relation use cashu service current cashu fees \\( may amended cashu time time accordance terms user agreement \\) posted sitecashu fees adding funds account vary based method used adding funds cashu may charge fees maintaining account fees depend status account cashu defines following account statuses dormant account account transactions time period 120 consecutive days defined dormant account inactive account account transactions time period 366 consecutive days defined inactive account account 6 2 prior registering customer prior carrying transactions using cashu service review cashu fees cashu fees due payable immediately shall deducted cashu automatic debit customer account cashu fees us dollars unless otherwise stated site cashu may without liability charge correction fee incorrect payment details provided us please note responsible payment applicable taxes duties charges relation use cashu service 7 restricted activities 7 1 acknowledge agree use cashu service \\( \\) pay illegal material whatsoever including without limitation illegal downloads \\( b \\) pay goods services infringe intellectual property proprietary rights third party \\( c \\) relation illegal purpose criminal activity nature 7 2 acknowledge agree cashu report suspicious activity relevant authorities cashu may without liability \\( \\) apply prevention detection procedures deems necessary \\( b \\) suspend close customer accounts \\( c \\) cancel refuse carry transactions cashu sole discretion suspects using customer account aspect cashu service unlawful purposes customer account otherwise used unlawful purposes 7 3 connection use site customer account cashu service otherwise course interactions cashu another cashu customer cashu merchant third party \\( \\) breach user agreement privacy policy policy site \\( b \\) violate laws regulations third party rights policies including limited use attempted use customer account illegal fraudulent purposes \\( c \\) infringe cashu 's third party 's copyright patent trademark trade secret intellectual property rights rights publicity privacy \\( \\) use cashu sell purchase counterfeit goods \\( e \\) act manner defamatory libelous unlawfully threatening harassing \\( f \\) provide false fraudulent inaccurate misleading information \\( g \\) send receive cashu reasonably believes potentially fraudulent funds \\( h \\) refuse cooperate investigation cashu decline providing confirmation identity requested information cashu \\( \\) attempt receive funds cashu cashu merchant third party seller transaction \\( j \\) use anonymizing proxy \\( k \\) control bestow ownership another cashu customer account \\( l \\) use site customer account cashu service manner results may result complaints disputes claims fines penalties liabilities cashu another cashu customer cashu merchant third party \\( \\) take action imposes unreasonable disproportionately large load infrastructure \\( n \\) distribute viruses trojans worms computer programming technologies may harm site interests property cashu customers cashu merchants third parties including site 's users \\( \\) take action may cause us lose services internet service providers payment processors suppliers \\( p \\) circumvent manipulate fee structure billing process fees owed cashu \\( q \\) transfer customer account another party without prior written consent 7 4 warrant violating applicable laws regulations use site customer account cashu service agree defend indemnify hold cashu directors employees agents affiliates harmless claim demand \\( including legal fees costs \\) fines penalties liability made incurred cashu cashu merchant cashu customer third party due arising breach warranty 7 5 reason believe engaged restricted activities set may take various actions protect cashu cashu merchants cashu customers third party fees fines penalties liability actions may take include limited following \\( \\) suspending closing customer account long believe reasonably necessary \\( b \\) applying sole discretion prevention detection procedures refusing execution transactions grounds suspect customer account may used illegal purposes \\( c \\) taking steps cashu sole discretion may deem necessary including taking legal action 7 6 close customer account provide notice actions suspend customer account provide notice actions opportunity request restoration access appropriate restoration access shall cashu 's discretion 8 closure customer account 8 1 may request cashu close customer account time contacting cashu customer support contact details cashu customer support site closure customer account cancel transactions already undertaken including still paid electronic money customer account 8 2 cashu sole discretion may close customer account time upon least one \\( 1 \\) week 's notice customer contact customer arrange return electronic money customer account without prejudice rights remedies cashu user agreement otherwise cashu may suspend customer account time without notice involved suspected involvement fraudulent illegal activities 8 3 log customer account six \\( 6 \\) months funds customer account cashu may suspend customer account account suspended contact cashu customer support reactivate customer account cashu reactivate customer account sole discretion 8 4 cashu may time sole discretion discontinue use customer account cashu service part thereof cashu shall endeavor provide notice discontinuation customer account cashu service agree cashu shall liable third party relation inability access customer account cashu service part thereof 8 5 cashu return electronic money customer account soon practicable closure suitable payment method cashu sole discretion shall direct customer provided customer provide cashu either \\( \\) valid bank account details name address details bank account holder match name address details customer registered customer site \\( b \\) copy valid form id acceptable sole discretion cashu \\( e g passport driving license \\) cashu right return disputed funds funds relate breach user agreement time dispute relation funds resolved relation breach user agreement court competent jurisdiction determined matter 8 6 case whereby cashu returns electronic money bank account upon validating identity bank transfer fees administration fees shall deducted returned amount provided returned amount originally exceeded expected transfer fees 8 7 agree may close cashu account evade investigation carried cashu cashu account attempt close cashu account cashu conducting investigation maintain right hold funds account period time reasonably needed protect risk liability cashu third party believe may engaging potentially fraudulent suspicious activity transactions 9 disclaimers limitation liability 9 1 cashu makes representations warranties continuous uninterrupted secure access cashu service customer account may affected factors outside control may subject periodic testing repair upgrade maintenance 9 2 use site risk site provided available basis without representation endorsement made without warranty guarantee kind whether express implied including limited implied warranties satisfactory quality fitness particular purpose non infringement compatibility security accuracy 9 3 cashu shall make reasonable efforts ensure transactions processed timely manner however cashu makes representations regarding amount time needed complete processing particular transaction transfer shall cashu liable direct indirect losses damages arising delay 9 4 cashu service limited providing customer payment facility ensure quality safety legality transaction customer undertaking 9 5 site may include links third party websites controlled maintained others accordingly cashu cannot accept responsibility materials offers goods services featured websites link websites warranty websites free viruses items destructive nature acknowledge agree cashu responsible content availability websites 9 6 goods services supplied made available websites linked site supplied third parties including without limitation cashu merchants cashu dealings third parties including payment delivery goods services terms conditions warranties representations acts omissions associated dealings solely third party agree hold cashu liable loss damage kind incurred result dealings 9 7 cashu directors employees agents affiliates liable loss damage \\( whether direct indirect consequential loss damage \\) whatsoever \\( including without limitation loss business opportunity data goodwill profits \\) arising connection use site customer account cashu service \\( part thereof \\) whether caused negligence otherwise including without limitation arising connection \\( \\) payments made wrong recipient incorrect payments customer account due input incorrect information site cashu merchant 's site \\( b \\) fraud deception misrepresentations result act omission negligence relation customer account \\( c \\) fraud deception misrepresentation recipient electronic money sent customer account \\( \\) losses damages resulting recipient 's decision accept transfer customer account \\( e \\) errors omissions site content \\( f \\) misuse site inability person use site \\( g \\) delays losses errors omissions resulting failure telecommunications data transmission system failure central computer system servers part thereof \\( h \\) results acts governmental authority act god force majeure event 9 8 dispute one cashu customers cashu merchants agree release cashu \\( officers directors agents employees \\) claims demands losses damages \\( direct indirect \\) every kind nature arising way connected disputes acknowledge agree cashu enter dispute confirm whether payment made 9 9 dissatisfied site cashu service sole exclusive remedy discontinue use site cashu service \\( applicable \\) circumstance may request cashu arrange closure customer account return electronic money customer account \\( electronic money returned accordance terms agreement \\) 10 indemnity agree indemnify hold cashu directors employees agents affiliates harmless breach user agreement including without limitation claims actions proceedings losses liabilities damages costs expenses \\( including reasonable legal costs expenses \\) howsoever suffered incurred cashu cashu customers third parties \\( including cashu merchants \\) due arising breach user agreement 11 privacy cashu takes reasonable measures \\( physical organizational technological \\) safeguard personal information unauthorized access safely store personal information please review privacy policy information safeguard personal information give us however internet secure medium privacy personal information never guaranteed cashu control practices third parties \\( e g website links site third parties misrepresent someone else \\) privacy policy posted site \\( amended cashu time time \\) governs treatment personal information review 12 intellectual property 12 1 cashu cashu com cashumall cashucard cashu card related urls logos page headers custom graphics button icons scripts \\( english arabic \\) described site either service marks trademarks registered trademarks cashu affiliates may copy imitate use without cashu 's prior written consent 12 2 site content \\( including without limitation site design text graphics \\) software source codes connected site protected copyright trademarks patents intellectual property rights laws none content may downloaded copied reproduced transmitted stored sold distributed without prior written consent cashu right title interest site content \\( including software \\) cashu service exclusive property cashu affiliates licensors \\( applicable \\) 13 transfer rights obligations hereby grant cashu right irrevocably acknowledge agree cashu may time transfer part rights benefits obligations liabilities \\( whether express assumed \\) user agreement cashu shall endeavor provide notice transfer way posting site may time without prior written consent cashu transfer part rights benefits obligations liabilities \\( whether express assumed \\) user agreement without prior written consent cashu 14 communication notices 14 1 communications means without restriction announcements notices account transaction information cashu provides cashu policies agree including updates policies document required make available 14 2 acknowledge agree receive communications us electronically \\( electronic communication \\) communicate email posting notices site agree agreements notices disclosures communications provide electronically satisfy legal requirement communications writing considered received within 24 hours time post website email alternatively may notify courier postal mail address provided us registration information case notice shall deemed given seven \\( 3 \\) days date mailing notice 14 3 provide notices us mail cashu 's postal address using cashu customer support system site notice shall deemed received cashu received written electronic communication confirming receipt cashu 14 4 may communicate us relation matter including without limitation general queries discrepancies claims disputes using cashu customer support system site 14 5 responsibility keep primary email address date cashu communicate electronically understand agree cashu sends electronic communication receive primary email address file incorrect date blocked service provider otherwise unable receive electronic communications cashu deemed provided communication effectively please note use spam filter blocks routes emails senders listed email address book must add cashu email address book able view communications send update primary email address street address time logging cashu 's website email address becomes invalid electronic communications sent cashu returned cashu shall consider account inactive able transact activity using cashu account receive valid working primary email address 14 6 calls text message mobile telephone numbers responsibility keep primary mobile number date providing cashu telephone number \\( including mobile number \\) agree receive autodialed prerecorded message calls one numbers ways provide us telephone number include limited providing telephone number cashu account opening adding telephone number cashu account later time contacting us phone number telephone number provided us mobile number consent receive smss text messages number service related matters share phone number non affiliated third parties purposes without consent never market advertise solicit using autodialing prerecorded messages standard telephone minutes text charges may apply contact case cashu failed reach one means communication \\( mobile phone number \\) cashu may deem account inactive able transact activity using cashu account receive valid verifiable mobile number acknowledge agree actions shall make cashu liable way 14 7 recording calls understand agree cashu may without notice warning discretion monitor record telephone conversations anyone acting behalf cashu agents quality control training purposes protection acknowledge understand communications cashu may overheard monitored recorded without notice warning telephone lines calls may recorded cashu cashu guarantee recordings particular telephone calls retained retrievable 15 amendments 15 1 acknowledge agree cashu may make amendments user agreement time time shall endeavor give notice amendments user agreement materially increase obligations materially decreasing rights \\( substantial amendment \\) notice provided accordance terms user agreement acknowledge agree cashu may sole discretion without liability make amendments substantial amendments without specific agreement time effective time post immediate effect posting notice amendments site generally responsibility log cashu account cashu services check updates amendments referred also open review electronic communications deliver means may obliged terms service provide notice posting communication cashu account cashu services 16 general 16 1 user agreement translated language english case discrepancy question interpretation \\( including english arabic version user agreement \\) english version shall prevail 16 2 clause user agreement shall deemed invalid void reason unenforceable clause shall deemed severable shall affect validity enforceability remaining clauses user agreement 16 3 user agreement \\( amended time time cashu accordance terms user agreement \\) sets forth entire understanding agreement cashu respect subject matter hereof 16 4 person party user agreement shall right enforce term user agreement except relation person clause 13 permitted successor assignee rights benefits cashu 17 disputes cashu 17 1 dispute claim controversy difference \\( including relation tortious statutory claim \\) \\( dispute \\) arises connection relation user agreement parties shall first attempt amicably settle dispute good faith negotiations period thirty \\( 30 \\) calendar days commencing date party first sends party written notice dispute event dispute settled amicably relevant parties end thirty \\( 30 \\) day period parties hereby agree dispute shall referred finally resolved described section 19 except otherwise agreed parties 17 2 cashu 's failure act respect breach others waive cashu 's right act respect subsequent similar breaches 17 3 responsible liabilities financial otherwise incurred cashu user third party caused arising breach user agreement use cashu services use cashu account agree reimburse cashu user third party liability extent prohibited applicable law consequence breach terms cashu agreement covered agreement separately independently terms service 17 4 reimbursement liability extent permitted law may collect obligations owe us user agreement extent permitted law may also collect collection means available us amounts pay incur connection reimbursable claims additionally applicable agree cooperate cashu third party associated cashu services 18 governing law user agreement shall governed construed accordance laws singapore courts singapore exclusive jurisdiction settle dispute arising connection user agreement \\( including dispute regarding existence validity termination agreement download print copyright cashu rights reserved", 
    "crawled_date": "2017-06-10T13:59:37.999690"
  }, 
  "61": {
    "link5": "http://www.tejaratbank.ir/file_manager/1659571/download/1/Level.html", 
    "link4": "http://www.tejaratbank.ir/file_manager/1659570/download/1/KYC-Iranian.html", 
    "link1": "http://www.tejaratbank.ir/parameters/tejarat/modules/cdk/upload/content/financial/26/english_2009-2010.pdf", 
    "api_url": "tejaratbank.ir", 
    "link3": "http://www.tejaratbank.ir/file_manager/1659577/download/1/CFT-law.html", 
    "link2": "http://www.tejaratbank.ir/file_manager/1538053/download/1/%DA%AF%D8%B2%D8%A7%D8%B1%D8%B4-%D8%B3%D8%A7%D9%84%DB%8C%D8%A7%D9%86%D9%87-%D8%B2%D8%A8%D8%A7%D9%86-%D8%A7%D9%86%DA%AF%D9%84%DB%8C%D8%B3%DB%8C-%D8%B3%D8%A7%D9%84-1388.html", 
    "progweb_url": "https://www.programmableweb.com/api/tejarat-bank-payment-gateway", 
    "progweb_date": "11.16.2012", 
    "progweb_descr": "Tejarat Bank offers online payment services through its Payment Gateway. Users can designate up to 5 accounts from which they would like to withdraw funds for transfer operations. The accounts receiving funds (remittance accounts) may belong to the user or to others. The Payment Gateway can be accessed programmatically using a SOAP API. The maximum transferable amount is currently 20,000,000 Iranian rial per working day. The website is provided in Persian with translations available in English, French, and German.", 
    "api_name": "Tejarat Bank Payment Gateway", 
    "progweb_cat": "Payments", 
    "descr5": "pdf 1 4 18 0 obj endobj xref 18 11 0000000016 00000 n 0000000688 00000 n 0000000516 00000 n 0000000768 00000 n 0000000897 00000 n 0000000992 00000 n 0000001619 00000 n 0000002017 00000 n 0000002256 00000 n 0000002332 00000 n 0000002577 00000 n trailer 46e2a36b0b891449a3200bd4ea2b8f14 startxref 0 eof 20 0 obj stream x b```f`` cf`a x p 5 10 v 1f \\( f` f `vh3 5 endstream endobj 19 0 obj endobj 21 0 obj endobj 22 0 obj procset pdf text extgstate endobj 23 0 obj endobj 24 0 obj endobj 25 0 obj endobj 26 0 obj endobj 27 0 obj endobj 28 0 obj stream h w 6 r jv mz 4 z 2 7 \\) r r h kqi wi j 5 e zh x h u 6 qy v2 \\) ujs ri vygnf8 5 f 2 ne dwb b vho cyk zr e l 4f n g om x w r e \\? c \\? w 1 hff \\( l 9 g q` 9 lw q 3 un l rh v72 6x2 x n k ddqu 1 sh tqf f h g n 2ot vf yn e 2j u s3 lb r bm p rg ` g \\( \\( o`v ` 5 \\? 5 c ya k z9 lv k rqg p gn ljd 8j v h x w \\? c caj 7 2f 'dw2 \\( c ev f 2a l q ol scj e b f4r tm6 p \\? r ` \\? z0x q 64 q ` \\) h v g c h k e xl 9 u b r v kl h p 4 \\? 0 j gs va n \\? z g ff xryar p rb z jt3 g yj c p al 5 e `7n e \\? b aw b l u 5 0t 1ap \\? z r v \\) w y4 e f 1 w `pr w bb 6 b h \\( b tp 1 6 ir 0b l q k bxj c b p 6y v p n \\( i3 \\? v 2tdy ck z ` c r b j f2 u ycek vrvp e 5 e6 \\( 1f ` fb tp q f r l g v 3 ew ir um 0 b \\) z 3 \\) h \\( z q b 2i x g z \\? endstream endobj 1 0 obj endobj 2 0 obj procset pdf text extgstate endobj 3 0 obj stream h w ok xr u bk n \\( h v \\) 1 \\( e \\) t'b p q \\( v l 4 c yj 2lb 4 3 pf 9 l 1 r n asdi njg q q u pxd 4 8 n \\( \\( 'o sx k x \\) jge 9 8 \\( si ndd w j 07 8 p ij3 de zt \\( e \\? ft w l x g gy ja 3 u v \\( bo b b q 5 h z nb r q l 42 3 g sw wqjip t0 xi \\) h x z 8 n c ` z x \\? v6h5 \\( c p 36 8 j r jhj f f r na tsb x v 0 \\( 0 b fn j sb e h 8v 4 q dpdqg 9u g 81 n` ga n3 j cw 8 7 ay 7 \\? s4 gzjg p 0 2 ip3 r ` tph lp zqe eh g c w u jxq wg z xr k n j 7 0 z 1g g 6 5o g nn p e v l l7r b 4 n j q cgbmg e r6nz q 0 b vc z k 2 7 8 p ad 7 6b \\? 2 zr k ` s3 eww p p po j k tt f 9w w k x fs rk w vx r x h 7 lz l 4 \\? j w n lo de e e pm j5 k 9nu \\( x 8 28 k d5 q n64 w l \\? j z yy pf 5 wr9 b b jv g u \\) q v \\( e l l g p'e pn 0 g x 5 dc z f \\) x l j \\) gyv 80 1 h 7 k jg \\( u k3k co bmx z hzkrv l e \\( 35 f w b endstream endobj 4 0 obj endobj 5 0 obj procset pdf text extgstate endobj 6 0 obj stream h w oo 7o rn9 teo n n4 r v w8 q yvj \\? r w k qeu v l gy pw ym jg bz l 33 7s \\? h b kya \\? l zt loacd wa x ie 6 h e q 9 g q 8 h c 1 k x k 2 hu om r c 9 h zq v 1 3qk 1 3 e4 ga x b h k v q b' g x \\? g tz bd u \\? f c3 c cms 1 l \\) zu \\) v3c vz6 z 9v q z xu g 9 f r k 4c 0 c z r 7cj f f w ra ` c 2 e p \\) v 7a 6 j 1 p xh qh \\( e' ru n 2 i6 h q 0 7d l czy e 2 \\? h f gb \\) j g \\( 88 3 p rp 1 j2 4 y9 qo q5u 4 g0 p j v u oz u \\? ep w v h k v c g u gi c f 5 u \\) 1 uixr n ac w n 8k 6 8 ga7 zl fh k c v 7c ee j u 0 ua 9 0 n 3 6 0 ku 'v 6n hd 6p j omg 0z l iq g n b5 e dk 2sb g x h x n f k 1 \\( b gm yl k n 5 e u z z qu exd u fsr q zq v h 9 c p u n og \\( r 9 w l u7zs 7 \\) f e 8 \\) v u x q \\) p vg ko n p foc l b u r 6 5p \\) qrqvg 1 ux \\? u \\) go q h x zg tx ko z n p 6d ca k 5n ca \\( x dx xy x'b 1nb rf \\) 8 q `c 6 k ep 0 kor q l w 5w 9zqd nij 8 q 7 djvw r k 9 endstream endobj 7 0 obj endobj 8 0 obj procset pdf text extgstate endobj 9 0 obj stream h w oo r \\? u 6 3 c z n um h r u p 8 2 \\? k' n 1 x c \\? \\? w e n \\( mv u lc \\) l h cgqq dlu n ic j l6c \\? 's \\( 0 n e w n w u 8 vq zjcy j r u ncvv \\? j8 l r 1 h pjy jm 3 b w q b 0 hx py p k u 2 zh 5dc 5 o5q k qp \\) ehfo g p r 4 n 7 6 k n b n 9v l z df p x qm x h 8 g ` x gpk w g \\) c k j 'g fnw 15 5 j g e w ou b nss 7 n 8 b w 2 x p l 0 x \\? xd \\( j g 8v k k 6 5a mp 0k qx x x `9 z \\) uf 9 z 0i`d b bg d' \\? 3 \\? 9 \\? k h 2 u z h ha p hl e 1g g e k q p kd j x q b j 4 \\) b gy 2d v z q 2 q o9 h p b \\? u 3 k bj 4dr yi x0so n f b v 6 u ao k 0 h e f \\) xr 0 4 i` ug k '' k c n 95 k` m3 4 xnsbbg \\) n9 f 9zr 7x \\) vn k j qbc \\? gb 65 r1e 2 kx bn uc v ztr dt u n k k7 kdis ok \\) aj e \\? fq 1 ol v e l ` w h 1 \\) vsf k 4 k p n 1 5 dh j bn 1 0` n xd' ib 7m r 8u b q v7x6 yk \\( x8 j k8 j r u 6 h hm ` p 3 apk q7p 6 v w 5 gf 1 w6 l r pey 0 3 6 x x h \\) h \\( q g e fy e endstream endobj 10 0 obj endobj 11 0 obj procset pdf text extgstate endobj 12 0 obj stream h w 6 \\) \\) h4 f f 8 xhj n n v 1z r k u qs mf j lq n h 8 ru b wdku 9 p '2 x2 q'b n 0m n co w hvfuu 6x 0 3 oy8 2 ql w z ds l 2g raq 3q 4dgs u h 0 p l nx b u 33 jj c b rdbfdhg na r \\) c mp c l g 8d h3 b l ` 5 f 2 0 g fsx 1y 0p 8 q 2 w p 6 j e xs xn x ew j x p p5 w \\( p l \\( 1 j ` 3 'g x ji u ` 4 p e9bg 5i xx v 4 u lk \\( n 5 ie \\? \\) f j 3 ix 8g ` \\( feu 2 0f qm vbe ul 2 en 1 e z k nd e \\) z b l w z c jn fo 9 sdr 3 x 9r \\? qz zqy 1x jj \\) l` e j u zg r 0 j 7x 6 5 0 q e b f u nu oa fu 8 b j b \\) c m3 1 ka 4v j \\( g f h n 3 4 7k co z 0w 'd k ` x v 8 \\? 5 \\) dzt e`f \\) 4 9omn b \\) z ay q c h \\( f 0 sf v 8 \\) tp v qgx 6 b 5 1a r tey g clb c 6m 8qv v 5woyz v4 ip qu ` e 3 8wn endstream endobj 13 0 obj endobj 14 0 obj endobj 15 0 obj endobj 16 0 obj stream arjmandmicrosoft word doc endstream endobj 17 0 obj", 
    "descr4": "pdf 1 4 647 0 obj endobj xref 647 20 0000000016 00000 n 0000001384 00000 n 0000000710 00000 n 0000001677 00000 n 0000001818 00000 n 0000002124 00000 n 0000002552 00000 n 0000003181 00000 n 0000003421 00000 n 0000003498 00000 n 0000003744 00000 n 0000004265 00000 n 0000004820 00000 n 0000005366 00000 n 0000005942 00000 n 0000006518 00000 n 0000006562 00000 n 0000007129 00000 n 0000007794 00000 n 0000001192 00000 n trailer startxref 0 eof 649 0 obj stream x b```b``y f 1v x w q n n 1 w f30 9 zx n 4 b qx 8 cb 4 9 xz8 fd m8y 8 g v a8y e kr p 5 4 4 p k gq `p2 3 v400 ` x \\? h q f z l lf w 2 00 \\( l 8 q l inp2x 3 endstream endobj 666 0 obj w 1 1 1 type xref index 79 568 stream x bbrd`b`` 3 1 x4 \\( endstream endobj 648 0 obj ocgs 650 0 r pieceinfo lastmodified \\( 20110917151416 \\) markinfo endobj 650 0 obj pageelement endobj 651 0 obj procset pdf text extgstate properties structparents 0 endobj 652 0 obj endobj 653 0 obj endobj 654 0 obj endobj 655 0 obj endobj 656 0 obj endobj 657 0 obj stream h n 0 b c r \\) h \\) gfg 6 jdtwp q 8 \\) k c' x 0 nl c x f e 7 ''ky2n u 6 fw z l xhz p l u \\? r 8 q 9pg f ny g n k l yw6 nnji 2 j 0f xcd vyzp cy u j zf \\( 5 jj uv 5 x`a mfp endstream endobj 658 0 obj stream h n1 j r \\) 8 j5 xe' xf k wf 1 w q' 8hl b u 'd h x9 ou ri 8 n j ly \\) mi j 2 r ds ji v z h \\( u 9g4 \\( u 0 f sqdt c z 3 l 2 0s gi f ni w 6c sts 9 lkr \\? vr f 6 j g yn n 4 e 5 uw jhk 58 endstream endobj 659 0 obj stream h tt 0 w 1 b`a r h l 6a mg nra g b` 2 x dxm 7h 6 r c ozx b 0 l p xv \\? 4 gay rm v ls f y3l n w l9l 3 u ju 5s \\( 6 \\? w x h e 2 u v 8u b b 1 q 6 u jdt ws n9 j eq \\( z dg m3 e x3q tz v5 k x h y2l l 6 endstream endobj 660 0 obj stream h n 0e c z \\( ew zam52e 1m b 8 iy a9 \\) n \\? \\( \\( b 80 e2 bc c q l z \\) 5 qk w 6 0 65 n ks 9 z c g4 n \\) vi ek8fm j bx l z j u 8 v f8w u f l 5 j p ru td z r 8l \\? n nh pv c un pm \\( \\) wc lkwn wg h j \\( \\? 9 endstream endobj 661 0 obj stream h mn 0 ta 1 v \\( l e qjh f \\? k v w la tb qc e tb r 4z1 \\( v w rl \\? 8 7 z mg cy v z v e p 3 z rc q om z \\( j pr us n 1 h z v k ptg l nh 0 c x c kr g 0 h b `v p h p \\? e e h n h \\) nvi mo \\( j n1 pk ffg ar l`u jf ex3 f \\? endstream endobj 662 0 obj endobj 663 0 obj stream h n 0 h zf vu sxm \\( u p x 7 `14 wqs7 k \\( f \\? fu p \\? rj tvp b m' j uq p r w w k 3 z pm 4 f ii k f b lt \\? hv b f ly c2 l z r lz 8d \\) `h z` db 9 `0 8s e j 7 q qn z h k w h f p ez x ` 1f 6 wa j 1 8 v \\( 3 endstream endobj 664 0 obj stream h tmo1 h ol q 9 5 zl w \\) 6 u j \\) c g b9p 5jk vp5 v nf z q'g q q v p asd 8 2 f j g `4rv x g ah p cx k sd uqf x 0 l2 l fxp \\) q lcq j n v v h ouc v j ogw \\( g \\? xp sc9 3l c 7i 1 x tn5 p sx gu ` x 8ytj q 0 5 v q p e b 6 c k g bpz u b 0 g endstream endobj 665 0 obj stream h n 0 x u l 'v w b9 7c `4 6 cvc wuv tu pjch n bfn f k h uy k q1 k l c w kk 0 4t \\? rj k h q \\( k \\( iz \\? \\( 3 w \\) b h f06 r g \\( l k 3kg 5q qu endstream endobj 1 0 obj procset pdf text extgstate properties structparents 1 endobj 2 0 obj stream h wk f8 dzq ny r k6 l jl c \\? j c4m l ` q xf 2y \\) c 0k e \\? u grv u r je n b 3 r q7 r w 6 gr \\) j v 6 6 k uk ` w l r b 7f 1tx h b c bc 3q3 4a \\? tpy kj g n fg e z u w u f j o2 1 bd jqqq j e rw k r l l k h j \\) nn", 
    "descr3": "pdf 1 5 1 0 obj endobj 2 0 obj endobj 3 0 obj extgstate procset pdf text imageb imagec imagei mediabox 0 0 595 32 841 92 contents 4 0 r group tabs structparents 0 endobj 4 0 obj stream x 7 g e f s2jthj lr ga e 9 w \\? b r 2h w 8 l jdp \\? 9x uf 5 0 z n b6 n j v 6 dl x h9y j v 6 b g 6 3 ci h h 8 b \\( g w \\( 3 n \\( z kf by0", 
    "descr2": "pdf 1 5 18 0 obj stream x z n 6 q8 p' e 4el'v hqr u mx h c ah bz y1 g w x j z 2 r8 uvg yw 9 \\? w w wb v' g5f b82 n w f 0 b l' 7 4 p j c w kq 0 \\? ww \\? n3 h mt kq hq \\( b4 m2n 2 6d wqi r g g fx e p g r 4l p 4 uw v 4 h 4 n j k auhzb 0 avz 5z b \\? c g \\( c gmwzjaow h ohm 4 3 ps 3 aj 9zvvy z wc 1 1 t4g q h 4 ngj 3 'p w v 2v pi td 9 yi z g0 hx \\) c r wz z 2 0 x k h b w 3 n j pr jw 5x h x r bk 7 g 3 r ru e lqd 2 u fr \\) n 4 nq \\) bd ` k 1'zn ha h k j r g \\? r 9yl e zq 3 \\( r w hz l py5 3 uf p zg u ha oe qq u w dbh q2 h ohm ha fh x u ylla q b 0 b oe 4 z z5 zz lu e u c 9 v 7 xu h oc z u67nbe u \\) ji e l 0 x ex wg 2 n 5 q k 5 h fi k 3 f x dki x lr oaw \\( q 7 \\? ku z mx 3 v h vo g eo 20 uj w k 2w f q x z 3yh1 h g p 3 qn x 0lnv x e0 hx \\) q 0 ulq 9 z k v l p \\) z ya r v q \\) z ya bv z 4 r j pz 7 5 q e e0 hx \\) q z ya u f vryw 9j v k endstream endobj 24 0 obj stream x mo 6 `e \\) q9 c v y4 cr kmi \\? \\( ` \\? myt 2u sk yc n fc zw x w wc u e c \\? k n \\? 06 m14ei e f w n 04 5 n h ws g 7fh v k j \\? ug e tw \\? x \\? mm jp f` q \\? \\? n 5 k jl wck 4 e wdaj zp h ew 8g f 5uv j k 3 w w ty 9 p ib r z q \\) \\? v j p rl e h es g hk pc p xi h n 6 v7 n e r sk q 4' f u 96u `o9 u xu 7 5 e g p 0 9 z x 9v k 7 g vw2p ` j l l y8 z hd x r z q b b q n h olt z z j fk z c9v0q mstu 3 gx", 
    "descr1": "board directors organization chart islamic banking credit rating risk management aml cft measures human resources international banking performance indicators macro economic banking indicators summary financial statements profit \\( loss \\) statement fiscal year ended march 20th 2010 \\( amounts irr \\) comprehensive profit loss statement fiscal year ended march 20th 2010 \\( amounts irr \\) cash flows statement fiscal year ended march 20th 2010 \\( amounts irr \\) tes financial statements fiscal year ended march 20th 2010 financial analysis global financial crisis experienced rela tive recovery growth economic indicators beginning fiscal year 2009 10 brought hope iranian economy banking system demonstrated relatively successful performance able avoid negative impacts global economy fiscal year 2009 10 marks new era history bank tejarat first time shares bank supplied tehran stock market following first offer 7 2 shares bank te jarat sold figure 2 higher initially anticipated following overwhelming demand shares bank tejarat along acquiring first rank terms earnings per share among state owned banks shares bank became cashable shares within banking sphere due efficient composition assets previous year predicted th trend continue 2010 11 successes specially customers hence considering existing increasing competitive market need additional efforts felt ever assistance directors experienced workforce well high tech equipment toge ther trust esteemed shareholders placed abilities intend continue increase market share determined become one superior banks middle east region order reach greater objectives bank vow shall continue moving sacred path shall lead bank brighter future dr majid reza davari managing irector chairman dr seyed rahmat allah akrami vice chair man board member \\( non executive manager \\) seyed mojtaba fahim hashemi board member deputy managing director \\( executive manager \\) farshad heidari board member deputy managing director \\( executive manager \\) siamak dolati board member \\( executive manager \\) commenced activities three decades ago islamic banking system enjoyed favourable growth att racted attention many investors bankers around world instead paying fixed interest forbidden islamic law islamic banking shares profit loss customers system although banks offer clients year based system bank close link clients make joint projects sell third party focused islamic bank ing objective fixed usury free banking establishing social justice tends first objective islamic economic system fact usury free banking system focus applicant 's purpose contract special technique devised way firstly clients bank forced pay receive interest secondly profitability levels contract also considered islamic banking system banking transactions theref ore presented form contracts current islamic contracts usury free banking follows mozarebeh mozarebeh defined contract civil law necessary facilities granted business people mozarebe h one parties \\( owner \\) provides funds stipulating party \\( agent \\) uses trading parties share related profit je'aleh je'aleh contract based customer obliged pay certain sum plus defi ned commission return certain action according contract acting party called agent contracting party contract applied fields mine industry agriculture housing commerce public services bank acts agent accepts carry particular work mutual contract applicant regarding special conditions undertaking bank embarks assigning executive operation accepted task wholly p artly another party second contract order fulfill obligation legal partnership legal partnership contract bank provides part capital new joint stock companies buys part stocks hence sharin g profit companies civil partnership civil partnership contract facilities development productive commercial service activities provided contract combination legal natural persons' hares cash kind common profit making per contract regarding applicability applicants take advantage facilities conduct transaction purpose transaction necessary capital partnership collate rals goods price approximate expenses total price selling price selling method profit sharing ratio bank applicant indicated installment sale contract bank delivers goods customer set pri ce part whole would received predetermined maturity equal unequal installments gharzolhasaneh contract bank lender pays specific amount legal natural persons borrower per specified r egulations borrower 's repayment obligation equal received amount plus commission portion bank grant gharzolhasaneh maximum payable amount \\( facilities \\) applicant commissions annually specified central bank iran mozare'eh mozare'eh contract bank gives farmland customer specified duration customer works land related profits shared hire purchase contract agreed lessee complying terms contract obtain ownership leased upon completion contract salaf salaf forward purchasing produced goods specific amount according usury free law partly provide working capital production units bank purchases goods produced customer per request whether owner natural legal banks allowed purchase goods produced solely units cannot easily spoiled quickly traded discounting according discounting contract bank discounts documents drafts production trade service units mosaghat mosaghat contract garden owner another party receives product return maintaining harvesting garden objectives becoming best institution iran offers various financial services becoming one best banks middle eas region terms valuing beneficiaries increasing active presence international banking market mission bank tejarat active offering various banking services absorbing deposits offering facilities accepting commit ments etc within framework islamic banking mission includes analyzing current market situations continuously looking identify new markets commercial opportunities purpose meeting requirements clients wh ilst safeguarding interests shareholders code ethics activities based certain values principles guide decision making processes principles related customers employees shareholders society well use date technology customer since bank tejarat highly value customers focus efforts toward achieving customer satisfaction ultimately leads customer loyalty purpose take advantage stat e art technology b staff also believe human resources valuable assets hence bank tejarat constantly invest great deal time resources employees c shareholders furthermore committed towar safeguarding sustained interest shareholders alongside short term achievements society addition strive gain continuos social acceptance intend achieve conduct short intend achieve objectives respecting framework code ethics values e new technology knowledge use updated technology order meet customers needs established 1887 east new bank first modernized bank commenced activities imam khomeini square \\( formally known toupkhaneh \\) bank tejarat currently located although activities bank last year repl aced bank shahi nevertheless set basis modern banking iran prior victory islamic revolution iran 1979 thirty six private state owned banks operated country said banks fully iranian others jointly held iranian foreign owners following victory islamic revolution islamic revolutionary council announced nationalization banks well merging june 1979 bank te jarat established december 1979 following merger 11 banks total capital irr39 billion later 1981 iran russia bank also merged bank tejarat increasing capital bank irr41 billion order execute overall policies article 44 constitution refers privatization state owned companies institutions bank tejarat became listed company tehran stock exchange \\( tse \\) april 29th 2009 first tim e 7 shares supplied tse may 18th 2009 pie chart demonstrates shareholders composition bank tejarat first large commercial bank iran bank tejarat awarded bb rating long term forex b short term forex b financial robustness capital intelligence rating agency one fo ur main international rating agencies globe ratings clearly reflect suitability bank tejarat commercial partner domestic international counterparts also mean customers enjoy peace mind w hich offered safety low risks involved banking performance bank tejarat strengths bank tejarat viewpoint capital intelligence rating agency include suitable position bank within domestic arket resulting low cost deposits long term investment deposits compositions suitable ratio operating expenses relation average total asset bank tejarat successful achieving number objectives include augmenting market share terms deposits whilst allocating lowest share claims among five largest commercial banks iran fully realizing anticipated earnings per share \\( eps \\) realizing deposits objectives 94 increasing share participation contracts within total facilities granted increasing share bank guarantees within five large st commercial banks iran one percent offering banking operations payment bills installments transferring funds acquiring account balances via shetab network cards within internet well telephone banking atm machines offering internet purchasing services shares via website bank 's brokerage making operational sms email chat systems within call centre well establishing tejarat exchange company \\) formulat ing integrated strategic planning system bank initially commenced upon project 2008 09 continued reported period main achievements project include identifying extracting key performance indicators within strat egic spheres well formulating mission declaration acquiring approval strategic planning council b \\) operational budgeting main objective project linking bank 's objectives strategies operations within framework operational budgeting system words project ensure activities bank tejarat carried line bank 's greater objectives c \\) core banking main aim project solve risin g problems within sphere information technology assist bank render wide range services customers \\) insurance company order expand scope activities offer wider range services custome rs decided complement existing activities rendering insurance services feasibility studies already carried process obtaining necessary licenses central insurance islamic republic iran order establish insurance company e \\) implementing organizational governance system since supply shares tehran stock exchange \\( tse \\) bank tejarat paid special attention toward establishing organizational governance system everal committees risk management auditing internal auditing committees created purpose measures organizational structural amendments well establishing relevant committees also planned undeniable significance risk management together ever increasing requirements international institutions basel committee op erating risk management within banks caused domestic financial institutions play effective applicable role field utilize improve existing methods risk measurements within various activities correspond risk nagement methods basel ii code finally move toward arranging information structures based internal external data regarding customers furthermore following requirements central bank islamic republic iran \\( cbi \\) made several measures recent years order improve organizational structures risk assessment one measure formation risk management high committee along subcommittees assessing credit liquidi ty operational market risks together independent internal auditing department finally inline cbi 's requirement formulated bank tejarat 's risk management code several types risk managed particularly concerned following credit risk operational risk market risk liquidity risk credit risk credit risk mainly affected environmental conditions economic preo ccupation undoubtedly important risk within financial activities banking sphere hence banks financial institutions pay great deal attention toward identifying comprehending business environmental conditions pr ecise credit evaluation customers process improving credit risk management portfolios 2009 10 bank tejarat taken continuously taking effective steps purpose identifying measuring managing credi risk order minimize credit risk taken several measures including launching credit report system whereby credit history customers submitted us via credit rating consulting company iran preparing phase 1 credit rating system customers within branches \\( natural legal persons \\) identifying existing risks credit related activities suggesting related methods risks could managed accordance wit h basel ii code addition measures currently taken order best manage credit risk include measuring risk estimating capital customers' portfolios well formulating suitable method measuring credit rating operational risk operational risk non financial risk covers wider scope activities comparison risks according basel committee operational risk defined possibility loss occurring ny incomplete unsuccessful activity internal external processes costs measuring risks higher credit risks since cover wider scope methods processes systems main measures taken bank tejarat durin g reported period regard minimizing operational risks include measuring risk according base methods formulating instructions purpose reducing losses resulting external events well identifying breakdown well processes planning purpose surveying one measures currently taken include planning toward improving ecurity cheques well creating integrated information bank regard losses via use advanced measurement methods market exchange rate risks market risk occurs due uncertainty prospective market fluctuations value cash flows financial tools occurring consequence changes market variables interest rates exchange rates well stock rates exchange rate risk occurs result changes value bank 's foreign currency assets nd liabilities due fluctuations forex rate measures taken bank tejarat regard risks include calculation forex portfolio value risk \\( var \\) model installing software l affairs management formulating installing software program determining improved forex portfolio bank addition measures currently taken include determining report receiving system risk measurement softw well determining optimized foreign currency portfolio optimizing risk portfolio measurement systems based advanced models liquidity risk liquidity risk occur obstacle raising funds required purpose settlement encountered refers accessibility enough resources respond withdrawals accounts liabilities bank time occurrence af ter credit risk liquidity risk considered second potentially threatening kind risk banks one reasons occurrence liquidity risk due outstanding dues measures taken purpose managing liquidity risk include designing statistical chart required purpose forecasting future liquidity gap levels bank formulating suitable method calculating rate interest central account bank formulating software calculating rate interest central account daily basis designing developing software optimizing management assets liabilities bank purpose minimizing liquidity gap well realization bank 's eps etc finally applying risk liquidity gap measurement system anti money laundering measures taken reported period include answering numerous queries correspondent banks issuing distributing informative brochure among employees purpose familiarizing regard crimes organizing 6 000 man hours training courses regard money laundering demonstrating staggering 151 increase comparison previous year formulating guidelines concerning optimization execution anti money laundering law bylaws establishing continuous links branches regard methods dealing suspicious cases well sending reports required cooperating judiciary police regard information relating persons suspected bein g linked money laundering terrorism finally requesting information units regarding pursuance persons \\( list names supplied united nations \\) suspected cooperation alqaida taliban terrorist organiza tions composition human resources terms educational levels gender place service demonstrated table bank tejarat believe human resources important asset organization furthermore believe effective workforce necessary prerequisite achieving greater organizational objectives hence invested great deal time resources recruiting ri ght personnel training thus reported period 1 200 various training courses organized whilst 714 581 hours training allocated employees measures taken place purpose developing human resources include reviewing activities processes units within bank reviewing directives bylaws relating human resources reviewi ng job classifications analyzing designing job descriptions formulating path toward job advancement key positions designing implementing employee performance evaluation finally establishing employee performance evaluatio n centre almost 2 000 domestic branches nationwide offering wide range finan cial services iranian public bank tejarat one largest iranian banks terms number branches order safeguard interests shareholders customers policy close money losing branches howev er number profit making branches reported period outweighed loss making branches far table demonstrates comparison number branches operating 2008 09 2009 10 \\) deposits b \\) commitments c \\) foreign currency branches \\) overseas branches bank two overseas branche paris france dushanbe tajikistan bank tejarat also one main shareholders persia international bank \\( p b \\) europ isch iranische handelsbank ag \\( e h \\) hamburg macro economic indicators source central bank islamic republic iran \\( cbi \\) since official statistics 2009 10 published time prepa ration report said statistics included within report income per capita calculated dividing gdp current prices population numbers performance banking network march 2008 2009 chosen statistics cbi march 2009 since official statistics 2009 10 published time preperation report said statistics included within report 1 history activities bank tejarat \\( pu blic joint stock \\) formed december 18th 1979 result merger bank etebarat iran bank iran britain bank iran middle east mercantile bank iran bank iranshahr bank sanaye iran bank shahriar bank iranian bank kar international bank iran japan bank iran russ bank registered registration number 38027 bank transformed public joint stock company drafted new articles association latest changes registered c ompany registrar february 21st 2009 bank 's shares enlisted tse april 29th 2009 enlisted tse price board may 18th 2009 bank 's main headquarter located tehran 2 basis preparation financial stateme nts bank 's financial statements prepared based historical cost applicable current values used 3 summary significant accounting procedures 3 1 investments 3 1 1 valuation method long term investments evaluated cost less provision permanent investment devaluation current rapidly transacted investments market valued minimum cost net sales value total investment current investments eval uated minimum cost net sale value investment 3 1 2 income recognition method profit investment subsidiaries affiliated companies recognized date financial statements approved general assembly shareho lders investee company \\( date approval financial statements \\) profit investments including current long term investments recognized date approval general assembly shareholders investee company \\( date balance sheet \\) 3 2 tangible fixed assets 3 2 1 tangible fixed assets except land building \\( note 3 2 2 \\) recorded cost improvement costs costs fundamental repairs cause considerable increase capacity useful life fixed assets improve quality output considerably considered capital costs amortized remaining useful life relevant assets maintenance trivial repairs costs whose purpo se maintaining revival expected economic interests commercial unit \\( proportion evaluated standard function \\) considered current costs entered profit loss account period 3 2 2 land building goodwil l commercial units bank reassessed fiscal year ended march 2005 execution article 62 3rd development plan total recorded irr10 830 billion excess amount resulting revaluation totaling ir r9 206 billion recorded government 's capital increase bank 3 2 3 virtue money credit council resolution 1077 dated february 17th 2007 since fiscal year 2006 07 depreciation fixed assets shall calculated usin g depreciation table provided article 151 direct taxation act rates methods follows depreciation buildings reassessed fiscal ye ar ended march 20th 2005 thereafter depreciation calculated accordance note 10 depreciation bylaw subject article 151 direct taxation act based 3 5 declining method 3 3 goodwill commercial units goodwill bank 's commercial units restated registered accounts fiscal year 2004 05 execution article 62 3rd development plan moreover considering money credit council resolution 1077 bank 's assets depreciated acc ordance depreciation table article 151 direct taxation act therefore starting march 21st 2006 depreciation calculated goodwill 3 4 income recognition facilities granted commission fines considering directive mb 77 2 july 18th 2005 issued banking studies regulation department central bank iran accordance money credit council resolution 1044 july 16th 2005 income recognized accrual method based mentioned method bank 's income recognition follows 3 5 basis calculation depositors' share joint income execution usury free banking operation regulation ratified august 30th 1983 relevant bylaw executive guidelines well cbi directive mb 1799 dated january 8th 2004 income generated activities related granting financial facilities investment stocks participation bonds recognized within bank 's accounting practices treated joint income depositors' share profit calculated proportion net resource used activities 3 6 classification granted facilities based council \\( subject directive mb 2823 issued cbi 's banking studies regulations department february 24th 2007 granted facilities bank classified based payment delay factors clients' financial status clients' field activity following categories deferred category \\( 3 7 doubtful claims provision doubtful claims provision accounted allowed accounts accordance money credit council resolution \\( directiv e mb 2823 dated february 24th 2007 issued calculation guideline based following end financial year general provision equaling 1 5 total loan balance \\( including old current overdue deferred doubtful transactions \\) taken account except remainder facilities special provision considered applying relevant coefficients collateral values special provision balance overdue deferred doubtful categories calculated follows 3 8 provision employees' end ser vice leave allowance provision employees' end service benefit calculated alloted accounts based last fixed salary continuous benefits year service provision employees' leave benefits calculated alloted accounts based one day last fixed salary continuous benefits multiplied employees' remainder leave day \\( \\) end financial year balance adjusted proportion remainder leave days 3 9 foreign excha nge translation 3 9 1 domestic accounts foreign currency monetary items translated market rate date balance sheet \\( intra banking reference exchange rate announced cbi day \\) non monetary items translated market rate date transaction difference resulting settlement translation foreign exchange monetary items treated income expense period 3 9 2 overseas units monetary non monetary items \\( except sh areholders' equity \\) overseas branches units exchanged market exchange rate date balance sheet shareholders' equity translated market rates creation date \\( historical rates \\) profit loss items translated average market exchange rate period difference resulting conversion financial statements' figures mentioned units recorded shareholders' equity heading 3 10 claims government mandatory granted faci lities provided based guarantee country 's management planning organization classified claims government following categories deferred granted facilities resulting client 's inability repay insuff icient collaterals loan bank 's inability collect payment \\( \\) overdue granted facilities related execution capital assets acquisition projects facilities granted ministries governmental institutions 4 cash cash enjoys sufficient insurance coverage iran insurance co dangers robbery fire accidents 5 due central banks 6 due banks credit institutes 7 due government 8 granted facilities dues \\( amounts irr million \\) 8 1 granted facilities dues based maturity date profit rate \\( amounts n irr million \\) 9 accounts receivable 10 debtors l cs term bills exchange 11 participation bonds payment original allocated pr ofits participation bonds governments' civil projects ministries road transportation well energy guaranteed president 's planning strategic supervision deputy 12 investments participations 13 tangible fixed assets \\( amounts irr million \\) 14 intangible assets 15 assets assets amounted irr6 303 789 million mainly include provisional debtors irr5 969 990 million ownership pledges irr271 959 million 16 items transit main part balance items transit related difference local debtors creditors accounts well foreign exchange dues deposits accounts registered overseas branches head office 17 due banks credit institutes 18 demand deposits 19 savings similar gh arzolhasaneh deposits 20 term investment deposits 20 1 long term investment deposit date balance sheet follows 21 deposits 22 bank 's debts acceptance l cs notes term bills exchange bank 's debt balance acceptance l cs term bills exchange related endorsed transacted notes fi nance usance l cs foreign correspondents due date since march 21st 2010 23 provisions liabilities 24 dividend payable balance dividend payable amounted irr246 165 745 145 amount irr241 860 138 160 related governments' dividend irr2 780 699 060 related legal entities irr1 524 907 925 related real entities date balance sheet n't receive profit worth mentioning according article 45 budget law 2009 10 ratified dividend amount ofirr537 667 224 423 allocated previous fiscal year 25 capital 25 1 charter capita l bank amounted irr39 120 million \\( including 39 120 000 shares nominal value irr1 000 share \\) capital increased irr10 437 384 million \\( including 10 437 384 000 shares nominal value irr1 000 share \\) unti l end fiscal year march 20th 2010 based following table 25 2 composition shareholders date balance sheet follows 25 3 capital adequacy ratio \\( car \\) result dividing bank 's base capital risk weighted assets according central bank iran obligations must least 8 bank 's car date balance sheet follows 26 legal reserve based contents article 33 monetary banking law 15 net profit year deduction losses previous years considered legal reserve process mandatory legal reserve reaches bank 's capital discretionary 27 reserves reserves include contingency reserves order reduce risk bank allocates 10 net profit every year contingency reserve 28 result legal foreign exchange rate parities virtue approval money credit council circular 1309 mb dated march 9th 2002 issued central ba nk iran subject foreign exchange rate unification plan march 26th 2002 balance bank 's foreign exchange assets liabilities account converted compliance mentioned circular result amounting irr7 account 29 30 joint income 31 difference definite account profit f investment deposits difference definite account profit long term investment deposits clients based circular 1799 mb dated february 8th 2004 central bank iran calculated follows amounts granted facilities investments participation bonds investment deposits legal reserve calculated based weekly average period 32 profit penalty received \\( non joint income \\) 33 commission revenue \\( non joint income \\) 34 35 administrative general doubt ful debts expenses 36 financial expenses 37 contra nominal items 37 1 clients' comm itments l cs 37 2 clients' commitments issued l gs 37 3 commitments clients 37 4 managed funds similar cases 1 bank tejarat 's position among five major commercial banks 1 1 share bank tejarat 's employees branches resources consumptions commitments comparison five major commercial banks alth ough bank tejarat currently 15 16 share employees branches among five major banks succeeded acquiring 17 3 total deposits 18 facilities 37 total l g commitments 25 l c commitments table bel ow demonstrates bank tejarat 's share employees branches resources consumptions commitments among five major commercial banks country fiscal year 2007 08 2008 09 1 2 bank tejarat 's portion private domestic currency deposits among five major commercial banks reported period bank tejarat enjoyed growth rial deposits 29 five major commercial banks e xperienced 26 growth deposits figures demonstrate bank 's efforts attracting deposits successful banks furthermore allocating 22 current account deposits bank tejarat also ore successful banks attracting low cost deposits following page table provides detailed data regard bank tejarat 's share deposits among five major commercial banks iran 1 3 bank tejarat 's private domestic currency deposits comparing five major commercial banks reported period bank tejarat 's performance terms attracting private domestic currency deposits successful comparison major banks thus whilst average share deposits among five major commercial banks 20 bank tejarat 's share 26 needless mention excess current deposits total depos ratio enabled bank enjoy higher profit margins resulting composition low cost deposits consequently reduced bank 's vulnerability interest rate reduction policies comparison deposit composition bank tejarat demonstrated following table 2 percentage assets liabilities co mposition table shows asset liability item balance sheet last 3 years fiscal year 2009 10 income generating assets \\( loans granted participation bonds investments participations \\) increased non inc ome assets \\( cash fixed assets assets \\) decreased indicates bank 's success allocation resources liability side increased debts banks fiscal year 2008 09 loans received central bank iran deposits witnessed considerable growth period reported significant portion debts cbi settled 3 analysis main variables trend 3 1 deposits seen opposite bar chart balance deposits fiscal year ended march 20th 2010 amounted irr268 675 billion demonstrating healthy growth 24 1 comparison previous year addition bank also enjoyed 22 9 growth liquidity figures demonstrate bank tejarat successful attracting eposits also rising share country 's monetary markets following bar chart demonstrates balance domestic foreign currency total deposits bank fiscal years 2006 07 2009 10 3 2 composition deposits portion costless items within bank 's deposits consisting current savings deposits 47 7 portion cost bearing items short term long term investment deposits 52 3 opposite pie chart demonstrates composition bank 's deposits terms cost \\( rials local currency well foreign currency \\) fiscal year ended march 20th 2010 3 3 facilities seen opposite bar chart total facilities granted bank tejarat past four years experienced average growth 22 3 rate growth march 2009 21 7 comparison corresponding period 3 4 composition facilities one main strategies bank reported period moving toward grantin g partnership facilities consequence share contracts among rest facilities granted increased 29 march 20th 2009 55 end reported period demonstrating bank tejarat 's success achieving goal noteworthy increasing number partnership contracts demonstrate higher profitability \\( since geared toward industries commercial activities \\) bank tejarat boost profit levels improves th e optimum allocation resources society words addition increasing profitability thereby safeguarding interests shareholders financial intermediary bank tejarat makes positive contribution economy directing idle funds received deposits toward wealth generating sectors industry composition facilities fiscal years ended march 20th 2009 march 20th 2010 separated exchanged contracts partnership contracts shown pie charts seen pie chart bank tejarat granted facilities toward productive sectors \\( industry mine housi ng construction agriculture \\) 2009 10 indicating bank 's continuous support productive job creating sectors pie chart shows composition granted facilities balance broken various economic sectors duri ng reported period 3 5 commitments terms letters guarantee \\( l gs \\) mentionable bank tejarat holds first rank among state privat ely owned banks terms l gs commitments thus share bank tejarat comparison five major commercial banks country 37 table next page demonstrates trend regarding issued l gs \\( forex domestic c urrency \\) deposits letters guarantee relevant commissions within 4 year period three items witnessed growth 14 4 7 17 respectively 2009 10 3 6 commitments terms letters credit \\( l cs \\) seen following table balance commitments relating l cs demonstrated healthy growth 12 4 comparison previous year despite sanctions enforced bank 3 7 income total income bank 's income fiscal year 2009 10 enjoyed growth 21 5 reach ir r33 402 billion irr27 491 billion previous year next table pie chart demonstrate bank 's total earned incomes fiscal years 2006 07 2009 10 broken terms volume percentage b \\) bank 's share income total joint non joint income share bank reported fiscal year amounted irr16 269 billion demonstrating 3 6 growth comparison previous year furthermore som e 49 2 bank 's income joint income 50 8 non joint income following charts demonstrate bank 's share income broken joint non joint income fiscal years 2006 07 2009 10 3 8 profit paid depositors seen opposite bar chart reported period pro fits paid depositors experienced increase 45 comparison previous year major part due 30 increase investment deposits small portion result 0 6 increase average rate said depos noteworthy average investment deposits profit rate \\( without deducting legal deposits \\) 12 7 2008 09 13 3 2009 10 trend profits paid depositors fact share joint income ban k demonstrated opposite chart 3 9 expenditures banks' expenditure details presented table shown downward trend doubtf ul debts expenditure present period due improvement receivable classification asset quality subsequently decreased bad debts expenditure increased expenditures bank 's expenses 3 10 net profit seen following chart bank experienced average growth net profits preceding four years demonstrating suitable overall performance bank tejarat previous years noteworthy higher rate net profit comparison previous years due unusually high rate non operational profit resulting sale excess properties bank 4 \\) important financial ratios indicators 4 1 indicators profitability 4 1 1 return equity \\( roe \\) seen following table roe increased 15 2008 09 15 1 2009 10 demonstrating improvement management assets liabilities well bank 's performance whole mentioned 3 10 unusual growth 2007 08 related growth non operational profits year trend roe ratio previous 4 years illustrated following table 4 1 2 profit margin ratio seen following table profit margin enjoyed crease 1 38 despite 1 23 rise cost money performance due 2 61 increase rate returns granted facilities well optimization allocation resources 4 2 agents' efficiency indicators indicators relating 2009 10 shown following table demonstrate significant growth comparison 2008 09 hence deposits per capita personnel increased rls10 2 billion rls12 7 billion facilities per capita personnel also increased rls9 billion rls10 8 billion furthermore bank 's profits per capita increased rls131 billion 2008 09 rls142 billion 2009 10 demonstrating n 8 4 growth 4 3 operation control indicators 4 3 1 fixed assets total assets ratio following table shows fixed assets total assets trend pr evious periods ratio represents portion assets became inoperative order finance fixed assets compared industry average ratio favorable downward trend period indicates efficient resource ocation income generating assets fixed assets total assets ratio 4 3 2 capit al adequacy ratio \\( car \\) seen following bar charts car bank tejarat experienced decrease reported period due growth bank 's deposits consequently order counter reduction car bank plans increase capital 30 2010 11 anticipated boost ratio 8 7 fiscal year ended march 20th 2011 4 3 3 foreign c urrency open position following graph presents bank 's foreign currency open position three previous years 1386 \\( 2007 08 \\) due special conditions year government 's mandatory financial assignments bank 's foreign cur rency open position became weaker anticipated fortunately forex rates remain constant fiscal year 2008 09 bank incur loss worth mentioning 2008 09 2009 10 based bank 's planning est ablishing balance bank 's resources consumptions foreign currency position changes completely control manner bank managed manipulate respect expectations future forex rates", 
    "crawled_date": "2017-06-10T13:59:37.998722"
  }, 
  "258": {
    "api_url": "stripe.com", 
    "progweb_url": "https://www.programmableweb.com/api/stripe-relay", 
    "progweb_date": "10.02.2015", 
    "progweb_descr": "The Stripe Relay API offers a commercial platform to integrate with existing applications. This lets users buy products across different media such as tweets, and advertisements. The Stripe Relay API extends the capabilities of the Stripe API. The Relay API is REST based, and returns data in JSON format. It uses the API Key method for authentication. Stripe focuses on deliver systems that let businesses and private individuals accept online payments.", 
    "api_name": "Stripe Relay", 
    "progweb_cat": "Payments,Business", 
    "crawled_date": "2017-06-10T13:59:26.446382"
  }, 
  "259": {
    "api_url": "makeitsocial.com", 
    "progweb_url": "https://www.programmableweb.com/api/make-it-social-product", 
    "progweb_date": "10.12.2015", 
    "progweb_descr": "The Make It Social Product REST API allows developers to access and integrate the functionality of Make It Social Product with other applications. Some example API methods include creating a new product, managing products, and creating webhooks. Make It Social provides users and travel providers tools to arrange and book group travel.", 
    "api_name": "Make it Social Product", 
    "progweb_cat": "Booking,Payments", 
    "crawled_date": "2017-06-10T13:59:26.445278"
  }, 
  "64": {
    "api_url": "bitfloor.com", 
    "progweb_url": "https://www.programmableweb.com/api/bitfloor", 
    "progweb_date": "11.23.2012", 
    "progweb_descr": "Bitfloor is an online bitcoin trading platform. Users can trade bitcoins and transfer funds to accounts and wire payments.   The Bitfloor API allows developers to access and integrate the functionality and data of Bitfloor with other applications. Some example API methods include retrieving market data, managing account information, and creating and managing orders.", 
    "api_name": "Bitfloor", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:37.994595"
  }, 
  "65": {
    "api_url": "merchee.com", 
    "progweb_url": "https://www.programmableweb.com/api/merchee", 
    "progweb_date": "11.25.2012", 
    "progweb_descr": "Merchee is an online and mobile application that allows users to accept payments and manage recurrent payments and subscription billing for their goods and services.   The Merchee API allows developers to access and integrate the functionality of Merchee with other applications and to create new applications. Some example API methods include managing user information, managing customer information, and retrieving transaction details.", 
    "api_name": "Merchee", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:37.993012"
  }, 
  "66": {
    "link5": "https://support.payjunction.com/hc/en-us/articles/215353108-REST-API-Documentation", 
    "link4": "https://developer.payjunction.com/hc/en-us/articles/216477397-Development-Sandbox", 
    "link1": "https://developer.payjunction.com/hc/en-us", 
    "api_url": "payjunction.com", 
    "link3": "https://developer.payjunction.com/hc/en-us/articles/221121127-GET-smartterminals", 
    "link2": "https://developer.payjunction.com/hc/en-us/articles/216477407-POST-transactions", 
    "progweb_url": "https://www.programmableweb.com/api/payjunction", 
    "progweb_date": "11.25.2012", 
    "progweb_descr": "PayJunction is a secure credit card processing service. Users of PayJunction can accept credit card payments on their websites, in their offices/stores, and via mobile phones.  The PayJunction API allows developers to access and integrate the functionality of PayJunction with other applications. Some example API methods include retrieving receipts and electronic signatures, managing payments, and accessing customer details.", 
    "api_name": "PayJunction", 
    "progweb_cat": "Payments,Credit Cards", 
    "descr5": "follow payjunction support payjunction api api faq 's rest api documentation payjunction rest api documentation learn takes payjunction developer stay date pci secure coding standards register developer keep news api updates participate affiliate program receive income processing browse secure rest api process visa mastercard discover american express check \\( ach \\) transactions payjunction api developer website https developer payjunction com application keys order quickly troubleshoot support developers requests payjunction api must include application key key used identify application payjunction api integration application uses payjunction api must unique application key requesting application key create account developer payjunction com already one log account submit request application key request approved receive labs \\( testing \\) application key production \\( live \\) application key article helpful \\? 0 0 found helpful questions \\? submit request comments related articles process transaction video process credit cards website custom application \\? find terminal id \\? woocommerce modernizing medicine submit request submit support questions 'll touch soon possible submit request got questions \\? help call us speakwith customer support representative call us toll free \\( 800 \\) 601 0230 x3 toll \\( 805 \\) 563 1520 backup \\( 805 \\) 426 0404 fax free \\( 800 \\) 771 3821 fax toll \\( 805 \\) 569 3821 send feedback let us know improve always happy hear send feedback payjunction level 1 pci compliant provider registered iso msp first national bank omaha 1620 dodge st omaha ne member fdi 2017 payjunction rights reserved privacy policy terms use", 
    "descr4": "need help \\? 800 601 0230 request key open ticket free terminal submit request sign payjunction api documentation api general follow development sandbox following information allow process transactions via payjunction test account complete development testing simply update api url production domain \\( https www payjunction com \\) quicklink api login password order point live account communicating rest api via test account testing send test transactions test account use following domain https api payjunctionlabs com additionally must use following test account api login password api login pj ql 01 api password pj ql 01p see article details authentication logging payjunction test virtual terminal \\( web interface \\) view virtual terminal verify correct data sent received test account go https www payjunctionlabs com click login login payjunctiondemo password demo123 click search recent batches find transactions using real credit cards testing use real credit card test account payjunction replaces last 4 digits 1111 real card number never stored view transaction see last 4 digits replaced important remember search transaction using card number 's last 4 digits test credit card information prefer use test credit card rather credit card use information provided test credit card 4444333322221111 test expiration date 01 20 test cvv 999 \\( settings checking cvv \\) test address 8320 \\( settings checking address \\) zip code 85284 \\( settings checking zip code \\) test card track b4444333322221111 first last 1712980100000 \\? 4444333322221111 1712980100000 \\? test ach route check prefer use test route check rather use information provided route 104000016 account 123456789 please note shared development environment demo account used many individuals time therefore security settings \\( avs cvv \\) may fluctuate others modifying testing update security settings following steps login described click left side menu click gateway overview panel scroll section named option 2 quicklink advanced api connection find api login using \\( ex pj ql 01 \\) click security link update security settings preference click save note development environment last 4 digits card file always 1111 request key apply application key submitting request submit request open ticket need help \\? get touch 'll get back soon possible contact support free terminal order free smart terminal development testing request terminal privacy policy terms use 800 601 0230 payjunction level 1 pci compliant provider registered iso msp first national bank omaha 1620 dodge st omaha ne member fdi 2017 payjunction rights reserved", 
    "descr3": "need help \\? 800 601 0230 request key open ticket free terminal submit request sign payjunction api documentation smart terminal follow get smartterminals get list smart terminals account example request curl x get u login password h accept application json h x pj application key production app key https api payjunctionlabs com smartterminals example response results serialnumber 111111111111 smartterminalid fa9f139d a6e8 4693 9bab a98904cf3bf9 nickname smartterminal 1 created 2016 04 18t19 31 27z serialnumber 222222222222 smartterminalid 6d81de1e d069 40eb 82bc 4f08a9a4b890 nickname smartterminal 2 created 2016 01 12t19 45 21z serialnumber 333333333333 smartterminalid 947b8f01 05e9 464a bf79 7807f0c6c588 nickname smartterminal 3 created 2015 11 17t00 17 07z serialnumber 444444444444 smartterminalid 20ca5c55 4c6b 4f45 b656 3db7a088757c nickname smartterminal 4 created 2015 08 27t20 23 00z request key apply application key submitting request submit request open ticket need help \\? get touch 'll get back soon possible contact support free terminal order free smart terminal development testing request terminal privacy policy terms use 800 601 0230 payjunction level 1 pci compliant provider registered iso msp first national bank omaha 1620 dodge st omaha ne member fdi 2017 payjunction rights reserved", 
    "descr2": "need help \\? 800 601 0230 request key open ticket free terminal submit request sign payjunction api documentation transactions \\( credit debit ach \\) follow post transactions process transactions process ach \\( electronic check \\) transaction process keyed credit card transaction uploaded ach card data billed via vault id also bill via previous transaction id parameters ach keyed card bill vault id bill transaction id transaction fields billing contact shipping contact fields credit card security example response transactionid 3601 uri https api payjunction com transactions 3601 terminalid 1 action charge amountbase 1 00 amounttax 1 00 amountshipping 1 00 amounttip 1 00 amountsurcharge 1 00 amounttotal 5 00 invoicenumber invoice 5 purchaseordernumber custom po signaturestatus signed status capture created 2013 11 18t22 15 32z lastmodified 2013 11 18t22 15 32z response approved true code 00 message approved processor authorized true approvalcode pj20ap avs status requested requested bypass match zip true address true cvv status requested settlement settled false vault type card accounttype visa lastfour 1111 billing firstname john middlename j lastname doe companyname payjunction email jdoe payjunction com phone 8006010230 x2 phone2 8006010230 x2 jobtitle support identifier billing customer id website http www payjunction com address address 1903 state st city santa barbara state ca country usa zip 93101 shipping firstname jane middlename j lastname doe companyname payjunction email janedoe payjunction com phone 8006010230 x2 phone2 8006010230 x2 jobtitle support identifier shipping customer id website https www payjunction com address address 1903 state st city santa barbara state ca country usa zip 93101 request key apply application key submitting request submit request open ticket need help \\? get touch 'll get back soon possible contact support free terminal order free smart terminal development testing request terminal privacy policy terms use 800 601 0230 payjunction level 1 pci compliant provider registered iso msp first national bank omaha 1620 dodge st omaha ne member fdi 2017 payjunction rights reserved", 
    "descr1": "need help \\? 800 601 0230 request key open ticket free terminal submit request sign paymentssimplified smart terminal api limit pci scope focus best building software handle rest limit pci audits emv certified free smart terminal simple integration nfc support developer support api base urls https api payjunction com production server processing live transactions https api payjunctionlabs com test server development general getting started guide requirements connecting payjunction api common terms definitions transaction processing workflow webhooks rate limiting decline handling payjunction account structures api general application keys development sandbox user authentication response formats response status codes transaction response codes ach definitions codes error handling tutorials quick start transactions e commerce phone orders address verification cvv fraud prevention ach check transactions refunding voiding transactions editing transactions remote signature capture email tokenizing storing accounts improve security smart terminal post smartterminals smartterminalid request payment get smartterminals get terminals webhooks properly receiving webhooks webhook testing local development environment securing webhooks post webhooks get webhooks put webhooks webhookid delete webhooks webhookid transactions \\( credit debit ach \\) post transactions get transactions transactionid put transactions transactionid transaction notes post transactions transactionid notes get transactions transactionid notes get transactions transactionid notes noteid put transactions transactionid notes noteid delete transactions transactionid notes noteid receipts electronic signatures webhook transaction signature get transactions transactionid receipts latest get transactions transactionid receipts latest thermal get transactions transactionid receipts latest fullpage post transactions transactionid receipts latest email customers post customers get customers customerid get customers \\? offset index put customers customerid delete customers customerid customer notes post customers customerid notes get customers customerid notes noteid get customers customerid notes put customers customerid notes noteid delete customers customerid notes noteid customer vaults post customers customerid vaults get customers customerid vaults vaultid get customers customerid vaults put customers customerid vaults vaultid delete customers customerid vaults vaultid customer addresses post customers customerid addresses get customers customerid addresses addressid get customers customerid addresses put customers customerid addresses addressid delete customers customerid addresses addressid request key apply application key submitting request submit request open ticket need help \\? get touch 'll get back soon possible contact support free terminal order free smart terminal development testing request terminal privacy policy terms use 800 601 0230 payjunction level 1 pci compliant provider registered iso msp first national bank omaha 1620 dodge st omaha ne member fdi 2017 payjunction rights reserved", 
    "crawled_date": "2017-06-10T13:59:37.991667"
  }, 
  "67": {
    "link5": "http://polipaymentdeveloper.com/polilinkapi", 
    "link4": "http://polipaymentdeveloper.com/polilinkapi_old", 
    "link1": "http://polipaymentdeveloper.com/linkrest", 
    "api_url": "polipaymentdeveloper.com", 
    "link3": "http://polipaymentdeveloper.com/rest", 
    "link2": "http://www.polipaymentdeveloper.com/linksoap", 
    "progweb_url": "https://www.programmableweb.com/api/polipayments", 
    "progweb_date": "11.26.2012", 
    "progweb_descr": "The service provides online payments via direct interaction with the buyer's bank to order a payment and the merchant's bank to deliver the payment. A seller application provides for product selection and purchase, then hands off the transaction to the payment service. It establishes contact with the buyer's bank on the buyer's behalf and submits a payment request URL. It then generates a credit URL for the seller's bank to complete transfer of the funds.  API methods support listing of banks that interact with the service, allowing an application to let the buyer choose. Methods then generate the payment request in the format accepted by the chosen bank and the confirmation notice to the seller's bank. \"Nudge\" methods provide updates to the buyer and seller upon completion of the transaction.", 
    "api_name": "POLipayments", 
    "progweb_cat": "Payments,eCommerce", 
    "descr5": "skip content user tools merchant enquiry log aus nz buy sell demo developer support trace polilinkapi site tools sidebar developer home web services initiate transactions nudge get transaction getdailytransactions poli link features creating via console poli link via web api create status reporting command reference shopping carts opencart shopify magento zen cart woocommerce prestashop oscommerce corecommerce xcart api functions initiatetransaction gettransaction getdailytransactions getdailytransactionscsv getfinancialinstitutions list error codes supermerchants guide app integration guide inline integration guide basic authentication faq list transaction statuses qa checklist glossary integration guide faq poli link via poli api poli link via poli api superseded 'paymentapi generateurl' paymentapi deprecated continue function merchants integrated system legacy documentation found example code getdailytransactions found poli api restful web api hosts various web services including poli link integration supplied valid merchant authentication data valid payment data \\( reference amount etc \\) poli api web service generates short payment url integration poli api supports xml json formatted objects performing post get actions following content options possible mix types \\( e post xml receive json \\) poli link api methods merchant authentication codes handy use login view poli api help page poli public api reference poli link api methods following url format https poliapi apac paywithpoli com api polilink command \\? parameters reference table poli link features provided poli api information poli link please see relevant pages creation status reporting poli link via poli api authentication integrated poli link via paymentapi past authorisation performed including merchant authentication codes part post data poli api still use codes provide using traditional authentication methods poli api currently supports basic authentication required encode merchant code authentication code username password supplied 'authorization' header request make poli api codes protected security ssl polilinkapi txt last modified 2017 05 16 16 04 \\( external edit \\) page tools show pagesourceold revisionsbacklinksback top", 
    "descr4": "skip content user tools merchant enquiry log aus nz buy sell demo developer support trace polilinkapi old site tools sidebar developer home web services initiate transactions nudge get transaction getdailytransactions poli link features creating via console poli link via web api create status reporting command reference shopping carts opencart shopify magento zen cart woocommerce prestashop oscommerce corecommerce xcart api functions initiatetransaction gettransaction getdailytransactions getdailytransactionscsv getfinancialinstitutions list error codes supermerchants guide app integration guide inline integration guide basic authentication faq list transaction statuses qa checklist glossary integration guide faq table contents documentation deprecated poli link api documentation deprecated poli link api documentation deprecated new integrations use documentation please click updated documentation poli link api paymentapi generateurl web service used generate poli link url initiating custom payment transaction supplied valid merchant authentication data payment data \\( reference amount etc \\) paymentapi web service generates short payment url payment url clicked user taken poli payment page pre populated relevant reference amount data specified merchant generating payment url api exposes service method generateurl generate payment url takes input type paymentdatarequest return output type paymentdataresponse polilinkapi old txt last modified 2017 05 16 16 04 \\( external edit \\) page tools show pagesourceold revisionsbacklinksback top", 
    "descr3": "skip content user tools merchant enquiry log aus nz buy sell demo developer support trace rest site tools sidebar developer home web services initiate transactions nudge get transaction getdailytransactions poli link features creating via console poli link via web api create status reporting command reference shopping carts opencart shopify magento zen cart woocommerce prestashop oscommerce corecommerce xcart api functions initiatetransaction gettransaction getdailytransactions getdailytransactionscsv getfinancialinstitutions list error codes supermerchants guide app integration guide inline integration guide basic authentication faq list transaction statuses qa checklist glossary integration guide faq endpoints follows initiatetransaction https merchantapi apac paywithpoli com merchantapiservice svc xml transaction initiate gettransaction https merchantapi apac paywithpoli com merchantapiservice svc xml transaction query getfinancialinstitutions https merchantapi apac paywithpoli com merchantapiservice svc xml banks getdailytransactions https merchantapi apac paywithpoli com merchantapiservice svc xml transaction daily getdailytransactionscsv https merchantapi apac paywithpoli com merchantapiservice svc xml transaction daily csv getdetailedtransaction https merchantapi apac paywithpoli com merchantapiservice svc xml transaction detail php loading documentation deprecated new integrations use documentation please click updated documentation \\? php url https merchantapi apac paywithpoli com merchantapiservice svc xml transaction initiate xml builder \\? xml version 1 0 encoding utf 8 \\? initiatetransactionrequest xmlns http schemas datacontract org 2004 07 centricom poli services merchantapi contracts xmlns http www w3 org 2001 xmlschema instance authenticationcode a1 b2 c3 authenticationcode transaction xmlns dco http schemas datacontract org 2004 07 centricom poli services merchantapi dco dco currencyamount 123 00 dco currencyamount dco currencycode aud dco currencycode dco merchantcheckouturl http localhost dco merchantcheckouturl dco merchantcode s65432 dco merchantcode dco merchantdata data field dco merchantdata dco merchantdatetime 2013 09 06t01 21 28 dco merchantdatetime dco merchanthomepageurl http localhost dco merchanthomepageurl dco merchantref reference field dco merchantref dco merchantreferenceformat dco merchantreferenceformat dco notificationurl http localhost dco notificationurl dco selectedficode nil true dco successfulurl http localhost dco successfulurl dco timeout 900 dco timeout dco unsuccessfulurl http localhost dco unsuccessfulurl dco useripaddress dco useripaddress transaction initiatetransactionrequest ch curl init \\( url \\) curl setopt \\( ch curlopt httpheader array \\( 'content type text xml' \\) \\) curl setopt \\( ch curlopt header 0 \\) curl setopt \\( ch curlopt ssl verifyhost 0 \\) curl setopt \\( ch curlopt ssl verifypeer 0 \\) curl setopt \\( ch curlopt post 1 \\) curl setopt \\( ch curlopt postfields xml builder \\) curl setopt \\( ch curlopt followlocation 0 \\) referrer curl setopt \\( ch curlopt referer referrer \\) curl setopt \\( ch curlopt returntransfer 1 \\) response curl exec \\( ch \\) curl close \\( ch \\) xml new simplexmlelement \\( response \\) xml registerxpathnamespace \\( '' 'http schemas datacontract org 2004 07 centricom poli services merchantapi contracts' \\) xml registerxpathnamespace \\( 'a' 'http schemas datacontract org 2004 07 centricom poli services merchantapi dco' \\) xml registerxpathnamespace \\( 'i' 'http www w3 org 2001 xmlschema instance' \\) foreach \\( xml xpath \\( navigateurl' \\) value \\) header \\( 'location value \\) echo value foreach \\( xml xpath \\( code' \\) value \\) echo 'error code value \\? rest txt last modified 2017 05 16 16 04 \\( external edit \\) page tools show pagesourceold revisionsbacklinksback top", 
    "descr2": "skip content user tools merchant enquiry log aus nz buy sell demo developer support trace linksoap site tools sidebar developer home web services initiate transactions nudge get transaction getdailytransactions poli link features creating via console poli link via web api create status reporting command reference shopping carts opencart shopify magento zen cart woocommerce prestashop oscommerce corecommerce xcart api functions initiatetransaction gettransaction getdailytransactions getdailytransactionscsv getfinancialinstitutions list error codes supermerchants guide app integration guide inline integration guide basic authentication faq list transaction statuses qa checklist glossary integration guide faq documentation deprecated new integrations use documentation please click updated documentation soap endpoint https paymentapi apac paywithpoli com paymentrouterservice svc paymentapi sample namespace generated service reference \\( svcutil \\) wish send email link set requesttype email recipientname recipientemail valid values paymentapi paymentdatarequest pdr new paymentapi paymentdatarequest \\( \\) pdr merchantcode pricebusterdvd au pdr authenticationcode mypassword pdr requesttype manual pdr paymentamount 123 pdr paymentreference payment reference pdr confirmationemail pdr customerreference pdr ismultiple pdr expirydate 12 12 2012 optional pdr merchantdata merchant additional data paymentapi paymentdataresponse res null string url string empty paymentapiserviceclient generated service reference using soapservice endpoint using \\( paymentapi paymentapiserviceclient svc new paymentapi paymentapiserviceclient \\( soapservice \\) \\) res svc generateurl \\( pdr \\) \\( res null \\) \\( res errors length 0 \\) string message string format \\( error generating payment url nerror code 0 nerror message 1 n nplease try res errors 0 code res errors 0 message \\) showalert \\( message \\) return else url res paymenturl else showalert \\( error could generate payment url n nplease try \\) return linksoap txt last modified 2017 05 16 16 04 \\( external edit \\) page tools show pagesourceold revisionsbacklinksback top", 
    "descr1": "skip content user tools merchant enquiry log aus nz buy sell demo developer support trace linkrest site tools sidebar developer home web services initiate transactions nudge get transaction getdailytransactions poli link features creating via console poli link via web api create status reporting command reference shopping carts opencart shopify magento zen cart woocommerce prestashop oscommerce corecommerce xcart api functions initiatetransaction gettransaction getdailytransactions getdailytransactionscsv getfinancialinstitutions list error codes supermerchants guide app integration guide inline integration guide basic authentication faq list transaction statuses qa checklist glossary integration guide faq documentation deprecated new integrations use documentation please click updated documentation rest endpoint https paymentapi apac paywithpoli com paymentrouterservice svc xml generate generate payment url merchant performs http \\( \\) post poli paymentapi rest url request content type set text xml following xml data request body \\? xml version 1 0 encoding utf 8 \\? paymentdatarequest xmlns xsd http www w3 org 2001 xmlschema xmlns xsi http www w3 org 2001 xmlschema instance merchantcode pricebusterdvd merchantcode authenticationcode merchantpassword authenticationcode requesttype manual requesttype paymentamount 123 11 paymentamount paymentreference landingpagereferencetext paymentreference confirmationemail confirmationemail customerreference customerreference ismultiple ismultiple expirydate expirydate recipientname recipientname recipientemail recipientemail merchantdata merchant additional data merchantdata paymentdatarequest providing request authenticated configured successfully merchant receive generated short payment url xml data returned http \\( \\) response body follows \\? xml version 1 0 encoding utf 8 \\? paymentdataresponse errors paymenturl poli gmey paymenturl merchantdata merchant additional data merchantdata paymentdataresponse linkrest txt last modified 2017 05 16 16 04 \\( external edit \\) page tools show pagesourceold revisionsbacklinksback top", 
    "crawled_date": "2017-06-10T13:59:37.990308"
  }, 
  "252": {
    "api_url": "apiary.io", 
    "progweb_url": "https://www.programmableweb.com/api/besepa", 
    "progweb_date": "08.31.2015", 
    "progweb_descr": "The Besepa API is a service for developers for the SEPA direct debit platform. With the API, the platform is structured around the following models: Customer, Group, Bank Account, Mandate, Debit, Product, and Subscription. Besepa is a Spanish company whose main goal is to simplify the management of direct debits for companies and organizations. SEPA (Single Euro Payments Area) Direct Debit is a European system of rules and standards for merchants to collect payments.", 
    "api_name": "Besepa", 
    "progweb_cat": "Payments,Spanish", 
    "crawled_date": "2017-06-10T13:59:26.452035"
  }, 
  "69": {
    "link5": "http://docs.sumup.com/", 
    "link4": "https://sumup.com/developers", 
    "link1": "http://supportuk.sumup.com/customer/portal/articles/1517389-required-documentation", 
    "api_url": "sumup.com", 
    "link3": "http://docs.sumup.com/oauth/", 
    "link2": "http://docs.sumup.com/rest-api/transactions-api/", 
    "progweb_url": "https://www.programmableweb.com/api/sumup", 
    "progweb_date": "12.07.2012", 
    "progweb_descr": "SumUp is a service that allows users to accept and process credit card payments via mobile devices with the SumUp application.   The SumUp API allows developers to access and integrate the functionality of SumUp with other applications. Example API methods include managing account information and accepting and processing payments.", 
    "api_name": "SumUp", 
    "progweb_cat": "Payments,Mobile", 
    "descr5": "icon nav homeicon nav oauthicon nav payments 2icon nav rest apiicon nav checkoutsicon logodiscoveryicon nav checkouts boxicon nav oauth boxicon nav payments 2 boxicon nav rest api box docs manage apps home terminal payment checkouts oauth rest api sumup sdk api integration connect app powerful payment platform card terminals world terminal payment integrate sumup proprietary card terminal \\( \\) app provide mobile payment sdks api checkouts integrate sumup checkouts mobile web applications oauth rest api sdks identify sumup applications users using oauth rest api rest apis provide programmatic access manage merchant accounts resources", 
    "descr4": "payleven sumup one company closelearn morebought device store \\? register readeraccess payleven account logging inany questions \\? take look faqs contact us 015360858 emv card readerpricingfaqget free reader loginsumup developersempowering partners global card acceptance global platformenter 15 markets one single integration omnichannelone payment solution every requirement store online mobile integration secure paymentsfully pci compliant solutions emv certified hardwarempos integrationwhatever point sale environment sumup simplifies payments retail hospitality transport delivery provide sdk api switch accept card payments anytime anywhere go sdk documentationgo api documentationquick integrationsintegrate sumup 's sdk api hours handle onboarding risk fraud settlement support emv hardwareproprietary hardware supporting contactless chip pin magnetic stripe merchant managementincreased merchant visibility via dashboard track monitor change fees ecom checkout apiextend integration include checkout api accept payments website app stand alone omnichannel combination mpos integration view checkout documentationomnichannelallow merchant base get paid whether cardholder present marketplace solutionkeep marketplace compliant digital kyc process complete portfoliofull suite card non present solutions incl ecom check app sdk phone moto mobile payments card file \\( tokenization \\) additional apisuser management apiseamlessly create manage sub accounts view documentationtransaction history apiimport transactions ecosystem real time view documentationauthorization apilog users using oauth transparently sumup 's platform behalf view documentationsignup apisumup 's onboarding api allows transparently create sumup accounts merchants view documentationquestions \\? 've got answers get test account \\? course get touch integration team please complete contact us form let us know based get affiliate key \\? log sumup dashboard developers generate key implementation please follow step step guide sumup docs countries currencies support \\? 15 sumup operating territories \\( eur gbp usd pln chf sek brl \\) integrate hours support merchants across 3 continents setup oauth \\? log sumup dashboard developers create consent screen credentials implementation please follow step step guide sumup docs someone help technical question \\? yes get touch integration team please complete contact us form thank 'll get back soon questions \\? send us message aboutcontactsupport centerjobspresspartnersdeveloperslegal noticeprivacy policyterms conditionscookie policy belgi brasil chile deutschland espa france ireland italia nederland sterreich portugal polska schweiz sverige united kingdom usaa credit card machine built ambitionaccept credit cards secure speedy waycredit card processing yesterday today tomorrowhow leverage credit card terminal improve point salethe credit card reader fits pocket suits pocketthe usa 's shift brave new world emv card reader technologyunderstanding credit card payment emv eralearn", 
    "descr3": "icon nav homeicon nav oauthicon nav payments 2icon nav rest apiicon nav checkoutsicon logodiscoveryicon nav checkouts boxicon nav oauth boxicon nav payments 2 boxicon nav rest api box docs manage apps home terminal payment checkouts oauth rest api back topauthorization modelsupported flowssupported content typesheadersendpointssumup supported scopesoauth setupconsent screenclient credentialssumup uses oauth provide standard way authorized access api authorization model authorization api based abstract protocol flow defined oauth 2 0 specification supported flows api enables applications use following concrete flows authorization code grant implicit grant resource owner password credentials grant client credentials grant supported content types addition standard protocol content type \\( application x www form urlencoded \\) api supports also application json headers client credentials passed header \\( according specification \\) request body endpoints authorization endpoint token endpoint sumup supported scopes possible scopes might requested granted sumup authorization server upon receiving user consent user profile readonly access user profile information user profile access edit user profile information user subaccounts access manage users employees user payout settings access edit user payout settings user app settings access manage mobile application settings payments make payments balance access manage user balance products access manage user products shelves prices vat rates transactions history access user transaction history default registered applications request user profile payments user app settings transactions history scope oauth setup make change oauth setup developers section sumup dashboard consent screen consent screen shown users whenever request access private data using client id shown registered applications order make application recognaziable need provide information product name \\( required \\) name service application helps users recognize home page url link home page logo url logo provided shown user terms service url c page privacy policy url privacy policy page client credentials set consent screen details create one client credentials information need enter includes client type choose web android ios client name application name recognize ex awesome application authorized redirect uri path application users redirected authenticated sumup must contain protocol custom url scheme authorized javascript origin use requests browser example complete checkout origin uri client application contain wildcard \\( http example com \\) path \\( http example com subdir \\) using nonstandard port must include origin uri create client credentials download details includes client id secret use authorization example note applicable client type web", 
    "descr2": "icon nav homeicon nav oauthicon nav payments 2icon nav rest apiicon nav checkoutsicon logodiscoveryicon nav checkouts boxicon nav oauth boxicon nav payments 2 boxicon nav rest api box docs manage apps home terminal payment checkouts oauth rest api back topmerchant transactionstransaction historytransaction detailsmerchant refundsrefund transactionreceiptsreceipt datahttps api sumup com merchant transactions transaction history transaction historygetreturns paginated list transaction related events currently authenticated sumup account transation related event either payment refund charge back optional filtering parameters provide fine grained control returned data result set optional next attribute used fetch subsequent pages required scope \\( \\) transactions history resource urlget https api sumup com v0 1 transactions historyparametershideshoworder \\( optional \\) ordering results timestamp possible values ascending \\( default \\) descending limit \\( optional \\) maximum number results per page users \\( optional \\) filter user email geo coordinates \\( optional \\) filter geo coordinates use csvs southwest lng southwest lat northeast lng northeast lat readers \\( optional \\) filter reader serial number statuses \\( optional \\) filter status possible values successful cancelled failed payment types \\( optional \\) filter payment type possible values cash pos ecom bitcoin balance types \\( optional \\) filter event type possible values payment refund charge back changes since \\( optional \\) return transactions updated given timestamp format iso8601 \\( xmlschema \\) newest time \\( optional \\) return transactions occurred given timestamp format iso8601 \\( xmlschema \\) newest ref \\( optional \\) return transactions occurred given event id oldest time \\( optional \\) return transactions occurred given timestamp format iso8601 \\( xmlschema \\) oldest ref \\( optional \\) return transactions occurred given event id response hideshowbodyschematransaction details transaction detailsgetfinds single transaction based given parameters returns detailed information transaction required scope \\( \\) transactions history resource urlget https api sumup com v0 1 transactionsparametershideshowid \\( optional \\) unique sumup transaction id internal id \\( optional \\) unique sumup internal transaction id transaction code \\( optional \\) short representation sumup transaction id foreign transaction id \\( optional \\) external \\( foreign \\) transaction id present id provided transaction creation client transaction id \\( optional \\) client transaction id similar foreign transaction id always present event statuses \\( optional \\) filter transaction events based given statuses event types \\( optional \\) filter transaction events based given types response hideshowbodyschemamerchant refunds refund transaction refund transactionpostrefund transaction given id \\( sumup unique transaction id transaction code e g ts7hdylskd \\) resource urlpost https api sumup com v0 1 refund idparametershideshowid \\( optional \\) request hideshowheadersbodyschemaresponse hideshowbodyresponse hideshowbodyresponse hideshowbodyreceipts receipt data receipt datagetget receipt specific data transaction receipts ng interface resource urlget https api sumup com v1 0 receipts idparametershideshowid \\( required \\) sumup unique transaction id transaction code e g ts7hdylskd mid \\( required \\) merchant code response hideshowbodyschema", 
    "descr1": "message way 'll get back soon possible sumup learn support centre login support center home registration required documentation required documentation security purposes setting sumup account require certain documentation merchants documents reviewed uploaded system used means verifying account holder documentation vary slightly depending nature business information documents please refer welcome email contact support team support sumup co uk last updated apr 24 2014 12 33pm utc yes found article helpful find article helpful previous page next page customer support team happy help uk support sumup co uk ireland support sumup ie customer service software powered desk com faqs pre signup faq smartphone compatible air card reader \\? set air card reader \\? receive payouts bank account \\? features sumup dashboard provide \\? ffe2f65aa6e4b36256c17d02eb917f97 sumupuk desk mail com http assets1 desk com false desk loading seconds ago minute ago minutes ago hour ago hours ago day ago days ago false invalid characters found customer en portal articles autocomplete", 
    "crawled_date": "2017-06-10T13:59:37.988012"
  }, 
  "250": {
    "api_url": "regalii.com", 
    "progweb_url": "https://www.programmableweb.com/api/regalii", 
    "progweb_date": "08.26.2015", 
    "progweb_descr": "The Regalii REST API allows developers to access and integrate the functionality of Regalii with other applications. Some example API methods include retrieving information about payments, managing payments, and managing accounts. Regalii is an online payment platform for paying international bills online.", 
    "api_name": "Regalii", 
    "progweb_cat": "Payments,International", 
    "crawled_date": "2017-06-10T13:59:26.454072"
  }, 
  "251": {
    "api_url": "plenigo.com", 
    "progweb_url": "https://www.programmableweb.com/api/plenigo", 
    "progweb_date": "08.28.2015", 
    "progweb_descr": "The Plenigo API provides an eCommerce platform for digital media distributors. This RESTful API uses OAuth 2 authentication, and responses are in JSON format. Plenigo integrates analytics, product administration and billing in one solution. Services include paywall functions like day passes, vouchers, metered views, pay-per-view or subscriptions. Payment options include PayPal, credit cards, bank transfers and more.", 
    "api_name": "Plenigo", 
    "progweb_cat": "eCommerce,Analytics", 
    "crawled_date": "2017-06-10T13:59:26.453006"
  }, 
  "256": {
    "api_url": "xfers.io", 
    "progweb_url": "https://www.programmableweb.com/api/xfers-payout", 
    "progweb_date": "09.18.2015", 
    "progweb_descr": "The Xfers Payout REST API allows developers to access and integrate the functionality of Xfers with other applications. Some example API methods include requesting payouts, retrieving payout status, and receiving payout messages. Xfers is an online payment system.", 
    "api_name": "Xfers Payout", 
    "progweb_cat": "Payments,Banking", 
    "crawled_date": "2017-06-10T13:59:26.448210"
  }, 
  "257": {
    "api_url": "dusupay.com", 
    "progweb_url": "https://www.programmableweb.com/api/dusupay-merchant", 
    "progweb_date": "09.23.2015", 
    "progweb_descr": "The DusuPay Merchant API allows developers to integrate the DusuPay payment channel into their websites, which enables them to handle online payments for goods, services, and utilities in Africa. DusuPay allows customers to make purchases online without the need for a credit or debit card by using their DusuPay account or a Dusu voucher purchased at a physical store, such as a supermarket or gas station.", 
    "api_name": "DusuPay Merchant", 
    "progweb_cat": "Financial,Accessibility", 
    "crawled_date": "2017-06-10T13:59:26.447300"
  }, 
  "254": {
    "api_url": "xfers.io", 
    "progweb_url": "https://www.programmableweb.com/api/xfers-transaction", 
    "progweb_date": "09.18.2015", 
    "progweb_descr": "The Xfers Transaction REST API allows developers to access and integrate the functionality of Xfers with other applications. Some example API methods include receiving transaction lists, retrieving status of transactions, and managing transactions. Xfers is an online payment system.", 
    "api_name": "Xfers Transaction", 
    "progweb_cat": "Payments,Banking", 
    "crawled_date": "2017-06-10T13:59:26.450073"
  }, 
  "255": {
    "api_url": "xfers.io", 
    "progweb_url": "https://www.programmableweb.com/api/xfers-reseller", 
    "progweb_date": "09.18.2015", 
    "progweb_descr": "The Xfers Reseller REST API allows developers to access and integrate the functionality of Xfers with other applications. Some example API methods include setting up accounts, managing accounts, and retrieving account status. Xfers is an online payment system.", 
    "api_name": "Xfers Reseller", 
    "progweb_cat": "Payments,Banking", 
    "crawled_date": "2017-06-10T13:59:26.449169"
  }, 
  "168": {
    "api_url": "evosnap.com", 
    "progweb_url": "https://www.programmableweb.com/api/evo-snap", 
    "progweb_date": "09.29.2013", 
    "progweb_descr": "EVO Snap* is an intelligent commerce gateway for omni-channel global processing. Snap* empowers developers to create customized, omni-channel commerce applications & services to support their customers across traditional POS, mobile and eCommerce touch points.  Snap* provides single integration access to credit and debit card processing for card-present (CP) and card-not-present (CNP) transactions across all points of acceptance including Retail, Restaurant, eCommerce and MOTO via the EVO front-end and Global back-end Platforms. Snap* also provides inline value-added services including ACH, Tokenization, Data Services, Fraud Prevention, and Data Protection.", 
    "api_name": "EVO Snap*", 
    "progweb_cat": "Payments,Mobile", 
    "crawled_date": "2017-06-10T13:59:33.685008"
  }, 
  "169": {
    "api_url": "pencepay.com", 
    "progweb_url": "https://www.programmableweb.com/api/pencepay", 
    "progweb_date": "10.02.2013", 
    "progweb_descr": "PencePay is an online payment and mobile billing platform for merchants.  The PencePay API allows customer applications to integrate mobile billing functionalities. The API supports Premium SMS and Direct Carrier Billing Methods.", 
    "api_name": "PencePay", 
    "progweb_cat": "Payments,Mobile", 
    "crawled_date": "2017-06-10T13:59:33.683900"
  }, 
  "164": {
    "api_url": "verifone.com", 
    "progweb_url": "https://www.programmableweb.com/api/verifone-open", 
    "progweb_date": "09.10.2013", 
    "progweb_descr": "Verifone is a global technology provider for electronic payment and point-of-sale services. The company provides services to the financial, retail, hospitality, government, petroleum and other industries. Verifone has an open API upon which developers can build mobile applications that utilize the payment or Point-of-sale services. An account is required with service.", 
    "api_name": "VeriFone Open", 
    "progweb_cat": "Payments,Merchants", 
    "crawled_date": "2017-06-10T13:59:33.689233"
  }, 
  "165": {
    "api_url": "beansbooks.com", 
    "progweb_url": "https://www.programmableweb.com/api/beansbooks", 
    "progweb_date": "09.12.2013", 
    "progweb_descr": "BeansBooks is a cloud-based accounting service for small and medium sized businesses. The service tracks financial data and progress to make report creation and generations easier. The service also facilitates year end reporting and tax preparation. The BeansBooks API allows users to source entries and vendor information from other related applications. The API can also automate accounting tasks like account creations. The API includes calls for getting account, customer, tax, setup, and vendor information. The services uses REST calls and returns JSON.  An API key is required for access.", 
    "api_name": "BeansBooks", 
    "progweb_cat": "Financial,Accounting", 
    "crawled_date": "2017-06-10T13:59:33.688160"
  }, 
  "166": {
    "api_url": "jumpseller.com", 
    "progweb_url": "https://www.programmableweb.com/api/jumpseller", 
    "progweb_date": "09.14.2013", 
    "progweb_descr": "Jumpseller is a hosted service for creating and managing professional online stores without any technical knowledge. Jumpseller provides a gallery of themes that are compatible with many different kinds of devices. Users also have the option of creating a custom theme or simply embedding Jumpseller within their current website. Jumpseller supports a wide range of payment methods including PayPal, credit cards, bank transfers, and more. Users can alter their websites' and payment gateways' language, currency, shipping cost, and taxes by country or region.", 
    "api_name": "Jumpseller", 
    "progweb_cat": "eCommerce,Payments", 
    "crawled_date": "2017-06-10T13:59:33.687149"
  }, 
  "167": {
    "api_url": "fuzenetwork.com", 
    "progweb_url": "https://www.programmableweb.com/api/fuze-network", 
    "progweb_date": "09.25.2013", 
    "progweb_descr": "Fuze Network is a credit card payment and recharge service. Fuze Network allows users to send money directly to a credit card as a payment, debit card as a deposit or prepaid card as a load. It can be used for online funds disbursement, gifting, shared, me2me and p2p payments or walk-in cash transactions.   The Fuze Network API allows developers to access and integrate the functionality of Fuze Network with other applications. Public documentation is not available; interested developers should email info@fuzenetwork.com for API information.", 
    "api_name": "Fuze Network", 
    "progweb_cat": "Financial,Banking", 
    "crawled_date": "2017-06-10T13:59:33.686075"
  }, 
  "160": {
    "api_url": "groosker.com", 
    "progweb_url": "https://www.programmableweb.com/api/groosker", 
    "progweb_date": "08.26.2013", 
    "progweb_descr": "Groosker is an online shopping solution that eliminates the hassle of entering credit card information by using QR codes to handle payments. Shoppers need only scan the Groosker QR code with their mobile phone, verify the details and accept. Groosker helps merchants lower transactions costs and offer loyalty rewards to customers.   Groosker offers a REST API to merchants and web developers. Example methods include request payment, await payment, accept payment, and decline payment. An API key is required.", 
    "api_name": "Groosker", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:33.693185"
  }, 
  "161": {
    "api_url": "chargeover.com", 
    "progweb_url": "https://www.programmableweb.com/api/chargeover", 
    "progweb_date": "08.28.2013", 
    "progweb_descr": "ChargeOver features a RESTful API allowing developers to easily integrate recurring billing and payments into their application or website. Create subscriptions, send invoices, collect payments, and more using the developer-friendly APIs. ChargeOver also offers rich Javascript APIs for PCI-compliant credit card sign-up forms, and JSON-based web hooks to allow ChargeOver to notify your application of events and data changes.", 
    "api_name": "ChargeOver", 
    "progweb_cat": "Payments,Billing", 
    "crawled_date": "2017-06-10T13:59:33.692140"
  }, 
  "162": {
    "api_url": "egopay.com", 
    "progweb_url": "https://www.programmableweb.com/api/egopay", 
    "progweb_date": "08.29.2013", 
    "progweb_descr": "EgoPay is an e-currency that can be used to pay for goods and services online without having to provide sensitive credit card or bank details. Users can sign up for EgoPay for free without providing any personal information. The EgoPay API allows users to automatically send payments, get information on incoming and outgoing payments, obtain a history of transactions performed, or retrieve information about EgoPay accounts.", 
    "api_name": "EgoPay", 
    "progweb_cat": "Payments,Currency", 
    "crawled_date": "2017-06-10T13:59:33.691086"
  }, 
  "163": {
    "api_url": "paysera.com", 
    "progweb_url": "https://www.programmableweb.com/api/paysera-wallet", 
    "progweb_date": "09.07.2013", 
    "progweb_descr": "Paysera is an online payment service that allows users to send money, make an online payment, receive money or set up a merchant account. Developers can use Paysera's Wallet API To get information about the Paysera system's users and their accounts and to make payments between Paysera accounts including sending, receiving and coordinating payments. The API is based on REST principles and request content is provided in JSON.", 
    "api_name": "Paysera Wallet", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:33.690169"
  }, 
  "9": {
    "link5": "https://developer.paypal.com/docs/classic/archive/", 
    "link4": "https://developer.paypal.com/docs/accept-payments/", 
    "link1": "https://developer.paypal.com/docs/api/", 
    "api_url": "paypal.com", 
    "link3": "https://developer.paypal.com/docs/", 
    "link2": "https://developer.paypal.com/docs/classic/api/", 
    "progweb_url": "https://www.programmableweb.com/api/paypal", 
    "progweb_date": "09.04.2005", 
    "progweb_descr": "PayPal offers online payment solutions and has more than 153 million customers worldwide. The PayPal API makes powerful functionality available to developers by exposing various features of the PayPal platform. Functionality includes but is not limited to invoice management, transaction processing and account management.", 
    "api_name": "PayPal", 
    "progweb_cat": "Payments,eCommerce", 
    "descr5": "docs api reference support log dashboard back docs documentation archive documentation page created previous versions paypal products content files might reflect current product functionality table contents account authentication adaptive accounts adaptive payments paypal buttons images express checkout invoicing order management instant payment notification \\( ipn \\) order management \\( ipn pdt \\) mass payments payflow paypal payments standard permissions latest documentation see nvp soap api documentation account authentication account authentication service getting started guide adaptive accounts adaptive accounts developer guide adaptive payments adaptive payments developer guide note see adaptive payments developer documentation latest documentation documentation provided html format paypal buttons images paypal buttons images express checkout merchant api reference archive getbillingagreementcustomerdetails \\( nvp soap \\) api operation deprecated starting version 54 0 later api setcustomerbillingagreement \\( nvp soap \\) api operation deprecated starting version 54 0 later api invoicing adaptive invoicing developer guide invoicing user 's guide invoicing service api guide note see invoicing developer documentation latest documentation documentation provided html format order management instant payment notification \\( ipn \\) instant payment notification guide order management order management integration guide mass payments mass payments user guide payflow note see payflow gateway development integration guides latest documentation payflow gateway developer guide pdf latest payflow gateway integration information see html version guide payflow link payflow link user 's guide payflow link fraud protection services user 's guide payflow link recurring billing service user 's guide payflow pro payflow pro developer 's guide payflow pro reporting developer 's guide website payments pro payflow edition website payments pro payflow edition developer 's guide website payments pro payflow edition fraud protection services user 's guide website payments pro payflow edition recurring billing service user 's guide paypal payments pro payflow edition recurring payments developer 's guide website payments pro payflow edition reporting developer 's guide website payments pro payflow edition xmlpay developer 's guide paypal payments standard paypal payments standard integration guide subscriptions recurring payments guide permissions permissions service guide note see permissions developer documentation latest documentation documentation provided html format docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr4": "docs api reference support log dashboard back docs accept payments paypal offers variety products solutions accepting payments choose solution best requirements whether goal get running quickly possible develop fully customized payment experience braintree direct braintree direct suitable type integration whether want quick easy payment solution completely customized payment experience drop ui available braintree direct enables start accepting payments little effort want build checkout experience braintree direct simplifies payment method details token never need worry method users choose pay learn get started braintree direct payment buttons paypal makes easy accept payments website whether mobile device tablet pc copy paste short html snippet website add payment button single item shopping cart see add payment buttons website information payments rest api payments rest api provides easy secure way accept online mobile payments take advantage great benefits paypal enabling customers make payments clicks payments made paypal credit cards depending country accept immediate payment authorize payment capture later payments overview explains get started payments rest api find detailed information paypal paypal sdks enable ios android apps interact credit card swipers merchants process person credit card transactions using mobile app native libraries paypal sdks enable interact paypal hardware also process card present transactions get started see integrating paypal sdks express checkout express checkout fast easy way buyers pay paypal express checkout makes easier buyers pay online enables accept paypal retaining control buyer overall checkout flow typical checkout flow buyer must provide shipping information billing payment information checking shopping cart page express checkout buyer check pay without entering shipping billing information paypal provides stored information simplifies expedites checkout process increase sales 18 percent learn see express checkout integration guide shopping carts paypal partners provide third party shopping carts allow seamlessly accept paypal payments whether need complete online store want add shopping cart existing website several options available paypal partners meet needs learn see using shopping carts already integrated third party shopping cart solution looking support search browse articles within shopping cart section paypal technical support faq paypal payments pro payflow gateway paypal payments pro customizable solution enables merchants keep buyers website entire checkout payment process merchants host customized checkout pages send transactions paypal paypal host checkout pages also manage security sales authorizations paypal payments pro accept paypal paypal credit payments well credit debit card payments paypal payments pro also includes optimized mobile checkout experience details see paypal payments pro payflow gateway secure open gateway utilized internally paypal payments pro services provides features including api allows merchants create host customized checkout pages paypal hosted checkout page using payflow gateway shared api merchants connect online store major payment processor bank card association choose connect directly paypal get started see payflow gateway website payments pro website payments pro legacy paypal product based soap nvp technology enables merchants accept credit debit cards paypal payments directly website using two paypal api based solutions direct payment express checkout payments immediate authorized later capture also recurring payments website payments pro also includes additional paypal solutions tools virtual terminal fraud management filters reference transactions mobile sdk paypal mobile sdks enable native apps easily accept paypal credit card payments native libraries paypal mobile sdks enable build fast responsive apps single payments \\( paypal credit card \\) future payments \\( paypal \\) learn get started paypal mobile sdks docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr3": "docs api reference support log dashboard paypal developer documentation view featured docs use documentation site learn implement paypal payment services choose solution bests suits needs featured documentation select docs find specific document express checkout simple way add paypal web app checkout web mobile web integration mobile app integration paypal payments standard ready made way accept cards paypal website payment buttons custom flexible way accept cards paypal app website braintree direct paypal payments pro store accept contactless payments chip mag stripe cards person paypal paydiant marketplace process split chained payments providers braintree marketplace invoicing create send manage professional customized invoices rest invoicing payouts send money hundreds recipients simultaneously payouts mass pay find looking \\? view product docs sdk libraries mobile sdks ios braintree android braintree ios paypal android paypal overview rest server sdks java php node python ruby net overview nvp soap api sdks java php ruby net overview third party products services shopping carts accept payments third party shopping cart software bigcommerce magento shopify stores specialty platforms alternative ways sell online specialty platforms marketplaces e junkie swappa jvzoo platforms financial management ready made solutions billing invoicing accounting xero aria quickbooks management ready start development \\? sign log using paypal account get credentials set test accounts sign log docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr2": "docs api reference support log dashboard view referencenvp soap apisapi referenceexpress checkoutendpointsoperations \\( alphabetical \\) operations \\( feature \\) payflow gatewayendpointsparametersadvanced parametersadditional featureswebsite payments proendpointsoperations \\( alphabetical \\) operations \\( feature \\) additional featureshosted solution \\( outside us \\) mass paymentsendpointsoperationadaptive accountsendpointsoperations \\( alphabetical \\) invoicingendpointsoperations \\( alphabetical \\) permissions serviceendpointsoperations \\( alphabetical \\) button managerendpointsoperations \\( alphabetical \\) nvp soap apps 101get startednvp basicssoap basicscredentialsendpointscurrency codescountry codesstate province codeslocale codesresponse codesapi error codes10000 100991000110002100031000410005100061000710008100091001010011100141006910100 1019910101101021010310200 102991020110202102031020410205102061020710209102101021110212102131021410215102161021710218102191022010300 10399103011030310304103051030610307103081030910310103111031210313103141031710320103211032710400 10499104001040110402104041040510406104071040810409104101041110412104131041410415104161041710418104191042010421104241042510426104271042810429104301043110432104331043410435104361043710438104391044010441104421044310444104451044610448104491045210457104581045910460104611046210463104641046510467104681046910470104711047210473104741047510476104771047810479104801048110482104851048610500 1059910500105011050210504105051050710508105091051010511105121051310519105201052110523105251052610527105341053510536105371053810539105401054110542105441054510546105471054810549105501055210553105541055510556105571055810560105611056210563105641056510566105671057010571105741057510576105771057810600 1069910600106011060210603106041060510606106071060810609106101061110612106131061410615106161061710618106191062010621106221062310624106251062610627106281062910630106311063210633106341063510700 1079910701107021070310704107051070610707107081070910710107111071210713107141071510716107171071810719107201072110722107231072410725107261072710728107291073010731107321073310734107351073610744107451074610747107481075010751107521075410755107561075810759107601076110762107631076410800 108991080011000 110991100111002110681108411089110911109411300 113991130211400 1149911401114031140411406114071145011451114521145311454114551145611457114581145911500 1159911501115021150311504115051150611507115081150911510115111151211514115151151611517115181151911520115211152211523115241153111543115441154611547115481155011551115521155311554115551155611557115581156011561115621156411567115681156911570115711157611577115781157911581115821158311584115851158611587115901159211600 11699116011160211603116041160711610116111161211614116151161611800 1189911800118011180211803118041180511806118071181011811118121181311814118151182011821118221182311824118251182611827118281182911830118311183211900 11999119001199612000 12099120001200112100 121991210912124121251212612200 1229912200122011220212203122041220512206122071220812300 123991230213100 1319913100131011310213103131041310513106131071310813109131101311113112131131311413115131161312213200 132991320013500 13599135131353113600 136991360113602136061360713700 13799137011375114001 14099140011400215001 1509915001150021500315004150051500615007150081500915010150111501217000 1709917004170051700617200 1729917200172031720418000 180991801419000 190991906581000 81099810008100181002810038100481100 8119981100811018110281103811048110581106811078110881109811108111181112811138111481115811168111781118811198112081121811228112381124811258112681127811288112981130811318113281133811348113581136811378113881139811408114181142811438114481145811468114781148811498115081200 812998120081201812038120581206812078120881209812108121181212812138121481215812198122081221812228122381224812258122681227812298123081232812348123581236812378123881239812438124481245812478124881249812508125199900 9999999998dodirectpayment processor response codesmasspay failed transactions ipn reason codessdksrelease notesadaptive accountsversion 1 2 0version 1 0 4version 1 0 3earlier versionsexpress checkout direct payment mass pay button managerversion 204version 203version 202version 201version 200version 124version 123version 122version 121version 120version 119version 117version 116version 115version 114version 113version 112version 111version 109version 108version 106version 104version 98version 94version 93version 92earlier nvp api versionsearlier soap api versionsinvoicing legacy apiversion 1 12 0version 1 11 0version 1 10 0version 1 8 0version 1 7 0version 1 6 0payflow apipermissions serviceversion 84 0version 74 0website payments pro hosted solution nvp soap api reference learn paypal name value pair \\( nvp \\) soap api endpoints operations express checkout express checkout commonly used paypal payments api payments made paypal hosted checkout page endpoint send api calls depends whether making nvp soap call use api make sure correct api credentials express checkout endpoints express checkout operations nvp soap nvp soap nvp nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap express checkout operations feature payflow gateway payflow gateway secure open payment gateway supports preferred integration method products paypal payments propaypal payments advanced paypal acquirer merchant bank payflow propayflow link choose processing platform merchant bank choose paypal host payment pages total control payment process website matter product select payflow gateway enables accept debit credit card payments paypal express checkout paypal credit \\( formerly bill later \\) payments within one api payflow gateway endpoints endpoint send api calls depends whether making live test call gateway transactions require user data parameters set account paypal manager payflow gateway parameters paypal host payment pages see configuring hosted checkout pages direct api calls click following api reference links payflow basic transaction parameters payflow credit card transaction parameters note transparent redirect information see pci compliance without hosted pages payflow gateway advanced parameters processors requiring additional parameters purchasing card level 2 3 transaction parameters telecheck parameters payflow gateway additional features payflow also offers following features fraud protection service recurring billing website payments pro note website payments pro deprecated replaced paypal payments pro website payments pro still supported existing merchants website payments pro endpoints endpoint send api calls depends whether making nvp soap call use api make sure correct api credentials website payments pro operations nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap website payments pro operations feature website payments pro additional features website payments pro also offers fraud management filters recurring payments website payments pro hosted solution \\( outside us \\) product merchants developers want integrate paypal 's hosted solution add transaction processing websites solution available australia france hong kong italy japan spain uk see integration guide country mass payments merchants use mass payments send money instantly 250 recipients send payments multiple recipients merchants need recipient 's paypal account email address payment amount currency code merchants manually upload file listing payments create programmatically using api send mass payments manually see using mass payments paypal account mass payments endpoints endpoint send api calls depends whether making nvp soap call use api make sure correct api credentials mass payments operation nvp soap adaptive accounts adaptive accounts api allows create manage paypal accounts paypal users make api call see adaptive accounts api call headers endpoints adaptive accounts endpoints make adaptive accounts api calls include api credentials sandbox testing specify adaptive accounts operations addbankaccount addpaymentcard checkcompliancestatus createaccount getuseragreement setfundingsourceconfirmed updatecompliancestatus invoicing use invoicing service api create send manage invoices using paypal invoicing endpoints make api calls invoicing service include api credentials sandbox testing specify invoicing operations cancelinvoice createandsendinvoice createinvoice deleteinvoice generateinvoicenumber getinvoicedetails markinvoiceaspaid markinvoiceasrefunded markinvoiceasunpaid remindinvoice searchinvoices sendinvoice updateinvoice permissions service permissions service enables obtain permission execute paypal api operations behalf paypal account holders permissions service endpoints make api calls permissions service include api credentials sandbox testing specify permissions service operations cancelpermissions getaccesstoken getadvancedpersonaldata getbasicpersonaldata getpermissions requestpermissions button manager advanced paypal button manipulation use api modify paypal buttons directly using html code see paypal button html variables reference paypal button image reference button manager endpoints send api calls one following endpoints depending whether making nvp soap call make sure correct api credentials use api button manager operations nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap additional information api credentials paypal name value pair api basics paypal soap api basics paypal developer documentation paypal credit \\( formerly bill later \\) api error codes user parameter data paypal manager docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr1": "docs api reference support log dashboard view reference rest apis api reference billing agreements api billing plans api identity api invoicing api payment experience api payments api payouts api vault api webhooks api overview authentication headers first rest call errors release notes sdks sdk quickstart service integrations rest api reference billing agreements api use billing plans billing agreements create agreement recurring credit card bank card paypal payment goods services create agreement reference active billing plan agreement inherits information also supply customer payment information optionally override referenced plan 's merchant preferences shipping fee tax information information see billing plans agreements billing agreements \\( resource group \\) use resource create agreement update agreement show agreement details cancel agreements also set bill balance agreement activate agreement suspend agreement list agreement transactions execute agreements create agreement post v1 payments billing agreements creates billing agreement json request body include object name description start date id plan base agreement customer shipping address information successful request returns http status code json response body shows billing agreement details update agreement patch v1 payments billing agreements updates details billing agreement id details include description shipping address start date successful request returns http status code json response body show agreement details get v1 payments billing agreements shows details billing agreement id successful request returns http status code json response body shows billing agreement details bill agreement balance post v1 payments billing agreements bill balance bills balance agreement id json request body include optional note describes reason billing action agreement amount currency successful request returns http status code json response body cancel agreement post v1 payments billing agreements cancel cancels billing agreement id json request body include object optional note describes reason cancellation agreement amount currency successful request returns http status code json response body activate agreement post v1 payments billing agreements activate activates suspended billing agreement id json request body include object note describes reason activation agreement amount currency successful request returns http status code json response body set agreement balance post v1 payments billing agreements set balance sets balance agreement id json request body specify balance currency type value successful request returns http status code json response body suspend agreement post v1 payments billing agreements suspend suspends billing agreement id successful request returns http status code json response body list agreement transactions get v1 payments billing agreements transactions lists transactions agreement id filter transactions appear response specify optional start end date query parameters successful request returns http status code json response body lists transactions details execute agreement post v1 payments billing agreements agreement execute executes billing agreement id customer approval successful request returns http status code json response body shows billing agreement details billing plans api use billing plans billing agreements create agreement recurring credit card bank card paypal payment goods services billing plan includes payment definitions details plan must include least one regular payment definition optionally trial payment definition definition determines often long customer charged plan specify type indicates whether payment definitions plan fixed infinite number payment cycles plan also defines merchant preferences including much costs set agreement urls customer approve cancel agreement action customer 's initial payment fails default plan active create activate update information see billing plans agreements billing plans \\( resource group \\) use resource create update show details list plans create plan post v1 payments billing plans creates billing plan json request body include plan details plan must include least one regular payment definition optionally trial payment definition payment definition specifies billing period determines often long customer charged plan specify fixed infinite number payment cycles payment definition optionally specify shipping fee tax amounts successful request returns http status code json response body shows plan details default state new plan create agreement plan must activate plan updating update plan patch v1 payments billing plans updates fields billing plan id json request body include patch object specifies operation perform one fields update new value updated field successful request returns http status code json response body show plan details get v1 payments billing plans shows details billing plan id successful request returns http status code json response body shows plan details list plans get v1 payments billing plans lists billing plans filter plans appear response specify one optional query pagination parameters successful request returns http status code json response body lists plans details identity api log paypal \\( formerly paypal access \\) commerce identity solution enables customers sign web site quickly securely using paypal login credentials log paypal utilizes latest security standards n't worry storing user data system information learn log paypal get user information get v1 identity openidconnect userinfo retrieve user profile attributes invoicing api use invoicing api create draft invoices send invoices manage invoices use invoices track payments send invoice invoice moves draft payable state paypal emails link invoice paypal website customer customers paypal account log pay paypal alternatively customers pay check debit card credit card information see invoicing overview invoices \\( resource group \\) use resource create update send invoices invoice reminders also generate invoice qr codes invoice numbers search list show invoice details delete draft invoices cancel sent invoices mark invoices fully partially paid refunded delete external payment refund invoice create invoice post v1 invoicing invoices creates draft invoice optionally create invoice template create invoice template invoice populated predefined data source template contains move invoice draft payable state must send invoice json request body include invoice details including merchant information object must include array note merchant specified invoice must paypal account good standing successful request returns http status code json response body shows invoice details send invoice post v1 invoicing invoices send sends invoice id customer note send invoice cannot resend optionally set query parameter also send merchant invoice update notification successful request returns http status code json response body update invoice put v1 invoicing invoices fully updates invoice id json request body include complete object call support partial updates successful request returns http status code json response body shows invoice details send invoice reminder post v1 invoicing invoices remind sends reminder payer invoice id json request body include object defines subject reminder details successful request returns http status code json response body delete draft invoice delete v1 invoicing invoices deletes draft invoice id deletes invoices draft state invoices already sent cancel invoice delete draft invoice longer use show details however reuse invoice number successful request returns http status code json response body cancel sent invoice post v1 invoicing invoices cancel cancels sent invoice id optionally sends notification cancellation payer merchant cc emails successful request returns http status code json response body mark invoice paid post v1 invoicing invoices record payment marks status invoice id paid include payment detail object defines payment method details json request body successful request returns http status code json response body mark invoice refunded post v1 invoicing invoices record refund marks status invoice id refunded json request body include payment detail object defines payment method details successful request returns http status code json response body list merchant invoices get v1 invoicing invoices lists merchant invoices filter invoices appear response specify one optional query parameters successful request returns http status code json response body lists invoices details search invoices post v1 invoicing search lists invoices match search criteria json request body include object specifies search criteria successful request returns http status code json response body lists invoices match search criteria show invoice details get v1 invoicing invoices shows details invoice id successful request returns http status code json response body shows invoice details generate qr code get v1 invoicing invoices qr code generates qr code invoice id qr code png image base64 encoded format corresponds invoice id generate qr code invoice add paper pdf invoice customer uses mobile device scan qr code redirected paypal mobile payment flow pay online paypal credit card get qr code must create invoice specify recipient email address object use customer email address want email invoice send invoice move invoice draft payable state specify recipient email address invoice emailed successful request returns http status code json response body shows qr code png image generate invoice number post v1 invoicing invoices next invoice number generates next invoice number available merchant successful request returns http status code json response body shows next invoice number templates \\( resource group \\) create template invoice enables create invoices predefined data use resource create list show details update delete templates note also use template settings dashboard create template invoice create template post v1 invoicing templates creates invoice template create invoice template invoice populated predefined data source template contains note use template settings dashboard instead api create invoice template update template put v1 invoicing templates updates template id json request body specify complete object update method support partial updates successful request returns http status code json response body shows template details list templates get v1 invoicing templates lists merchant created templates list shows emails addresses phone numbers merchant profile successful request returns http status code json response body lists invoices show template details get v1 invoicing templates shows details template id successful request returns http status code json response body shows template details delete template delete v1 invoicing templates deletes template id successful request returns http status code json response body payment experience api use payment experience api create seamless payment experience profiles information create paypal payment web experience profile see payment experience web profiles web profiles \\( resource group \\) use resource create show details list update partially update delete web experience profiles create web experience profile post v1 payment experience web profiles creates web experience profile json request body specify profile name details show web experience profile details get v1 payment experience web profiles shows details web experience profile id list web experience profiles get v1 payment experience web profiles lists web experience profiles merchant subject update web experience profile put v1 payment experience web profiles updates web experience profile id json request body specify profile details request omits profile parameters previously set values parameters removed partially update web experience profile patch v1 payment experience web profiles partially updates web experience profile id json request body specify patch object path profile location update needed new value complete operation delete web experience profile delete v1 payment experience web profiles deletes web experience profile id payments api use payments rest api easily securely accept online mobile payments payments namespace contains resource collections payments sales refunds authorizations captures orders enable customers make paypal credit card payments clicks depending country accept immediate payment authorize payment capture later show details completed payments refunds authorizations make full partial refunds also void authorize authorizations information see payments overview payments \\( resource group \\) use resource create sale authorized payment order sale direct credit card payment stored credit card payment paypal payment authorized payment places funds hold captured later order purchase customer approved funds placed hold also use resource execute approved paypal payments show details update list payments information see also payments create payment post v1 payments payment creates sale authorized payment captured later order create sale authorization order include payment details json request body set include payer transaction details paypal payments redirect urls combination determines type payment created information see payments rest api notes countries restrict direct credit card payment related features authorizations guaranteed three days though attempt capture authorization 29 days three day honor period authorization expires reauthorize payment execute approved paypal payment post v1 payments payment execute executes paypal payment customer approved optionally update one transactions execute payment successful request returns http status code json response body shows details executed payment important call works customer approved payment information learn paypal payments show payment details get v1 payments payment shows details payment id yet complete example shows details payment created approved failed successful request returns http status code json response body shows payment details update payment patch v1 payments payment partially updates payment id update amount shipping address invoice id custom data cannot update payment payment executes successful request returns http status code json response body shows payment details list payments get v1 payments payment lists payments created create payment call state list shows payments made merchant makes call filter payments appear response specify one optional query pagination parameters see filtering pagination successful request returns http status code json response body lists payments payment details sales \\( resource group \\) sale completed payment use resource show sale details refund sale information see also refund payments show sale details get v1 payments sale shows details sale id returns sales created rest api successful request returns http status code json response body shows sale details refund sale post v1 payments sale refund refunds sale id full refund include empty payload json request body partial refund include object json request body successful request returns http status code json response body shows details refunded sale refunds \\( resource group \\) use resource show details refund direct captured payments show refund details get v1 payments refund shows details refund id successful request returns http status code json response body shows refund details authorizations \\( resource group \\) use resource related sub resources act previously created authorization show details capture void reauthorize authorization show authorization details get v1 payments authorization shows details authorization id successful request returns http status code json response body shows authorization details capture authorization post v1 payments authorization capture captures processes authorization id use call original payment call must specify intent successful request returns http status code json response body shows details captured authorization void authorization post v1 payments authorization void voids cancels authorization id cannot void fully captured authorization successful request returns http status code json response body shows details voided authorization authorize payment post v1 payments authorization reauthorize authorizes paypal account payment authorization id ensure funds still available authorize payment initial three day honor period supports request parameter authorize payment four 29 days three day honor period original authorization expires 30 days passed original authorization must create new authorization instead authorized payment new three day honor period authorize transaction 115 originally authorized amount exceed increase 75 usd successful request returns http status code json response body shows details authorized authorization captures \\( resource group \\) use resource sub resources show details refund captured payments show captured payment details get v1 payments capture shows details captured payment id successful request returns http status code json response body shows details captured payment refund captured payment post v1 payments capture refund refunds captured payment id json request body include object successful request returns http status code json response body shows details captured payment orders \\( resource group \\) use resource authorize capture void show details order note cannot refund order directly instead must refund completed payment order integration information see orders refund payment information see also orders show order details get v1 payments orders shows details order id successful request returns http status code json response body shows details voided authorization authorize order post v1 payments orders authorize authorizes order id json request body include object successful request returns http status code json response body shows details authorized order capture order post v1 payments orders capture captures payment order id use call original payment call must specify intent json request body include payment amount indicate whether capture final capture authorization successful request returns http status code json response body shows details captured order void order post v1 payments orders void voids cancels order id cannot void order payment already partially fully captured successful request returns http status code json response body shows details voided order payouts api use payouts api make paypal payments multiple paypal accounts single api call specify recipients using paypal email addresses phone numbers encrypted paypal account numbers payouts api fast convenient way send commissions rebates rewards general disbursements payouts appear mass payments sender 's paypal account provided mass payment reports important use payouts api request access account alternatively contact account manager paypal customer support must paypal business account payouts api uses iso 8601 date time format information payouts api see payouts deprecation notice synchronous mode soon deprecated longer available new integrations continues supported existing integrations synchronous mode payout immediately returns results payout payouts \\( resource group \\) use resource create payouts show batch payout details create payouts post v1 payments payouts make payouts one paypal accounts show batch payout details get v1 payments payouts periodically shows latest status batch payout along transaction status data individual items payout item \\( resource group \\) use resource show details payout item cancel unclaimed payout item deprecation notice synchronous mode soon deprecated longer available new integrations continues supported existing integrations synchronous mode payout immediately returns results payout show payout item details get v1 payments payouts item shows details payout item review current status previously unclaimed pending payout item cancel unclaimed payout item post v1 payments payouts item cancel cancels unclaimed transaction one claims unclaimed item within 30 days funds automatically returned sender cancel unclaimed item automatic 30 day refund vault api merchants use vault api securely store customer credit cards paypal vault rather server use api store customer credit card api returns id vaulted card take payment vaulted card specify id vaulted card instead credit card details information see vault overview notes paypal validate credit card information store vault direct credit card payment related features restricted countries credit cards \\( resource group \\) use resource store credit card vault delete show details list update vaulted cards store credit card post v1 vault credit cards stores credit card details paypal vault use vaulted card make payment specify id vaulted card object include store credit card must include id object also use id vaulted credit card show details update delete vaulted card list vaulted credit cards get v1 vault credit cards lists vaulted credit cards filter cards response specify one optional query parameters show vaulted credit card details get v1 vault credit cards shows details vaulted credit card id update vaulted credit card patch v1 vault credit cards updates information vaulted credit card id json request body specify values update delete vaulted credit card delete v1 vault credit cards deletes vaulted credit card id webhooks api paypal rest apis use webhooks event notification webhooks http callbacks receive notification messages events configure webhook listener app create webhook subscribes webhook listener app events namespace contains resource collections webhooks webhooks \\( resource group \\) use resource create show details list update delete webhooks create webhook post v1 notifications webhooks subscribes webhook listener events successful request returns http status code json response body object includes webhook id later use show webhook details get v1 notifications webhooks shows details webhook id list webhooks get v1 notifications webhooks lists webhooks update webhook patch v1 notifications webhooks updates webhook id supports operation delete webhook delete v1 notifications webhooks deletes webhook id webhook event notifications \\( resource group \\) use resource show event notification details list event notifications resend notification event show event notification details get v1 notifications webhooks events shows details event notification id list event notifications get v1 notifications webhooks events lists webhook event notifications specify one optional query parameters filter response resend event notification post v1 notifications webhooks events resend resends event notification event id webhook events \\( resource group \\) use resource list events webhooks subscribe resource list event subscriptions webhook list available events get v1 notifications webhooks event types lists events app subscribe list webhook events see webhook events list event subscriptions webhook get v1 notifications webhooks event types lists event subscriptions webhook id simulate webhook event \\( resource group \\) use resource use sample payload simulate webhook event events call generates serve validate connection listener url show webhook events look note also use webhooks simulator simulate webhook events simulate webhook event post v1 notifications simulate event simulates webhook event simulate event specify sample payload request send mock event data url configured listen notification messages mock events serve validate connection listener url show webhook events look verify webhook signature \\( resource group \\) use resource verify webhook signature verify webhook signature post v1 notifications verify webhook signature verifies webhook signature docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "crawled_date": "2017-06-10T13:59:47.762658"
  }, 
  "357": {
    "api_url": "payu.com", 
    "progweb_url": "https://www.programmableweb.com/api/payu-classic", 
    "progweb_date": "10.25.2016", 
    "progweb_descr": "This API creates a PayU new payment after placing an appropriate form on your website, which will redirect the customer to the PayU NewPayment procedure. It is advised to use the POST method if possible, however, the GET method is also available.  PayU is a Naspers-owned online and mobile payments company.", 
    "api_name": "PayU Classic", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:23.116751"
  }, 
  "356": {
    "api_url": "payu.com", 
    "progweb_url": "https://www.programmableweb.com/api/payuexpress", 
    "progweb_date": "10.25.2016", 
    "progweb_descr": "This API is based on a transparent integration type which allows the Merchant to accept card payments without redirecting users to a page hosted by the payment service provider. This integration type retains the security level and minimizes the PCI DSS compliance effort.  It also gives the Merchant flexibility and control over the payment process. PayU is a Naspers-owned online and mobile payments company.", 
    "api_name": "PayU|Express", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:23.118010"
  }, 
  "355": {
    "api_url": "amazonaws.com", 
    "progweb_url": "https://www.programmableweb.com/api/satispay-instore", 
    "progweb_date": "10.24.2016", 
    "progweb_descr": "The Satispay InStore API adds a new payment method in a store's cash register. This API is REST based, uses JSON for requests, and API Keys for authentication. For pricing, Satispay charges a flat rate of \u20ac0.20 for transactions above \u20ac10. Satispay is an online payment platform based in Milan that offers in-store payments, custom payment links, and e-commerce support.", 
    "api_name": "Satispay InStore", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:23.119142"
  }, 
  "354": {
    "api_url": "amazonaws.com", 
    "progweb_url": "https://www.programmableweb.com/api/satispay-online", 
    "progweb_date": "10.24.2016", 
    "progweb_descr": "The Satispay Online API adds a dedicated payment method in third party applications or websites. This API is REST based, uses JSON for requests, and API Keys for authentication. For pricing, Satispay charges a flat rate of \u20ac0.20 for transactions above \u20ac10. Satispay is an online payment platform based in Milan that offers in-store payments, custom payment links, and e-commerce support.", 
    "api_name": "Satispay Online", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:23.120128"
  }, 
  "353": {
    "api_url": "processout.com", 
    "progweb_url": "https://www.programmableweb.com/api/processout", 
    "progweb_date": "10.23.2016", 
    "progweb_descr": "The ProcessOut REST API allows developers to access and integrate the functionality of ProcessOut with other applications. The main API methods revolve around accepting and processing payments. Other API methods include managing recurring payments and subscriptions and issuing refunds. ProcessOut offers international payment and subscription solutions for online payments.", 
    "api_name": "ProcessOut", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:23.121155"
  }, 
  "352": {
    "api_url": "particeep.com", 
    "progweb_url": "https://www.programmableweb.com/api/particeep", 
    "progweb_date": "10.21.2016", 
    "progweb_descr": "Particeep offers integration with a financial and banking platform that supports data collection and analysis, virtual wallet with online payments, data flow aggregation, chat, and document management. The Particeep API supports fundraiser management, payments, newsfeed, and subscriptions. Additionally Particeep offers a webhook based event notification system.  This API is REST based, and uses JSON for responses.", 
    "api_name": "Particeep", 
    "progweb_cat": "Financial,Banking", 
    "crawled_date": "2017-06-10T13:59:23.122135"
  }, 
  "351": {
    "api_url": "cayan.com", 
    "progweb_url": "https://www.programmableweb.com/api/cayan-merchantware-soap", 
    "progweb_date": "10.13.2016", 
    "progweb_descr": "This API for Merchantware services is split up among various domains and includes the following list of the various units composing: overview, credit transactions, vault transactions, EBT transactions, gift card transactions, LevelUp Transactions and more.  Cayan is a provider of payment technologies and merchant account services.", 
    "api_name": "Cayan Merchantware Soap", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:23.123090"
  }, 
  "350": {
    "api_url": "cayan.com", 
    "progweb_url": "https://www.programmableweb.com/api/cayan-genius-line-item-display", 
    "progweb_date": "10.11.2016", 
    "progweb_descr": "This API allows you to display line item level data on the Genius CED.  Cayan provides a way for business to collect payment information and run transactions through the Virtual Terminal. This includes; Genius Certification Script, Implementation Review Outline, EMV Response message field and value documentation and more.  Cayan is a provider of payment technologies and merchant account services.", 
    "api_name": "Cayan Genius Line Item Display", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:23.124103"
  }, 
  "359": {
    "api_url": "visa.com", 
    "progweb_url": "https://www.programmableweb.com/api/visa-direct-funds-transfer", 
    "progweb_date": "10.27.2016", 
    "progweb_descr": "This API can pull funds from the sender's Visa account in an Account Funding Transaction (AFT).  It also provides functionality to push funds to the recipient's Visa account in an Original Credit Transaction (OCT). If a transaction is declined, the Funds Transfer API can also return the funds to the sender's funding source in an Account Funding Transaction Reversal (AFTR).  Visa Direct allows you to push payments to eligible Visa accounts, fund transfers from a variety of sources and the ability to use APIs inside ATM\u2019s, mobile, web, and in-branch applications.  It is a payment service that lets people \"push\" money to over 1 billion Visa accounts through the Original Credit Transaction (OCT).  Visa Direct consumer and business applications include: Money Transfer, Prepaid Load, Credit Card Bill Pay and Funds Disbursements.", 
    "api_name": "Visa Direct Funds Transfer", 
    "progweb_cat": "Financial,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:23.114814"
  }, 
  "358": {
    "api_url": "ingomoney.com", 
    "progweb_url": "https://www.programmableweb.com/api/ingo-money-push-pay", 
    "progweb_date": "10.27.2016", 
    "progweb_descr": "The Ingo Money Push Pay API integrates payments into applications, providing pre-printed payroll, government checks, and mobile check deposits. For additional information about authentication, requests, and responses, ask for help@ingomoney.com", 
    "api_name": "Ingo Money Push Pay", 
    "progweb_cat": "Payments,Accounts", 
    "crawled_date": "2017-06-10T13:59:23.115774"
  }, 
  "216": {
    "api_url": "pricemyloan.com", 
    "progweb_url": "https://www.programmableweb.com/api/pricemyloan", 
    "progweb_date": "01.20.2014", 
    "progweb_descr": "PriceMyLoan serves the mortgage lending industry by providing loan pricing and underwriting services online as a service. The PriceMyLoan API allows users to integrate the mortgage processing service into third party applications.  The API can returns a variety of data formats, and an account is required with service.", 
    "api_name": "PriceMyLoan", 
    "progweb_cat": "Financial,Payments", 
    "crawled_date": "2017-06-10T13:59:33.633305"
  }, 
  "217": {
    "api_url": "tsys.com", 
    "progweb_url": "https://www.programmableweb.com/api/tsys", 
    "progweb_date": "01.23.2014", 
    "progweb_descr": "TSYS is a payment acceptance service that provides a services from payment processing and merchant services, to gift card servicing and exchange rate payment services. The TSYS API allows users to integrate third-party applications with the payment processing service and other products with an emphasis on the mobile services. An account is required with service. TSYS uses SSL for authentication.", 
    "api_name": "TSYS", 
    "progweb_cat": "Payments,Mobile", 
    "crawled_date": "2017-06-10T13:59:33.632290"
  }, 
  "214": {
    "api_url": "dogeapi.com", 
    "progweb_url": "https://www.programmableweb.com/api/dogecoin", 
    "progweb_date": "01.19.2014", 
    "progweb_descr": "DogeAPI is an API for the use of the crypto-currency Dogecoin built around the popular doge meme. The DogeCoin API allows users to build payment processing into merchant websites. The API includes calls to get a balance, withdraw funds, get a new address, get a user address, get an address received, get address by label, get difficulty, and get current block. The API uses REST calls and both SSL and an API key for authentication.", 
    "api_name": "DogeCoin", 
    "progweb_cat": "Financial,Stocks", 
    "crawled_date": "2017-06-10T13:59:33.635259"
  }, 
  "215": {
    "api_url": "liteapi.org", 
    "progweb_url": "https://www.programmableweb.com/api/liteapiorg", 
    "progweb_date": "01.19.2014", 
    "progweb_descr": "Liteapi.org is a crypto-currency facilitator that provides resources to utilize or incorporate litecoin payment into merchant applications. The Liteapi.org API allows users to receive payments, get exchange rates, access the blockchain, and make other calls. The API also allows users to build apps that utilize litecoin, or add litecoin functionality to existing applications. The API uses REST calls, returns JSON, and uses SSL for authentication.", 
    "api_name": "Liteapi.org", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:33.634273"
  }, 
  "212": {
    "api_url": "coinrelay.com", 
    "progweb_url": "https://www.programmableweb.com/api/coinrelay", 
    "progweb_date": "01.19.2014", 
    "progweb_descr": "CoinRelay is a Litecoin mining pool that allows users to do pool processing power to mine litecoin, as well as mine anonymously. The CoinRelay API uses REST calls, and allows users to query to get pool data and user account information. An account and API key are required for API usage.", 
    "api_name": "CoinRelay", 
    "progweb_cat": "Financial,Currency", 
    "crawled_date": "2017-06-10T13:59:33.637291"
  }, 
  "213": {
    "api_url": "gocoin.com", 
    "progweb_url": "https://www.programmableweb.com/api/gocoin", 
    "progweb_date": "01.19.2014", 
    "progweb_descr": "GoCoin is an international payment platform that allows users to send and accept crypto-currencies as payment within merchant shops and other organizations. The GoCoin API uses REST calls, returns JSON, and allows users to make calls to interact with account data, deposit addresses, invoices, merchants, merchant users, merchant payout addresses, and users. An account is required with service, and OAuth and SSL are used for authentication.", 
    "api_name": "GoCoin", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:33.636320"
  }, 
  "210": {
    "api_url": "paymate.com", 
    "progweb_url": "https://www.programmableweb.com/api/paymate", 
    "progweb_date": "01.17.2014", 
    "progweb_descr": "Paymate is a secure payment system enabling users to accept credit card payments both online and via mobile devices. The Paymate API allows developers to programmatically update payment statuses, recover lost orders not recorded at the seller site, and to validate payments.", 
    "api_name": "Paymate", 
    "progweb_cat": "Payments,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:33.639162"
  }, 
  "211": {
    "api_url": "captchacoin.com", 
    "progweb_url": "https://www.programmableweb.com/api/captchacoin", 
    "progweb_date": "01.19.2014", 
    "progweb_descr": "CaptchaCoin is a captcha solving service that allows users to both use the service to have their own captchas solved, or users can solve captchas and receive payment for the service in bitcoins. The CaptchaCoin API allows users to submit captchas to be solved. The API uses REST calls, and an account is required with service, as well as an API key.", 
    "api_name": "CaptchaCoin", 
    "progweb_cat": "Security,Merchants", 
    "crawled_date": "2017-06-10T13:59:33.638247"
  }, 
  "218": {
    "api_url": "bindb.com", 
    "progweb_url": "https://www.programmableweb.com/api/bindb", 
    "progweb_date": "01.23.2014", 
    "progweb_descr": "BinDB is a bank identification number database that helps businesses identify credit and debit cards. The BINDB is widely used for fraud protection and credit card payment processing. BinDB provides a flexible API solutions to query the Issuer Identificaton Number database. An account is required to use the API.", 
    "api_name": "BinDB", 
    "progweb_cat": "Security,Banking", 
    "crawled_date": "2017-06-10T13:59:33.631224"
  }, 
  "219": {
    "api_url": "rechargemy.com", 
    "progweb_url": "https://www.programmableweb.com/api/recharge-my", 
    "progweb_date": "01.30.2014", 
    "progweb_descr": "Recharge My is an online mobile recharging, bill payment, and eCommerce platform. Users can pay bills, manage payments, and recharge their mobile phone airtime and data.  The Recharge My API allows developers to access and integrate the functionality of Recharge My with other applications. Public documentation is not available; API access comes with account service.", 
    "api_name": "Recharge My", 
    "progweb_cat": "Telephony,eCommerce", 
    "crawled_date": "2017-06-10T13:59:33.630161"
  }, 
  "289": {
    "api_url": "easyofac.com", 
    "progweb_url": "https://www.programmableweb.com/api/openach-easyofac", 
    "progweb_date": "12.28.2015", 
    "progweb_descr": "OpenACH is a South Dakota payment processing system provider. EasyOFAC is an OFAC compliance platform which features layered fuzzy search to avoid false positives. Also, it provides real time monitoring for ongoing compliance, and guided compliance workflow. This API is is REST based, returns data in JSON format, and uses API keys for authentication.", 
    "api_name": "OpenACH EasyOFAC", 
    "progweb_cat": "Compliance,Accounting", 
    "crawled_date": "2017-06-10T13:59:26.415133"
  }, 
  "288": {
    "api_url": "paymaya.com", 
    "progweb_url": "https://www.programmableweb.com/api/paymaya-checkout", 
    "progweb_date": "12.28.2015", 
    "progweb_descr": "PayMaya is a financial company located in Philippines that develops online payment solutions. PayMaya tailors its services to businesses that cannot accept credit card payments, and functions as an intermediary. The Checkout API offers merchants a way to accept online payments, and also offers an express checkout feature. This API is REST based, and it supports webhooks. The developer will require an API key.", 
    "api_name": "PayMaya Checkout", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:26.416072"
  }, 
  "4": {
    "api_url": "e-coin.io", 
    "progweb_url": "https://www.programmableweb.com/api/e-coin-account", 
    "progweb_date": "05.22.2015", 
    "progweb_descr": "E-Coin is a Bitcoin debit card & Multi-Sig Wallet that allows users to spend bitcoin anywhere. The E-Coin Account API allows developers to set up accounts for users. This API requires an account to develop with their API.", 
    "api_name": "E-Coin Account", 
    "progweb_cat": "Payments,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:26.473067"
  }, 
  "281": {
    "api_url": "hotspotsystem.com", 
    "progweb_url": "https://www.programmableweb.com/api/hotspotsystemcom", 
    "progweb_date": "12.07.2015", 
    "progweb_descr": "The HotspotSystem.com API allows to implement hotspot features into mobile applications and to bill for internet usage. Protocols available in JSON and XML with SSL, basic HTTP, and Api Key as authentication methods. HotspotSystem provides hotspot management and billing ability to businesses who offer internet to their customers.", 
    "api_name": "HotspotSystem.com", 
    "progweb_cat": "Wi-Fi,Billing", 
    "crawled_date": "2017-06-10T13:59:26.422693"
  }, 
  "280": {
    "api_url": "clevercoin.com", 
    "progweb_url": "https://www.programmableweb.com/api/clever-banking", 
    "progweb_date": "12.07.2015", 
    "progweb_descr": "Clever Banking API is a banking platform; send and receive Euros, Dollars, and Bitcoin. CleverCoin's API is partnered with all major payment channels including: Visa, Mastercard, Sepa, Ideal, and Bitcoin. The Clever Banking API offers fraud protection, Bitcoin conversion, multi-signature transfers, and is compliant with European Regulations. API documentation can be obtained through contacting CleverCoin.", 
    "api_name": "Clever Banking", 
    "progweb_cat": "Banking,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:26.423600"
  }, 
  "283": {
    "api_url": "apiary.io", 
    "progweb_url": "https://www.programmableweb.com/api/bitrefill", 
    "progweb_date": "12.13.2015", 
    "progweb_descr": "The Bitrefill API allows developers to programmatically send money to prepaid phones around the world to purchase additional minutes. Payments through the API are made in Bitcoins. This API currently has support for over 600 operators in 143 different countries. Withdrawing funds is instant and topup usually occurs within 10 minutes.", 
    "api_name": "Bitrefill", 
    "progweb_cat": "Bitcoin,Cryptocurrency", 
    "crawled_date": "2017-06-10T13:59:26.420866"
  }, 
  "282": {
    "api_url": "atlassian.net", 
    "progweb_url": "https://www.programmableweb.com/api/paga-business", 
    "progweb_date": "12.07.2015", 
    "progweb_descr": "The Paga Business REST API allows developers to access and integrate the functionality of Paga with other applications. Some example API methods include registering customers, transferring money, and managing payments. Paga is an online payment, banking, and airtime/data purchasing platform.", 
    "api_name": "Paga Business", 
    "progweb_cat": "Payments,Banking", 
    "crawled_date": "2017-06-10T13:59:26.421805"
  }, 
  "285": {
    "api_url": "epay.dk", 
    "progweb_url": "https://www.programmableweb.com/api/epay-payment-solutions", 
    "progweb_date": "12.14.2015", 
    "progweb_descr": "The ePay Payment Solutions API allows to integrate payments into web services in SOAP protocol. Originally from Denmark, ePay additionally provides invoicing and subscription alternatives. To read documentation, visit http://tech.epay.dk/en/payment-web-service", 
    "api_name": "ePay Payment Solutions", 
    "progweb_cat": "Payments,European", 
    "crawled_date": "2017-06-10T13:59:26.418803"
  }, 
  "284": {
    "api_url": "payu.com", 
    "progweb_url": "https://www.programmableweb.com/api/pay-u", 
    "progweb_date": "12.14.2015", 
    "progweb_descr": "The PayU API allows to integrate payments into web services and mobile applications in JSON and REST protocols. Resources present how to create a new order via API, update notifications, and send refunds to the buyer's account. Developers require a Key to authenticate.", 
    "api_name": "Pay U", 
    "progweb_cat": "Payments,Business", 
    "crawled_date": "2017-06-10T13:59:26.419845"
  }, 
  "287": {
    "api_url": "anywherecommerce.com", 
    "progweb_url": "https://www.programmableweb.com/api/anywherecommerce", 
    "progweb_date": "12.15.2015", 
    "progweb_descr": "The AnywhereCommerce REST API allows developers to access and integrate the functionality of AnywhereCommerce with other applications. Public documentation is not available; API access comes with account service. AnywhereCommerce provides merchants payment platforms and online point-of-sale (POS) functionality and support.", 
    "api_name": "AnywhereCommerce", 
    "progweb_cat": "Payments,Banking", 
    "crawled_date": "2017-06-10T13:59:26.416956"
  }, 
  "286": {
    "api_url": "merchantwarrior.com", 
    "progweb_url": "https://www.programmableweb.com/api/merchant-warrior", 
    "progweb_date": "12.14.2015", 
    "progweb_descr": "The Merchant Warrior API allows to integrate credit card payment solutions into merchant's applications. Documentation is available for download in the link provided as a PDF file, in which developers can find protocols in HTTP & XML, SSL security and Api Key access. Merchant Warrior is an e-commerce service based in Australia.", 
    "api_name": "Merchant Warrior", 
    "progweb_cat": "Merchants,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:26.417885"
  }, 
  "263": {
    "api_url": "ach-solutions.com", 
    "progweb_url": "https://www.programmableweb.com/api/ach-solutions", 
    "progweb_date": "10.16.2015", 
    "progweb_descr": "ACH Solutions invites developers to become integrated partners. Payments, accounting, and baking are some of the features that can be implemented into web services and mobile applications via XML requester.  ACH Solutions is a division of UMS Banking and provides a secure low cost alternative for web and mobile payment services.", 
    "api_name": "ACH Solutions", 
    "progweb_cat": "Payments,Accounting", 
    "crawled_date": "2017-06-10T13:59:26.441527"
  }, 
  "262": {
    "api_url": "figo.io", 
    "progweb_url": "https://www.programmableweb.com/api/figo", 
    "progweb_date": "10.16.2015", 
    "progweb_descr": "figo.io is the first Banking-as-a-Service in Europe. It enables access to every financial services provider through one API. With the figo Banking API developers can integrate the access to a bank account, the history of transactions, and the submission of payments. Authentication is available via OAuth2. Formats in JSON and REST allow to request and receive responses to retrieve bank accounts, modify bank accounts, and remove a PIN number from the server.", 
    "api_name": "Figo", 
    "progweb_cat": "Banking,Accounts", 
    "crawled_date": "2017-06-10T13:59:26.442455"
  }, 
  "261": {
    "api_url": "komoju.com", 
    "progweb_url": "https://www.programmableweb.com/api/komoju", 
    "progweb_date": "10.16.2015", 
    "progweb_descr": "Komoju is a Japanese company focused on payments, eCommerce, and banking services. The API supports all payment methods in Japanese Yen(JPY), offering REST protocol and a hosted page for integrations. Developers can authenticate with HTTP basic auth to send requests and receive responses in JSON format.", 
    "api_name": "Komoju", 
    "progweb_cat": "Payments,Banking", 
    "crawled_date": "2017-06-10T13:59:26.443388"
  }, 
  "260": {
    "api_url": "synapsepay.com", 
    "progweb_url": "https://www.programmableweb.com/api/synapsepay", 
    "progweb_date": "10.14.2015", 
    "progweb_descr": "Synapse Payments software platform for banks and businesses makes storage and movement of value quick, easy and safe.  From crowdfunding and recurring rent payments to lending and international remittances, SynapsePay's white label API allows you to on-board users, verify their identity and perform compliance checks then verify bank details to transact today and in the future.  Pricing plans range from 5-20 cents / transactions + a subscription fee for features (https://synapsepay.com/pricing/).", 
    "api_name": "SynapsePay", 
    "progweb_cat": "Payments,Banking", 
    "crawled_date": "2017-06-10T13:59:26.444318"
  }, 
  "267": {
    "api_url": "getsetpay.com", 
    "progweb_url": "https://www.programmableweb.com/api/setpay", 
    "progweb_date": "11.06.2015", 
    "progweb_descr": "The SetPay API provides developers a quick and safe way to add payment options to the flow of an application. SetPay offers a new and convenient way to accept credit card payments at any time and anywhere, via a smartphone or tablet and the card reader of SetPay.", 
    "api_name": "SetPay", 
    "progweb_cat": "Payments,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:26.437664"
  }, 
  "266": {
    "api_url": "picatic.com", 
    "progweb_url": "https://www.programmableweb.com/api/picatic", 
    "progweb_date": "11.03.2015", 
    "progweb_descr": "The Picatic API gives users tools to sell tickets online, directly from your app or website. The Picatic API also provides the ability to quickly create new events, list events on your own website, create links to purchase tickets online, retrieve and store data from events, automatically add registrants to a CRM, send triggered emails based on actions, view attendee, order and survey information, and more. With this API, users get real-time access to reporting data and can create personalized reports. Picatic is a ticketing platform with a unique approach to let promoters create event pages to generate funding before events are booked.", 
    "api_name": "Picatic", 
    "progweb_cat": "Events,Payments", 
    "crawled_date": "2017-06-10T13:59:26.438572"
  }, 
  "265": {
    "api_url": "adp.com", 
    "progweb_url": "https://www.programmableweb.com/api/adp-payroll", 
    "progweb_date": "10.27.2015", 
    "progweb_descr": "The ADP Payroll API brings developers tools for Payroll Management and Services. This includes Pay Statements and Distributions, Tax Statements, ATM Locators, Paycard Funding Initiation, and more. The ADP APIs are built across eight pillars of Human Capital Management. Currently the ADP APIs are only available in the US, but will be opened up to the rest of the world soon. ADP provides payroll services to businesses in the U.S.", 
    "api_name": "ADP Payroll", 
    "progweb_cat": "Enterprise,Accounts", 
    "crawled_date": "2017-06-10T13:59:26.439519"
  }, 
  "264": {
    "link1": "http://networkx.github.io/documentation.html", 
    "api_url": "github.io", 
    "link2": "http://grails.github.io/grails-static-website/documentation.html", 
    "progweb_url": "https://www.programmableweb.com/api/invoiced", 
    "progweb_date": "10.21.2015", 
    "progweb_descr": "The Invoiced API offers a billing and invoicing service which can be integrated with existing applications. It features subscription billing, billing portal, customizable templates, and account statements. This RESTful API responds in the JSON format. The authorization model uses HTTP Basic Auth. Invoiced is a cloud based company which develops accounts receivable tools for organizations of all sizes.", 
    "api_name": "Invoiced", 
    "progweb_cat": "Invoicing,Accounting", 
    "descr2": "fork github socialize discuss mailing list discuss slack grails twitter events conferences source code github report issues github stack overflow questions using outdated browser please upgrade browser improve experience grails learnguidesdocumentationdownloadpluginscommunitysupport socialize documentationuser guideapi documentationdocumentation older versionsfaq improve doc documentationthe documentation available single page document feel free pick direct section also browse documentation older versions user guidedownloading grailsuser guideapi reference gormwebsitegorm hibernate user guideapi reference learning resourcesgrails guides focused tutorials samplesslack community discussionuser guide older versionsyou browse documentation previous versions grails since grails 1 2 0 select version3 3 0 m23 3 0 m13 2 93 2 83 2 73 2 63 2 53 2 43 2 33 2 23 2 103 2 13 2 0 rc23 2 0 rc13 2 0 m23 2 0 m13 2 03 1 93 1 83 1 73 1 63 1 53 1 43 1 33 1 23 1 163 1 153 1 143 1 133 1 123 1 113 1 103 1 13 1 0 rc23 1 0 rc13 1 0 m33 1 0 m23 1 03 0 93 0 83 0 73 0 63 0 53 0 43 0 33 0 23 0 173 0 163 0 153 0 143 0 133 0 123 0 113 0 103 0 13 0 02 5 62 5 52 5 42 5 32 5 22 5 12 5 02 4 52 4 42 4 32 4 22 4 12 4 02 3 92 3 82 3 72 3 62 3 52 3 42 3 32 3 22 3 112 3 102 3 12 3 02 2 52 2 42 2 32 2 22 2 12 2 02 1 52 1 42 1 32 1 22 1 12 1 02 0 42 0 32 0 22 0 12 0 01 3 91 3 81 3 71 3 61 3 51 3 41 3 31 3 21 3 11 3 01 2 51 2 41 2 31 2 21 2 11 2 0api older versionsyou browse api previous versions grails since grails 1 2 0 select version3 3 0 m23 3 0 m13 2 93 2 83 2 73 2 63 2 53 2 43 2 33 2 23 2 103 2 13 2 0 rc23 2 0 rc13 2 0 m23 2 0 m13 2 03 1 93 1 83 1 73 1 63 1 53 1 43 1 33 1 23 1 163 1 153 1 143 1 133 1 123 1 113 1 103 1 13 1 0 rc23 1 0 rc13 1 0 m33 1 0 m23 1 03 0 93 0 83 0 73 0 63 0 53 0 43 0 33 0 23 0 173 0 163 0 153 0 143 0 133 0 123 0 113 0 103 0 13 0 02 5 62 5 52 5 42 5 32 5 22 5 12 5 02 4 52 4 42 4 32 4 22 4 12 4 02 3 92 3 82 3 72 3 62 3 52 3 42 3 32 3 22 3 112 3 102 3 12 3 02 2 52 2 42 2 32 2 22 2 12 2 02 1 52 1 42 1 32 1 22 1 12 1 02 0 42 0 32 0 22 0 12 0 01 3 91 3 81 3 71 3 61 3 51 3 41 3 31 3 21 3 11 3 01 2 51 2 41 2 31 2 21 2 11 2 0 grails learnguidesdocumentationdownloadpluginscommunitysupport contributingsource codebuild statusbooksfaqsearch socialize discuss mailing listdiscuss slackgrails twitterevents conferencessource code githubreport issues githubstack overflow questions grails frameworkrepository hosted artifactorywebsite hosting provided pivotalyourkit supports grails java profiler 2005 2017 grails project grails open source apache 2 license", 
    "descr1": "networkx navigation next previous networkx home documentation download developer \\( github \\) versions latest release networkx 1 11 30 january 2016 downloads docs pdf development 2 0dev github docs pdf contact mailing list issue tracker documentation new networkx take look tutorial examples show simple complicated ways use networkx full documentation versions latest release development archived documentation documentation older versions avaiable following links networkx 1 11 networkx 1 10 networkx 1 10 networkx 1 9 1 networkx 1 9 networkx 1 8 1 networkx 1 8 networkx 1 7 older versions navigation next previous networkx home documentation download developer \\( github \\) copyright 2014 networkx developer team last updated may 01 2016 created using sphinx 1 4 1", 
    "crawled_date": "2017-06-10T13:59:26.440590"
  }, 
  "269": {
    "api_url": "payfirma.com", 
    "progweb_url": "https://www.programmableweb.com/api/payfirma-push", 
    "progweb_date": "11.18.2015", 
    "progweb_descr": "The Payfirma Push API integrates transactions in real-time with messages in JSON protocol & HTTP POST methods. In particular, the interface will display the previous 10 responses when it's visible in the eCommerce settings. Payfirma offers web terminal, recurring billing, and tablet POS services.", 
    "api_name": "Payfirma Push", 
    "progweb_cat": "Payments,Business", 
    "crawled_date": "2017-06-10T13:59:26.435737"
  }, 
  "268": {
    "api_url": "paylution.com", 
    "progweb_url": "https://www.programmableweb.com/api/hyperwallet-payout", 
    "progweb_date": "11.17.2015", 
    "progweb_descr": "The Hyperwallet Payout API brings developers an efficient and accessible platform for executing payouts to a globally dispersed workforce. This API provides the tools needed to quickly and securely make payments to everyone on the workforce. Hyperwallet offers payouts with flexibility, freedom, and on-demand tracking.", 
    "api_name": "Hyperwallet Payout", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:26.436745"
  }, 
  "59": {
    "api_url": "instantpay.in", 
    "progweb_url": "https://www.programmableweb.com/api/instantpayin", 
    "progweb_date": "11.15.2012", 
    "progweb_descr": "instantPay.in is a provider of anytime, anywhere access to users' day to day Mobile & Data Card Top-ups, DTH Recharges and Utility Bill Payments via easy to integrate API. The API is compatible on all platforms. Interested developers can contact the provider for information about partnerships and API documentation.", 
    "api_name": "instantPay.in", 
    "progweb_cat": "Payments,Billing", 
    "crawled_date": "2017-06-10T13:59:38.000680"
  }, 
  "58": {
    "link5": "https://www.paysafecard.com/en/business/support/downloads/?tx_pscfaq_pi1%5Bcategory%5D=19&tx_pscfaq_pi1%5Bcontroller%5D=Faq&cHash=77d2ba94e315afa414de0c420556f815", 
    "link4": "https://www.paysafecard.com/fileadmin/api/", 
    "link1": "https://www.paysafecard.com/fileadmin/content/website_business/Technische_Daten/API_SPEC_SOAP_CLASSIC.pdf", 
    "api_url": "paysafecard.com", 
    "link3": "https://www.paysafecard.com/en/business/support/downloads-soap/?tx_pscfaq_pi1%5Bcategory%5D=738&tx_pscfaq_pi1%5Bcontroller%5D=Faq&cHash=79393de60885eca9f9aa83979c99055f", 
    "link2": "https://www.paysafecard.com/fileadmin/api/de.html", 
    "progweb_url": "https://www.programmableweb.com/api/paysafecard", 
    "progweb_date": "11.13.2012", 
    "progweb_descr": "The service provides secure online payments for e-commerce and other online transactions via websites and mobile apps. A buyer establishes a confirmed account balance with the service prior to making the purchase and receives a voucher with a personal 16-digit PIN. The buyer can then enter the PIN to complete the purchase and release funds to the seller. The exchange is completed without entering personal data and storing it on a device or releasing it to the seller.  API methods support identifying a specific customer account with the payment service and submitting a current purchase transaction for payment against the account. Methods also support customer authorization of the payment and processing the transaction through release of funds to the seller. The API provides for notification of transaction completion to both buyer and seller.", 
    "api_name": "paysafecard", 
    "progweb_cat": "Payments,eCommerce", 
    "descr5": "close online partnerthe benefits youbecome partnerintegrationpricingmarketing cooperationsmerchant service centerdistribution partnerthe benefits yousecuritydistributor service centernewsnewseventspin magazinesupportoverviewfaqdownloadscontact information private customers private business support downloads documentation sample code partner service center login paysafecard online partnerdistribution partnernewssupport menu benefits youbecome partnerintegrationpricingmarketing cooperationsmerchant service centerthe benefits yousecuritydistributor service centernewseventspin magazineoverviewfaqdownloadscontact useful downloads need documentation sample code products simple paysafecard product descriptions \\? right documentation sample code products services paysafecard logos plug ins shop systems documentation sample code dokumentation detailed description rest api classic payment payout service refund service available rest api guide instructions reporting api found reporting api instructions instructions merchant reporting tool classic payment found mrt doc instructions merchant reporting tool payout refund service found mrt doc find payout interface guidelines payout interface guidelines sample codes technical integration sample code available paysafecard sample codes payment payout refund api also found paysafecard github profile php java net c python node language deutsch english espa ol fran ais company businessthe companypresscareersimprint discover paysafecard checking balancehelpcontactsecuritynewslettercurrency calculatorsitemapdata protectioncookie policyt cs join paysafecard app download app store play store paysafecard com wertkarten gmbh imprint copyright paysafe group plc rights reserved prepaid services company limited authorised financial conduct authority \\( fca \\) united kingdom uk electronic money regulations 2011 issuing electronic money payment instruments \\( frn 900021 \\) paysafecard registered trademark paysafecard com wertkarten gmbh paysafecard mastercard issued prepaid services company limited licence mastercard international inc mastercard registered trademark mastercard international inc us customers paysafecard issued bancorp bank member fdic cancel use cookies help improve services using website declare agreement deutsch english espa ol fran ais cancel", 
    "descr4": "", 
    "descr3": "close online partnerthe benefits youbecome partnerintegrationpricingmarketing cooperationsmerchant service centerdistribution partnerthe benefits yousecuritydistributor service centernewsnewseventspin magazinesupportoverviewfaqdownloadscontact information private customers private business support downloads soap documentation sample code soap partner service center login paysafecard online partnerdistribution partnernewssupport menu benefits youbecome partnerintegrationpricingmarketing cooperationsmerchant service centerthe benefits yousecuritydistributor service centernewseventspin magazineoverviewfaqdownloadscontact useful downloads need documentation sample code products simple paysafecard product descriptions \\? right documentation sample code soap documentation sample code soap classic payment find description soap api \\( classic payment \\) merchant reporting tool guide sample code technical integration process soap guide merchant reporting tool guide php api example c api example java api example refund service also wish implement refund service find description soap api merchant reporting tool guide sample code technical integration process soap guide merchant reporting tool guide php api example c api example java api example payout service also wish implement payout service find description soap api merchant reporting tool guide sample code technical integration process soap guide merchant reporting tool guide php api example c api example java api example language deutsch english espa ol fran ais company businessthe companypresscareersimprint discover paysafecard checking balancehelpcontactsecuritynewslettercurrency calculatorsitemapdata protectioncookie policyt cs join paysafecard app download app store play store paysafecard com wertkarten gmbh imprint copyright paysafe group plc rights reserved prepaid services company limited authorised financial conduct authority \\( fca \\) united kingdom uk electronic money regulations 2011 issuing electronic money payment instruments \\( frn 900021 \\) paysafecard registered trademark paysafecard com wertkarten gmbh paysafecard mastercard issued prepaid services company limited licence mastercard international inc mastercard registered trademark mastercard international inc us customers paysafecard issued bancorp bank member fdic cancel use cookies help improve services using website declare agreement deutsch english espa ol fran ais cancel", 
    "descr2": "", 
    "descr1": "\\( \\) \\( \\) \\) \\( \\) 0 1 \\) 2 3 \\( 2 4 \\( 5 6 \\) \\( 7 6 \\( 6 \\( 6 '3 \\( \\) \\) 8 \\) \\) 9 \\( 3 \\( 0 6 \\( 6 1 5 5 9 9 \\) 3 3 3 3 \\) 33 3 3 \\( \\) \\( \\( \\( \\) \\( 0 1 \\) 2 0 13 \\) 0 4 56 \\( \\) 7 \\) 0 8 \\( \\( \\) \\( 8 0 1 8 8 \\) \\) 8 \\( 7 \\( \\) 9 9 \\) \\) \\( \\( 8 \\) 2 3 8 \\) 2 3 \\( \\) \\) \\( \\) \\) \\( \\) \\) \\? \\) \\( \\( \\( \\) 8 \\) \\) \\) \\( \\) \\) 5 \\( \\) 7 8 \\) \\) \\) \\( 2 \\) 3 \\( 28 \\( \\( 8 \\( 3 \\? 7 288 \\) 88 38 7 0 \\) \\( 0 1 \\) 2 0 13 \\( \\) \\( 0 0 8 \\) 0 1 0 \\) \\( 1 \\) 5 2b \\) 3 \\( \\( 2 \\( \\) \\( 8 \\) 3 0 \\) 2 \\( \\) c8 \\) \\) c 0 1 \\) 7 2 8 7 \\) \\) \\( 3 0 \\) 0 3 0 1 \\) \\( \\( 238 23 2 3 8 \\) 4 \\( 5 \\) 2 8 \\) 8 7 8 3 \\) \\) 4 5 23 \\( \\( 0 \\) 0 \\) \\( 3 \\) \\) 8 \\) \\( e8e 8f \\( \\( 8 8 8 0 \\) 6 8 \\) 8 7 8 9 6 \\) 6 \\) \\( \\( 2 0 g 38 \\( \\) g \\( \\) \\( \\) \\) 0 8 \\( \\( \\) 8 8 \\) h \\( 2 \\( 3 g7 \\( g h'5 g76 5h'5 \\( \\) \\) \\? 0 16 5 \\( 8 8 \\( h55 \\) \\( \\) 6 5 8 0 16 56 5h'5 \\) \\( \\( 0 g 6 5 \\( \\) \\( \\( 1 \\( 7 \\) gh'2 \\( 3 a1 b 8 8 8 8 \\) a1 b a1 b a1 b a1 b a1 b h a1 b h a1 b a1 b h a1 b a1 b a1 b a1 b a1 b \\) \\( \\) h'5 8 \\) h'5 j k j k j k j k jk jk 7 6 \\) 2 \\) \\( 3 \\) \\) 7 8 \\) l a1 b 8 8 8 \\) a1 b a1 b a1 b a1 b a1 b a1 b b 23m 2 3 a1 b 8 8 8 \\) a1 b a1 b 23 1 \\( 7 7 \\) h'5 8 h'5 h'5 a1 b 8 8 8 8 8 8 8 \\) a1 b a1 b a1 b a1 b 23 0 a1 b 8 8 8 \\) a1 b a1 b a1 b a1 b a1 b \\) \\( \\( \\( \\( h'5 \\( h'5 n \\( 2 1 p 3 mlm 8 l \\( 0 2 3 2 8 8 c 3 7q \\) \\) \\( 2 8 3 2 8o 3 \\( \\) \\( 2 8o \\( 3 7 2 3 \\) 0 \\) 0 \\) \\( \\( \\) \\( 1' 8 7 \\( \\( \\) \\) r8 s8 \\) d2 3 p2 3 7 8 \\( 8 7 2 \\( 3 \\) 7 \\) 7 gh'2 \\( 3 \\( 7 d7 7 7 8 0 7 gh' h'5 \\) \\) 2 3 h'5 h'5 h'5 \\( 7 c h'5 \\) \\) \\( h'5 h'5 h'5 7 c h'5 \\) \\) \\) h'5 h'5 7 7 4 5 84 5 4 5 h'5 2 3 0 \\) 8 \\) \\) 8 2 \\) 873 8 \\( \\) 7 7 7 c \\) \\( \\( \\) 7 \\) 7 \\( \\( \\) \\) r8 s8 \\) d2 3 2 3 7 q p dh'5 \\) 8 \\( \\( \\) 7 \\) 7 7 \\) \\) \\) c 8 b \\( 7 c 2 3 c 23 23 8 2 3 0 \\( \\) 8cp \\? p \\? p 7 \\? gh' \\? \\? \\? \\? gh' \\? \\? \\? c \\) 7 j k j8 k \\) c 2 3 c 2 3 8 \\( \\( \\( \\( \\) 0 \\) \\( \\) \\( 2 0 3 0h 'a g \\) 27 '8g 8f3 7 \\( 1 \\( 0 \\) \\( \\) 2 3 p 1g \\( \\( p p5g g5h55 5g h55 8 \\) 0 \\) 0 3 \\) 8 \\) 4 c 7 \\? \\( 0 \\) l \\? 5 \\( 4g7 \\) \\) 2 \\) 7 \\) 3 g \\? \\) 6 \\? 0 2 0 g 38 \\( \\) 2 3 \\) \\) \\) \\) 7 8 \\) 78 \\) \\( 8 \\) \\( 8 8 \\) g4 'g 7 c \\( \\( \\( \\) \\) \\) \\( \\) \\) 8 \\( 8 \\) \\( 8 \\) \\) \\( \\) 7 ee 7 \\( e6e \\) \\) n \\( \\( \\) 78 \\) \\) \\) 7 7 \\) \\( \\) 7 0 \\) 8 \\( \\) \\) 333 \\) 87 \\( 8 \\( \\) q 8 \\) \\( 0 \\) \\) \\( \\) 2 p 3 8 1 \\( f \\) 7 8 \\) \\) \\) 7 7 ug \\) \\( f \\) \\( 17 v \\( g \\( 7 l9 bb 7 bb \\( b9 7 l9 \\( 9 wv \\( bw v \\( q w v w v w h g' vb w v \\) w 60' vb \\) w v w vb w vu r w v wvb w v w vb w v w gh' vb w v hw ee e \\) \\) \\) e h'5e vb hw v hw ee e \\) \\) \\) e h'5e vb hw vu 0 w v w piii vb w vu 0 w v hw ee e \\) \\) \\) e h'5e vb hw vu r w v 'w v w 0h 'a vb w v \\( w vb \\( w vb 'w v 'w v w p 1g vb w v \\( w vb \\( w vb 'w vu 0 w v w vb w vu 0 w v 5w \\) \\) \\) vb 5w vb w vb \\( q w vb \\( g \\( w 7 v \\( g \\( 7 l9 bb 7 bb \\( b9 wv \\( q w v 7 \\( l9 \\( 9 wv 'w v w vb w v w vb w v w vb w v w vb w vb 'w vb 'w vb \\( q w vb \\( g \\( w vb \\( q w vb \\( g \\( w f \\) 3 6 8 2 3 17 v \\( g \\( 7 l9 bb 7 bb \\( b9 7 l9 \\( 9 wv \\( bw v \\( q w v w v w h g' vb w v \\) w 60' vb \\) w v w gh' vb w vb w vb \\( q w vb \\( g \\( w 7 v \\( g \\( 7 l9 bb 7 bb \\( b9 wv \\( q w v 7 \\( l9 \\( 9 wv 'w v w gh' vb w v w vb w v w vb w v w vb w vb 'w vb 'w vb \\( q w vb \\( g \\( w f \\) 03 \\) 7 8 \\) bb b b1 \\( bb b b1 \\( l x l xl x l gh' h v 78 w f \\) 6 1 0 2 h 3 \\( bb \\) \\) \\) h'5 b g l x \\( l 1 p x l \\? gh' \\? \\? g f \\) 6 \\) \\( 8 7 \\) \\) 17 v \\( g \\( 7 l9 bb 7 bb \\( b9 7 l9 \\( 9 wv \\( bw v \\( q w v 7 w v w h g' vb w v \\) w 60' vb \\) w v w vb w vu r w v wvb w v w vb w v w gh' vb w v w vb w vb 7 w vb \\( q w vb \\( g \\( w 7 v \\( g \\( 7 l9 bb 7 bb \\( b9 wv \\( q w v 7 7 \\( l9 \\( 9 wv 7 'w v w vb w v bw v w vb w v w vb w vb 7 'w vb 7 'w vb \\( q w vb \\( g \\( w \\) 7 8 7 l le l e l \\) e \\( e l \\) e \\( e l \\) e \\( e 27 e \\) 3 l \\) e \\( e \\) 2 \\( e3 l \\) e \\( e 27 e \\) 3 il \\) e \\( e \\) 2 \\) e 8 7 e 3 l \\) e \\( e 2 \\( e3 l \\) e \\( e \\( l \\) e \\( e \\) 2 \\) e 8 e 3 l \\) e l ec l \\) l \\) \\) l \\) \\( l l \\) \\( e27 e \\) 3 l l \\) \\( e27 e \\) 3 l l \\) \\( e2 7 e \\) 3 l h'5 l h'5 l l \\) \\( e27 e \\) 3 l e l e \\( l e e 7 e l e \\( l e \\( l e \\( l e e 7 e l e \\( 2 3 l l \\) \\( e \\( 2 \\( 3 l l \\) \\( e27 e \\) 3 l l \\? l \\? 2 3 l \\) e7 e 87 e l \\) e e 8 e l \\) e e l \\) e 7 l il e \\) \\( l e \\( \\? 7 e l \\( l \\) \\) l \\( 87 1g g' g l \\( \\? 5 il 8 \\) \\) \\( l \\( l \\( \\? \\( il \\( l 7 l 2ebe 3 7 \\) l 2ebe 3 7 \\) l 2ebe 3 \\( e \\? 7 e l \\? e l e \\( 2e be3 \\) l e \\( l e7 il e \\( 2e 3 \\) l e 2e be3 l e \\( \\? 7 e l l g e l l l g e l 2ebe 3 \\( e \\? 7 e e l 2ebe 3 il 2ebe 3 7 l q 2ebe 3e l e \\( 2e 3 e l 2ebe 3 l q 2ebe 3e \\? 7 e \\) l \\? 2ebe 3e l \\) l e \\) l e \\( \\) l q e \\( il \\) il \\( l z \\( 2 3 l l 5 l l l e \\( \\) l e \\( e \\) l e 7 \\) l e l e7 \\) \\) l e7 \\) \\) l e 7 l e e 7 l e e e \\? 7 e e l \\) 2ee e3 l e \\) e l 5 l \\( l \\( 7 28 gh' \\( 3 l \\( 7 l l h7 \\( l h l g l g l l 7 l \\( l go 7 e l 1 l 0 1 l l 1 l 1 l \\( l h7 l l l q l rq l \\( l \\) 0 1h l \\( 0 1h g \\) h7 8 2 3 \\) \\( 0 7 8 \\) \\( 1 lv w x \\( lv \\( w x lv w \\? v w \\? vw \\? v w \\? v w \\? v w \\? v w \\? v w \\? 1 l x \\( l 1 p x l \\? gh' \\? \\? ii \\? \\? gh' \\? \\? ii \\( e \\) 7 \\) \\) \\( e \\) \\( \\) 7 8 \\) 7 \\) 8 7 8 \\) \\( e \\) \\( \\( \\) 3 0 \\( \\( \\) \\( \\) \\( \\( \\( \\) 3 j 7 \\( j 7 \\( \\) \\( 7 \\) \\( \\( \\) 0 7 '0 0 \\) \\( \\) \\) \\) \\( \\( \\) 0 \\) \\( 8 \\) \\( 2 8 \\) 3 2 3 \\( \\( 8 8 \\( 8 \\) 7 \\) \\) \\? h 2 38 23z l 23 \\? 2 2 2333z 23 \\? 2 2 2333z q \\) 23 \\? \\) k \\) k \\? 'd 8 87 0 \\( 8 \\( k \\) \\) 17 2 3z l2 3 g72 3 \\? q l q 2 3 \\? l 2 23 233 \\? 72 3 \\? 52 '5233 \\? 72 q 3 \\? \\) \\( \\( \\) \\) 8 \\) '2 3z \\) l \\( 6q \\) 2h 233 \\? l \\? \\( 2 \\) 3 \\? \\) \\) \\) \\) \\) 8 \\) \\) \\) 0 16 5 \\) \\( 8 \\) 'g 8 \\( \\) 'g \\( \\( \\) 0 c 7 \\) \\) b7 b \\( 17 0 b7 \\) \\) \\) zlj \\( k8 5lj k8 ljb7 \\) \\) \\) k8lj \\( k8 lj 2 \\( 3k l xl x lgh' \\( 2 38 7 bc z lj6 8 1 k z9 '9 z9 h'59 9 e e e e e 1 \\( e e e e e e e e e gh'9 \\( 0 c \\) h' 78 h' 7 \\) \\) \\) \\) \\( \\( \\( \\) 0 \\) 3 7 4 5 4 5 \\( 4 5 4 5 \\( '0 \\( \\( 4 5 4 5 38 2 \\( \\) \\) \\) 3 \\) h'5 h'5 7 \\( \\( 8 \\) \\( \\) \\? h \\) 7 v \\( l l \\( \\) 0 l wv wv l bw v l bw v l bw v l bw vb wvb \\( w \\? h \\( \\) 4 5 4 5 \\) 4 5 '0 \\( 8 h q \\) 2 3z l 23 \\? 2 2 33z \\( 6 23 \\? z \\( 623 \\? h \\( \\) h'5 h'5 8 \\( 6 23z l 2 23 233 \\? 72 \\( 66 \\) 3 \\? 52 '5233 \\? 72 q 3 \\? \\( 1h \\( 4 5 \\) 7 8 \\? h \\(", 
    "crawled_date": "2017-06-10T13:59:38.001931"
  }, 
  "55": {
    "api_url": "beanstream.com", 
    "progweb_url": "https://www.programmableweb.com/api/bambora-north-america", 
    "progweb_date": "11.01.2012", 
    "progweb_descr": "Make a payment using credit card, single or multi-use tokens, Interac Online,  Apple Pay, or funds transfer (ACH/EFT).  Record a payment received by cash or cheque.\r \r Bambora offers a bank-neutral gateway.", 
    "api_name": "Bambora, North America", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:38.005797"
  }, 
  "54": {
    "link4": "https://www.chasepaymentech.com/developercenter/", 
    "link1": "https://www.chasepaymentech.com/documents/orbital_virtual_terminal_users_manual.pdf", 
    "api_url": "chasepaymentech.com", 
    "link3": "https://www.chasepaymentech.com/payment_gateway.html", 
    "link2": "https://www.chasepaymentech.com/documents/resource_online_user_guide.pdf", 
    "progweb_url": "https://www.programmableweb.com/api/chase-paymentech", 
    "progweb_date": "11.01.2012", 
    "progweb_descr": "Chase Paymentech is an online payment system that provides credit card processing and online merchant services. They specialize in Card-Not-Present (CNP) payments for businesses of all sizes. For companies that sell abroad, they offer customized international processing solutions and guidance on accepting credit card payments overseas. For small or growing merchants, they can provide assistance with the payment process and help plan for expansion.  The Chase Paymentech payment system is programmatically accessible using SOAP calls, which facilitate its integration with users' software and online stores.", 
    "api_name": "Chase Paymentech", 
    "progweb_cat": "Payments,Enterprise", 
    "descr4": "know software know payments certify chase today add simple secure payments software 's self serve self service portal makes quick easy integrate applications chase apis sdks documentation technical specs platforms products available right certify real time start build test developer center able see results transactions real time see works n't work fix spot advertise campaign module solution certified use campaign module get company name post marketing materials pricing boarding instructions anything help chase representatives understand business use developer center register register become user developer center log 're existing user log catalog quick easy access documentation specifications need certify build sandbox get merchant id start coding able see certification transactions analyzed real time find works n't work fix spot congratulations get certification letter accept payments software campaign post marketing materials pricing boarding instructions anything get solution name help representatives understand business 're help sure platform certify \\? want make sure code working \\? log view faqs email integration consultant tech support group fill support form partner chase chase global leader payment processing partner merchants like provide best secure easy use payment solutions 've serving world 's largest brands new ecommerce start ups thousands small businesses 25 years industry leader processed 750 billion 36 billion transactions average 2 000 transactions per second serving merchants chase serves 300 000 merchants 500 000 locations including many world 's top brands international payments chase authorizes transactions 130 countries offices united states canada europe payment experts chase accepts dozens payment methods including paypal later green dot moneypak learn log home privacy policy terms use copyright paymentech llc rights reserved privacy policy terms use media media inquiries contact paul hartwick communication public affairs 302 282 3961 paul hartwick chase com", 
    "descr3": "united states canada english canada french europe germany contact us apply login merchant services solutions point sale payments point sale payments credit card machines pos systems online pos terminal iterminal ingenico ict250 verifone vx520 verifone vx680 online payments online payment processing products orbital payment gateway orbital managed billing orbital customer profile management orbital virtual terminal hosted pay page account updater mobile payment processing mobile credit card processing solutions chase mobile checkout methods payment methods payment accept payments debit cards international payments recurring payments electronic check \\( e check \\) purchase card paypal paypal credit fraud security safetech fraud security solutions safetech fraud tools safetech encryption safetech page encryption online reporting online reporting resource online paymentech online online chargeback management mobile dashboard orbital payment gateway orbital payment gateway enables online payment processing basic storefronts highly integrated e commerce systems merchants establish secure online transaction processing true one stop shop environment orbital suite products fully customizable select services add gateway account best meet business needs deploy interface fully commerce enable storefronts provide service support processing technology billing customer care orbital payment gateway save time money easy versatile implementation options protect customer data boost compliance efforts automate recurring payments improve cash flow enjoy peace mind seamless secure connectivity eliminate data entry errors retrieving pre existing customer profile maintain account file information quickly efficiently account updater accept wide range credit debit payment types including mastercard visa american express discover gift cards recurring payments orbital managed billing offer flexible payment solutions customers recurring payments run special promotions deferred installment payments collect regular fees orbital managed billing collect payments automatically regular schedule improve cash flow orbital managed billing also allows recycle declined authorizations capturing sales would otherwise lost even deliver e mail messages customers notifying key events payment cycle comprehensive set reports gives insight aspects flexible payment operations securely store customer data orbital customer profile management customer profile management module securely stores customer data site eliminating need key store account data repeat customer purchases customer profile created transactions processed using assigned profile number 's simple safe secure customer profiles created consumer transacting one 130 presentment currencies supported orbital payment gateway option also supports pci compliance initiatives flexible integration orbital payment gateway also provides multiple integration options best fit technical environment including integration leading hosted storefront e commerce service providers giving streamlined payment solution without need additional development contact us today get started accepting online payments get quote call us 800 708 3739 use simple form related links virtual terminal managed billing customer profile management account updater sales 800 708 3740 customer service 800 934 7717", 
    "descr2": "resource online user guide june 2013 resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 2 24 chase paymentech solutions makes warranty kind either expressed implied regard material including limited implied warranties merchantability fitness particular purpose chase paymentech solutions shall liable errors contained herein incidental consequential damages connection furn ishing performance use material information contained document subject change without notice unless specifically noted company product names street addresses telephone numbers persons referred within document either whole part completely fictional designed solely examples illustrate text document contains proprietary information protected copyright rights reserved part document may photocopied reproduced translated another language without prior written consent chase paymentech solutions copyright 2001 20 13 chase paymentech solutions llc chase paymentech solutions llc 14221 dallas parkway build ing two dallas texas 75254 \\( 800 \\) 824 4313 disclaimer statement information described document believed accurate reliable much care taken preparation however responsibility financial otherwise acce pted consequences arising use misuse material resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 3 24 table contents 1 introduction 4 1 2 application overview 4 1 3 getting help 4 1 4 system requ irements 5 1 5 security features 5 2 getting started 6 2 1 logging 6 2 2 navigating resource online 11 3 admin 15 3 1 introduction 15 3 2 accessing admin 15 3 3 user summary 15 3 4 add new u ser 17 3 5 custom setup type 18 3 6 edit user 19 3 7 delete users 20 4 bank lookup 21 5 file download 22 6 frequently asked questions 23 6 1 general information 23 6 2 support 24 resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 4 24 1 introduction 1 2 application overview resource online gives access transaction reconciliation data batch submissions authorizations settlements chargebacks much suite innovative secure w eb based products log pc internet connection 1 3 getting help many ways get help resource online self service user guides quick reference guides available chasepaymentech com merchant comm central portal resource online merchant services need assistance interpreting data please contact account executive call telephone number listed merchant statement technical support contact advanced product support g roup 24 hours day 7 days week difficulty accessing resource online components u advanced product support \\( aps \\) rtlwebreporting chasepaymentech com 1 800 2 54 9556 canada advanced product support \\( aps \\) torinternetcommerce chasepaymentech ca 1 800 265 5158 assistance training assistance understanding report data call 1 888 886 8869 \\( u \\) 1 800 265 5158 \\( \\) resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 5 24 1 4 system requirements following required accessing resource online pc 1 \\) internet service provider 2 \\) browser microsoft internet explorer 6 0 3 \\) valid email address delivery user name password information 4 \\) resource online u ser name provided chase paymentech 5 \\) acrobat adobe reader 5 0 higher \\( current version may downloaded free www adobe com \\) 6 \\) optional microsoft excel access 2000 7 \\) optional zip u nzip software shareware data file access \\( optional \\) 1 5 security features security serious business protect sensitive data resource online includes following 1 \\) web based security chas e paymentech operates secure w ebsite adheres security guidelines chase paymentech houses web application servers state art facility security meets exceeds industry standards 2 \\) encryption technology accessing information w ebsite application provide security exchanging information travels chase paymentech user 3 \\) password protection chase paymentech requires user assigned unique user name password allows user access data 4 \\) enhanced login security chase paymentech requires user select three challenge questions specify answers appropriate user addition user must select personal image security phrase must confirmed time user logs chase paymentech pplication lastly user select whether application prompted answer specified challenge questions verify identity logging unremembere devices 5 \\) account number masking account number masking feature masks portions cardholder bank account numbers prevent unnecessary exposure sensitive data resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 6 24 2 getting started 2 1 logging first time login enrolling enhanced login security 1 \\) address field internet browser enter http rol paymentech com visit chasepaymentech com merchant login page select resource online click go button 2 \\) secure login page displays enter user name provided chase paymentech enter user name field click login 3 \\) user name submitted valid second secure login page displays enter appropriate password password field click submit note passwords passwords case sensitive click forgot pass word link secure login page password assistance resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 7 24 4 \\) submitted password valid user previously completed enhanced login security process customize login process authentication set page displays 5 \\) select question dropdown select challenge question question 6 \\) personal image area displays default image click change image select image window click specify new image assigned user name note required fields selection user required field page complete successful enrollment ensure future resource online access resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 8 24 7 \\) personal image selected enter unique phrase security phrase field phrase need related anything particular even personal image subsequent logins submitted phrase display image knowledge fraud may committed technical support contacted prior logging 8 \\) want remember computer area select applicable radio button designate whether future use computer presently used recognized system yes remember computer radio button selected asked security questions next time log using machine 9 \\) fields complete selections made click submit f inish enrollment process note unrecognized devices enrolled user logs unrecognized computer device th ey presented one challenge questions prompted identify whether accessing site personal public computer resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 9 24 logging address field internet browser enter http rol paymentech com visit chasepaymentech com merchant login page select resource online click go button 1 \\) secure login page displays enter user name provided chase paymentech enter user name field click login 2 \\) submitted user name valid second secure login page displays enter appropriate password password field click login times system lock user user must reset password c licking forgot password contact ing technical support 3 \\) using different computer presented one previously selected security questions swer question correctly continue login process note changing password click enter password prompt password changes pop window display note assistance click need assistance logging change password contact technical support resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 10 24 logging log c lick log link top page resource online au tomatic timeout 15 minutes 15 minutes inactivity user name automatically logged security purposes note passwords passwords case sensitive click forgot password link secure login page password assistance note making changes modify enhanced login sec urity selections revisit authentication set page select change challenge questions personal image checkbox submitting password future logins note alert image displays personal image area phrase exactly selected enrollment process click reset password contact technical support resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 11 24 2 2 navigating resource online resource online home page resource online everything need available links menus top page 1 \\) home click return main page resource online 2 \\) global user navigation menu \\( users thes e options \\) log click exit application admin click access administration module resource online bank lookup click look bank contact information help click access online help function 3 \\) report module menus navigate menus generate reports addition body home page includes links subscribed modules provide alternative dropdown menus navigation language toggle canadian users select switch ca nadian french version application clicking fran ais link home page click english link toggle back english language version application link american exp ress oms u users click image open ne w page contain informatio n instructions enrollment online merchant services \\( oms \\) american express online reporting system option available chase paymentech canadian subscribers need help link click image open contact form complete submit information routed advanced product support \\( aps \\) group technical support quick links right side home page quick links adobe reader \\( pdf \\) versions user guides quick reference guides appendices reporting systems quick links include references resource online modules user subscribed know \\? box contains tips resource online applications note based individual user setup reporting module menus may available resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 12 24 instant dashboard instant dashboard alternative resource online home page subscribing small business u users provides snapshot daily sales settlement figures view detailed data payment process ing data select various reports searches recon solution virtual transaction manager menus 1 \\) home click return main page resource online 2 \\) global user navigation menu \\( users options \\) log click exit application admin click access administration module resource online bank lookup click l ook bank contact information help click access online help function 3 \\) report module menus navigate menus generate reports note based individual user setup reporting module menus may available resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 13 24 basic navigation instant dashboard comprised six panel panel option links top right corner menu contain following options settings allows modify date range widen narrow focus search enter date range wish see graph fro fields \\( use calendar icons \\) click go download options allow open save data panel pdf csv xls file download computer import system minimize body panel leaving panel heading option links close icon removes entire panel instant dashboard view panel refresh page internet browser click home resource online reports menu click panel name view detailed data report view panel quick search panel research specific transaction enter beginning cardholder account number cardholder number field select search last four checkbox enter last click search begin selected date range displayed search button modify date range click quick search panel menu option sel ect settings statements panel statements panel displays links five recent statements available multiple locations place cursor advanced options link view additional selections statement type hierarc hy merchant numb er view recon solution menu select statements click view tatements sales summary panel sales summary panel isplays recent batch totals day imme diately assess daily sales totals place cursor data points view da al sales amoun set tled amount \\( amount deposi ted bank account chase paymentech \\) non settl ed amount \\( amo unt deposi ted yo ur account third party \\) adj ustment amounts get additional data recon solution menu select daily report review click batch summary resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 14 24 settlement summary panel settlement summary panel isplays net amount deposited bank account day review net amount deposited account fees deducted place cursor data points view total number deposits paid chase paymentech total dollar amounts get additional data recon soluti menu select settlement review click settlement summary card summary panel card summary panel isplays daily sales totals payme nt brand see amounts hat paid third party place cursor bars view exact amoun get addi tional data n recon solution menu elect daily report review click card type summary recap summary panel recap summary panel p rovid e calculated summary merchant activity deposits adjustments allows yo u easily determine bottom line deposited bank account end day resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 15 24 3 admin 3 1 introduction users created chase paymentech may assigned admin rights user ability control access merchant information set users delete users change report access 3 2 accessing admin resource online home page click admin lin k top page 3 3 user summary user summary page displayed shows current user accounts access merchant information resource online note passwords may changed individual user clicking forgot password link login page resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 16 24 table user summary field descriptions field description organization assigned chase paymentech resource online login created internal purposes user name user resource online login access level name hierarchy level user access hierarchy structure allows larger merchant accounts easily segmented view separate combined business levels email address email address individual user admin indicates whether user admin rights bility create additional users change rights report access users delete users edit clicking edit link user allows admin user modify settings user applications clicking view link use r allows admin user view change resource online applications user access resource online application access user must contact chase paymente ch assistance delete selecting checkbox flags particular user account deleted delete selected users button clicked add new user clicking button allows admin user add new resource online users organization delete selected users clicking button deletes users delete checkbox selected resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 17 24 3 4 add new user admin users ability add users grant access merchant reports within resource online default new user sa report access admin user b ut admin user also create new users custom set reports 1 \\) click add new user button user summary page 2 \\) define user page c omplete fields new user 3 \\) click next create user name click cancel clear form return user summar page 4 \\) new user receive emails containing user name link resource online login page password access 5 \\) additional user created user summary page displays new user listed changes required review edit user section assistance table add new user field descriptions field description organization assigned login created internal purposes user id user name created additional login user name must unique value limited 7 70 alphanumeric characters must contain spaces special characters consist email address user name case sensitive first name first name individual user last name last name individual user e mail email address individual user verify e mail enter email address individual user discrepancy two email addresses entered three red asterisks appear right field note value entered user name available use another value must entered user name must unique chase paymentech database resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 18 24 setup type determines wh ether new user name report access admin user options include default choose option new user name report access admin user custom choose option new user name di fferent rights different report access admin user 3 5 custom setup type 1 \\) custom setup type selected add user process additional pages displayed customize access reports visible individual user 2 \\) select level page displays hierarchy level new user name 3 \\) click next 4 \\) select deselect reporting modules user may access changes required click done checkbox left application module name selected user access module 5 \\) rep orting modules numerous levels reports provide ability customize specific reports displayed user customize access specific reports individual user click customize button next reporting module name 6 \\) sele ct deselect reports clicking checkbox left report name according access granted individual user save changes click save button cancel changes return add report groups page click cancel button 7 \\) complete changes application access individual report access click done button add report groups page 8 \\) user summary page displays changes needed return edit user section assistance table add report groups field descriptions field description organization assigned chase paymentech resource online login created internal purposes user name user name resource online login module name name module organization receives reports resource online checkbox allows admin user define report modules individual user may access options incl ude virtual transaction manager recon solution gift card reports instant alerts merchant search options vary based resource online modules admin user access r eport g roup f ield applications pre defined group reports user access example admin user access recon access standard recon solution reports dd select pre defined group reports \\( applicable \\) user access note additional users created hierarchy level admin user note icon identifies report pre generated report automatically created user new user able view pre generated report next time report automatically created frequency created admin user resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 19 24 c ustomize clicking button allows admin user define access individual reports within reporting module use option provide user access subset reports pre defined report group pick choose reports user access r emove elected ems highlighting report groups list box clicking remove selected items link admin user c ancels access entire group reports done click button changes made 3 6 edit user edit information individual user click edit link user user summary page access resource online 1 \\) change necessary fields 2 \\) change settings ne cessary individual user save changes click save button cancel changes return user summary page click cancel button table edit user field descriptions field description organization assigned chase paym entech resource online login created internal purposes user user name individual currently logged resource online user id user name resource online login edited first name first name individual user last name last name individual user note user name cannot edited user name needs changed contact chase paymentech representative resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 20 24 em ail address email address individual user verify em ail address enter email address individual user discrepancy two email addresses entered three red asterisks appear right field lock user experiences five unsuccessful login attempts user name password click forgot password link login page reason lock user remember user name admin access page advise user appropriate user name instances admin must unlock us er selecting lock checkbox user able access system 3 7 delete users 1 \\) delete users select checkbox delete column individual removed selecting required checkboxes click delete select ed users 2 \\) remove selected users pop message displays asking confirm want delete selected users click ok delete cancel end operation without deleting 3 \\) updated user summary page displayed del eted user \\( \\) longer listed resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 21 24 4 bank lookup module resource online allows user retrieve bank contact information issuer particular credit card information helpful researching chargebacks retrievals acc e ssing bank lookup 1 \\) page within resource online click bank lookup link top page 2 \\) enter first six digits card number bank lookup field click search button 3 \\) report display specific information bank issued card information vary card issuer resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 22 24 5 file download file download module provides access raw data files behind reports shown resource online merchants would like receive data files co n tact chase paymentech representative subscribed individually reports acc e ssing file download 1 \\) page within resource online click file download top active page 2 \\) list subscribed files c lick file name file description column select file download report data date range listed date range file 3 \\) user prompted save file files made available download compressed \\( zip \\) comma delimited \\( csv \\) files based expected file size kind file downloaded noted file type column 4 \\) file download dialog box open file clicking open save hardware device clicking save 5 \\) save file n save dialog box select appropriate destination folder enter file name file name field click save finished 6 \\) navigate open saved file resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 23 24 6 frequently asked questions 6 1 general informatio n 1 \\) protect account information \\? memorize password write log application finished viewing data away pc protection resource online automatically log users afte r 15 minutes inactivity share logon information others 2 \\) forget user name \\? contact advanced product support 1 800 254 9556 \\( u \\) 1 800 265 5158 \\( canada \\) 24 hours day 7 days week assistance 3 \\) forget password \\? click forgot password link logon page required confirm email address user name emailed temporary password within approximately 15 minutes logged successfully prompted change temporary password cannot remember email address user name assigned logon contact advanced product support 1 800 254 9556 \\( u \\) 1 800 265 5158 \\( canada \\) 24 hours day 7 days week 4 \\) password expire \\? yes passwords expire every 90 days upon expiration prompted enter new password 5 \\) logon information case sensitive \\? yes user name case sensitive password case sensitive 6 \\) logon locked unsuccessful attempting log \\? yes five unsuccessful attempts user account locked contact advanced product support 1 800 254 9556 \\( u \\) 1 800 265 5158 \\( canada \\) 24 hours day 7 days week assistance 7 \\) automatic user time \\? yes logged accessed application 15 minutes automatically logged security purposes 8 \\) long files remain file download area \\? files remain file downloa area 90 days time automatically deleted regardless whether file downloaded 7 \\) save panel graphs use presentation share others \\? resource online ability let save copy panel could use separate screen capture tool press print screen key copy image editor download option export data microsoft excel generate charts graphs resource online user guide 06 201 3 resource online user guide 2013 chase paymentech solutions llc rights reserved 24 24 6 2 support 1 \\) find information reports \\? separate resource online reports user guide available lists reports offered within tool well descriptions data elements 2 \\) need help application \\? need technical assistance module u users contact advanced product support rtlwebreporting chasepaymentech com call 1 800 254 9556 24 hours day 7 days week canadian users contact torinternetcommerce chasepaymentech ca call 1 800 265 5158 24 hours day 7 days week need training help interpreting data contact merchant services 1 888 886 8869 \\( u \\) 1 800 265 5158 \\( canada \\) 3 \\) contact advanced product support \\? problem accessing http rol paymentech com forgotten user name problems accessing reports modules home admin bank lookup file download pages need assistance printing exporting data need ass istance using special features application receive unexpected error message 4 \\) contact chase paymentech account executive merchant services \\? need assistance understanding data provided resource online reports would like subscribe additional reporting modules questions issues merchant reporting hierarchy set access levels need training application", 
    "descr1": "orbital virtual terminal user guide august 2010 version 4 2 orbital virtual terminal version 4 2 page 2 214 orbital gateway web orbital integration library orbital gateway support 1 866 645 1314 gatewaysupport chasepaymentech com orbital virtual terminal user guide version 4 2 august 2010 2009 chase paymentech solutions llc rights reserved document contains information proprietar chase paymentech solutions llc information may reproduced way shared third party without written permission chase paymentech solutions llc materials contained within provided agreement processing financial exchange partners information materials trademarks product names property respective owners may covered additional copyrights brand names product names used document trade names service marks registered trademarks respective owners information features contained subject change without notice revision history date version action description 07 20 05 vt 3 0 original creation original creation 11 05 05 vt 3 2 add new reporting functionality 11 05 05 vt 3 2 change different logon page 11 05 05 vt 3 2 add new multi merchant logon 11 05 05 vt 3 2 add new reporting admin 11 05 05 vt 3 2 add new general admin 11 05 05 vt 3 2 change different purchase card prompt 06 01 06 vt 3 5 change new logo gateway support e mail address 06 01 06 vt 3 5 add new order purchase card level iii section open batch purchase card level iii section purchase card iii admin section 01 31 07 vt 3 10 change updated screenshots 01 31 07 vt 3 10 add added vt file import section new profile features \\( auto suggest reuse \\) 02 26 08 vt 4 0 add added managed billing cardholder e mail service authorization recycle sections 06 03 08 vt 4 1 change expanded information scheduled reports managed billing profiles authorization recycling gift card language added 07 09 09 vt 4 1 1 reformat put new template modified style usability 08 09 10 vt 4 2 add added account updater partial authorization information orbital virtual terminal version 4 2 page 3 214 table contents common tasks 9 list tables 10 use guide 11 read guide 11 organization guide 11 related docu mentation 11 's new release 12 using pdf versio n guide 12 conventions used guide 12 chapter 1 introduction 14 features benefits 14 payment method tools 14 auto settle feature 15 duplicate checking 15 security features 15 profiles naged billing 16 merchant selectable response \\( msr \\) 17 authorization recycling 17 reporting 17 data storage 18 24 hour techni cal support 18 merchant quirements 18 setup process 18 chapter 2 getting started 19 initial account setup 19 user ids passwords 19 authorized cont act security 19 functional ccess secu rity 20 login passw ord deliv ery 20 accessing vi rtual terminal 22 overview vt usage 24 user terface 25 searching 27 using online help 29 batches 29 chapter 3 working new orders 30 processing credit card purcha se \\( authorization capture \\) 30 orbital virtual terminal version 4 2 page 4 214 processing cred card refund 34 processing prio r authorization 36 processing accoun verification 39 processing electron ic check transaction 41 processing uk maestr solo transaction 44 processing european direct debit 48 processing bill later purchase 50 processing bill later refund 53 processing pinless debit transaction 54 advanced features transaction processing 56 use profiles 57 add profiles 58 add managed billing 58 selecting soft descriptors 58 chapter 4 working open batch 59 searching transactio n op en batch 59 results output 60 viewing transa ction details 62 adding profile 65 viewing order hist ory \\( audit trail \\) 66 marking successful auth orization fo r capture 67 unmarking captur ed transaction 67 adjusting purchasi ng card data 68 voiding tr ansaction 69 settling marked capture credit forc e transactions 71 splitting transaction separate shipments 72 chapter 5 reviewing post settlement data 76 searching fo r batches 76 results output 76 reviewing closed pending batch 79 reviewing rejected batch 80 viewing transaction closed pending rejected batch 82 searching transactions 83 results output 84 viewing transa ction details 86 adding profile 88 initiating credit order \\( qui ck credit \\) 89 viewing order hist ory \\( audit trail \\) 90 orbital virtual terminal version 4 2 page 5 214 chapter 6 administering virtual terminal 92 profile management 92 configuring acco unt updater 92 schedule au requests 95 au default merc hant number 96 configuring automatic e mail messages ca rdholders 97 setting preferences managed billing 101 setting preferences pinless debit 101 setting preferences au thorization recycling 102 setting preferences related gift card redemptions 103 partial redemption au authorization 103 remaining balance capture setting 103 setting general preferences 104 purchase card prompt mark fo r capture 106 view enter ca rd nu mber 107 remove auth au th capture button 107 mandatory avs 107 two step settlem ent process 107 auto settle 107 attempt authorization versal voiding 108 partial authorization 108 selecting purchasing card 3 units measure 109 specifying information appear receipts 109 configuring sche duled reports 111 card account truncation 111 scheduled reports 111 demand reports 114 chain level reports 115 selecting response codes automatically decline 116 setting preferences fo r soft descriptors 118 salem su pport 119 pns tampa support 120 setting desc riptors 120 chapter 7 working reports 124 reports 124 locating reports 124 retrieving sa ving reports 125 chapter 8 working profiles 126 profiles managed billing 126 orbital virtual terminal version 4 2 page 6 214 creating profile 126 creating profile distinct action 126 creating profile pr ocessing tr ansaction 129 locating existing profile 131 search admin profile management 131 search new order 132 using profile transa ction 133 editing profile 134 profile status 135 change log 137 chapter 9 managed billing 139 billing schedule 139 scheduled billings 145 completed billings 148 change log 148 chapter 10 working purchasing cards 150 entering purchasing card data purchase 150 entering purchasing card data fo r purchase card credit refund 155 chapter 11 working gift cards 157 merchant acco unt set 157 processing new gift card transaction 157 performing gift ca rd authorization 158 performing gift card sale \\( redemption \\) 159 performing pr ior rede mption 159 adding funds gi ft card balance 160 performing pr ior add value 160 refunding purchase va lue gi ft card 161 viewing balance available gift card 161 gift card activation 162 activating sing le gift card 162 activating block gift cards 164 reactivating gift card 166 deactivating gift card 166 prior activation gift card 167 working gift card batches 167 viewing current transa ctions \\( open batch \\) 168 viewing historical transa ctions \\( closed batches \\) 173 chapter 12 importing file 179 creating csv file 179 orbital virtual terminal version 4 2 page 7 214 importing csv file 179 checking status c sv file 180 csv generated reporting 180 limitations f ile import feature 180 appendix partial authorizations 181 appendix b codes reference 183 response codes 183 avs response codes 190 cvv2 cvc2 cid sponse codes 191 appendix c merchant selectable response codes 193 avs response codes 193 verification sponse codes 194 appendix profile response codes 196 appendix e overview credit card processing 198 cred cards \\? 198 paymen processing \\? 198 credit card tr ansaction flow 198 appendix f split shipment process flow 200 appendix g auto e mail cardholder text 201 cardholder e mails 201 expiring card 201 transaction declined 201 successful billing 201 amount charged 202 account closed 202 new account number exp date 202 merchant e mails notification non distributed cardholder e mail 203 expiring card 203 transaction declined 203 successful billing 204 amount charged 204 appendix h reporting 205 open batch reports 205 review batc h reports 205 profile queries 207 event driven reports 208 scheduled reports merchant level 209 scheduled reports merchant level managed billing 212 orbital virtual terminal version 4 2 page 8 214 scheduled reports chain level 212 orbital virtual terminal version 4 2 page 9 214 common tasks log virtual te rminal 22 process basic cr edit card purchase 31 process cred card refund 35 locate ge nerated report 124 retrieve save reports 125 create profile 126 process transaction 134 edit profile 134 change profile status 136 delete profile 136 view history profile changes 137 establish merchant leve l recurring bi lling pattern 140 establish merchant leve l recurring bi lling pattern 141 establish orde r number pa rameter 143 add deferred managed billing profile 143 remove managed billing prof ile level 147 remove managed billing mercha nt level 147 view history profile changes 148 orbital virtual terminal version 4 2 page 10 214 list tables table 1 orbital gateway support ce nter contact details 18 table 2 response co de values 183 table 3 avs response code values 190 table 4 cvv request respon se code values 191 table 5 avs response codes msr 193 table 6 verification respon se codes msr 194 table 7 profile respon se codes 196 orbital virtual terminal use guide version 4 2 read guide page 11 214 use guide guide describes chase paymentech orbital virtual terminal web application describes features functionality application provides step step instructions tasks perform read guide use documentation job involves using orbital virtual terminal application documentation assumes familiar following general credit card payment processing concepts organization guide information documentation presented follows chapter 1 introduction provides introductory information orbital virtual terminal overview software de scriptions main features links documented guide chapter 2 getting started provides information procedures starting shutting software basic use interface using online help chapter 3 working new orders provides information process various transactions using different methods payment chapter 4 working open batch provides information view unsettled transactions screen via reports chapter 5 reviewing post settlement data provides information view settled transactions screen via reports chapter 6 administering virtual terminal outlines various administrative functions performed via vi rtual terminal based user privileges chapter 7 working reports describes reports available merchants configure scheduled reports generate demand reports chapter 8 working profiles provides information create edit use profiles transaction processing chapter 9 managed billing provides information set managed billing merchant profile level chapter 10 working purchasing cards provides instructions process transactions containing purchasing card level ii iii information chapter 11 working gift cards describes gift card related transactions processed via virtual terminal along vi ew generate gift card reports chapter 12 importing file provides instructions import csv file processing transactions related documentation following chase paymentech documentation contains information may need refer orbital virtual terminal use guide version 4 2 's new release page 12 214 orbital credit card processing 101 guide managed billing supplemental guide inclu des profile management information orbital virtual terminal quick reference guide documents available orbital integration library may also need refer certificat ion documentation platform \\( salem tampa \\) merchant account uses tampa merchants document available orbital integration library salem merchants contact certification analyst 's new release release 4 2 orbital virtual terminal provides following new modified features new features several new features added guide including account updater partial authorization functionality info rmation features please see individual chapters new reports new reports may added rele ase always access reports related features enabled merc hant id description individual report see help topics available reporting admin page using pdf version guide guide designed viewed electronic form portable document format \\( pdf \\) file use adobe reader view file electronically make use following features document open bookmarks panel left side adobe reader window view expandable collapsible outline document click bookmark jump topic click hyperlink \\( indicated blue underlined text adobe reader link \\) navigate web page related text hyperlinks internet pages defined open new browser window click cross reference \\( indicated light blue italic text \\) jump indicated location document items table contents table figures table tables beginning guide also clickable hyperlinks locations document pdf file enabled commenting ad obe reader download pdf file computer use adobe reader commands available tools comment markup add electronic post notes highlights circles arrows elements wherever wa nt save file conventions used guide help find important information guide uses following conventions convention indicates orbital virtual terminal use guide version 4 2 conventions used guide page 13 214 convention indicates bold names elements user interface menus buttons options monospaced code file names directory paths screen computer output bold monospaced text type exactly shown type xyz order id box italics book titles new words terms words emphasized bold italic terms defined glossary note notes contain additional explanation tip tips contain shortcuts special information caution cautions contain information avoid errors warning warnings contain information potentially damaging actions read carefully see also cross references tell find additional information topic references may also occur main body text click blue text jump referenced section orbital virtual terminal chapter 1 introduction version 4 2 features benefits page 14 214 chapter 1 introduction orbital virtual terminal internet based point sale terminal key entered transactions includes full suite feat ures authorize settle card present \\( cnp \\) transactions transaction data applications hosted securely chase paymentech servers chase paymentech two locations tampa salem configured different platform virtual terminal merchants configured either tampa platform salem platform platforms significantly similar however salem platform additional features supported tampa platform guide define differences unsur e platform b een assigned please contact account representative gateway support center need access orbital virtual terminal internet connection web browser supports 128 bit encryption dditional hardware telephone lines technical integration required using online terminal enter order information initiate authorizations settlements refunds transactions orbital virtual terminal allows different security levels among users well multi user access additionally credit card data masked unless specify full credit card number visible features benefits orbital virtual terminal serves direct interface chase paymentech allowing authorizations captures credits voids voice authorization captures end day settlement virtual terminal \\( vt \\) also provides tools merchant selectable response \\( msr \\) customer profile manage ment managed billing authorization recycling additional tools explained later sections payment methods tools orbital virtual terminal supports full range payment methods offered chase paymentech including american express bill later discover card jcb mastercard visa gift card \\( formerly flexcache \\) pinless debit uk maestro solo electronic check transactions european direct debit \\( eudd \\) orbital virtual term inal also supports purchasing card level ii level iii data input \\( including american express level ii data salem merchants \\) chase paymentech supported international currencies soft descriptors available merchants supported salem host orbital virtual terminal chapter 1 introduction version 4 2 features benefits page 15 214 orbital virtual terminal includes support following fraud protection components address verification service \\( avs \\) \\( us \\) american express card identification number \\( cid \\) \\( us international \\) visa card verification value 2 \\( cvv2 \\) \\( us international \\) mastercard card validation code 2 \\( cvc2 \\) account verification salem fraud filters \\( offered directly th rough virtual terminal please refer account executive details \\) currently orbital virtual terminal support private label chase paymentech flexible payment options unsupported features may included future product upgrades auto settle feature captured transactions may settled manual ly auto settle feature feature permits selection specific ti captured transactions settled merchants select auto settle time time zone setu p process settlement times available convenient 15 minute intervals auto settle selected initial setup process may implemented later date contacting gateway support center configuring via virtual terminal admin menu tab duplicate checking precaution vt checks duplicate transactions possible duplicate order detected vt notify force choose continue transaction cancel transaction account number amount order id used determine transaction may duplicate security features authorized contact security level security addresse permissions regarding esta blishment change user ids passwords chase paymentech stores merchant authorized contact list system used verify th e identity caller requesting change ensure caller rights make chan ge additionally e mail addresses filed want receive e mail alerts rega rding upcoming maintenance releases advanced transaction security authorized contact may establish approve new user associated transaction processing authority fo llowing vt user roles available everything allowed authorize mark capture split void credit reversal orbital virtual terminal chapter 1 introduction version 4 2 features benefits page 16 214 settle read functional access security additional permissions limitations various functionalities assigned per user basis orbital gateway support center direction authorized contact examples include reporting administration profile manageme nt reporting access application security virtual terminal provides four separate wa ys protecting access transaction data two tiered logon process users must enter user name password access rescinded five incorrect logon attempts five login attempts invalid user password combination login suspended may call orbital gateway support center lo gin reset must able authenticate multiple levels user access primary contact receives user name password separate e mails security reasons thes e normally sent several hours apart primary contact person contact orbital gateway support center add delete change users ssign multiple levels access masking credit card number user assigned rights determine users view full credit card numbe r restricted truncated view card number truncated view se e last 4 numbers credit card number masking default setting transaction security data protected indu stry standard secure socket layer \\( ssl \\) communication protocol data transmissions encrypte 128 bits production network protected series firewa lls prevent unauthorized access servers profiles managed billing orbital gateway includes functionality called customer profile management allows cardholder data stored orbital gateway use vt create manage profiles using vt process transaction use profile id populate information transaction override stored information needed fill additional information stored profile individual transaction released march 2008 managed billing extends capabilities profiles include recurring installment deferred billing using feature merchants configure future payments orbital gatewa initiate desired date benefits number potential benefits using profiles feature simplifies transaction processing making transaction request one simply finds profile id \\( sometimes called customer reference number \\) fills missing information orbital virtual terminal chapter 1 introduction version 4 2 features benefits page 17 214 eliminates risk since eliminates need store sensitive information merchant customer database rchants focus business chase paymentech focus secure ly processing transactions eliminate data entry errors retrieving pre existing profile validating data risk keying wrong customer information credit card number eliminated setup information orbital gateway merchant id support profiles must configured orbital system several different co nfiguration parameters must set merchants also wishing use managed billing support recurring stallment deferred charges must managed billing feature enabled account merchant contract addendum required enable managed billing feature interested merchants contact sales representative ccount executive see also information crea ting using profiles see working profiles merchant selectable response \\( msr \\) merchant selectable response protects mercha nts fraud providing ability control risk exposure merchant select able response merchants configure orbital system decline transactions based predefined rules avs \\( address verification service \\) cvd \\( card verification data \\) authorization recycling authorization recycling provides automated reauthorization attempts transactions receive declines specifically soft declines issuing banks reporting financial reporting orbital virtual terminal transactions appear standard chase paymentech financial reports transaction level detail viewed via virtual terminal online reporting tools paymentech online resour ce online please contact orbital gateway support center chase paymentech account executive additional information reporting transaction reporting transaction level reporting based activity pr ocessed virtual terminal also available merchants reporting retr ieved based asso rtment parameters including open unsettled transactions closed settled transactions scheduled reporting merchants using features profile nagement enhanced reporting available reports scheduled daily weekly monthly frequency e mailed sent via sftp retrieved via virtual terminal interface orbital virtual terminal chapter 1 introduction version 4 2 24 hour technical support page 18 214 demand reporting many scheduled reports also available per de mand basis merchants may select date range parameters report choice retrieved via virtual terminal data storage time users view transactions either pending status known open batch processed status found review menu tab additionally reports 11 months history run querying sele cted data parameters available pdf formats csv files viewed screen 24 hour technical support around clock application support available vt users via telephone e mail please call e mail question support associates always available assist table 1 orbital gateway support center contact details phone 1 866 645 1314 e mail gatewaysupport chasepaymentech com merchant requirements technical orbital virtual terminal runs computers browsers support 128 bit encryption user may connect vi type internet access \\( dial dsl cable t1 \\) minimum browser operating system requirements windows nt 2000 98 xp internet explorer 6 0 netscape 6 2 windows nt 2000 98 internet ex plorer 5 5 netscape 4 79 macintosh os x internet explorer 5 0 new merchants must complete chase paymentech merchant application receive processing approval setup process details regarding setup process plea se contact chase paymentech account executive sales representative orbital virtual terminal chapter 2 getting started version 4 2 initial account setup page 19 214 chapter 2 getting started orbital virtual terminal provides many features allows enable disable best meet business needs va lue added functions enabled based various choices made time merchant account set permissions authorities gr anted user simplify learning vt processing transactions enabled functions visible users example rchant set gift card \\( formerly flexcache \\) transaction processing associated subject tab related pages appear merchant enabled processing gift card transactions tab associated pages visible users consequently manner merchant account established administrative functions selected user permissions assigned influence pages presented well information choices available note guide describes features available vt using merchant account features enabled \\( therefore visible \\) merchant account may features enabled may see menus commands pages described illustrated guide initial account setup order begin using virt ual terminal must get set merchant account upon successful setup issued user id password logging virtual terminal please contact account representative sales representative information getting set virtual terminal user ids passwords prior accessing virtual terminal merchant setup process chase paymentech solutions orbital virtual terminal must completed part process selections made payment meth ods tools used additionally various security decisions regarding users registered authorized contact security merchant must provide authorized cont act list chase paymentech used verify identity caller requesting change virtual terminal ensure caller correct privileges make change e mail addresses registered individuals designated receive e mail alerts garding upcoming maintenance releases following authority options also known admin rights available users minimally one user must give n highest level permissions add delete reset user ids add delete reset user ids specify contacts receive e mail notifications authorize enablement various orbital gateway functionalities determine display structure customer account number reset passwords users reset password user right permission orbital virtual terminal chapter 2 getting started version 4 2 user ids passwords page 20 214 functional access security individual user may assigned additional pe rmissions limitations orbital gateway help desk direction merc hant authorized contact please note identified functionality must first enabled merchant level account representa tive assist mask account numbers reporting admin general admin profile management roles user see customer profiles reference customer profiles user role user may use view customer profiles administrator role user create update view use delete customer profiles msr \\( merchant selectable response \\) admin gift card also known flexcache soft descriptor vt file import purchase level iii administration reporting access receipt admin managed billing admin auth recycling admin auto e mail service admin pinless debit admin account updater admin note user rights may changed contacting lpdesk authorized contact must request change login password delivery user sent two e mails one containing temporary password one user id set chase paymentech solutions information user may login virtual terminal entered user id temporary password prompted reset password orbital virtual terminal chapter 2 getting started version 4 2 user ids passwords page 21 214 password guidelines new password must minimum 8 ch aracters least one alpha one numeric character number may first position new password must different previous password \\( \\) special characters may used remember password case sensitive three login attempts invalid user password combination login revoked reset login authorized contact must call e mail gateway support center provide following information merchant number division number user name company name phone number primary address forgotten password event password forgotten click forgot password hyperlink prompted user id e mail address upon su ccessful entry information temporary password e mailed entered user id temporary password prompted reset password orbital virtual terminal chapter 2 getting started version 4 2 accessing virtual terminal page 22 214 accessing virtual terminal since orbital virtual terminal web application access via web browser log virtual terminal 1 open browser window navigate https secure paymentech com login tip viewing guide electronically simply click hyperlink open new browser window chase paymentech login page orbital virtual terminal chapter 2 getting started version 4 2 accessing virtual terminal page 23 214 figure 1 logging virtual terminal note security reasons vt automatically lo g 20 minutes inactivity indicated page 2 enter userid password click login 3 password expi red prompted define new password vt passwords expire every 90 days see user ids passwords information password rules 4 user id associated multip le merchant accounts prompted select merchant id want work vt merchant id associated one currency process transactions multiple currencies one merchant id currency select merchant id currency want wo rk switch another without logging vt orbital virtual terminal chapter 2 getting started version 4 2 overview vt usage page 24 214 figure 2 choosing merchant id 5 select desired merchant id application opens new order auth page overview vt usage web application virtual terminal disp lays function separate page \\( example figure 3 shows page use submit new purchase transaction authorization authorization capture \\) page presents set similar features illustrated described orbital virtual terminal chapter 2 getting started version 4 2 overview vt usage page 25 214 user interface figure 3 parts vt user interface vt session links top page links click affect vt session figure 4 vt session links user associated multiple mercha nt ids enabled switch another merchant id without logging vt orbital virtual terminal chapter 2 getting started version 4 2 overview vt usage page 26 214 menu access vt functions vt menu bar available top page select items menu access functions perform vt note merchant account may features enabled may see menus commands pages described illustrated guide figure 5 vt menu bar information merchant id log vt either immediately set use merchant id associated user id prompted select merchant ids associated user id want use information merchant id using displayed page vt figure 6 information merchant id note area displays currency asso ciated merchant id using orbital gateway consider monetary amounts enter vt pages currency pages tabs several pages accessed new order menu contain tabs include additional information related transaction particular optional purchasing card data orbital virtual terminal chapter 2 getting started version 4 2 overview vt usage page 27 214 figure 7 tabs page enter optional purchasing card data related transaction processing simply click tab fill fields command buttons bottom page command buttons use act data entered selected page example use various command buttons submit transaction processing run search retrieve report save configuration changes clear ch anges entered figure 8 command buttons page symbols used different pages required field must specify value field conditionally required field generally field required specify value another \\( related \\) field note applies field look right side page explanation online help available see using online help information field related customer profile nagement feature merchant account configured feature fields visible searching pages accessed via open batch review reporting import file menus search transaction batch report imported file orbital virtual terminal chapter 2 getting started version 4 2 overview vt usage page 28 214 figure 9 searching open batch search functionality work case 1 select enter values certain fields specify yo ur criteria search fields enter partial value \\( indicated \\) one characters item begins example could search transactions order begins 82 criteria enter fewer results need sift find looking example searching void transactions order begins 82 transaction amount 100 200 probably return fewer results searching transactions order begins 82 2 click search get results match criteria matches see 3 use command buttons displayed results perform actions orbital virtual terminal chapter 2 getting started version 4 2 overview vt usage page 29 214 using online help certain fields entire page related online help th ese identified icon click icon open separate window containing extra text text may expand information provided guide include information updated often guide figure 10 sample online help window close button bottom lp text close window done batches time submit transaction one features available new order menu transaction added open batch one batch open time interact th ese transactions using features available open batch menu tab batch submitted settlement \\( see working open batch \\) open batch submi tted \\( automatically manually \\) settlement batch closed new batch opened subsequent transactions interact closed batches using features available review menu tab \\( see reviewing post settlement data \\) note transactions cannot settled remain open batch orbital virtual terminal chapter 3 working new orders version 4 2 processing credit card purchase \\( authorization capture \\) page 30 214 chapter 3 working new orders use options new order menu process variety transactions exception gift card procedures using option included chapter order appear authorize processing credit card purchase \\( authorization capture \\) credit processing credit card refund force processing prior authorization account verification processing account verification electronic check processing electronic check transaction uk maestro solo processing uk maestro solo transaction european direct debit processing european direct debit bml authorize processing bill later purchase bml credit processing bill later refund pinless debit processing pinless debit transaction note methods payment enabled merchant visible credit card bill later transactions different options \\( thus different application pages \\) used debit paym ent credit refund transactions electronic check uk maestro solo pinless debit transactions use corresponding option access single page submit payment credit transactions caution may internal standards limitations data \\( maximum transaction amount 5000 00 ship orders florida georgia alabama \\) procedures \\( enter customer phone number credit card purchases always enter card verification number \\) supplement override procedures guide note configured merchant create profiles storing cardholder information use profile fill many fields transaction always override values individual transaction see working profiles information processing credit card purchase \\( authorization capture \\) use new order authorize option open new order auth page enter information credit ca rd purchase transaction perform authorize capture authorization action description auth requests authorization transaction use option items transaction billed later date time shipment example auth capture requests authorization transaction receipt authorization marks transaction capture transaction included next settlement cut orbital virtual terminal chapter 3 working new orders version 4 2 processing credit card purchase \\( authorization capture \\) page 31 214 new order auth page four tabs recommended data required credit card purchases optional data optional credit card purchases purchasing card data ii optional purcha sing card purchases purchasing card data iii optional purcha sing card purchases note configured proc ess purchasing card transactions purchasing card tabs visible information related purc hasing card data contained working purchasing cards process basic credit card purchase 1 necessary select new order authorize open new order auth page recommended data tab displayed figure 11 entering purchase data credit card types accepted list contains methods payment configured merchant account may processed page list informational purposes orbital virtual terminal chapter 3 working new orders version 4 2 processing credit card purchase \\( authorization capture \\) page 32 214 note card number expiration date amount order id fields required customer address formation \\( particularly postal code \\) may required based merchant settings tip fields recommended data tab required considered best business practice submit every tran saction avoid higher interchange fees visa transactions merchants minimum submit 5 digit postal code avs transactions submitting card verification co de offer additional chargeback protection 2 card number box enter credit card number include spaces note configured ente r number system recognizes purchasing card \\( based card association 's published bin ranges \\) enter information purchasing card data tabs vt prompts enter purchasing card data submit transaction see entering purchasing card data purchase information 3 boxes next expiration date select month year card expires 4 enter total amount transaction amount must include taxes fees \\( shipping handling \\) purchase maximum amounts allowed orbital gateway vary based card type platform \\( salem tampa \\) may furthe r limited merchant account refer internal processes mini mum maximum amounts enter 5 enter card verification visa mastercard discover 3 digits found signature panel reverse side credit card american express 4 digits printed embossed front cards american express card appears ri ght border card optima cards however appears left border card note american express cid works amer ican express account activated program american express contact american express directly information american express cid used beha ves differently mastercard visa cvc2 cvv2 matching cid value american express declines transaction cid match transaction approved assuming criteria met response values specific cid usage 6 order id box enter order number following internal guidelines unique number 7 enter customer address information entering non u address click non us address check box state field set non us country code field added select country list postal code field changes single box accommodate non u postal code formats 8 enter customer name customer phone number 9 enter order description 10 desired select optional data tab orbital virtual terminal chapter 3 working new orders version 4 2 processing credit card purchase \\( authorization capture \\) page 33 214 figure 12 entering optional da ta credit card purchase enter customer email address b tracking id box available internal tracking needs 11 want enter purchasing card data purchase skip enter purchasing card data purchase force 12 click auth request authorization auth capture request authorization upon receipt mark transaction capture transaction moved open batch queue response page indicating transaction approved declined displayed along transaction reference number figure 13 response purchase transaction approved orbital virtual terminal chapter 3 working new orders version 4 2 processing credit card refund page 34 214 responses approved transactions include approval code generally response code 00 approved salem merchants set fraud filters country fraud filter values may returned transactions possible values include accepted blocked suspect please refer account executive information salem fraud filters note view sample response page partially approved transactions see appendix partial authorizations figure 14 response purchase transaction declined declined transactions response code indicates reason decline 13 desired use buttons right side page print merchant customer receipts receipts indicate tran saction approved declined 14 click close return initial new order auth page processing credit card refund use new order credit option open new order credit page enter credit card refund transaction type transaction requires enter credit card information order id original transaction note card information order id find original transaction closed batch initiate refund described chapter 5 reviewing post settlement data orbital virtual terminal chapter 3 working new orders version 4 2 processing credit card refund page 35 214 process credit card refund 1 select new order credit open new order credit page recommended data tab displayed figure 15 entering refund information credit card types accepted list contains methods payment configured merchant account processed page note card number expiration date amount order id fields required 2 card number box enter credit card number used purchase include spaces 3 boxes next expiration date select month year card expires 4 enter amount credited credit card 5 enter order id purchase transaction 6 desired required internal processes enter order description 7 want enter purchasing card data skip entering purchasing card data purchase card credit refund 8 click credit submit transaction transaction moved open batch queue response page indicating transa ction credited displayed orbital virtual terminal chapter 3 working new orders version 4 2 processing prior authorization page 36 214 figure 16 response credit transaction approved note card number generally masked response 9 desired use buttons right side page print merchant customer receipts receipts indicate transaction declined 10 click close return initial new order credit page processing prior authorization use new order force option open new order force page force authorization authorization capture transaction purchase previously authorized manua lly phone type transaction similar credit card purchase allows enter approval code manual voice authorization note prior authorization transactio ns performed outside orbital gateway system orbital gateway cannot verify accura cy prior auth approval code supply although orbital gateway require enter prior auth approval code card company may require sett lement transaction action description force submits force transaction withou marking capture use option items transaction billed later date time shipment example force capture submits force transaction marks transaction capture process prior authorization capture 1 select new order force open new order force page orbital virtual terminal chapter 3 working new orders version 4 2 processing prior authorization page 37 214 recommended data tab displayed figure 17 entering informat ion prior authorization credit card types accepted list contains methods payment configured merchant account processed page note card number expiration date amount order id fields required customer address formation \\( particularly postal code \\) may required based merchant settings tip fields recommended data tab required considered best business practice submit every tr ansaction avoid higher interchange fees merchants minimum submit 5 digit postal code avs transactions submitting card verification code offer additional chargeback protection 2 card number box enter credit card number include spaces orbital virtual terminal chapter 3 working new orders version 4 2 processing prior authorization page 38 214 note enter number system recognizes purchasing card \\( based card association 's published bin ranges \\) enter information purchasing card data tabs vt prompt enter purchasing card data submit transaction see entering purchasing card data purchase information 3 boxes next expiration date select month year card expires 4 enter total amount transaction amount must include taxes fees \\( shipping handling \\) purchase maximum amounts allowed orbital gateway vary based card type platform \\( salem tampa \\) may furthe r limited merchant account refer internal processes mini mum maximum amounts enter 5 enter card verification visa mastercard discover 3 digits found signature panel reverse side credit card american express 4 digits printed embossed front cards american express card appears ri ght side card optima cards however appears left side card note american express cid works amer ican express account activated program american express contact american express directly information american express cid used beha ves differently mastercard visa cvc2 cvv2 matching cid value american express declines transaction cid match transaction approved assuming criteria met response values specific cid usage 6 order id box enter order number following internal guidelines 7 enter customer address information entering non u address click non us address check box state field set non us country code field added select country list postal code field changes single box accommodate non u postal code formats 8 enter customer name customer phone number 9 prior auth approval code box enter approval code prior authorization card company may require prior auth approval code settlement 10 desired select optional data tab enter customer email address b tracking id box enter unique tracking number send issuer authentication service authentication request message 11 want enter purchasing card data skip enter purchasing card data purchase force 12 click force force capture transaction moved open batch queue 13 desired use buttons right side response page print merchant customer receipts orbital virtual terminal chapter 3 working new orders version 4 2 processing account verification page 39 214 receipts indicate transaction declined 14 click close return initial new order force page processing account verification account verification feature allows verify accounts \\( e valid account number currently open account \\) without financially im pacting accountholder open buy example might verify account befo set recurring payments verify account 1 select new order account verification open new order account verification page figure 18 entering information verify account amount field automatically set 0 cannot modified note card number expiration date order id postal code fields required postal code allows avs verification include card verification also verify data account orbital virtual terminal chapter 3 working new orders version 4 2 processing account verification page 40 214 2 card number box enter credit card number include spaces 3 boxes next expiration date select month year card expires 4 enter card verification also verify data account visa mastercard 3 digit number found signature panel reverse side credit card card verification number diner 's club accounts 5 order id box enter order number following internal guidelines 6 enter customer address information entering non u address click non us address check box state field set non us country code field added select country list postal code field changes single box accommodate non u postal code formats 7 click verify submit transaction response page indicating transactio n approved declined displayed figure 19 response account verified note card number card verification generally masked response 8 desired use buttons right side response page print merchant customer receipts orbital virtual terminal chapter 3 working new orders version 4 2 processing el ectronic check transaction page 41 214 receipts indicate transaction declined 9 click close return initial new order account verification page processing electronic check transaction use new order electronic check option open new order electronic check page process electronic check verification validation purchase refund transactions note electronic check function available merchants processing salem platform verification means chase paym entech determines whether ecp transaction presented processe federal reserve system canadian payments association rification includes three checks 1 checks chase paymentech internal negative database determine account listed bad 2 checks notification change \\( noc \\) f ile see chase paymentech alerted new account information transaction 3 checks thompson file verify aba routing valid note verification determine th e funds available account us checking accounts undergo additional verification compares routing number account number information electronic check processing \\( ecp \\) transaction external negative file database file sides chase paymentech system updated daily note external negative file check perf ormed ecp transactions involving u bank account external negative file check fails account unpaid checks outstanding closed cause customer 's financial institution transactions fail external negative f ile check returned response code 519 negative file means account ap pears external negative file verification performed time submit transaction using validate validate capture button validation different validate va lidate capture includes three checks performed verification minus external negative file check validation performed every ecp transaction time settlement validation fails point transa ction logged rejected item located using options available review menu tab orbital virtual terminal chapter 3 working new orders version 4 2 processing el ectronic check transaction page 42 214 ecp transactions perform following operations action description validate u check runs verification proc ess including external negative file database canadian check runs verification checks determine ecp transaction presented processed canadian payments association capture performed transaction funded validate capture u check runs verification proc ess including external negative file database time settlement runs validation check successful funds withdrawn account canadian check runs verification checks determine ecp transaction presented processed canadian payments association successful funds withdrawn account upon settlement time lag verification settlement validation chec k performed funds withdrawn capture time settlement performs validation check successful withdraws funds account verification performed credit runs verification checks mmediately su ccessful returns funds consumer account settlement process electron ic check transaction 1 select new order electronic check open new order electronic check page orbital virtual terminal chapter 3 working new orders version 4 2 processing el ectronic check transaction page 43 214 figure 20 entering formation electronic check transaction note deposit account bank routing amount order id check holder name fields required account type may required based internal guidelines 2 enter deposit account account number contain 17 characters 3 enter bank routing us bank routing numbers contain 9 digits canadian bank routing numbers contain 8 digits spaces dashes proper formatting canadian bank routing number fffbbbbb fff refers financial institution bbbbb refers branch number note opposite order informat ion presented paper canadian check 4 enter total amount transaction amount must include taxes fees \\( shipping handling \\) purchase maximum amount allowed check transactions may limited merchant account refer inte rnal processes mini mum maximum amounts enter orbital virtual terminal chapter 3 working new orders version 4 2 processing uk maestro solo transaction page 44 214 5 order id box enter order number following internal guidelines 6 check holder name box enter name account holder 7 account type list select type account choices include consumer check consumer checking account consumer saving consumer savings account commercial check business checking account 8 enter postal code account holder postal code used create profile information enter transaction 9 desired select optional data tab enter customer phone number b enter customer email address c tracking id box enter unique tracking number 10 click command button action want take click validate validate capture notified immediately whether account passes fa ils verification checks figure 21 response ecp passed validation processing uk maestro solo transaction use new order uk maestro solo option open new order uk maestro solo page process purchase refund transactions great britain uk maestro solo debit cards note uk maestro solo function available merchants processing salem platform configured service please contact chase paymentech account representative wish accept uk maestro solo orbital virtual terminal chapter 3 working new orders version 4 2 processing uk maestro solo transaction page 45 214 uk maestro solo transactions perform following operations action description auth requests authorization transaction use option items transaction billed later date time shipment example auth capture requests authorization transaction receipt authorization marks transaction capture credit returns funds consumer account process uk maestro solo transaction 1 select new order uk maestro solo open new order uk maestro solo page orbital virtual terminal chapter 3 working new orders version 4 2 processing uk maestro solo transaction page 46 214 figure 22 entering formation uk maes tro solo transaction note card number expiration date amount order id fields required either issue number start date required available submit customer address formation \\( particularly postal code \\) may required based merchant settings tip fields recommended data tab required considered best business practice submit th em every transaction 2 enter name shown card 3 card number box enter large number across card card number contains 16 19 digits include smaller numbers bottom center card 4 boxes next expiration date select month year card expires orbital virtual terminal chapter 3 working new orders version 4 2 processing uk maestro solo transaction page 47 214 5 enter card verification 6 issue number box enter entire issue nu mber reads card including leading zeros card issue number must enter start date 7 boxes next start date select month year specified card issue number start da te available enter 8 enter total amount transaction amount must include taxes fees \\( shipping handling \\) purchase refer internal processes minimum maximum amounts enter 9 order id box enter order number following internal guidelines 10 enter customer address information country code automatically set great britain cannot changed 11 enter customer name customer phone number 12 enter order description 13 desired select optional data tab tracking id box enter unique tracking number send issuer authentication service authentication request message b enter customer email address 14 click command button action want take orbital virtual terminal chapter 3 working new orders version 4 2 processing european direct debit page 48 214 figure 23 response uk maestro transaction approved processing european direct debit use new order european direct debit option open new order european direct debit page process eu dd validation capture credit transactions note european direct debit function available merchants processing salem platform eu dd conceptually accepting ach payments unit ed states canada however major operational rule differences europe country europe operates direct debit payment system rules govern process technical banking requirements result local variations merchant wanting accept dire ct debit payments europe face challenge establishing proc essing interfaces relationships every european country business chase paymentech solutions normalized country variations enabling merchants single technical interface funding source processing relationship currently chase paymentech solu tions supports direct debit six european count ries two currencies pounds sterling \\( gbp \\) united kingdom euro austria germany france belgium netherlands eu dd transactions perform following operations orbital virtual terminal chapter 3 working new orders version 4 2 processing european direct debit page 49 214 action description validate validation performed external vendor validate capture validates withdraws funds designated deposit account upon settlement capture withdraws funds design ated deposit account without validating first validation performed settlement credit returns funds consum er deposit account process european direct debit transaction 1 select new order european direct debit open new order european direct debit page note euro currency deposit account amount order id account holder name country code bank fields required bank sort code required countries except belgium netherlands rb code required france great britain pound currency deposit account amount order id account holder name fields required bank sort code conditionally required 2 enter deposit account account number contain 16 characters 3 enter total amount transaction 4 order id box enter order number following internal guidelines orbital virtual terminal chapter 3 working new orders version 4 2 processing bill later purchase page 50 214 5 account holder name box enter name account holder 6 select country code bank required 7 enter bank sort code required germany 8 digits austria 5 digits france 2 10 digits uk 6 digits 8 enter rib code france 2 digits 9 desired select optional data tab enter customer phone number b enter customer email address c tracking id box enter unique tracking number 10 click command button action want take figure 24 response eu dd approval processing bill later purchase use new order bml authorize option open bill later authorize page process bill later purchase transactions handled way similar credit card purchases action description auth requests authorization transaction use option items transaction billed later date time shipment example auth capture requests authorization transaction receipt authorization marks transaction capture process bill later purchase transaction 1 select new order bml authorize open bill later authorize page orbital virtual terminal chapter 3 working new orders version 4 2 processing bill later purchase page 51 214 figure 25 entering info rmation bill late r purchase transaction 2 bill later card number present select yes yes enter card number card number box 3 enter total amount transaction 4 order id box enter order number following internal guidelines unique number orbital virtual terminal chapter 3 working new orders version 4 2 processing bill later purchase page 52 214 5 enter shipping cost 6 select delivery type 7 enter four digit item category number \\( assigned billmelater \\) 8 enter bill address information 9 ship address bill address click bill checkbox else provide ship address information 10 enter customer birth date 11 enter date customer registered customer registration date \\( defaulted today date \\) 12 enter terms conditions version number agreed customer 13 enter customer social security number 14 enter customer ip address 15 enter order description 16 enter customer email address 17 enter customer e mail address confirm customer email address 18 enter merchant promotion code 19 enter annual income 20 enter pre approval invitation number indicates whether customer pre approved pre approval credit bureau include 16 digit pre approval number allows pre approval matched first customer order internal pre approvals include leftmost digit 1 pre approvals zeros 21 select customer residence status 22 select yes checking account 23 select yes savings account 24 click auth request authorization auth capture request authorization upon receipt mark transaction capture transaction moved open batch queue response page indicating transactio n approved declined displayed orbital virtual terminal chapter 3 working new orders version 4 2 processing bill later refund page 53 214 figure 26 response bill later transaction approved processing bill later refund use new order bml credit option open bill later credit page process bill later refund transactions handled way similar credit card refunds requires enter bi later account number order id purchase transaction note account formation order id find original transaction closed batch initiate refund described chapter 5 reviewing post settlement data process bill later refund transaction 1 select new order bml credit open bill later credit page orbital virtual terminal chapter 3 working new orders version 4 2 processing pinless debit transaction page 54 214 figure 27 entering info rmation bill la ter refund transaction 2 card number box enter bill later account number purchase transaction 3 enter amount credited account 4 enter order id purchase transaction 5 desired required internal processes enter order description 6 click credit submit transaction transaction moved open batch queue response page indicating transactio n credited declined displayed processing pinless debit transaction use new order pinless debit option open th e new order pinless debit page process purcha se refund transactions pinless debit cards pinless debit transactions perform following operations action description auth capture requests authorization transaction receipt authorization marks transaction capture credit returns funds consumer account process pinless debit transaction 1 select new order pinless debit open new order pinless debit page orbital virtual terminal chapter 3 working new orders version 4 2 processing pinless debit transaction page 55 214 figure 28 entering information pinless debit transaction note card number biller reference number amount order id fields required customer address formation \\( particularly postal code \\) may required based merchant settings 2 card number box enter debit card number include spaces 3 boxes next expiration date select month year card expires 4 enter biller reference number following internal guidelines 5 enter total amount transaction refer internal processes minimum maximum amounts enter 6 order id box enter order number following internal guidelines 7 enter customer address information orbital virtual terminal chapter 3 working new orders version 4 2 advanced features transaction processing page 56 214 entering non u address click non us address check box state field set non us country code field added select country list postal code field changes single box accommodate non u postal code formats 8 enter customer name customer phone number 9 enter order description 10 desired select optional data tab enter customer email address e enter tracking id 11 click command button action want take advanced features transaction processing additional features new order scr eens used quickly processing transactions creating profiles features visible merchant account enabled profile management mana ged billing soft descriptors orbital virtual terminal chapter 3 working new orders version 4 2 advanced features transaction processing page 57 214 figure 29 additional features vt user interface use profiles quickly access profile data fo r processing new transaction click one options section search profiles search specific profile automatically navigating profile management screen profile found select profile clicking radio button clicking use profile button orbital virtual terminal chapter 3 working new orders version 4 2 advanced features transaction processing page 58 214 reuse last profile selecting option profile data profile last used reused current transaction option visible profile referenced process transaction profile auto suggest feature displays matching profiles based keystrokes entered select profile list displayed order populate fields add profiles use feature create profile based information entered order screen select one options generating unique prof ile id options selected enter customer name profile customer name field needed blank field enter profile id choice use next available profile id use option automatically generate next available profile id number use order number profile id use option use order id profile id use order description profile id use option use order description profile id add managed billing feature available managed billing enabled profile management click add managed billing checkbox billing schedule required profile set managed billing default settings en set applied profile leave defaults set different schedule needs applied click override defaults checkbox create desired schedule selecting soft descriptors default soft descriptor designated via soft descriptor admin page displayed dropdown else none displayed either leave default descriptor select another descriptor dropdown menu orbital virtual terminal chapter 4 working open batch version 4 2 searching transaction open batch page 59 214 chapter 4 working open batch transactions submitted vt placed queue called open batch pending completion transactions state mark unmark transaction settlement void transaction settle marked transactions split transaction multiple shipments view history transaction create profile transaction note gift card transactions viewable open batch viewed flexcache menu tab searching transaction open batch 1 view open batch search page click open batch menu tab figure 30 open batch search page 2 search transactions specific st atus select option transaction status dropdown menu \\( default \\) voids orbital virtual terminal chapter 4 working open batch version 4 2 searching transaction open batch page 60 214 declines errors account verifications 3 search transactions account numb er enter full partial account number account box last four digits last 4 box 4 search account type select non ecp ecp 5 search full partial order id number enter value order box 6 search full partial order description enter value order description box 7 search specific card br select option card type dropdown box 8 search transactions within amou nt range enter minimum maximum value amount \\( \\) amount range boxes necessary supply values 9 search approval code enter full value approval code box 10 search transaction reference number enter full value transaction reference box 11 search specific profile id enter full partial profile id profile id box field visible merchant user id set profile management 12 search specific vt user id select user user logon dropdown box enter full user id entry box sear ches performed active inactive terminated user ids 13 addition search paramete rs mentioned date range utilized narrow search request default date range set current day change dates needed date range needed uncheck date range checkbox results output search criteria selected several methods generating results choose one th e following options query type dropdown box complete search detailed transactions \\( default \\) search results outputted screen immediate viewing indivi dual transactions displayed groups 10 screen additional functionality accessed void settle ship partial see figure 31 open batch search results page \\( detailed transactions view \\) summary query search results summarized screen transaction counts various transaction types provided examples include sale counts return counts decline error counts see figure 32 open batch search results \\( summary query view \\) orbital virtual terminal chapter 4 working open batch version 4 2 searching transaction open batch page 61 214 generate detail report search results provided pdf format report obtained reporting menu tab vt user id must enabled reporting order retrieve report see working reports information retrieving reports generate detail file search results provided csv format report obtained reporting menu tab vt user id must enabled reporting order retrieve report see working reports information retrieving reports figure 31 open batch search result page \\( detailed transactions view \\) trans status type column denotes current status transaction authorization success successful authorization transaction settle marked capture marked capture successful authorization marked capture transaction submitted next time settlement initiated credited refund transaction transaction submitted next time settlement initiated marked capture split partial shipment portion transaction submitted next time settlement initiated declined declined authorization transaction removed open batch next settlement performed orbital virtual terminal chapter 4 working open batch version 4 2 viewing transaction details page 62 214 voided voided transaction transaction removed open batch next settlement performed split open \\( un captured \\) portion partial shipment transaction figure 32 open batch search results \\( summary query view \\) viewing transaction details generating search results using detailed transactions query type details individual transaction open batch viewed 1 click radio button transaction viewed 2 click view order button orbital virtual terminal chapter 4 working open batch version 4 2 viewing transaction details page 63 214 figure 33 selecting viewing transaction details transaction view ed default two tabs displayed recommended data response data depending new order request optional data purchasing card data ii displayed purc hasing card iii data provided transaction request fifth tab called purchasing card data iii displayed response data tab tabs simply mirror information submitted processing transa ction exception recommended data page contains additional transaction specific information transaction date date transaction originally created transaction reference number unique identifier assigned transaction also known orbital gateway reference number transaction reference index referenced internal orbital gateway use transaction creation user id user id system created transaction transaction last modification user id user id system last modified transaction orbital virtual terminal chapter 4 working open batch version 4 2 viewing transaction details page 64 214 original order reference number \\( txrefnum \\) transaction reference number associated original authorization split transaction figure 34 open batch view order response data page displays response information provided card issuing bank response data returned dependent th e transaction data provided time authorization approval code provided transact ion approved card issuing bank response code orbital gateway response code indicating status transaction 00 indicates transaction successful approved number greater 00 generally indicates decline error text message indicate exact erro r message associated response code see response codes list response codes avs response code provided participating card issuing banks address information submitted new order request see avs response codes list avs response codes card verification number response code provided participating card issuing banks card verification number submitted new order request see cvv2 cvc2 cid response codes list cvd response codes orbital virtual terminal chapter 4 working open batch version 4 2 viewing transaction details page 65 214 figure 35 response data tab note view sample response data page partially approved transactions see appendix partial authorizations adding profile orbital virtual terminal allow profile created within transaction detail pages open batch merchant user id must enabled profile management order access functionality 1 open batch search results page click transaction profile needs created 2 click view order button 3 click add profile button 4 admin profile management page opened fields new profile already populated complete fields including prof ile id based internal guidelines 5 click add button 6 message successful addition profile displayed information creating profiles see working profiles orbital virtual terminal chapter 4 working open batch version 4 2 viewing transaction details page 66 214 figure 36 add profile open batch viewing order history \\( audit trail \\) history details order may viewed clicking order history button 1 open batch search results page click transaction history needs viewed 2 click view order button 3 click order history button request type column displays different requ ests performed order transaction origination column displays sy stem request originated username column displays vt user id originat ed request transaction origination vt orbital virtual terminal chapter 4 working open batch version 4 2 marking successf ul authorization capture page 67 214 figure 37 order history note view sample order history page partially approved transactions see appendix partial authorizations marking successful authorization capture mark unmark column allows user easily mark unmark transactions settlement clicking term mark column changes status auth success marked capture transaction submitted ne xt time settlement initiated note information regarding mark unmark purchase card data see adjusting purchasing card data figure 38 marking transaction capture unmarking captured transaction clicking term unmark column chan ges status marked capture auth success item included next settlement remain open batch transaction status changed orbital virtual terminal chapter 4 working open batch version 4 2 adjusting purchasing card data page 68 214 figure 39 unmarking transaction adjusting purchasing card data authorizations performed purchasing cards special column open batch search results page displayed adjust purchase card mark column allows adjust original purchasi ng card level ii iii data mark transaction capture event ship partial figure 40 adjust purchase card mark column 1 open batch search results page click pcard mark link purchasing card transaction split 2 purchasing card data iii tab displayed remove edit line items desired reminder tampa users forced ensure variance zero continuing requirement discussed entering purchasing card data purchase also important note level iii data remains attached transaction currently settled longer attached remaining un captured portion transaction words level iii data still needed time capture remaining un captured portion need entered orbital virtual terminal chapter 4 working open batch version 4 2 voiding transaction page 69 214 figure 41 adjusting purchase card data voiding transaction void button used cancel transaction removes transaction active status prevents future settlement 1 open batch search results page click transaction needs voided 2 click void button orbital virtual terminal chapter 4 working open batch version 4 2 voiding transaction page 70 214 figure 42 voiding transaction upon using void button status changed voided voided status longer changed settle voided author ization data must entered new order force page clicking force capture button note void reverse orig inal authorization card type gift card pinless debit order free hold accountholder open buy \\( line credit \\) reserved original authorization authorization reversal must performed authorization reversals automatically tempted every void enabling functionality via admin general admin menu informatio n enable feature please see setting general preferences orbital virtual terminal chapter 4 working open batch version 4 2 settling marked capt ure credit force transactions page 71 214 figure 43 voided transaction settling marked capture credit force transactions settle action instructs orbital virtual te rminal immediately settle transactions status marked capture force credit settle function performed voided declined transactions purged open batch view along errors located specifically searching voids declines errors transaction status dropdown box open batch search page transactions remain open batch settlement authorizations marked capture figure 44 settling open batch settle button selected summary page appears displaying summary totals orbital virtual terminal chapter 4 working open batch version 4 2 splitting transaction separate shipments page 72 214 figure 45 settlement summary report splitting transaction separate shipments ship partial also known split shipment function allows split one transaction multiple transactions bankcard regulations prohibit charging consumer goods prior shipment consumer pu rchases several items multiple shipments occur different days \\( back orders etc \\) th en order must charged consumer multiple increments pr ocess flow diagram please see split shipment process flow unmarked transactions selected ship partial attempt split transaction already marked capture alert appears advising unmark transaction 1 open batch search results page select authorization success transaction needs split 2 click ship partial button ship partial page appears page contains transaction information previously recorded plus field enter portion total amount capture orbital virtual terminal chapter 4 working open batch version 4 2 splitting transaction separate shipments page 73 214 figure 46 splitting transaction 3 enter amount needs captured amount equal less authorized amount entering amount click one standard action buttons mark capture clear amount return results list orbital virtual terminal chapter 4 working open batch version 4 2 splitting transaction separate shipments page 74 214 figure 47 entering ship partial amount 4 click mark capture button results displayed open batch search results page indicating amount captured pa ge reflects transaction split portion transaction marked capture specific amount split shipment marked capture cannot unmarked voided example original transaction 25 00 split twice ce 5 00 6 00 figure 48 ship partial results see historical detail split transaction click view order button open batch search results page order history button following page appears history orbital virtual terminal chapter 4 working open batch version 4 2 splitting transaction separate shipments page 75 214 figure 49 ship partial order history txrefnum unique identifi er assigned transactio n although split transaction assigned new txrefnum ca n search split transactions original txrefnum reference origin al txrefnum kept internally subsequent split transaction remaining balance authorization \\( uncaptured portion \\) displayed amount section order history page note information splitting purchasi ng card ii iii transactions see adjusting purchasing card data orbital virtual terminal chapter 5 reviewing post settlement data version 4 2 searching batches page 76 214 chapter 5 reviewing post settlement data review menu tab allows view post settl ement data batch transaction level screens provide ability vi ew closed pending rejected batches transactions post settlement data retain ed six months plus current month batch search used locating batch information subsequently drilling individual transaction information transactions search employed immediately locate specific transaction begin sear ch post settlement data click review batch search review transaction search note gift card transactions ar e viewable review menu tab viewed flexcache menu tab searching batches 1 view review batch search page click review batch search option 2 search batch number range enter beginning ending batch numbers boxes boxes must populated order perform search tampa batch numbers increase numerical ly beginning 001 \\( e 001 002 003 etc \\) batches greater 2400 transactions orbital gateway split batch prior sending host system time settlement first batch sent host contain 2400 transactions second contain 2399 third contain 2398 etc subsequent batch decremented 1 transaction batch split assigned next incremental batch number salem batch numbers assigned th e salem host system resemble following 20906 4195f salem batches split prior sent host 3 search date range select ginning ending date ranges dropdown boxes default set current date results output batch number range date range selected several methods generating results choose one following options query type dropdown box complete search detailed transactions \\( default \\) search results outputted screen immediate viewing individu al batches displayed groups 10 users drill transaction level page see figure 50 review batch search results \\( detailed transactions view \\) orbital virtual terminal chapter 5 reviewing post settlement data version 4 2 searching batches page 77 214 summary query search results summarized screen transaction counts various transaction types across batches within search parameters provided examples include sale counts return counts see figure 51 review batch search results \\( summary query view \\) payment types may differ screenshot provided print summary page click print button change printer options landscape mode generate detail report search results provided pdf format report obtained reporting menu tab vt user id must enabled reporting order retrieve report see working reports information retrieving reports generate detail file search results provided csv format report obtained reporting menu tab vt user id must enabled reporting order retrieve report see working reports information retrieving reports generate detail report pending search results transactions pending status provided pdf format report obtained reporting menu tab vt user id must enabled reporting order retrieve report see working reports information retrieving reports generate detail file pending search results transactions pending status provided csv format report obtained reporting menu tab vt user id must enabled reporting order retrieve report see working reports information retrieving reports generate detail report rejected search results rejected transactions provided pdf format report obtained reporting menu tab vt user id must enabled reporting order retrieve report see working reports information retrieving reports generate detail file rejected search results rejected transactions provided csv format report obtained reporting menu tab vt user id must enabled reporting order retrieve report see working reports information retrieving reports orbital virtual terminal chapter 5 reviewing post settlement data version 4 2 searching batches page 78 214 figure 50 review batch search sults \\( detailed transactions view \\) batch status column denotes status batch closed successfully processed batch pending batch waiting processed status may last anywhere one six hours rejected transactions rejected transactions state resettled fixing cause rejection figure 51 review batch search results \\( summary query view \\) orbital virtual terminal chapter 5 reviewing post settlement data version 4 2 searching batches page 79 214 reviewing closed pending batch generating search results using de tailed transactions query type review batch search page batch details closed pending batches viewed review batch search results page click radio button next batch \\( closed pending \\) wish view click batch details button closed batches addition batc h details summary batch displayed transactions summary information includes total number records transactions total sales total credit net amount file figure 52 review batch details \\( closed batch \\) pending batches trans status type column display capture progress status orbital virtual terminal chapter 5 reviewing post settlement data version 4 2 searching batches page 80 214 figure 53 review batch details \\( pending batch \\) reviewing rejected batch transactions may get rejected host proc essing system time settlement examples rejects include invalid ca rd numbers ecp validation errors rejected transactions view ed rejected batch review batch search results page generating search results us ing detailed transactions query type review batch search page click radio button next rejected batch click batch details button within rejected batch trans status type column display status transaction users option view transaction mark settle transaction void transaction upon determining transaction cannot marked resettled rejected batch users opt resubmit transaction force transaction voiding rejected batch assistance needed research rejected tr ansactions please contact orbital gateway support helpdesk orbital virtual terminal chapter 5 reviewing post settlement data version 4 2 searching batches page 81 214 figure 54 review batch details \\( rejected transactions \\) voiding transaction rejected batch action needs taken r ejected transaction users void remove rejected batch 1 rejected transactions page click transaction voided 2 click void button trans status type column display voided status figure 55 voiding rejected transaction resettling rejected transaction transaction within rejected batc h attempt settled 1 rejected transactions page click mark hyperlink transaction settled trans status type column display tran reject \\( marked \\) status orbital virtual terminal chapter 5 reviewing post settlement data version 4 2 searching batches page 82 214 2 click settle button settlement summary displayed rejected transactions marked settlement review settle page viewing transaction closed pending rejected batch individual transactions viewed within closed pending batch rejected batch 1 within batch click radio butto n transaction viewed 2 click view order button details transaction viewed note information displayed adding profile performing quick credit viewing order history see viewing transaction details figure 56 viewing transactions closed pending rejected batches orbital virtual terminal chapter 5 reviewing post settlement data version 4 2 searching transactions page 83 214 searching transactions 1 view review transact ion search page click review transaction search option figure 57 closed batch transaction search page 2 search transactions specific st atus select option transaction status dropdown menu settled \\( default \\) pending transactions settled sales settled returns rejected items 3 search transactions account numb er enter full partial account number account box last four digits last 4 box 4 search account type select non ecp ecp 5 search full partial order id number enter value order box 6 search full partial order description enter value order description box 7 search specific card br select option card type dropdown box orbital virtual terminal chapter 5 reviewing post settlement data version 4 2 searching transactions page 84 214 8 search transactions within amou nt range enter minimum maximum value amount \\( \\) amount range boxes necessary supply values 9 search approval code enter full value approval code box 10 search transaction reference number enter full value transaction reference box 11 search specific profile id enter full partial profile id profile id box field visible merchant user id set profile management 12 search specific vt user id select user user logon dropdown box enter full user id entry box sear ches performed active inactive terminated user ids 13 addition search paramete rs mentioned date range utilized narrow search request default date range set current day change dates needed date range needed uncheck date range checkbox results output search criteria selected several methods generating results choose one th e following options query type dropdown box complete search detailed transactions \\( default \\) search results outputted screen immediate viewing indivi dual transactions displayed groups 10 screen additional functionality accessed add profile credit see figure 58 review transaction search results page \\( detailed transactions view \\) summary query search results summarized screen transaction counts various transaction types provided examples include sale counts return counts see figure 59 review transaction search results \\( summary query view \\) payment types may differ screenshot provided print summary page click print button change printer options landscape mode generate detail report search results provided pdf format report obtained reporting menu tab vt user id must enabled reporting order retrieve report see working reports information retrieving reports generate detail file search results provided csv format report obtained reporting menu tab vt user id must enabled reporting order retrieve report see working reports information retrieving reports orbital virtual terminal chapter 5 reviewing post settlement data version 4 2 searching transactions page 85 214 figure 58 review transaction search sults page \\( detailed transactions view \\) figure 59 review transaction se arch results \\( summary query view \\) orbital virtual terminal chapter 5 reviewing post settlement data version 4 2 viewing transaction details page 86 214 viewing transaction details generating search results using detail ed transactions query type details individual transaction review page viewed 1 click radio button transaction viewed 2 click view order button figure 60 selecting viewing settled transaction details transaction view ed default two tabs displayed recommended data response data depending new order request optional data purchasing card data ii displayed purc hasing card iii data provided transaction request fifth tab called purchasing card data iii displayed response data tab tabs simply mirror information submitted processing transa ction exception recommended data page contains additional transaction specific information transaction date date transaction originally created transaction reference number unique identifier assigned transaction also known orbital gateway reference number transaction reference index referenced internal orbital gateway use transaction creation user id user id system created transaction transaction last modification user id user id system last modified transaction orbital virtual terminal chapter 5 reviewing post settlement data version 4 2 viewing transaction details page 87 214 original order reference number \\( txrefnum \\) transaction reference number associated original authorization split transaction figure 61 review view order response data page displays response information provided card issuing bank response data returned dependent th e transaction data provided time authorization approval code provided transact ion approved card issuing bank response code orbital gateway response code indicating status transaction 00 indicates transaction successful approved number greater 00 generally indicates decline error text message indicate exact erro r message associated response code see response codes list response codes avs response code provided participating card issuing banks address information submitted new order request see avs response codes list avs response codes orbital virtual terminal chapter 5 reviewing post settlement data version 4 2 viewing transaction details page 88 214 card verification number response code provided participating card issuing banks card verification number submitted new order request see cvv2 cvc2 cid response codes list cvd response codes figure 62 review response data tab adding profile orbital virtual terminal allow profile created within transaction detail pages review section mercha nt user id must enabled profile management order access functionality 1 review transaction search results page click transaction profile needs created 2 click view order button 3 click add profile button 4 admin profile management page opened fields new profile already populated complete fields including prof ile id based internal guidelines 5 click add button 6 message successful addition profile displayed information creating profiles see working profiles orbital virtual terminal chapter 5 reviewing post settlement data version 4 2 viewing transaction details page 89 214 figure 63 add profile review transaction search results initiating credit order \\( quick credit \\) review view order page previous sale quickly turned refund clicking credit button new order credit automatically created fields pre populated using data iginal transaction view order page however override data needed user role allows viewing masked account numbers ly masked card number presented please note purchase card data carried ov er original transaction note quick credit feature available transactions ol der four months plus current month users manually enter transaction information new order credit page transactions older orbital virtual terminal chapter 5 reviewing post settlement data version 4 2 viewing transaction details page 90 214 figure 64 quick credit viewing order history \\( audit trail \\) history details order may viewed clicking order history button 1 review transaction search results page click transaction history needs viewed 2 click view order button 3 click order history button request type column displays different requ ests performed order transaction origination column displays sy stem request originated username column displays vt user id originat ed request transaction origination vt orbital virtual terminal chapter 5 reviewing post settlement data version 4 2 viewing transaction details page 91 214 figure 65 review order history orbital virtual terminal chapter 6 administering virtual terminal version 4 2 profile management page 92 214 chapter 6 administering virtual terminal admin functionalities op tional appear th e merchant enabled user appropriate admin rights ar e 12 administrative categories set provides ability self administer various functionalities clicking admin menu tab options enabled appear profile management profile account updater profile auto email service profile managed billing profile pinless debit auth recycling flexcache \\( salem \\) general admin purchase card iii admin receipt admin reporting admin selectable response soft descriptors profile management orbital virtual terminal includes functionality called customer profile management allows cardholder data stored within orbital gateway subsequently used transaction processing screens asso ciated menu choice used create search edit delete use customer profiles please see working profiles information using customer profiles configuring account updater fully managed account updater profiles available salem merchants using customer profiles functionality specifically designed update merchant chain level profiles housed gateway utilizing salem account updater process prerequisite visa mastercard approval required participation please contact account executive details may also review account updater supplemental reference guide details account updater orbital gateway enabled requests update auto matically submitted visa mastercard according merchant selected schedule visa mastercard typically respond requests within three days inclusive submission day responses may contain information regarding new card account numbers expiration dates ac count closures etc based upon information returned orbital gateway automatically updates customer profiles scheduled report lists profiles updated available orbital virtual terminal chapter 6 administering virtual terminal version 4 2 configuring account updater page 93 214 note card account number invalid card account closed associated profile automatically suspended preventing unsuccessful future authorization capture attempts suspended profile status easily changed active new information becomes available addition updating profiles via account updater proce ss merchants option initiate one update request specif ic profile outside th e preset schedule request included next account updater submission one request initiated via vt two ways profile query results page find de sired profile click corresponding yes send account updater request column navigate desired profile via admin profile management page click send button box referenc ing account updater request orbital virtual terminal chapter 6 administering virtual terminal version 4 2 configuring account updater page 94 214 figure 66 account dater one request warning change account number via account updater process suppressed merchant initiates change account number account updater request initiated prior update orbital virtual terminal chapter 6 administering virtual terminal version 4 2 configuring account updater page 95 214 configure account updater settings navigate admin profile account updater dropdown menu page vary depending whether account set chain level merchant level profile management profile account updater admin page select whether include suspended profiles account updater request along active profiles default include active profiles apply updates profiles card account number \\( inclusive suspended profiles \\) default update initial profile triggers update request schedule au requests refers request updated formation sent counting request day day 1 corresponding visa mastercard response normally received day 3 typically updates posted profiles day 3 day receipt invalid cards update posted day request start date unless otherwise requested set day setup orbital gateway day system starts looking see update request sent example start date january 28th schedule day 01 every 1 month first update request sent 1st february basic schedule required however parameters schedule flexible default schedule day following enablement functionality orbital gateway every six months thereafter may select day month interim time 1 6 months day specific day 23r may day week second thursday month selection may rang e every month \\( x every 01 month \\) maximum interval 6 months \\( x every 06 months \\) example one might choose 16th day every 04 months best practice recommendation per month day 6 days prior day billings occur optional schedules expiring cards optional schedule send update request five days prior end month card account expires already expired best practice recommendation select basic schedule update interval longer one month updates occur beginning month managed billing available merchant level profiles update requests sent five days prior next sche duled managed billing event best practice recommendation depending number managed billing profiles shortness billing interval e weekly may helpful option orbital virtual terminal chapter 6 administering virtual terminal version 4 2 configuring account updater page 96 214 au default merchant number applicable chain level profiles since chain level profiles shared across mu ltiple merchant ids one default merchant number used submit updated requests select one merchant number used keep mind must approved visa mastercard well setup account updater salem orbi tal gateway also merchant number account updater fees accrue second screen shot shows field entry au default merchant number figure 67 account updater opti ons merchant level profiles orbital virtual terminal chapter 6 administering virtual terminal version 4 2 configuring automatic e mail messages cardholders page 97 214 figure 68 account updater op tions chain level profiles configuring automatic e mail messages cardholders orbital virtual terminal provides optional service automated cardholder e mails offered conjunction managed billing account updater functionality must enabled merchant level profiles securely house information includes cardholders e mail addresses provided merchant se rvice elected orbital gateway uses addresses se nd automated customer notifications select admin profile auto email service access admin auto e mail service page orbital virtual terminal chapter 6 administering virtual terminal version 4 2 configuring automatic e mail messages cardholders page 98 214 figure 69 auto e mail service page auto e mail service page reflects th e current e mail choices provides opportunity enable disabl e category e mails simp ly click dropdown box make selection merchant may choose combination following expiring card e mail notification card account file soon expire contact th e merchant updated information \\( sent seven days prior month expiration \\) declined transaction e mail notification card account declined contact merchant authorization recycle used e mail triggered cycle exhausted hard decline received see setting preferences authorization recycling information authorization recycling \\( sent day \\) successful billing e mail notification customer account record successfully billed \\( sent day \\) orbital virtual terminal chapter 6 administering virtual terminal version 4 2 configuring automatic e mail messages cardholders page 99 214 upcoming billing e mail notification informing cardholder account record charged \\( sent day billing \\) ineligible pinless debit e mail notification informing cardholder invalid atm \\( pinless debit \\) card account close e mail notification closed credit card account sent respective cardholder new account number expiration date e mail notification sent respective cardholder new card account number expiration date received credit card association screen also allows changes additional fields related e mail e mail address e mails sent behalf merchant e mail address cannot ceive replies domain name portion billing notification com follows cannot changed ed ited local part address proceeds defaults merchant legal name absence legal name business \\( dba \\) name used however local address changed saved according merchant wishes simply key desired name front click save button merchant notification e mail address cardholder auto e mail service chosen merchant must populate field non notification alert sent notification cardholder e mail sent due absence cardholder e mail address profile populating field click save button merchant customer service phone number text th e e mail sent cardholder merchant legal name followed dba name included customer se rvice phone number field populated saved formation also included choice send cardholder e mails made merchant level assuming flag enabled e mails described previously one following results occur used fine tune e mails sent 1 cardholder e mail address present profile e mail sent cardholder 2 cardholder e mail address field profile empty non distributed cardholder e mail notification sent merchant using merchant notification e mail address di scussed example merchant high profile customer e mail sent see auto e mail cardholder text example non distribute cardholder e mail notification 3 cardholder e mail address field profile populated e mail e mail sent cardholder merchant orbital virtual terminal chapter 6 administering virtual terminal version 4 2 configuring automatic e mail messages cardholders page 100 214 note action taken bounced e mails merchant notified non delivery default e mail text e mails found auto e mail cardholder text merchant customize text per inte rnal guidelines restore default text warning merchant ability change co ntent e mails without approval review chase paymentech merchant sole responsibility changes restricting authorized make e mail content changes well enforcing related internal policies vt users su pported part permissions granted users important text changes carefu lly considered reviewed prior saving please remember e mail potential sent customers enhance customer relations make sure text professionally represents business 1 view edit text cardho lder e mail click corresponding view edit text link e mail template current text displayed 2 change text enter desired changes click save button text saved used next cardholder e mail distribution text limit 2000 characters p lease reply message confidential messages co mprise 520 characters total 2000 3 original default text restored using restore defaults button clicking button original text made visible apply save verbiage click save button figure 70 editing e mail text orbital virtual terminal chapter 6 administering virtual terminal version 4 2 setting preferences managed billing page 101 214 setting preferences managed billing managed billing extension customer profile management designed meet merchants recurring deferred billing needs accordance merchant predefined set business rules orbital gateway ge nerates authorization capture transaction merchant managed billing service utilized recurring installment billing transactions recurring cardholder agrees regular going billing designated amount specified time interval installment cardholder agrees set number payments specified time purchase item deferred transaction single billing triggered predefined future date screens associated menu choice ar e used designate th e type billing billing schedule please see managed billing information functionality setting preferences pinless debit pinless debit card ranges may become ineligible processing time cards falling category also used visa mastercard debit cards pinless debit admin page allows merchants automa tically update pinless debit pr ofiles visa mastercard methods payment card account nu mber longer eligible pinless debit card access pinless de bit admin page select admin profile pinless debit click yes profiles automaticall updated visa mastercard figure 71 admin pinless debit admin orbital virtual terminal chapter 6 administering virtual terminal version 4 2 setting preference authorization recycling page 102 214 setting preferences authorization recycling optional service enabled merchant level automates authorization attempts transactions received soft declines issuing bank soft decline decline potential approved later date limit decline merchant sele cts soft declines recy cle well frequency number authorization attemp ts interval authorization attempts authorization recycling process continues approval obtained hard decline received number design ated attempts exhausted process applicable authorizatio n capture transactions following card types american express discover card jcb mastercard visa maestro uk domestic \\( salem platform \\) admin auth recycling menu view administer current parameters 1 enter days attempts may choose 1 16 recommended follow normalized association guidelines maximum 4 attempts 16 days 2 enter maximum number attempts may choose 1 4 reauthorization attempts recommended follow normalized association guidelines maximum 4 attempts 16 days 3 select authorization recycle exhaust action defines action taken authorization recycle exhausted hard decline received none action taken authorization recycle exhausted default value auto suspend profiles standard managed billing profile status changed auto suspended 4 check boxes soft declin e response codes recycled soft declines eligible reauthorization process displayed list enabled \\( e checked \\) soft decline respon se codes trigger auth recycle process 5 click save button orbital virtual terminal chapter 6 administering virtual terminal version 4 2 setting preferences lated gift card redemptions page 103 214 figure 72 admin auth recycling setting preferences related gift card redemptions admin flexcache menu administer two options gift card processing partial redemption auto authorization partially redeeming authorization hold funds captured released enabling option results auto authorization attempt funds held another 7 days remaining balance capture setting process gift card transactions two step environment \\( auth followed redemption \\) elect rede mption request capture remaining balance card less amount originally authorized time remaining balance card less th e authorized amount original authorization expired \\( 7 days redemption request \\) response page displays amount requested well amount actually captured note admin flexcache available salem merchants orbital virtual terminal chapter 6 administering virtual terminal version 4 2 setting general preferences page 104 214 figure 73 admin flexcache setting general preferences admin general admin page provides user ability alter various vt behaviors including purchase cards address verification service \\( avs \\) settlement authorization reversals partial authorizations simply choose desired behaviors radio buttons dropdo wn menu click save orbital virtual terminal chapter 6 administering virtual terminal version 4 2 setting general preferences page 105 214 figure 74 admin general admin tampa merchants orbital virtual terminal chapter 6 administering virtual terminal version 4 2 setting general preferences page 106 214 salem merchants partial authorization section general admin page offers slightly differently functionality figure 75 admin general admin salem merchant purchase card prompt mark capture yes selected adjust purchase card mark column added open batch page hyperlink pcard mark column indicates auth transaction falls within visa mastercard purchase card bin ranges add edit purchase card data prior settling click pcard mark link direct another page enter edit data see adjusting purchasing card data information edit purchasing card data orbital virtual terminal chapter 6 administering virtual terminal version 4 2 setting general preferences page 107 214 figure 76 pcard mark column view enter card number option determines credit card numb er box displayed either four separate boxes one box remove auth auth capture button determines command buttons displayed recommended data tab new order pages auth auth capture mandatory avs option used enforce whether avs cvd mandatory following options enabled require avs zip mandatory require street address mandatory require card verification data \\( cvd \\) mandatory two step settlement process feature selected inserts intermediary confirmation page settlement process user must view pre settlement summary tal click confirm button completing settlement end day process auto settle option used establish auto settle time time zone orbital virtual terminal chapter 6 administering virtual terminal version 4 2 setting general preferences page 108 214 attempt authorization reversal voiding selecting option triggers automatic attempt authorization reversals voids processed authorization reversal attempts cancel outstanding authorization stale yet settled su ccessful authorization reversal releases hold cardholder 's funds related original authorization transaction authorization stale meaning greater 72 hours old void request attempted partial authorization partial authorization occurs cardhold er issuing bank return approval amount less original requested amount common customers use pre paid credit cards may happen circumstances well partially approved amount amount settled end day process important note must request partial returned full authorization available partial authorizations supported following functionality authorization recycling managed billing mark capture transactions \\( 2 n \\) authorization marked capture multiple times causing original transaction split several transactions partial authorization returned authorization initial mark capture request amount subtracted partially approved amount rather originally requested amount subsequent mark capture requests authorization initial mark capture orbital gateway attempts obtain new authorization authorization requests partial authorizations supported note declined partial auth supported error returned merchant set support partial authorizations partial authorization returned host system tampa merchants selecting yes allow approval portion original amount selecting prevent partial authorizations salem merchants three options available yes salem merchant default setting yes options override salem merchant default settings note american express neither yes partial authorization override supported selecting yes allow approval portion original amount partial authorizations supported visa mastercard mastercard diners discover orbital virtual terminal chapter 6 administering virtual terminal version 4 2 selecting purchasi ng card 3 units measure page 109 214 discover diners selecting prevent partial authorizations selecting salem merchant default setting support settings configured salem host system selecting purchasing card 3 units measure admin purchase card iii admin page extends unit measure options level iii processing default unit measure displayed nmb number possible unit measure options listed top window added \\( removed \\) bottom window using add unit measure remove unit measure buttons figure 77 admin purchase card iii admin specifying information appear receipts admin receipt configuration page merchants able partially edit header footer virt ual terminal receipts key receipt elements disclaimer transaction details cannot edited three main elements screen receipt header six lines available editing \\( 40 characte rs per line \\) since orbital system automatically print merchant name address phone number merchants required provide information receipt footer four lines text 40 characters per line available optional receipt data orbital virtual terminal chapter 6 administering virtual terminal version 4 2 specifying informat ion appear receipts page 110 214 following fields displaye receipt enabled customer name order description vt user name signature line editing receipt information click save button figure 78 admin receipt configuration orbital virtual terminal chapter 6 administering virtual terminal version 4 2 configuring scheduled reports page 111 214 figure 79 receipt examples configuring scheduled reports admin reporting admin page allows self administ ration two aspects reporting card account truncation reports scheduled ports additionally specific demand reports may ordered high level review data columns various reports see appendix h reporting card account truncation truncation masking card account numbers places last four digits account number x card numbers trunc ated default wish full account number visi ble reports go admin reporting admin menu click save button restrict cert users seeing full account number call gateway support help desk adjust users permissions warning feature currently available card holder account numbers reporting masked scheduled reports scheduled reports automatically created delivered according merchant selected parameters include format frequency de livery mechanism subgroup event driven reports triggered specific event example closed batch detail report created shortly batch closed report description settlement related scheduled reports closed batch detail displays information transactions batch closed orbital virtual terminal chapter 6 administering virtual terminal version 4 2 configuring scheduled reports page 112 214 closed batch summary report displays summary information regarding transactions batch closed tampa merchants settling batches exceed 2400 transactions batches split smaller batches prior sending host system batches individually displayed virtual terminal separate batches closed batch summary report include combined information split batches settlement note report available csv format rejected batch detail displays information regarding rejected transactions additional scheduled reports account updater report provides information regarding changes automatically made given profile id via account updater process authorization recycle provides information regarding status \\( approved final declines recycle proce ss \\) authorization recycle transactions available merchants enabled authorization recycling expiring card displays associated profile id name e mail address card expired soon expire information assist effort obtain updated customer information necessary future submissions report offered monthly basis managed billing provides information regarding authorization status \\( approved final declines recycle process \\) managed billing transactions available merchants using managed billing pinless debit status change displays list profiles profile status modified due ineligibility pinless debit account number available merchants enabled pinless debit scheduled profile activity displays scheduled authorization dates 24 future receivables per profile contains customer transactional information offered merchants using managed billing suspended profile displays profiles placed suspended state includes auto suspended manually suspended profiles offered merchants using managed billing authorization recycling formats available pdf report document csv comma delimited file note reports generated retrieved 6 consecutive months discontinued orbital virtual terminal chapter 6 administering virtual terminal version 4 2 configuring scheduled reports page 113 214 frequency expiring card report produced monthly others may scheduled daily weekly monthly file delivery options virtual terminal report available pick vt vt also houses copy report regard less delivery method e mail report sent e mail recipients populated identified column note reports sent via e mail always mask expiration date last four digits card number sftp pick report placed sftp di rectory pick like orbital batch response file user id must set advance chase paymentech listed th e dropdown batch user menu outbound file encryption choice following merchant may choose encryption method unsolicited outbound files auto generated sftp report zip \\( default choice \\) pgp gpg asc note choices pgp gpg asc require loading accompanying certificate batch tool new outbound setting override existing echo encryption methodology used inbound files \\( e impact resultant response files inbound files \\) orbital virtual terminal chapter 6 administering virtual terminal version 4 2 configuring scheduled reports page 114 214 figure 80 admin reporting admin administer options described choose admin reporting admin menu enable disable reports clicking enable checkbox enabling make corresponding selections click save button demand reports request demand reports group click demand reports button orbital virtual terminal chapter 6 administering virtual terminal version 4 2 configuring scheduled reports page 115 214 figure 81 admin reporting admin demand reports make search criteria report type selections click search button page refresh instructions check reporting click reporting menu tab view report formation retrieving reports see working reports chain level reports merchants enabled chain level profile management access profile related reports chain level report easily identifi ed vt chain link icon left report name following reports available chain level profile management account updater pinless debit status change expiring card suspended profile orbital virtual terminal chapter 6 administering virtual terminal version 4 2 selecting response codes automatically decline page 116 214 figure 82 chain level reporting selecting response codes automatically decline merchant selectable response solution helps protect fraud also gives flexible control risk ex posure merchant selectable response \\( msr \\) allows configure orbital processing system return override decline based predefined options select address rification service \\( avs \\) card verification data \\( cvd \\) response codes want auto declined exam ple choose auto decline approvals receiving avs code indicating zip match automatic merchant override decline returned th ose transactions displayed m1 override decline feature must enabled merchant level user level enable msr response codes go admin selectable response orbital virtual terminal chapter 6 administering virtual terminal version 4 2 selecting response codes automatically decline page 117 214 figure 83 admin selectable response available options top window simply choose avs cvd response codes add list declines clicking add decline button eligible codes merchant account appear menu list complete list possible codes found appendix c merchant selectable response codes may also deselect response code choosing code bottom window clicking remove decline button list decline codes bottom window trigger auto decline transactions receive codes response declined transaction appear merchant override decline orbital virtual terminal chapter 6 administering virtual terminal version 4 2 setting preferences soft descriptors page 118 214 figure 84 merchant override decline setting preferences soft descriptors certain merchants may need include merchant identifying information transaction rather using defaults stored chas e paymentech system merchants may take advantage soft descriptors order submit information merchant name street ddress city state zip soft data passed card association along transaction posted accountholder statement applicable soft descriptor records used define merchant name product description appear consumer statement allows rchant greater flexibility describing consumer purchase soft descr iptors supported visa mastercard mastercard diners ecp subject issuer discretion whether descriptor displayed accountholder statement salem \\( bin 000001 \\) orbital gateway supports soft descrip tors salem host however prior risk department approval required merchant id user id must enabled soft descriptors orbital gateway pns \\( bin 000002 \\) orbital gateway supports soft descr iptors pns host however orbital virtual terminal chapter 6 administering virtual terminal version 4 2 setting preferences soft descriptors page 119 214 supported chase paymentech canada customers merchant id user id must enabled soft descriptors orbital gateway salem support rules guidelines credit card chase paymentech generate segreg ate reports soft descriptor merchant wishes see salem reports segregat ed product merchant must set specific reporting divisions deposit thos e transactions th division number merchants need roll se veral merchant names one corporation please contact chase paymentech representative deta ils use regulation soft descriptors description merchant name field recognizable cardholder consist company name trade name combined type description produc service purchased merchant name one 3 different lengths addition product description appended based length merchant name combined length 21 bytes words options merchant name product description 3 bytes 18 bytes 7 bytes 14 bytes 12 bytes 9 bytes additional notes customer service phone number merchant url fields provide cardholder customer service phone nu mber url requirement qualify visa lowest dire ct marketing interchange rate merchant submits back slash \\( \\) soft descriptor converted hyphen \\( \\) cardholder statement merchant su bmits question mark \\( \\? \\) merchant descriptor converted space cardholder statement certain american express card ty pes programs ignore descriptors sent using soft descriptors optima card one types merchant contact american express presentative details non ecommerce transactions sent url qualify best interchange mastercard moto recurring industry types city phone field division level customer service ph one number cu stomer service phone number must populated customer service phone number field transaction error response reason code bp customer service phone reqd moto recurring mc orbital gateway apply asterisks \\( \\) necessary locations please add fields orbital virtual terminal chapter 6 administering virtual terminal version 4 2 setting preferences soft descriptors page 120 214 rules guidelines ecp automated clearing house \\( ach \\) uses two fields describe transaction consumer merchant name always appear consumer statement product description appear consumer stat ement majority time required fields chase paymentech recommends us ing business \\( dba \\) description value merchant name field product information product description field utilizing soft descriptor ecp transactions merchant name product description mandatory pns tampa support rules guidelines support soft descriptors via pns host customers processing chase paymentech canada unlike salem value passed cardholder statement merchant name field customers maximum 25 bytes data soft descriptor fields optionally sent submitted settlement host displa cardholder statement setting descriptors access soft descriptor menu merchant id user id must enabled soft descriptors 1 select admin soft descriptors menu 2 create soft descriptors press new descriptor button admin soft descriptors page orbital virtual terminal chapter 6 administering virtual terminal version 4 2 setting preferences soft descriptors page 121 214 figure 85 new descriptor 3 click credit card electronic check radio button 4 selecting credit card enter text merchant name product description combination b enter customer service phone number mercha nt url merchant e mail address c press add descriptor add set default \\( soft descriptor set default option \\) button orbital virtual terminal chapter 6 administering virtual terminal version 4 2 setting preferences soft descriptors page 122 214 figure 86 new credit card soft descriptor 5 clicking electron ic check radio button enter text merchant name product description e press add descriptor add set default \\( soft descriptor set default option \\) button figure 87 new ecp soft descriptor 6 search existing soft descriptors en ter search parameters provided fields press search button orbital virtual terminal chapter 6 administering virtual terminal version 4 2 setting preferences soft descriptors page 123 214 figure 88 admin soft descriptors 7 list descriptors displayed figure 89 soft descriptors search results 8 edit existing descriptor click radio button descr iptor click edit button make modifications necessary click update descriptor update set default button default button set descriptor default descriptor new order page 9 set inactive descriptor active status active descriptor inactive status click radio button th e descriptor click active inactive button 10 set specific descriptor default de scriptor click radio button descriptor click set default button orbital virtual terminal chapter 7 working reports version 4 2 reports page 124 214 chapter 7 working reports reports virtual terminal enables users generate retrieve reports previous chapter included discussion cr eating reports demand reports admin reporting admin demand reports reports also created following search queries selecting detail report detail file query type dropdown menu open batch closed batch profile created reports easily located retrieved reporting menu tab locating reports locate generated report 1 click reporting vt menu bar retrieve report page displayed along current day reports 2 adjust search parameter report status select appropriate option dropdown menu 3 adjust search parameter submitter select appropriate user name person ordered report dropdown menu 4 adjust search parameter report type select report pdf file csv dropdown menu 5 adjust search parameter reporting options select appropriate report type dropdown menu 6 adjust search parameter report submission date uncheck box beside filter submit date change dates needed 7 click search button screen refresh list reports meeting search criteria orbital virtual terminal chapter 7 working reports version 4 2 reports page 125 214 figure 90 reporting retrieve reports retrieving saving reports retrieve save reports 1 click radio button next report 2 click retrieve report button selecting report report opens automatically pdf adobe acrobat reader may save copy report within ad obe csv file format pop asks whether save open file may choose either point need choose 3 rd party software wish use view file note reporting default card ccount numbers truncated e masked means see last 4 numbers card acco unt preceding numbers account replaced xs excel quick tip unmasked account numbers excel automatically displays account nu mber field numeric field excel numeric field length defaults 15 digits account numbers longer 15 digits presented properly avoid issue first save file open excel import file changing account number field text field orbital virtual terminal chapter 8 working profiles version 4 2 profiles managed billing page 126 214 chapter 8 working profiles orbital virtual terminal includes functionality called customer profile management e tokenization allows card holder data stored within orbital gateway merchant process transactions simply passing token value representing cardholder using customer profile id e token simplifies transaction processing mitigates data entry errors additionally eliminates need store sensitive information house focus growing business chase paymentech solutions focuses securely processing transactions profiles managed billing profile management provides flexibility single transaction proce ssing recurring billing deferred billing orbital gateway store relevant info rmation processing three options standard customer profile initiate transaction request recurring installment billing establish recurrent billing schedule orbital gateway processes transactions according pre set schedule please see managed billing section additional information deferred billing set future one time billing date orbital gateway kicks authorization capture process designated date please see managed billing section additional information creating profile utilized profile management merchant account must enabled functionality please contact account repr esentative already set program enabled next step crea te customer profiles done two ways create profile distinct action create profile part transaction request profile exists used process new transaction information stored profile used populate transaction data elements always option override part profile subseq uent transaction finally profile updated even deleted point creating profile distinct action create profile discrete action us er must profile administration rights right also known permission admin profile management page accessed create profile two conven ient ways navigate profile admin page using vt menu bar select admin profile management new order page simply click create profile 1 click new profile button open profile configuration tab orbital virtual terminal chapter 8 working profiles version 4 2 creating profile page 127 214 figure 91 new profile button 2 profile configuration page displayed using available options enter cardholder related data wa nt orbital system store note unique profile id card number minimally required additional information may required noted required field symbol example expiration date credit card orbital virtual terminal chapter 8 working profiles version 4 2 creating profile page 128 214 figure 92 new profile cardholder data 3 create unique profile id one following methods manually profile id box enter unique identification number unselect use next available profile id check box guide lines creating profile id follow length range 1 22 characters valid characters abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789 space character warning space character cannot leading character alpha characters stored uppercase characte rs profile id 12aaa stored profile id 12aaa since profile ids cannot duplicated system allow creation second profile id 12aaa note unique profile id card number minimally required additional information may required noted required field symbol example expiration date credit card orbital virtual terminal chapter 8 working profiles version 4 2 creating profile page 129 214 systemically leave use next available profile id box checked orbital gateway create profile id behalf 4 box next profile status select active 5 desired required internal proc esses enter following optional data respective boxes f enter customer name g enter customer address information h enter e mail address enter phone number j enter order description 6 check use profile number order number want create order id name profile order id appears pti reporting offered global platform merchants 7 check use profile id order description want order description reflect name profile order description appears customer defined data rol reporting offe red north american platform 8 box next payment method choose one opti ons dropdown menu 9 enter information method payment method payment required fields may additional opti onal fields example credit card following options k enter card number l enter expiration date 10 desire required internal processes enter amount used populate amount field new order created using profile may overridden new order page 11 click add store profile data page refreshes displaying profile add message indicates formation successfully saved stored profile may used subsequent transactions creating profile processing transaction profile may created along new order transaction user must profile administration permission referenced information following new order fields included part profile card number expiration date amount country code order description customer name street city state postal code e mail address found optional data tab customer phone orbital virtual terminal chapter 8 working profiles version 4 2 page 130 214 figure 93 profile management fields new order page 1 check add profile management box screen refreshe displaying customer profile data fields 2 click radio button beside option want use create profile id click blank box enter profile id manually create profile id n click use next available profile id orbital gateway systemically create profile id click use order number profile id create profile order id name p click use order description profile id create profile order description name 3 desired required internal processes en ter customer name profile customer name box 4 click auth auth capture process transaction create profile orbital virtual terminal chapter 8 working profiles version 4 2 locating existing profile page 131 214 adding profile pa rt processing new order tr ansaction profile response code displayed response page indicates profile successfully created problem error creating profile profile response codes listed appendix profile response codes figure 94 new order auth response profile data locating existing profile profile created stored used later date process transactions profile located couple ways th e approaches begin proceeding either admin new order pages search admin profile management select admin profile management open admin profile management page search profile id use one combination following search criteria 1 search profile id enter part full profile id box 2 search account enter full partial account number box last four digits last 4 box 3 search customer name enter full partial name box 4 search postal code enter full partial code box 5 search payment method select one available options 6 search status profile select one available options orbital virtual terminal chapter 8 working profiles version 4 2 locating existing profile page 132 214 7 addition search parameters mentioned date range utilized narrow search request check th e box next date range change dates needed date range needed leave date range box unchecked 8 query type leave default display screen 9 click search button new page appears displaying search results 10 click radio button next profile id select 11 click command button action want take click use profile taken new order page stored profile information used populate various fields clicking edit view profile takes profile configuration page displays profile information figure 95 use edit view profiles search new order two profile icons displayed new der page one takes admin profile management screen second displays matchi ng profiles based matching keystrokes search profiles icon 1 click search profiles icon various search parameters displayed admin profile management page please see search admin profile management section information search profiles orbital virtual terminal chapter 8 working profiles version 4 2 using profile transaction page 133 214 2 profile found click radio button profile click command button action wish take profile auto suggest feature know profile id want quickly pull use profile auto suggest text box 1 begin entering profile id number tool find profile ids match entry dynamically display drop box 2 choose profile displayed drop box using either mouse enter key data selected profile populates new order page figure 96 profile auto suggest feature using profile transaction profile created us ed process subsequent transactions locate profile one methods explained locating existing profile section admin profile management search new order search profiles new order profile auto suggest orbital virtual terminal chapter 8 working profiles version 4 2 editing profile page 134 214 process transaction 1 click radio button besi de profile click use profile admin profile management search page select profile using auto suggest icon new order page data selected profile populates new order fields 2 edit information fields necessary 3 add additional information necessary accordance internal processes 4 click command button action want take editing profile profile data elements ea sily modified changed exception profile id used must unique value even profile deleted profile id may reused edit profile first locate either clicking search profiles icon new order page selecting admin profile management vt menu bar follow steps previously discussed search admin profile management section edit profile 1 list displayed profiles click radio button next profile id viewed 2 click edit view profile button 3 edit profile entering new information respective boxes choosing another option dropdown menus note profile id data element cannot changed 4 click update save edit changes message displayed top page indicating su ccessful update note users profile management role administrator update profiles orbital virtual terminal chapter 8 working profiles version 4 2 profile status page 135 214 figure 97 update profile profile status although several statuses may applied profile one may applied given moment profile status may viewed changed admin profile management page profile configuration tab following statuses displayed active active profile used transaction processing active mb profile enabled eith er recurring deferred billing schedule managed billing profile also used process one transactions manual suspend profile use sale transactions suspended merchant may still used process credits returns auto suspend profile use systemically su spended based pre selected rules set merchant inactive profile inactivated merchant neither sale credit refund transactions processed profile orbital virtual terminal chapter 8 working profiles version 4 2 profile status page 136 214 note merchant account may th e features enabled may see status listed change profile status 1 locate profile navigate profile configuration screen 2 click arrow box beside profile status 3 click profile status applied 4 click update message displayed top page indicating profile updated delete profile 1 locate profile navigate profile configuration screen 2 click delete button message displayed top page indicating profile successfully deleted warning profile deleted access permanently removed profile cannot located viewed modified appear reports although longer accessible profile id cannot reused orbital virtual terminal chapter 8 working profiles version 4 2 change log page 137 214 figure 98 profile status change delete change log information regarding changes made managed billing profiles tracked via change log log available viewing profile level displays changes made along user made changes view history profile changes 1 locate specific profile navigate profile configuration page 2 click change log tab orbital virtual terminal chapter 8 working profiles version 4 2 change log page 138 214 figure 99 profile change log 3 click radio button beside change wish view greater detail 4 click view details 5 review two columns information identify changes made note change profile action recorded update command button clicked profile configuration page regardless whether new info rmation entered difference found change log detail columns update command button clicked without new information ente red profile orbital virtual terminal chapter 9 managed billing version 4 2 change log page 139 214 chapter 9 managed billing managed billing service take profile management next step invoked convenient service manages processing authorization capture transactions according merchant pre defined rules automati simplifies billin g process recurring transactions additionally risk cost issues relating human error mitigated effective service recurring installment deferred billings recurring cardholder agrees regular going billing designated amount specified time interval installment cardholder agrees set number payments specified time purchase item deferred transaction single billing triggered predefined future date managed billing supports following card types american express discover card jcb mastercard visa maestro uk domestic electronic check supported salem platform managed billing first requires customer profile management set merchant \\( mid \\) level next one two managed billing options selected either recurring also supports installment billing deferred following additional functions established merchant level applicable profiles individual profile billing schedule order number generation automated cardholder notifications via e mail billing schedule whether enabled recurring deferred billing schedule must established may established merchant level profile level individual profile setting override merchant level setting specific profile profile billing schedules parameters \\( dates number occurrences ca rd information etc \\) edited modified time however ensure ne xt billing occurs desired changes made least 24 hour advance billing recurring installment parameters merchant level create merchant level billing schedule click admin profile managed billing open admin profile managed billing admin page page may choose create recurrent billing pattern applied managed billing profiles note individual profile parameters selected individual profile level always supersede merchant level parameters orbital virtual terminal chapter 9 managed billing version 4 2 change log page 140 214 figure 100 admin profile managed billing admin \\( recurring billing \\) establish merchant level recurring billing pattern 1 select one recurrence pattern defines th e frequency payment transaction processing specified recurrent pattern choose option specifying recurrent pattern merchant level weekly number week \\( \\) day week click weekly radio button enter number weeks billings select day week billings occur monthly day month \\( \\) weekday month \\( \\) click monthly radio button follow following click radio button day enter specific day month number months billings click radio button select order select day enter number months billings yearly month day weekday month click yearly radio button select one following click radio button recur every select month enter specific day month click radio button select order select day select month orbital virtual terminal chapter 9 managed billing version 4 2 change log page 141 214 note 31st day month select ed months less 31 days billing occur last day month 2 select range recurrence define long cardholder billed choose one following specified recurrent pattern choose option specifying recurrent pattern merchant level start user defined future start date billings date must least one day information entered select month select day month select year note billing schedule changed modified typically new start date required click one following billing range options end date click radio button end date going billing billings continue according designated billing pattern action taken end billing end blank billings choose specific number billings click radio button end enter number billings end choose date billings end click radio button end select month select day select year 3 select one two methods generate order number order number order id used populate order id rder number mana ged billing payment transactions profile id select use profile id use profile id also known customer reference number order id order number dynamic select dynamic use systemically created computed number combining 16 bytes profile id incrementing integers 4 click save button save settings recurring installment parameters profile level billing pattern may established ch anged individual profile level decisions described merchant level locate access profile use procedures discussed working profiles section establish merchant level recurring billing pattern 1 click add managed billing recurring found close bottom profile management page soon checked page refreshes override default options 2 apply defaults displayed click update orbital virtual terminal chapter 9 managed billing version 4 2 change log page 142 214 3 change defaults c lick override defaults 4 make selections 5 click update button updated parameters immediately applied authorization capture request initiated accordance billing schedule figure 101 managed billing schedule options orbital virtual terminal chapter 9 managed billing version 4 2 change log page 143 214 deferred billing parameters merchant level set deferred billing parameter merchant level use admin profile managed billing option open admin profile managed billing admin page page may choose save method creati ng order number deferred billing transactions two choices availa ble recurring installment billing establish order number parameter 1 select one two methods generate order number order number order id used populate order id rder number mana ged billing payment transactions profile id select use profile id use profile id also known customer reference number order id order number dynamic select dynamic use systemically created computed number combining 16 bytes profile id incrementing integers 2 click save button save settings figure 102 admin profile manage billing admin \\( deferred billing \\) deferred billing parameters profile level deferred billing used establish future date process transaction date set profile level one future payment defined per profile time navigate profile configuration tab admin profile management page either creating new profile locating existing profile add deferred managed billing profile 1 check box next add managed billing deferred found end profile settings checked screen refres hes displaying two additional fields orbital virtual terminal chapter 9 managed billing version 4 2 change log page 144 214 figure 103 deferred billing options 2 select one two methods generate order number order number order id used populate order id order number managed billing payment transactions profile id select use profile id use profile id also known customer reference number order id order number dynamic select dynamic use systemically created computed number combining 16 bytes profile id incrementing integers 3 select deferred billing date month day year date deferred transaction processed auth orized settled approved 4 click add new profiles update existing profiles message indicated successful add update displayed orbital virtual terminal chapter 9 managed billing version 4 2 change log page 145 214 scheduled billings list future billings associated billing schedule available maximum 20 future billings displayed admin view managed billing page navigate page using admin profile management page selecting scheduled billing tab following page appears p portion screen displays profile information including billing schedule information bottom section provides future billings dates cardholder account number dollar amount status figure 104 view managed bi llings scheduled billings skip billing option skip billing provided click radio button beside billing date skipped click skip billing button suspends billing date designated confirmation message appears top screen status change billing skipped billing resume next scheduled date note profile established set number scheduled billings skip functionality moves skipped billing end schedu led billings eliminate billing orbital virtual terminal chapter 9 managed billing version 4 2 change log page 146 214 figure 105 skipped billing skipped billing restored prior bil ling date clicking radio button next skipped billing date restored billing button message indicating restored appears status changed billing pending ensure success restore billing action completed least 24 hours advance billing date orbital virtual terminal chapter 9 managed billing version 4 2 change log page 147 214 figure 106 restored billing cancelled billing managed billing functionality turned profile level merchant level cancels future billings remove managed billing profile level 1 locate profile 2 uncheck box next add managed billing 3 click update button update message displayed note managed billing resumed checking th e add managed billing box merchant level recurring billing settings applied unless overridden manual reset profile level remove managed billing merchant level deactivate managed billing functiona lity merchant level gateway support must contacted turned rchant level future billings every managed billing profile frozen removed functionality restored billing pattern resumes th e point interrupted orbital virtual terminal chapter 9 managed billing version 4 2 change log page 148 214 completed billings six month history processed manage billing transactions viewed virtual terminal accessed completed billings tab admin profile management page top portion page disp lays basic profile information including billing schedule bottom section contains following billing date order id card holder number amount transaction status figure 107 view managed bi llings completed billings view details transactions c lick associated radio button view order review view order screen displayed page discussed viewing transaction details section change log information regarding changes made naged billing profiles tracked log available tracks changes user made changes view history profile changes 1 locate specific profile navigate profile configuration page orbital virtual terminal chapter 9 managed billing version 4 2 change log page 149 214 2 click change log tab figure 108 profile change log 3 click radio button beside change wish view greater detail 4 click view details 5 review two columns information identify change made note change profile action recorded update command button clicked profile configuration page regardless whether new information entered difference found change log detail columns update command button clicked without new information entered profile orbital virtual terminal chapter 10 working purchasing cards version 4 2 entering purchasing card data purchase page 150 214 chapter 10 working purchasing cards orbital gateway supports processing procurement cards purchasing card fully supporting enhanced data required visa mastercard level 2 level 3 data additionally american express orbital gateway salem customers supports level 2 enhanced transaction advice addenda \\( taa \\) purchasing cards level 3 data typica lly used business business environment provides collects funds outstand ing invoices merchants ability collect funds conjunction settlement credit card transactions still provide customer necessary line item detail providing cleaner process merchant customer entering purchasing card data purchase three levels purchasing card data collected level data normally required credit card transaction \\( described processing credit card purchase \\( authorization capture \\) \\) level ii additional fields notably purchase order number sales tax amount level iii detailed line item data pertaining item found transaction merchant must configured feature currently supports u dollar currency transactions special interchange rates apply level ii iii data included transaction contact sales accoun representative information enter purchasing card level ii iii da ta part authorization capture force transaction fields purchasing card tabs identical types transactions procedure uses new order auth page illustrate tabs enter purchasing card data purchase force 1 want enter purchasing card le vel ii data purchase select purchasing card data ii tab note card number amount fields recommended data tab must completed order process information entered either purchasing card tabs orbital virtual terminal chapter 10 working purchasing cards version 4 2 entering purchasing card data purchase page 151 214 figure 109 entering purcha sing card level ii data purchase order sales tax amount destination zip code fields conditionally required enter value one must enter value fields illustrated next figure destination zip code field moved level iii tab enabled level purchase card data transaction advice addendum records ship information fields apply amex purchasing card transactions fields visible merchants salem platform 2 enter purchase order customer sales tax amount entire transaction 3 fields transaction advice addendum records section enter specific details transaction di splayed cardholder 's statement purchase identification tracking purposes taas concise possible still providing adequate information example taa merchandise would acceptable 4 enter shipping address information 5 entering purchase card level ii da ta purchase click command button action want take 6 want enter purchasing card le vel iii data purchase select purchasing card data iii tab orbital virtual terminal chapter 10 working purchasing cards version 4 2 entering purchasing card data purchase page 152 214 figure 110 entering purchasi ng card level iii details \\( salem merchant mastercard \\) purchasing card data iii tab contains two sections enter order level detail section top enter information pertaining entire transaction enter line item section bottom enter information item transaction note different fields displayed tab tampa merchants salem merchants also different fields displayed required visa purchasing cards mastercard tab also contains variance calculator floating window \\( circled figure 110 \\) actively calculates su completed line item entries \\( unit cost quantity \\) discount amount compares overall transaction amount variance calculator also contains buttons submit transaction button main portion tab allows save line item caution tampa merchants variance must zero submitting transaction transaction accepted line item total greater transaction total 7 enter order level detail section complete fields information applies entire transaction field tampa salem description freight amount total freight shipping handling charges enter numeric values format two decimal places \\( \\) destination country code select two character code country goods shipped orbital virtual terminal chapter 10 working purchasing cards version 4 2 entering purchasing card data purchase page 153 214 field tampa salem description destination zip code zip postal code location goods shipped required best interchange rate ship zip zip postal code location goods shipped required best interchange rate duty amount total charges import export duties included transaction discount amount visa sent mastercard total amount discount applied transaction merchant vat tax amount visa sent mastercard total amount vat tax included transaction vat tax rate visa sent mastercard total amount vat tax included \\( expressed percentage terms \\) transaction 8 enter line item section complete fields first line item purchase note fields except tax type applied discount amount required line item correct value field \\( commodity code product code \\) known must still enter value field tampa salem description item type select sale return identify type line item entry product code product code item purchased description text description item purchased unit cost unit cost item purchased quantity number units item purchased unit measure select unit measure used line item units measure configured merchant account included list tax rate tax rate applied item tax amount tax amount applied item commodity code visa commodity code used classify item purchased discount amount amount discount applied line item optional enter values line item total calculated using following formula orbital virtual terminal chapter 10 working purchasing cards version 4 2 entering purchasing card data purchase page 154 214 line item total \\( unit cost quantity \\) discount amount note note line item total include tax 9 click save line item figure 111 purchasing card level iii data line item defined fields enter line item section cleared line item number incremented line items section added bottom tab section lists information line item click edit option edit information line item remove option line item remove transaction caution aware prompted confirm removal line item transaction variance calculator updated reflect line item total value line items defined variance value represents remain ing purchase amount needs accounted additional line items variance value displayed red negative balance remaining amounts calculated line items surpasses amount indicated recommended data tab caution tampa merchants variance must equal zero submit transaction 10 repeat steps 8 9 line item purchase orbital virtual terminal chapter 10 working purchasing cards version 4 2 entering purchasing card da ta purchase card credit refund page 155 214 11 click auth capture auth variance calculator entering purchasing card data purchase card credit refund two levels purchasing card data collected level data normally required credit card transaction \\( described processing credit card purchase \\( authorization capture \\) \\) level ii additional fields nota bly purchase order number sales tax amount destination postal code 1 want enter purchasing card le vel ii data credit refund select purchasing card data ii tab note card number amount fields recommended data tab must completed order process information entered either purchasing card tabs figure 112 entering purchase ca rd level ii data credit purchase order sales tax amount destination zip code fields conditionally required enter value one must enter value fields tax indicator field visible master card transaction transaction advice addendum records ship information fields apply amex purchasing card transactions fields visible merchants salem platform orbital virtual terminal chapter 10 working purchasing cards version 4 2 entering purchasing card da ta purchase card credit refund page 156 214 2 enter purchase order customer sales tax amount entire transaction destination zip code 3 fields transaction advice addendum records section enter specific details transaction di splayed cardholder 's statement purchase identification tracking purposes taas concise possible still providing adequate information example taa merchandise would acceptable 4 enter shipping address information 5 click credit orbital virtual terminal chapter 11 working gift cards version 4 2 processing new gift card transaction page 157 214 chapter 11 working gift cards orbital virtual terminal supports chase paym entech solutions prop rietary stored value card product called gift card \\( f ormerly known flexcache \\) functionality available salem tampa merchants merchant account set interested processing gift card please contact chase paymentech solutions account representative begin set process set gift card see flexcache tab vt menu bar within menu choose process gift card transaction type access current historical transactions options within menu new transaction balance inquiry activation current transactions historical transactions processing new gift card transaction flexcache new transaction menu several transaction options presented authorization supported salem merchant allows authorization puts hold funds 7 days must capture th e transaction within 7 days 7 days must perform new authorization capturing transaction done open batch section redemption allows process redemption transaction equivalent sale transaction credit card environment prior redemption supported tampa merchants used voice authorization obtained add value allows add value customer card prior add value supported tampa merchants used voice authorization obtained refund places value back customer flexcache card note following section displays transact ion order page view response page see figure 117 gift card response page orbital virtual terminal chapter 11 working gift cards version 4 2 processing new gift card transaction page 158 214 figure 113 gift card new transaction page performing gift card authorization almost gift card transactio ns immediately affect card balance meaning add reduce funds based result circumstances might desire perform sale wherein authorization performed funds actually moved one reason example might deferred shipment goods auth transaction exactly redu ces available buy amount without reducing actual funds item shipped performing redemption complete transaction two different optional behaviors managing rede mptions partial redemption redemption completion formation two options see performing gift card sale \\( redemption \\) generally speaking authorization holds th e requested funds seven days funds available note functionality available merchants processing salem platform perform gift card authorization 1 select flexcache new transaction open flexcache new transaction page 2 click auth radio button 3 card number box enter gift card num ber include spaces 4 enter amount sale amount box 5 enter order id purchase transaction 6 desired required internal processes enter employee id 7 desired required internal processes enter order description orbital virtual terminal chapter 11 working gift cards version 4 2 processing new gift card transaction page 159 214 8 enter card verification data 2 number extra security feature option may choose use th extra feature please notify account executive decision time set 9 click auth button performing gift card sale \\( redemption \\) redemption mechanism perform immediate redempti completed redemptions reversed partially redeemed partially redeeming redemption original redemption released new redemption performed new amount see viewing transaction details information perform partial redemption security reasons gift card progra ms require four digit cvd \\( cardsecval \\) printed front card included redemption request 1 select flexcache new transaction open flexcache new transaction page 2 click redemption radio button 3 card number box enter gift card num ber include spaces 4 enter amount sale amount box 5 enter order id purchase transaction 6 desired required internal processes enter employee id 7 desired required internal processes enter order description 8 enter card verification data 2 number extra security feature option may choose use th extra feature please notify account executive decision time set 9 click redemption button performing prior redemption merchants processing pns host process prior redemption transactions additionally providing correct prior approval code valid prior approval code passed treated new redemption request prior redemption transactions suppor ted salem syst em therefore salem merchants attempting process prior redemption receive error response 1 select flexcache new transaction open flexcache new transaction page 2 click prior redemption radio button 3 card number box enter gift card num ber include spaces 4 enter amount sale amount box 5 enter order id purchase transaction 6 desired required internal processes enter employee id 7 desired required internal processes enter order description orbital virtual terminal chapter 11 working gift cards version 4 2 processing new gift card transaction page 160 214 8 enter prior auth approval code obtained vi voice authorization 9 enter card verification data 2 number extra security feature option may choose use th extra feature please notify account executive decision time set 10 click prior redemption button adding funds gift card balance transaction adds value active card add value performed inactive card activates card performs add value action 1 select flexcache new transaction open flexcache new transaction page 2 click add value radio button 3 card number box enter gift card num ber include spaces 4 enter amount added card amount box 5 enter order id purchase transaction 6 desired required internal processes enter employee id 7 desired required internal processes enter order description 8 enter card verification data 2 number extra security feature option may choose use th extra feature please notify account executive decision time set 9 click add value button performing prior add value merchants processing pns host process prior add value transactions additionally passing correct prior approval code valid prior approval code passed treated new add value request prior add value transactions suppor ted salem syst em therefore salem merchants attempting process prior dd value receive error response 1 select flexcache new transaction open flexcache new transaction page 2 click prior add value radio button 3 card number box enter gift card num ber include spaces 4 enter amount added card amount box 5 enter order id purchase transaction 6 desired required internal processes enter employee id 7 desired required internal processes enter order description 8 enter prior auth approval code obtained vi voice authorization 9 enter card verification data 2 number extra security feature option may choose use th extra feature please notify account executive decision time set orbital virtual terminal chapter 11 working gift cards version 4 2 viewing balance available gift card page 161 214 10 click prior add value button refunding purchase value gift card transaction initiating refunds gift card essentially add value transaction 1 select flexcache new transaction open flexcache new transaction page 2 click refund radio button 3 card number box enter gift card num ber include spaces 4 enter amount added card amount box 5 enter order id purchase transaction 6 desired required internal processes enter employee id 7 desired required internal processes enter order description 8 enter card verification data 2 number extra security feature option may choose use th extra feature please notify account executive decision time set 9 click refund button viewing balance available gift card option allows inquire current balance card without adding subtracting value 1 select flexcache balance inquiry 2 enter card number 3 enter card verification data 2 value security reasons gift card programs require four digit cvd \\( cardsecval \\) printed front card included \\) 4 click submit inquiry button figure 114 gift card balance inquiry page orbital virtual terminal chapter 11 working gift cards version 4 2 gift card activation page 162 214 response displays cu stomer current balance figure 115 gift card bala nce inquiry response page gift card activation flexcache activation menu user process following types activations single activation must first activate card perform transaction transact ion activates one card time note orbital gateway supports 0 activation transactions pns \\( bin 000002 \\) block activation block activation activate 10 000 cards one time reactivation card deactivated may choose reactivate using transaction request deactivation may deactivate card transaction type prior activation supported tampa merchants transaction type used voice authorization obtained activating single gift card must first activate card yo u perform transaction transaction activates one card time 1 select flexcache activation menu open flexcache activation page 2 click single activatio n radio button orbital virtual terminal chapter 11 working gift cards version 4 2 gift card activation page 163 214 3 card number box enter gift card num ber include spaces 4 enter amount needs activated amount box 5 enter order id purchase transaction 6 desired required internal processes enter employee id 7 desired required internal processes enter order description 8 click single activate button figure 116 gift card single activation page response page displayed either approval decline figure 117 gift ca rd response page orbital virtual terminal chapter 11 working gift cards version 4 2 gift card activation page 164 214 activating block gift cards block activation provides ability activate one card time maximum 10 000 cards activated one time block activation fails none cards block activated 1 select flexcache activation menu open flexcache activation page 2 click block activation radio button 3 card number box enter gift card number card number first card series include spaces 4 additional cards field enter total number cards need activated less card entered card number box card number card number field counts first card number entered additional cards field balance number cards wish activate example wish activate 500 cards enter first card number card number field specify 499 cards additional cards field 5 enter amount needs activated card 6 enter order id purchase transaction 7 desired required internal processes enter employee id 8 desired required internal processes enter order description 9 click activate button figure 118 block activation page clicking activate button directed intermediate page informs activation request proce ssed due high number cards potentially activated page option return block activation page linking block activation results page orbital virtual terminal chapter 11 working gift cards version 4 2 gift card activation page 165 214 figure 119 block activa tion processing page clicking block activation results button status block activations displayed page displays information th may determine block activation successful failed please note may submit 10 000 cards block activation process broken bl ocks 100 means block 100 may fail one block fails entire block ac tivation stops processing view updated status block activation click refresh results button refresh results activated columns figure 120 block activation status results may drill particular bloc k clicking radio button clicking view block details button view block page displays card numbers within chosen block thei r individual status exampl e block activate failed view individual cards within block click radio button transaction click view order button orbital virtual terminal chapter 11 working gift cards version 4 2 gift card activation page 166 214 figure 121 block activate details page reactivating gift card card deactivated may choose reactivate using transaction request 1 select flexcache activation menu open flexcache activation page 2 click reactivation radio button 3 card number box enter gift card num ber include spaces 4 enter amount needs reactivated amount box 5 enter order id purchase transaction 6 desired required internal processes enter employee id 7 desired required internal processes enter order description 8 click reactivate button note reactivation page similar single activation page see activating single gift card examples entry page response page deactivating gift card may deactivate live card performing deactivation please note card deactivated cannot choose activate must reactivate 1 select flexcache activation menu open flexcache activation page 2 click deactivation radio button 3 card number box enter gift card num ber include spaces 4 enter order id purchase transaction orbital virtual terminal chapter 11 working gift cards version 4 2 working gift card batches page 167 214 5 desired required internal processes enter employee id 6 desired required internal processes enter order description 7 click deactivate button note deactivation page similar single activation page see activating single gift card examples entry page response page prior activation gift card prior activation similar single activation performed manual voice approval obtained transaction additional prior auth approval code field required populated manually obtained voice approval code order complete transaction prior activation supported tampa merchants 1 select flexcache activation menu open flexcache activation page 2 click prior activation radio button 3 card number box enter gift card num ber include spaces 4 enter amount sale amount box 5 enter order id purchase transaction 6 desired required internal processes enter employee id 7 desired required internal processes enter order description 8 enter prior auth approval code obtained vi voice authorization 9 click prior activate button note prior activation page similar single activation page see activating single gift card examples entry page response page working gift card batches since transactions affect balance card real time gift card transactions affected end day pr ocess options methods payments \\( e credit cards \\) instead transactions au tomatically fall one tw buckets viewed virtual terminal current transactions \\( incl udes un settled activity \\) authorizations redeemed \\( redemption completion \\) declined transactions errors historical transactions \\( redeemed items \\) items grouped daily basi timing chase paymentech gift card system ports activity 5a 5a note true gift card reporting available th e gift card system including resource online questions available reports directed account manager virtual terminal used gift card reconciliation orbital virtual terminal chapter 11 working gift cards version 4 2 working gift card batches page 168 214 viewing current transactions \\( open batch \\) view manage generate reports gift card transactions yet settled select flexcache current transactions addition performing numerous actions may also choose view transact ion details summary transactions 1 select flexcache current transactions view flexcache current transactions page 2 search bloc k activations click search block activations checkbox choosing option refreshes screen allows choose date range 3 search transaction type select option fr om dropdown menu auth auth reversal redemption redemption reversal add value add value reversal refund refund reversal single activation single activation reversal block activation block activation reversal deactivation deactivation reversal reactivation reactivation reversal balance inquiries declines errors 4 search specific gift ca rd number enter value card number box 5 search order id number enter value order box 6 search flexcache host reference number enter value returned transaction response 7 search transaction reference number txrefnum enter value returned transaction response 8 addition search paramete rs mentioned date range utilized narrow search request default date range set current day change dates needed date range needed uncheck date range checkbox orbital virtual terminal chapter 11 working gift cards version 4 2 working gift card batches page 169 214 figure 122 current transactions search page results output search criteria selected several methods generating results choose one th e following options query type dropdown box complete search detailed transactions \\( default \\) search results outputted screen immediate viewing indivi dual transactions displayed groups 10 screen additional functionality accessed redeem redeem partial reverse order see viewing transaction details summary query search results summarized screen transaction counts various transaction types provided examples include sale counts return counts see summary query transaction types may differ screenshot provided print summary page click print button change printer options landscape mode generate detail report search results provided pdf format report obtained reporting menu tab vt user id must enabled reporting order retrieve report see working reports information retrieving reports orbital virtual terminal chapter 11 working gift cards version 4 2 working gift card batches page 170 214 generate detail file search results provided csv format report obtained reporting menu tab vt user id must enabled reporting order retrieve report see working reports information retrieving reports viewing transaction details detailed transactions query allows manage gift card transactions current batch click radio button transaction viewed click desired button perform action figure 123 gift card current transactions search results view order button displays response data fr om original transaction approval code provided transact ion approved stored value host system response code orbital gateway response code indicating status transaction 00 indicates transaction successful approved number greater 00 generally indicates decline error text message indicate exact erro r message associated response code see response codes list response codes card verification data response code provided stored valu e host system card verification number submitted new order request see cvv2 cvc2 cid response codes list cvd response codes orbital virtual terminal chapter 11 working gift cards version 4 2 working gift card batches page 171 214 previous balance balance gift card prior current transaction transaction amount amount current transaction current balance balance gift card current transaction processed card number gift card number pr ovided original transaction order id order number transaction flexcache host reference number reference number returned stored value host system transaction date date transaction originally created transaction reference number unique identifier assigned transaction also known orbital gateway reference number transaction last modification user id user id system last modified transaction figure 124 current transactio ns transaction details page redeem button salem merchants redeems gift card authorization transaction full amount authorization remaining balance capture setting enabled flexcache admin page rede mption amount less authorized amount see remaining balance capture setting information setting works redeem partial button orbital virtual terminal chapter 11 working gift cards version 4 2 working gift card batches page 172 214 salem merchants allows redeem amount less authorized amount choosing option directs another page specify redemption amount please note releases hold remaining balance original authorization figure 125 redeem partial order page reverse order button transaction excluding balance inquiries reversed thus returning transaction state prior action reversed may perform reversal subsequent transactio ns run card negates affect initial transaction example may reverse activation subsequent transaction ca rd deactivated two restrictions relates processing reversals salem customers reversal must performed within seven days original transaction pns based customers reversal mu st performed next batch close closing gift cad batches usually performed automatically tampa host system 5 00a est regardless auto settle time gateway note gift card transactions cannot manually settled transactions current transactions \\( open batch \\) settled daily appr oximately 5 00 point moved historical transactions \\( closed batch \\) exceptions auth transactions remain open batch transaction type changed summary query summary query displays summary gift card related activity based search filters summary information includes totals gift card transaction type orbital virtual terminal chapter 11 working gift cards version 4 2 working gift card batches page 173 214 figure 126 current transa ctions summary query viewing historical transactions \\( closed batches \\) search historical gift card transactions select flexcache historical transactions historical transactions tran sactions previously settled may view transactions details reverse transactions page 1 select flexcache historical transactions view flexcache historical transactions page 2 search bloc k activations click search block activations checkbox choosing option refreshes screen allows choose date range 3 search transaction type select option fr om dropdown menu auth auth reversal redemption redemption reversal add value add value reversal refund refund reversal single activation single activation reversal block activation block activation reversal deactivation deactivation reversal reactivation reactivation reversal balance inquiries declines errors 4 search specific gift ca rd number enter value card number box orbital virtual terminal chapter 11 working gift cards version 4 2 working gift card batches page 174 214 5 search order id number enter value order box 6 search flexcache host reference number enter value returned transaction response 7 search transaction reference number txrefnum enter value returned transaction response 8 addition search paramete rs mentioned date range utilized narrow search request default date range set current day change dates needed date range needed uncheck date range checkbox figure 127 historical transactions search page results output search criteria selected several methods generating results choose one th e following options query type dropdown box complete search detailed transactions \\( default \\) search results outputted screen immediate viewing indivi dual transactions displayed groups 10 screen additional functionality accessed reverse order see viewing historical transaction details orbital virtual terminal chapter 11 working gift cards version 4 2 working gift card batches page 175 214 summary query search results summarized screen transaction counts various transaction types provided examples include sale counts return counts see historical summary query transaction types may differ screenshot provided print summary page click print button change printer options landscape mode generate detail report search results provided pdf format report obtained reporting menu tab vt user id must enabled reporting order retrieve report see working reports information retrieving reports generate detail file search results provided csv format report obtained reporting menu tab vt user id must enabled reporting order retrieve report see working reports information retrieving reports viewing historical transaction details detailed transactions query allows vi ew reverse gift card transactions historical \\( closed \\) batch click radio button transaction viewed click desired button perform action figure 128 gift card historical transactions search results view order button displays response data fr om original transaction approval code provided transact ion approved stored value host system orbital virtual terminal chapter 11 working gift cards version 4 2 working gift card batches page 176 214 response code orbital gateway response code indicating status transaction 00 indicates transaction successful approved number greater 00 generally indicates decline error text message indicate exact erro r message associated response code see response codes list response codes card verification data response code provided stored valu e host system card verification number submitted new order request see cvv2 cvc2 cid response codes list cvd response codes previous balance balance gift card prior current transaction transaction amount amount current transaction current balance balance gift card current transaction processed card number gift card number pr ovided original transaction order id order number transaction flexcache host reference number reference number returned stored value host system transaction date date transaction originally created transaction reference number unique identifier assigned transaction also known orbital gateway reference number transaction last modification user id user id system last modified transaction orbital virtual terminal chapter 11 working gift cards version 4 2 working gift card batches page 177 214 figure 129 historical transactions transaction details page reverse order button transaction excluding balance inquiries reversed thus returning transaction state prior action reversed may perform reversal subsequent transactio ns run card negates affect initial transaction example may reverse activation subsequent transaction ca rd deactivated two restrictions relates processing reversals salem customers reversal must performed within seven days original transaction pns based customers reversal mu st performed next batch close closing gift card batches us ually performed automatically tampa host system 5 00a est regardless auto settle time gateway note gift card transactions cannot manually settled transactions current transactions \\( open batch \\) settled daily appr oximately 5 00 point moved historical transactions \\( closed batch \\) exceptions auth transactions remain open batch transaction type changed historical summary query summary query displays summary gift card related activity based search filters summary information includes totals gift card transaction type orbital virtual terminal chapter 11 working gift cards version 4 2 working gift card batches page 178 214 figure 130 historical tran sactions summary query orbital virtual terminal chapter 12 importing file version 4 2 working gift card batches page 179 214 chapter 12 importing file csv file import feature designed provide simplifi ed streamlined batch processing service average merchant needing process small medium sized batches merchants needing robust fu lly featured batch solution advised investigate chase paymentech orbital batch product note additional information available http download chasepaymentech com line design orbital virtual terminal accept batch file submissions form csv files \\( comma delimited files csv extension \\) users configured feature see import file tab vt menu bar right admin tab wish take advantage functionality currently available option vt please contact yo ur account executive sales representative direction creating csv file csv file format documented orbital gateway csv interface specification please contact account executive certification analyst information regarding specification files must csv extension pr operly formatted using proprietary csv format order process transactions via import file feature consequently users need successfully process csv test files chase paymen tech test environment prior configured import file feature produc tion environment importing csv file file created use import file tab vt menu bar get import file page figure 131 import file orbital virtual terminal chapter 12 importing file version 4 2 working gift card batches page 180 214 1 click browse button search computer csv file wish import 2 file found click import file button upload virtual terminal screen quickly updates show new file checking status csv file soon file imported appears import file page assigned status users shown current status file submit date completion date file name record count submitter \\( vt username person uploaded file \\) files cycle number status categories processing include received processing completed files also error state see error description hover word error mouse refresh status results time click refresh results button transactions successfully processed th ey viewed indivi dually either open batch review pages like transactions entered manually vt csv generated reporting csv file successfully processed \\( status completed \\) csv results file automatically generated located reporting menu tab format response file found orbital ga teway csv interface specification course users still generate ad hoc reportin g needed via standard method provided open batch review pages limitations file import feature single mid capable imported csv files may contain transact ions single merchant number user logged time file upload words user 15 merchant numbers needs submit 15 different csv files one logged respective merchant account vt batch merchants needing multi mid capable product use chase paymentech orbital batch product supports purchase card level ii csv file format supports level ii data level iii batch merchants needing level iii solution use chase paymentech orbital batch product orbital virtual terminal append ix partial authorizations version 4 2 working gift card batches page 181 214 appendix partial authorizations merchant option support partial authorization via virtual terminal enabled transactions approved portion original requested amount amounts approved requested displayed various pages within virtual terminal following example response page partial authorization user option void entire transaction clicking void partial auth button example event dditional form payment remaining balance cannot obtained figure 132 new order part ial authorization response within open batch menu tab details regarding partial authorizations viewed via recommended data response data tabs clicking order history button recommended data tab detailed information history partial authorization displayed including original amount requested orbital virtual terminal append ix partial authorizations version 4 2 working gift card batches page 182 214 figure 133 open batch view order order history partial authorization partial authorization information viewed response data tab transaction figure 134 open batch response data tab orbital virtual terminal appendix b codes reference version 4 2 response codes page 183 214 appendix b codes reference following section describes various type response codes returned virtual terminal response pages typical responses include host avs cvd codes response codes response code table describes va rious codes returned issuer host table 2 response code values code definition status action 00 approved approved none 01 call voice center decline voice 02 refer card issuer 's special conditions decline voice 03 invalid merchant number error fix 04 pickup decline cust 05 honor decline cust 06 error decline cust 07 stop deposit order decline cust 08 approved authorization honor identification approved none 09 revocation authorization decline cust 10 default call decline voice 11 approved authorization vip approval approved none 12 invalid transaction type decline cust 13 bad amount decline fix 14 invalid credit card number decline fix 15 default call low fraud decline voice 16 default call medium fraud decline voice 17 default call high fraud decline voice 18 default call unavailable fraud decline voice 19 enter transaction error resend 20 floor low fraud decline cust 21 floor medium fraud decline cust 22 floor high fraud decline cust 23 floor unavailable fraud decline cust 24 validated approved none orbital virtual terminal appendix b codes reference version 4 2 response codes page 184 214 26 pre noted approved none 27 reason decline decline cust 28 received stored approved none 29 provided authorization approved none 30 invalid value message error fix 31 request received approved none 32 bin alert approved none 33 card expired decline cust 34 approved partial approved none 35 zero amount error fix 36 bad total authorization amount error fix 37 invalid vbv mc secure payment data error fix 38 merchant mc secureco de enabled decline call 39 previously processed transaction error fix 40 requested function supported error call fix 41 lost stolen decline cust 42 account active decline cust 43 lost stolen card decline cust 44 account active error fix 45 duplicate transaction decline cust 46 blanks passed reserved field decline fix 50 positive id decline cust 52 processor decline decline cust 56 restraint decline cust 58 transaction permitted terminal error call 59 soft avs decline cust 60 honor low fraud decline cust 61 honor medium fraud decline cust 62 honor high fraud decline cust 63 honor unavailable fraud decline cust 64 cvv2 cvc2 failure decline cust 65 invalid amex cid decline cust orbital virtual terminal appendix b codes reference version 4 2 response codes page 185 214 66 error error fix 68 invalid cc number error fix 69 match mop error fix 71 account decline fix 72 invalid institution code decline fix 73 method payment invalid merchant error fix 74 invalid expiration date decline cust 75 bad amount error fix 77 invalid amount decline fix 78 missing companion data error fix 79 invalid merchant error fix 80 invalid mop division error fix 81 call low fraud decline call 82 call medium fraud decline call 83 call high fraud decline call 84 call unavailable fraud decline call 85 duplicated order error fix 86 auth recycle host error wait 87 invalid currency error fix 88 invalid purch level 3 error fix 89 credit floor decline cust 91 approved low fraud approved none 92 approved medium fraud approved none 93 approved high fraud approved none 94 approved fraud service unavailable approved none 95 invalid data type error fix 96 invalid record sequence error fix 97 percents total 100 error fix 98 issuer unavailable decline resend 99 answer unable send error resend a1 payments total order error fix a2 bad order number error fix orbital virtual terminal appendix b codes reference version 4 2 response codes page 186 214 a3 fpo locked error wait a4 fpo allowed error call a5 auth amount wrong error fix a6 illegal action error fix a8 invalid start date error fix a9 invalid issue number error fix b1 invalid transaction type error fix b2 account previously activated decline cust b3 unable void transaction error fix b5 file decline fix b7 security violation match cid decline cust b8 bad debt decline cust b9 negative file decline cust ba date birth indicates customer less 18 decline cust bb customer reported possible compromise blocked account decline cust bc bill address equal ship address decline cust bd pre approval number recognized decline cust e mail address failed standard validation rules decline cust bf pre approval number longer valid decline cust bg billing system account status decline cust bh billing address could verified decline cust bi need information request full social security number decline cust bj previously declined decline cust bk closed account new account issued decline cust bl authorization request declined original authorization found decline cust bm authorization request declined account mid amount matching original auth decline cust bn authorization request declined amount exceed original request amount decline cust bo declined auth using stand rules auth may obtained systems available decline cust bp customer service phone number required transaction types 1 \\( mo \\) 2 \\( recurring \\) mc error fix bq issuer flagged account suspected fraud \\( discover \\) decline cust orbital virtual terminal appendix b codes reference version 4 2 response codes page 187 214 br invalid mcc sent error fix bs new card issued decline cust c1 invalid issuer decline cust c2 invalid response code decline fix c3 excessive pin try decline cust c4 limit decline cust c5 freq limit decline cust c6 sav limit decline cust c7 sav freq decline cust c8 credit limit decline cust c9 credit freq decline cust d1 invalid credit decline fix d2 invalid debit decline fix d3 rev exceed withdrawal decline cust d4 one purchasing limit decline cust d5 negative file decline cust d6 changed field decline fix d7 insufficient funds decline cust d8 encrypted data bad decline fix d9 altered data decline fix e3 invalid prefix decline fix e4 invalid institution decline fix e5 invalid cardholder decline fix e6 bin block decline fix e7 stored approved none e8 invalid transit routing number error fix e9 unknown transit routing number error fix f1 missing name error fix f2 invalid account type error fix f3 account closed error cust f4 account unable locate error fix f5 account holder deceased error cust orbital virtual terminal appendix b codes reference version 4 2 response codes page 188 214 f6 beneficiary deceased error cust f7 account frozen error cust f8 customer opt error cust f9 ach non participant error cust g1 pre note error fix g2 address error fix g3 invalid account number error fix g4 authorization revoked consumer error cust g5 customer advises authorized error cust g6 invalid cecp action code error fix g7 invalid account format error fix g8 bad account number data error fix g9 capture decline n h1 credit function decline n h2 debit function decline n h3 rev exceed withdrawal decline cust h4 changed field decline n h5 terminal owned decline n h6 invalid time decline fix h7 invalid date decline fix h8 invalid terminal number decline fix h9 invalid pin decline cust i1 block activation failed card range set mod 10 error fix i2 block activation failed e mail fulfillment flags set error fix i3 declined issuance meet minimum amount declined cust i4 declined original auth found decline cust i5 declined outstanding auth funds hold decline cust i6 activation amount incorrect decline fix i7 block activation failed account correct block size correct decline fix i8 mag stripe cvd value failed decline fix i9 max redemption limit met decline fix j1 manual key decline fix orbital virtual terminal appendix b codes reference version 4 2 response codes page 189 214 j2 signed decline fix j3 excessive pin try decline cust j4 dda decline fix j5 sav decline fix j6 excess dda decline cust j7 excess dda freq decline cust j8 excess sav decline cust j9 excess sav freq decline cust k1 excess card decline cust k2 excess card freq decline cust k3 reserved future decline n k4 reserved closing decline n k5 dormant decline cust k6 nsf decline cust k7 future rd six decline n k8 future rd seven decline n k9 transaction code conflict decline fix l1 progress decline wait l2 process unavailable error resend l3 invalid expiration error fix l4 invalid effective error fix l5 invalid issuer decline fix l6 transaction allowed cardholder decline cust l7 unable determine network routing error call l8 system error error call l9 database error error call m1 merchant override decline decline cust m2 partial approval allowed decline n pa partial approval approved n pb revocation authorization decline cust pc country fraud filter list decline cust pp match debit authorization based trace account division number error fix orbital virtual terminal appendix b codes reference version 4 2 avs response codes page 190 214 pq unable validate debit auth record based amount action code mop error fix pr refund allowed refund requested star bin bin found error fix r1 blocked card number prefix decline cust r2 blocked card number decline cust r3 blocked issuing country decline cust r4 ceiling limit decline cust avs response codes avs response codes table describes th e various avs codes returned participating card issuing banks avs data provided order transaction table 3 avs response code values code avs message 1 address supplied 2 bill address pass auth host edit checks 3 avs performed 4 r issuer participate avs 5 edit error avs data invalid 6 system unavailable time 7 address information unavailable 8 transaction ineligible avs 9 zip match zip4 match locale match zip match zip 4 match locale match b zip match zip 4 match locale match c zip match zip 4 match locale match zip match zip 4 match locale match e zip match zip 4 match locale match f zip match zip 4 match locale match g match h zip match locale match j issuer participate global avs ja international street address postal match jb international street address match postal code verified orbital virtual terminal appendix b codes reference version 4 2 cvv2 cvc2 cid response codes page 191 214 jc international street address postal code verified jd international postal code match street address verified m1 merchant override decline m2 cardholder name billing address postal code matches m3 cardholder name billing code matches m4 cardholder name billing address match m5 cardholder name incorrect billing address postal code match m6 cardholder name incorrect billing address matches m7 cardholder name incorrect billing address matches m8 cardholder name billing address postal code incorrect n3 address matches zip verified n4 address zip code verified due incompatible formats n5 address zip code match \\( international \\) n6 address verified \\( international \\) n7 zip matches address verified n8 address zip code match \\( international \\) n9 address zip code match \\( uk \\) r issuer participate avs uk unknown x zip match zip 4 match address match z zip match locale match blank applicable \\( non visa \\) cvv2 cvc2 cid response codes cvd response codes table describes va rious cvd codes returned participating card issuing banks code provided order transaction table 4 cvv request response code values code description cvv match n cvv match p processed present u unsupported issuer issuer unable process request orbital virtual terminal appendix b codes reference version 4 2 cvv2 cvc2 cid response codes page 192 214 invalid invalid blank applicable \\( non visa \\) orbital virtual terminal appendix c merchant selectable response codes version 4 2 cvv2 cvc2 cid response codes page 193 214 appendix c merchant selectable response codes following codes selected within th e merchant selectable response admin page generate decline code turned issuing back approved transaction avs response codes table 5 avs response codes msr response code description salem tampa applicable \\( non visa \\) 1 address supplied 2 bill address pass auth host edit checks 3 avs performed 4 issuer participate avs 5 edit error avs data invalid 6 system unavailable time 7 address information unavailable 8 transaction ineligible avs 9 zip match zip4 match locale match zip match zip 4 match locale match b zip match zip4 match locale match c zip match zip4 match locale match zip match zip4 match locale match e zip match zip4 match locale match f zip match zip4 match locale match g match h zip match locale match j issuer participate global avs ja international street address postal match jb international street address match postal code verified orbital virtual terminal appendix c merchant selectable response codes version 4 2 cvv2 cvc2 cid response codes page 194 214 jc international street address postal code verified jd international postal code match street address verified m2 cardholder name billing address postal code matches m3 cardholder name billing code matches m4 cardholder name billing address match m5 cardholder name incorrect billing address postal code match m6 cardholder name incorrect billing address matches m7 cardholder name incorrect billing address matches m8 cardholder name billing address postal code incorrect m9 cardholder name matches n3 address matches zip verified n4 address zip code verified due incompatible formats n5 address zip code match \\( international \\) n6 address verified \\( international \\) n7 zip matches address verified n8 address zip code match \\( international \\) n9 address zip code match \\( uk \\) r issuer participate avs x zip match zip 4 match address match z zip match locale match verification response codes table 6 verification response codes msr response code description salem tampa applicable \\( non visa \\) invalid orbital virtual terminal appendix c merchant selectable response codes version 4 2 cvv2 cvc2 cid response codes page 195 214 match n match p processed present u unsupported issuer orbital virtual terminal appendix profile response codes version 4 2 cvv2 cvc2 cid response codes page 196 214 appendix profile response codes following list possible resp onse codes associated profiles table 7 profile response codes profile errors 9550 invalid customer reference numb er order indicator fix 9551 invalid customer reference number fix 9552 system failure unable perform custom er profile request time call 9553 invalid action indicator fix 9555 invalid bin fix 9556 invalid merchant id fix 9557 invalid name fix 9558 invalid address fix 9559 invalid address 2 fix 9560 invalid city fix 9561 invalid state fix 9562 invalid zip fix 9563 invalid e mail fix 9564 invalid phone fix 9565 invalid order description fix 9566 invalid amount fix 9567 invalid account type indicator fix 9568 invalid account number fix 9569 invalid account expire date fix 9570 invalid ecp account dda fix 9571 invalid ecp account type indicator fix 9572 invalid ecp account route fix 9573 invalid ecp bank paymen delivery method fix 9574 invalid switch solo start date fix 9575 invalid switch solo issue number fix 9576 unable perform profile transaction associated transaction failed call 9577 invalid order override indicator fix 9578 merchant bin combination allowed perform profile transactions call orbital virtual terminal appendix profile response codes version 4 2 cvv2 cvc2 cid response codes page 197 214 9579 merchant bin active call 9580 cannot process profile cust ref num mid combination database error occurred call 9581 cannot process profile profile exist cust ref num mid fix 9582 cannot process profile profile already exists cust ref num mid fix 9583 missing switch solo account information either start date issue number required fix 9584 missing electronic check account information fix 9585 missing credit card account information fix 9587 auto gen cust ref num error call 9588 unable determine profile action auth request fix 9589 cannot create profile customer profile name required fix 9592 invalid profile status requested fix 9594 profile status prohibits type transaction attempted fix 9595 profile account updater scheduled date invalid fix 9596 profile account updater scheduled date future date fix orbital virtual terminal appendix e overview credit card processing version 4 2 credit cards \\? page 198 214 appendix e overview credit card processing credit card transactions millions people th roughout world use credit cards form payment cardholders consider use cr edit cards simple easy method pay goods services merchants benefit fr om transactions simplifies process receive funds purchased goods credit cards \\? credit cards provide customers conven ient way purchase goods services without use cash credit cards issu ed personal line credit customer makes purchases ob tains cash advances payments made issuer monthly either full revolving basis minimum payment requirement month credit card transactions oc cur retailers financial institutions must submit transactions designated acquirer fo r processing paymen various credit card types include visa mastercard american express discover diners club carte blanche jcb private label debit cards check cards perceived major difference credit line involved funds taken checking savings account payment processing \\? payment processing method credit card merchant data activity collected many cases merchant uses terminal enter cardholder transaction data credit card swiped th e reader terminal verifies validity contacts credit card company make sure funds available finally stores sale transaction along others merchant processed day end sales day terminal calls chase paymentech \\( chase paymentech certified submitter \\) one last time report total sa les day starts process reimbursing merchant cardholder purchases virtual terminal provides way completing process using key entered data internet connection chase paymentech credit card transaction flow credit card transaction two parts authorization th e deposit flow charts orbital virtual terminal appendix e overview credit card processing version 4 2 credit card transaction flow page 199 214 figure 135 authorization process flow figure 136 settlement process flow orbital virtual terminal appendix f split shipment process flow version 4 2 credit card transaction flow page 200 214 appendix f split shipment process flow shipment split two transactions orbital virtual terminal automatically obtains authorization portion transaction marked capture flow chart explains steps occur transaction split several times transactions split many times needed figure 137 sample split shipment process flow orbital virtual terminal appendix g auto e mail cardholder text version 4 2 cardholder e mails page 201 214 appendix g auto e mail cardholder text cardholder e mails expiring card subject line dba name updates account required dear customer records indicate credit card file expire next month ensure uninterrupted service please contact us immediately update information security please send card inform ation us via e mail request contact us directly phone mail updated account information thank prompt attention th matter continued business merchant legal name business dba name merchant customer service phone number \\( found auto e mail service text box profiles management tab number field appear \\) transaction declined subject line dba name updated account information needed dear customer recently attempted charge account record acco rdance terms agreement unfortunately unable obtain approval transaction please contact us immediately update account information provide alternative payment method thank prompt attention matter thank business merchant legal name business dba name merchant customer service phone number \\( found auto e mail service text box profiles management tab number field appear \\) successful billing subject line dba name payment successfully completed dear customer account successfully charged accordance term agreement charge appear next billin g statement thank business please hesitate contac us questions orbital virtual terminal appendix g auto e mail cardholder text version 4 2 cardholder e mails page 202 214 merchant legal name business dba name merchant customer service phone number \\( found auto e mail service text box profiles management tab number field appear \\) amount charged subject line dba name notice upcoming billing dear customer may recall chose recurring billing option company e mail serves notification account record soon charged accordance wishes transaction processed receive notification transaction success similarly error processing transaction notify promptly successful transaction reflected next account statement thank continued business plea se contact us questions merchant legal name business dba name merchant customer service phone number \\( found auto e mail service text box profiles management tab number field appear \\) account closed subject line dba name updated information dear customer recently received notification card account fi le closed please contact us update account information pr ovide alternative payment method ensure uninterrupted service ensure security please send card info rmation us via e mail instead please contact us directly phone mail website thank prompt attention matter thank business merchant legal name business dba name merchant customer service phone number \\( found auto e mail service text box profiles management tab number field appear \\) new account number exp date subject line dba name updated information requested orbital virtual terminal appendix g auto e mail cardholder text version 4 2 merchant e mails notification non distributed cardholder e mail page 203 214 dear customer convenience customer information recently updated new card account number expiration date busy times one less task complete addi tional updates please hesitate contact us thank business merchant legal name business dba name merchant customer service phone number \\( found auto e mail service text box profiles management tab number field appear \\) please reply message automatically generated e mail cannot receive replies merchant e mails notification non distributed cardholder e mail expiring card subject line notice non di stributed e mail expired card profile id reference cardhold er expiring card e mail dear merchant part orbital managed billing service elected chase paymentech send automated e mails cardholders acco unt record expire e mail sent cardho lder associated referenced profile id corresponding e mail address available profile add e mail address profile please enter information via orbital virtual terminal sincerely chase paymentech transaction declined subject line notice non distri buted e mail declined transaction profile id reference cardholder declined transaction e mail dear merchant orbital virtual terminal appendix g auto e mail cardholder text version 4 2 merchant e mails notification non distributed cardholder e mail page 204 214 part orbital managed billing service elected chase paymentech send automated e mails cardholders requesting updated information approval code provided received declin e account associated reference profile id however since corresponding e mail address available profile unable send cardhold er notification add e mail address profile please enter information via orbital virtual terminal sincerely chase paymentech successful billing subject line notice non dist ributed e mail successful billing profile id reference cardholder successful billing e mail dear merchant part orbital managed billing service elected chase paymentech send automated e mails cardholders acco unt record successfully billed unable send e mail card holder associated reference profile id since corresponding e mail address available profile add e mail address profile please enter information via orbital virtual terminal sincerely chase paymentech amount charged subject line notice non distributed e mail pre notification billing profile id reference cardholder notice upcoming billing dear merchant part orbital managed billing service elected chase paymentech send automated pre notification e mails cardhold ers account record billed unable send e il cardholder associated reference profile id since corresponding e mail address available profile add e mail address profile please enter information via orbital virtual terminal sincerely chase paymentech orbital virtual terminal appendix h reporting version 4 2 merchant e mails notification non distributed cardholder e mail page 205 214 appendix h reporting tables reflect da ta fields contained within th e various reports may retrieved reporting menu tab please note reports offered pdf report csv file format open batch reports open batch detail report pdf open batch detail file csv card type card type card number card number trans type trans type amount amount response code response code avs response avs response cvv response cvv response date date order id order id order description order description entry source entry source customer profile customer profile review batch reports review detail report pdf review detail file csv card type card type card number card number trans type trans type amount amount response code response code date time date time order number order number order description order description batch id batch id entry source entry source customer profile customer profile orbital virtual terminal appendix h reporting version 4 2 merchant e mails notification non distributed cardholder e mail page 206 214 review pending detail report pdf review pending detail file csv card type card type card number card number trans type trans type amount amount response code response code avs response avs response cvv response cvv response date date order id order id order description order description entry source entry source customer profile customer profile review rejected detail report pdf review rejected detail file csv card type card type card number card number trans type trans type amount amount response code response code avs response avs response cvv response cvv response date date order id order id order description order description entry source entry source customer profile customer profile orbital virtual terminal appendix h reporting version 4 2 merchant e mails notification non distributed cardholder e mail page 207 214 profile queries profile queries available csv format screen display profile queries profiles active profiles inactive profiles active standard active mb mb active billing cycle profile id status card number name address next mb billing scheduled mb amount last change date suspend queries suspended auto suspended account updater auto suspended auth recycle auto suspended pinless debit manual suspend profile id status card number name expiration date suspend date mb profile next mb billing scheduled mb amount converted pinless debit profile id card number orbital virtual terminal appendix h reporting version 4 2 merchant e mails notification non distributed cardholder e mail page 208 214 converted pinless debit name conversion date conversion method suspended \\? status mb profile next mb billing scheduled mb amount event driven reports closed batch summary report available csv format card type sale count sale amount return count return amount decline error count total count net amount closed batch detail report pdf closed batch detail report csv card type card type card number card number trans type trans type amount amount response code response code trans date time trans date time settle date time settle date time order number order number order description order description orbital virtual terminal appendix h reporting version 4 2 merchant e mails notification non distributed cardholder e mail page 209 214 closed batch detail report pdf closed batch detail report csv batch id batch id entry source entry source customer profile customer profile rejected batch detail report pdf rejected batch detail report csv card type card type card number card number trans type trans type amount amount response code response code reject response reject response trans date time trans date time reject date time reject date time order number order number order description order description batch id batch id entry source entry source customer profile customer profile scheduled reports merchant level auth recycling pdf auth recycling csv profile id profile id order id order id order description order description card number card number account type account type amount amount original auth date original auth date last reauth attempted last reauth attempted orbital virtual terminal appendix h reporting version 4 2 merchant e mails notification non distributed cardholder e mail page 210 214 auth recycling pdf auth recycling csv number reauths attempted number reauths attempted number reauths left number reauths left last response code last response code response description response description expiring card pdf expiring card csv profile id profile id card number card number expiration date expiration date next mb billing next mb billing name name e mail address e mail address amount amount active profile status active profile status suspended profile pdf suspended profile csv profile id profile id biller reference number biller reference number card number card number expiration date expiration date suspend date suspend date name name e mail address e mail address amount amount profile status profile status response code response code response description response description orbital virtual terminal appendix h reporting version 4 2 merchant e mails notification non distributed cardholder e mail page 211 214 account updater pdf account updater csv profile id profile id current card number current card number prior card number prior card number name name date update date update action action reason reason new expiration date new expiration date new card brand new card brand mb profile mb profile next mb billing next mb billing scheduled mb amount scheduled mb amount pinless debit status change pdf pinless debit status change csv profile id profile id biller reference number biller reference number card number card number name name status change status change date change date change mb profile mb profile next mb billing next mb billing scheduled mb amount scheduled mb amount orbital virtual terminal appendix h reporting version 4 2 merchant e mails notification non distributed cardholder e mail page 212 214 scheduled reports merchant level managed billing mb activity pdf mb activity csv profile id profile id order id order id order description order description card number card number card type card type amount amount original auth date original date final auth date final date number reauths attempted number reauths attempted number reauths left number reauths left response code response code response description response description scheduled profile activity pdf scheduled profile activity csv profile id profile id order id order id order description order description card number card number card type card type amount amount scheduled date scheduled date scheduled reports chain level expiring card pdf expiring card csv profile id profile id card number card number expiration date expiration date name name orbital virtual terminal appendix h reporting version 4 2 merchant e mails notification non distributed cardholder e mail page 213 214 expiring card pdf expiring card csv e mail address e mail address active profile status active profile status suspended profile pdf suspended profile csv profile id profile id biller biller card number card number expiration date expiration date suspend date suspend date name name e mail address e mail address suspend status suspend status response code response code response description response description account updater pdf account updater csv profile id profile id current card number current card number prior card number prior card number name name date update date update action action reason reason new expiration date new expiration date new card brand new card brand pinless debit status change pdf pinless debit status change csv orbital virtual terminal appendix h reporting version 4 2 merchant e mails notification non distributed cardholder e mail page 214 214 pinless debit status change pdf pinless debit status change csv profile id profile id biller reference number biller reference number card number card number name name status change status change date change date change", 
    "crawled_date": "2017-06-10T13:59:38.006873"
  }, 
  "57": {
    "link1": "https://github.com/zipmark/rspec_api_documentation", 
    "api_url": "github.com", 
    "link3": "https://github.com/documentationjs/documentation", 
    "link2": "https://github.com/tootsuite/documentation", 
    "progweb_url": "https://www.programmableweb.com/api/clearhaus-gateway", 
    "progweb_date": "11.07.2012", 
    "progweb_descr": "Clearhaus is an emerging European payment transaction provider. The Clearhaus Gateway API provides a RESTful interface for processing transactions. Endpoints are discoverable directly through the API, with supported calls including, debits, credits, and much more.", 
    "api_name": "Clearhaus Gateway", 
    "progweb_cat": "Payments,European", 
    "descr3": "skip content features business explore marketplace pricing sign sign watch 44 star 2 790 fork 169 documentationjs documentation code issues 117 pull requests 6 wiki insights pulse graphs documentation modern javascript http documentation js org documentation tool documentation jsdoc javascript babel 874 commits 25 branches 43 releases 51 contributors javascript 81 6 html 7 5 c 6 7 css 4 2 javascript html c css clone download clone https use git checkout svn using web url open desktop download zip find file branch master switch branches tags branches tags anchors links dangerous custom inference v1 dep upgrades greenkeeper babel traverse 6 25 0 greenkeeper babel traverse pin 6 24 1 greenkeeper chokidar 1 7 0 greenkeeper chokidar pin 1 6 1 greenkeeper eslint 4 0 0 greenkeeper flow bin 0 47 0 greenkeeper flow bin 0 48 0 greenkeeper fs extra pin 3 0 0 greenkeeper git url parse 7 0 0 greenkeeper highlight js 9 11 0 greenkeeper jest pin 20 0 3 greenkeeper js yaml pin 3 8 3 greenkeeper remark html 6 0 1 greenkeeper tiny lr 1 0 5 greenkeeper tiny lr pin 1 0 4 greenkeeper vfile 2 1 0 inline destructuring parameter docs master native nothing see special names utf8 test fixture nothing show v4 0 0 rc 1 v4 0 0 rc 0 v4 0 0 beta 19 v4 0 0 beta 18 v4 0 0 beta 17 v4 0 0 beta16 v4 0 0 beta15 v4 0 0 beta14 v4 0 0 beta13 v4 0 0 beta12 v4 0 0 beta11 v4 0 0 beta10 v4 0 0 beta9 v4 0 0 beta7 v4 0 0 beta6 v4 0 0 beta5 v4 0 0 beta4 v4 0 0 beta3 v4 0 0 beta2 v4 0 0 beta1 v4 0 0 beta v3 0 4 v3 0 3 v3 0 2 v3 0 1 v3 0 0 v2 1 0 alpha v2 0 1 v2 0 0 v2 0 0 alpha2 v1 4 0 v1 3 2 v1 3 1 v1 3 0 v1 2 0 v1 1 0 v1 0 7 v1 0 6 v1 0 5 v1 0 4 v1 0 3 v1 0 2 v1 0 1 nothing show new pull request latest commit 65f5a37 jun 8 2017 greenkeeper bot committed tmcw fix \\( package \\) update babel generator version 6 25 0 \\( 804 \\) permalink readme md documentation system modern javascript supports modern javascript es5 es2017 jsx flow type annotations infers parameters types membership write less documentation let computer write integrates github link directly documentation code refers customizable output html json markdown examples html output default template markdown json documentation getting started start usage use documentation js recipes tricks writing effective jsdoc docs node api documentation js 's self generated documentation configuring documentation js faq troubleshooting theming tips theming documentation output html see also list projects similar documentation js user guide globally install using npm package manager npm install g documentation installs command called path point jsdoc annotated source code generate human readable documentation first run option help usage generate markdown docs index js files references bin documentation js build index js f md generate html docs files src bin documentation js build src f html docs document index js ignoring files requires imports bin documentation js build index js f md shallow build serve html docs app js bin documentation js serve app js build serve live update html docs app js bin documentation js serve watch app js validate jsdoc syntax util js bin documentation js lint util js update api section readme md docs index js bin documentation js readme index js section api build docs values exported index js bin documentation js build document exported index js commands serve input generate update display html documentation build input build documentation lint input check common style uniformity mistakes readme input inject documentation readme md options version show version number boolean help show help boolean contributing plenty issues 'd love help robust complete support including typedefs strong support html markdown output documentation coverage statistics validation documentation open open source project means individuals making significant valuable contributions given commit access project contribute see fit project like open wiki standard guarded open source project contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "descr2": "skip content features business explore marketplace pricing sign sign watch 46 star 458 fork 286 tootsuite documentation code issues 13 pull requests 11 projects 0 insights pulse graphs full documentation repository mastodon https github com tootsuite mastodon mastodon 675 commits 2 branches 11 releases 203 contributors agpl 3 0 clone download clone https use git checkout svn using web url download zip find file branch master switch branches tags branches tags master revert 122 patch 1 nothing show v1 1 v1 0 v0 9 9 v0 9 v0 8 v0 7 v0 6 v0 1 2 v0 1 1 v0 1 0 last mastodon state nothing show new pull request latest commit eb317b3 jun 17 2017 foxsan48 committed wxcafe added missing info prod \\( 306 \\) added missing info changed login user creation corrected user creation login hopefully permalink readme md mastodon documentation mastodon free open source gnu social compatible social network server decentralized alternative commercial platforms avoids risks single company monopolizing communication anyone run mastodon participate social network seamlessly using mastodon frequently asked questions list mastodon instances apps user guide using api api documentation libraries streaming api documentation testing api curl oauth details tips app developers push notifications running mastodon please note highly recommended run tagged release mastodon run current branch resources needed production guide docker guide alternative running heroku development guide alternative development vagrant alternative development production nanobox administration guide maintenance tasks tuning mastodon system configuration alternatives contributing mastodon sponsors translate mastodon language report bugs submit ideas protocols list used specs rfcs federation extensions protocols contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "descr1": "skip content features business explore marketplace pricing sign sign watch 26 star 915 fork 229 zipmark rspec api documentation code issues 30 pull requests 8 projects 0 wiki insights pulse graphs automatically generate api documentation rspec 784 commits 4 branches 5 releases 61 contributors mit ruby 67 0 gherkin 26 2 html 5 8 1 0 ruby gherkin html clone download clone https use git checkout svn using web url open desktop download zip find file branch master switch branches tags branches tags gh pages master new dsl rename dsl methods nothing show v4 9 0 v4 8 0 v4 7 0 v4 4 0 5 0 0 nothing show new pull request latest commit 36a0c41 jun 6 2017 oestrich bump version permalink readme md rspec api doc generator generate pretty api docs rails apis check sample changes please see wiki latest changes installation add rspec api documentation gemfile bundle set specs require 'rails helper' require 'rspec api documentation dsl' resource orders get orders example listing orders request status 200 end end end generate docs viewers consider adding viewer enhance generated documentation rspec api documentation generate simple html viewers use generated json raddocs sinatra app apitome rails engine gemfile spec spec helper rb rspecapidocumentation configure config config format json end sample app see folder sample rails app documented configuration options values listed default values rspecapidocumentation configure config set application rack test uses config app rails application output folder config docs dir rails root join \\( doc api \\) array output format \\( \\) possible values json html combined text combined json json iodocs textile markdown append json slate api blueprint config format html location templates config template path inside gem filter example document type config filter filter example document type config exclusion filter nil used adding curl output docs config curl host nil used adding curl output docs allows filter headers needed curl request host cookie set array config curl headers filter nil default settings nil headers shown sometimes chatty setting parameters array headers render headers config request headers include nil config response headers include nil default examples resources ordered description set true keep source order config keep source order false change name api index pages config api name api documentation redefine method dsl thinks client useful need `let` client likely model config client method client change iodocs writer protocol config io docs protocol http define documentation groups well group allows generate multiple sets documentation config define group public config default group 's doc dir subfolder parent group based group 's name config docs dir rails root join \\( doc api public \\) change filter include public examples config filter public end change post body formatted default still override `raw post` json xml proc passed params config request body formatter proc new params params change response body formatted default proc called response content type response body default response content type `application json` pretty formated config response body formatter proc new response content type response body response body change embedded style html output file processed rspecapidocumentation plain css config html embedded css file nil removes dsl method `status` required parameter named status config disable dsl status removes dsl method `method` required parameter named method config disable dsl method end format json generates index file example files json html generates index file example files html combined text generates single file resource used raddocs command line docs combined json generates single file examples json iodocs generates docs style documentation textile generates index file example files textile markdown generates index file example files markdown api blueprint generates index file example files apiblueprint append json lets selectively run specs without destroying current documentation see section append json format cannot run formats delete entire documentation folder upon run format appends new examples index file writes run examples correct folder rake task allows format used easily rspec core raketask new \\( 'docs generate append' spec file \\) task args spec file task args spec file env doc format append json end pattern spec file 'spec acceptance spec rb' rspec opts format rspecapidocumentation apiformatter end env doc format json rspecapidocumentation configure config config format env doc format end rake docs generate append spec acceptance orders spec rb update current index 's examples include file examples inside rewritten api blueprint format \\( apib \\) additional functions apib groups urls together http verbs route orders orders collection get returns orders end delete deletes orders end end n't use param url states rest documentation apib attributes besides parameters use attributes exactly like 'd use \\( see documentation \\) filtering exclusion rspec api documentation lets determine examples get outputted final documentation filtering done via metadata key tag examples either single symbol array symbols also false make sure get outputted resource account get accounts parameter page page view default document example get list accounts request status 200 end n't actually document example purely testing purposes example get list page 2 document false request \\( page 2 \\) status 404 end example request ca n't change document example request get list page 3 page 3 status 404 end end post accounts parameter email user email example creating account document private request \\( email eric example com \\) status 201 end example creating account errors document private developers request status 422 end end end documents generated top folder document false examples never generated rspecapidocumentation configure config exclude document examples marked 'private' config define group non private config config exclusion filter private end document examples marked 'public' config define group public config config filter public end document examples marked 'developer' config define group developers config config filter developers end end dsl require dsl beginning acceptance spec rb file make sure require following pull dsl definitions require 'rspec api documentation dsl' example group methods resource create set documentation examples go together acts describe block resource orders end get head post put delete patch method sent along url resource orders post orders end get orders end head orders end put orders id let \\( id \\) order id example get order path orders 1 ` id` replaced value `id` end end delete orders id end patch orders id end end example rspec 's built example method hook metadata surrounding could also used resource orders post orders example creating order request make assertions end end end example request example except calls first step assertions required block similar pass hash last parameter passed along extra parameters become metadata like resource orders parameter name order name post orders example request creating order name name make assertions end end end explanation method takes string representing detailed explanation example resource orders post orders example creating order explanation method creates new order request make assertions end end end resource also explanation resource orders explanation orders top level business objects created post request post orders example creating order explanation method creates new order request make assertions end end end header method takes header name value value string symbol symbol symbol allowing header values resource orders header accept application json header x custom custom header let \\( custom header \\) dynamic get orders example request headers headers accept application json x custom dynamic end end end parameter method takes parameter name description optional hash extra metadata displayed raddocs extra columns method parameter name exists e g send returned value server url encoded data special values display red show 's required scope parameters hash scoping nested see example use specified method parameter value retrieving parameter value goes several steps option defined test case responds method method used test case responds scoped method method used overwise unscoped method used resource orders parameter auth token authentication token let \\( auth token \\) user authentication token post orders parameter name order name required true scope order parameter item order items scope order parameter item id item id scope order item method custom item id let \\( name \\) order let \\( order name \\) order let \\( item id \\) 1 let \\( custom item id \\) 1 let \\( order item item id \\) 1 example creating order params eq \\( order name order item item id 1 auth token auth token \\) end end end response field method takes response field name description optional hash extra metadata displayed raddocs extra columns special values scope response field hash resource orders response field page current page get orders example request getting orders expect \\( response body \\) eq \\( page 1 json \\) end end end also group metadata using options factor duplications resource orders post orders options scope order required true parameter name order name parameter item order items end options scope order response field id order id response field status order status end let \\( name \\) order let \\( item id \\) 1 example creating order expect \\( status \\) 201 end end end callback complicated see relish docs trigger callback pass method block evaluated cause application make request example methods callback url defines destination callback example see relish docs client returns test client makes requests documents responses resource order get orders example listing orders create order via api instead via factories client post orders order hash request status 200 end end end callback evaluate block passed cause application test make callback request see relish docs request sends request app parameters headers defined resource order get orders example listing orders request status 200 end end end doc wish make request via client included documentation inside doc block resource order get orders example listing orders doc create order via api instead via factories n't document client post orders order hash end request status 200 end end end params get hash parameters sent see documentation example header method takes header name value resource orders header accept application json end get orders example request headers headers accept application json end end end headers returns headers sent request see documentation example response body returns string containing response body previous request resource order get orders example listing orders request response body name order 1 json end end end response headers returns hash response headers previous request resource order get orders example listing orders request response headers content type application json end end end status response status returns numeric status code response eg 200 alias status status commonly parameter resource order get orders example listing orders request status 200 response status 200 end end end query string data sent query string instead post data used get requests resource orders parameter name let \\( name \\) order get orders example list orders query string name orders end end end raw post completely override gets sent parameters ing resource orders header content type application json parameter name let \\( name \\) order post orders let \\( raw post \\) params json example request create new order params get sent json end end end rake task gem contains railtie defines rake task generating docs easily rails loads files rake docs generate using rails use rake following task require 'rspec core rake task' desc 'generate api request documentation api specs' rspec core raketask new \\( 'docs generate' \\) pattern 'spec acceptance spec rb' rspec opts format rspecapidocumentation apiformatter end require 'rspec api documentation' load 'tasks docs rake' using rake rspec spec acceptance format rspecapidocumentation apiformatter uploading file example uploading file see gotchas rspec api documentation relies variable test client define please configure rspec api documentation use another one see configuration make heavy use rspec metadata actually use entire gem without dsl hand write metadata must use etc access data last response able use response object created contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "crawled_date": "2017-06-10T13:59:38.003141"
  }, 
  "56": {
    "link1": "https://github.com/zipmark/rspec_api_documentation", 
    "api_url": "github.com", 
    "link3": "https://github.com/documentationjs/documentation", 
    "link2": "https://github.com/tootsuite/documentation", 
    "progweb_url": "https://www.programmableweb.com/api/clearhaus-resolve", 
    "progweb_date": "11.07.2012", 
    "progweb_descr": "Clearhaus is an emerging European payment transaction provider. The Clearhaus Resolve API provides resource discoverability services including chargebacks, data uploads, and retrieval requests. Endpoints are discoverable directly through the API.", 
    "api_name": "Clearhaus Resolve", 
    "progweb_cat": "Payments,European", 
    "descr3": "skip content features business explore marketplace pricing sign sign watch 44 star 2 790 fork 169 documentationjs documentation code issues 117 pull requests 6 wiki insights pulse graphs documentation modern javascript http documentation js org documentation tool documentation jsdoc javascript babel 874 commits 25 branches 43 releases 51 contributors javascript 81 6 html 7 5 c 6 7 css 4 2 javascript html c css clone download clone https use git checkout svn using web url open desktop download zip find file branch master switch branches tags branches tags anchors links dangerous custom inference v1 dep upgrades greenkeeper babel traverse 6 25 0 greenkeeper babel traverse pin 6 24 1 greenkeeper chokidar 1 7 0 greenkeeper chokidar pin 1 6 1 greenkeeper eslint 4 0 0 greenkeeper flow bin 0 47 0 greenkeeper flow bin 0 48 0 greenkeeper fs extra pin 3 0 0 greenkeeper git url parse 7 0 0 greenkeeper highlight js 9 11 0 greenkeeper jest pin 20 0 3 greenkeeper js yaml pin 3 8 3 greenkeeper remark html 6 0 1 greenkeeper tiny lr 1 0 5 greenkeeper tiny lr pin 1 0 4 greenkeeper vfile 2 1 0 inline destructuring parameter docs master native nothing see special names utf8 test fixture nothing show v4 0 0 rc 1 v4 0 0 rc 0 v4 0 0 beta 19 v4 0 0 beta 18 v4 0 0 beta 17 v4 0 0 beta16 v4 0 0 beta15 v4 0 0 beta14 v4 0 0 beta13 v4 0 0 beta12 v4 0 0 beta11 v4 0 0 beta10 v4 0 0 beta9 v4 0 0 beta7 v4 0 0 beta6 v4 0 0 beta5 v4 0 0 beta4 v4 0 0 beta3 v4 0 0 beta2 v4 0 0 beta1 v4 0 0 beta v3 0 4 v3 0 3 v3 0 2 v3 0 1 v3 0 0 v2 1 0 alpha v2 0 1 v2 0 0 v2 0 0 alpha2 v1 4 0 v1 3 2 v1 3 1 v1 3 0 v1 2 0 v1 1 0 v1 0 7 v1 0 6 v1 0 5 v1 0 4 v1 0 3 v1 0 2 v1 0 1 nothing show new pull request latest commit 65f5a37 jun 8 2017 greenkeeper bot committed tmcw fix \\( package \\) update babel generator version 6 25 0 \\( 804 \\) permalink readme md documentation system modern javascript supports modern javascript es5 es2017 jsx flow type annotations infers parameters types membership write less documentation let computer write integrates github link directly documentation code refers customizable output html json markdown examples html output default template markdown json documentation getting started start usage use documentation js recipes tricks writing effective jsdoc docs node api documentation js 's self generated documentation configuring documentation js faq troubleshooting theming tips theming documentation output html see also list projects similar documentation js user guide globally install using npm package manager npm install g documentation installs command called path point jsdoc annotated source code generate human readable documentation first run option help usage generate markdown docs index js files references bin documentation js build index js f md generate html docs files src bin documentation js build src f html docs document index js ignoring files requires imports bin documentation js build index js f md shallow build serve html docs app js bin documentation js serve app js build serve live update html docs app js bin documentation js serve watch app js validate jsdoc syntax util js bin documentation js lint util js update api section readme md docs index js bin documentation js readme index js section api build docs values exported index js bin documentation js build document exported index js commands serve input generate update display html documentation build input build documentation lint input check common style uniformity mistakes readme input inject documentation readme md options version show version number boolean help show help boolean contributing plenty issues 'd love help robust complete support including typedefs strong support html markdown output documentation coverage statistics validation documentation open open source project means individuals making significant valuable contributions given commit access project contribute see fit project like open wiki standard guarded open source project contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "descr2": "skip content features business explore marketplace pricing sign sign watch 46 star 458 fork 286 tootsuite documentation code issues 13 pull requests 11 projects 0 insights pulse graphs full documentation repository mastodon https github com tootsuite mastodon mastodon 675 commits 2 branches 11 releases 203 contributors agpl 3 0 clone download clone https use git checkout svn using web url download zip find file branch master switch branches tags branches tags master revert 122 patch 1 nothing show v1 1 v1 0 v0 9 9 v0 9 v0 8 v0 7 v0 6 v0 1 2 v0 1 1 v0 1 0 last mastodon state nothing show new pull request latest commit eb317b3 jun 17 2017 foxsan48 committed wxcafe added missing info prod \\( 306 \\) added missing info changed login user creation corrected user creation login hopefully permalink readme md mastodon documentation mastodon free open source gnu social compatible social network server decentralized alternative commercial platforms avoids risks single company monopolizing communication anyone run mastodon participate social network seamlessly using mastodon frequently asked questions list mastodon instances apps user guide using api api documentation libraries streaming api documentation testing api curl oauth details tips app developers push notifications running mastodon please note highly recommended run tagged release mastodon run current branch resources needed production guide docker guide alternative running heroku development guide alternative development vagrant alternative development production nanobox administration guide maintenance tasks tuning mastodon system configuration alternatives contributing mastodon sponsors translate mastodon language report bugs submit ideas protocols list used specs rfcs federation extensions protocols contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "descr1": "skip content features business explore marketplace pricing sign sign watch 26 star 915 fork 229 zipmark rspec api documentation code issues 30 pull requests 8 projects 0 wiki insights pulse graphs automatically generate api documentation rspec 784 commits 4 branches 5 releases 61 contributors mit ruby 67 0 gherkin 26 2 html 5 8 1 0 ruby gherkin html clone download clone https use git checkout svn using web url open desktop download zip find file branch master switch branches tags branches tags gh pages master new dsl rename dsl methods nothing show v4 9 0 v4 8 0 v4 7 0 v4 4 0 5 0 0 nothing show new pull request latest commit 36a0c41 jun 6 2017 oestrich bump version permalink readme md rspec api doc generator generate pretty api docs rails apis check sample changes please see wiki latest changes installation add rspec api documentation gemfile bundle set specs require 'rails helper' require 'rspec api documentation dsl' resource orders get orders example listing orders request status 200 end end end generate docs viewers consider adding viewer enhance generated documentation rspec api documentation generate simple html viewers use generated json raddocs sinatra app apitome rails engine gemfile spec spec helper rb rspecapidocumentation configure config config format json end sample app see folder sample rails app documented configuration options values listed default values rspecapidocumentation configure config set application rack test uses config app rails application output folder config docs dir rails root join \\( doc api \\) array output format \\( \\) possible values json html combined text combined json json iodocs textile markdown append json slate api blueprint config format html location templates config template path inside gem filter example document type config filter filter example document type config exclusion filter nil used adding curl output docs config curl host nil used adding curl output docs allows filter headers needed curl request host cookie set array config curl headers filter nil default settings nil headers shown sometimes chatty setting parameters array headers render headers config request headers include nil config response headers include nil default examples resources ordered description set true keep source order config keep source order false change name api index pages config api name api documentation redefine method dsl thinks client useful need `let` client likely model config client method client change iodocs writer protocol config io docs protocol http define documentation groups well group allows generate multiple sets documentation config define group public config default group 's doc dir subfolder parent group based group 's name config docs dir rails root join \\( doc api public \\) change filter include public examples config filter public end change post body formatted default still override `raw post` json xml proc passed params config request body formatter proc new params params change response body formatted default proc called response content type response body default response content type `application json` pretty formated config response body formatter proc new response content type response body response body change embedded style html output file processed rspecapidocumentation plain css config html embedded css file nil removes dsl method `status` required parameter named status config disable dsl status removes dsl method `method` required parameter named method config disable dsl method end format json generates index file example files json html generates index file example files html combined text generates single file resource used raddocs command line docs combined json generates single file examples json iodocs generates docs style documentation textile generates index file example files textile markdown generates index file example files markdown api blueprint generates index file example files apiblueprint append json lets selectively run specs without destroying current documentation see section append json format cannot run formats delete entire documentation folder upon run format appends new examples index file writes run examples correct folder rake task allows format used easily rspec core raketask new \\( 'docs generate append' spec file \\) task args spec file task args spec file env doc format append json end pattern spec file 'spec acceptance spec rb' rspec opts format rspecapidocumentation apiformatter end env doc format json rspecapidocumentation configure config config format env doc format end rake docs generate append spec acceptance orders spec rb update current index 's examples include file examples inside rewritten api blueprint format \\( apib \\) additional functions apib groups urls together http verbs route orders orders collection get returns orders end delete deletes orders end end n't use param url states rest documentation apib attributes besides parameters use attributes exactly like 'd use \\( see documentation \\) filtering exclusion rspec api documentation lets determine examples get outputted final documentation filtering done via metadata key tag examples either single symbol array symbols also false make sure get outputted resource account get accounts parameter page page view default document example get list accounts request status 200 end n't actually document example purely testing purposes example get list page 2 document false request \\( page 2 \\) status 404 end example request ca n't change document example request get list page 3 page 3 status 404 end end post accounts parameter email user email example creating account document private request \\( email eric example com \\) status 201 end example creating account errors document private developers request status 422 end end end documents generated top folder document false examples never generated rspecapidocumentation configure config exclude document examples marked 'private' config define group non private config config exclusion filter private end document examples marked 'public' config define group public config config filter public end document examples marked 'developer' config define group developers config config filter developers end end dsl require dsl beginning acceptance spec rb file make sure require following pull dsl definitions require 'rspec api documentation dsl' example group methods resource create set documentation examples go together acts describe block resource orders end get head post put delete patch method sent along url resource orders post orders end get orders end head orders end put orders id let \\( id \\) order id example get order path orders 1 ` id` replaced value `id` end end delete orders id end patch orders id end end example rspec 's built example method hook metadata surrounding could also used resource orders post orders example creating order request make assertions end end end example request example except calls first step assertions required block similar pass hash last parameter passed along extra parameters become metadata like resource orders parameter name order name post orders example request creating order name name make assertions end end end explanation method takes string representing detailed explanation example resource orders post orders example creating order explanation method creates new order request make assertions end end end resource also explanation resource orders explanation orders top level business objects created post request post orders example creating order explanation method creates new order request make assertions end end end header method takes header name value value string symbol symbol symbol allowing header values resource orders header accept application json header x custom custom header let \\( custom header \\) dynamic get orders example request headers headers accept application json x custom dynamic end end end parameter method takes parameter name description optional hash extra metadata displayed raddocs extra columns method parameter name exists e g send returned value server url encoded data special values display red show 's required scope parameters hash scoping nested see example use specified method parameter value retrieving parameter value goes several steps option defined test case responds method method used test case responds scoped method method used overwise unscoped method used resource orders parameter auth token authentication token let \\( auth token \\) user authentication token post orders parameter name order name required true scope order parameter item order items scope order parameter item id item id scope order item method custom item id let \\( name \\) order let \\( order name \\) order let \\( item id \\) 1 let \\( custom item id \\) 1 let \\( order item item id \\) 1 example creating order params eq \\( order name order item item id 1 auth token auth token \\) end end end response field method takes response field name description optional hash extra metadata displayed raddocs extra columns special values scope response field hash resource orders response field page current page get orders example request getting orders expect \\( response body \\) eq \\( page 1 json \\) end end end also group metadata using options factor duplications resource orders post orders options scope order required true parameter name order name parameter item order items end options scope order response field id order id response field status order status end let \\( name \\) order let \\( item id \\) 1 example creating order expect \\( status \\) 201 end end end callback complicated see relish docs trigger callback pass method block evaluated cause application make request example methods callback url defines destination callback example see relish docs client returns test client makes requests documents responses resource order get orders example listing orders create order via api instead via factories client post orders order hash request status 200 end end end callback evaluate block passed cause application test make callback request see relish docs request sends request app parameters headers defined resource order get orders example listing orders request status 200 end end end doc wish make request via client included documentation inside doc block resource order get orders example listing orders doc create order via api instead via factories n't document client post orders order hash end request status 200 end end end params get hash parameters sent see documentation example header method takes header name value resource orders header accept application json end get orders example request headers headers accept application json end end end headers returns headers sent request see documentation example response body returns string containing response body previous request resource order get orders example listing orders request response body name order 1 json end end end response headers returns hash response headers previous request resource order get orders example listing orders request response headers content type application json end end end status response status returns numeric status code response eg 200 alias status status commonly parameter resource order get orders example listing orders request status 200 response status 200 end end end query string data sent query string instead post data used get requests resource orders parameter name let \\( name \\) order get orders example list orders query string name orders end end end raw post completely override gets sent parameters ing resource orders header content type application json parameter name let \\( name \\) order post orders let \\( raw post \\) params json example request create new order params get sent json end end end rake task gem contains railtie defines rake task generating docs easily rails loads files rake docs generate using rails use rake following task require 'rspec core rake task' desc 'generate api request documentation api specs' rspec core raketask new \\( 'docs generate' \\) pattern 'spec acceptance spec rb' rspec opts format rspecapidocumentation apiformatter end require 'rspec api documentation' load 'tasks docs rake' using rake rspec spec acceptance format rspecapidocumentation apiformatter uploading file example uploading file see gotchas rspec api documentation relies variable test client define please configure rspec api documentation use another one see configuration make heavy use rspec metadata actually use entire gem without dsl hand write metadata must use etc access data last response able use response object created contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "crawled_date": "2017-06-10T13:59:38.004761"
  }, 
  "51": {
    "api_url": "passhound.com", 
    "progweb_url": "https://www.programmableweb.com/api/passhound", 
    "progweb_date": "10.24.2012", 
    "progweb_descr": "PassHound is a service for developers for Passbook integration with their applications. Developers can create passes and tickets for Apple's PassBook.   Public documentation is not available; interested developers should request more information here:  http://passhound.com/welcome/", 
    "api_name": "PassHound", 
    "progweb_cat": "Payments,Coupons", 
    "crawled_date": "2017-06-10T13:59:38.009791"
  }, 
  "50": {
    "api_url": "ambercart.com", 
    "progweb_url": "https://www.programmableweb.com/api/ambercart", 
    "progweb_date": "10.24.2012", 
    "progweb_descr": "AmberCart is an eCommerce service that allows users to add eCommerce functionality to websites and applications. AmberCart allows users to accept payments online and ship products.  The AmberCart Shipping API allows developers to access and integrate accurate shipping rates from USPS, UPS, and FedEx with other websites and applications. Public documentation is not available; API access comes with account service.", 
    "api_name": "AmberCart", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:38.010794"
  }, 
  "53": {
    "link5": "https://docs.barzahlen.de/api/v2/", 
    "link4": "https://integration.barzahlen.de/en/getting-started-en", 
    "link1": "https://integration.barzahlen.de/assets/api/docs/Getting%20started.pdf", 
    "api_url": "barzahlen.de", 
    "link3": "https://integration.barzahlen.de/en/shopsystems/oxid/user-manual-42", 
    "link2": "https://integration.barzahlen.de/en/", 
    "progweb_url": "https://www.programmableweb.com/api/barzahlen", 
    "progweb_date": "10.29.2012", 
    "progweb_descr": "Barzahlen is a german based payment system that allows users to shop online, select Barzahlen as a payment method, print out a purchase form or receive a purchase form by SMS, then pay in person at a Barzahlen partner store. This approach aims to make online shopping more secure by allowing online selection, but in person payment. The Barzahlen API is available to allow users to integrate online shops with the Barzahlen payment system and includes merchandise management and back-end systems. For documentation, contact Barzahlen.", 
    "api_name": "Barzahlen", 
    "progweb_cat": "Payments,Merchants", 
    "descr5": "nav register control center get access barzahlen integration center barzahlen github imprint introduction barzahlen api v2 allows create payment payout refund slips customers use stores like supermarkets pay receive money slips sent users email pdf attachment text message store point sale system confirms transaction barzahlen usually immediately calls webhook notify system payment use confirmation e g mark invoice paid trigger shipping goods customer api json based rest api provide client libraries following programming languages php barzahlen package ruby barzahlen gem functionality create slip create payment payout refund slip send customer via email text message retrieve slip retrieve information including transaction state \\( pending paid etc \\) update slip update certain fields e g customer accidentally entered wrong email address resend slip resend mail text message slip useful e g customer accidentally deleted message invalidate slip invalidate slip customer longer pay receive money slip types payment slip customer pay receive money used e g customer orders product online shop payout slip paying money customer used e g customer withdraws cash bank account refund slip returning money customer related previous payment via barzahlen used e g customer returns product online shop problems integration regarding slip types please contact us slip states slip one four states except final pending slip valid used customer paid slip paid \\( final state \\) expired slip paid expiry date longer used \\( final state \\) invalidated slip explicitly invalidated longer used \\( final state \\) identifying customer reduce money laundering required store identifier unique per customer depending contract barzahlen email address internal customer identifier must provide identifier customer key field provide email address customer key must use email address email field accessing api api accessible via https uses json format requests responses rest api uses different http methods indicate type request response codes indicating outcome request errors returns additional specific error classes codes messages api endpoints production sandbox \\( use development \\) accessing api always verify https server certificate certificate verification necessary prevent man middle attacks read http client documentation carefully among required checks make sure verify certificate chain well server name \\( \\) certificate sandbox sandbox mode allows working slips actually paid store instead use control center simulate payment expiry receive webhooks events text messages sent sandbox mode emails contrast production endpoint sandbox endpoint available immediately sign begin integrating barzahlen soon possible optional features barcode ean13 field certain api responses contain payment payout refund slip data may include ean 13 barcode number affected slip number represents barcode customer gives cashier store customer usually receives barcode email text message barzahlen depending use case might better solution display barcode number customers directly due security reasons setting disabled default enabled barzahlen please feel free contact us interested using feature pdf slip download see retrieve slip pdf authentication authentication api requires requests signed using api key never include api key plain text request part signature use signature algorithm sign webhook requests system authentication webhook signature verification need division id payment key find barzahlen control center settings divisions see accessing api information https certificate verification api requests header format api requests requests api expects standard http authorization header custom authentication scheme replace division id signature signature based certain parts request algorithm calculating signature described example header signature includes current time must included request date header authorization header missing invalid api returns http status header error webhook requests webhooks provide signature custom header header format webhook requests replaced signature based certain parts request algorithm calculating signature described webhook requests contain header used api requests receiving webhooks always verify signature calculating signature calculating signature means generating string certain parameters using division payment key sign string section describes signature process next section contains signature generator use verify debug implementation string sign contains parameters following order separated newlines \\( line feed characters \\) example string sign host port separated colon e g host must match host request header http method e g path e g query string without question mark e g \\( always empty barzahlen api v2 use query parameters moment \\) date specified header e g \\( make sure date system clock correct must within small window around current time \\) idempotency key specified header \\( see may empty header used request \\) sha 256 digest request body \\( sha 256 empty string body empty \\) e g newlines always necessary regardless whether value empty number lines string sign always add newline body digest make sure use line feed characters carriage returns value empty \\( e g empty query string \\) still add newline last step signing string payment key use payment key form provide \\( convert data binary even hexidecimal form \\) example key ruby example showing hmac sha256 signing use payment key sign string using hmac sha 256 hash function encode resulting bytes hexidecimal form example string example key calculate following signature example signature example request example request signature header example shows api request including headers required authentication find example webhooks webhooks section signature generator signature generator allows verify debug implementation api v2 signature algorithm note make sure extra whitespace fields make sure accidentally change newline characters copying code browser text editor e g windows often adds carriage return characters addition line feed characters bytes put signature must sent actual request different kinds newlines whitespace invalidate signature signature string sign idempotency methods resources barzahlen api v2 even must used idempotent way automatically retry requests without unintended side effects retrying requests makes system resilient network failures happen system temporarily fails process request division exceeds rate limit highly recommend implementing automated retries necessary reliable use network based api overview idempotency properties different methods resources requires header set retrying request key request ignored api instead creating new slip returns slip current state never reuse idempotency key recommand using randomly generated string e g uuid v4 read request without side effects need idempotency updating slip values multiple times slip change need explicit idempotency resend emails text messages value actually changes invalidating slip final slip changed afterwards invalidating already invalidated slip nothing returns slip invalidated resending email text message external side effect properly implement idempotent way retrying endpoint new message might sent request using header endpoint effect ignored rate limiting request limit api rate limited per division ensure single division use much server resources example api response headers single request limit reached additional requests processed error returned http status code 429 time requests allowed \\( indicated header \\) request repeated api uses leaky bucket algorithm rate limiting allows sustained rate 1 request per second e bucket 'leaks one request per second bucket size 31 divison execute burst 31 requests \\( within one second \\) limit reached e bucket full next request available second one request 'leaked bucket second another request 'leaks bucket 31 seconds without requests bucket empty expect reach limits implement client side rate limit prevent getting errors getting error immediately retry request wait least time indicated header following rate limiting related headers returned total number requests generally allowed number requests remaining duration seconds limit reset maximum additional requests executed returned errors contains duration seconds next request allowed transaction limit also per division transaction creation rate limit set pretty high divisions unlikely affected plan creating 10000 slips per 24 hours please contact us contrast request rate limit api return additional information state transaction limit expect divisions reach limit normal circumstances division hits limit nevertheless api returns error case please contact us webhooks example webhook request transaction paid slip expires system https request url specify set url barzahlen control center settings divisions notification url alternatively want use different hook urls transactions specify creating transaction webhook request done request json body body contains event happened \\( \\) timestamp event occurred id transaction affected event body also contains complete slip resource access given metadata executing webhooks follow redirects webhook requests signed way requests api hook requests provide signature header signature works authentication always verify signature prevent unauthorized access see authentication information signature example request signed using key verify https server certificate making webhook requests system make sure server certificate accepted common browsers header contains version identifier webhook format slips created via api v2 always contains slips previously created using api v1 contains see webhook transition information migrate webhooks api v1 v2 failed requests webhook request fails retry request 11 times waiting time retries increases exponentially least 24 hours give send control center account administrator email failed webhook also viewed retry initiated barzahlen control center transactions notifications sandbox slips retry requests \\( send email \\) viewed immediately control center regard http status codes 2xx range success everything else error means redirect status codes like 307 interpreted error since follow redirects errors example error response barzahlen api v2 returns different http error codes 4xx 5xx ranges error status returned body contains json information error \\( except 5xx errors might contain non json data \\) error responses contain error class well error code errors class contain similar types errors api implementation prepared handle new error codes existing classes new error classes added without new api version never write code parsing error messages use anything showing people error messages change without announcement following describes error classes well currently used error codes implement automated retries certain errors others retries useful certain errors returned api also error cases see idempotency information error classes authentication authorization problem automatically retry request general problem http request automatically retry request problem concerning idempotency mechanism automatically retry request many requests sent per duration retry request later \\( see rate limiting \\) request body invalid format automatically retry request slip state necessary requested action automatically retry request unless know state changed one given parameters necessary format invalid reason automatically retry request organizational legal reasons prevent requested action automatically retry internal error occurred systems automatically retry request limited number attempts error persists several hours please contact us general errors message returned error code contain additional information http status codes 5xx range \\( e g 503 \\) possible treated 500 error find endpoint specific error codes documentation endpoint request ids example header need help integrating api questions related specific request made please let us know header response error responses also contain request id json body api stability make backwards compatible changes barzahlen api v2 without releasing new version means break existing code accessing api assumption existing code allows following changes api adding new resources adding new optional request body query parameters adding new parameters response bodies adding new body parameters webhook requests changing length format id token parameters always store parameters return string even contain numbers e g transaction ids likely change format format similar slip ids parameters never exceed maximum length specified json schema adding new slip types adding new error codes add new error classes code must able handle unknown error code error class changing error messages never write code parsing using anything else showing people see errors need make changes likely break systems using api future release new version api examples backwards incompatible changes removing resources removing properties response bodies longer accepting properties request bodies changing body property types increasing length beyond length specified json schema removing slip types changelog 2017 04 28 added pdf slip download endpoint 2017 04 21 added support payouts new slip type allows paying money unrelated previous payment slip creation returns new error code 2017 02 09 added error code transaction limit section 2016 09 20 returning error code refund creation payment slip already anonymized 2016 09 09 webhooks longer retried every five minutes exponential waiting time 2016 07 29 slip responses contain three nearest stores address provided slip creation note shown dates necessarily correspond date change deployed changes api v1 compared api v1 barzahlen api v2 supports several new features technical improvements new features customer notifications cell phone numbers provided email cell phone attributes updated emails text messages resent slip expiry date customized updated payment slips amount updated sandbox transactions emails sent pdf slips include nearby stores per slip webhook urls \\( useful especially payment service providers \\) webhooks \\( formerly push notifications \\) include information including full slip object idempotency allows recovering network system failures predictable outcome technical changes json based rest api api v2 json based rest api longer uses xml results new structure different endpoints provide json schema definitions request response bodies new slip identifiers api v2 slip ids mostly replace transaction ids slip ids strings length 50 bytes api v1 transaction ids numeric ids slip represents token customer use go store pay money get money paid slip usually pdf printed number text message transaction represents possible transfer money moment slip created via api v2 must exactly one transaction built api v2 way make transition transaction ids slip ids seamless possible existing systems slips previously created using api v1 \\( called transactions \\) keep numeric transaction id treat existing transactions transactions created using api v2 e g fetch information api v1 slip using endpoint api v2 slip 12345 api v1 transaction id slips keeping identifiers also allows easily associate webhooks sent api v2 format previously created transactions transaction ids still exist although moment necessary update attributes slip field strings identifiers api v2 slip ids strings also transaction division identifiers strings although fields might still return numbers string make sure treat strings lengths specified documentation change fields contain non numeric characters future webhook transition webhooks api v2 always requests json payload old v1 webhook format support various fields used api v2 importantly slip ids thus switch webhook format api v2 format create first slip via api v2 slips created via api v2 webhooks sent v2 format exclusively using api v2 production make sure production webhooks understand v2 format allow transition period \\( e g testing \\) v2 format activated send webhooks twice slips created via api v1 v1 format v2 format ensures creating slip via api v2 break webhooks systems still using api v1 supporting v1 webhooks want prevent systems reporting errors due requests understand decide ignore webhooks certain format checking header useful ignoring v1 webhooks switching api v2 still pending transactions created via api v1 switch making api v2 webhook requests longer follow redirects transitional api v1 webhook requests still changes new signature algorithm longer requires response signature checks relies tls proper server certificate verification rate limiting prevents division using many server resources customer checkout barzahlen provides custom checkout overlay payment payout slip created using barzahlen api v2 display checkout overlay customers immediately successfully finished ordering process website barzahlen checkout overlay allows customers get information payment payout process general proceed find stores closest current location pay order download payment payout slip pdf document \\( e g printing \\) specify phone number receive payment slip via text message \\( possible payment slips already specify parameter request \\) checkout support payout refund slips setup example html code display barzahlen checkout overlay checkout overlay easy set displayed desktop browsers well mobile phones following add html tag website checkout page \\( page display customers confirmed order website received success response request \\) put tag bottom website html source code closing tag otherwise older browsers might able load properly place content received within api response call attribute tag tag loads javascript file automatically displays barzahlen checkout overlay within modal top website checkout page customer able close modal one click return website host javascript checkout file servers update improve regular basis guarantee outdated versions file continue work properly future reopening barzahlen checkout overlay allow customers manually reopen barzahlen checkout overlay using predefined button reopen barzahlen checkout overlay using custom link mentioned barzahlen checkout overlay open automatically modal website customers able close overlay click close icon top right corner case customers accidentally close overlay might want reopen allow provide following two possibilities include following code html checkout page render pre styled button clicked customer reopens barzahlen checkout overlay \\( make sure include page tag work otherwise \\) case want flexible \\( e g want use styled button link tag instead \\) reopen barzahlen checkout overlay using javascript function disable automatic display example html code disable automatic display barzahlen checkout overlay certain circumstances might useful prevent checkout overlay appearing automatically add optional attribute tag achieve result specifying attribute setting automatically display checkout overlay recommend always display checkout overlay automatically make easy possible customers immediately see relevant information related barzahlen payment payout process decide disable automatic display make sure allow customers manually open checkout overlay using predefined button custom link like explained sandbox example html code display barzahlen checkout overlay sandbox mode use barzahlen checkout overlay sandbox mode need change parameter html tag point different javascript file slips create slip example minimal request body payment slip create payment payout refund slip provide email address send email pdf attachment customer provide cell phone number payment slip send text message containing barcode number amount send text messages payouts refunds required fields slip types slips must contain exactly one transaction know customer address provide use address show customer nearby barzahlen partner stores return three nearest stores api responses provide address must provide four fields note header required endpoint see payment slips payment slips paid customer result money transferred division used e g customer orders product online shop payment slip specifics must provided see identifying customer information must positive payout slips example minimal request body payout slip payout slips allow customer receive money result money transferred division used paying money associated previous payment returning portion money customer previously paid via barzahlen use refund slips payout slip specifics must provided see identifying customer information must negative refund slips example minimal request body refund slip refund slips return money customer must associated payment slip customer previously paid used e g customer returned product online shop sum refund slip amounts associated single payment slip must less equal payment slip amount refund slip specifics must negative must provided due regulatory issues copied original payment slip also must provided copied original payment slip well address provided currently address ignored original payment address used change future show stores next address provided creating refund example request body request attributes download json schema example response body http status 201 response attributes download json schema headers errors general api errors also returned resource see also errors retrieve slip retrieve information slip example response body http status 200 response attributes download json schema headers url parameters errors general api errors also returned resource see also errors update slip change certain slip attributes slips pending transaction updated notify customer certain changes one following values changed send email customer changed payment slip send text message new recipient send text messages payout refund slips payments following attributes changed text message resend limit exceeded see resend email text message yet set payouts following attributes changed yet set refunds following attribute changed none fields required field provided api tries update pass fields want change would mean setting field \\( possible fields \\) field passing value already set treated change api e g setting customer email slip already result additional email sent generally discourage changing amount user received email text message due poor user experience amount shown user pdf slip text message differ amount shown cash register might unexpected customer need update amount creating slip recommend creating slip without email cell phone number setting later together amount example request body request attributes download json schema example response body http status 200 response attributes download json schema headers url parameters errors general api errors also returned resource see also errors retrieve slip pdf retrieve slip pdf representation printing customer usually receives slip pdf via email access via checkout cases necessary download pdf cases endpoint useful example want print pdf send letter customer downloading pdf possible slips state note due security reasons endpoint disabled default enabled barzahlen please feel free contact us interested using feature http status 200 url parameters errors general api errors also returned resource see also errors resend email text message resend email text message containing slip information like barcode customer possible slips pending transaction text messages sent payment slips payout refund slips text messages resent twice attempt resend text message return error resending text message changing number via also counts resend longer possible limit reached note sandbox api endpoint send text messages endpoint returns empty json object response example response body http status 202 headers url parameters errors general api errors also returned resource see also errors invalidate slip invalidate slip longer used possible slips pending transaction e g paid slips invalidated action final undone invalid slip longer updated resent via api paid customer slip contains notify customer via email slip longer valid invalidating already invalidated slip nothing returns slip invalidated example response body http status 200 response attributes download json schema headers url parameters errors general api errors also returned resource see also errors", 
    "descr4": "like elegant code agile software development \\? apply show us 've got get touch development team offer unique mix young start ups advantages professionalism reputable payment provider start page contact login register deutsch developers wanted login register start shop systems gambio jtl shop magento mauve modified oscommerce oxid prestashop shopware xt commerce 3 xt commerce 4 merchandise management efulfilment mauve pixi psp computop expercash payone api design requirements payment selection order confirmation page logos banners explanations downloads logos partner logos gbt data protection text templates billing examples payment slips banner icons faq contact request offer api getting started guide would like give short introduction api make implementation simple possible download api getting started \\( pdf \\) following link redirects full api documentation api documentation copyright barzahlen rights reserved register impress contact us", 
    "descr3": "like elegant code agile software development \\? apply show us 've got get touch development team offer unique mix young start ups advantages professionalism reputable payment provider start page contact login register deutsch developers wanted login register start shop systems gambio jtl shop magento mauve modified oscommerce oxid prestashop shopware xt commerce 3 xt commerce 4 merchandise management efulfilment mauve pixi psp computop expercash payone api design requirements payment selection order confirmation page logos banners explanations downloads logos partner logos gbt data protection text templates billing examples payment slips banner icons faq contact gambio jtl shop magento mauve modified oscommerce oxid prestashop shopware xt commerce 3 xt commerce 4 request offer documentation barzahlen plugin oxid 4 2 4 4 inhalt 1 installation 1 1 download 1 2 insertion file system 1 3 adapting templates 1 4 adaptations database 2 configuration 2 1 activating module 2 2 registering partner area 2 3 configuring module 3 carrying test order 3 1 excluded orders 3 2 trial order 3 3 simulating payment 4 adapting shop 4 1 general business terms data protection 4 2 logos 4 3 description payment 4 4 emails 4 5 advertising materials 5 live operation 5 1 switching live operation 5 2 managing payments 5 2 1 overview 5 2 2 cancelling payment slip 5 2 3 initiating refunds 6 error handling 6 1 transmission error placing order 6 2 error logging 6 3 first aid 7 uninstalling 7 1 temporary deactivation 7 2 uninstalling 8 plugin update 8 1 update version 1 1 0 8 2 update version 1 1 4 9 support 1 installation 1 1 download yet downloaded plugin barzahlen integration area \\( https integration barzahlen de en shopsystems oxid \\) 1 2 insertion file system unzip downloaded archive folder choice find following folder structure usual oxid modules subfolder src admin modules views 1 3 adapting templates subfolder basic find directory tpl contains template files barzahlen payment tpl barzahlen thankyou tpl templates used shop system also used visualise template adaptations fitted comments barzahlen begin barzahlen end open standard templates payment tpl thankyou tpl complete blocks payment tpl assign variable ipayerror \\( standard template line 43 \\) make sure change elseif following line barzahlen begin smarty get payerrortext 'barzahlen' div class errorbox oxmultilang ident bz page checkout payment error div barzahlen end elseif ipayerror 1 list payment options oxidcashondel oxidcreditcard oxiddebitnote following else \\( standard template line 188 \\) barzahlen begin elseif spaymentid oxidbarzahlen oview checkcurrency \\( \\) true tr onclick oxid form select \\( 'paymentid' inptcounter \\) td input id test payment spaymentid type radio name paymentid value spaymentid oview getcheckedpaymentid \\( \\) paymentmethod oxpayments oxid value checked td td id test paymentdesc smarty foreach paymentselect iteration colspan 2 label b img src http cdn barzahlen de images barzahlen logo png height 45 alt paymentmethod oxpayments oxdesc value style vertical align middle b label td tr tr onclick oxid form select \\( 'paymentid' inptcounter \\) td td td id test paymentdesc smarty foreach paymentselect iteration colspan 2 oxmultilang ident bz page checkout payment desc oview getsandbox \\( \\) 1 oxmultilang ident bz page checkout payment sandbox oxmultilang ident bz page checkout payment partner section name partner start 1 loop 11 img src http cdn barzahlen de images barzahlen partner 02d sprintf smarty section partner index png alt style vertical align middle height 25px section td tr barzahlen end thankyou tpl beginning file second div \\( standard template line 13 \\) barzahlen begin oview getinfotextone \\( \\) oview getinfotextone \\( \\) barzahlen end inserted template blocks delete files barzahlen payment tpl barzahlen thankyou tpl 1 4 adaptations database log administration area shop system select item service tools menu select button search open file install sql contained installation package click start update 2 configuration 2 1 activating module open area master data basic settings via administration menu select tab system area modules add content file extends txt existing contents payment barzahlen views barzahlen payment thankyou barzahlen views barzahlen thankyou oxpaymentgateway barzahlen core barzahlen payment gateway oxorder barzahlen core barzahlen order navigation barzahlen core barzahlen navigation already extend one several listed components modules necessary separate ampersands \\( \\) example saved settings empty tmp folder shop call administration area way changes made become visible 2 2 registering partner area yet registered barzahlen partner area \\( https controlcenter barzahlen de \\) please filled registration form verified email address clicking confirmation link log select tab divisions settings displayed page find division id api key notification key also set notification url shop order send status changes regarding transactions refunds payment module automatically entered shop information callback class processes notifications called url suffix index php \\? cl barzahlen callback supposing shop url would enter notification url field following order receive notifications 2 3 configuring module select module specific menu item barzahlen settings enter data shop id payment key notification key received sent email registering merchant area \\( https partner barzahlen de \\) activate sandbox mode order first test payment module switch debugging addition error messages would like individual connections logged save input clicking save open area shop settings select sub item payment methods select barzahlen list available methods payment basic settings area master already set means purchases 1 000 euros processed barzahlen want offer barzahlen another maximum value enter value confirm clicking button save click button select using drag drop customer groups want give option paying barzahlen select tab countries click button move germany right side assigned countries next assign payment method barzahlen desired shipping methods click shop settings shipping methods administration menu select one shipping methods offered together barzahlen select desired shipping method list open tag payment methods click button move barzahlen right side payment module configured ready use 3 carrying test order 3 1 excluded orders check whether exclusion criteria payment plugin set correctly running following buying scenarios one order goods value higher equal 1 000 euros order customer address outside germany barzahlen appear set payment options conditions payment slip request barzahlen api would fail customer would returned set payment options error message point aim prevent trouble customer 's end possible termination purchase 3 2 trial order place product \\( goods value 1 000 euros \\) shopping cart go checkout confirm delivery address \\( inside germany \\) shipping method proceed step select method payment select barzahlen list options continue ordering process explanatory text logos partners displayed shown simplified form following graphic mit abschluss der bestellung bekommen sie einen zahlschein angezeigt den sie sich ausdrucken oder auf ihr handy schicken lassen k nnen bezahlen sie den online einkauf mit hilfe des zahlscheins der kasse einer barzahlen partnerfiliale bezahlen sie bei information purchases made test mode barzahlen contain transaction number barcode assigned barzahlen server transmitted data stored temporarily test purposes trial purchases made later cancelled without hesitation system confirm information provided order complete ordering process information please note sms function available test mode additional email payment slip sent test customer furthermore three nearest partner stores listed payment slip functions automatically available live operation 3 3 simulating payment log barzahlen merchant area \\( https controlcenter barzahlen de \\) area transactions switch sandbox transactions see list sandbox transactions effected test purposes via shop system right side able mark transactions paid clicking click simulates expiry time limit payment barzahlen transaction click cancels transaction way trial pay transaction choice status transaction changes paid provided sandbox notification url correctly set status order system changes information callback class processes notifications called url suffix index php \\? cl barzahlen callback supposing shop url would enter notification url field following order receive notifications 4 adapting shop addition actual integration payment plugin details considered successful integration order ensure trouble free processing 4 1 general business terms data protection extend general terms business well data protection information addition passages concerning barzahlen payment provider find ready made texts general business terms data protection 4 2 logos use logos payment providers footer online shop homepage customers see first glance pay purchases made shop find logos order call attention barzahlen offered method payment logos 4 3 description payment many online shops additional information page provides customers detailed information shipping payment methods standard texts prepared texts different lengths 4 4 emails payment method used alongside ordered goods services also listed confirmation email make sure email template contain bank transfer request something similar unsettle customers purchase example detailed description payment method confirmation email found standard texts 4 5 advertising materials additional advertising materials newsletters blogs announcements online shop found banner 5 live operation 5 1 switching live operation enable orders billed via barzahlen open configuration barzahlen payment module administration area online shop deactivate test mode save setting clicking update results sending requests productive api saves transmitted data ensures processing payments 5 2 managing payments 5 2 1 overview navigate order overview shop backend \\( manage orders orders \\) select order interests barzahlen module extends order overview tab used access information current status transactions customer requires payment slip sent stated email address clicking button 5 2 2 cancelling payment slip plugin version 1 1 4 order deleted cancelled oxid administration area related outstanding payment slip automatically cancelled order cancelled therefore remains system successful parallel cancellation payment slip shown status case early versions barzahlen plugin cancellation order necessary cancel payment slip merchant section \\( https partner barzahlen de \\) 5 2 3 initiating refunds carry refunds conveniently shop backend soon order paid table refund information appears overview simply enter desired amount confirm clicking save maximum permissible amount displayed right obtained original amount less pending completed refunds refund successfully received barzahlen receive confirmation amount appears overview able send disbursement slip required like success message mentioned system informs result whenever new information entered 6 error handling 6 1 transmission error placing order processing order barzahlen module starts second attempt incorrect response response received server second attempt also successful customer returned list payment method options select alternative payment method order complete order case reason error recorded error log later provides information cause 6 2 error logging errors occur automatically stored together time occurrence relevant data module error file barzahlen log find error file subfolder log 6 3 first aid following table find error messages cases remedy quickly easily receive error messages proposed steps towards solution remedy situation hesitate contact technical support team 7 uninstalling 7 1 temporary deactivation order deactivate barzahlen plugin payment method temporarily select shop settings payment methods administration area select barzahlen module list remove check checkbox active 7 2 uninstalling information please note receive status changes open transactions uninstalling module however called time merchant area \\( https partner barzahlen de \\) deactivate module described delete files inserted shop system preparation admin barzahlen settings php admin barzahlen transactions php log barzahlen log modules barzahlen admin de barzahlen lang php admin en barzahlen lang php admin tpl barzahlen settings tpl admin tpl barzahlen transactions tpl ihr template de barzahlen lang php ihr template en barzahlen lang php ihr template tpl barzahlen payment tpl ihr template tpl barzahlen thankyou tpl views barzahlen callback php 8 plugin update information version 1 1 4 barzahlen plugin automatically informed updates weekly intervals logging administration area update payment module barzahlen new version proceed follows download current plugin oxid version website simply overwrite existing module files log administration area shop system select item service tools menu select button search open file update sql contained installation package click start update open area barzahlen settings enter shop id payment key notification key empty folder tmp shop directory reload administration area 8 1 update version 1 1 0 open area shop settings shop backend select sub item payment methods select barzahlen list available methods payment reduce maximum value 999 99 euros confirm clicking button save 8 2 update version 1 1 4 open area master data basic settings via administration menu select tab system area modules complete details installed module required payment barzahlen views barzahlen payment thankyou barzahlen views barzahlen thankyou oxpaymentgateway barzahlen core barzahlen payment gateway oxorder barzahlen core barzahlen order navigation barzahlen core barzahlen navigation 9 support barzahlen team happy deal questions might send us email support barzahlen de use contact form email forwarded directly responsible employee ticket system deal enquiry copyright barzahlen rights reserved register impress contact us", 
    "descr2": "like elegant code agile software development \\? apply show us 've got get touch development team offer unique mix young start ups advantages professionalism reputable payment provider start page contact login register deutsch developers wanted login register start shop systems gambio jtl shop magento mauve modified oscommerce oxid prestashop shopware xt commerce 3 xt commerce 4 merchandise management efulfilment mauve pixi psp computop expercash payone api design requirements payment selection order confirmation page logos banners explanations downloads logos partner logos gbt data protection text templates billing examples payment slips banner icons faq contact request offer easy integration via shop system api integrating barzahlen online shop child 's play barzahlen provides interfaces common shop modules also connected via individual api interface integrated via payment service provider time integrate barzahlen technically means one three options mentioned purpose need briefly enter contact data soon test barzahlen live sandbox want use online shop must register merchant simply fill registration form receive test access conclusion contract activate account live operation use barzahlen complete range functions decide shop module api interface shopmodule integrate barzahlen shop system learn api integrate barzahlen individually via api learn barzahlen supports integration process detailed documentation barzahlen aims point integration process detailed possible advance first meeting technicians provide first cost assessment road map technical integration resource planning basing create individual business case cost quantity framework supposed help decision making process testing sandbox implementing barzahlen provide sandbox tool enables simulate processes api destination n't store data live system different data base seperately accessible simulate divers actions test processes test successfully concluded nothing else standing way going live technical support barzahlen integrates technical interfaces relevant processes order provide testable finalized implementation supposed base successful market introduction barzahlen support entire process team highly qualified technicians aims always support advice assistance implementing barzahlen test barzahlen simply register free registration copyright barzahlen rights reserved register impress contact us", 
    "descr1": "getting started use barzahlen v2 api version may 15 2017 documentation check api v2 documentation page https docs barzahlen de api v2 want use api ruby php please look ready use sdks get started seconds ruby barzahlen gem php barzahlen package icons made freepik flaticon com licensed cc 3 0 goal guide create signed request send barzahlen sandbox api icon made wissawa khamsriwath flaticon com licensed cc 3 0 authentication api uses state art security techniques request must signed special generated hash generate igantur use documentation page signature time critical means date header differ current time one minute http header parameters http content signatur algorithm signature 1 retrieve e ndpoint slip creation 2 build request content 3 generate signature 4 send request icon made nikita golubev flaticon com licensed cc 3 0 1 retrieve endpoint slip creation host https api sandbox barzahlen de v2 post slips 2 build request content slip type payment customer key customer example com transactions currency eur amount 99 50 p ay amount 99 50 customer key ready create signature next step 3 generate signature ready take head signature generator \\( https docs barzahlen de api v2 signature generator \\) generate signature specific request generation algorithm described docs pi key current date request body \\( json \\) inline 4 send postman \\( 1 2 \\) icons made freepic flaticon com licensed cc 3 0 enable interceptor overwrite date header set request body \\( exact entered signature generator \\) ate used signature set ignature set division set idempotency key \\( random generated uuid v4 \\) 4 send postman \\( 2 2 \\) submit 4 send curl \\( 1 3 \\) curl x post slip type payment customer key customer example com transactions currency eur amount 99 50 h date mon 15 may 2017 13 32 20 gmt h authorization bz1 hmac sha256 divisionid signature 9ddd48dd912a6e73c841a21cd23c06cc65e55a1727d34fdd02547682573832fd h idempotency key 0f1db14a 81ec 405d 8189 50d0c907ebea https api sandbox barzahlen de v2 slips id slp 3473c4de ab78 4e50 b04e 62a5cee3aba5 slip type payment division id 84681 reference key null barcode ean13 4051732578462 hook url null expires 2017 05 29t21 59 59 000z customer key customer example com cell phone last 4 digits null email null language de de checkout token djf8y2hrdhxzbhatmzq3m2m0zgutywi3oc00ztuwlwiwngutnjjhnwnlztn hyme1fgpctkhpt0cvv2m4sjurm2hswg5tou9evxfswg9mwxezzk8rslbqc1fbr0u9 metadata reponse 4 send curl \\( 2 3 \\) transactions id 173257846 currency eur amount 99 5 state pending nearest stores reponse 4 send curl \\( 3 3 \\) common mistakes request body contains carriage returns cr instead line feeds lf try remove cr inline request body data signature data sent defer \\( e g date header request body wrong api key used please check api key control center requests idempotency key required please check docs case please look error message api response still questions \\? upport support barzahlen de 49 \\( 0 \\) 30 346 46 16 15 icon made roundicons flaticon com licensed cc 3 0", 
    "crawled_date": "2017-06-10T13:59:38.007888"
  }, 
  "52": {
    "api_url": "wirecard.com", 
    "progweb_url": "https://www.programmableweb.com/api/wirecard", 
    "progweb_date": "10.29.2012", 
    "progweb_descr": "Wirecard is an online payment processing solution that offers, personal, prepaid, wireless, and corporate payment services. The Wirecard API is offered as an option for integration in it's e-commerce payment processing service. The API allows users to accept and deliver payments, process returns, offer subscription payment systems, and other functions. For documentation and information about the service, contact wirecard.", 
    "api_name": "Wirecard", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:38.008887"
  }, 
  "63": {
    "link5": "https://www.webmoney.ru/eng/developers/api.shtml", 
    "link4": "https://sms.webmoney.ru/SmsStatus/JsDoc/index.html", 
    "link1": "https://events-api.webmoney.ru/Help", 
    "api_url": "webmoney.ru", 
    "link3": "https://forum.webmoney.ru/index.php?/topic/29746-%D1%81%D0%BA%D0%B0%D0%BD-%D0%BF%D0%BB%D0%B0%D1%82%D0%B5%D0%B6%D0%BA%D0%B8/", 
    "link2": "https://www.webmoney.ru/rus/developers/api.shtml", 
    "progweb_url": "https://www.programmableweb.com/api/webmoney", 
    "progweb_date": "11.22.2012", 
    "progweb_descr": "The service from Russia processes payments for online transactions such as e-commerce purchases. It is offered as a payment method option alongside credit cards and other methods. It generates an invoice for a completed transaction for online delivery to the buyer. Upon transfer of funds from the buyer, the service triggers fulfillment of the purchased good or service and brokers payment to the seller. This clearinghouse function protects sellers from defaulted payments while saving buyers from the need to create payment accounts with multiple sellers all holding their personal information.  API methods support submission of a transaction for payment and delivery of an invoice to the buyer. Methods support collection of funds from buyer and distribution to seller, along with the resulting trigger to fulfill delivery of the purchased product.", 
    "api_name": "WebMoney", 
    "progweb_cat": "Payments,eCommerce", 
    "descr5": "sign log description brief purse types purse management keeper standard keeper winpro keeper webpro keeper mobile keeper social networks e num system fees statistics statistics year security privacy legal information webmoney transfer code transfer aml agreement guarantors agreement wmz agreement wmr agreement wme agreement wmg agreement wmx agreement wmb agreement wmu agreement wmk credit service agreement warning system subjects owner administrator guarantors verification centre registrars developer personal get loan debt service loan service credit exchange business accept payments collection donations freelancers online stores online services projects games apps developers top withdraw top withdraw support financial support technical support official requests social networks press centre help beginners registration filing complaints passport limits fundraising deposit withdrawal method technical control bank cards payment systems receiving payments automats secure limits financial search payments transaction history loan defaults debt service system use legal persons exchange operations general recovering control verification contacts changing bl termination service prohibited activities delete wmid developers api program interfaces logos corporate style cooperation partnership program verification center future system guarantor credit organizations exchange offices selling wm cards sellers merchants usage trademarks webmoney webmoney transfer site owners authorized trademark owners copyright webmoney 1998 espa ol portugu rk webmoney description legal information system subjects top withdraw support api program interfaces logos corporate style developers cooperation program interfaces depending type activity current tasks system offers various ways accept payments manage resources web merchant interface accepting payments online done using interfaces service web merchant interface recommend selecting option need method payment automated record orders \\( including issuing digital goods \\) xml interfaces automate working webmoney transfer system via xml interfaces interface x1 sending invoice merchant customer another \\( buyer \\) interface x2 transfer funds one purse another interface x3 receiving transaction history check transaction status interface x4 receiving history issued invoices verifying whether invoices paid interface x5 completing code protected transaction entering protection code interface x6 sending message random wm identifier via internal mail wmt interface x7 identification authentification participant holder wm keeper classic third party website interface x8 retreiving information purse ownership wm identifier find member identifier purse interface x9 retrieving information purse balance interface x10 retrieving list payable incoming invoices interface x11 retrieving information client certificate using wm identifier interface x12 importing purse statement 1 enterprise 7 7 document interface x13 recalling incomplete protected transaction interface x14 fee free refund \\( buyer \\) interface x15 viewing changing settings trust management interface x16 creating purse interface x17 operations arbitration contracts interface x18 receiving transaction details via merchant webmoney interface x19 verifying personal information owner wm identifier interface x20 implementing transaction merchant webmoney service without leaving seller site \\( resource service application \\) interface x21 setting trust merchant payments sms interface x22 receiving ticket prerequest payment merchant wmtransfer com information xml interfaces available webmoney wiki knowledge base cooperation press centre contacts questions contact us via support wmtransfer com usage trademarks webmoney webmoney transfer site owners authorized trademark owners copyright webmoney 1998 2017 english espa ol portugu rk cooperation press centre contacts espa ol portugu rk 1998 2017 webmoney", 
    "descr4": "home homeclassessmsstatusglobalsmsstatusscriptcounter documentation generated jsdoc 3 4 0 mon feb 20 2017 18 44 19 gmt 0300 \\( russia tz 2 standard time \\)", 
    "descr3": "webmoney webmoney forum wmt https forum webmoney ru index php \\? topic 29746 merkuci 27 2014 10 24 7 1 merkuci \\( wmid 838244225048 \\) 6 23 10 georgia webmoney bl 27 2014 10 24 0 2 323306766640 \\( wmid 323306766640 \\) 456 20 13 webmoney bl 27 2014 19 52 size size webmoney http owebmoney kz wm http currex ru 0 3 merkuci \\( wmid 838244225048 \\) 6 23 10 georgia webmoney bl 28 2014 09 39 10 visa virtual \\( rus bank \\) godaddy com support staff response thank provided documentation upon review additional information necessary please provide one documents complete verification process statement financial institution showing original purchase privacy may mark last four digits account number well transactions companies credit debit gift card used payment provide image front back card preserve integrity payment information please mark three four digit security code last four digits card number name line must visible upon receipt requested documentation evaluate status account thank advance cooperation apologize inconvenience may cause sincerely verification office 0 4 323306766640 \\( wmid 323306766640 \\) 456 20 13 webmoney bl 28 2014 10 56 10 visa virtual \\( rus bank \\) godaddy com support staff response thank provided documentation upon review additional information necessary please provide one documents complete verification process statement financial institution showing original purchase privacy may mark last four digits account number well transactions companies credit debit gift card used payment provide image front back card preserve integrity payment information please mark three four digit security code last four digits card number name line must visible upon receipt requested documentation evaluate status account thank advance cooperation apologize inconvenience may cause sincerely verification office webmoney http owebmoney kz wm http currex ru 1 5 andrewtishkin \\( wmid 282697973392 \\) 16 601 17 08 webmoney bl 28 2014 12 21 6 plati ru qiwi qvc ps wm \\( \\) \\( \\) 1 6 merkuci \\( wmid 838244225048 \\) 6 23 10 georgia webmoney bl 29 2014 00 40 10 visa virtual \\( rus bank \\) plati ru godaddy 428122 1 7 andrewtishkin \\( wmid 282697973392 \\) 16 601 17 08 webmoney bl 29 2014 18 45 qwi www bindb com bin database html bin 428122 card brand visa issuing bank qiwi bank \\( jsc \\) card type debit card level virtual iso country name russian federation iso country a2 ru \\( \\) 0 8 merkuci \\( wmid 838244225048 \\) 6 23 10 georgia webmoney bl 30 2014 01 39 godaddy 0 1 0 1 0 webmoney forum wmt webmoney new webmoney mobile community forum software ip board support wmtransfer com webmoney webmoney transfer copyright webmoney 1998", 
    "descr2": "keeper standard keeper winpro keeper webpro keeper mobile keeper e num keeper mobile ios keeper mobile windows phone keeper mobile blackberry keeper mobile android wmz wmr wme wmg wmx wmb wmu wmk webmoney webmoney transfer copyright webmoney 1998 english espa ol portugu rk webmoney web merchant interface web merchant interface \\( \\) xml webmoney transfer xml x1 \\( \\) \\( \\) x2 x3 x4 x5 x6 wm wmt x7 wm keeper classic x8 wm x9 x10 x11 wm x12 1 7 7 x13 x14 \\( \\) x15 x16 x17 x18 merchant webmoney x19 wm x20 merchant webmoney \\( \\) x21 x22 merchant webmoney xml php wmxi \\( \\) api php library \\( php wmsigner \\) ruby gem webmoney \\( wmsigner native extension \\) github com perl business webmoney net wm api wmclasses java wmxj python python webmoney api xml webmoney wiki support wmtransfer com webmoney webmoney transfer copyright webmoney 1998 english espa ol portugu rk english espa ol portugu rk 1998 2017 webmoney", 
    "descr1": "api events error auth feed event discuss task voting user search settings utility upload skills list geo captcha dialog message files recommend test video testlog friend group eventgenerator notifications bot", 
    "crawled_date": "2017-06-10T13:59:37.995758"
  }, 
  "115": {
    "api_url": "senddr.com", 
    "progweb_url": "https://www.programmableweb.com/api/senddr", 
    "progweb_date": "04.16.2013", 
    "progweb_descr": "Senddr is an online platform that allows users to create, send, manage, and share invoices across multiple applications. Users can send and receive purchasing invoices with Senddr.  The Senddr API allows developers to access and integrate the functionality of Senddr with other applications. Public documentation is not available; interested developers should contact partners@senddr.com for more information.", 
    "api_name": "Senddr", 
    "progweb_cat": "Financial,Purchasing", 
    "crawled_date": "2017-06-10T13:59:37.938064"
  }, 
  "114": {
    "api_url": "fusebill.com", 
    "progweb_url": "https://www.programmableweb.com/api/fusebill", 
    "progweb_date": "04.16.2013", 
    "progweb_descr": "Fusebill is an online platform for billing, payments, and subscription plans for recurring payments. Fusebill offers automation for invoicing and receiving payments.   The Fusebill API allows developers to access and integrate the functionality of Fusebill with other applications. Public documentation is not available; interested developers should email sales@fusebill.com for more information.", 
    "api_name": "Fusebill", 
    "progweb_cat": "Payments,Billing", 
    "crawled_date": "2017-06-10T13:59:37.939079"
  }, 
  "117": {
    "api_url": "mangopay.com", 
    "progweb_url": "https://www.programmableweb.com/api/mangopay", 
    "progweb_date": "04.19.2013", 
    "progweb_descr": "MangoPay is a full-stack payment platform for accepting online payments and managing e-money. It gives users the ability to create e-wallets, transfer money between e-wallets, allow group payments, hold escrow funds, and collect fees in a variety of ways. MangoPay provides advanced payment features such as recurring payments, single-click payments, and refunds on cards. The platform accepts payments from more than 150 countries in the local currencies. MangoPay's functions can be accessed programmatically via REST API.", 
    "api_name": "MangoPay", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:37.936005"
  }, 
  "116": {
    "api_url": "ribbon.co", 
    "progweb_url": "https://www.programmableweb.com/api/ribbon", 
    "progweb_date": "04.19.2013", 
    "progweb_descr": "Ribbon is an online retail platform that enables its users to sell all kinds of goods and services, both physical and digital. After creating an account and adding their products, sellers receive a unique link to each product that can be shared anywhere, including social media sites. Customers can click on the link and make purchases without having to leave what they were doing before. Ribbon comes with fully-encrypted, secure payment infrastructure for processing debit and credit cards. The Ribbon API allows its users to add and retrieve product information as well as get order information.", 
    "api_name": "Ribbon", 
    "progweb_cat": "eCommerce,Payments", 
    "crawled_date": "2017-06-10T13:59:37.937044"
  }, 
  "111": {
    "api_url": "leaf.me", 
    "progweb_url": "https://www.programmableweb.com/api/leaf", 
    "progweb_date": "03.21.2013", 
    "progweb_descr": "Leaf is a platform that allows merchants and their customers to interact. Leaf provides merchants with tools to collect payments from their customers and ask for feedback. Leaf provides customers with an application to retrieve receipts and give feedback to merchants.  The Leaf API allows developers to access and integrate the functionality of Leaf with other applications and to create new applications. Public documentation is not available; interested developers should sign up here: http://leaf.me/developers.", 
    "api_name": "Leaf", 
    "progweb_cat": "eCommerce,Merchants", 
    "crawled_date": "2017-06-10T13:59:37.942206"
  }, 
  "110": {
    "api_url": "comprafacil.pt", 
    "progweb_url": "https://www.programmableweb.com/api/compraf%C3%A3%C2%A1cil", 
    "progweb_date": "03.19.2013", 
    "progweb_descr": "CompraF\u00c3\u00a1cil provides a payment platform that allows any member company (Partner) to generate Referrals for payments with a debit card, online banking, or by cash. By issuing calls through CompraF\u00c3\u00a1cil's SOAP API, users can save purchase information, get information about orders placed, and find out the current status of an order. The CompraF\u00c3\u00a1cil website is provided solely in Portuguese.", 
    "api_name": "CompraF\u00c3\u00a1cil", 
    "progweb_cat": "Payments,Referrals", 
    "crawled_date": "2017-06-10T13:59:37.943200"
  }, 
  "113": {
    "api_url": "gyft.com", 
    "progweb_url": "https://www.programmableweb.com/api/gyft", 
    "progweb_date": "03.27.2013", 
    "progweb_descr": "Gyft is a digital gift card platform that enables users to manage mobile gift cards and use mobile gift cards at retailers and businesses, as well as send other people gift cards with their mobile phones.  The Gyft API allows developers to access and integrate the functionality of Gyft with other applications and to create new applications. Public documentation is not available; interested developers should sign up here for API access: http://www.gyft.com/partners/.", 
    "api_name": "Gyft", 
    "progweb_cat": "eCommerce,Mobile", 
    "crawled_date": "2017-06-10T13:59:37.940172"
  }, 
  "112": {
    "api_url": "getcardflight.com", 
    "progweb_url": "https://www.programmableweb.com/api/cardflight", 
    "progweb_date": "03.23.2013", 
    "progweb_descr": "CardFlight is an in-application payment service. CardFlight allows application owners and developers to access credit card payments in their applications.   The CardFlight API allows developers to access and integrate the functionality of CardFlight with other applications. The main API methods are handling a payment transaction and generating the transaction response.", 
    "api_name": "CardFlight", 
    "progweb_cat": "Payments,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:37.941188"
  }, 
  "119": {
    "api_url": "bips.me", 
    "progweb_url": "https://www.programmableweb.com/api/bips", 
    "progweb_date": "05.07.2013", 
    "progweb_descr": "BIPS is an online payment service that allows users to buy, sell, trade, withdraw and accept Bitcoins as payment. The BIPS API allows the users to send bitcoins, get the balance of the user's account, and export transactions. The service uses REST calls. An account and an API Key are required to use the API.", 
    "api_name": "BIPS", 
    "progweb_cat": "Payments,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:37.932820"
  }, 
  "118": {
    "api_url": "pin.net.au", 
    "progweb_url": "https://www.programmableweb.com/api/pin-payments", 
    "progweb_date": "04.30.2013", 
    "progweb_descr": "Pin Payments is a multi-currency payment system that accepts payment from an Visa or MasterCard debit or credit card both locally and internationally. The service operates without requiring a merchant account or an extensive process for application. The Pin Payments API uses REST calls and returns JSON. SSL is required for use, and a unique API key is required for each service endpoint.", 
    "api_name": "Pin Payments", 
    "progweb_cat": "Financial,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:37.933925"
  }, 
  "429": {
    "api_url": "paylocity.com", 
    "progweb_url": "https://www.programmableweb.com/api/paylocity-webhooks", 
    "progweb_date": "04.26.2017", 
    "progweb_descr": "Paylocity Web Services Push Notifications are the process of triggering an action based on the change of data within the Web Pay system. The action triggered is the sending of a JSON push notification to an external HTTPS URL that is provided by our clients. The HTTPS URL can have no authentication or basic authentication.  Paylocity's recommendation is to use the basic authentication so that they can provide one more levels of security for data protection. Paylocity is a Cloud based payroll software designed for the mid-market, to simplify how you perform everyday payroll and human resources tasks using an online system.", 
    "api_name": "Paylocity Webhooks", 
    "progweb_cat": "Payments,Human Resources", 
    "crawled_date": "2017-06-10T13:59:23.026376"
  }, 
  "428": {
    "api_url": "paylocity.com", 
    "progweb_url": "https://www.programmableweb.com/api/paylocity", 
    "progweb_date": "04.26.2017", 
    "progweb_descr": "Paylocity Web Services API is an externally facing RESTful Internet protocol.  The Paylocity API uses HTTP verbs and a RESTful endpoint structure with OAuth 2.0 used as the API authorization framework. Request and response payloads are formatted as JSON and include; Earnings, Deduction, Employee and more.  Paylocity is a Cloud based payroll software designed for the mid-market, to simplify how you perform everyday payroll and human resources tasks using an online system.", 
    "api_name": "Paylocity", 
    "progweb_cat": "Payments,Human Resources", 
    "crawled_date": "2017-06-10T13:59:23.029259"
  }, 
  "421": {
    "link5": "https://developer.paypal.com/docs/classic/archive/", 
    "link4": "https://developer.paypal.com/docs/accept-payments/", 
    "link1": "https://developer.paypal.com/docs/api/", 
    "api_url": "paypal.com", 
    "link3": "https://developer.paypal.com/docs/", 
    "link2": "https://developer.paypal.com/docs/classic/api/", 
    "progweb_url": "https://www.programmableweb.com/api/paypal-billing-agreements", 
    "progweb_date": "03.29.2017", 
    "progweb_descr": "The PayPal Billing Agreements API retrieves data related to an agreement. It can create an agreement, update an agreement, show agreement details, and cancel agreements. It is available with REST architecture in JSON body. The example available presents how to create a PayPal payment agreement that overrides merchant preferences and shipping fee and tax information.", 
    "api_name": "PayPal Billing Agreements", 
    "progweb_cat": "Billing,Payments", 
    "descr5": "docs api reference support log dashboard back docs documentation archive documentation page created previous versions paypal products content files might reflect current product functionality table contents account authentication adaptive accounts adaptive payments paypal buttons images express checkout invoicing order management instant payment notification \\( ipn \\) order management \\( ipn pdt \\) mass payments payflow paypal payments standard permissions latest documentation see nvp soap api documentation account authentication account authentication service getting started guide adaptive accounts adaptive accounts developer guide adaptive payments adaptive payments developer guide note see adaptive payments developer documentation latest documentation documentation provided html format paypal buttons images paypal buttons images express checkout merchant api reference archive getbillingagreementcustomerdetails \\( nvp soap \\) api operation deprecated starting version 54 0 later api setcustomerbillingagreement \\( nvp soap \\) api operation deprecated starting version 54 0 later api invoicing adaptive invoicing developer guide invoicing user 's guide invoicing service api guide note see invoicing developer documentation latest documentation documentation provided html format order management instant payment notification \\( ipn \\) instant payment notification guide order management order management integration guide mass payments mass payments user guide payflow note see payflow gateway development integration guides latest documentation payflow gateway developer guide pdf latest payflow gateway integration information see html version guide payflow link payflow link user 's guide payflow link fraud protection services user 's guide payflow link recurring billing service user 's guide payflow pro payflow pro developer 's guide payflow pro reporting developer 's guide website payments pro payflow edition website payments pro payflow edition developer 's guide website payments pro payflow edition fraud protection services user 's guide website payments pro payflow edition recurring billing service user 's guide paypal payments pro payflow edition recurring payments developer 's guide website payments pro payflow edition reporting developer 's guide website payments pro payflow edition xmlpay developer 's guide paypal payments standard paypal payments standard integration guide subscriptions recurring payments guide permissions permissions service guide note see permissions developer documentation latest documentation documentation provided html format docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr4": "docs api reference support log dashboard back docs accept payments paypal offers variety products solutions accepting payments choose solution best requirements whether goal get running quickly possible develop fully customized payment experience braintree direct braintree direct suitable type integration whether want quick easy payment solution completely customized payment experience drop ui available braintree direct enables start accepting payments little effort want build checkout experience braintree direct simplifies payment method details token never need worry method users choose pay learn get started braintree direct payment buttons paypal makes easy accept payments website whether mobile device tablet pc copy paste short html snippet website add payment button single item shopping cart see add payment buttons website information payments rest api payments rest api provides easy secure way accept online mobile payments take advantage great benefits paypal enabling customers make payments clicks payments made paypal credit cards depending country accept immediate payment authorize payment capture later payments overview explains get started payments rest api find detailed information paypal paypal sdks enable ios android apps interact credit card swipers merchants process person credit card transactions using mobile app native libraries paypal sdks enable interact paypal hardware also process card present transactions get started see integrating paypal sdks express checkout express checkout fast easy way buyers pay paypal express checkout makes easier buyers pay online enables accept paypal retaining control buyer overall checkout flow typical checkout flow buyer must provide shipping information billing payment information checking shopping cart page express checkout buyer check pay without entering shipping billing information paypal provides stored information simplifies expedites checkout process increase sales 18 percent learn see express checkout integration guide shopping carts paypal partners provide third party shopping carts allow seamlessly accept paypal payments whether need complete online store want add shopping cart existing website several options available paypal partners meet needs learn see using shopping carts already integrated third party shopping cart solution looking support search browse articles within shopping cart section paypal technical support faq paypal payments pro payflow gateway paypal payments pro customizable solution enables merchants keep buyers website entire checkout payment process merchants host customized checkout pages send transactions paypal paypal host checkout pages also manage security sales authorizations paypal payments pro accept paypal paypal credit payments well credit debit card payments paypal payments pro also includes optimized mobile checkout experience details see paypal payments pro payflow gateway secure open gateway utilized internally paypal payments pro services provides features including api allows merchants create host customized checkout pages paypal hosted checkout page using payflow gateway shared api merchants connect online store major payment processor bank card association choose connect directly paypal get started see payflow gateway website payments pro website payments pro legacy paypal product based soap nvp technology enables merchants accept credit debit cards paypal payments directly website using two paypal api based solutions direct payment express checkout payments immediate authorized later capture also recurring payments website payments pro also includes additional paypal solutions tools virtual terminal fraud management filters reference transactions mobile sdk paypal mobile sdks enable native apps easily accept paypal credit card payments native libraries paypal mobile sdks enable build fast responsive apps single payments \\( paypal credit card \\) future payments \\( paypal \\) learn get started paypal mobile sdks docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr3": "docs api reference support log dashboard paypal developer documentation view featured docs use documentation site learn implement paypal payment services choose solution bests suits needs featured documentation select docs find specific document express checkout simple way add paypal web app checkout web mobile web integration mobile app integration paypal payments standard ready made way accept cards paypal website payment buttons custom flexible way accept cards paypal app website braintree direct paypal payments pro store accept contactless payments chip mag stripe cards person paypal paydiant marketplace process split chained payments providers braintree marketplace invoicing create send manage professional customized invoices rest invoicing payouts send money hundreds recipients simultaneously payouts mass pay find looking \\? view product docs sdk libraries mobile sdks ios braintree android braintree ios paypal android paypal overview rest server sdks java php node python ruby net overview nvp soap api sdks java php ruby net overview third party products services shopping carts accept payments third party shopping cart software bigcommerce magento shopify stores specialty platforms alternative ways sell online specialty platforms marketplaces e junkie swappa jvzoo platforms financial management ready made solutions billing invoicing accounting xero aria quickbooks management ready start development \\? sign log using paypal account get credentials set test accounts sign log docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr2": "docs api reference support log dashboard view referencenvp soap apisapi referenceexpress checkoutendpointsoperations \\( alphabetical \\) operations \\( feature \\) payflow gatewayendpointsparametersadvanced parametersadditional featureswebsite payments proendpointsoperations \\( alphabetical \\) operations \\( feature \\) additional featureshosted solution \\( outside us \\) mass paymentsendpointsoperationadaptive accountsendpointsoperations \\( alphabetical \\) invoicingendpointsoperations \\( alphabetical \\) permissions serviceendpointsoperations \\( alphabetical \\) button managerendpointsoperations \\( alphabetical \\) nvp soap apps 101get startednvp basicssoap basicscredentialsendpointscurrency codescountry codesstate province codeslocale codesresponse codesapi error codes10000 100991000110002100031000410005100061000710008100091001010011100141006910100 1019910101101021010310200 102991020110202102031020410205102061020710209102101021110212102131021410215102161021710218102191022010300 10399103011030310304103051030610307103081030910310103111031210313103141031710320103211032710400 10499104001040110402104041040510406104071040810409104101041110412104131041410415104161041710418104191042010421104241042510426104271042810429104301043110432104331043410435104361043710438104391044010441104421044310444104451044610448104491045210457104581045910460104611046210463104641046510467104681046910470104711047210473104741047510476104771047810479104801048110482104851048610500 1059910500105011050210504105051050710508105091051010511105121051310519105201052110523105251052610527105341053510536105371053810539105401054110542105441054510546105471054810549105501055210553105541055510556105571055810560105611056210563105641056510566105671057010571105741057510576105771057810600 1069910600106011060210603106041060510606106071060810609106101061110612106131061410615106161061710618106191062010621106221062310624106251062610627106281062910630106311063210633106341063510700 1079910701107021070310704107051070610707107081070910710107111071210713107141071510716107171071810719107201072110722107231072410725107261072710728107291073010731107321073310734107351073610744107451074610747107481075010751107521075410755107561075810759107601076110762107631076410800 108991080011000 110991100111002110681108411089110911109411300 113991130211400 1149911401114031140411406114071145011451114521145311454114551145611457114581145911500 1159911501115021150311504115051150611507115081150911510115111151211514115151151611517115181151911520115211152211523115241153111543115441154611547115481155011551115521155311554115551155611557115581156011561115621156411567115681156911570115711157611577115781157911581115821158311584115851158611587115901159211600 11699116011160211603116041160711610116111161211614116151161611800 1189911800118011180211803118041180511806118071181011811118121181311814118151182011821118221182311824118251182611827118281182911830118311183211900 11999119001199612000 12099120001200112100 121991210912124121251212612200 1229912200122011220212203122041220512206122071220812300 123991230213100 1319913100131011310213103131041310513106131071310813109131101311113112131131311413115131161312213200 132991320013500 13599135131353113600 136991360113602136061360713700 13799137011375114001 14099140011400215001 1509915001150021500315004150051500615007150081500915010150111501217000 1709917004170051700617200 1729917200172031720418000 180991801419000 190991906581000 81099810008100181002810038100481100 8119981100811018110281103811048110581106811078110881109811108111181112811138111481115811168111781118811198112081121811228112381124811258112681127811288112981130811318113281133811348113581136811378113881139811408114181142811438114481145811468114781148811498115081200 812998120081201812038120581206812078120881209812108121181212812138121481215812198122081221812228122381224812258122681227812298123081232812348123581236812378123881239812438124481245812478124881249812508125199900 9999999998dodirectpayment processor response codesmasspay failed transactions ipn reason codessdksrelease notesadaptive accountsversion 1 2 0version 1 0 4version 1 0 3earlier versionsexpress checkout direct payment mass pay button managerversion 204version 203version 202version 201version 200version 124version 123version 122version 121version 120version 119version 117version 116version 115version 114version 113version 112version 111version 109version 108version 106version 104version 98version 94version 93version 92earlier nvp api versionsearlier soap api versionsinvoicing legacy apiversion 1 12 0version 1 11 0version 1 10 0version 1 8 0version 1 7 0version 1 6 0payflow apipermissions serviceversion 84 0version 74 0website payments pro hosted solution nvp soap api reference learn paypal name value pair \\( nvp \\) soap api endpoints operations express checkout express checkout commonly used paypal payments api payments made paypal hosted checkout page endpoint send api calls depends whether making nvp soap call use api make sure correct api credentials express checkout endpoints express checkout operations nvp soap nvp soap nvp nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap express checkout operations feature payflow gateway payflow gateway secure open payment gateway supports preferred integration method products paypal payments propaypal payments advanced paypal acquirer merchant bank payflow propayflow link choose processing platform merchant bank choose paypal host payment pages total control payment process website matter product select payflow gateway enables accept debit credit card payments paypal express checkout paypal credit \\( formerly bill later \\) payments within one api payflow gateway endpoints endpoint send api calls depends whether making live test call gateway transactions require user data parameters set account paypal manager payflow gateway parameters paypal host payment pages see configuring hosted checkout pages direct api calls click following api reference links payflow basic transaction parameters payflow credit card transaction parameters note transparent redirect information see pci compliance without hosted pages payflow gateway advanced parameters processors requiring additional parameters purchasing card level 2 3 transaction parameters telecheck parameters payflow gateway additional features payflow also offers following features fraud protection service recurring billing website payments pro note website payments pro deprecated replaced paypal payments pro website payments pro still supported existing merchants website payments pro endpoints endpoint send api calls depends whether making nvp soap call use api make sure correct api credentials website payments pro operations nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap website payments pro operations feature website payments pro additional features website payments pro also offers fraud management filters recurring payments website payments pro hosted solution \\( outside us \\) product merchants developers want integrate paypal 's hosted solution add transaction processing websites solution available australia france hong kong italy japan spain uk see integration guide country mass payments merchants use mass payments send money instantly 250 recipients send payments multiple recipients merchants need recipient 's paypal account email address payment amount currency code merchants manually upload file listing payments create programmatically using api send mass payments manually see using mass payments paypal account mass payments endpoints endpoint send api calls depends whether making nvp soap call use api make sure correct api credentials mass payments operation nvp soap adaptive accounts adaptive accounts api allows create manage paypal accounts paypal users make api call see adaptive accounts api call headers endpoints adaptive accounts endpoints make adaptive accounts api calls include api credentials sandbox testing specify adaptive accounts operations addbankaccount addpaymentcard checkcompliancestatus createaccount getuseragreement setfundingsourceconfirmed updatecompliancestatus invoicing use invoicing service api create send manage invoices using paypal invoicing endpoints make api calls invoicing service include api credentials sandbox testing specify invoicing operations cancelinvoice createandsendinvoice createinvoice deleteinvoice generateinvoicenumber getinvoicedetails markinvoiceaspaid markinvoiceasrefunded markinvoiceasunpaid remindinvoice searchinvoices sendinvoice updateinvoice permissions service permissions service enables obtain permission execute paypal api operations behalf paypal account holders permissions service endpoints make api calls permissions service include api credentials sandbox testing specify permissions service operations cancelpermissions getaccesstoken getadvancedpersonaldata getbasicpersonaldata getpermissions requestpermissions button manager advanced paypal button manipulation use api modify paypal buttons directly using html code see paypal button html variables reference paypal button image reference button manager endpoints send api calls one following endpoints depending whether making nvp soap call make sure correct api credentials use api button manager operations nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap additional information api credentials paypal name value pair api basics paypal soap api basics paypal developer documentation paypal credit \\( formerly bill later \\) api error codes user parameter data paypal manager docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr1": "docs api reference support log dashboard view reference rest apis api reference billing agreements api billing plans api identity api invoicing api payment experience api payments api payouts api vault api webhooks api overview authentication headers first rest call errors release notes sdks sdk quickstart service integrations rest api reference billing agreements api use billing plans billing agreements create agreement recurring credit card bank card paypal payment goods services create agreement reference active billing plan agreement inherits information also supply customer payment information optionally override referenced plan 's merchant preferences shipping fee tax information information see billing plans agreements billing agreements \\( resource group \\) use resource create agreement update agreement show agreement details cancel agreements also set bill balance agreement activate agreement suspend agreement list agreement transactions execute agreements create agreement post v1 payments billing agreements creates billing agreement json request body include object name description start date id plan base agreement customer shipping address information successful request returns http status code json response body shows billing agreement details update agreement patch v1 payments billing agreements updates details billing agreement id details include description shipping address start date successful request returns http status code json response body show agreement details get v1 payments billing agreements shows details billing agreement id successful request returns http status code json response body shows billing agreement details bill agreement balance post v1 payments billing agreements bill balance bills balance agreement id json request body include optional note describes reason billing action agreement amount currency successful request returns http status code json response body cancel agreement post v1 payments billing agreements cancel cancels billing agreement id json request body include object optional note describes reason cancellation agreement amount currency successful request returns http status code json response body activate agreement post v1 payments billing agreements activate activates suspended billing agreement id json request body include object note describes reason activation agreement amount currency successful request returns http status code json response body set agreement balance post v1 payments billing agreements set balance sets balance agreement id json request body specify balance currency type value successful request returns http status code json response body suspend agreement post v1 payments billing agreements suspend suspends billing agreement id successful request returns http status code json response body list agreement transactions get v1 payments billing agreements transactions lists transactions agreement id filter transactions appear response specify optional start end date query parameters successful request returns http status code json response body lists transactions details execute agreement post v1 payments billing agreements agreement execute executes billing agreement id customer approval successful request returns http status code json response body shows billing agreement details billing plans api use billing plans billing agreements create agreement recurring credit card bank card paypal payment goods services billing plan includes payment definitions details plan must include least one regular payment definition optionally trial payment definition definition determines often long customer charged plan specify type indicates whether payment definitions plan fixed infinite number payment cycles plan also defines merchant preferences including much costs set agreement urls customer approve cancel agreement action customer 's initial payment fails default plan active create activate update information see billing plans agreements billing plans \\( resource group \\) use resource create update show details list plans create plan post v1 payments billing plans creates billing plan json request body include plan details plan must include least one regular payment definition optionally trial payment definition payment definition specifies billing period determines often long customer charged plan specify fixed infinite number payment cycles payment definition optionally specify shipping fee tax amounts successful request returns http status code json response body shows plan details default state new plan create agreement plan must activate plan updating update plan patch v1 payments billing plans updates fields billing plan id json request body include patch object specifies operation perform one fields update new value updated field successful request returns http status code json response body show plan details get v1 payments billing plans shows details billing plan id successful request returns http status code json response body shows plan details list plans get v1 payments billing plans lists billing plans filter plans appear response specify one optional query pagination parameters successful request returns http status code json response body lists plans details identity api log paypal \\( formerly paypal access \\) commerce identity solution enables customers sign web site quickly securely using paypal login credentials log paypal utilizes latest security standards n't worry storing user data system information learn log paypal get user information get v1 identity openidconnect userinfo retrieve user profile attributes invoicing api use invoicing api create draft invoices send invoices manage invoices use invoices track payments send invoice invoice moves draft payable state paypal emails link invoice paypal website customer customers paypal account log pay paypal alternatively customers pay check debit card credit card information see invoicing overview invoices \\( resource group \\) use resource create update send invoices invoice reminders also generate invoice qr codes invoice numbers search list show invoice details delete draft invoices cancel sent invoices mark invoices fully partially paid refunded delete external payment refund invoice create invoice post v1 invoicing invoices creates draft invoice optionally create invoice template create invoice template invoice populated predefined data source template contains move invoice draft payable state must send invoice json request body include invoice details including merchant information object must include array note merchant specified invoice must paypal account good standing successful request returns http status code json response body shows invoice details send invoice post v1 invoicing invoices send sends invoice id customer note send invoice cannot resend optionally set query parameter also send merchant invoice update notification successful request returns http status code json response body update invoice put v1 invoicing invoices fully updates invoice id json request body include complete object call support partial updates successful request returns http status code json response body shows invoice details send invoice reminder post v1 invoicing invoices remind sends reminder payer invoice id json request body include object defines subject reminder details successful request returns http status code json response body delete draft invoice delete v1 invoicing invoices deletes draft invoice id deletes invoices draft state invoices already sent cancel invoice delete draft invoice longer use show details however reuse invoice number successful request returns http status code json response body cancel sent invoice post v1 invoicing invoices cancel cancels sent invoice id optionally sends notification cancellation payer merchant cc emails successful request returns http status code json response body mark invoice paid post v1 invoicing invoices record payment marks status invoice id paid include payment detail object defines payment method details json request body successful request returns http status code json response body mark invoice refunded post v1 invoicing invoices record refund marks status invoice id refunded json request body include payment detail object defines payment method details successful request returns http status code json response body list merchant invoices get v1 invoicing invoices lists merchant invoices filter invoices appear response specify one optional query parameters successful request returns http status code json response body lists invoices details search invoices post v1 invoicing search lists invoices match search criteria json request body include object specifies search criteria successful request returns http status code json response body lists invoices match search criteria show invoice details get v1 invoicing invoices shows details invoice id successful request returns http status code json response body shows invoice details generate qr code get v1 invoicing invoices qr code generates qr code invoice id qr code png image base64 encoded format corresponds invoice id generate qr code invoice add paper pdf invoice customer uses mobile device scan qr code redirected paypal mobile payment flow pay online paypal credit card get qr code must create invoice specify recipient email address object use customer email address want email invoice send invoice move invoice draft payable state specify recipient email address invoice emailed successful request returns http status code json response body shows qr code png image generate invoice number post v1 invoicing invoices next invoice number generates next invoice number available merchant successful request returns http status code json response body shows next invoice number templates \\( resource group \\) create template invoice enables create invoices predefined data use resource create list show details update delete templates note also use template settings dashboard create template invoice create template post v1 invoicing templates creates invoice template create invoice template invoice populated predefined data source template contains note use template settings dashboard instead api create invoice template update template put v1 invoicing templates updates template id json request body specify complete object update method support partial updates successful request returns http status code json response body shows template details list templates get v1 invoicing templates lists merchant created templates list shows emails addresses phone numbers merchant profile successful request returns http status code json response body lists invoices show template details get v1 invoicing templates shows details template id successful request returns http status code json response body shows template details delete template delete v1 invoicing templates deletes template id successful request returns http status code json response body payment experience api use payment experience api create seamless payment experience profiles information create paypal payment web experience profile see payment experience web profiles web profiles \\( resource group \\) use resource create show details list update partially update delete web experience profiles create web experience profile post v1 payment experience web profiles creates web experience profile json request body specify profile name details show web experience profile details get v1 payment experience web profiles shows details web experience profile id list web experience profiles get v1 payment experience web profiles lists web experience profiles merchant subject update web experience profile put v1 payment experience web profiles updates web experience profile id json request body specify profile details request omits profile parameters previously set values parameters removed partially update web experience profile patch v1 payment experience web profiles partially updates web experience profile id json request body specify patch object path profile location update needed new value complete operation delete web experience profile delete v1 payment experience web profiles deletes web experience profile id payments api use payments rest api easily securely accept online mobile payments payments namespace contains resource collections payments sales refunds authorizations captures orders enable customers make paypal credit card payments clicks depending country accept immediate payment authorize payment capture later show details completed payments refunds authorizations make full partial refunds also void authorize authorizations information see payments overview payments \\( resource group \\) use resource create sale authorized payment order sale direct credit card payment stored credit card payment paypal payment authorized payment places funds hold captured later order purchase customer approved funds placed hold also use resource execute approved paypal payments show details update list payments information see also payments create payment post v1 payments payment creates sale authorized payment captured later order create sale authorization order include payment details json request body set include payer transaction details paypal payments redirect urls combination determines type payment created information see payments rest api notes countries restrict direct credit card payment related features authorizations guaranteed three days though attempt capture authorization 29 days three day honor period authorization expires reauthorize payment execute approved paypal payment post v1 payments payment execute executes paypal payment customer approved optionally update one transactions execute payment successful request returns http status code json response body shows details executed payment important call works customer approved payment information learn paypal payments show payment details get v1 payments payment shows details payment id yet complete example shows details payment created approved failed successful request returns http status code json response body shows payment details update payment patch v1 payments payment partially updates payment id update amount shipping address invoice id custom data cannot update payment payment executes successful request returns http status code json response body shows payment details list payments get v1 payments payment lists payments created create payment call state list shows payments made merchant makes call filter payments appear response specify one optional query pagination parameters see filtering pagination successful request returns http status code json response body lists payments payment details sales \\( resource group \\) sale completed payment use resource show sale details refund sale information see also refund payments show sale details get v1 payments sale shows details sale id returns sales created rest api successful request returns http status code json response body shows sale details refund sale post v1 payments sale refund refunds sale id full refund include empty payload json request body partial refund include object json request body successful request returns http status code json response body shows details refunded sale refunds \\( resource group \\) use resource show details refund direct captured payments show refund details get v1 payments refund shows details refund id successful request returns http status code json response body shows refund details authorizations \\( resource group \\) use resource related sub resources act previously created authorization show details capture void reauthorize authorization show authorization details get v1 payments authorization shows details authorization id successful request returns http status code json response body shows authorization details capture authorization post v1 payments authorization capture captures processes authorization id use call original payment call must specify intent successful request returns http status code json response body shows details captured authorization void authorization post v1 payments authorization void voids cancels authorization id cannot void fully captured authorization successful request returns http status code json response body shows details voided authorization authorize payment post v1 payments authorization reauthorize authorizes paypal account payment authorization id ensure funds still available authorize payment initial three day honor period supports request parameter authorize payment four 29 days three day honor period original authorization expires 30 days passed original authorization must create new authorization instead authorized payment new three day honor period authorize transaction 115 originally authorized amount exceed increase 75 usd successful request returns http status code json response body shows details authorized authorization captures \\( resource group \\) use resource sub resources show details refund captured payments show captured payment details get v1 payments capture shows details captured payment id successful request returns http status code json response body shows details captured payment refund captured payment post v1 payments capture refund refunds captured payment id json request body include object successful request returns http status code json response body shows details captured payment orders \\( resource group \\) use resource authorize capture void show details order note cannot refund order directly instead must refund completed payment order integration information see orders refund payment information see also orders show order details get v1 payments orders shows details order id successful request returns http status code json response body shows details voided authorization authorize order post v1 payments orders authorize authorizes order id json request body include object successful request returns http status code json response body shows details authorized order capture order post v1 payments orders capture captures payment order id use call original payment call must specify intent json request body include payment amount indicate whether capture final capture authorization successful request returns http status code json response body shows details captured order void order post v1 payments orders void voids cancels order id cannot void order payment already partially fully captured successful request returns http status code json response body shows details voided order payouts api use payouts api make paypal payments multiple paypal accounts single api call specify recipients using paypal email addresses phone numbers encrypted paypal account numbers payouts api fast convenient way send commissions rebates rewards general disbursements payouts appear mass payments sender 's paypal account provided mass payment reports important use payouts api request access account alternatively contact account manager paypal customer support must paypal business account payouts api uses iso 8601 date time format information payouts api see payouts deprecation notice synchronous mode soon deprecated longer available new integrations continues supported existing integrations synchronous mode payout immediately returns results payout payouts \\( resource group \\) use resource create payouts show batch payout details create payouts post v1 payments payouts make payouts one paypal accounts show batch payout details get v1 payments payouts periodically shows latest status batch payout along transaction status data individual items payout item \\( resource group \\) use resource show details payout item cancel unclaimed payout item deprecation notice synchronous mode soon deprecated longer available new integrations continues supported existing integrations synchronous mode payout immediately returns results payout show payout item details get v1 payments payouts item shows details payout item review current status previously unclaimed pending payout item cancel unclaimed payout item post v1 payments payouts item cancel cancels unclaimed transaction one claims unclaimed item within 30 days funds automatically returned sender cancel unclaimed item automatic 30 day refund vault api merchants use vault api securely store customer credit cards paypal vault rather server use api store customer credit card api returns id vaulted card take payment vaulted card specify id vaulted card instead credit card details information see vault overview notes paypal validate credit card information store vault direct credit card payment related features restricted countries credit cards \\( resource group \\) use resource store credit card vault delete show details list update vaulted cards store credit card post v1 vault credit cards stores credit card details paypal vault use vaulted card make payment specify id vaulted card object include store credit card must include id object also use id vaulted credit card show details update delete vaulted card list vaulted credit cards get v1 vault credit cards lists vaulted credit cards filter cards response specify one optional query parameters show vaulted credit card details get v1 vault credit cards shows details vaulted credit card id update vaulted credit card patch v1 vault credit cards updates information vaulted credit card id json request body specify values update delete vaulted credit card delete v1 vault credit cards deletes vaulted credit card id webhooks api paypal rest apis use webhooks event notification webhooks http callbacks receive notification messages events configure webhook listener app create webhook subscribes webhook listener app events namespace contains resource collections webhooks webhooks \\( resource group \\) use resource create show details list update delete webhooks create webhook post v1 notifications webhooks subscribes webhook listener events successful request returns http status code json response body object includes webhook id later use show webhook details get v1 notifications webhooks shows details webhook id list webhooks get v1 notifications webhooks lists webhooks update webhook patch v1 notifications webhooks updates webhook id supports operation delete webhook delete v1 notifications webhooks deletes webhook id webhook event notifications \\( resource group \\) use resource show event notification details list event notifications resend notification event show event notification details get v1 notifications webhooks events shows details event notification id list event notifications get v1 notifications webhooks events lists webhook event notifications specify one optional query parameters filter response resend event notification post v1 notifications webhooks events resend resends event notification event id webhook events \\( resource group \\) use resource list events webhooks subscribe resource list event subscriptions webhook list available events get v1 notifications webhooks event types lists events app subscribe list webhook events see webhook events list event subscriptions webhook get v1 notifications webhooks event types lists event subscriptions webhook id simulate webhook event \\( resource group \\) use resource use sample payload simulate webhook event events call generates serve validate connection listener url show webhook events look note also use webhooks simulator simulate webhook events simulate webhook event post v1 notifications simulate event simulates webhook event simulate event specify sample payload request send mock event data url configured listen notification messages mock events serve validate connection listener url show webhook events look verify webhook signature \\( resource group \\) use resource verify webhook signature verify webhook signature post v1 notifications verify webhook signature verifies webhook signature docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "crawled_date": "2017-06-10T13:59:23.044283"
  }, 
  "420": {
    "api_url": "transferwise.com", 
    "progweb_url": "https://www.programmableweb.com/api/transferwise-payouts", 
    "progweb_date": "03.28.2017", 
    "progweb_descr": "The TransferWise Payouts API provides domestic and international business payouts in more than 40 currencies. There are no setup fees, and funds are converted at the mid-market exchange rate. This API is available to businesses registered in the United Kingdom, Isle of Man, Jersey, Guernsey, EEA countries (EU, Iceland, Liechtestein, Norway), Switzerland, Pakistan, India, and the Philippines.", 
    "api_name": "TransferWise Payouts", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:23.045454"
  }, 
  "423": {
    "api_url": "trexle.com", 
    "progweb_url": "https://www.programmableweb.com/api/trexle", 
    "progweb_date": "04.02.2017", 
    "progweb_descr": "Trexle is a RESTful API service that connects e-commerce shopping carts to +100 payments gateways. It is available with API Key. Developers can use the interface to integrate transactions and customers' data into payments applications.", 
    "api_name": "Trexle", 
    "progweb_cat": "Payments,Billing", 
    "crawled_date": "2017-06-10T13:59:23.041707"
  }, 
  "422": {
    "link5": "https://developer.paypal.com/docs/classic/archive/", 
    "link4": "https://developer.paypal.com/docs/accept-payments/", 
    "link1": "https://developer.paypal.com/docs/api/", 
    "api_url": "paypal.com", 
    "link3": "https://developer.paypal.com/docs/", 
    "link2": "https://developer.paypal.com/docs/classic/api/", 
    "progweb_url": "https://www.programmableweb.com/api/paypal-billing-plans", 
    "progweb_date": "03.29.2017", 
    "progweb_descr": "The PayPal Billing Plans API allows creating subscriptions and recurring payments for goods and services. It is available in REST architecture with JSON callbacks. With Billing Plans, developers can create and update plans according to merchant's preferences.", 
    "api_name": "PayPal Billing Plans", 
    "progweb_cat": "Billing,Payments", 
    "descr5": "docs api reference support log dashboard back docs documentation archive documentation page created previous versions paypal products content files might reflect current product functionality table contents account authentication adaptive accounts adaptive payments paypal buttons images express checkout invoicing order management instant payment notification \\( ipn \\) order management \\( ipn pdt \\) mass payments payflow paypal payments standard permissions latest documentation see nvp soap api documentation account authentication account authentication service getting started guide adaptive accounts adaptive accounts developer guide adaptive payments adaptive payments developer guide note see adaptive payments developer documentation latest documentation documentation provided html format paypal buttons images paypal buttons images express checkout merchant api reference archive getbillingagreementcustomerdetails \\( nvp soap \\) api operation deprecated starting version 54 0 later api setcustomerbillingagreement \\( nvp soap \\) api operation deprecated starting version 54 0 later api invoicing adaptive invoicing developer guide invoicing user 's guide invoicing service api guide note see invoicing developer documentation latest documentation documentation provided html format order management instant payment notification \\( ipn \\) instant payment notification guide order management order management integration guide mass payments mass payments user guide payflow note see payflow gateway development integration guides latest documentation payflow gateway developer guide pdf latest payflow gateway integration information see html version guide payflow link payflow link user 's guide payflow link fraud protection services user 's guide payflow link recurring billing service user 's guide payflow pro payflow pro developer 's guide payflow pro reporting developer 's guide website payments pro payflow edition website payments pro payflow edition developer 's guide website payments pro payflow edition fraud protection services user 's guide website payments pro payflow edition recurring billing service user 's guide paypal payments pro payflow edition recurring payments developer 's guide website payments pro payflow edition reporting developer 's guide website payments pro payflow edition xmlpay developer 's guide paypal payments standard paypal payments standard integration guide subscriptions recurring payments guide permissions permissions service guide note see permissions developer documentation latest documentation documentation provided html format docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr4": "docs api reference support log dashboard back docs accept payments paypal offers variety products solutions accepting payments choose solution best requirements whether goal get running quickly possible develop fully customized payment experience braintree direct braintree direct suitable type integration whether want quick easy payment solution completely customized payment experience drop ui available braintree direct enables start accepting payments little effort want build checkout experience braintree direct simplifies payment method details token never need worry method users choose pay learn get started braintree direct payment buttons paypal makes easy accept payments website whether mobile device tablet pc copy paste short html snippet website add payment button single item shopping cart see add payment buttons website information payments rest api payments rest api provides easy secure way accept online mobile payments take advantage great benefits paypal enabling customers make payments clicks payments made paypal credit cards depending country accept immediate payment authorize payment capture later payments overview explains get started payments rest api find detailed information paypal paypal sdks enable ios android apps interact credit card swipers merchants process person credit card transactions using mobile app native libraries paypal sdks enable interact paypal hardware also process card present transactions get started see integrating paypal sdks express checkout express checkout fast easy way buyers pay paypal express checkout makes easier buyers pay online enables accept paypal retaining control buyer overall checkout flow typical checkout flow buyer must provide shipping information billing payment information checking shopping cart page express checkout buyer check pay without entering shipping billing information paypal provides stored information simplifies expedites checkout process increase sales 18 percent learn see express checkout integration guide shopping carts paypal partners provide third party shopping carts allow seamlessly accept paypal payments whether need complete online store want add shopping cart existing website several options available paypal partners meet needs learn see using shopping carts already integrated third party shopping cart solution looking support search browse articles within shopping cart section paypal technical support faq paypal payments pro payflow gateway paypal payments pro customizable solution enables merchants keep buyers website entire checkout payment process merchants host customized checkout pages send transactions paypal paypal host checkout pages also manage security sales authorizations paypal payments pro accept paypal paypal credit payments well credit debit card payments paypal payments pro also includes optimized mobile checkout experience details see paypal payments pro payflow gateway secure open gateway utilized internally paypal payments pro services provides features including api allows merchants create host customized checkout pages paypal hosted checkout page using payflow gateway shared api merchants connect online store major payment processor bank card association choose connect directly paypal get started see payflow gateway website payments pro website payments pro legacy paypal product based soap nvp technology enables merchants accept credit debit cards paypal payments directly website using two paypal api based solutions direct payment express checkout payments immediate authorized later capture also recurring payments website payments pro also includes additional paypal solutions tools virtual terminal fraud management filters reference transactions mobile sdk paypal mobile sdks enable native apps easily accept paypal credit card payments native libraries paypal mobile sdks enable build fast responsive apps single payments \\( paypal credit card \\) future payments \\( paypal \\) learn get started paypal mobile sdks docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr3": "docs api reference support log dashboard paypal developer documentation view featured docs use documentation site learn implement paypal payment services choose solution bests suits needs featured documentation select docs find specific document express checkout simple way add paypal web app checkout web mobile web integration mobile app integration paypal payments standard ready made way accept cards paypal website payment buttons custom flexible way accept cards paypal app website braintree direct paypal payments pro store accept contactless payments chip mag stripe cards person paypal paydiant marketplace process split chained payments providers braintree marketplace invoicing create send manage professional customized invoices rest invoicing payouts send money hundreds recipients simultaneously payouts mass pay find looking \\? view product docs sdk libraries mobile sdks ios braintree android braintree ios paypal android paypal overview rest server sdks java php node python ruby net overview nvp soap api sdks java php ruby net overview third party products services shopping carts accept payments third party shopping cart software bigcommerce magento shopify stores specialty platforms alternative ways sell online specialty platforms marketplaces e junkie swappa jvzoo platforms financial management ready made solutions billing invoicing accounting xero aria quickbooks management ready start development \\? sign log using paypal account get credentials set test accounts sign log docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr2": "docs api reference support log dashboard view referencenvp soap apisapi referenceexpress checkoutendpointsoperations \\( alphabetical \\) operations \\( feature \\) payflow gatewayendpointsparametersadvanced parametersadditional featureswebsite payments proendpointsoperations \\( alphabetical \\) operations \\( feature \\) additional featureshosted solution \\( outside us \\) mass paymentsendpointsoperationadaptive accountsendpointsoperations \\( alphabetical \\) invoicingendpointsoperations \\( alphabetical \\) permissions serviceendpointsoperations \\( alphabetical \\) button managerendpointsoperations \\( alphabetical \\) nvp soap apps 101get startednvp basicssoap basicscredentialsendpointscurrency codescountry codesstate province codeslocale codesresponse codesapi error codes10000 100991000110002100031000410005100061000710008100091001010011100141006910100 1019910101101021010310200 102991020110202102031020410205102061020710209102101021110212102131021410215102161021710218102191022010300 10399103011030310304103051030610307103081030910310103111031210313103141031710320103211032710400 10499104001040110402104041040510406104071040810409104101041110412104131041410415104161041710418104191042010421104241042510426104271042810429104301043110432104331043410435104361043710438104391044010441104421044310444104451044610448104491045210457104581045910460104611046210463104641046510467104681046910470104711047210473104741047510476104771047810479104801048110482104851048610500 1059910500105011050210504105051050710508105091051010511105121051310519105201052110523105251052610527105341053510536105371053810539105401054110542105441054510546105471054810549105501055210553105541055510556105571055810560105611056210563105641056510566105671057010571105741057510576105771057810600 1069910600106011060210603106041060510606106071060810609106101061110612106131061410615106161061710618106191062010621106221062310624106251062610627106281062910630106311063210633106341063510700 1079910701107021070310704107051070610707107081070910710107111071210713107141071510716107171071810719107201072110722107231072410725107261072710728107291073010731107321073310734107351073610744107451074610747107481075010751107521075410755107561075810759107601076110762107631076410800 108991080011000 110991100111002110681108411089110911109411300 113991130211400 1149911401114031140411406114071145011451114521145311454114551145611457114581145911500 1159911501115021150311504115051150611507115081150911510115111151211514115151151611517115181151911520115211152211523115241153111543115441154611547115481155011551115521155311554115551155611557115581156011561115621156411567115681156911570115711157611577115781157911581115821158311584115851158611587115901159211600 11699116011160211603116041160711610116111161211614116151161611800 1189911800118011180211803118041180511806118071181011811118121181311814118151182011821118221182311824118251182611827118281182911830118311183211900 11999119001199612000 12099120001200112100 121991210912124121251212612200 1229912200122011220212203122041220512206122071220812300 123991230213100 1319913100131011310213103131041310513106131071310813109131101311113112131131311413115131161312213200 132991320013500 13599135131353113600 136991360113602136061360713700 13799137011375114001 14099140011400215001 1509915001150021500315004150051500615007150081500915010150111501217000 1709917004170051700617200 1729917200172031720418000 180991801419000 190991906581000 81099810008100181002810038100481100 8119981100811018110281103811048110581106811078110881109811108111181112811138111481115811168111781118811198112081121811228112381124811258112681127811288112981130811318113281133811348113581136811378113881139811408114181142811438114481145811468114781148811498115081200 812998120081201812038120581206812078120881209812108121181212812138121481215812198122081221812228122381224812258122681227812298123081232812348123581236812378123881239812438124481245812478124881249812508125199900 9999999998dodirectpayment processor response codesmasspay failed transactions ipn reason codessdksrelease notesadaptive accountsversion 1 2 0version 1 0 4version 1 0 3earlier versionsexpress checkout direct payment mass pay button managerversion 204version 203version 202version 201version 200version 124version 123version 122version 121version 120version 119version 117version 116version 115version 114version 113version 112version 111version 109version 108version 106version 104version 98version 94version 93version 92earlier nvp api versionsearlier soap api versionsinvoicing legacy apiversion 1 12 0version 1 11 0version 1 10 0version 1 8 0version 1 7 0version 1 6 0payflow apipermissions serviceversion 84 0version 74 0website payments pro hosted solution nvp soap api reference learn paypal name value pair \\( nvp \\) soap api endpoints operations express checkout express checkout commonly used paypal payments api payments made paypal hosted checkout page endpoint send api calls depends whether making nvp soap call use api make sure correct api credentials express checkout endpoints express checkout operations nvp soap nvp soap nvp nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap express checkout operations feature payflow gateway payflow gateway secure open payment gateway supports preferred integration method products paypal payments propaypal payments advanced paypal acquirer merchant bank payflow propayflow link choose processing platform merchant bank choose paypal host payment pages total control payment process website matter product select payflow gateway enables accept debit credit card payments paypal express checkout paypal credit \\( formerly bill later \\) payments within one api payflow gateway endpoints endpoint send api calls depends whether making live test call gateway transactions require user data parameters set account paypal manager payflow gateway parameters paypal host payment pages see configuring hosted checkout pages direct api calls click following api reference links payflow basic transaction parameters payflow credit card transaction parameters note transparent redirect information see pci compliance without hosted pages payflow gateway advanced parameters processors requiring additional parameters purchasing card level 2 3 transaction parameters telecheck parameters payflow gateway additional features payflow also offers following features fraud protection service recurring billing website payments pro note website payments pro deprecated replaced paypal payments pro website payments pro still supported existing merchants website payments pro endpoints endpoint send api calls depends whether making nvp soap call use api make sure correct api credentials website payments pro operations nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap website payments pro operations feature website payments pro additional features website payments pro also offers fraud management filters recurring payments website payments pro hosted solution \\( outside us \\) product merchants developers want integrate paypal 's hosted solution add transaction processing websites solution available australia france hong kong italy japan spain uk see integration guide country mass payments merchants use mass payments send money instantly 250 recipients send payments multiple recipients merchants need recipient 's paypal account email address payment amount currency code merchants manually upload file listing payments create programmatically using api send mass payments manually see using mass payments paypal account mass payments endpoints endpoint send api calls depends whether making nvp soap call use api make sure correct api credentials mass payments operation nvp soap adaptive accounts adaptive accounts api allows create manage paypal accounts paypal users make api call see adaptive accounts api call headers endpoints adaptive accounts endpoints make adaptive accounts api calls include api credentials sandbox testing specify adaptive accounts operations addbankaccount addpaymentcard checkcompliancestatus createaccount getuseragreement setfundingsourceconfirmed updatecompliancestatus invoicing use invoicing service api create send manage invoices using paypal invoicing endpoints make api calls invoicing service include api credentials sandbox testing specify invoicing operations cancelinvoice createandsendinvoice createinvoice deleteinvoice generateinvoicenumber getinvoicedetails markinvoiceaspaid markinvoiceasrefunded markinvoiceasunpaid remindinvoice searchinvoices sendinvoice updateinvoice permissions service permissions service enables obtain permission execute paypal api operations behalf paypal account holders permissions service endpoints make api calls permissions service include api credentials sandbox testing specify permissions service operations cancelpermissions getaccesstoken getadvancedpersonaldata getbasicpersonaldata getpermissions requestpermissions button manager advanced paypal button manipulation use api modify paypal buttons directly using html code see paypal button html variables reference paypal button image reference button manager endpoints send api calls one following endpoints depending whether making nvp soap call make sure correct api credentials use api button manager operations nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap additional information api credentials paypal name value pair api basics paypal soap api basics paypal developer documentation paypal credit \\( formerly bill later \\) api error codes user parameter data paypal manager docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr1": "docs api reference support log dashboard view reference rest apis api reference billing agreements api billing plans api identity api invoicing api payment experience api payments api payouts api vault api webhooks api overview authentication headers first rest call errors release notes sdks sdk quickstart service integrations rest api reference billing agreements api use billing plans billing agreements create agreement recurring credit card bank card paypal payment goods services create agreement reference active billing plan agreement inherits information also supply customer payment information optionally override referenced plan 's merchant preferences shipping fee tax information information see billing plans agreements billing agreements \\( resource group \\) use resource create agreement update agreement show agreement details cancel agreements also set bill balance agreement activate agreement suspend agreement list agreement transactions execute agreements create agreement post v1 payments billing agreements creates billing agreement json request body include object name description start date id plan base agreement customer shipping address information successful request returns http status code json response body shows billing agreement details update agreement patch v1 payments billing agreements updates details billing agreement id details include description shipping address start date successful request returns http status code json response body show agreement details get v1 payments billing agreements shows details billing agreement id successful request returns http status code json response body shows billing agreement details bill agreement balance post v1 payments billing agreements bill balance bills balance agreement id json request body include optional note describes reason billing action agreement amount currency successful request returns http status code json response body cancel agreement post v1 payments billing agreements cancel cancels billing agreement id json request body include object optional note describes reason cancellation agreement amount currency successful request returns http status code json response body activate agreement post v1 payments billing agreements activate activates suspended billing agreement id json request body include object note describes reason activation agreement amount currency successful request returns http status code json response body set agreement balance post v1 payments billing agreements set balance sets balance agreement id json request body specify balance currency type value successful request returns http status code json response body suspend agreement post v1 payments billing agreements suspend suspends billing agreement id successful request returns http status code json response body list agreement transactions get v1 payments billing agreements transactions lists transactions agreement id filter transactions appear response specify optional start end date query parameters successful request returns http status code json response body lists transactions details execute agreement post v1 payments billing agreements agreement execute executes billing agreement id customer approval successful request returns http status code json response body shows billing agreement details billing plans api use billing plans billing agreements create agreement recurring credit card bank card paypal payment goods services billing plan includes payment definitions details plan must include least one regular payment definition optionally trial payment definition definition determines often long customer charged plan specify type indicates whether payment definitions plan fixed infinite number payment cycles plan also defines merchant preferences including much costs set agreement urls customer approve cancel agreement action customer 's initial payment fails default plan active create activate update information see billing plans agreements billing plans \\( resource group \\) use resource create update show details list plans create plan post v1 payments billing plans creates billing plan json request body include plan details plan must include least one regular payment definition optionally trial payment definition payment definition specifies billing period determines often long customer charged plan specify fixed infinite number payment cycles payment definition optionally specify shipping fee tax amounts successful request returns http status code json response body shows plan details default state new plan create agreement plan must activate plan updating update plan patch v1 payments billing plans updates fields billing plan id json request body include patch object specifies operation perform one fields update new value updated field successful request returns http status code json response body show plan details get v1 payments billing plans shows details billing plan id successful request returns http status code json response body shows plan details list plans get v1 payments billing plans lists billing plans filter plans appear response specify one optional query pagination parameters successful request returns http status code json response body lists plans details identity api log paypal \\( formerly paypal access \\) commerce identity solution enables customers sign web site quickly securely using paypal login credentials log paypal utilizes latest security standards n't worry storing user data system information learn log paypal get user information get v1 identity openidconnect userinfo retrieve user profile attributes invoicing api use invoicing api create draft invoices send invoices manage invoices use invoices track payments send invoice invoice moves draft payable state paypal emails link invoice paypal website customer customers paypal account log pay paypal alternatively customers pay check debit card credit card information see invoicing overview invoices \\( resource group \\) use resource create update send invoices invoice reminders also generate invoice qr codes invoice numbers search list show invoice details delete draft invoices cancel sent invoices mark invoices fully partially paid refunded delete external payment refund invoice create invoice post v1 invoicing invoices creates draft invoice optionally create invoice template create invoice template invoice populated predefined data source template contains move invoice draft payable state must send invoice json request body include invoice details including merchant information object must include array note merchant specified invoice must paypal account good standing successful request returns http status code json response body shows invoice details send invoice post v1 invoicing invoices send sends invoice id customer note send invoice cannot resend optionally set query parameter also send merchant invoice update notification successful request returns http status code json response body update invoice put v1 invoicing invoices fully updates invoice id json request body include complete object call support partial updates successful request returns http status code json response body shows invoice details send invoice reminder post v1 invoicing invoices remind sends reminder payer invoice id json request body include object defines subject reminder details successful request returns http status code json response body delete draft invoice delete v1 invoicing invoices deletes draft invoice id deletes invoices draft state invoices already sent cancel invoice delete draft invoice longer use show details however reuse invoice number successful request returns http status code json response body cancel sent invoice post v1 invoicing invoices cancel cancels sent invoice id optionally sends notification cancellation payer merchant cc emails successful request returns http status code json response body mark invoice paid post v1 invoicing invoices record payment marks status invoice id paid include payment detail object defines payment method details json request body successful request returns http status code json response body mark invoice refunded post v1 invoicing invoices record refund marks status invoice id refunded json request body include payment detail object defines payment method details successful request returns http status code json response body list merchant invoices get v1 invoicing invoices lists merchant invoices filter invoices appear response specify one optional query parameters successful request returns http status code json response body lists invoices details search invoices post v1 invoicing search lists invoices match search criteria json request body include object specifies search criteria successful request returns http status code json response body lists invoices match search criteria show invoice details get v1 invoicing invoices shows details invoice id successful request returns http status code json response body shows invoice details generate qr code get v1 invoicing invoices qr code generates qr code invoice id qr code png image base64 encoded format corresponds invoice id generate qr code invoice add paper pdf invoice customer uses mobile device scan qr code redirected paypal mobile payment flow pay online paypal credit card get qr code must create invoice specify recipient email address object use customer email address want email invoice send invoice move invoice draft payable state specify recipient email address invoice emailed successful request returns http status code json response body shows qr code png image generate invoice number post v1 invoicing invoices next invoice number generates next invoice number available merchant successful request returns http status code json response body shows next invoice number templates \\( resource group \\) create template invoice enables create invoices predefined data use resource create list show details update delete templates note also use template settings dashboard create template invoice create template post v1 invoicing templates creates invoice template create invoice template invoice populated predefined data source template contains note use template settings dashboard instead api create invoice template update template put v1 invoicing templates updates template id json request body specify complete object update method support partial updates successful request returns http status code json response body shows template details list templates get v1 invoicing templates lists merchant created templates list shows emails addresses phone numbers merchant profile successful request returns http status code json response body lists invoices show template details get v1 invoicing templates shows details template id successful request returns http status code json response body shows template details delete template delete v1 invoicing templates deletes template id successful request returns http status code json response body payment experience api use payment experience api create seamless payment experience profiles information create paypal payment web experience profile see payment experience web profiles web profiles \\( resource group \\) use resource create show details list update partially update delete web experience profiles create web experience profile post v1 payment experience web profiles creates web experience profile json request body specify profile name details show web experience profile details get v1 payment experience web profiles shows details web experience profile id list web experience profiles get v1 payment experience web profiles lists web experience profiles merchant subject update web experience profile put v1 payment experience web profiles updates web experience profile id json request body specify profile details request omits profile parameters previously set values parameters removed partially update web experience profile patch v1 payment experience web profiles partially updates web experience profile id json request body specify patch object path profile location update needed new value complete operation delete web experience profile delete v1 payment experience web profiles deletes web experience profile id payments api use payments rest api easily securely accept online mobile payments payments namespace contains resource collections payments sales refunds authorizations captures orders enable customers make paypal credit card payments clicks depending country accept immediate payment authorize payment capture later show details completed payments refunds authorizations make full partial refunds also void authorize authorizations information see payments overview payments \\( resource group \\) use resource create sale authorized payment order sale direct credit card payment stored credit card payment paypal payment authorized payment places funds hold captured later order purchase customer approved funds placed hold also use resource execute approved paypal payments show details update list payments information see also payments create payment post v1 payments payment creates sale authorized payment captured later order create sale authorization order include payment details json request body set include payer transaction details paypal payments redirect urls combination determines type payment created information see payments rest api notes countries restrict direct credit card payment related features authorizations guaranteed three days though attempt capture authorization 29 days three day honor period authorization expires reauthorize payment execute approved paypal payment post v1 payments payment execute executes paypal payment customer approved optionally update one transactions execute payment successful request returns http status code json response body shows details executed payment important call works customer approved payment information learn paypal payments show payment details get v1 payments payment shows details payment id yet complete example shows details payment created approved failed successful request returns http status code json response body shows payment details update payment patch v1 payments payment partially updates payment id update amount shipping address invoice id custom data cannot update payment payment executes successful request returns http status code json response body shows payment details list payments get v1 payments payment lists payments created create payment call state list shows payments made merchant makes call filter payments appear response specify one optional query pagination parameters see filtering pagination successful request returns http status code json response body lists payments payment details sales \\( resource group \\) sale completed payment use resource show sale details refund sale information see also refund payments show sale details get v1 payments sale shows details sale id returns sales created rest api successful request returns http status code json response body shows sale details refund sale post v1 payments sale refund refunds sale id full refund include empty payload json request body partial refund include object json request body successful request returns http status code json response body shows details refunded sale refunds \\( resource group \\) use resource show details refund direct captured payments show refund details get v1 payments refund shows details refund id successful request returns http status code json response body shows refund details authorizations \\( resource group \\) use resource related sub resources act previously created authorization show details capture void reauthorize authorization show authorization details get v1 payments authorization shows details authorization id successful request returns http status code json response body shows authorization details capture authorization post v1 payments authorization capture captures processes authorization id use call original payment call must specify intent successful request returns http status code json response body shows details captured authorization void authorization post v1 payments authorization void voids cancels authorization id cannot void fully captured authorization successful request returns http status code json response body shows details voided authorization authorize payment post v1 payments authorization reauthorize authorizes paypal account payment authorization id ensure funds still available authorize payment initial three day honor period supports request parameter authorize payment four 29 days three day honor period original authorization expires 30 days passed original authorization must create new authorization instead authorized payment new three day honor period authorize transaction 115 originally authorized amount exceed increase 75 usd successful request returns http status code json response body shows details authorized authorization captures \\( resource group \\) use resource sub resources show details refund captured payments show captured payment details get v1 payments capture shows details captured payment id successful request returns http status code json response body shows details captured payment refund captured payment post v1 payments capture refund refunds captured payment id json request body include object successful request returns http status code json response body shows details captured payment orders \\( resource group \\) use resource authorize capture void show details order note cannot refund order directly instead must refund completed payment order integration information see orders refund payment information see also orders show order details get v1 payments orders shows details order id successful request returns http status code json response body shows details voided authorization authorize order post v1 payments orders authorize authorizes order id json request body include object successful request returns http status code json response body shows details authorized order capture order post v1 payments orders capture captures payment order id use call original payment call must specify intent json request body include payment amount indicate whether capture final capture authorization successful request returns http status code json response body shows details captured order void order post v1 payments orders void voids cancels order id cannot void order payment already partially fully captured successful request returns http status code json response body shows details voided order payouts api use payouts api make paypal payments multiple paypal accounts single api call specify recipients using paypal email addresses phone numbers encrypted paypal account numbers payouts api fast convenient way send commissions rebates rewards general disbursements payouts appear mass payments sender 's paypal account provided mass payment reports important use payouts api request access account alternatively contact account manager paypal customer support must paypal business account payouts api uses iso 8601 date time format information payouts api see payouts deprecation notice synchronous mode soon deprecated longer available new integrations continues supported existing integrations synchronous mode payout immediately returns results payout payouts \\( resource group \\) use resource create payouts show batch payout details create payouts post v1 payments payouts make payouts one paypal accounts show batch payout details get v1 payments payouts periodically shows latest status batch payout along transaction status data individual items payout item \\( resource group \\) use resource show details payout item cancel unclaimed payout item deprecation notice synchronous mode soon deprecated longer available new integrations continues supported existing integrations synchronous mode payout immediately returns results payout show payout item details get v1 payments payouts item shows details payout item review current status previously unclaimed pending payout item cancel unclaimed payout item post v1 payments payouts item cancel cancels unclaimed transaction one claims unclaimed item within 30 days funds automatically returned sender cancel unclaimed item automatic 30 day refund vault api merchants use vault api securely store customer credit cards paypal vault rather server use api store customer credit card api returns id vaulted card take payment vaulted card specify id vaulted card instead credit card details information see vault overview notes paypal validate credit card information store vault direct credit card payment related features restricted countries credit cards \\( resource group \\) use resource store credit card vault delete show details list update vaulted cards store credit card post v1 vault credit cards stores credit card details paypal vault use vaulted card make payment specify id vaulted card object include store credit card must include id object also use id vaulted credit card show details update delete vaulted card list vaulted credit cards get v1 vault credit cards lists vaulted credit cards filter cards response specify one optional query parameters show vaulted credit card details get v1 vault credit cards shows details vaulted credit card id update vaulted credit card patch v1 vault credit cards updates information vaulted credit card id json request body specify values update delete vaulted credit card delete v1 vault credit cards deletes vaulted credit card id webhooks api paypal rest apis use webhooks event notification webhooks http callbacks receive notification messages events configure webhook listener app create webhook subscribes webhook listener app events namespace contains resource collections webhooks webhooks \\( resource group \\) use resource create show details list update delete webhooks create webhook post v1 notifications webhooks subscribes webhook listener events successful request returns http status code json response body object includes webhook id later use show webhook details get v1 notifications webhooks shows details webhook id list webhooks get v1 notifications webhooks lists webhooks update webhook patch v1 notifications webhooks updates webhook id supports operation delete webhook delete v1 notifications webhooks deletes webhook id webhook event notifications \\( resource group \\) use resource show event notification details list event notifications resend notification event show event notification details get v1 notifications webhooks events shows details event notification id list event notifications get v1 notifications webhooks events lists webhook event notifications specify one optional query parameters filter response resend event notification post v1 notifications webhooks events resend resends event notification event id webhook events \\( resource group \\) use resource list events webhooks subscribe resource list event subscriptions webhook list available events get v1 notifications webhooks event types lists events app subscribe list webhook events see webhook events list event subscriptions webhook get v1 notifications webhooks event types lists event subscriptions webhook id simulate webhook event \\( resource group \\) use resource use sample payload simulate webhook event events call generates serve validate connection listener url show webhook events look note also use webhooks simulator simulate webhook events simulate webhook event post v1 notifications simulate event simulates webhook event simulate event specify sample payload request send mock event data url configured listen notification messages mock events serve validate connection listener url show webhook events look verify webhook signature \\( resource group \\) use resource verify webhook signature verify webhook signature post v1 notifications verify webhook signature verifies webhook signature docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "crawled_date": "2017-06-10T13:59:23.042974"
  }, 
  "425": {
    "link5": "https://developer.paypal.com/docs/classic/archive/", 
    "link4": "https://developer.paypal.com/docs/accept-payments/", 
    "link1": "https://developer.paypal.com/docs/api/", 
    "api_url": "paypal.com", 
    "link3": "https://developer.paypal.com/docs/", 
    "link2": "https://developer.paypal.com/docs/classic/api/", 
    "progweb_url": "https://www.programmableweb.com/api/paypal-button-manager", 
    "progweb_date": "04.10.2017", 
    "progweb_descr": "The PayPal Button Manager API allows developers to create, manage, and edit a large number of PayPal Payments Standard buttons without having to touch HTML code. This API is available for both NVP and SOAP. It covers all buttons that can be created in a PayPal Profile. This API is available in every country that accepts PayPal.", 
    "api_name": "PayPal Button Manager", 
    "progweb_cat": "Payments,eCommerce", 
    "descr5": "docs api reference support log dashboard back docs documentation archive documentation page created previous versions paypal products content files might reflect current product functionality table contents account authentication adaptive accounts adaptive payments paypal buttons images express checkout invoicing order management instant payment notification \\( ipn \\) order management \\( ipn pdt \\) mass payments payflow paypal payments standard permissions latest documentation see nvp soap api documentation account authentication account authentication service getting started guide adaptive accounts adaptive accounts developer guide adaptive payments adaptive payments developer guide note see adaptive payments developer documentation latest documentation documentation provided html format paypal buttons images paypal buttons images express checkout merchant api reference archive getbillingagreementcustomerdetails \\( nvp soap \\) api operation deprecated starting version 54 0 later api setcustomerbillingagreement \\( nvp soap \\) api operation deprecated starting version 54 0 later api invoicing adaptive invoicing developer guide invoicing user 's guide invoicing service api guide note see invoicing developer documentation latest documentation documentation provided html format order management instant payment notification \\( ipn \\) instant payment notification guide order management order management integration guide mass payments mass payments user guide payflow note see payflow gateway development integration guides latest documentation payflow gateway developer guide pdf latest payflow gateway integration information see html version guide payflow link payflow link user 's guide payflow link fraud protection services user 's guide payflow link recurring billing service user 's guide payflow pro payflow pro developer 's guide payflow pro reporting developer 's guide website payments pro payflow edition website payments pro payflow edition developer 's guide website payments pro payflow edition fraud protection services user 's guide website payments pro payflow edition recurring billing service user 's guide paypal payments pro payflow edition recurring payments developer 's guide website payments pro payflow edition reporting developer 's guide website payments pro payflow edition xmlpay developer 's guide paypal payments standard paypal payments standard integration guide subscriptions recurring payments guide permissions permissions service guide note see permissions developer documentation latest documentation documentation provided html format docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr4": "docs api reference support log dashboard back docs accept payments paypal offers variety products solutions accepting payments choose solution best requirements whether goal get running quickly possible develop fully customized payment experience braintree direct braintree direct suitable type integration whether want quick easy payment solution completely customized payment experience drop ui available braintree direct enables start accepting payments little effort want build checkout experience braintree direct simplifies payment method details token never need worry method users choose pay learn get started braintree direct payment buttons paypal makes easy accept payments website whether mobile device tablet pc copy paste short html snippet website add payment button single item shopping cart see add payment buttons website information payments rest api payments rest api provides easy secure way accept online mobile payments take advantage great benefits paypal enabling customers make payments clicks payments made paypal credit cards depending country accept immediate payment authorize payment capture later payments overview explains get started payments rest api find detailed information paypal paypal sdks enable ios android apps interact credit card swipers merchants process person credit card transactions using mobile app native libraries paypal sdks enable interact paypal hardware also process card present transactions get started see integrating paypal sdks express checkout express checkout fast easy way buyers pay paypal express checkout makes easier buyers pay online enables accept paypal retaining control buyer overall checkout flow typical checkout flow buyer must provide shipping information billing payment information checking shopping cart page express checkout buyer check pay without entering shipping billing information paypal provides stored information simplifies expedites checkout process increase sales 18 percent learn see express checkout integration guide shopping carts paypal partners provide third party shopping carts allow seamlessly accept paypal payments whether need complete online store want add shopping cart existing website several options available paypal partners meet needs learn see using shopping carts already integrated third party shopping cart solution looking support search browse articles within shopping cart section paypal technical support faq paypal payments pro payflow gateway paypal payments pro customizable solution enables merchants keep buyers website entire checkout payment process merchants host customized checkout pages send transactions paypal paypal host checkout pages also manage security sales authorizations paypal payments pro accept paypal paypal credit payments well credit debit card payments paypal payments pro also includes optimized mobile checkout experience details see paypal payments pro payflow gateway secure open gateway utilized internally paypal payments pro services provides features including api allows merchants create host customized checkout pages paypal hosted checkout page using payflow gateway shared api merchants connect online store major payment processor bank card association choose connect directly paypal get started see payflow gateway website payments pro website payments pro legacy paypal product based soap nvp technology enables merchants accept credit debit cards paypal payments directly website using two paypal api based solutions direct payment express checkout payments immediate authorized later capture also recurring payments website payments pro also includes additional paypal solutions tools virtual terminal fraud management filters reference transactions mobile sdk paypal mobile sdks enable native apps easily accept paypal credit card payments native libraries paypal mobile sdks enable build fast responsive apps single payments \\( paypal credit card \\) future payments \\( paypal \\) learn get started paypal mobile sdks docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr3": "docs api reference support log dashboard paypal developer documentation view featured docs use documentation site learn implement paypal payment services choose solution bests suits needs featured documentation select docs find specific document express checkout simple way add paypal web app checkout web mobile web integration mobile app integration paypal payments standard ready made way accept cards paypal website payment buttons custom flexible way accept cards paypal app website braintree direct paypal payments pro store accept contactless payments chip mag stripe cards person paypal paydiant marketplace process split chained payments providers braintree marketplace invoicing create send manage professional customized invoices rest invoicing payouts send money hundreds recipients simultaneously payouts mass pay find looking \\? view product docs sdk libraries mobile sdks ios braintree android braintree ios paypal android paypal overview rest server sdks java php node python ruby net overview nvp soap api sdks java php ruby net overview third party products services shopping carts accept payments third party shopping cart software bigcommerce magento shopify stores specialty platforms alternative ways sell online specialty platforms marketplaces e junkie swappa jvzoo platforms financial management ready made solutions billing invoicing accounting xero aria quickbooks management ready start development \\? sign log using paypal account get credentials set test accounts sign log docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr2": "docs api reference support log dashboard view referencenvp soap apisapi referenceexpress checkoutendpointsoperations \\( alphabetical \\) operations \\( feature \\) payflow gatewayendpointsparametersadvanced parametersadditional featureswebsite payments proendpointsoperations \\( alphabetical \\) operations \\( feature \\) additional featureshosted solution \\( outside us \\) mass paymentsendpointsoperationadaptive accountsendpointsoperations \\( alphabetical \\) invoicingendpointsoperations \\( alphabetical \\) permissions serviceendpointsoperations \\( alphabetical \\) button managerendpointsoperations \\( alphabetical \\) nvp soap apps 101get startednvp basicssoap basicscredentialsendpointscurrency codescountry codesstate province codeslocale codesresponse codesapi error codes10000 100991000110002100031000410005100061000710008100091001010011100141006910100 1019910101101021010310200 102991020110202102031020410205102061020710209102101021110212102131021410215102161021710218102191022010300 10399103011030310304103051030610307103081030910310103111031210313103141031710320103211032710400 10499104001040110402104041040510406104071040810409104101041110412104131041410415104161041710418104191042010421104241042510426104271042810429104301043110432104331043410435104361043710438104391044010441104421044310444104451044610448104491045210457104581045910460104611046210463104641046510467104681046910470104711047210473104741047510476104771047810479104801048110482104851048610500 1059910500105011050210504105051050710508105091051010511105121051310519105201052110523105251052610527105341053510536105371053810539105401054110542105441054510546105471054810549105501055210553105541055510556105571055810560105611056210563105641056510566105671057010571105741057510576105771057810600 1069910600106011060210603106041060510606106071060810609106101061110612106131061410615106161061710618106191062010621106221062310624106251062610627106281062910630106311063210633106341063510700 1079910701107021070310704107051070610707107081070910710107111071210713107141071510716107171071810719107201072110722107231072410725107261072710728107291073010731107321073310734107351073610744107451074610747107481075010751107521075410755107561075810759107601076110762107631076410800 108991080011000 110991100111002110681108411089110911109411300 113991130211400 1149911401114031140411406114071145011451114521145311454114551145611457114581145911500 1159911501115021150311504115051150611507115081150911510115111151211514115151151611517115181151911520115211152211523115241153111543115441154611547115481155011551115521155311554115551155611557115581156011561115621156411567115681156911570115711157611577115781157911581115821158311584115851158611587115901159211600 11699116011160211603116041160711610116111161211614116151161611800 1189911800118011180211803118041180511806118071181011811118121181311814118151182011821118221182311824118251182611827118281182911830118311183211900 11999119001199612000 12099120001200112100 121991210912124121251212612200 1229912200122011220212203122041220512206122071220812300 123991230213100 1319913100131011310213103131041310513106131071310813109131101311113112131131311413115131161312213200 132991320013500 13599135131353113600 136991360113602136061360713700 13799137011375114001 14099140011400215001 1509915001150021500315004150051500615007150081500915010150111501217000 1709917004170051700617200 1729917200172031720418000 180991801419000 190991906581000 81099810008100181002810038100481100 8119981100811018110281103811048110581106811078110881109811108111181112811138111481115811168111781118811198112081121811228112381124811258112681127811288112981130811318113281133811348113581136811378113881139811408114181142811438114481145811468114781148811498115081200 812998120081201812038120581206812078120881209812108121181212812138121481215812198122081221812228122381224812258122681227812298123081232812348123581236812378123881239812438124481245812478124881249812508125199900 9999999998dodirectpayment processor response codesmasspay failed transactions ipn reason codessdksrelease notesadaptive accountsversion 1 2 0version 1 0 4version 1 0 3earlier versionsexpress checkout direct payment mass pay button managerversion 204version 203version 202version 201version 200version 124version 123version 122version 121version 120version 119version 117version 116version 115version 114version 113version 112version 111version 109version 108version 106version 104version 98version 94version 93version 92earlier nvp api versionsearlier soap api versionsinvoicing legacy apiversion 1 12 0version 1 11 0version 1 10 0version 1 8 0version 1 7 0version 1 6 0payflow apipermissions serviceversion 84 0version 74 0website payments pro hosted solution nvp soap api reference learn paypal name value pair \\( nvp \\) soap api endpoints operations express checkout express checkout commonly used paypal payments api payments made paypal hosted checkout page endpoint send api calls depends whether making nvp soap call use api make sure correct api credentials express checkout endpoints express checkout operations nvp soap nvp soap nvp nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap express checkout operations feature payflow gateway payflow gateway secure open payment gateway supports preferred integration method products paypal payments propaypal payments advanced paypal acquirer merchant bank payflow propayflow link choose processing platform merchant bank choose paypal host payment pages total control payment process website matter product select payflow gateway enables accept debit credit card payments paypal express checkout paypal credit \\( formerly bill later \\) payments within one api payflow gateway endpoints endpoint send api calls depends whether making live test call gateway transactions require user data parameters set account paypal manager payflow gateway parameters paypal host payment pages see configuring hosted checkout pages direct api calls click following api reference links payflow basic transaction parameters payflow credit card transaction parameters note transparent redirect information see pci compliance without hosted pages payflow gateway advanced parameters processors requiring additional parameters purchasing card level 2 3 transaction parameters telecheck parameters payflow gateway additional features payflow also offers following features fraud protection service recurring billing website payments pro note website payments pro deprecated replaced paypal payments pro website payments pro still supported existing merchants website payments pro endpoints endpoint send api calls depends whether making nvp soap call use api make sure correct api credentials website payments pro operations nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap website payments pro operations feature website payments pro additional features website payments pro also offers fraud management filters recurring payments website payments pro hosted solution \\( outside us \\) product merchants developers want integrate paypal 's hosted solution add transaction processing websites solution available australia france hong kong italy japan spain uk see integration guide country mass payments merchants use mass payments send money instantly 250 recipients send payments multiple recipients merchants need recipient 's paypal account email address payment amount currency code merchants manually upload file listing payments create programmatically using api send mass payments manually see using mass payments paypal account mass payments endpoints endpoint send api calls depends whether making nvp soap call use api make sure correct api credentials mass payments operation nvp soap adaptive accounts adaptive accounts api allows create manage paypal accounts paypal users make api call see adaptive accounts api call headers endpoints adaptive accounts endpoints make adaptive accounts api calls include api credentials sandbox testing specify adaptive accounts operations addbankaccount addpaymentcard checkcompliancestatus createaccount getuseragreement setfundingsourceconfirmed updatecompliancestatus invoicing use invoicing service api create send manage invoices using paypal invoicing endpoints make api calls invoicing service include api credentials sandbox testing specify invoicing operations cancelinvoice createandsendinvoice createinvoice deleteinvoice generateinvoicenumber getinvoicedetails markinvoiceaspaid markinvoiceasrefunded markinvoiceasunpaid remindinvoice searchinvoices sendinvoice updateinvoice permissions service permissions service enables obtain permission execute paypal api operations behalf paypal account holders permissions service endpoints make api calls permissions service include api credentials sandbox testing specify permissions service operations cancelpermissions getaccesstoken getadvancedpersonaldata getbasicpersonaldata getpermissions requestpermissions button manager advanced paypal button manipulation use api modify paypal buttons directly using html code see paypal button html variables reference paypal button image reference button manager endpoints send api calls one following endpoints depending whether making nvp soap call make sure correct api credentials use api button manager operations nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap additional information api credentials paypal name value pair api basics paypal soap api basics paypal developer documentation paypal credit \\( formerly bill later \\) api error codes user parameter data paypal manager docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr1": "docs api reference support log dashboard view reference rest apis api reference billing agreements api billing plans api identity api invoicing api payment experience api payments api payouts api vault api webhooks api overview authentication headers first rest call errors release notes sdks sdk quickstart service integrations rest api reference billing agreements api use billing plans billing agreements create agreement recurring credit card bank card paypal payment goods services create agreement reference active billing plan agreement inherits information also supply customer payment information optionally override referenced plan 's merchant preferences shipping fee tax information information see billing plans agreements billing agreements \\( resource group \\) use resource create agreement update agreement show agreement details cancel agreements also set bill balance agreement activate agreement suspend agreement list agreement transactions execute agreements create agreement post v1 payments billing agreements creates billing agreement json request body include object name description start date id plan base agreement customer shipping address information successful request returns http status code json response body shows billing agreement details update agreement patch v1 payments billing agreements updates details billing agreement id details include description shipping address start date successful request returns http status code json response body show agreement details get v1 payments billing agreements shows details billing agreement id successful request returns http status code json response body shows billing agreement details bill agreement balance post v1 payments billing agreements bill balance bills balance agreement id json request body include optional note describes reason billing action agreement amount currency successful request returns http status code json response body cancel agreement post v1 payments billing agreements cancel cancels billing agreement id json request body include object optional note describes reason cancellation agreement amount currency successful request returns http status code json response body activate agreement post v1 payments billing agreements activate activates suspended billing agreement id json request body include object note describes reason activation agreement amount currency successful request returns http status code json response body set agreement balance post v1 payments billing agreements set balance sets balance agreement id json request body specify balance currency type value successful request returns http status code json response body suspend agreement post v1 payments billing agreements suspend suspends billing agreement id successful request returns http status code json response body list agreement transactions get v1 payments billing agreements transactions lists transactions agreement id filter transactions appear response specify optional start end date query parameters successful request returns http status code json response body lists transactions details execute agreement post v1 payments billing agreements agreement execute executes billing agreement id customer approval successful request returns http status code json response body shows billing agreement details billing plans api use billing plans billing agreements create agreement recurring credit card bank card paypal payment goods services billing plan includes payment definitions details plan must include least one regular payment definition optionally trial payment definition definition determines often long customer charged plan specify type indicates whether payment definitions plan fixed infinite number payment cycles plan also defines merchant preferences including much costs set agreement urls customer approve cancel agreement action customer 's initial payment fails default plan active create activate update information see billing plans agreements billing plans \\( resource group \\) use resource create update show details list plans create plan post v1 payments billing plans creates billing plan json request body include plan details plan must include least one regular payment definition optionally trial payment definition payment definition specifies billing period determines often long customer charged plan specify fixed infinite number payment cycles payment definition optionally specify shipping fee tax amounts successful request returns http status code json response body shows plan details default state new plan create agreement plan must activate plan updating update plan patch v1 payments billing plans updates fields billing plan id json request body include patch object specifies operation perform one fields update new value updated field successful request returns http status code json response body show plan details get v1 payments billing plans shows details billing plan id successful request returns http status code json response body shows plan details list plans get v1 payments billing plans lists billing plans filter plans appear response specify one optional query pagination parameters successful request returns http status code json response body lists plans details identity api log paypal \\( formerly paypal access \\) commerce identity solution enables customers sign web site quickly securely using paypal login credentials log paypal utilizes latest security standards n't worry storing user data system information learn log paypal get user information get v1 identity openidconnect userinfo retrieve user profile attributes invoicing api use invoicing api create draft invoices send invoices manage invoices use invoices track payments send invoice invoice moves draft payable state paypal emails link invoice paypal website customer customers paypal account log pay paypal alternatively customers pay check debit card credit card information see invoicing overview invoices \\( resource group \\) use resource create update send invoices invoice reminders also generate invoice qr codes invoice numbers search list show invoice details delete draft invoices cancel sent invoices mark invoices fully partially paid refunded delete external payment refund invoice create invoice post v1 invoicing invoices creates draft invoice optionally create invoice template create invoice template invoice populated predefined data source template contains move invoice draft payable state must send invoice json request body include invoice details including merchant information object must include array note merchant specified invoice must paypal account good standing successful request returns http status code json response body shows invoice details send invoice post v1 invoicing invoices send sends invoice id customer note send invoice cannot resend optionally set query parameter also send merchant invoice update notification successful request returns http status code json response body update invoice put v1 invoicing invoices fully updates invoice id json request body include complete object call support partial updates successful request returns http status code json response body shows invoice details send invoice reminder post v1 invoicing invoices remind sends reminder payer invoice id json request body include object defines subject reminder details successful request returns http status code json response body delete draft invoice delete v1 invoicing invoices deletes draft invoice id deletes invoices draft state invoices already sent cancel invoice delete draft invoice longer use show details however reuse invoice number successful request returns http status code json response body cancel sent invoice post v1 invoicing invoices cancel cancels sent invoice id optionally sends notification cancellation payer merchant cc emails successful request returns http status code json response body mark invoice paid post v1 invoicing invoices record payment marks status invoice id paid include payment detail object defines payment method details json request body successful request returns http status code json response body mark invoice refunded post v1 invoicing invoices record refund marks status invoice id refunded json request body include payment detail object defines payment method details successful request returns http status code json response body list merchant invoices get v1 invoicing invoices lists merchant invoices filter invoices appear response specify one optional query parameters successful request returns http status code json response body lists invoices details search invoices post v1 invoicing search lists invoices match search criteria json request body include object specifies search criteria successful request returns http status code json response body lists invoices match search criteria show invoice details get v1 invoicing invoices shows details invoice id successful request returns http status code json response body shows invoice details generate qr code get v1 invoicing invoices qr code generates qr code invoice id qr code png image base64 encoded format corresponds invoice id generate qr code invoice add paper pdf invoice customer uses mobile device scan qr code redirected paypal mobile payment flow pay online paypal credit card get qr code must create invoice specify recipient email address object use customer email address want email invoice send invoice move invoice draft payable state specify recipient email address invoice emailed successful request returns http status code json response body shows qr code png image generate invoice number post v1 invoicing invoices next invoice number generates next invoice number available merchant successful request returns http status code json response body shows next invoice number templates \\( resource group \\) create template invoice enables create invoices predefined data use resource create list show details update delete templates note also use template settings dashboard create template invoice create template post v1 invoicing templates creates invoice template create invoice template invoice populated predefined data source template contains note use template settings dashboard instead api create invoice template update template put v1 invoicing templates updates template id json request body specify complete object update method support partial updates successful request returns http status code json response body shows template details list templates get v1 invoicing templates lists merchant created templates list shows emails addresses phone numbers merchant profile successful request returns http status code json response body lists invoices show template details get v1 invoicing templates shows details template id successful request returns http status code json response body shows template details delete template delete v1 invoicing templates deletes template id successful request returns http status code json response body payment experience api use payment experience api create seamless payment experience profiles information create paypal payment web experience profile see payment experience web profiles web profiles \\( resource group \\) use resource create show details list update partially update delete web experience profiles create web experience profile post v1 payment experience web profiles creates web experience profile json request body specify profile name details show web experience profile details get v1 payment experience web profiles shows details web experience profile id list web experience profiles get v1 payment experience web profiles lists web experience profiles merchant subject update web experience profile put v1 payment experience web profiles updates web experience profile id json request body specify profile details request omits profile parameters previously set values parameters removed partially update web experience profile patch v1 payment experience web profiles partially updates web experience profile id json request body specify patch object path profile location update needed new value complete operation delete web experience profile delete v1 payment experience web profiles deletes web experience profile id payments api use payments rest api easily securely accept online mobile payments payments namespace contains resource collections payments sales refunds authorizations captures orders enable customers make paypal credit card payments clicks depending country accept immediate payment authorize payment capture later show details completed payments refunds authorizations make full partial refunds also void authorize authorizations information see payments overview payments \\( resource group \\) use resource create sale authorized payment order sale direct credit card payment stored credit card payment paypal payment authorized payment places funds hold captured later order purchase customer approved funds placed hold also use resource execute approved paypal payments show details update list payments information see also payments create payment post v1 payments payment creates sale authorized payment captured later order create sale authorization order include payment details json request body set include payer transaction details paypal payments redirect urls combination determines type payment created information see payments rest api notes countries restrict direct credit card payment related features authorizations guaranteed three days though attempt capture authorization 29 days three day honor period authorization expires reauthorize payment execute approved paypal payment post v1 payments payment execute executes paypal payment customer approved optionally update one transactions execute payment successful request returns http status code json response body shows details executed payment important call works customer approved payment information learn paypal payments show payment details get v1 payments payment shows details payment id yet complete example shows details payment created approved failed successful request returns http status code json response body shows payment details update payment patch v1 payments payment partially updates payment id update amount shipping address invoice id custom data cannot update payment payment executes successful request returns http status code json response body shows payment details list payments get v1 payments payment lists payments created create payment call state list shows payments made merchant makes call filter payments appear response specify one optional query pagination parameters see filtering pagination successful request returns http status code json response body lists payments payment details sales \\( resource group \\) sale completed payment use resource show sale details refund sale information see also refund payments show sale details get v1 payments sale shows details sale id returns sales created rest api successful request returns http status code json response body shows sale details refund sale post v1 payments sale refund refunds sale id full refund include empty payload json request body partial refund include object json request body successful request returns http status code json response body shows details refunded sale refunds \\( resource group \\) use resource show details refund direct captured payments show refund details get v1 payments refund shows details refund id successful request returns http status code json response body shows refund details authorizations \\( resource group \\) use resource related sub resources act previously created authorization show details capture void reauthorize authorization show authorization details get v1 payments authorization shows details authorization id successful request returns http status code json response body shows authorization details capture authorization post v1 payments authorization capture captures processes authorization id use call original payment call must specify intent successful request returns http status code json response body shows details captured authorization void authorization post v1 payments authorization void voids cancels authorization id cannot void fully captured authorization successful request returns http status code json response body shows details voided authorization authorize payment post v1 payments authorization reauthorize authorizes paypal account payment authorization id ensure funds still available authorize payment initial three day honor period supports request parameter authorize payment four 29 days three day honor period original authorization expires 30 days passed original authorization must create new authorization instead authorized payment new three day honor period authorize transaction 115 originally authorized amount exceed increase 75 usd successful request returns http status code json response body shows details authorized authorization captures \\( resource group \\) use resource sub resources show details refund captured payments show captured payment details get v1 payments capture shows details captured payment id successful request returns http status code json response body shows details captured payment refund captured payment post v1 payments capture refund refunds captured payment id json request body include object successful request returns http status code json response body shows details captured payment orders \\( resource group \\) use resource authorize capture void show details order note cannot refund order directly instead must refund completed payment order integration information see orders refund payment information see also orders show order details get v1 payments orders shows details order id successful request returns http status code json response body shows details voided authorization authorize order post v1 payments orders authorize authorizes order id json request body include object successful request returns http status code json response body shows details authorized order capture order post v1 payments orders capture captures payment order id use call original payment call must specify intent json request body include payment amount indicate whether capture final capture authorization successful request returns http status code json response body shows details captured order void order post v1 payments orders void voids cancels order id cannot void order payment already partially fully captured successful request returns http status code json response body shows details voided order payouts api use payouts api make paypal payments multiple paypal accounts single api call specify recipients using paypal email addresses phone numbers encrypted paypal account numbers payouts api fast convenient way send commissions rebates rewards general disbursements payouts appear mass payments sender 's paypal account provided mass payment reports important use payouts api request access account alternatively contact account manager paypal customer support must paypal business account payouts api uses iso 8601 date time format information payouts api see payouts deprecation notice synchronous mode soon deprecated longer available new integrations continues supported existing integrations synchronous mode payout immediately returns results payout payouts \\( resource group \\) use resource create payouts show batch payout details create payouts post v1 payments payouts make payouts one paypal accounts show batch payout details get v1 payments payouts periodically shows latest status batch payout along transaction status data individual items payout item \\( resource group \\) use resource show details payout item cancel unclaimed payout item deprecation notice synchronous mode soon deprecated longer available new integrations continues supported existing integrations synchronous mode payout immediately returns results payout show payout item details get v1 payments payouts item shows details payout item review current status previously unclaimed pending payout item cancel unclaimed payout item post v1 payments payouts item cancel cancels unclaimed transaction one claims unclaimed item within 30 days funds automatically returned sender cancel unclaimed item automatic 30 day refund vault api merchants use vault api securely store customer credit cards paypal vault rather server use api store customer credit card api returns id vaulted card take payment vaulted card specify id vaulted card instead credit card details information see vault overview notes paypal validate credit card information store vault direct credit card payment related features restricted countries credit cards \\( resource group \\) use resource store credit card vault delete show details list update vaulted cards store credit card post v1 vault credit cards stores credit card details paypal vault use vaulted card make payment specify id vaulted card object include store credit card must include id object also use id vaulted credit card show details update delete vaulted card list vaulted credit cards get v1 vault credit cards lists vaulted credit cards filter cards response specify one optional query parameters show vaulted credit card details get v1 vault credit cards shows details vaulted credit card id update vaulted credit card patch v1 vault credit cards updates information vaulted credit card id json request body specify values update delete vaulted credit card delete v1 vault credit cards deletes vaulted credit card id webhooks api paypal rest apis use webhooks event notification webhooks http callbacks receive notification messages events configure webhook listener app create webhook subscribes webhook listener app events namespace contains resource collections webhooks webhooks \\( resource group \\) use resource create show details list update delete webhooks create webhook post v1 notifications webhooks subscribes webhook listener events successful request returns http status code json response body object includes webhook id later use show webhook details get v1 notifications webhooks shows details webhook id list webhooks get v1 notifications webhooks lists webhooks update webhook patch v1 notifications webhooks updates webhook id supports operation delete webhook delete v1 notifications webhooks deletes webhook id webhook event notifications \\( resource group \\) use resource show event notification details list event notifications resend notification event show event notification details get v1 notifications webhooks events shows details event notification id list event notifications get v1 notifications webhooks events lists webhook event notifications specify one optional query parameters filter response resend event notification post v1 notifications webhooks events resend resends event notification event id webhook events \\( resource group \\) use resource list events webhooks subscribe resource list event subscriptions webhook list available events get v1 notifications webhooks event types lists events app subscribe list webhook events see webhook events list event subscriptions webhook get v1 notifications webhooks event types lists event subscriptions webhook id simulate webhook event \\( resource group \\) use resource use sample payload simulate webhook event events call generates serve validate connection listener url show webhook events look note also use webhooks simulator simulate webhook events simulate webhook event post v1 notifications simulate event simulates webhook event simulate event specify sample payload request send mock event data url configured listen notification messages mock events serve validate connection listener url show webhook events look verify webhook signature \\( resource group \\) use resource verify webhook signature verify webhook signature post v1 notifications verify webhook signature verifies webhook signature docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "crawled_date": "2017-06-10T13:59:23.038940"
  }, 
  "424": {
    "api_url": "epayco.co", 
    "progweb_url": "https://www.programmableweb.com/api/epayco", 
    "progweb_date": "04.04.2017", 
    "progweb_descr": "The ePayco API implements a payment system that returns JSON calls related to credit cards, bank transactions, and Efecty (international) payments. The API supports OnPage checkout, standard checkout, and split payments. ePayco is a Colombian payment processing platform focused on the LATAM market. ePayco charges on a per transaction basis.", 
    "api_name": "ePayco", 
    "progweb_cat": "Payments,Accounts", 
    "crawled_date": "2017-06-10T13:59:23.040448"
  }, 
  "427": {
    "api_url": "cielo.com.br", 
    "progweb_url": "https://www.programmableweb.com/api/cielo", 
    "progweb_date": "04.26.2017", 
    "progweb_descr": "The Cielo API is a payment processing platform based in Brazil that supports debit and credit card payments, wire transfers, bank slip payments, recurrent payments and digital wallets. Data is returned in JSON format. Cielo provides wireless machines for onsite payments, mobile card reader and the Cielo LIO (business-targeted payment and management machine). With monitored transactions, Cielo is the leading sales platform in Latin America.", 
    "api_name": "Cielo", 
    "progweb_cat": "Payments,Brazilian", 
    "crawled_date": "2017-06-10T13:59:23.031107"
  }, 
  "426": {
    "api_url": "moltin.com", 
    "progweb_url": "https://www.programmableweb.com/api/moltin-v2", 
    "progweb_date": "04.11.2017", 
    "progweb_descr": "Unified APIs for inventory, carts, the checkout process, payments and more, so you can focus on creating seamless customer experiences at any scale.\r Moltin is a SaaS cloud based eCommerce platform for developers. Moltin provides decoupled components to create customized solutions for websites, mobile and desktop applications, as well as powering physical retail stores through point-of-sale and stock management systems.\r Core components of the API include, inventory management (products & variations, categories, collections, brands), carts, orders, customers, addresses, checkout and payment gateways. As a developer you can choose which of these components to use in your project and create completely unique checkout flows without the limitations found in existing e-commerce solutions.\r You can use Moltin anywhere to do any kind of commerce you or your client wants in any programming language.\r Having one centralized cloud based e-commerce platform allows you to have multiple store fronts across a range of devices. This even allows you to switch out and/or upgrade your front end technology without having to completely migrate between systems.", 
    "api_name": "Moltin V2", 
    "progweb_cat": "eCommerce,Addresses", 
    "crawled_date": "2017-06-10T13:59:23.037042"
  }, 
  "308": {
    "api_url": "bitwage.com", 
    "progweb_url": "https://www.programmableweb.com/api/bitwage", 
    "progweb_date": "04.21.2016", 
    "progweb_descr": "Bitwage is an international payroll service that can deliver wages in digital or local currency. For individual wages, it offers Bitcoin payments, bank wire transfers, money savings in currency or commodities, and a refillable debit card. For team wages, it offers the mentioned services plus an API. The Bitwage API can be used to deliver international freelancer payments. This API exchanges data in JSON format, and uses API Keys for authentication.", 
    "api_name": "Bitwage", 
    "progweb_cat": "Payments,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:26.396254"
  }, 
  "309": {
    "api_url": "hubs.ly", 
    "progweb_url": "https://www.programmableweb.com/api/transpay-mass-payout", 
    "progweb_date": "05.05.2016", 
    "progweb_descr": "The Transpay Mass Payout API allows developers to integrate straight-through processing for payouts into their applications. The API can process and distribute funds in real time in the recipient's local currency, without the need for intermediaries or the SWIFT wire network. Transpay can deliver payouts via direct-to-bank transfers or to one of 250,000+ pickup locations.", 
    "api_name": "Transpay Mass Payout", 
    "progweb_cat": "Payments,B2B", 
    "crawled_date": "2017-06-10T13:59:26.395284"
  }, 
  "300": {
    "api_url": "juspay.in", 
    "progweb_url": "https://www.programmableweb.com/api/juspay", 
    "progweb_date": "03.09.2016", 
    "progweb_descr": "The JusPay API integrates payments into mobile applications. Protocols include JSON and REST. Developers can authenticate with Key. JusPay is a mobile payments company whose featured products include a payments browser, a checkout application and instant Buy services.", 
    "api_name": "JusPay", 
    "progweb_cat": "Payments,Merchants", 
    "crawled_date": "2017-06-10T13:59:26.404190"
  }, 
  "301": {
    "api_url": "omise.co", 
    "progweb_url": "https://www.programmableweb.com/api/omise", 
    "progweb_date": "03.09.2016", 
    "progweb_descr": "The Omise API integrates payments and refunds features into mobile applications. Developers can implement by working with REST format and authenticate with token. Omise provides guides to interact with cards, transfers, and banks. Omise is a payment service for Southeast Asia, based in Thailand.", 
    "api_name": "Omise", 
    "progweb_cat": "Payments,Asia", 
    "crawled_date": "2017-06-10T13:59:26.403055"
  }, 
  "302": {
    "api_url": "nabvelocity.com", 
    "progweb_url": "https://www.programmableweb.com/api/nab-velocity", 
    "progweb_date": "03.10.2016", 
    "progweb_descr": "North American Bancard (NAB) is a payment processing platform designed to be developer friendly. This platform offers multi currency support, recurrent billing, virtual terminal, Apple Pay support, and fraud prevention. The Velocity API is used for full integration with Velocity Managed Commerce Services Platform which offers eCommerce, Mobile, and Back Office payment support. This API can be integrated by using REST or SOAP protocols, uses Tokens for authentication, and returns data in JSON or XML formats.", 
    "api_name": "NAB Velocity", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:26.402056"
  }, 
  "303": {
    "api_url": "noblewebstudio.com", 
    "progweb_url": "https://www.programmableweb.com/api/noble-recharge", 
    "progweb_date": "03.10.2016", 
    "progweb_descr": "Noble Web Studio is a web development agency. Their Recharge Solution allows both B2B and B2C recharge services. The Noble Recharge API integrates payments into applications in JSON format. Recharge services aim to make profit with the implementation of electricity, gas, and energy billing.", 
    "api_name": "Noble Recharge", 
    "progweb_cat": "Payments,Accounts", 
    "crawled_date": "2017-06-10T13:59:26.401023"
  }, 
  "304": {
    "api_url": "paytraq.com", 
    "progweb_url": "https://www.programmableweb.com/api/paytraq", 
    "progweb_date": "04.10.2016", 
    "progweb_descr": "The PayTraq API allows developers to programmatically access their clients, suppliers, employees, items, warehousing, sales, purchases, inventory moves, payments, and accounting from a single interface. PayTraq is an enterprise resource planning (ERP) service for business owners, organizers, and accountants. They provide a cloud-based business suite that includes accounting and bookkeeping services.", 
    "api_name": "PayTraq", 
    "progweb_cat": "Accounting,Billing", 
    "crawled_date": "2017-06-10T13:59:26.400108"
  }, 
  "305": {
    "api_url": "avaza.com", 
    "progweb_url": "https://www.programmableweb.com/api/avaza", 
    "progweb_date": "04.11.2016", 
    "progweb_descr": "The Avaza API Allows programmable access to contacts, projects, tasks, invoices, and taxes. It is available in JSON and REST protocol with OAuth2 authentication. Avaza provides project management, invoicing, and other services to organize client-focused businesses.", 
    "api_name": "Avaza", 
    "progweb_cat": "Project Management,Invoicing", 
    "crawled_date": "2017-06-10T13:59:26.399100"
  }, 
  "306": {
    "api_url": "helcim.com", 
    "progweb_url": "https://www.programmableweb.com/api/helcim-payment-gateway", 
    "progweb_date": "04.19.2016", 
    "progweb_descr": "The Payment Gateway API by Helcim connects businesses in Canada and the USA with credit card processing services.  Accept online payments in the form of Interac Visa, Interac Debit, Visa, American Express, MasterCard, Discover Network, Union Pay and other popular forms of payment. Helcim is a credit card transactional service based in Calgary, Canada.", 
    "api_name": "Helcim Payment Gateway", 
    "progweb_cat": "Payments,Banking", 
    "crawled_date": "2017-06-10T13:59:26.398159"
  }, 
  "307": {
    "api_url": "curopayments.com", 
    "progweb_url": "https://www.programmableweb.com/api/curo-payments", 
    "progweb_date": "04.20.2016", 
    "progweb_descr": "The CURO Payments API allows merchants to integrate payment functions into their own online shops and services. CURO Payments is a company regulated by the Dutch Central Bank (DNB) that specializes in handling financial transactions between customers and online retailers. They also provide services to companies involved in online payments and e-commerce. The CURO Payments website is offered in both Dutch and English.", 
    "api_name": "CURO Payments", 
    "progweb_cat": "Financial,Payments", 
    "crawled_date": "2017-06-10T13:59:26.397195"
  }, 
  "229": {
    "api_url": "auricsystems.com", 
    "progweb_url": "https://www.programmableweb.com/api/paymentvault", 
    "progweb_date": "02.11.2014", 
    "progweb_descr": "Auric Systems International is a PCI compliant solutions provider that produces payment transaction processing applications from cryptographic key management to tokenized credit card storage.The PaymentVault API, provided by Auric Systems, allows users to integrate merchant shops with the PaymentVault service.  PaymentVault Tokenization provides off-site data storage for tokenized credit card account numbers and separate bulk storage of encrypted credit card information from the cardholder's personally identifiable information. The API uses JSON-RPC, and account is required with service.", 
    "api_name": "PaymentVault", 
    "progweb_cat": "Payments,Storage", 
    "crawled_date": "2017-06-10T13:59:33.617139"
  }, 
  "228": {
    "api_url": "delivery.com", 
    "progweb_url": "https://www.programmableweb.com/api/deliverycom", 
    "progweb_date": "02.10.2014", 
    "progweb_descr": "Delivery.com provides a database of restaurants, fast food establishments, dry cleaners, and liquor stores that provide delivery options. Users can search locally for places that provide delivery, place an order, and pay online. The Delivery.com API provides developers with the tools to integrate the search and ordering functions into third-party applications. The Delivery APIs allows users to search for local restaurants, liquor stores, and laundries that offer delivery and pickup then make purchases through the checkout API.", 
    "api_name": "Delivery.com", 
    "progweb_cat": "eCommerce,Merchants", 
    "crawled_date": "2017-06-10T13:59:33.618695"
  }, 
  "227": {
    "api_url": "trekksoft.com", 
    "progweb_url": "https://www.programmableweb.com/api/trekksoft", 
    "progweb_date": "02.10.2014", 
    "progweb_descr": "Trekksoft is an online platform for ticket, tour, and travel bookings and payments. Trekksoft offers a variety of online solutions for travel providers.  The Trekksoft API allows developers to access and integrate the functionality of Trekksoft with other applications. Some example API methods include retrieving tours, managing tour information, and user account management.", 
    "api_name": "Trekksoft", 
    "progweb_cat": "Travel,Tickets", 
    "crawled_date": "2017-06-10T13:59:33.620159"
  }, 
  "226": {
    "api_url": "payza.com", 
    "progweb_url": "https://www.programmableweb.com/api/payza", 
    "progweb_date": "02.10.2014", 
    "progweb_descr": "Payza is a global online payment platform that enables consumers and businesses to send and receive money instantly. The Payza API provides a developer interface for interacting with this platform. The API is able to send individual or mass payments, refund transactions, cancel subscriptions, and to return merchant and consumer data.", 
    "api_name": "Payza", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:33.621596"
  }, 
  "225": {
    "api_url": "bluetarp.com", 
    "progweb_url": "https://www.programmableweb.com/api/bluetarp-authorization", 
    "progweb_date": "02.08.2014", 
    "progweb_descr": "BlueTarp Financial is a financial services company dedicated to serving building supply dealers in the U.S. BlueTarp provides a transaction authorization API that developers can integrate into their own websites or systems in order to support transaction processing through BlueTarp. Supported transactions may include sale, credit, void, deposit hold, and deposit collection transactions.", 
    "api_name": "BlueTarp Authorization", 
    "progweb_cat": "Payments,Financial", 
    "crawled_date": "2017-06-10T13:59:33.623033"
  }, 
  "224": {
    "api_url": "bahaquote.com", 
    "progweb_url": "https://www.programmableweb.com/api/bahaquote", 
    "progweb_date": "02.07.2014", 
    "progweb_descr": "Bahaquote is an invoicing and expensing service that provides users with access to online invoicing, expense monitoring, mobile access, email marketing, and other features. The Bahaquote platform can be integrated into third party applications and used for automation using the Bahaquote API.  The API allows users to complete transactions online, update billing information, send quotes and invoices in a systematic manner through an automated process. An account is required with service.", 
    "api_name": "BahaQuote", 
    "progweb_cat": "Financial,Tools", 
    "crawled_date": "2017-06-10T13:59:33.624275"
  }, 
  "223": {
    "api_url": "btc-dealer.com", 
    "progweb_url": "https://www.programmableweb.com/api/btc-dealer", 
    "progweb_date": "02.07.2014", 
    "progweb_descr": "BTC-Dealer is a bitcoin service that allows users to purchase bitcoins using credit cards. The BTC-Dealer API allows merchants to integrate the credit card payment option into their site to sell bitcoins. To use the site, users must be in a country in which the service operates. As of 2/6/2014, the site does not provide its service to U.S users.", 
    "api_name": "BTC-Dealer", 
    "progweb_cat": "Financial,Currency", 
    "crawled_date": "2017-06-10T13:59:33.625539"
  }, 
  "222": {
    "api_url": "dsn-info.fr", 
    "progweb_url": "https://www.programmableweb.com/api/dsn", 
    "progweb_date": "02.06.2014", 
    "progweb_descr": "The DSN is based on a monthly transmission of personal data of employees, automated payroll software, after payroll, via a single reception point responsible for allocating data to the recipients. The DSN public API provides access to social statements in France.", 
    "api_name": "DSN", 
    "progweb_cat": "Enterprise,Government", 
    "crawled_date": "2017-06-10T13:59:33.626770"
  }, 
  "221": {
    "api_url": "nordeamarkets.com", 
    "progweb_url": "https://www.programmableweb.com/api/nordea-markets", 
    "progweb_date": "02.03.2014", 
    "progweb_descr": "Nordea Markets is an international capital markets operator and investment banking service. The Nordea Markets FIX based API is primarily designed for FX and equity brokers, asset and hedge fund managers,  and small and medium sized banks.  The API provides up to the minute pricing in Scandinavian currencies, as well as easy connectivity, low latency and extensive post-trade capabilities. The API allows users to access FX trade data as well as automate trading activity. An account is required with service.", 
    "api_name": "Nordea Markets", 
    "progweb_cat": "Financial,Accounting", 
    "crawled_date": "2017-06-10T13:59:33.627956"
  }, 
  "220": {
    "api_url": "treasury.io", 
    "progweb_url": "https://www.programmableweb.com/api/treasuryio", 
    "progweb_date": "02.02.2014", 
    "progweb_descr": "Treasury.io us a United States Treasury information provider that makes the data reported by the treasury on a daily basis readily available. The Treasury.io API provides users with access to the treasury's Operating Cash Balance , Deposits and Withdrawals, Public Debt Transactions, Adjustment of Public Dept Transactions to Cash Basis, Debt Subject to Limit, Federal Tax Deposits, Short-term Cash Investment, and Income Tax Refunds Issued. The API uses REST calls and returns JSON.", 
    "api_name": "Treasury.io", 
    "progweb_cat": "Feeds,Open Data", 
    "crawled_date": "2017-06-10T13:59:33.629077"
  }, 
  "391": {
    "api_url": "mastercard.com", 
    "progweb_url": "https://www.programmableweb.com/api/mastercard-mdes-customer-service", 
    "progweb_date": "12.21.2016", 
    "progweb_descr": "The MasterCard Digital Enablement Service (MDES) is a data interchange platform for generating and managing secure digital payment tokens. The MasterCard MDES Customer Service API allows developers to deploy B2B resources that support the implementation of problem resolution portals for consumer generated queries regarding the usage of digital cards. It features functionalities that allow issuers to resolve issues of digitization, transaction processing, and lifecycle events associated with tokenized queries from consumers. \r \r The scope of this API is restricted to B2B deployment; its provider cautions against deploying the API in B2C applications. Moreover, the API\u2019s design restricts its processing capabilities to single token enquiries channeled by issuer customer care representatives rather than high volume token batches.", 
    "api_name": "MasterCard MDES Customer Service", 
    "progweb_cat": "Financial,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:23.079874"
  }, 
  "390": {
    "api_url": "mastercard.com", 
    "progweb_url": "https://www.programmableweb.com/api/mastercard-mdes-pre-digitization", 
    "progweb_date": "12.21.2016", 
    "progweb_descr": "The MasterCard Digital Enablement Service (MDES) is a data interchange platform for generating and managing secure digital payment tokens. The MasterCard MDES Pre-Digitization API supports the transmission of MDES-supported web requests and responses between card issuers and cardholders. Its integration allows MDES Issuers to return JSON-formatted responses to requests submitted by, or on half of, cardholders.", 
    "api_name": "MasterCard MDES Pre-Digitization", 
    "progweb_cat": "Security,Authentication", 
    "crawled_date": "2017-06-10T13:59:23.081056"
  }, 
  "151": {
    "api_url": "paytrail.com", 
    "progweb_url": "https://www.programmableweb.com/api/paytrail-connect", 
    "progweb_date": "08.08.2013", 
    "progweb_descr": "Paytrail is a Finnish online payment service that aims to help companies provide a pleasant shopping experience for their customers. The service allows customers to make purchases using their preferred payment method whether it is online bank payments, card payments, invoicing, or installments. Paytrail also offers an account for consumers that allows them to use one login for all their online purchases. The Paytrail Connect REST API offers programmatic access to Paytrail services. An account with service is required.", 
    "api_name": "Paytrail Connect", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:33.703899"
  }, 
  "150": {
    "api_url": "simplelegal.com", 
    "progweb_url": "https://www.programmableweb.com/api/simple-legal", 
    "progweb_date": "08.06.2013", 
    "progweb_descr": "Simple Legal is a legal billing and payment service. In addition to sending legal bills and receiving payments, Simple Legal also scans bills for potential duplicate charges and fraudulent charges and alerts the customer.  The Simple Legal API allows developers to access and integrate the functionality of Simple Legal with other applications. Public documentation is not available; API access comes with account service.", 
    "api_name": "Simple Legal", 
    "progweb_cat": "Payments,Law", 
    "crawled_date": "2017-06-10T13:59:33.704902"
  }, 
  "153": {
    "api_url": "alfacashier.com", 
    "progweb_url": "https://www.programmableweb.com/api/alfacashier", 
    "progweb_date": "08.11.2013", 
    "progweb_descr": "ALFAcashier is a currency exchange service that also facilitates payment services. The site maintains currency reserves and will exchange singular monetary units for a basket of other currencies. The ALFAcashier API allows users to integrate the currency exchange system into third-party services to allows payment acceptance. The API uses XML-RPC and an account is required with service.", 
    "api_name": "ALFAcashier", 
    "progweb_cat": "Payments,Bitcoin", 
    "crawled_date": "2017-06-10T13:59:33.701724"
  }, 
  "152": {
    "link1": "https://github.com/zipmark/rspec_api_documentation", 
    "api_url": "github.com", 
    "link3": "https://github.com/documentationjs/documentation", 
    "link2": "https://github.com/tootsuite/documentation", 
    "progweb_url": "https://www.programmableweb.com/api/fastspring", 
    "progweb_date": "08.08.2013", 
    "progweb_descr": "FastSpring is a complete, cloud-based e-commerce solution for selling digital products worldwide. It provides users with mobile-compatible order pages that can be customized for their brand. Its payment system offers customers a wide variety of payment options and is capable of handling subscriptions, refunds, in-app purchasing, and international tax collection. FastSpring provides download-file hosting for the user's digital products as well as DRM support.  FastSpring can help users manage reseller partners and multiple stores. They also provide consultations in the areas of SEO, affiliate programs, and online marketing. Analytics services, A/B split testing, and a pre-launch testing environment are provided to help users optimize their order pages. Customer surveys are supported as well.  The FastSpring API allows users to retrieve, update, cancel, and renew subscriptions as well as retrieve information on individual orders and generate coupons. These functions are accessible via REST calls issued in XML format.", 
    "api_name": "FastSpring", 
    "progweb_cat": "eCommerce,Payments", 
    "descr3": "skip content features business explore marketplace pricing sign sign watch 44 star 2 790 fork 169 documentationjs documentation code issues 117 pull requests 6 wiki insights pulse graphs documentation modern javascript http documentation js org documentation tool documentation jsdoc javascript babel 874 commits 25 branches 43 releases 51 contributors javascript 81 6 html 7 5 c 6 7 css 4 2 javascript html c css clone download clone https use git checkout svn using web url open desktop download zip find file branch master switch branches tags branches tags anchors links dangerous custom inference v1 dep upgrades greenkeeper babel traverse 6 25 0 greenkeeper babel traverse pin 6 24 1 greenkeeper chokidar 1 7 0 greenkeeper chokidar pin 1 6 1 greenkeeper eslint 4 0 0 greenkeeper flow bin 0 47 0 greenkeeper flow bin 0 48 0 greenkeeper fs extra pin 3 0 0 greenkeeper git url parse 7 0 0 greenkeeper highlight js 9 11 0 greenkeeper jest pin 20 0 3 greenkeeper js yaml pin 3 8 3 greenkeeper remark html 6 0 1 greenkeeper tiny lr 1 0 5 greenkeeper tiny lr pin 1 0 4 greenkeeper vfile 2 1 0 inline destructuring parameter docs master native nothing see special names utf8 test fixture nothing show v4 0 0 rc 1 v4 0 0 rc 0 v4 0 0 beta 19 v4 0 0 beta 18 v4 0 0 beta 17 v4 0 0 beta16 v4 0 0 beta15 v4 0 0 beta14 v4 0 0 beta13 v4 0 0 beta12 v4 0 0 beta11 v4 0 0 beta10 v4 0 0 beta9 v4 0 0 beta7 v4 0 0 beta6 v4 0 0 beta5 v4 0 0 beta4 v4 0 0 beta3 v4 0 0 beta2 v4 0 0 beta1 v4 0 0 beta v3 0 4 v3 0 3 v3 0 2 v3 0 1 v3 0 0 v2 1 0 alpha v2 0 1 v2 0 0 v2 0 0 alpha2 v1 4 0 v1 3 2 v1 3 1 v1 3 0 v1 2 0 v1 1 0 v1 0 7 v1 0 6 v1 0 5 v1 0 4 v1 0 3 v1 0 2 v1 0 1 nothing show new pull request latest commit 65f5a37 jun 8 2017 greenkeeper bot committed tmcw fix \\( package \\) update babel generator version 6 25 0 \\( 804 \\) permalink readme md documentation system modern javascript supports modern javascript es5 es2017 jsx flow type annotations infers parameters types membership write less documentation let computer write integrates github link directly documentation code refers customizable output html json markdown examples html output default template markdown json documentation getting started start usage use documentation js recipes tricks writing effective jsdoc docs node api documentation js 's self generated documentation configuring documentation js faq troubleshooting theming tips theming documentation output html see also list projects similar documentation js user guide globally install using npm package manager npm install g documentation installs command called path point jsdoc annotated source code generate human readable documentation first run option help usage generate markdown docs index js files references bin documentation js build index js f md generate html docs files src bin documentation js build src f html docs document index js ignoring files requires imports bin documentation js build index js f md shallow build serve html docs app js bin documentation js serve app js build serve live update html docs app js bin documentation js serve watch app js validate jsdoc syntax util js bin documentation js lint util js update api section readme md docs index js bin documentation js readme index js section api build docs values exported index js bin documentation js build document exported index js commands serve input generate update display html documentation build input build documentation lint input check common style uniformity mistakes readme input inject documentation readme md options version show version number boolean help show help boolean contributing plenty issues 'd love help robust complete support including typedefs strong support html markdown output documentation coverage statistics validation documentation open open source project means individuals making significant valuable contributions given commit access project contribute see fit project like open wiki standard guarded open source project contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "descr2": "skip content features business explore marketplace pricing sign sign watch 46 star 458 fork 286 tootsuite documentation code issues 13 pull requests 11 projects 0 insights pulse graphs full documentation repository mastodon https github com tootsuite mastodon mastodon 675 commits 2 branches 11 releases 203 contributors agpl 3 0 clone download clone https use git checkout svn using web url download zip find file branch master switch branches tags branches tags master revert 122 patch 1 nothing show v1 1 v1 0 v0 9 9 v0 9 v0 8 v0 7 v0 6 v0 1 2 v0 1 1 v0 1 0 last mastodon state nothing show new pull request latest commit eb317b3 jun 17 2017 foxsan48 committed wxcafe added missing info prod \\( 306 \\) added missing info changed login user creation corrected user creation login hopefully permalink readme md mastodon documentation mastodon free open source gnu social compatible social network server decentralized alternative commercial platforms avoids risks single company monopolizing communication anyone run mastodon participate social network seamlessly using mastodon frequently asked questions list mastodon instances apps user guide using api api documentation libraries streaming api documentation testing api curl oauth details tips app developers push notifications running mastodon please note highly recommended run tagged release mastodon run current branch resources needed production guide docker guide alternative running heroku development guide alternative development vagrant alternative development production nanobox administration guide maintenance tasks tuning mastodon system configuration alternatives contributing mastodon sponsors translate mastodon language report bugs submit ideas protocols list used specs rfcs federation extensions protocols contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "descr1": "skip content features business explore marketplace pricing sign sign watch 26 star 915 fork 229 zipmark rspec api documentation code issues 30 pull requests 8 projects 0 wiki insights pulse graphs automatically generate api documentation rspec 784 commits 4 branches 5 releases 61 contributors mit ruby 67 0 gherkin 26 2 html 5 8 1 0 ruby gherkin html clone download clone https use git checkout svn using web url open desktop download zip find file branch master switch branches tags branches tags gh pages master new dsl rename dsl methods nothing show v4 9 0 v4 8 0 v4 7 0 v4 4 0 5 0 0 nothing show new pull request latest commit 36a0c41 jun 6 2017 oestrich bump version permalink readme md rspec api doc generator generate pretty api docs rails apis check sample changes please see wiki latest changes installation add rspec api documentation gemfile bundle set specs require 'rails helper' require 'rspec api documentation dsl' resource orders get orders example listing orders request status 200 end end end generate docs viewers consider adding viewer enhance generated documentation rspec api documentation generate simple html viewers use generated json raddocs sinatra app apitome rails engine gemfile spec spec helper rb rspecapidocumentation configure config config format json end sample app see folder sample rails app documented configuration options values listed default values rspecapidocumentation configure config set application rack test uses config app rails application output folder config docs dir rails root join \\( doc api \\) array output format \\( \\) possible values json html combined text combined json json iodocs textile markdown append json slate api blueprint config format html location templates config template path inside gem filter example document type config filter filter example document type config exclusion filter nil used adding curl output docs config curl host nil used adding curl output docs allows filter headers needed curl request host cookie set array config curl headers filter nil default settings nil headers shown sometimes chatty setting parameters array headers render headers config request headers include nil config response headers include nil default examples resources ordered description set true keep source order config keep source order false change name api index pages config api name api documentation redefine method dsl thinks client useful need `let` client likely model config client method client change iodocs writer protocol config io docs protocol http define documentation groups well group allows generate multiple sets documentation config define group public config default group 's doc dir subfolder parent group based group 's name config docs dir rails root join \\( doc api public \\) change filter include public examples config filter public end change post body formatted default still override `raw post` json xml proc passed params config request body formatter proc new params params change response body formatted default proc called response content type response body default response content type `application json` pretty formated config response body formatter proc new response content type response body response body change embedded style html output file processed rspecapidocumentation plain css config html embedded css file nil removes dsl method `status` required parameter named status config disable dsl status removes dsl method `method` required parameter named method config disable dsl method end format json generates index file example files json html generates index file example files html combined text generates single file resource used raddocs command line docs combined json generates single file examples json iodocs generates docs style documentation textile generates index file example files textile markdown generates index file example files markdown api blueprint generates index file example files apiblueprint append json lets selectively run specs without destroying current documentation see section append json format cannot run formats delete entire documentation folder upon run format appends new examples index file writes run examples correct folder rake task allows format used easily rspec core raketask new \\( 'docs generate append' spec file \\) task args spec file task args spec file env doc format append json end pattern spec file 'spec acceptance spec rb' rspec opts format rspecapidocumentation apiformatter end env doc format json rspecapidocumentation configure config config format env doc format end rake docs generate append spec acceptance orders spec rb update current index 's examples include file examples inside rewritten api blueprint format \\( apib \\) additional functions apib groups urls together http verbs route orders orders collection get returns orders end delete deletes orders end end n't use param url states rest documentation apib attributes besides parameters use attributes exactly like 'd use \\( see documentation \\) filtering exclusion rspec api documentation lets determine examples get outputted final documentation filtering done via metadata key tag examples either single symbol array symbols also false make sure get outputted resource account get accounts parameter page page view default document example get list accounts request status 200 end n't actually document example purely testing purposes example get list page 2 document false request \\( page 2 \\) status 404 end example request ca n't change document example request get list page 3 page 3 status 404 end end post accounts parameter email user email example creating account document private request \\( email eric example com \\) status 201 end example creating account errors document private developers request status 422 end end end documents generated top folder document false examples never generated rspecapidocumentation configure config exclude document examples marked 'private' config define group non private config config exclusion filter private end document examples marked 'public' config define group public config config filter public end document examples marked 'developer' config define group developers config config filter developers end end dsl require dsl beginning acceptance spec rb file make sure require following pull dsl definitions require 'rspec api documentation dsl' example group methods resource create set documentation examples go together acts describe block resource orders end get head post put delete patch method sent along url resource orders post orders end get orders end head orders end put orders id let \\( id \\) order id example get order path orders 1 ` id` replaced value `id` end end delete orders id end patch orders id end end example rspec 's built example method hook metadata surrounding could also used resource orders post orders example creating order request make assertions end end end example request example except calls first step assertions required block similar pass hash last parameter passed along extra parameters become metadata like resource orders parameter name order name post orders example request creating order name name make assertions end end end explanation method takes string representing detailed explanation example resource orders post orders example creating order explanation method creates new order request make assertions end end end resource also explanation resource orders explanation orders top level business objects created post request post orders example creating order explanation method creates new order request make assertions end end end header method takes header name value value string symbol symbol symbol allowing header values resource orders header accept application json header x custom custom header let \\( custom header \\) dynamic get orders example request headers headers accept application json x custom dynamic end end end parameter method takes parameter name description optional hash extra metadata displayed raddocs extra columns method parameter name exists e g send returned value server url encoded data special values display red show 's required scope parameters hash scoping nested see example use specified method parameter value retrieving parameter value goes several steps option defined test case responds method method used test case responds scoped method method used overwise unscoped method used resource orders parameter auth token authentication token let \\( auth token \\) user authentication token post orders parameter name order name required true scope order parameter item order items scope order parameter item id item id scope order item method custom item id let \\( name \\) order let \\( order name \\) order let \\( item id \\) 1 let \\( custom item id \\) 1 let \\( order item item id \\) 1 example creating order params eq \\( order name order item item id 1 auth token auth token \\) end end end response field method takes response field name description optional hash extra metadata displayed raddocs extra columns special values scope response field hash resource orders response field page current page get orders example request getting orders expect \\( response body \\) eq \\( page 1 json \\) end end end also group metadata using options factor duplications resource orders post orders options scope order required true parameter name order name parameter item order items end options scope order response field id order id response field status order status end let \\( name \\) order let \\( item id \\) 1 example creating order expect \\( status \\) 201 end end end callback complicated see relish docs trigger callback pass method block evaluated cause application make request example methods callback url defines destination callback example see relish docs client returns test client makes requests documents responses resource order get orders example listing orders create order via api instead via factories client post orders order hash request status 200 end end end callback evaluate block passed cause application test make callback request see relish docs request sends request app parameters headers defined resource order get orders example listing orders request status 200 end end end doc wish make request via client included documentation inside doc block resource order get orders example listing orders doc create order via api instead via factories n't document client post orders order hash end request status 200 end end end params get hash parameters sent see documentation example header method takes header name value resource orders header accept application json end get orders example request headers headers accept application json end end end headers returns headers sent request see documentation example response body returns string containing response body previous request resource order get orders example listing orders request response body name order 1 json end end end response headers returns hash response headers previous request resource order get orders example listing orders request response headers content type application json end end end status response status returns numeric status code response eg 200 alias status status commonly parameter resource order get orders example listing orders request status 200 response status 200 end end end query string data sent query string instead post data used get requests resource orders parameter name let \\( name \\) order get orders example list orders query string name orders end end end raw post completely override gets sent parameters ing resource orders header content type application json parameter name let \\( name \\) order post orders let \\( raw post \\) params json example request create new order params get sent json end end end rake task gem contains railtie defines rake task generating docs easily rails loads files rake docs generate using rails use rake following task require 'rspec core rake task' desc 'generate api request documentation api specs' rspec core raketask new \\( 'docs generate' \\) pattern 'spec acceptance spec rb' rspec opts format rspecapidocumentation apiformatter end require 'rspec api documentation' load 'tasks docs rake' using rake rspec spec acceptance format rspecapidocumentation apiformatter uploading file example uploading file see gotchas rspec api documentation relies variable test client define please configure rspec api documentation use another one see configuration make heavy use rspec metadata actually use entire gem without dsl hand write metadata must use etc access data last response able use response object created contact github api training shop blog 2017 github inc terms privacy security status help ca n't perform action time signed another tab window reload refresh session signed another tab window reload refresh session", 
    "crawled_date": "2017-06-10T13:59:33.702857"
  }, 
  "155": {
    "api_url": "birdback.com", 
    "progweb_url": "https://www.programmableweb.com/api/birdback", 
    "progweb_date": "08.20.2013", 
    "progweb_descr": "Birdback is an app platform for payment cards providing a card-linked loyalty solution for financial institutions and the development opportunity for apps that consumers can add to their payment cards to be executed at the point of sale. Potential uses could include digital receipt generation, social network check-ins, or rewards. Birdback access is through a RESTful API supporting the development of card-linked applications.  Birdback is first in Europe to let retailers, affiliates and publishers link in-store cashback, vouchers and loyalty schemes directly to customers\u00e2\u20ac\u2122 payment cards.  As a result, adoption is many times greater and marketers can gather a more detailed picture of their audience.", 
    "api_name": "Birdback", 
    "progweb_cat": "Payments,Credit Cards", 
    "crawled_date": "2017-06-10T13:59:33.699447"
  }, 
  "154": {
    "api_url": "cloudzync.com", 
    "progweb_url": "https://www.programmableweb.com/api/cloudzync", 
    "progweb_date": "08.13.2013", 
    "progweb_descr": "CloudZync is a mobile wallet provider. CloudZync offers a mobile wallet application that allows users to pay with their mobile and redeem vouchers and coupons at merchants. Merchants can accept CloudZync at their locations and for their services.  The CloudZync API allows developers to access and integrate the functionality of CloudZync with other applications. Public documentation is not available; interested developers should sign up here for API access: cloudzync.com/partner/.", 
    "api_name": "CloudZync", 
    "progweb_cat": "Payments,Mobile", 
    "crawled_date": "2017-06-10T13:59:33.700521"
  }, 
  "157": {
    "api_url": "payzippy.com", 
    "progweb_url": "https://www.programmableweb.com/api/payzippy", 
    "progweb_date": "08.23.2013", 
    "progweb_descr": "PayZippy is an online payment service for merchants. PayZippy allows merchants to integrate payment processing functionality with their online stores, websites, and applications.   The PayZippy API allows developers to access and integrate the functionality of PayZippy with other applications. Public documentation is not available; interested developers should contact contactus@payzippy.com for more information. API access comes with merchant account service.", 
    "api_name": "PayZippy", 
    "progweb_cat": "Payments,Sales", 
    "crawled_date": "2017-06-10T13:59:33.696438"
  }, 
  "156": {
    "api_url": "powa.com", 
    "progweb_url": "https://www.programmableweb.com/api/powa", 
    "progweb_date": "08.21.2013", 
    "progweb_descr": "Powa is an eCommerce and mobile commerce solution provider. Powa provides online and mobile sales platforms for companies, vendors, retaillers, and other organizations in need of online sales capabilities.  The Powa API allows developers to access and integrate the functionality of Powa with other applications. Public documentation is not available; interested developers should sign up for a developer account: http://www.powa.com/page/Developers+%26+agencies.", 
    "api_name": "Powa", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:33.698078"
  }, 
  "159": {
    "api_url": "gharpay.in", 
    "progweb_url": "https://www.programmableweb.com/api/gharpay", 
    "progweb_date": "08.26.2013", 
    "progweb_descr": "Gharpay is an doorstep cash payment network based in Hyderabad, India. The company offers its services to online merchants whose customers choose to make a cash payment for online transactions. Payments are collected within 24 hours, and settled with 48 hours.   Gharpay offers an API for pushing order information and tracking order statuses. API methods include createOrder, cancelOrder, cancelProductsFromOrder, viewOrderDetails, getCityList, getPincodesInCity, isCityPresent, and more.", 
    "api_name": "Gharpay", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:33.694230"
  }, 
  "158": {
    "api_url": "instamojo.com", 
    "progweb_url": "https://www.programmableweb.com/api/instamojo", 
    "progweb_date": "08.26.2013", 
    "progweb_descr": "Instamojo is a simple payment system that lets users sell digital creations directly to customers simply by sharing a link. Instamojo provides an out-of-the-box e-commerce framework and takes care of all of the details, from payment to delivery. All the user needs to do is share their link with an audience.  Instamojo offers a REST API for programmatic access to Instamojo services. Use the API to create new offers, edit existing offers, query your own offers, and archive an offer. Registrationand an app ID are required.", 
    "api_name": "Instamojo", 
    "progweb_cat": "Payments,eCommerce", 
    "crawled_date": "2017-06-10T13:59:33.695176"
  }, 
  "399": {
    "api_url": "tokenly.com", 
    "progweb_url": "https://www.programmableweb.com/api/tokenly-bitsplit", 
    "progweb_date": "01.09.2017", 
    "progweb_descr": "This API allows you to get crypto tokens without a manual transaction sent from your wallet.  It is a forwarding service that allows you to make a single transaction and receive an email notification when your entire distribution list has received their tokens.   Tokenly gives acces to Tokens, a digital representation of exchange for trading cards, songs, movies, games, loyalty points, memberships and more.", 
    "api_name": "Tokenly Bitsplit", 
    "progweb_cat": "Cryptocurrency,Payments", 
    "crawled_date": "2017-06-10T13:59:23.070676"
  }, 
  "398": {
    "api_url": "equitybankgroup.com", 
    "progweb_url": "https://www.programmableweb.com/api/equitybank-transaction", 
    "progweb_date": "01.09.2017", 
    "progweb_descr": "The EquityBank Transactions API integrates payment into banking applications. With JSON as formar and token as authentication, developers can purchase airtime, transfer money, get payment status, and create merchant payments.", 
    "api_name": "EquityBank Transaction", 
    "progweb_cat": "Banking,Merchants", 
    "crawled_date": "2017-06-10T13:59:23.071810"
  }, 
  "48": {
    "link1": "https://www.moneta.ru/doc/MONETA.Assistant.en.pdf", 
    "api_url": "moneta.ru", 
    "link2": "https://www.moneta.ru/doc/MONETA.MerchantAPI.v2.en.pdf", 
    "progweb_url": "https://www.programmableweb.com/api/moneta", 
    "progweb_date": "10.17.2012", 
    "progweb_descr": "The Russian-language service provides online payment processing for e-commerce and other exchanges. It frees a seller to handle all aspects of product display and merchandising then interface with the web service to complete payment transfer and conclude a transaction. In addition to balance transfers, the service provides status messages at each stage to move a buyer through the purchase process.  API methods support debits against a buyer's account and credits to the seller's account, once the buyer has completed selection and entered the payment process. Methods also support refunds from seller to buyer, collection and reporting on user statistics, filterable summaries of transactions processed, and detailed information about a particular transaction.", 
    "api_name": "Moneta", 
    "progweb_cat": "Payments,Russian", 
    "descr2": "", 
    "descr1": "", 
    "crawled_date": "2017-06-10T13:59:38.014169"
  }, 
  "49": {
    "link5": "https://bitpay.com/help-api", 
    "link4": "https://bitpay.com/merchant-help", 
    "link1": "https://bitpay.com/docs/", 
    "api_url": "bitpay.com", 
    "link3": "https://bitpay.com/docs/billing", 
    "link2": "https://bitpay.com/downloads/bitpayApi.pdf", 
    "progweb_url": "https://www.programmableweb.com/api/bitpay-payment-gateway", 
    "progweb_date": "10.21.2012", 
    "progweb_descr": "Bitpay is an online payment service that uses bitcoins. Users can submit orders in over 30 currencies, display payment instructions, receive payment notifications, and receive payouts to banks in 9 countries. The BitPay API allows users to create an invoice, fetch an invoice status, and receive invoice status updates. The service uses REST calls and will return JSON. SSL and an API keys are used for authentication.", 
    "api_name": "BitPay Payment Gateway", 
    "progweb_cat": "Payments,Bitcoin", 
    "descr5": "features merchant help documentation payment gateway api help payment api documentation bitpay api designed merchants need full control customers shopping checkout experience api interactions create invoice fetch details invoice receive invoice status updates", 
    "descr4": "merchant help center step step guides documentation different bitpay payment tools internet payment tools advanced ecommerce tools support resources", 
    "descr3": "bitpay accept bitcoinwalletcarddocslog insign upaccept bitcoinwalletcarddocslog insign updocumentationgetting startedselling onlineselling personbanking settlementsuse casesemail billingdonationsdevelopmentcreating invoicesdisplaying invoicesinvoice callbacksinvoice statestestingrest apiresourceshow pay bitcoinwallet comparisonbitpay exchange ratehelp supportintegration guidesselect integration commerce seodrupal commerceingenicomagentooscommerceopencartprestashopshopifyvirtue martwp ecommercewoocommercewordpressxcartzencartbillingbitpay merchants use bitcoin billing tools invoice receive payment ease sending email sign bitpay account get started email invoicessend bitcoin invoices clients via email one time recurring basis enter preferences billing information simple form merchant dashboard click generate send bill plug ins integrationswe 've built bitcoin invoicing integrations several popular billing services plug ins bitpay twitter ico created sketch facebook ico created sketch linkedin ico created sketch help supportexchange ratesbusinessesaccept bitcoinintegrationsdocumentationpricingpayoutsindividualspay bitcoinbitpay cardbitpay card faqsbitpay walletdevelopersdeveloper docsbitcoreinsightopen sourcecompanyaboutteampressblogterms useprivacy policy", 
    "descr2": "", 
    "descr1": "bitpay accept bitcoinwalletcarddocslog insign upaccept bitcoinwalletcarddocslog insign updocumentationgetting startedselling onlineselling personbanking settlementsuse casesemail billingdonationsdevelopmentcreating invoicesdisplaying invoicesinvoice callbacksinvoice statestestingrest apiresourceshow pay bitcoinwallet comparisonbitpay exchange ratehelp supportintegration guidesselect integration commerce seodrupal commerceingenicomagentooscommerceopencartprestashopshopifyvirtue martwp ecommercewoocommercewordpressxcartzencartgetting startedbitpay 40 bitcoin integrations make accepting bitcoin payments fast reliable get started sign bitpay account accepting bitcoin paymentwith bitcoin 's sensitive customer information collect store cards charge customers simply send bitcoin computer mobile device directly bitcoin payment address received bitpay converts bitcoin preferred currency adds full amount payment next bitpay account settlement funds deposited bank account bitcoin address accept bitcoin variety ways choose method get started online paymentsbitcoin makes online payment experience simple convenient customers device customers pay two taps sensitive personal information needed e commerce platform integrationsaccepting bitcoin partner platforms easy flipping switch view full list integrations details shopping cart plug insif 're using one leading open source shopping cart software solutions probably integration use plug ins add bitcoin payments online checkout website payment buttonsgenerate payment buttons website directly merchant dashboard code wrangling required copy embed page store paymentsmerchants use bitpay 's retail payment tools alongside traditional point sale systems create faster hassle free checkout experience customers staff point sale integrationsmerchants using partner point sale providers activate bitcoin payments clicks bitcoin checkout appbitcoin checkout used accept bitcoin payments ios android smartphone tablet donationsnonprofits get running start bitcoin contributions donation buttons hosted donation pages donation buttonsbitpay 's donation buttons make simple accept contributions organization 's website hosted donation pagesbitpay create host customizable donation webpage organization billingour bitcoin billing tools allow merchants invoice receive payment services goods time flat email billingyou use dashboard billing tool create email bitcoin invoices clients snap bills scheduled one time recurring payments billing service integrationswant add bitcoin invoicing current billing platform plug \\? 've built integrations top business billing accounting services mobile app paymentsbitpay 's mobile sdks used build app payment functionality major platforms bitpay twitter ico created sketch facebook ico created sketch linkedin ico created sketch help supportexchange ratesbusinessesaccept bitcoinintegrationsdocumentationpricingpayoutsindividualspay bitcoinbitpay cardbitpay card faqsbitpay walletdevelopersdeveloper docsbitcoreinsightopen sourcecompanyaboutteampressblogterms useprivacy policy", 
    "crawled_date": "2017-06-10T13:59:38.011766"
  }, 
  "46": {
    "link1": "http://www.easyach.com/achprocessing/gateway.html", 
    "api_url": "easyach.com", 
    "progweb_url": "https://www.programmableweb.com/api/easyach-paycenter", 
    "progweb_date": "10.13.2012", 
    "progweb_descr": "EasyACH is a payment processing service that allows users to accept payments from customers using bank accounts and cease the use of paper checks. The EasyACH Paycenter API enables users to add, edit, and view bank accounts, add cancel and view subscriptions for re-occurring payments, star debits, credits, cancel transactions, refund payments and perform various other functions. The API uses REST calls and returns XML.", 
    "api_name": "EasyAch Paycenter", 
    "progweb_cat": "Payments,Credit Cards", 
    "descr1": "easyach home solutions ach payments direct deposit checkid gateway gateway developer corner support apply gateway receivepay \\? receivepay another virtual terminal 's z billing solution business completely designed house easyach programmers receivepay allows automate simplify businesses billing simultaneously reducing fraud checkid securely storing bank account information consumer authorization documents receivepay offers easy understand yet user friendly interface xml api advanced integrations much look receivepay features 're ready request access live demo account features recurring billing subscriptions receivepay helps business fully automate billing payment plans recurring cost automatically debit credit u bank account schedule choosing daily weekly monthly annual schedules available try secure authorization document storage upload customers authorization forms rackspace cloud directly receivepay never worry storing documents file cabinets try xml developer api integrate existing billing crm pay center keep business running smoothly functions receivepay available comprehensive xml api view documentation screenshot gallery dashboard bank accounts login management virtual terminal transactions settings test drive \\? request access live demo account take receivepay test drive right easyach 2016 easyach com toll free \\( 866 \\) 927 7180 choose easyach \\? start finish trained representatives side assist making sure employees know make ach work business powerful fraud screening tools 1 00 discount rate easyach obvious choice reliable secure ach payment processing site map", 
    "crawled_date": "2017-06-10T13:59:38.016949"
  }, 
  "47": {
    "link1": "http://www.yootles.com/yootles.pdf", 
    "api_url": "yootles.com", 
    "link3": "http://www.yootles.com/", 
    "link2": "http://yootles.com/api.html", 
    "progweb_url": "https://www.programmableweb.com/api/yootles", 
    "progweb_date": "10.16.2012", 
    "progweb_descr": "Yootles is a group prediction and decision making mechanism that also includes a system for establishing social IOUs. Yootles uses a REST-style API to allows users to integrate the IOU service into other applications and make calls remotely to send, update, and track IOUs between users. An account is required with service, and an API Key must be obtained to use the API.", 
    "api_name": "Yootles", 
    "progweb_cat": "Social,Payments", 
    "descr3": "yootles com mechanisms group prediction decision making yoo tle \\( ytl \\) tl key \\( variants util utile \\) noun hypothetical unit utility happiness yootles dormant progenitors working beeminder messy matters start using yootles \\( web phone interface yootles auctions \\) yootles api documentation yootles blog yootles api command line tool perl mathematica \\( notebook \\) java python php ruby c issue paper yootles \\( thanks erica soule \\) yootopia paper trust networks paper test ledger typo bug bounty five yootles \\( 5 \\) per typo find paper email bugs yootles com another airport auction buy dan 's meal card cafe around corner new york office email info yootles com details bethany 's airport auction \\( closed congrats monica \\) guinea pigs yootles com \\( closed congrats erica janine martin \\) selling 3 twenty dollar bills \\( closed congrats bethany janine kevin \\) yahoo hack exchange \\( yahoo prediction market hack day hacks internal access \\) yahoo hack day voting \\( yahoo internal access \\) yootopia bazaar \\( yahoo buying selling internal access \\) vcg voting \\( currently used private voting feel free spectate contact info yootles com set new vote \\) public bazaar \\( list goods services buy sell yootles look need get yootle debt \\) daniel reeves yahoo research", 
    "descr2": "\\( original author \\) karl berry olaf bachmann many others maintained many creative people send bugs suggestions yootles social iou system pdf version document available http yootles com api pdf 1 yootles system yootles system declaring ious people social network designed allow people jot paid dinner transactions people often want forget keep track 's useful much used things like tracking rent payments sharing utility bills even tracking interest personal loans supports non monetary currencies yootles fact refers seminal currency system abstract measure happiness utility used suite forthcoming applications including voting wagering various incentive mechanisms next incarnation yootles iou system support arbitrary iou routing \\( see http yootles com trustnets pdf \\) current version supports bilateral accounting ious advanced accounting features always possible export transaction history open format never tied particular implementation \\( would n't use flickr without assurance could always retrieve photos yootles treats ious way \\) fact ious always stored exactly type always independently verify everything yootles system tells accounts balances 1 1 yootles accounts vs yootles users user person logs yootles system account entity issue receive ious user may several accounts perhaps subaccounts keep track different spending categories accounts friends actual users system accounts may also created purposes charity fundraising n't tied particular user accounts specified account group account name within group separated colon \\( e g smithfamily alice \\) new users creating first accounts need know concept groups case default account created making group name username account name user 's initial \\( \\) first name e g alice ac alice alice note group names must globally unique account names must unique within groups example entirely distinct accounts default users access accounts simply issuing iou nonexistent account creates account describe open access philosophy limit along relationships users accounts \\( see section access control \\) 1 2 ious basic iou simple transfer one account another call atomic iou yootles also supports two generalizations repeating ious multilateral ious fundamentally ious broken atomic ious yootles store way \\( 1 \\) would clutter transaction history fact additional information implicit fact iou came repeating multilateral iou would lost ious atomized user 's point view settlement opposite iou yootles system however conception settlements someone makes good \\( settles \\) past iou recorded simply another iou opposite direction leave user interface add whatever layer deemed appropriate make intuitive \\( note invariably trips people \\) 1 3 repeating ious repeating iou specifies time interval iou automatically repeats e g every 2 weeks ious repeat indefinitely end specified time end time specified taken time last iou rather time ious generated last repeated iou prorated amount time last iou end time compared repeat interval example 60 iou repeats semiannually issued 2008 january 1 ending 2009 april 1 atomized 60 2008 jan 1 60 2008 jul 1 \\( 6 months later \\) 30 2009 jan 1 \\( another 6 months later 3 months till ious stop \\) note consistent interpretation end date end date coincides last iou date last payment prorated zero reason interpretation end date preserves property total amount paid divided elapsed time start end always exactly equal iou amount user interfaces may want highlight prorated amount last payment avoid confusion api makes easy \\( 2 \\) 1 4 multilateral ious multilateral ious ious shared set accounts instead specifying single issuer account recipient account either may set accounts specified mathematical expressions accounts treated variables corresponding coefficients indicate proportions iou amount split issuers recipients turns simple elegant way specify group ious following examples illustrate e alice nets 10 bob nets 20 carol nets 30 e alice nets 10 bob nets 10 carol nets 10 deb nets 10 following example alice bob dinner alice orders 7 dish bob 9 dish bill tax tip comes 20 chip 10 net effect 1 25 bob alice precise amount allocating tax tip proportional meal costs bob owes alice put share 10 instead 7 16 20 meal \\) last example shows 're used powerful perhaps initially intimidating language expressing track complicated multilateral ious specifying concisely nature events occasioned turn valuable various yootles decision prediction mechanisms interfaces sugar coat underlying language various ways less sophisticated users initial release yootles facebook application full power multilateral ious exposed 1 5 currencies currencies created anything hours babysitting borrowed books beers ounces gold points kudos even course units happiness currencies publicly available everyone thing private currency obscure ones yootles system track exchange rates currencies tracks balances currency dealt keeps entirely separate 1 6 interest every pair accounts every moment time interest rate \\( applies currencies \\) causes positive balances become positive negative balances become negative \\( vice versa interest rate negative allowed \\( 4 \\) \\) anyone issue ious accounts \\( see access control section \\) change interest rate account pair time interest rates also changed retroactively 1 7 credit every directed pair accounts credit limit currency initially zero example alice state trusts bob 10 yootles meaning willing issue iou 10 yootles exchange receiving iou bob amount assuming interest rate differential unfavorable credit limits basis automatic iou routing \\( see http yootles com trustnets pdf \\) credit limits specified current yootles system automatic iou routing done \\( 5 \\) 1 8 access control explained strict conceptual separation yootles accounts users back end processing done strictly terms accounts users manipulate accounts according access policy specifically six flags specify given user 's relationship given account \\( use running example representative user accessing account \\) root access account means able change access settings users user root access original creator root status conferred another root user definition root users change flag one exception user root access account \\( e sole root user revoked root access \\) account considered orphan user set root access \\( thus safer transfer root access setting new user revoking old user \\) view access account means able view ious involving account example true view ious involving root users change flag control access account means able issue ious account access issue ious note default users accounts root users change flag set true user account pair indicates account user 's main account designating account 's main account means one referred special account designating syntax alice e square brackets around username syntactic sugar main account user anyone access make account main account unless already main account someone else user need main account \\( wo n't one choose create one \\) case using square bracket designation user treated error field typically treated boolean fact set real number 0 1 0 \\( mine \\) interpreted false 1 \\( mine \\) true user setting x account means fraction x account 's balance included user 's net balance conceptually field indicates fraction account belongs user interpretation settings users given account sum one though enforced example 1 account treated 's subaccount included 's net balance anyone access make account subaccount \\( degree \\) notify access account means receive notifications account receives issues iou \\( e g would notified whenever receives issues iou \\) root users change flag except anyone turn notifications e unsubscribe following constraints hold among flags \\( always able view control main account \\) 0 \\( always control subaccounts \\) 1 \\( main account always show net balance \\) note imply \\( default access possible access access account \\) also note imply since anyone claim account main account subaccount means might want permission still ask permission change access others notification critical liberal access policy evil eve issue ious random accounts day long users manage accounts quickly repudiate finally consider case user creating account bob currently user setup required alice 's part issuing iou automatically creates account instead addition specifying account name front end using yootles api may allow alice specify bob 's email address case system create new user new account bob invite bob claim account bob change username account name wants \\( 6 \\) one account interface keep blissfully ignorant concept multiple accounts \\) following flags set alice bob new account \\( 'll continue refer simplicity \\) user account yes \\( since alice created account \\) yes yes \\( default users accounts \\) 0 yes user \\( though bob yet username \\) account yes \\( since alice specified new user account assume means confer root status \\) yes yes \\( bob set account main account \\) 1 yes \\( moot alice provide email address bob \\) future versions yootles may support richer language blocking classes users 2 use cases 2 1 issuing ious facebook users yootles facebook application currently primary client yootles api suppose alice facebook user installed yootles application alice would like give bob iou system prompt alice choose yootles username \\( auto generated default available based full name \\) nickname defaulting initials \\( possibly even single initial \\) suppose username alice nickname alc system creates username creates account alice 's main account note although group created process alice never need know concept groups long remains casual user next alice enters amount short string giving reason iou selects friend bob recipient via usual start typing friend 's name interface complicated ious issued setting fields everything except amount recipient reason reasonable defaults \\( see section \\( adding modifying iou \\) details \\) bob main account already say system uses alice sees transaction history entry like 123 `lunch' 2007 12 04 \\( possibly alice group prefix redacted \\) otherwise alice prompted choose nickname bob say bob system use construct account bob using alice 's group e g case reason show group prefixes alice sees entry like 123 `lunch' 2007 12 04 bob notified alice given iou \\( alice \\) link edit delete \\( 7 \\) system requires action bob carol might go process alice leaving bob two accounts accounts marked belonging bob \\( via field access table \\) neither marked main account unless chooses one create new account altogether consolidate balances close accounts \\( see section \\( merging renaming accounts \\) \\) 2 2 issuing iou facebook someone facebook case similar previous one instead selecting bob via facebook style interface alice supplies email address bob system checks yootles user email address whether user main account email address required otherwise alice chooses nickname bob process continues new user created bob whatever contact information email address alice provided alice also use process without providing email address contact information bob case account created bob amounts merely subaccount alice 's bob may may end taking control future notifications bob receives something like alice given iou click take control account click stop receiving notifications nothing prevents alice issuing iou bob well \\( equivalent negative iou bob \\) case notification alice marked owing click take control account \\( edit repudiate iou \\) click stop notifications 2 3 fund raising yootles dan announces friends fund raising american lung association \\( ala \\) anyone would like donate yootles transfer account \\( 8 \\) yootles exchange rate real money dan pledges friends however many yootles end account donate many dollars ala \\( transfer yootles \\) effect friends promising influence decisions potential bragging rights wagers forms yootility exchange donation worthy charity 2 4 shared water bill housemates create common group easily shared accounting within group \\( well people outside \\) multilateral ious useful suppose housemates accounts typical iou might entered 100 ` 3' `water bill bob paid carol used 3 times much water anyone else' group previous sections multilateral ious repeating ious \\( useful rent payments \\) details group accounting \\( see section ious \\) note kind group accounting require buy members found typically minority people group motivated track ious almost everyone happy included long n't relied upon anything default accounts open anyone view issue ious ious repudiable access tightened deemed necessary 2 5 renaming account account names like treated unique identifiers yootles account numbers means process renaming account convoluted interface mask describe underlying process suppose bob account wants rename merge 's balances zero bob root access revoke everyone else 's access simply abandon way actually delete entries may still exist people 's transaction histories one nonzero balances renaming consists transferring balances say alice owes 8 yootles issuing iou alice 8 yootles zero alice balance issue iou 8 yootles alice alice owes instead repeat 's balances zero \\( optionally \\) revoke access \\( 9 \\) process ca n't entirely hidden end users least users balances see two new ious one zeroing one creating balance serves natural way inform concerned account name changes bob 's perspective process automated api provides command \\( see section \\( merging renaming accounts \\) \\) encapsulating steps zeroing balances old account transferring new account \\( note nothing prevents new account already existing balances \\) 3 data structures yootles fundamental data structures accounts account groups ious interest credit currencies given followed data structures users \\( people log yootles system \\) aliases \\( e g facebook id email address \\) access control \\( accounts \\) subset underlying database schema data types given parentheses timestamps integers specifying number seconds since 1970 01 01 00 00 00 gmt e unixtime database pointers realized integer ids 3 1 data structures related accounts ious account group name prefixed account name creating namespace related set accounts fields data structure group name group description \\( string \\) name account group e g jets reevesfamily \\( string \\) text field describing group account \\( confused user \\) represents entity issue receive ious extend accept credit etc \\( pointer \\) group account belongs \\( string \\) account name e g alice bob mom note combination must globally unique cannot changed \\( string \\) text field describing account currencies include yootles real money time even non commodity items books \\( wanted keep track books lent friends \\) \\( string \\) symbol currency initial values ytl usd inr beer \\( string \\) name currency initial values yootles us dollars indian rupees canadian dollars beers \\( string \\) text field describing currency raw ious may encompass multilateral ious repeating ious stored way corresponds directly prompted issuing iou \\( see section \\( adding modifying iou \\) \\) \\( string \\) amount iou stored mathematical expression matching \\( \\) evaluating number \\( string \\) \\( 10 \\) account \\( \\) issuing iou stored mathematical expression symbols account names \\( string \\) \\( 11 \\) account \\( \\) receiving iou format accounts prefixed account name \\( e g yooniversal alice \\) use group specified \\( timestamp \\) \\( 12 \\) date time iou \\( need actually issued \\) \\( 13 \\) \\( string \\) text field giving short reason iou \\( real \\) often iou automatically repeat \\( period frequency \\) default 1 meaning n't repeat \\( day week month year \\) unit measure e g 1 2 year means repeat twice year \\( semiannually \\) \\( timestamp \\) time auto repeats \\( last repeated iou falls time prorate last iou \\) default 1 meaning forever \\( pointer \\) currency defaults yootles \\( 14 \\) \\( pointer \\) account group issuer recipient accounts part n't specify groups explicitly allows accounts specified name instead group name default yooniversal \\( pointer \\) iou iou replaces default 1 meaning n't replace anything atomic ious raw ious expanded bilateral non repeating ious atomic ious also created keep track interest payments atomic ious reconstructed raw ious interest rates \\( real \\) amount atomic iou \\( pointer \\) \\( 15 \\) account issuing iou \\( pointer \\) \\( 16 \\) account receiving iou \\( timestamp \\) \\( 17 \\) date time atomic iou \\( pointer \\) raw iou corresponds atomic iou automatically generated interest ious field set null data structure used specify interest rate pair accounts given time note interest rates undirected e g cannot different interest rates \\( pointer \\) first account \\( pointer \\) second account \\( real \\) interest rate stored fractional annual rate percent e g 0 05 5 \\( timestamp \\) interest rate goes effect \\( interest rates apply new entry begins \\) note allow setting whole historical interest timetable changing interest rate time data structure used specify credit limits \\( trust \\) accounts credit limits directed e need symmetric pair accounts \\( pointer \\) account issuing credit \\( pointer \\) account receiving credit \\( real \\) credit limit \\( pointer \\) currency line credit 3 2 data structures related users accounting done terms data structures previous section strict conceptual separation users accounts following data structures pertaining users data structure stores usernames passwords users \\( string \\) username user accesses yootles system note need connection name names accounts user access \\( string \\) user 's password stored md5 hash password plus salt alias type attribute user specifying another identifier \\( besides username \\) user example real name email address alias types \\( string \\) symbol alias type one username realname email yahoo aol msn phone 4info icq google facebook \\( string \\) name type e g yahoo messenger \\( string \\) description data structure gives attribute value pair user \\( attribute given \\) order specify alternate identifier user facebook id email address \\( 18 \\) \\( pointer \\) user \\( pointer \\) alias type \\( string \\) actual alias specified type e g bob bob com 12345 bob smith bobmeister12 data structure encodes ways given user allowed access given account \\( pointer \\) user \\( pointer \\) account \\( boolean \\) whether user change flags users \\( boolean \\) whether user view ious account \\( boolean \\) whether user issue ious account defaults true users accounts \\( boolean \\) whether main account user \\( note implies \\) \\( 19 \\) \\( real \\) fraction account 's net balance included user 's net balance typically 0 1 \\( boolean \\) whether user get notified ious account 4 yootles api yootles api calls made either specific yootles user specifies yootles username \\( hashed salted \\) password call behalf specific yootles user trusted application provides application specific user alias \\( hashed salted \\) application key every call cases api calls rest style http contrary true rest http status code always set 200 \\( success \\) application level errors indicated api output \\( see section api output \\) \\( 20 \\) standard uri encoding used urls spaces may mapped either 20 alphanumeric characters well certain characters need escaped character course must escaped since otherwise decoded space current beta period api accessed following url instead yootles com http is002 yrl re4 yahoo com 4 1 api calls users following template api command caller knows yootles username \\( call invoking user \\) password http yootles com api \\? cmd command invoker username timestamp timestamp key key additional attr val pairs making arguments command example example call issue simple iou alice bob \\( see section \\( adding modifying iou \\) \\) http yootles com api \\? cmd owe amt 5 alice ac bob b lunch invoker alice timestamp 1179548280 key 289fe8ab2b3c2c19 next chapter present api calls abstracted form example write alice owe \\( amt 5 alice ac bob b lunch \\) generally username command \\( attr val attr2 val2 \\) indicates command called given named parameters call invoked username additional fields \\( well described next subsection \\) left implicit abstracted form field gives unixtime call issued field must calculated md5 \\( \\) user 's password \\( ` string concatenation \\) hashing timestamp allowing old timestamps system limits replay attacks 4 2 api calls trusted applications suffices applications know usernames passwords user example use api calls like interact accounts ious programmatically also allow access trusted applications \\( cannot \\) know individual users' yootles passwords nonetheless allowed perform actions behalf users yootles system maintains mapping identifiers various services \\( including facebook ids yahoo messenger aim screen names email addresses phone numbers sms etc \\) trusted application need provide username identifier service example facebook numerical facebook id user make api call follows http yootles com api \\? cmd command invoker facebook facebookid app appname timestamp timestamp key key anyone apply application name \\( \\) key \\( \\) emailing api yootles com field calculated md5 \\( \\) since application uses facebook 's authentication trusted yootles password user whose behalf call made need provided note facebook application must first create yootles user \\( see section \\( creating new users \\) \\) associate facebook id existing yootles user \\( see section \\( creating updating querying user aliases \\) \\) may use convention chooses \\( e g firstnamelastname \\) command indicates availability usernames users later change usernames \\( see section \\( updating querying users \\) \\) user using facebook application exclusively need never even know yootles username \\( 21 \\) applications analogous facebook example example messenger bot application makes api calls form http yootles com api \\? cmd command invoker yahoo yahooid app yimbot timestamp timestamp key key md5 \\( \\) besides facebook yahoo messenger additional types interfaces including email bot \\( email \\) sms bot \\( 4info \\) finally allow api called consistent syntax even calls users instead applications namely http yootles com api \\? cmd command invoker username username app raw timestamp timestamp key key fact slightly simpler syntax given previous section syntactic sugar general format 4 3 api output specify additional field choose output format set default \\( 22 \\) output formats described next subsection api calls return set labeled values including status code human readable message formatted json api output look like status code message message additional attr val pairs one following 200 success 400 syntax error malformed incorrect arguments 401 authorization error invoking user authorized perform operation 402 general error exception 404 user account etc found 408 request timed 500 fatal error 501 yet implemented human readable output command \\( useful command line interfaces messenger bot also providing explanation case error \\) come additional attribute value pairs specific individual command arguments commands output detailed next chapter 4 3 1 output formats following hypothetical response captures structure various yootles api responses translated several formats except yaml currently supported \\( 23 \\) json status 200 message hello world foo 1 b 2 10 b 20 bar x one two z three perl following perl expression directly assigned hashref variable perl module data dumper generates data following form given hashref status 200 message hello world foo 1 b 2 10 b 20 bar x one two z three xml using perl module xml simple options rootname ytl following xml corresponds one one perl expression note xml output cannot distinguish list containing one element element also list empty xml output include tag list ytl status 200 status message hello world message foo 1 b 2 b foo foo 10 b 20 b foo bar x one x two z three z bar ytl mathematica status 200 message hello world foo 1 b 2 10 b 20 bar x one two z three lisp \\( expression \\) \\( \\( status 200 \\) \\( message hello world \\) \\( foo \\( \\( \\( 1 \\) \\( b 2 \\) \\) \\( \\( 10 \\) \\( b 20 \\) \\) \\) \\) \\( bar \\( \\( x one \\) \\( two \\) \\( z three \\) \\) \\) \\) php array \\( 'status' 200 'message' hello world 'foo' array \\( array \\( 'a' 1 'b' 2 \\) array \\( 'a' 10 'b' 20 \\) \\) 'bar' array \\( 'x' one 'y' two 'z' three \\) \\) yaml ytl status 200 message hello world foo 1 b 2 10 b 2 bar x one two z three 4 4 special syntax specifying accounts aliases described users accounts treated distinctly yootles system users access number accounts account accessed number users user however one account applications convenient refer accounts primary user additionally often convenient refer users alias instead username yootles system supports macro expansion api calls facilitate avoid need multiple lookup calls specifically allows specify users aliases \\( facebook id yahoo id \\) well refer user 's main account indirectly user 4 4 1 specifying users alias similar accounts specified group name users may specified example anywhere username specified alias substituted 4 4 2 bracket syntax indirectly specifying accounts special syntax expands main account user user referenced alias syntax used wherever account required error returned specified user main account 4 4 3 macro username invoking user special syntax expands actual username invoking user used anywhere example set specify invoker 's username account group use refer main account invoking user per bracket syntax \\( equivalent alias invoking user \\) 5 yootles commands 5 1 \\( updating querying users \\) command allows changing usernames passwords looking users aliases email address facebook id commands allow creation new users \\( see section \\( creating new users \\) \\) adding changing aliases users \\( see section \\( creating updating querying user aliases \\) \\) synopsis \\( \\) returns invoking user 's username \\( u \\) changes yootles username invoking user u returning previous username \\( p \\) changes password invoking user p returning previous password \\( note cannot specified applications users \\) \\( u p \\) changes username password returning previous values \\( \\) returns username given alias one following alias types \\( 24 \\) realname email yahoo aol msn phone 4info icq google facebook examples 1 changing username application issuing command knows user 's password call made example follows http yootles com api \\? cmd usr username madeleine invoker valjean timestamp 1234567890 key 3c7e8cc4b89de301 otherwise trusted application \\( e g yootles facebook application make calls behalf users \\) application key call like following made http yootles com api \\? cmd usr username madeleine invoker facebook 24601 app facebook timestamp 123890 key fa3de669ef90ca6 either expressed abstracted form \\( see section yootles api \\) valjean usr \\( username madeleine \\) following example response status 200 message username changed valjean madeleine username valjean 2 changing password alice usr \\( passwd abc123 \\) status 200 message password changed passwd changeme username password specified previous values included output 3 looking user alias alice usr \\( alias email bob77 yahoo com \\) status 200 message yootles user bob email address bob77 yahoo com username bob 5 2 \\( creating new users \\) user call create new user application creating new user also need call command \\( see section \\( creating updating querying user aliases \\) \\) create alias new user command \\( see section \\( querying setting access control \\) \\) associate account new user account may existing account \\( account created friend \\) new account created command \\( see section \\( adding modifying iou \\) \\) synopsis \\( u \\) creates new user username u system generated password user u already exists command return status code 402 example alice addusr \\( username carol \\) status 200 message user carol created use `request' command retrieve password username carol taken following response generated status 402 message error user carol already exists 5 3 \\( macro registering bootstrapping new user system \\) command macro implemented terms yootles api commands placeholder complete documentation command create new user associate alias create main account link main account eg alias facebook 24601 username firstname lastname account firstname lastname firstname force defaults 0 force 1 g ac ca n't specified reg \\( username u alias al force f acct g ac \\) f 0 \\( 0 default f \\) addusr \\( username u \\) abort fails else addusr \\( username u \\) variations u succeeds let u username added user let g ac u u acct specified alias \\( alias al \\) nb invoked invoker username u owe \\( amt 0 001 g ac yooniversal admin new user fee cur ytl \\) acct \\( user u acct g ac main 1 ntfy 1 \\) 5 4 \\( creating updating querying user aliases \\) yootles system stores user additional aliases email addresses instant messenger screen names command allows user query update aliases add new ones commands allow looking user alias \\( see section \\( updating querying users \\) \\) managing accounts users \\( see section \\( querying setting access control \\) \\) following parameters specified alias type e g email alias alias type e g email alice alice com descriptive name alias type typically omitted synopsis \\( \\) returns hash table mapping alias types aliases invoking user see example 1 \\( \\) returns alias type along descriptive name alias type alias type exists empty string returned \\( n \\) adds updates alias type alias returns previous values empty string already exist also specified gives descriptive name alias type \\( replacing old one exists \\) see example 4 examples 1 querying aliases alice alias \\( \\) status 200 message aliases email alice alice com realname alice l canonikopolous facebook 24601 yahoo alice84 aliases username alice email alice alice ccom realname alice l canonikopolous facebook 24601 yahoo alice84 2 querying specific alias alice alias \\( aliastype yahoo \\) status 200 message yahoo messenger alias alice84 alias alice84 aname yahoo messenger id note also way query descriptive name \\( \\) specified alias type 3 querying username works exactly like previous example username treated like alias type \\( users opposed trusted applications never need since user could n't issued command without knowing username \\) note usage command functionality calling arguments \\( see section \\( updating querying users \\) \\) alice 24601 alias \\( aliastype username \\) status 200 message yootles username alice alias alice aname yootles username 4 adding modifying alias alice alias \\( alias openid oid org alice aname open id \\) status 200 message new alias added open id \\( openid \\) oid org alice aliastype alias aname output fields give previous values empty string new alias alice alias \\( alias facebook 24602 \\) status 200 message facebook id changed 24601 24602 aliastype facebook alias 24601 aname facebook id 5 5 \\( email user username password \\) application creates new user yootles system generates random password user application never sees \\( since applications application keys issue commands behalf users without knowing user passwords \\) user using particular application need never know yootles username password user would like use application uses yootles api user need provide username password application command causes email sent user username password synopsis \\( \\) returns success side effect generates email email could sent example email alias set \\( see section \\( creating updating querying user aliases \\) \\) returns status code 402 example alice request \\( \\) status 200 message yootles username password sent alice alice com known bugs one bug command implemented yet current alpha version password always set actually change forget 'll email help yootles com note trusted applications like facebook application need deal user passwords 5 6 \\( querying setting access control \\) command allows management data structure \\( see section data structures related users \\) allows setting querying users access accounts parameters command correspond directly fields data structure namely synopsis \\( u \\) returns user u \\( default invoking user \\) account list accounts \\( accounts u 0 \\) list accounts \\( accounts u gets notifications \\) list accounts \\( accounts u root access \\) \\( u \\) returns access field user u 's access account \\( \\) returns access field list users \\( possibly empty \\) corresponding access account 0 suffices included list users access \\( u access settings \\) sets user u 's access account according access settings returns previous access settings placeholder access settings denotes nonempty subset access fields \\( see example 5 \\) user u may omitted default invoking user examples 1 checking accounts alice acct \\( \\) status 200 message \\( alice \\) main account alice alc \\( main \\) main alice alc mine alice alc ntfy aliceposse jointfund alice mom alice alc root alice alc alice mom 2 checking someone else 's accounts alice acct \\( user bob \\) status 200 message user bob main account bob b main bob b mine bob b ntfy bob b root bob b 3 checking access particular user account pair alice acct \\( user bob acct carol c \\) status 200 message user bob following access carol c account root 0 view 1 ctrl 1 main 0 mine 0 ntfy 0 main 0 mine 0 ntfy 0 root 0 4 checking access particular account alice acct \\( acct carol c \\) status 200 message user carol carol c main account main carol mine carol ntfy carol alice root carol alice 5 setting access user account pair example succeed alice root access carol c account alice acct \\( user bob acct carol c ntfy 1 mine 0 25 \\) status 200 message user bob 's access account carol c updated main 0 mine 0 ntfy 0 root 0 5 7 \\( querying adding account groups \\) command used query list groups relevant invoking user query accounts belong account group add new groups input parameters follows group name may omitted get list relevant groups short description group field specified update group description omitted querying existing group synopsis \\( \\) returns list groups invoking user owns account \\( 0 \\) root access account \\( g \\) returns description group list member accounts command succeeds invoking user owns account group \\( g \\) modifies description group creates group g exist returns previous description group name g empty string exist note description required adding new group command returns previous description modifying returns empty string indicate new group created error returned nonexistent group queried group created case \\( see last example \\) examples 1 listing groups alice grp \\( \\) status 200 message groups jets sharks alice smithfamily aliceposse groups jets sharks alice smithfamily aliceposse 2 querying particular group alice grp \\( grp jets \\) status 200 message jets \\( west side gang \\) members alice bob carol grp jets desc west side gang members alice bob carol 3 creating new group alice grp \\( grp yahoos desc yahoo employees \\) status 200 message new group `yahoos' created yahoo employees grp desc 4 modifying group alice grp \\( grp yahoos desc yahoo employees friends \\) status 200 message description updated `yahoo employees friends' grp yahoos desc yahoo employees 5 nonexistent group alice grp \\( grp losers \\) status 402 message account group `losers' found provide name description create group grp 5 8 \\( adding modifying iou \\) command issues iou possibly repeating multilateral iou \\( see section ious \\) input fields correspond data structure described greater detail \\( see section data structures yootles \\) note fields type timestamp specified unixtime synopsis \\( u w c g r \\) issues non repeating iou amount denominated currency c \\( default yootles \\) accounts u \\( default main account invoking user \\) accounts time w \\( default \\) logging reason r giving id previous iou replace either account group prefix g used main accounts specified users used \\) output fields given \\( r u \\) issues repeating iou parameters non repeating iou plus addition specifying payment period r measured units u time repeating ious generated \\( default 1 meaning ious repeat indefinitely \\) output fields command follows id new \\( raw \\) iou number ious \\( 1 repeating 1 repeating indefinitely never 0 less 1 includes final iou repeating even 's prorated 0 \\) fraction last iou pro rated always 1 non repeating ious list accounts involved iou list parallel deltas accounts' net balances due iou \\( counting first iou repeating \\) list atomic ious \\( including repeating ious past initial iou \\) e list amt triples \\( represented hash tables \\) normal bilateral iou simply echo iou input except evaluate amount may sent \\( stored \\) mathematical expression note multilateral ious generate atomic ious account interface filter \\( sometimes helpful see \\) list accounts newly created due iou \\( groups accounts created needed \\) list subset note command way create new accounts \\( amount may set zero actual iou wanted \\) notification iou make clear new account created case typo iou reissued using iou create account advantage gets logged transaction history example alice issues iou new user bob following call issues iou \\( maps alice 's main account e g \\) account \\( account alice creating friend bob \\) 12 yootles lunch alice owe \\( amt 12 bob lunch grp alice \\) status 200 message \\( alice 's \\) balance bob decreased 12 yootles owe bob 57 yootles iou 24601 num 1 last 1 accounts alice alc alice bob deltas 12 12 atomized amt 12 alice alc alice bob spawn alice bob note way effectively delete iou issue new command field set id old iou amount set 0 \\( perhaps amount multiplied zero 's easy see original amount makes quick dirty audit trail \\) advantage approach voiding old ious audit trail every deleted iou ends active iou means iou ever go fully sight mind important given liberal access policy remember anyone permission control pair accounts \\( default everyone \\) replace ious accounts 5 9 \\( querying existing ious \\) call allows retrieval transaction histories e list past ious parameter \\( except \\) specifies filter apply ious restricting set returned results parameter default value leaving parameter unspecified omits corresponding filter parameters specified returns every iou invoking user 's groups \\( see section \\( querying adding account groups \\) \\) parameters follows return ious involving particular account specified group name works identically specify get transactions involving pair accounts return ious involving particular group return ious involving accounts belonging invoking user \\( e 0 \\) time earliest iou return \\( unixtime \\) time latest iou return \\( unixtime \\) default 1 meaning time last explicit iou e maximum iou times end times repeating ious specified raw ious equivalent omitting filter altogether indefinitely repeating ious well defined ask atomic ious given time return ious replaced \\( 1 means yes \\) default 0 meaning ious filtered exclude replaced ious return iou specified id plus ious specified one replaced note however replaced ious filtered unless 1 also means way query single iou replaced query along chain subsequent ious replaced show atomized ious \\( 1 means yes \\) default 0 meaning show raw ious may repeating multilateral ious limit ious returned specified number starting recent default infinity skip specified number recent transactions default 0 parameters used retrieve transactions batches note zero based example calling 10 100 returns 101st 110th iou \\( reverse chronological order \\) synopsis \\( b g e \\) returns list raw ious involve account one invoking user 's groups subject following constraints \\( assuming corresponding parameter specified \\) iou involves account iou involves account b iou involves account group g least one accounts greater equal invoking user date iou date iou e \\( default e 1 interpreted explained \\) iou replaced \\( 0 default otherwise constraint replaced nonreplaced ious returned \\) iou id eventually replaced repeating ious nominal \\( e initial \\) iou date considered comparing e means example repeating iou starts 2007 continues 2008 included query raw ious 2008 \\( 1 \\) fact returning exact ious atomized form showing pairwise nonrepeating ious \\( see section data structures yootles \\) note atomizing post hoc atomic ious returned would otherwise precluded filters example multilateral iou alice bob carol atomized separate ious alice carol bob carol ious involving alice requested atomic iou bob carol returned part raw iou involving alice field applies directly atomized ious \\( n \\) returns ious would returned otherwise 1st nth results 0 \\( default \\) output field \\( raw transactions \\) returned list hash tables following fields corresponding roughly fields data structure \\( see section data structures yootles \\) id iou amount mathematical expression way specified corresponding command account \\( \\) issuing iou account \\( \\) receiving iou mirrors account replaced square brackets alias user account main account user exists alias use determined one invoker identified analogous date time iou \\( specified unixtime \\) reason iou repeat interval repeat unit end time repeating ious currency code account group accounts group specified id iou one replaces 1 means none similarly 1 output field \\( atomic transactions \\) returned list hash tables following fields id \\( raw \\) iou atomic iou part amount real number account issuing iou account receiving iou alias user whose main account account analogous date time \\( specified unixtime \\) reason iou taken corresponding raw iou annotated indicate repeating payments whether prorated currency code finally additional output field gives total number entries \\( raw atomic ious \\) would returned 0 infinity \\( defaults \\) examples 1 viewing \\( raw \\) ious groups alice tran \\( \\) status 200 message 100 ious \\( alice 's \\) groups count 100 rtran iou 234 amt 10 alice alc bob bob fromref alice bob toref bob 1234567890 lunch rpt 1 rptunit year til 1 cur usd grp yooniversal replaces 1 2 viewing \\( atomized \\) ious specific account alice tran \\( acct1 yooniversal bob atomize 1 \\) status 200 message account yooniversal bob 150 ious count 150 atran iou 234 amt 5 alice alc yooniversal bob fromref alice toref bob 1234567890 lunch cur usd known bugs currently base set ious iou involving invoking user 's accounts \\( accounts invoking user access \\) rather ious invoker 's groups \\( see section \\( querying adding account groups \\) \\) thus field currently treated specially restricts results include ious involving accounts specified group also extends returned results include ious include accounts belonging invoking user additionally group prefix omitted currently group specified field overloaded use field deprecated soon go away always specify group account explicitly fields finally behave advertized particular work single account corresponding 5 10 \\( querying balances \\) following deprecated see new command documentation next section command queries account 's balance specified account specified currency another account specified returns primary account 's balances every account balance nonzero user calling must access least one two accounts specifying group account see balances accounts group input parameters defaults follows account whose balance queried specified group name specified name default main account invoking user specific account check balances return balance \\( \\) time specified unixtime default e command issued group name prepend specified specifies group within return balances currency code two primary ways use command specifying field specified returns 's balance set accounts specified currency positive balance means owed negative balance means owes account balance included balance zero specified returns 's balance currency \\( excluding currencies balance zero \\) synopsis \\( \\) returns account 's net balance currency time \\( c \\) returns nonzero balances currency c account time \\( c g \\) returns account group g balance account \\( time \\) currency c note dual use specifies group prepend \\( necessary \\) also indicates returned balances limited transactions accounts group g \\( b c g \\) returns balance currency c accounts b time group g specified prefixed b specify group \\( b g \\) returns currency balance account \\( time \\) account b currency group g specified prefixed b specify group examples 1 querying net balance alice bal \\( \\) status 200 message \\( alice alc 's \\) net balance 10 usd 20 ytl currencies usd ytl balances 10 20 2 querying balance group following call returns balances alice 's main account accounts group alice bal \\( grp jets cur ytl \\) status 200 message \\( alice alc 's \\) net yootles balance group jets 3 accounts jets bob jets carol balances 23 20 3 querying balance specific account currencies following example specified field would superfluous fact field would entirely ignored alice bal \\( acct2 bob grp jets \\) status 200 message \\( alice alc 's \\) balances jets bob 12 usd 3 ytl currencies usd ytl balances 12 3 4 querying balance another account note example lists \\( always specified \\) even though one currency requested alice bal \\( acct1 bob acct2 carol cur ytl grp jets asof 1201150800 \\) status 200 message bob 's balance carol \\( group jets \\) 2008 01 24 7 ytl currencies ytl balances 7 known bugs specifying specified \\( example 2 third synopsis case \\) limit balances ious accounts specified group currently restriction respected overall balance returned 5 11 \\( querying balances \\) command works selecting set atomic ious account involved ious computes balance account within set ious addition invoker 's net balance \\( computed using invoker 's fraction account \\) within set ious returned initial set ious command \\( see section \\( querying existing ious \\) \\) include one invoker 's groups \\( see section \\( querying adding account groups \\) \\) parameter filters set ious command returns hash mapping account balance within filtered set ious example specifying field gives everyone 's net balance within group specifying account gives every account 's net balance account command takes following parameters show account 's net balance everyone 's balance assuming also specified return balance two accounts show balances within given group show balances given time past future analogous field command show balances given currency field must specified synopsis \\( b g c \\) filters atomic ious invoker 's groups according following constraints \\( specified \\) iou involves account iou involves account b iou involves account group g date iou later currency iou c returns account included ious account 's net balance within set ious addition returning hash mapping accounts balances returns field sum balances hash weighted invoker 's fraction corresponding account examples 1 querying account balances invoker 's net balance alice bal \\( cur ytl \\) status 200 message \\( alice 's \\) net balance across groups 97 ytl bal alice alc 100 bob bob 100 carol crl 0 jets alc 3 jets bob 20 jets carol 23 netbal 97 2 querying everyone 's balances within given group alice bal \\( grp jets cur ytl \\) status 200 message \\( alice 's \\) net balance group jets 3 ytl bal jets alc 3 jets bob 20 jets carol 23 netbal 3 3 querying everyone 's balances given account alice bal \\( acct1 alice alc cur ytl \\) status 200 message account alice alc net balance 100 ytl bal alice alc 100 bob bob 100 carol crl 0 netbal 100 4 querying pairwise balance two accounts alice bal \\( acct1 alice alc acct2 bob bob cur ytl \\) status 200 message account bob bob owes alice alc 100 ytl bal alice alc 100 bob bob 100 netbal 100 5 querying balances given time alice bal \\( acct1 alice alc acct2 bob bob cur ytl asof 1201150800 \\) status 200 message 2008 01 24 bob bob owes alice alc 100 ytl bal alice alc 100 bob bob 100 netbal 100 known bugs command currently implemented macro top makes slow also must currently specified finally currently omitted balances sum across currencies 1 1 exchange rates 5 12 \\( querying setting interest rates \\) command allows user access either two accounts view interest rate \\( \\) accounts user access either two accounts add change interest rates addition standard parameters identifying user making call called following parameters first account default main account invoking user second account \\( note order irrelevant interest rates symmetric \\) annual interest rate expressed real number fractional rate percentage \\( e g 0 05 5 \\) date time specified unixtime interest rates accounts always apply currencies different currencies cannot different interest rates instead users create new accounts get different interest rates synopsis \\( \\) returns hash table mapping accounts interest rates account set accounts date \\( e recent stored date less equal \\) account defaults main account invoking user date defaults time call issued \\( b \\) returns list date rate pairs accounts b \\( b \\) returns interest rate date date rate went effect \\( b r \\) sets interest rate accounts b r effective date \\( specified \\) exactly matches existing entry \\( rate r different entry 's rate \\) existing entry replaced r rate preceding entry \\( preceding date \\) command op new interest rate inserted \\( 25 \\) date rate preceding entry \\( replaced entry dates matched \\) returned examples 1 checking current interest rates everyone alice intr \\( \\) status 200 message interest rates bob b 5 jets carol 12 intr bob b 0 05 jets carol 0 12 2 setting new interest rate someone alice intr \\( acct1 alice alc acct2 bob b rate 0 06 date 1192809600 \\) status 200 message interest rate bob b changed 6 effective 2007 10 19 2007 10 20 date 1192723200 rate 0 05 3 checking historical interest rates someone alice intr \\( acct2 bob b \\) status 200 message interest rate bob b varied 5 6 6 intr date 123456789 rate 0 05 date 123500000 rate 0 06 4 checking interest rate someone particular date alice intr \\( acct2 carol c date 1201323600 \\) status 200 message interest rate carol c 2008 01 26 6 went effect 2007 11 01 date 1193889600 rate 0 06 known bugs one bug command implemented yet 5 13 \\( querying setting credit limits \\) command sets queries credit limits \\( directed \\) pair accounts invoking user must access \\( see section access control \\) either two accounts see credit limit extending credit accounts invoking user must access account extending credit accounts n't already exist created currency account listed results implied credit limit zero input parameters follows account issuing credit account receiving credit account n't exist automatically created amount credit must non negative currency code synopsis \\( c \\) returns hash table mapping accounts credit limits accounts extended account currency c \\( c \\) returns hash table mapping accounts credit limits account extended credit accounts currency c \\( b c \\) returns credit limit b currency c \\( b \\) returns hash table mapping currencies credit limits b currency \\( b x c \\) changes credit limit \\( b \\) x currency c returns previous amount credit account defaults main account invoking user \\( invoking user must access account \\) examples 1 offering someone credit alice cred \\( alice alc bob b amt 7 cur ytl \\) status 200 message account bob b credit limit 7 yootles \\( 0 \\) alice alc cred 0 2 checking credit limit another account alice cred \\( alice alc bob b \\) status 200 message account bob b credit limit 7 yootles 100 dollars alice alc cred ytl 7 usd 100 3 checking total available credit particular currency alice cred \\( alice alc cur ytl \\) status 200 message account alice alc total 99 yootles credit cred bob b 11 jets carol 88 4 checking total credit extended particular currency alice cred \\( alice alc cur ytl \\) status 200 message account alice alc extended 33 yootles credit cred bob b 11 jets carol 22 known bugs one bug command implemented yet credit limits zero note restrict ious issued means balances exceed credit limits 5 14 \\( managing currencies \\) command used query change information currency add new currency parameters command follows short symbolic name currency usd us dollars ytl yootles full name currency short description currency output fields input fields except case called parameters case output field synopsis \\( \\) returns simple list available currencies \\( see example 1 \\) \\( c \\) returns code name description currency exists otherwise returns error \\( 404 \\) empty string field \\( c \\) changes description currency returning original code name description error like returned currency exist \\( c n \\) changes name currency returning original code name description error like returned currency exist \\( c n \\) changes name description currency returning original code name description currency exist created empty strings returned three fields examples 1 listing available currencies alice cur \\( \\) status 200 message currencies ytl usd inr beer cur ytl usd inr beer 2 querying name description ytl alice cur \\( code ytl \\) status 200 message yootles \\( ytl \\) unit utility happiness also spelled utils utiles code ytl name yootles desc unit utility happiness also spelled utils utiles 3 creating new currency goats alice cur \\( code goat name goats desc actual live goats \\) status 200 message new currency `goat' \\( goats \\) created code name desc 4 modifying currency alice cur \\( code goat desc actual number live goats \\) status 200 message description updated `actual number live goats' code goat name goats desc actual live goats 5 nonexistent currency alice cur \\( code nuggets \\) status 402 message currency code `nuggets' found provide name description create currency code 5 15 \\( merging renaming accounts \\) command takes parameters specifying two account names defaulting main account user issuing command optional parameter gives group accounts specified following steps performed \\( assume old jekyll new hyde \\) check user access old jekyll access every account issued old jekyll credit old jekyll owes \\( negative balance \\) abort status code 402 \\( 26 \\) create account new hyde n't exist \\( including creation group new needed \\) nonzero incoming outgoing credit limit old jekyll create credit new hyde set credit old jekyll zero interest rate returned command \\( needs called get users user get list historical interest rates \\) create interest rate new hyde account old hyde nonzero balance b zero balance issuing iou b old jekyll comment renaming old jekyll new hyde issue iou b new hyde comment synopsis \\( x g \\) follows procedure merge account x account \\( x specify groups use group g \\) example alice merge \\( old old jekyll new new hyde \\) status 200 message account old jekyll merged new hyde known bugs one bug command implemented yet 5 16 acknowledgments thanks sharad goel dave morris meg west laurie reeves providing valuable comments fixing errors early drafts documentation future features \\( undoing previous commands \\) easy interfaces always provide unobtrusive undo option lieu confirmation dialogs note already set arbitrarily undo ious since never deleted database indicate ones replace ones audit trail followed using call would simpler call undo command b commands yootopia following commands implemented yootopia decisions predictions registered open 4info net sms service c facebook application mockups c 1 use case 1 installing yootles application user could find yootles application facebook application search seeing widget someone else 's profile notification invite messages newsfeed user taken usual facebook application install procedure take straight iou screen yootles widget application standardized way automatically selecting group account name main account information available facebook setup registration within yootles application beyond installing c 2 use case 2 0 entering simple iou straightforward case entering iou let 's say dinner alice paid bill enter iou portion field filled defaulting main account start typing field contact auto completed facebook fashion give amount description string submit notice also currency defaults whatever default currency account changed simply clicking using unobtrusive dropdown alice n't installed yootles app yet \\? user clicks submit button small invite window pop click invite invitation sent iou issued person want issue iou facebook \\? would nearly identical issuing iou dad next use case \\( specifically see 2 1 2 3 \\) c 3 use case 2 1 entering iou someone else say mom also came dinner alice know mom never going get facebook enter balance alice enter iou provided email address created account get email whenever enter iou behalf summary transaction perhaps general balance info technical miracle mom someday show claim account review past transactions modify necessary \\( maybe n't understand online banking thing paid alice back person later \\) instead dad dinner 've never entered iou name n't show list \\? select enter new start typing facebook try complete friends list person facebook ok new account created behind scenes little notification show underneath widget submitted \\( see last illustration case \\) c 4 use case 2 2 entering complex transactions fully fleshed example lead user entering complex transaction hopefully good enough beginning give ideas goal provide way lead users process step step widget construct iou front end process would see complex iou constructed get could enter next time \\( mo larry curly etc \\) always use walkthrough need c 5 use case 3 balances managing accounts look balances page would enter email address mom wanted get notifications transactions entering include see net balance look specific balances transaction histories pairs accounts also create new accounts information introduce idea groups index footnotes \\( 1 \\) literally true stores atomic ious caching computational purposes \\( 2 \\) admittedly interpretation end date confusing users alternatives worse example one repeating iou pick another ends \\( perhaps rent went \\) work correctly model \\( 3 \\) note 10 10 equivalent e receive half 10 20 \\( 4 \\) conceivably desired wanted formalize informal social practice gradually forgiving debts time \\( 5 \\) future release consider whether possible different chunks credit different interest rates decided extreme every iou able specify different interest rate people always approximate using separate subaccounts fully general specification much trust user alice means able specify interest would require function balance example balance negative \\( owe alice money \\) interest rate positive negative acceptable \\( 'll pay 's high \\) 0 may acceptable balances 20 \\( e alice owing 20 \\) 5 200 10 1000 infinity beyond equivalent setting hard limit 1000 even level generality still misses something namely liquidity interest rate depend long balance outstanding get aspect design fully baked 'll let suffice give users full manual control interest rates \\( 6 \\) technically ca n't change account name transfer balance copy interest rates credit limits new account ignore old account encapsulated command \\( see section \\( merging renaming accounts \\) \\) \\( 7 \\) replace zero iou \\( 8 \\) based true story raised 1000 real money multiple sclerosis society using initial prototype way \\( 9 \\) automatic payment routing bob could also issue iou sever credit limits coming except credit limit system automatically reroute ious go zero every account bob one transfer zero completely \\( 10 \\) field called database mysql reserved word \\( 11 \\) field called database mysql reserved word \\( 12 \\) field called database mysql reserved word \\( 13 \\) future version may switch storing timestamps strings ymdhms order delimiters least year month specified normally interface issue may decide granularity iou time specified part information raw iou want record e g able distinguish june 2008 2008 06 01 00 00 00 \\( 14 \\) users could fact choose set currencies explicitly use groups imply different currencies e g ious group babysitting could implicitly denominated hours \\( 15 \\) field called database mysql reserved word \\( 16 \\) field called database mysql reserved word \\( 17 \\) field called database mysql reserved word \\( 18 \\) future version could generalized arbitrary attribute value pairs users user settings like timezone preferred date format \\( 19 \\) database user 's account stored table performance reasons \\( 20 \\) choice made accommodate simple implementations api \\( perl scripts using lwp simple \\) may move closer true rest future please send feedback dreeves yootles com \\( 21 \\) command \\( see section \\( email user username password \\) \\) allows facebook user learn yootles username password want log another yootles application \\( 22 \\) likely change default soon \\( 23 \\) send us feedback preferred output formats dreeves yootles com \\( 24 \\) type username also considered alias type though would n't make sense look user 's username username \\( 25 \\) want identical interest rate inserted say 5 feb 1 follow existing rate 5 jan 1 call command date feb 1 rate 0 \\( anything equal 5 \\) call date feb 1 rate 5 \\( 26 \\) future may want forgiving done user access rights new hyde old jekyll instead performing following steps strictly api \\( would enforce settings \\) system instead performs directly table contents 1 yootles system 1 1 yootles accounts vs yootles users 1 2 ious 1 3 repeating ious 1 4 multilateral ious 1 5 currencies 1 6 interest 1 7 credit 1 8 access control 2 use cases 2 1 issuing ious facebook users 2 2 issuing iou facebook someone facebook 2 3 fund raising yootles 2 4 shared water bill 2 5 renaming account 3 data structures yootles 3 1 data structures related accounts ious 3 2 data structures related users 4 yootles api 4 1 api calls users 4 2 api calls trusted applications 4 3 api output 4 3 1 output formats 4 4 special syntax specifying accounts aliases 4 4 1 specifying users alias 4 4 2 bracket syntax indirectly specifying accounts 4 4 3 macro username invoking user 5 yootles commands 5 1 \\( updating querying users \\) synopsis examples 5 2 \\( creating new users \\) synopsis example 5 3 \\( macro registering bootstrapping new user system \\) 5 4 \\( creating updating querying user aliases \\) synopsis examples 5 5 \\( email user username password \\) synopsis example known bugs 5 6 \\( querying setting access control \\) synopsis examples 5 7 \\( querying adding account groups \\) synopsis examples 5 8 \\( adding modifying iou \\) synopsis example 5 9 \\( querying existing ious \\) synopsis examples known bugs 5 10 \\( querying balances \\) synopsis examples known bugs 5 11 \\( querying balances \\) synopsis examples known bugs 5 12 \\( querying setting interest rates \\) synopsis examples known bugs 5 13 \\( querying setting credit limits \\) synopsis examples known bugs 5 14 \\( managing currencies \\) synopsis examples 5 15 \\( merging renaming accounts \\) synopsis example known bugs 5 16 acknowledgments future features b commands yootopia c facebook application mockups c 1 use case 1 installing yootles application c 2 use case 2 0 entering simple iou c 3 use case 2 1 entering iou someone else c 4 use case 2 2 entering complex transactions c 5 use case 3 balances managing accounts index document generated texinfo source texi2html id yootles texi 539 2008 04 22 09 07 00 dreeves", 
    "descr1": "yootopia danielm reeves yahoo research bethanym soule columbiauniversity tejaswikasturi yahoo research ver 305 2007 12 2320 47 checkedinat20 35 07bydreeves abstract thenascentyootopiaprojectatyahoo researchbringstogether threerelatedresearchagendas mechanismsforgroupdecisionmaking prediction andpaymentinfrastructure thecurrency \\( scripsystem \\) calledyootlesandunderlies \\( butisorthogonalto \\) thegroupdecisionand predictionmechanisms wepresentanarrayofcurrency agnosticdecision mechanismsforsmallgroups describingnewandexistingmechanismsfor \\( 1 \\) choosingamongashortlistofoptions \\( 2 \\) choosingamongan tivelyinnumerablelistofoptions asinmeetingscheduling \\( 3 \\) allocating sharedgoodsandresponsibilities \\( 4 \\) publicgoodprovision \\( 5 \\) bi lateraltrade welistdesirablemechanismpropertiesanddescribethe sthatthemechanismsmakeamongthem finally wedescribea smallsteptowardssynthesisofgroupdecisionsandgroupprediction interfaceforfriendlywagers 1introduction thereareplentyofestablishedmechanismsformakinggroupdecisions arguingtosophisticatedvotingsystems oftenchoosinganoutcomeinvolves explicitnegotiation compromising quidproquoing etc yetthesemecha nismsoftenfailtomakethechoicethatwouldhavemaximizedgroupwelfare therearemanyclassicpitfallsingroupdecisionmaking \\( likevariousformsof groupthink \\) thatcanbeaddressedwithmorestructureinthedecision making process grouppredictionisarelatedproblemandrssimilarlyfromalackof structure expertsarehardtoidentify theyhavebiases andarenotoriously badjudgesoftheirowndegreeofcertainty predictionmarketsareanincreas inglypopularapproachtoincentivizinginformationrevelationandintelligently aggregatingittopredictthefuture surowiecki 2005 toachievegreatersocialwelfare 1 andfairnessineverydaydecisionmaking wesuggestthereisaneedforacommonmetricforstrengthofpreferences \\( utility \\) andtheabilitytodirectlytransferutilityfromonepersontoanother ofcourse thesearetherolesthatmoneyplaysinsocietybutmoneyiscommonly 1 e sumoftheparticipants'utilities 1 eschewedforthesevaluablepurposesinsettingssuchassocialgroupsandwithin organizations forthisreason aswellastoprovideacurrencyforprediction markets weintroduce yootles 2 themechanismswedescribehere however currency agnostic keytoadoptionofthisapproachtogroupdecisionmakingisaccessibility andeaseofuse wehaveimplementedansms \\( shortmessageservice \\) phone interfacetothemechanismspresentedhere withawebinterfacetothemat http yootopia org wedocumentthisinterfaceinappendixb considerrstthevalueofacommonmetricforutility peopleoftenhave nowaytocomparepreferences iwant vs ireallywant maydoapoorjob ofcomparinghowmuchwevaluedrentoptions aprerequisiteformaking sociallyoptimalchoices second groupsoftenhaveatbestextremelyrudimen tarymeansforcompensatingthepeopleonthelosingendofdecisions decision mechanismswithyootlespayments \\( e auctions \\) addressbothoftheseshort comingsthroughexplicitcompensationandpreferenceelicitation 3 admittedly whenoneisnotinthehabitofquantifyingone 'spreferences itcanseemadauntingtask nonetheless itisquitepossibletodoandwith practicecanevenbecomesimple whenyouareunsureofyourownvaluefor aparticularoutcome wedasimplebinarysearchisextremelyectiveat pinningdownyour encepoint woulditakethatplaneticketifitwere free \\? denitely wouldibuyitifitcost 1000 \\? noway 500 \\? uhh 250 \\? itely 375 \\? yeah iguess 438 \\? uhh well thepointwhereyouaretrulytornisyourtrueutility 4 butwhynotjustuseanexistingcurrency \\( likedollars \\) forthesepurposes \\? infact insomesettingsanexchangeratewillquicklyemergeandthenyootles wouldbemoneyineverysense butsomegroupsmaywanttoleveltheplay ingamongagroupofpeopleofvaryingancialmeans thisisdult toenforcebutalike mindedgroupcanachievethispropertybyagreeing example toonlyuseyootlesfordecision makingandpredictiontasks yootles mayalsosimplyprovideamoreexplicitframeworkforcastingcurrencyasade scriptorofaperson 'sutility aconceptthatmostpeopleoutsidecertains likeeconomicsandartintelligencearenotusedto finally theremay bevarioussocialimpedimentstotheadoptionofgovernmentcurrencyforthe purposeswepropose payingforinenceingroupdecisionsisnotpalatableto many andspendingone 'sownmoneyinthecontextofone 'sjobisavoidedin corporateculture yootles justlikewithgovernmentcurrency workbecauseofmutualagree ment andjustlikewithwithmoney thewholeeconomyisnothingbuta scorekeepingsystemforowedfavors \\( broadlyed \\) participantsstartwith abalanceofzeroandsimplyoweorareowedyootles allyootlestransac 2 thenameisavariantonutilsorutiles ahypotheticalunitofutilityorhappiness 3 quantifyingone 'spreferencescanbeawkwardanddultwhennotinthehabitofdoing however whenunsureofyourownvalueforaparticularoutcome wendaquickmental binarysearchisextremelyveatpinningdownyour indiencepoint 4 oneadvantageofiterativemechanisms whichwewilldiscusslater istosparethepar ticipantsthissometimespainfulintrospection parkes 2005 2 tions debts andbalancesaretrackedinaledgersystem thispaperpresents groupdecisionmakingasakeyapplicationoftheyootlesinfrastructure launchedbyyahoo researchat www yootles com welargelydeferdiscussion ofthispaymentinfrastructureandpredictionmarketsinyootopia thoughthese areallinterrelated keytoadoptionofthisapproachtogroupdecisionmakingisaccessibility andeaseofuse wehaveimplementedansms \\( shortmessageservice \\) phone interfacetothemechanismspresentedhere withawebinterfacetothemat http yootopia org wedocumentthisinterfaceinappendixb 2desirablemechanismproperties followingarecommonlydesirablemechanismpropertiesforgroupdecision making oftentreatedasconstraintsonamechanismdesigner mas colelletal 1995 famousimpossibilityresults greenandt 1979 precludeachiev ingallofthesepropertiesinanymechanismsimultaneouslyandinthenext sectionwedescribevarioustthatcanbemadeamongtheseproperties fundamentaltothestudyofmechanismsisthenotionofanagent 'spref erences werefertoanagent 's type synonymouslywithpreferencestorefer totheprivateinformationanagenthasthatctsitsutilityforthedierent outcomes typically thisissimplytheutilityvaluesitwouldgetfromeach possibleoutcomeofthedecisionmechanism eff \\( socialeciency \\) asociallycient \\( k sociallyoptimalorwelfare optimal \\) mechanismalwayschoosestheoutcomethatmaximizestotalutility \\( k socialwelfare \\) thedegreeofsocialciencyofamechanismisthesum ofeveryone 'sutilityforthechoicethemechanismmadedividedbythegreatest socialwelfareoverallpossiblechoices par \\( paretoncy \\) aparetoientmechanismisonewhichguarantees anoutcomethatcannotbeimproveduponwithoutmakingsomeparticipant worseo thisiscommonlyviewedasaminimumrequirementforamechanism itmaybeforgivabletondasuboptimalsolutionbuttoersolutionawhen everysingleparticipantatleastweaklyprefersbwillbeviewedasafailureon thepartofthemechanismdesigner notethateff \\) par 5 \\( ds \\) ic \\( dominantstrategyincentivecompatibility \\) inadominantstrat egyincentivecompatible \\( k strategy proofornon manipulable \\) mechanism itisineveryparticipant 'sbestinteresttotruthfullyreporttheirpreferences nomatterhowanyoneelseisplayingthegame wewillusethetermsicand dsicinterchangeably notethatdsicdoesnotimplyefforpar thepris oners'dilemmabeingafamouscounterexamplewherethedominantstrategy 5 proof consideramechanismthatissociallycientbutnotparetoient someone 'sutilitycanbeincreasedwithoutdecreasinganyoneelse 's thisyieldsgreatersocial ciency whichisacontradiction 3 isdefectiondespitemutualcooperationyieldingstrictlygreaterutilityforboth players bnic \\( bayes nashincentivecompatibility \\) inabayes nashincentivecom patiblemechanismitisineveryparticipant 'sbestinteresttotruthfullyreport theirpreferences solongaseveryoneelseisalsousingthestrategyoftruthful bidding 6 thisassumes however thatthereisacommon knowledgedistribu tionfromwhichagents'preferencesaredrawn \\( andthattheyhavenoother informationaboutthesepreferences \\) sincethisassumptiontendsnottohold inpractice itwilloftenmeanlittletoclaimthebnicpropertyforpractical mechanisms notethatsinceanydominantstrategyequilibriumisalsoanash equilibrium ic \\) bnic icwewillmeanthesetofbothproperties f bnic dsic g bb \\( budgetbalance \\) inabudgetbalancedmechanism thesumofallpay mentsmadeiszero inotherwords theonlypaymentsaretransferstoother participants abbmechanismdoesnotrunasurplusorrequireasubsidy \\( weakbudgetbalancemeansthatthemechanismneverrequiresasubsidybut mayrunasurplus \\) wewilltypicallyviewbudgetbalancedmechanismsas advantageousbutifafor prentityisdesigningthemechanism theymay prefertomaximizethesurplus \\( revenue \\) generated inthiscasethemechanism wouldbesaidtobeaimingforrevenuemaximization \\( rev \\) theliterature optimalauctions myerson 1981 referstothisdesigngoal especiallyin thecontextofmechanismsforsellinggoodstomultiplebuyers ir \\( individualrationality \\) inanindividuallyrationalmechanism norisk neutralagentwillstrictlyprefertooptoutofthemechanismratherthanpar ticipate anymechanisminwhichparticipantsmayplacebidsofzeroand guaranteethattheydonoworsethanoptingoutaltogetherisir notethat anymechanismcanbemadeirbyincluding optout inthestrategyspace eq \\( fairnessorequitability \\) thedegreeoffairnessofanoutcomefor n people n timestheutilityoftheleasthappypersondividedbythetotalutility \\( equivalently theratiooftheminimumutilitytotheaverageutility \\) inother words perfectfairnessmeanseveryoneisequallyhappy wecallamechanism fair equitable ifitguaranteesperfectlyfairoutcomes env \\( envy freeness \\) anenvy freemechanismyieldsoutcomesinwhichno onewantstotradeplaceswithanyoneelse smp \\( simplicity \\) formanyapplications thecomplexity \\( eithercomputa tionalorcognitive \\) ofamechanismmayneedtobeminimized likemanyof 6 therevelationprincipleactuallyguaranteesthat withsomecaveats wecanturnany mechanismintoonethatisbayes nashincentivecompatible 4 theabove thisgoalmayneedtobetradedagainstothermechanismproper ties nisanandronen 1999 forthepurposesofsmallgroupdecisionmaking wewillconsideramechanismtohavethepropertysmpifthemechanismcan beconductedeasilywithoutacomputer someoftheabovemechanismpropertiesmaybefurtherspecialized mechanismhasaproperty exante ifithasthepropertyinexpectationbefore anyoftheparticipants'preferencesareknown amechanismhasaproperty exinterim fromtheperspectiveofanyparticularparticipant ithasthat propertyinexpectationwithonlytheparticipant 'spreferencesknown finally amechanismhasaproperty expost ifithasthepropertyregardlessofanyof theparticipants'preferences ifthemechanismincludesarandomizationdevicewemodelthatbyhaving naturebeoneoftheparticipantsandtheresultoftherandomizationconstitutes nature 's preferences flippingacoin todecidewhogetsthelastpiece ofcakeisexantefairandexinterimfairfromtheperspectiveoftheparticipants otherthannature itisexpostquiteunfair 3auctionsforgroupdecisions wenowdescribeapotpourriofdecisionmechanismsforvariousgroupdecisions westartwithsometrivial degenerate andmundanemechanismsbeforecontin uingontosomewidelyapplicableandwell knownmechanisms aswellassome practicaloriginalmechanisms wedothistohighlighttheimprovementsthat canbemadeoversomeofthemechanismstraditionallyappliedtothedomain ofgroupdecisionmaking table1summarizesthepropertiesofthemechanismswedescribeinthis section mostofthemechanismsweconsiderheretakeasetofreportedagentpref erencesandreturnoneofasetofpossibleoutcomesalongwithapayment \\( positiveornegative \\) toorfromeachagent thismakesthemdirectrevelation mechanisms \\( drms \\) simply directmechanisms 7 adrmisasealed bid mechanismwherethebidsareinfactagents'fullpreferencefunctions mapping everypossibleoutcometoautilityvalue mechanismsofthisformareverygen eral avotingmechanism forexample ignoresthemagnitudesofthereported nonzerovaluationsforoptionsandsetsallthepaymentstozero abilateral bargainingmechanismtakesthebuyer 'sandseller 'svaluationandreservation prices choosesanoutcomefromtheset f trade notrade g andsetsthe paymentstobeasalepriceandthenegativeofthesaleprice \\( inthecaseof outcome trade \\) therevelationprinciple mas colelletal 1995 infactguaranteesthat foranymechanism involvingarbitrarilycomplicatedsequencesofmessagesbe 7 therevelationprinciple mas colelletal 1995 infactguaranteesthatforanyarbitrarily complicatedmechanism thereexistsadrmthatisequivalentintermsofhowitmaps preferencestooutcomesandisbnic 5 effparicbnicbbeqenvsmp coinflip 00111001 dictatorship 01111001 voting 01001001 vcg 11110000 sga \\( 1 3 0 \\) 11011 001 sga \\( 1 2 0 \\) 110012 3 01 sga \\( 0 1 \\) 11001 00 1 dauc 0 1001 000 nfa 0 10010 0 1 table1 propertiesofdecisionmechanisms starredentriesindicatethatthe propertyholds \\( 1 \\) whenplayersbidtruthfullydespiteitnotbeinganequilib rium \\( e foraltruisticagents \\) sgaisthetwo playershared goodauctionwith uniformtypes theentryforvotingappliestomanycommonvotingsystems includingapprovalvoting bordacount andinstantru tweenparticipants thereexistsadirectrevelationmechanismthatisequivalent intermsofhowitmapspreferencestooutcomesandisbnic considerameta mechanismthatconsistsoftheoriginalmechanismwithproxiesinsertedthat takereportedpreferencesfromtheagentsandplayanashequilibriumonthe agents'behalfintheoriginalgame \\( everygamewithaitenumberofpossible actionshasanashequilibrium nash 1951 \\) similarly therevelationprinciple meansthatifamechanismhasadominantstrategyequilibriumthenwecan constructonethatisdsic sometimesreportingpreferencefunctionsisstraightforward asinthecase ofspecifyingautilityforeachofashortlistofoptions whileforothersocial choicefunctionsitisprohibitive andevenwhenreportingpreferencefunctions isstraightforward themechanismmaynotbeabletodanashequilibrium ofthegame soalthoughitistheoreticallywithoutlossofgeneralitytocon sideronlydirectrevelationmechanisms indirectmechanismsareimportantin practice conitzerandsandholm 2004 \\( seesection3 9 \\) 3 1coinflip westartwithperhapsthesimplestofalldecisionprocedures thecoinp mechanismrefersmoregenerallytopickinganoptionforagroupofpartici pantsbychoosingamongtheoptionsrandomly \\( pickingthe thof n outcomes withprobability1 n \\) thismechanismhastheadvantageofbeingexinterim fair \\( eq \\) itisalsotriviallyicinthattheoutcomeisindependentofthe participants'bids \\( nobidsinfactareaskedfor \\) thebiggestdownsideofran domizationasamechanismisency anoptionmaybechosenthatmakes everyonemiserable withnopossiblebiastowardoptionsthatarebetterforthe group thus coinflipfailstoachieveparoreff 6 coinflipdoesachievetwopropertiesthatarehardertocomebyinmore sophisticatedmechanisms ittriviallybalancesthebudget \\( bb \\) andwithrea sonableconstraintsonthepossibleoutcomes \\( excluding forexample rob agent blind option \\) coinflipisindividuallyrational \\( ir \\) anymechanism withnopaymentsisofcoursetriviallybudgetbalancedandtypically individualrationalityaswell likemanydecisionmechanisms coinflipwillnotingeneralbeenvy free \\( env \\) forexample iftherandomlychosenoptionistogiveagent thelast pieceofcake everyonebut willbeenvious envy freenessistypicallyachieved withpayments ifagent paidmoreforthecakethananyoftheothersthought itwasworththentheenvpropertywouldbesatised ofcourse forallitsshortcomings thecoinipmechanismhasextremely lowcognitiveandcomputationalcomplexity \\( smp \\) 3 2dictatorship dictatorshipmeansthrowingouteveryparticipant 'spreferencesexceptforone \\( thedictator \\) andoptimizingwithrespecttoonlythedictator 'spreferences thishasgreaterexpectediencythancoinflipanddoesachievepareto ciency \\( aslongasthedictatorbreakstiesmagnanimously \\) butotherwiseis nobetterthancoinflip incentivecompatibilityistriviallysatisedsinceeitheryourpreferencesare disregardedorfollowedcompletely notsurprisingly formanydecisionproblems dictatorshipistheleastfairmechanism thoughifadictatorischosenrandomly thenthismechanism likecoinflip isexantefair foralloftheotherproperties \\( bb ir env smp \\) thestoryfordictatorshipisidenticaltothatforcoinflip 3 3voting wedenevotingverygenerallyasanydecisionmechanism \\( e mappingfrom preferencestooutcomes \\) thatneverinvolvespayments thus coinflipand dictatorshipbothqualifyasdegenerateformsofvoting itturnsoutinfact thatforchoosingamongmorethantwooptions dictatorshipandmechanisms likecoinflipthatmayruleoutoptionsevenwhenunanimouslypreferredare theonlyvotingmechanismsthataredominantstrategyincentivecompatible thisisthefamousgibbard satterthwaiteimpossibilitytheorem gibbard 1973 satterthwaite 1975 gibbard 1977 justascoinflipanddictatorshiparedegeneratedecisionmechanismsthat takefullpreferences largelyignorethem andreturnanoutcome manyvoting mechanismstakefullpreferencesandignoreallbuttherankinginformation forbordacount forexample n optionsaresortedforeachagentbyutility andreassignedanumberfromoneto n inthecaseofapprovalvotingall positiveutilitiesaremappedtoone infact inourimplementationofapproval votingpositiveutilitiesaremappedtooneandtheresttozerounlessthereare nopositiveutilitiesreportedinwhichcasenegativeutilitiesaremappedtozero 7 andthezeroutilities \\( thedefaultwhenunspeed \\) aremappedtoone providesaconvenientwaytoapproveof allexcept asetofoptions ineverydecisionmechanismdiscussedinthispaper includingthedegener atemechanisms allvotingsystems andtheauction basedmechanismsinthe nextsections thesocialchoiceismadebyapplyinganylterstothepreferences andthenchoosingtheoptionwiththehighestsum payments \\( generallymade fromthewinnerstothelosers \\) arecalculatedasafunctionofthechosenop tionandthereportedutilitiesbut forvotingmechanismsthepayments arealwayssettozero asdescribedbelow ourprinciplemotivationforprefer ringauctionmechanismsovervotingistoachievegreatersocialiencyand fairness voting ofanyform isnotsociallyet \\( eff \\) inthatitdoesnotguaran teetheoutcomemaximizingtotalutility thisisbecauseitdoesnotfullytake intoaccountthestrengthofparticipants'preferences forexample considera votetochoosearestaurantthatincludesasteakhouseandathairestaurant aliceisavegetarianandabhorsthesteakhouseoption themostuenceshe canexertistorankitlastorotherwiseputthefullweightofhervoteelsewhere ifthesteakhouseisotherwisepopular anyvotingmechanismwillchooseiteven iftheotherspreferitonlymildlyoverthai giventheothers'mildpreferences andalice 'sstrongpreference thaiisclearlythesociallyoptimalchoice con trarytotheresultofthevote notethatthisisaproblemwithallpossible variantsofvoting \\( approvalvoting bordacount instantruetc \\) fundamentaltoanyvotingsystemistherequirementthateachparticipanthave equalienceontheoutcome aswewillseeinthesubsequentsubsections auction basedmechanismsremovethisconstraint intherestaurantexampleabove thesteakhouseoptionisparetocient sincesomeparticipantspreferittothai \\( thaiisparetocientaswell \\) voting mechanismsinfactareparetocient \\( par \\) ingeneralsincetheywillalways pickanoptionthatatleastsomepeopleprefer weknow \\( gibbard satterthwaite \\) thatnoreasonablevotingsystemachieves icandmanyvotingmechanismsarefamouslysusceptibletostrategizing manypoliticalelections forexample expressingyourtruthfulpreferencefora thirdpartycandidateistantamounttowastingyourvoteifyouareconvinced givenyourexpectationofothers 'strategies yourchoiceisunlikelyto win inprinciple \\( therevelationprinciple \\) thereexistbnicvotingmechanisms butthisisoflittlepracticalvalueduetotherelianceonacommonknowledge distributionofvoterpreferences thuswecharacterizevotingsystemsgenerally asnotbnicintable1 votingdoesnotachievefairness \\( eq \\) evenexante sincepreferencesmay bepolarizedsuchthatcertainparticipantscanexpecttobeunhappywiththe outcome votingisofcoursecommonlythoughtofasfairinthecolloquialsense ofgivingeveryparticipantanequalopportunitytouencethedecision forbudgetbalance \\( bb \\) individualrationality \\( ir \\) andenvy freeness \\( env \\) thestoryforvotingsystemsisthesameasthatforcoinflipanddictatorship finally manyformsofvotinghavetheadvantageofbeingcomputationallysim ple \\( smp \\) requiringonlyashowofhandsorpaperballots thispropertyis 8 lost however formoresophisticatedvotingmechanisms 3 4vickrey clarke groves \\( vcg \\) mechanism noneofthedecisionmechanismsdiscusseduptothispointhaveinvolvedpay ments asdiscussedinsection1 theuseofpaymentsallowstheexplicitcom parisonofstrengthofpreferencesaswellastheabilitytoredistributeutilityto achievegreaterfairness westartwithaclassicmechanismthatachieveswhat noneofthepreviousmechanismscan socialiency thevcg vickrey 1961 clarke 1971 groves 1973 mechanismisimpres sivelyversatile \\( thoughmanycriticismshavebeenlevviedagainstit forexam ple thatitisvulnerabletocollusion \\) itcanbeappliedwheneveragentscan specifytheirfullpreferencesandwhendingthesociallyoptimalchoicegiven thosepreferencesiscomputationallyfeasible forthegroupdecisionsweare addressing theserequirementsarelargelymet aswewillsee vcgachieves mostofthekeymechanismpropertiesattheexpenseofbb themechanismproceedsbycollectingsealedbidsfromeachagent themechanismtakestobetheir \\( possiblystrategicallyfalsed \\) preferences thenselectstheoutcome thatmaximizestotalreportedutility icisthen achievedthankstoasimpleruleforestablishingthepayments eachagentpays theexternality 8 itimposesontherestofthegroup inotherwords foreach agent themechanismsolvesthesubproblemwithallagentsbut yielding outcome e isnot pivotal 'sparticipationcostthe groupnothingand paysnothing butifthesocialoptimumchangeswithout \\( 6 \\) waspivotalinthenaldecisionandpayspreciselywhat itcosttherestofthegroup pay p j 6 u j \\( \\) p j 6 u j \\( \\) inwords apivotalagent paysthebetweenthetotalutilityofeveryoneelse without andtheirutilitywith intuitivelythismeansthatifanagent 'spreferencesdonotimpacttherest ofthegroup theauctioncostsitnothing ifanagentdoespay itspaymentis entirelyinsensitivetotheamountofitsbids \\( conditionalonbeingaskedtopay atall e inencingtheoutcome \\) forthisreason itisadominantstrategy foragentstoreporttheirpreferencestruthfullyinvcg incentivecompatibilityinvcgcomesatthecostofbudgetbalance \\( bb \\) infact whentheexternalitiesarenegative \\( asisthecaseforchoosingamong contentiousoptions \\) vcgmaximizesrevenueamongallientmechanisms whenexternalitiesarepositive \\( asisthecaseforchoredivision \\) vcgrequires asubsidy anotherpotentialcomplaintaboutvcgisalowdegreeoffairness \\( eq \\) andlackofenvy freeness \\( env \\) nextweconsidermechanismsthat addresstheseshortcomings 8 anagent 'sexternalityistheaggregateutility \\( oftennegative \\) thattheotherparticipants derivefromitsparticipation forexample telephoneusagehaspositiveexternalities \\( moreothersusethetechnologythemoreusefulitis \\) forroadusage theexternalitiesare negativeduetocongestion 9 3 5shared goodauction \\( sga \\) two person voting considertheproblemoftwopeopletryingtodecidebetweentwooptions unless bothplayerspreferthesameoption nostandardvotingmechanism \\( witheither straightvotesorarankingofthealternatives \\) canhelpwiththisproblem vcgisanonstarterwithnoonetoprovideasubsidyandthird partypayments tantamounttoapureencyloss \\( burningmoney \\) insteadweproposeasimpleauction eachplayersubmitsabidandthe playerwiththehigherbidwins payingsomefunctionofthebidstotheloserin compensation reeves 2005 consideredaspecialcaseofthisauctionandgave theexampleoftworoommatesusingittodecidewhoshouldgetthebigger bedroomandforhowmuchmorerent wealsoditamostpracticalwayto allocatetasksforwhichtwopeoplehavejointresponsibility e g decidingwho booksightsforajointtrip wesometimesrefertothismechanismasan un sharingauction itallows oneagenttosellitshalfofagoodtotheotherjointowner \\( orpaytheotherto takeonitshalfofa bad \\) weeaspaceofmechanismsforthisproblemthatsatisfybb ir \\( withaminorcaveatnotedbelow \\) eff thefollowingisapayfunction ingaspaceofgamesparameterizedbythefunction f u \\( 0 0 \\) 8 f \\( 0 \\) 0 f \\( 0 \\) f \\( 0 \\) 2 0 f \\( 0 \\) 0 \\( 1 \\) u \\( \\) givestheutilityforanagentwhohasavalue forwinning \\( itstype \\) andchoosestobid \\( itsaction \\) againstanagentwhohasvalue 0 andbids 0 finally f \\( \\) issomefunctionofthetwobids 9 inthetie breakingcasethe payistheaverageofthetwoothercases e thewinnerischosenbythep ofafaircoin wenextconsiderarestrictionoftheclassofmechanismsedbyequa tion1 on1 sga \\( h k \\) isthemechanismedbyequation1with f \\( 0 \\) ha ka 0 thesearegamesinwhichthewinnerpaysalinearfunctionofthetwobids forexample insga \\( 1 2 0 \\) thewinnerpayshalfitsownbidtotheloser sga \\( 0 1 \\) thewinnerpaystheloser 'sbidtotheloser wenowgivebayes nash equilibriaforsuchgameswhenagents'values \\( types \\) areuniformlydistributed onaninterval theorem1 thatis h k 0 andtypes u b b 1 followingisasymmetricbayes nashequilibriumof sga \\( h k \\) \\( \\) 3 \\( h k \\) ha kb 6 \\( h k \\) 2 9 reeves 2005 consideredthecase f \\( 0 \\) 2 10 weprovidetheproofsoftheoremsinappendixa wecannowcharacterizethetruthfulmechanismsinthisspace according totheorem1 sga \\( 1 3 0 \\) isbnicfor u 0 b types thefollowingtheorem saysthisisthe truthfulmechanismforuniformtypes theorem2 u 0 b types \\( b 0 \\) sga \\( h k \\) isbnicifandonlyif h 1 3 k 0 furthermore u b typeswith 0 thereisno settingof h k suchthat sga \\( h k \\) isbnic ofcourse bytherevelationprinciple itisstraightforwardtoconstructa mechanismthatisbnicforany u b types however tobeaproperauction krishna 2002 themechanismshouldnotdependonthetypesofthepartici pants inotherwords themechanismshouldnotbeparameterizedby b withthisrestriction therevelationprinciplefailstoyieldabnicmechanism forarbitraryuniformtypes byconstructionthegameisbudgetbalanced \\( bb \\) regardlessofthestrate giessincethereisasingletransferpaymentfromthewinnertotheloser like wise individualrationality \\( ir \\) isguaranteedbyconstructionsinceeitheragent canoptoutbybiddingzeroandguaranteeingitselfzeropay thecaveattotheclaimofiencyforsgaisthatthestrategiesmustbe monotoneincreasingintype e greaterutilityforwinningcanneverleadyou tobidless thisisthecaseforthenashequilibriumintheorem1 fortruthful bidding andarguablyforanyothersanebiddingstrategy ifadditionallyboth agentsplaythesamemonotonestrategythentheagentwiththehighertype willalwayswin sincethetransferpayments beingbudget balanced donot contributetotheiency sgawillachievethecientoutcome \\( eff \\) 10 theshared goodauctionisexpostfairwhenthewinningagentpayshalf itssurplustotheloserincompensation forexample sga \\( 1 2 0 \\) wouldbeex postfair \\( eq \\) ifplayedaltruistically whenplayedstrategicallywith u b types wecancalculatethedegreeoffairnessfromthenashequilibriumin theorem1 whichfor h 1 2and k 0reducesto \\( 2 \\) 3 theutility oftheleasthappyagentismin \\( 2 w 6 w 2 w 6 \\) w isthewinner 's type whichreducesto \\( 2 w \\) 6since w sincethetotalutilityis w thedegreeofexpostfairnessis2 3 \\( 3 w \\) \\( takingtheexpectationwith respectto w \\) thedegreeofexantefairnessis2 3 \\( 2 b \\) theorem3 forstrategicagentswith u b types \\( b 1 \\) playingthe symmetricequilibriumgivenbytheorem1 thereisnosettingof h k sga \\( h k \\) guaranteesexpostfairness \\( eq \\) finally weconsidertheremainingpropertiesofsga theshared good auctionisparetoent \\( par \\) sincesomeoneendsupwiththegood h k aresuchthatthewinnerpaysatleasttheloser 'sbidtotheloser e k 1 thenthemechanismisenvy free \\( env \\) finally itisstraightforward 10 thetotalsocialwelfare isthetypeoftheplayerwiththehighesttype e torderstatisticofthetypedistribution theexpectedsocialwelfarefor u b typesis 3 2 b 3 11 tocollectbids pickthelargest andpayasimplefunctionofthebids withno computationalassistance \\( smp \\) thisisespeciallytruefor h 0and k 1 e whenthewinnerpaysthelosertheloser 'sbid itisthislastcase sga \\( 0 1 \\) thatwegeneralizeinthenextsection 3 6ageneraldecisionauction \\( dauc \\) thesgafamilycompriseversatiledecisionmechanismsfortwoplayers wenow generalizetothe n playercasewiththedecisionauction \\( dauc \\) abudget balancedmechanismthatmodivcgbyredistributingthevcgsurplusso astoincreasefairnesswithlimitedimpactonincentivecompatibility othershaveproposedsimilarlymotivatedmodisofvcg cavallo 2006 hascharacterizedpreferencedistributionsforwhichthesurpluscanbe partiallyredistributedwithnolossoficoreff faltings 2004 proposesthe simplemethodofachievingbbbyarbitrarilyexcludingsomeparticipantsfrom thedecisionandfunnelingthesurplustothem thisretainsicatthecost ofsomeeff parkesetal 2001 applyasimilarlymotivatedvcgpayment adjustmentapproachinthesettingofcombinatorialexchanges daucusesarelatedmethodforredistributingthesurplus aftermaking thevcgpaymentseachparticipantreceivesbackapieceofthesurplusinpro portiontothebetweentheirhighestbidandtheirbidforthewinning option \\( participantswhosehighestbidwasplacedforthewinningoptionwill thusnotrecieveanypayout \\) inect meansthatlosersgetcompen satedinproportiontohowbadlytheywantedsomeotherresult ifsomeoneis neutralamongtheoptionsandbidszeroacrosstheboard theywillnotrecieve anypayment whereassomeonewhoreallywantedoneofthelosingoptionswill recieveahigherpayout providedthatatleastonepersonwaspivotalinthe auction ifnooneispivotalthen likestraightvcg themechanismdoesnot requireanypayments notethatinthecaseoftwoagentsandtwooptionsthis mechanismreducestosga \\( 0 1 \\) thusweknowfromabovethatatleastinthe two playercasewithuniformtypes thedecisionauctionisientevenwhen playedstrategically theredistributionofpaymentsamongstthelosersmeansthatthismecha nismisnotincentivecompatible \\( ic \\) forexample placingyourhighestbidfor somethingyouknowwilllosewillgarneryoumoreoftheredistributedsurplus likewise ifyoususpectyouwillbepivotalandmayneedtopayclosetoyour fullbidtoinencetheoutcome youmayprefertoreduceyourbidinorder tolose \\( havealesspreferredoptionchosen \\) andgetcompensated ingeneral however youca n'thavegreaterinenceonthechosenoutcomebychanging yourbids youcanonlycapitalizeonlosing thiscanbeconsideredaformof partialincentivecompatibilityinthesensethat amongasmallgroupofpeople whocareforemostaboutdingthesocialoptimum reasonableparticipants areunlikelytotrytocapitalizetherestofthegroup thisisincontrastto straightvoting forexample wherestrategizingmayberequiredtokeepyour votefrombeingwasted daucalsoretainsincentivecompatibilityinadrentsense aiently 12 risk averseagent assumingaminimallydiusedistributionofothers'prefer ences willnotiateitsbidssincedoingsoentailsariskofanegativeutility \\( payingmoreforanoutcomethanit 'sworth \\) truthfulbidding infact isa minimaxstrategy 11 indauc ingeneral whendealingwithmechanismsthatarenotincentivecompatible itisusefultointroducesomenotionofthedegreeofincentivecompatibilityof themechanism totheseendswewouldliketomeasurehowmuchanagent standstogainbybiddingitsbestresponsetotruthfulbidding thiscanbe doneforthetwo playerversionofthisgame asitreducestosga \\( 0 1 \\) andwe getthefollowingresult theorem4 fortwoplayerswithtypes u 0 b truthfulbiddingisan equili briumindauc b 3 72 forexample forthecaseof u 0 1 types anagentcanimproveitsutility 1 72bydeviatingfromtruth telling againof4 proofofthistheoremis providedinthefullversionofthispaper 3 7nominallyfairauction \\( nfa \\) whatif hypothetically wetrustedparticipantstojustplaynicely \\( altruisti cally \\) \\? whatmechanismpropertiesbesides iccouldweachieve \\? theanswer isallofthem nfa fornominally \\( orperhapsnaively \\) fairauction isasim pledirectrevelationmechanismachieving withaltruisticagents everyproperty insection3 \\( except ic \\) likevcg itchoosesthesocialoptimumfromre portedpreferences \\( whichinthecaseofvcgarethetruepreferencesdueto ic \\) butallocatespaymentstomaximizefairness e tomakeeveryoneequally happy speccally n agents let b bethe thagent 'sbidforthewinning option u bethetotalutilityforthewinningoption theneachagent receives \\( orpaysifnegative \\) u n b sincethesumofthesepaymentsiszero regardlessofthestrategies weachievebbregardlessofagentstrategies nfaisnotgenerallybnic considerthetwo playercasewherethismech anismreducestosga \\( 1 2 0 \\) withtypesdrawnfrom u b weseefrom theequilibriumstrategythatthegameisnotbnicexceptforagentswiththe lowestpossiblevalue \\( thenashequlibriumis \\( 2 \\) 3 \\) asfordauc ever wecanndthedegreeofincentivecompatibilityinthetwo playercaseof nfa theorem5 fortwoplayerswithtypes u 0 b truthfulbiddingisan equili briuminnfa b 3 48 therearecaseswherenfaisbnic ifnotdsic considerthecaseof allocatingasharedgoodwithaknowncommonutility \\( perhapsnoonewants 11 aminimaxstrategyisfoundbyconsideringforeachstrategythelowestpossibleutility ifthatstrategyisfollowed \\( asiftheotherplayerscaredfornothingbuttoharmyou \\) pickingtheoneforwhichthisminimumismaximized inotherwords itisthestrategywhich maximizesworst caseutility 13 thegooditselfbutithasaknownresalevalue \\) itisinequilibriumtobidthe fullvalueofthegood whichamountstosplittingthegoodevenlyamongall participants infact anytimethereiscompleteinformationreasonablepeople tendtopicknfa schelling 1960 12 nfaisalsoenvy free \\( env \\) withaltruisticbidders supposeitwere n'tand forsomesetofpreferencesanagentwantedtotradeplaceswithanother bysocialiency theonewhowanteditmostgotit byfairness thetwo arereceivingequalutilityafterthepayments thus theagentwouldreceive lessutilitybyswitching whichisacontradiction finally nfaiscognitively computationally andmathematicallysimple \\( smp \\) \\( atleast itisnomore complicatedthansplittingadinnerbill \\) bilateraltrade usingnfa wecanalsocastbilateraltrade \\( k bargain ing \\) asagroupdecisionproblem myersonandsatterthwaite 1983 showthat itisimpossibleforanymechanismtoachieveeff ir andbbinbilateraltrade foranyreasonable \\( essentially overlapping \\) distributionofpreferences inorder tousenfaforbilateraltrade thesellersubmitsanegativebidforhowmuchit willcosttogiveupthegoodinquestion option trade withanimplicitzero bidforoption notrade thebuyersubmitsapositivebidforhowmuchthey wouldbewillingtopayforoption trade withzeroforoption notrade \\( course eitheragentmaystrategicallymisreportthesenumbers \\) ifthebuyer 's bidandseller 'sbidsumtogreaterthanzerothen appropriately trade bechosen otherwise notrade sincenfasplitsthereportedsurplusevenly thismeansthatthesellingpriceisedhalfwaybetweenthe \\( magnitudeof \\) theseller 'sandbuyer 'svalues chatterjeeandsamuelson 1983 givethenash equilibriumofthisgamefor u 0 1 typesforaseller \\( 1 \\) andabuyer \\( 2 \\) 1 \\( 1 \\) 2 1 3 1 4 2 \\( 2 \\) 2 2 3 1 12 notethatnfadoesnotapplytothecaseofmultilateraltradeasthemech anismsharessurplusover participants thisisclearlynotcorrectifthenal outcomeisatransactionthatinvolvesonlysomesubsetofthebidders e thecaseofgeneraltradewedo n'twanttorewardbiddersjustforparticipating intheauction jointpurchase jointpurchase \\( k publicgoodprovision \\) referstothe problemof n agentsdecidingifagoodtobesharedisworththecollective cost inordertoapplynfatojointpurchase weintroducethespecialplayer nature \\( seesection2 \\) sincethesellerisnotparticipatingintheauction ratherthegoodhasanexogenousprice weneedawaytoincludetheactual priceofthegoodintheauction wehavenaturesubmitanegativebidequalto thepriceofthegood theparticipantswillsubmittheir \\( presumablypositive \\) 12 considertheexampleofalicesellinghercartoherfriendbobwhentheyknowthe dealershipwouldbuyitfor 1000andsellitfor 2000 'llnaturallychooseasaleprice 1500 pernfa weseehownfaachievesthisresultbelow 14 bids thesetofpossiblechoicesconsistsof f buy nobuy g themechanism proceedsasdescribedabove selectingtheoptionthatmaximizestotalutility andcalculatingpayments withtheoneadditionalcaveatthatnaturemakes andrecievesnopayments sincenatureisreallyjustaplaceholderforthe costofthegoodinquestion wedo n'twanttosharethesurpluswithit two playerversionofthisgamewassuggestedbyreeves 2005 herewegivethenashequilibriumofnfafortwoplayersbothreporting nonnegativevaluesforasingleoption withanexogenouscost \\( negativebid fromnature \\) c 2 3 theorem6 forthegameedbythepayfunction u \\( 0 0 \\) \\( 0 c 2 0 c 0 otherwise andtypesdistributed u 0 1 thefollowingisasymmetricbayes nashequilib rium \\( \\) 2 3 c 4 1 6 3 8sequentialpieauction usingauctionmechanismsforvotingcanbecontroversial acommonobjection iscapturedbythemantra oneperson onevote thesequentialpieauction mechanismaddressesthisobjectionbyexplicitlygivingeachparticipantthe samenumberofvotes \\( oneortwo aswewillseebelow \\) andthengivingthem theopportunitytobuyandselltheirvotesfromeachotherinaseriesofauctions whilevotebuyingistabooinpoliticalelectionsitiscommonforsmall groupvoting \\( 'llsupportyourproposalifyoumaketheseconcessions \\) althoughsuchmechanismswillstillmeetresistanceonthegroundsthatvote buyingshouldnotbeexplicit wearguethatthedistinctionisrathermeaning less thesequentialpieauctionmechanismisasfollows 1 pickanumberofvotes k togivetoeachofthe n participantssuchthat thetotalnumberofvotesisanevennumber \\( e k 1if n iseven else k 2 \\) 2 whilevotesarenotallownedbythesameperson repeat \\( \\) pickthetwobiggestequalsizeblocksofvotessuchthateachofthe twoblocksareownedbydrentpeople breakingtiesarbitrarily \\( b \\) holdashared goodauctiontoreallocateallthevotesinbothblocks tooneofthetwopeople notethatthespecialcaseof n 2issimplyasingleshared goodauction playershaveanequalstakeinthedecisionandthestandonlyiterationof theauctiongivesthechoicetooneortheother 15 3 9iterativedecisionauction wenowconsideriterativemechanisms parkes 2006 theabovemechanisms handlethecaseofvotingonasmalllistofoptions theiterativedecision auctionaddressesthecasewhentherearesomanyoptionsthatitisprohibitive forparticipantstoexplicitlyassignvaluestoeachofthem forexample picking atimeforameeting inthismechanism adefaultoptionischosenarbitrarily andbroadcasttotheparticipantswhothenincreasetheirbids \\( fromthedefault ofzeroonalloptions \\) onasubsetoftheoptions \\( oftheirchoosing \\) theyprefertothecurrentdefault basedonthecurrentbids thesocially optimalchoiceisre broadcastasthenewdefaultoptionandtheprocessrepeats whennoneoftheparticipantsrespondtothedefaultbyincreasinganyoftheir bids theauctionendsandthecurrentdefaultischosen withpaymentsmade accordingtoanyoftheabovemechanisms \\( dauc nfa vcg etc \\) theiterativedecisionauctionretainsthekeypropertiesofthemechanism thatisusedtodecidethepaymentsbasedonthenalbidsandlastdefault optionbroadcast \\( wecallthisthebasemechanism \\) forexample itsdegreeof budgetbalanceisnaturallythesameasthebasemechanismsincenopayments aremadeuntilthealbidsarefedtothebasemechanism similarly thesocial ciency fairness andindividualrationalityareinheritedfromthebasemech anism disregardingthecognitive computationalburdenofconstructingand transmittingone 'sfullpreferences theiterativedecisionauctionalsoinherits theincentivecompatibilityofthebasemechanism 4asimplepredictionmechanism asdescribedinthenextsection wehaveimplementedasimpleinterfacefor friendlywagersastherststeptowardintegratinggroupdecision makingwith groupprediction thewageringsystemallowsparticipantstoenterprobabilities ofvariousoutcomes providingtheaverageoftheprobabilitiesasanaggregate measureoftheconsensusjudgment tomotivateparticipation usersalsospecify aworst caseamountofyootlestheyarewillingtoloseiftheyarewrong systemthencomputesfairoddsbasedonthereportedprobabilitiesofpairs ofparticipants fairoddsaretakentobe 1 p p to1where p istheaverageof thereportedprobabilities inthisway theparticipantshaveequalassessments oftheexpectedpayoutofthewager finally thepayoutsarescaledbythe mininumoftheamountstheparticipantswerewillingtorisk whentheactual outcomeresolves oneoftheparticipantsspeesthistothemechanism thenetstheappropriateyootlespayouts \\( fromtheloserofthebettothe winner \\) ournextgoalistointegratefull edgedpredictionmarketsinyootopia inparticular wewouldliketoimplementconditionalpredictionmarketsthat dependonpolicy \\( groupdecision \\) questionsinthespiritofrobinhanson 's futarchy 13 tofurthermarrygrouppredictionandgroupdecisions 13 http hanson gmu edu futarchy html 16 5implementation wehavecreatedanauction voting wageringsystemimplementingthemecha nismsdescribedinthispaper thissystemneedstohavethepropertiesthatit beeasytouse \\( nearly \\) universallyavailable andeasilymoablesothatnew mechanismtypescanbeimplementedquicklywithoutdisturbingexistingauc tions tothatend thesystemusessms \\( shortmessageservice \\) textmessages fromparticipantsforalltasksrequiredtocreateandrunanauctionorwager alternatively participantswithoutsmsaccesscanalsouseawebbrowserto accessthesamecapabilities usingthesamecommandsassmsparticipants userscaneveninteractwiththeyootlessystemviaacommandlinetool writ tenusingaprovidedperlapi thebulkoftheinterfaceisself explanatory canbereadbyeithervisitingthewebsite \\( currentlyat http yootopia org \\) ortextingthekeyword yootles tothephonecode4info \\( 44636 \\) theinter faceallowstheusertocreateanauctionorwager designatethemechanismused toruntheauction bidorbet checkresults andtransferpaymentsaccording tothemechanismresults eachauctionisdesignatedbyashortkeywordat creationtimewhichisusedforallsubsequentcommands anyusercancreate anauction whichcanalsobecreatedsimplybybiddingonanunknownauction name anyotherusercanbidonthatauctioniftheyknowthekeyword theywillreceivethecurrentresultsoftheauction biddingwithoutspecifying anamountwillalsoreturnthecurrentauctionresults attheendoftheauc tionanyparticipantcaninitiateayootlepayoutprocesstoautomaticallyenter payments \\( ifany \\) intotheledgersystem usingthesamecommanduserscan alsomakearbitrarypaymentsthatarenotassociatedwithanauctionkeyword wageringusesthesamesystem exceptthatusersspecifytheirexpected probabilityofagivenoutcomeandthemaximumamountofyootlestheyare willingtolose afterthewagerisresolved anyparticipantspewhether thespecedoutcomeoccurred andpaymentsaregivenoutaccordingly usealedgersystemtokeeptrackofyootlebalancesforallusersinthesystem plannedenhancementsincludeaddingrestrictionsforwhocanbidinagiven auctionandresolvingauctionnamecoctsbychangingtoalocalratherthan globalnamespace usingtheauctioncreator 'srealmoftrustedusers 14 also additionalsecurityrestrictionssothatonlydesignatedownersofanauctioncan changeitsmechanismorpayoutproceedsarenecessary thedocumentation ofthissystemisincludedinappendixband \\( moreuptodate \\) http yootopia org 6conclusion wehaveintroducedacurrency \\( yootles \\) forfacilitatinggroupdecisionmaking andprediction whileinmanysettingsyootleswillbecomeequivalenttoany regular government issuedcurrencytheirusecanbekeptintentionallyseparate allowingforthemtofunctioninsituationswheretheremaybereasonstoeschew 14 see http ripplepay com 17 theuseofmoney weproposeuseofanonlineledgersystemtotrackbalances andpeer peercreditnetworkstomitigateissuesofdefault ourprimaryfocusinthispaperisonanarrayofdecisionmechanismsfor commongroupdecisionproblems inparticularweintroduceanewmechanism \\( dauc \\) forredistributingthevcgsurplustoachievegreaterfairnesswhile retainingasemblanceofincentivecompatibility wealsointroduceamecha nism \\( nfa \\) forachievingalldesirablemechanismpropertiesinthecasethat agentsplayaltruistically formanyapplicationsthisislessusefulbutwede scribeapplicationsofnfatodomainswhereitisasensiblemechanismwhen playedstrategically \\( bilateraltradeandjointpurchase \\) additionallyweare abletogivelimitedresultsonthedegreeofincentivecompatibilityofthesetwo mechanisms \\( intherestrictedcaseoftwo players \\) ndingthatdauciscloser toincentivecompatiblethannfa fordomainssuchasmeetingschedulingwherethesubmissionoffullprefer encesiscostlyweproposeiterativeversionsoftheabovemechanisms finally wedescribeourimplementationsofthesemechanismsinanewservicefrom yahoo research acknowledgments davidpennock seung taekpark davidyang yilingchen anddanielel haveprovidedinvaluableandongoingassistanceinthiswork references ruggierocavallo optimaldecision makingwithminimalwaste strategyproof redistributionofvcgpayments fifthinternationaljointconferenceon autonomousagentsandmulti agentsystems 2006 kaylanchatterjeeandw f samuelson bargainingunderincompleteinfor mation operationsresearch 31 835 851 1983 edwardh clarke multipartpricingofpublicgoods publicchoice 11 17 33 1971 vincentconitzerandtuomassandholm computationalcriticismsoftherev elationprinciple fifthacmconferenceonelectroniccommerce pages 262 263 newyork 2004 boifaltings abudget balancedincentive compatibleschemeforsocialchoice aamas 04workshoponagent mediatedelectroniccommerce 2004 allangibbard manipulationofschemesthatmixvotingwithchance econo metrica 45 \\( 3 \\) 665 681 1977 allangibbard manipulationofvotingschemes ageneralresult econometrica 41 587 601 1973 18 jerryr greenandjean jacquest incentivesinpublicdecision making north hollandpublishingcompany 1979 theodoregroves incentivesinteams econometrica 41 617 631 1973 vijaykrishna auctiontheory academicpress 2002 andreumas colell michaeld whinston andjerryr green microeconomic theory oxforduniversitypress newyork 1995 rogerb myerson optimalauctiondesign mathematicsofoperationsre search 6 \\( 1 \\) 58 73 1981 rogerb myersonandmarka satterthwaite ntmechanismsforbilateral trading journalofeconomictheory 28 265 281 1983 johnnash non cooperativegames annalsofmathematics 2 \\( 54 \\) 286 295 1951 noamnisanandamirronen algorithmicmechanismdesign thirty rst acmsymposiumontheoryofcomputing pages129 140 1999 davidc parkes iterativecombinatorialauctions inpetercramton yoav shoham andrichardsteinberg editors combinatorialauctions chapter2 mitpress 2006 davidc parkes auctiondesignwithcostlypreferenceelicitation annalsof mathematicsandai 44 269 302 2005 specialissueonthefoundationsof electroniccommerce davidc parkes jayantrkalagnanam andmartaeso achievingbudget balancewithvickrey basedpaymentschemesinexchanges proc 17th internationaljointconferenceonaalintelligence \\( ijcai 01 \\) pages 1161 1168 2001 danielm reeves generatingtradingagentstrategies phdthesis university ofmichigan 2005 marka satterthwaite strategy proofnessandarrow 'sconditions existence andcorrespondencetheoremsforvotingproceduresandsocialwelfarefunc tions journalofeconomictheory 10 187 216 1975 thomasc schelling thestrategyoft harvarduniversitypress cam bridge march1960 isbn0674840313 url http www amazon co uk exec obidos asin 0674840313 citeulike 21 jamessurowiecki thewisdomofcrowds anchor august2005 isbn0385721706 url http www amazon co uk exec obidos asin 0385721706 citeulike 21 williamvickrey counterspeculation auctions andcompetitivesealedtenders journaloffinance 16 8 37 1961 19 appendix aproofs 1proofoftheorem1 weshowthatforthetwo playergamewithtypes u b andpayfunction u \\( 0 0 \\) 8 ha ka 0 0 ha ka 0 ha 0 ka 2 0 ha 0 ka 0 h k 0and b 1thatthefollowingisasymmetricbayes nash equilibriumstrategy 3 \\( h k \\) ha kb 6 \\( h k \\) 2 \\( 2 \\) considerthespecialcasethat h k 0 equation2prescribesa strategyofbidding 1 anditisclearthatthisisadominantstrategyinagame wherethewinneristhehighbidderwithnopaymentsrequired 15 wewillnow assumethat h k 0 e 1 3 \\( h k \\) c ha kb 6 \\( h k \\) 2 andlet bearandom u b variable givingtheopponent 'stype notingthatthetie breakingcase \\( 0 \\) happens withzeroprobability 16 giventhat \\( 2 \\) isacontinuousfunctionofauniform randomvariable wewritetheexpectedutilityforanagentoftype playing action eu \\( \\) e u \\( mt c \\) e ha k \\( mt c \\) j mt c pr \\( mt c \\) e h \\( mt c \\) ka j mt c pr \\( mt c \\) e ha kmt kc c pr c e hmt hc ka c pr c \\( 3 \\) weconsiderthreecasesontherangeof anddtheoptimalaction eachcase case1 c \\( \\) c \\) theprobabilitiesin \\( 3 \\) arezeroandone respectively andsotheexpected utilityis eu \\( \\) hm b 2 hc ka 15 thisassumesthatthespaceofpossiblebidsincludes 1 moregenerally thedominant strategyisthesupremumofthebidspacebutifthisisnotitselfamemberofthebidspace \\( asisthecaseifthebidspaceis r \\) thenthereisinfactnonashequilibriumofthegame 16 inthesamesensethatarealrandomvariablewithsupportofmeasuregreaterthanzero haszeroprobabilityofoccurringataprespedvalueinitssupport 20 thisisanincreasingfunctionin implyinganoptimalactionattheright boundary 1 c thusthebestexpectedutilityforcase1is eu \\( 1 \\) 2 b 6 case2 bm c \\( \\) c b \\) theprobabilitiesin \\( 3 \\) areoneandzero respectively andsotheexpected utilityis eu \\( \\) ha km b 2 kc thisisadecreasingfunctionin implyinganoptimalactionattheleftbound ary 2 bm c thusthebestexpectedutilityforcase2is eu \\( 2 \\) 2 b 6 case3 c bm c knowingthat c isbetween b itisstraightforwardtocomputethe probabilitiesin \\( 3 \\) andtheconditionalexpectationof sowewriteeu \\( \\) ha km c 2 kc c hm b c 2 hc ka b c \\( 108 2 h 4 432 2 kh 3 648 2 k 2 h 2 432 2 k 3 h 108 2 k 4 36 aah 3 72 ath 3 2 h 2 4 b 2 h 2 4 abh 2 72 aakh 2 36 abkh 2 36 ath 2 216 akth 2 36 aak 2 h 72 abk 2 h 8 2 kh 8 b 2 kh 2 abkh 216 ak 2 th 60 akth 12 bkth 36 abk 3 4 2 k 2 b 2 k 2 4 abk 2 72 ak 3 24 ak 2 12 bk 2 \\) \\( 24 \\( h k \\) 2 \\) sincethisisaconcavefunctionof themaximumiswherethederivativewith respectto iszero thatis \\( skippingthetediousalgebraforwhichweused mathematica \\) eu \\( \\) 0 \\) 3 3 \\( h k \\) ha kb 6 \\( h k \\) 2 since b \\) c 3 bm c 3 isinfactintheallowable rangeforcase3 theexpectedutilityforcase3isthen eu \\( 3 \\) 3 2 2 b 2 \\( b 6 \\) 6 21 itnowremainstoshowthatneithereu \\( 1 \\) noreu \\( 2 \\) isgreaterthan eu \\( 3 \\) forany since thereexistsa 0suchthat andsince b 1 thereexistsan 0suchthat b 1 first eu \\( 3 \\) eu \\( 2 \\) \\( 1 \\) 2 0 \\) 2 2 1 0 \\) 2 1 2 \\) \\( \\) 2 2 1 2 2 \\) \\( \\) 2 2 1 2 \\) 2 2 2 1 2 2 \\) 3 2 3 2 6 3 \\( 3 2 4 \\) 6 6 \\) 3 2 2 \\( 2 2 2 2 2 1 \\) \\( 2 \\) 6 6 2 2 2 \\) 3 2 2 \\( 1 \\) 2 \\( 1 \\) 6 6 2 \\( 1 \\) \\) 3 2 2 b 2 ab 6 6 2 b finally eu \\( 3 \\) eu \\( 1 \\) \\( \\) 2 0 \\) 2 2 2 0 \\) 2 2 2 \\) 3 2 3 2 6 \\) 3 2 3 2 \\( 3 2 \\) 6 \\) 3 2 3 2 3 3 2 6 3 \\) 3 2 \\( 2 \\) 6 \\( 2 2 2 2 2 1 \\) 2 3 1 \\) 3 2 \\( 1 \\) 6 2 \\( 1 \\) 2 2 \\( 1 \\) \\) 3 2 ab 6 2 b 2 2 b 2proofoftheorem3 first notethattoproveanyfairnessresultsforsga wemusttake k 0 k 0thepaymentmadebythewinnerisafunctionofboth 0 since 0 isindependentoftheutilityassociatedwiththeactualoutcome ca n'tmakeanyguaranteesonfairnesswhenthepaymentisinpartafunction 0 inotherwords toachievefairnesswewanttoonlyconsidertheutilityof theactualoutcome namely thetypeofthewinner 22 let 'slookatthedegreeoffairnessofansga \\( h 0 \\) auction recallthat degreeoffairnessis n u min p u n isthenumberofparticipantsand u utilityofeachparticipantforthenaloutcome insga \\( h k \\) thedegreeof fairnessis2 \\( ha ka 0 \\) inourcase k 0 so2 ha weknowthatagentsare biddingstrategicallyaccordingtotheequilibriumgivenintheorem1 sowe knowthat isafunctionofthewinningagent 'stype h substituting thisintotheequationfordegreeoffairness weget 2 h \\( 3 h 6 h \\) 2 3 1 2 3 3 weseethatthedegreeoffairnessisindependentof h andisroughly2 3with someadditionaladditivefunctionof note theonlytimetheauction iscompletelyfair iswhen recallthat isthelowestpossibletypefor anyagent foranagentwithlowestpossibletypetowin theotheragentmust alsohavehadtype sinceingeneral andifthelosingagenthadeven aslightlyhighervalue itwouldhavewontheauction 3proofoftheorem4 inordertoshowthattruthfulbiddingisan equilibrium wewanttoshow thatanagentstandstogainnomorethan byplayingtheirbestresponseto truthfulbidding sincethetwo playercaseofdaucreducestosga \\( 0 1 \\) wecanuseequation 3fromtheproofoftheorem1tondtheexpectedutilityofeachstrategy first notethatthetheoremgivesthreecasesovertherangeof however wenotice alsothatcasesoneandtwotellusthat willfallintotherangeexaminedin casethree thereforewecantakethesimpedversionoftheequationgiven incase3 eu \\( \\) ha km c 2 kc c hm b c 2 hc ka b c \\( 4 \\) foranopponentstrategyoftruthfulbidding 1and c 0 andsince h 0and k 1theabovebecomes eu \\( \\) \\( 2 \\) \\( \\) \\( b \\) \\( 5 \\) wewanttocomparetheexpectationoverall fortwospeactions namelytruthfulbidding \\( \\) andthebest responsestrategy \\( 5 6 \\) givenbyreeves 2005 weintegratewithrespectto overtheinterval 0 b tondthat eu \\( \\) b 3 3 andthat eu \\( 5 6 \\) 25 b 3 72 youlose b 3 72 bybiddingtruthfully 23 4proofoftheorem5 asaboveweusecase3versionofequation3fromtheorem1withanopponent strategyoftruthfulbidding since h 1 2and k 0inthetwo personcaseof nfa equation3becomes eu \\( \\) \\( 2 \\) \\( \\) b 4 \\( b \\) \\( 6 \\) wecomparetheexpectationoverall fortruthfulbidding \\( \\) andthe best responsestrategygivenbyreeves 2005 \\( 2 \\) byintegratingwith respectto overtheinterval 0 b wedthat eu \\( \\) b 3 3 andthat eu \\( 2 \\) 17 b 3 48 youlose b 3 48 bybiddingtruthfully bapiandsmsinterfacetodecisionmecha nisms wehaveimplementedthemechanismsdescribedinthispaperasansmsappli cation whichisadirectmappingtotheunderlyingyootlesapi thecurrent interfacecanbeusedformechanismsintheirsealed bidoriterativeforms thelattercaseparticipantssimplyresubmitbidsinlightofpartialresults see http yootopia org forthemostup datedocumentationofthesystem b 1keywords yootles respondswithawelcomemessageandlistofavailablecommands yhelp respondswithamenuformoredetailedhelp yreg name allowsausertoregistertheirphone thisisoptionalandonlyhastheect ofreferringtotheuseras name insteadoftheirphonenumberinsubsequent messagesfromtheserver ydel tag deletestheauctionorwagercalled tag tag phone thiscommand hasaspecialmeaning ydelphone disconnectsauserfromtheircurrentphonenumber thisallowstheuser toconnecttheiraccounttoantphonenumber andallowsotherstouse theoldphonenumber 24 ydel tagoption deletesthegivenoptionintheauctioncalled tag ybid tag \\( optionamount \\) allowsaparticipanttocastavoteorplaceabid tag parameter referstoapreviouslycreatedauction oranauctioncalled tag iscreatedifit n'texist theserverrepliestoeachbidwithintermediateauctionresults anynumberof optionamount pairsmaybespeed givingtheparticpant 's bidsforeachofthenamedoptions optionsspecedinaparticpant 'sbidare automaticallyappendedtothelistofoptionsforthevote anyunspeci optiondefaultstoazerobidandallbidsarerenormalizedbyatranslation constantsothattheminimumbidiszero \\( e fromeachbidsubtractthe minimumbid assumingmorethanoneoption \\) bidcommandsmaybereissued inwhichcasetheyoverridethepreviousamount \\( andthuserroneousoptions canbevoidedbyrepeatingthemwithazerobid \\) ifno optionamount pairsarespeed thenullbidservessimplytoping theserverforthelatestresults finally ifnooptionisspecedandonlyoneamount theoptiondefaults tothesender 'sownname \\( ifregistered \\) orphonenumber thissimpthe interfaceinthecommoncasethatthelistofoptionsandthelistofparticipants coincide notealsothatforthecaseof drawingstraws eachparticipantcan placeanegativebidforthemselfwhichisequivalenttoapositivebidofthe samemagnitudeforeveryoneelse ywager tagprobabilityamount placesabetinwager tag \\( whichhaspossibleoutcomesof yes \\) withaspecedprobabilityof yes between0and1 andaworst caseamount thattheparticipantiswillingtolose \\( ywager commandisnowalso generalizedtosupportanynumberofpossibleoutcomes \\) yreset tag purgesalltheoptionsandbids betsfromauctionorwager tag ypay tag rmthepaymentsspeinauction tag 'sresultsandtransferthem ontheyootlesledger ypay tagoutcome resolvesawagercalled tag withthespeoutcome \\( mustbeeither yes \\) andcreditsordebitsparticipantstheappropriatenumberofyootles basedontheirbetsandprobabilities ypay amountrecipientcomment analternativeuseofthe ypay keywordsimplytransfersthegivenamount ofyootlestotherecipientontheledger \\( iftheamountisnegativethisisa 25 paymentintheoppositedirection \\) anythingtypedafter recipient goesin thecommentsfortheyootlestransaction ycred user amount extendanamountofcredittoauser \\( bydefault0 02 \\) ymech tagmechparameters ymech keywordsetsthedecisionmechanismtobeusedforauction tag thedefaultoptionfor ymech dauc forthedecisionauction followingisa fullerlistofmechanismscomingsoon inallofthem thewinningoptionisthe onewiththegreatestsumafterthebids \\( votes \\) areinterpreted dauc decisionauction eitherthesealed bidversion \\( section3 6 \\) oriterative version \\( section3 9 \\) dependingonwhetherparticipantsresubmitbidsin responsetopartialresults nfa nominallyfairauction \\( section3 7 \\) apr approvalvoting foreachparticipanttheirpositivebidsaremappedto oneandtheirnonpositivebidsaremappedtozero bor bordacount n options eachparticipant 'sbidsaremappedtoa numberofpointswith n pointstotheirmostpreferredoptionand1to theirlowest \\( tiesbrokenarbitrarily \\) theoptionwiththehighestsumof pointswins rng rangevoting inrangevoting voters'bidsarerenormalizedtorange from0to1 asinallmechanisms thedefaultbidforalloptionsis0 optionwiththehighesttotalischosen irv instantvoting ininstantrunvoting ifnooptiongetsasimple majority \\( morethanhalftheparticipantsratedithighest \\) thentheoption whichtheleastnumberofpeoplerankedhighestiseliminated \\( ifyour rankingwasa b candaiseliminatedthenyournewrankingisb c \\) andtheprocessrepeatsuntilasimplest choicemajoritywinnerisfound wei weightedvoting eachparticipant 'sbidsareadjustedtranslationallyso thelowestbidiszeroandthenrescaledsotheysumtoone thisisa generalizationofpluralityvotinginwhichanagentmaydivideitsone voteamonganynumberofoptions jpa joint purchaseauction \\( section3 7 \\) fav favorauction ageneralizationofbilateraltrade describedinsec tion3 7 thisisafront endfornfa thebuyerplacesapositiveself bid andtheselleranegativeself bid thesaleprice ifthebidsoverlap isthe averageofthetwobids exch anexchange orcallmarketmechanism 26 cyootlesquestions withanswers 1 whatpreventssomeonefrombiddingamillionyootlestogettheirway \\? youcanonlybidasmanyyootlesasyouhavepluswhatevercreditline otherusershaveextendedtoyou 2 willrichparticipantsbeabletowalkalloverthepoor bybuyingyootles withmoney \\? tgroupsmayevolvedrentconventions onesuchconvention maybeageneralunderstandingthatit 'snotkoshertobuyyootleswith dollars eitherdirectlyorindirectly thisofcourseisnotstrictlyenforce ablewhichiswhyitcouldonlybelooselyenforcedintheformofasocial taboo ifyootlesarepurchasablewithmoney yootlingservesasameans forwealthredistribution 3 whatifi'mgenerouswithyootlesandmyfriendisstingy \\? beinggenerouswithyootlesviolatesthespiritofyootles yootlesare ameasureofyourutility begenerousinyouractions notyouryootle transfers rememberthatayootlethatyougiveawayisinessencean iouforafavordone sobeinggenerouswithyouryootlesislikebeing generousinacceptingfavorsfromsomeoneelse apersonwhoisstingy withyootlesissomeonewhoisgenerouswiththeirtime orwithgiving waytoothers 'desires 4 areyootlessusceptibletoiation \\? andhowdoijudgethevalueofa yootle \\? yes ifanentitygoesmorenegativethanitcanmakegoodon thiscauses inonforthesamereasonthatthegovernmentprintingexcessmoney causesinion likemoney yootlesaresusceptibletoinin thesensethatifpeoplecometoexpect say anhourofcookingtofetch amillionyootlesthenbidswillateaccordingly inotherwords price bubblescanform anynumberofthingscangroundthevalueofayootle includinganothercurrency thisispossibleevenifmoneyandyootlesare neverexchanged theexpectation \\( alongwithsomeadjustmentsbythe centralbank \\) couldkeepthevalueofayootlegrounded \\( insomuchasyour localcurrencyisgrounded \\) anotherwaytogroundthevalueofayootle istomakeitworthanhourofunskilledlabor thisistherationalefor alocalcurrencyinithaca newyork ithacahours \\( althoughinreality hoursaregroundedstrictlyindollars \\) 5 shouldtherebeaninterestrate \\? 27 yes humans beingmortal haveafundamentaldiscountfactor utility nowisbetterthanutilitylater thecurrentincarnationoftheyootles ledgersetsauniversal \\( butmoable \\) interestrateof5 375 theup comingversionoftheledgerwillallowanypairofparticipantstochoosea custominterestrate \\( includingzeroorevennegative \\) andinfactmultiple interestratesfordrentchunksofcredittheyextendtoeachother 6 howaboutlettingpeoplegetoutofyootledebtbydonatingtocharity \\? 'saveryniceidea \\( thankstodavepennock \\) butit 'snotaperfect solution thecharitywouldhavetoitselfbeayootlesaccountwhichwould sellyootlestoanyonewho 'snegativeandusethecashforcharity charityaccountwouldbeexemptfromtherequirementthatitnotstay negativeinitely howevermanynegativeyootlesthecharityaccount hasishowmanypositivedollarsthegrouphasdonated thedownsideis thatthefurthernegativethecharityaccountgoes themoreinthe yootlescurrencyis sayi'mfeelingphilanthropicandpay1000yootlesin someauctionwhichilaterreplacefromthecharityaccount 's1000 yootlesiodedthegroupwithandayootlewillbedevaluedaccordingly italsomayunderminesomegoodincentiveproperties younowwantto makemepaymore evenifi'mnotpayingyou becauseifigonegative 'llprobablyenduppayingacharitythatyoupresumablycareabout 7 whyisyootleinonbad \\? youlosethepropertythatayootleisworthadollar whichmay makeithardertoquantifyyourpreferences 'shardertolearnaboutyourpreferencesovertimewhenthevalue ofayootleischanging itdestroysaniceapplicationoftheyootlessystem trackingdebts \\( smallorlarge \\) ofrealmoneybetweenmembersofthegroup mostgenerally ithurtssociale 8 howcanyouensurethatayootlewillalwaysbeworthadollar \\? ifyootlesbecomemore \\( orless \\) valuable thecentralbankcaninject yootlesintothesystem \\( ortaxthemout \\) 9 i'manaltruist igetutility \\( yootility \\) fromincreasingothers'utility whathappenswithmeinthesystem \\? wewouldtrytochangeyourworldviewandgetyoutotrustinthein visiblehand presumablywhatyoureallywantistomaximizesocial welfare notsimplytomaximizeeveryone 'sutilityintentionallyatyour 28 ownexpense participatingsincerelyinayootles basedsystemisabetter waytoachievethatthanyouoperatingonyourassumptionsaboutothers' utilityfunctions oncepeopleareaccustomedtoexpressingtheirutility functionsit 'samazinghowmuchmoreectivelytheycanincreaseeach 'sutility 10 whatistheconnectiontoripplepay com \\? ournewledgersystemwasinspiredbyripplepay ripplepaybeginswith theinsightthatlogginganiouonaledgerisinaveryrealsensethesame aspayingsomeone theyhaverunwiththisideaandhaveimplemented analternativetothecurrentyootlesledgersysteminwhichalldebtsare trackedpairwisebetweenindividualswhotrusteachother 29", 
    "crawled_date": "2017-06-10T13:59:38.015853"
  }, 
  "44": {
    "link5": "https://developers.dwolla.com/", 
    "link4": "https://docs.dwolla.com/", 
    "link1": "https://www.dwolla.com/updates/dwollas-open-sourced-developer-documentation-portal/", 
    "api_url": "dwolla.com", 
    "link3": "https://docsv2.dwolla.com/", 
    "link2": "https://www.dwolla.com/updates/dwollas-open-sourced-developer-documentation-portal/dwolla-ach-api-documentation/", 
    "progweb_url": "https://www.programmableweb.com/api/dwolla", 
    "progweb_date": "12.21.2010", 
    "progweb_descr": "The Dwolla Access API provides an interface to integrate the Dwolla payments platform into a software application. Dwolla provides white label or branded bank transfer payment services, instant bank verification, and a simple yet powerful API for ACH transfers. \r \r The API provides developers with the functionality to transfer money to users, send mass payments,  transfer money between users, facilitate bank verification and authorization, and retrieve transfer history. The RESTful API implements HATEOS and HAL, and responses are formatted in JSON.", 
    "api_name": "Dwolla", 
    "progweb_cat": "Payments,B2B", 
    "descr5": "using outdated browser please upgrade browser improve experience dwollalet 's talk menuabout products developers log sign let 's talkguides resources api docs sdksrawphprubypythonjavascriptlanguagerawphprubypythonjavascriptchoose guideplease select guidegetting started sandbox send money users receive money users transfer money users authorization webhooks migrate access apifollow stepsoverview send money usersoption 1 access apioption 2 transferfetch funding sourcescreate transfercheck transfer statusfollow stepsoverviewoption 1 access apioption 2 transfercheck transfer statusfollow stepsoverview transfer money usersobtain application access tokencreate verified customerattach unverified funding sourcecreate unverified customerattach verified funding sourcecreate transfercheck status transferin guideoverview authorizationauthorization code flow \\( transfer \\) oauth account creationclient credentials flow \\( access api webhooks \\) using access tokenfollow stepsoverview webhooksobtain authorizationcreate webhook subscriptionvalidating webhooksprocessing webhooksfollow stepsoverview migrate access apiaccess api principlesmaking requestsauthenticationsdk supportv1 access api endpoint changesother notable changesfaqin guideoverview site gatewaydirect submit optionserver server optionapi v1 resourcesoff site gatewayapi v1 reference docstoolssandbox dashboardtoken generatorchange logstatusarticlesaccount typestransfer accountsaccess api accountsbank transfer workflowprocessing timestransfer failuresfacilitator feeoauth refresh strategiespreemptively refresh authorizationrefresh demandrefresh best practicestesting sandboxaccess api articlescustomer verificationpersonal verified customersbusiness verified customershandling verification statusesdwolla jsadd bank accountinstant account verificationon demand bank transfersdwolla plaid integrationfunding source verificationmicro deposit verificationinstant account verificationsame day achwire transfer apiintroductionoauthcustomersdocumentsfunding sourcestransferseventswebhook subscriptionswebhookssimple powerful api ach transfersview guidestry outcopyraw php ruby python javascriptcopyraw php ruby python javascriptcopyraw php ruby python javascriptcopyraw php ruby python javascriptcopyraw php ruby python javascriptset sandboxget starteddeveloper communityget answersstay touch get api updatesstatus production operationalproductsaccess api transferfeaturesbank transfers mass payments day ach white label dashboard admin instant bank account verificationaccountsign log support security privacy legalcase studieson demand payouts ad platform marketplace payouts subscription billing rental collection savings tool investment platform b2b disbursementslearn moreabout us let 's talk developer docs updates press careersfinancial institutions play important role dwolla network dwolla inc agent veridian credit union compass bank funds associated account dwolla network held pooled accounts veridian credit union compass bank funds eligible individual insurance including fdic insurance may eligible share insurance national credit union share insurance fund dwolla inc operator software platform communicates user instructions funds transfers veridian credit union compass bank 2016 dwolla inc dwolla inc agent financial institution partner \\( \\)", 
    "descr4": "nav api version v1 v2 json php ruby python node js get api credentials get help sandbox environment documentation powered slate dwolla longer supports v1 api please consider new improved v2 api introduction api v1 continue function foreseeable future dwolla longer adding features supporting minor bug fixes maintaining sdk new api version version 2 features improved event driven notifications white label capabilities developer experiences intuitive dashboard admin interface v2 also provide functionality version 1 like masspay feel free sign developer newsletter remain informed ongoing changes checkout migration documentation join us developer forum helper libraries helper libraries api v1 longer officially supported dwolla please consider new improved v2 api includes updated sdks unsupported community maintained php dwolla php ruby dwolla ruby python dwolla python node js dwolla node java dwolla java clojure dwolla clojure scala dwolla scala windows 8 sdk phone xaml js ios dwolla ios os x cocoa dwolla cocoa perl webservice dwolla c net dwolla net making requests requests must json encoded body header requests parameters provided querysting requests must made https http requests met http 302 https equivalent remember url encode get querystring parameters responses happy response unsuccessful response responses always json encoded contained envelope means every api response contains boolean indicating whether call successful resulted error error message api call unsuccessful otherwise actual data returned api call api responses contain object contains links \\( uris \\) keys within links name link describe relationship current resource link facilitator fees enabling facilitator fee application feature set percentage flat fee incoming transactions transactions created via send endpoint transactions resulting site gateway checkout facilitator fee attached facilitator fees also attached money requests created application money request fulfilled facilitator fee paid facilitator fees 50 transaction amount must least 0 01 affect original transaction amount exist separate transaction resource unique transaction id metadata metadata supplied send masspay items money requests refunds checkouts metadata property property json object \\( collection key value pairs \\) maximum 10 key value pairs stored keys values must strings maximum length 255 characters visibility access metadata intended expansion existing field \\( string max length 255 \\) order allow applications store data resources unlike field visible application created transaction recipient sender transaction \\( dwolla com dashboard \\) future applications view transaction visible application created transaction application sender receiver may access metadata field warnings currently 2 bugs aware metadata collection contains two duplicate keys http 500 xml response thrown instead proper error response keys start number symbol \\( ex 10 10abc abc \\) rejected errors api request results error dwolla typically responds http status code response body containing json object containing error set however special cases uncaught exception system api request malformed \\( json syntax error duplicated keys \\) dwolla return http xml response body realize two different response formats errors far ideal something aim fix future versions api general errors following errors common across api endpoints authentication need provide application key secret initialize libraries invalid expired access token response interact api need api keys create consumer application order get application api endpoints require application \\( instance creating checkout looking user \\) require oauth endpoints require oauth access token included authorization http header like needless say replace oauth oauth dwolla api lets interact user dwolla account act behalf send money request money application first needs request authorization users dwolla implements oauth 2 0 standard facilitate authorization similar facebook twitter authentication flow user first presented permission dialog application point user either approve permissions requested reject user approves sent application exchanged pair used make api calls require user authentication like send list transactions token lifetimes access tokens short lived 1 hour refresh tokens long lived 60 days refresh token used within 60 days generate new access token refresh token pair long refresh authorization least every 60 days application maintain authorization indefinitely without requiring user authorize request authorization example initiation url start oauth process construct initiation url user visit order grant permission application describes permissions application requires \\( \\) client application \\( \\) user redirected grant deny permissions application \\( \\) url format remember url encode querystring parameters oauth scopes applications may request following permission scopes generating access token finish authorization successful response user returns application via specified querystring parameter appended url exchange authorization pair http request response parameters refresh authorization successful response invalid expired refresh token response use valid generate new pair note receive change every time exchange either new token pair recently issued allow receive new pair http request response parameters catalog response full user token contains send scheduled requests response direct user token contains send scheduled requests fetch list endpoints available user catalog endpoint initial step toward supporting hal currently includes links send create scheduled fulfill request endpoints future extended include endpoints available user use endpoint determine whether user needs provide pin order use send create scheduled fulfill request endpoints since direct users pin instance key included instead regular would see full users uri remains either case link withoutpin appended need ask user pin may omit parameter calling endpoint endpoint requires oauth access token require particular scope http request webhooks webhook notifications used notify application particular events occur relating transactions requests application facilitated created four kinds webhook notifications transactionstatus transactionreturned requestfulfilled requestcancelled webhook notifications json encoded post requests contain header currently way retrieve past webhook notifications security webhook notifications include header verify originated dwolla signature sha 1 hmac hash request body secret key application secret \\( \\) transactionstatus status transaction application facilitated changes \\( e g transaction clears successfully fails cancelled \\) dwolla send transactionstatus webhook transactionreturned notifies application bank funded transaction facilitated application returned financial institution requestfulfilled notifies application money request created application fulfilled requestcancelled notifies application money request created application cancelled send money successful receive response send money authorized user account dwolla account id phone number e mail address send money phone number email address recipient yet dwolla account sent sms email notifying payment prompting sign claim funds facilitator fees allow application facilitating payment take cut 50 payment amount default facilitator fee sent application owner account sent recipients declaring additional facilitator fees optional array http request endpoint requires oauth access token scope response successful response simply sender transaction id resulting payment read transactions errors checkouts create checkout site gateway checkout sessions must completed user within 15 minutes creation two types checkouts standard checkout standard checkout means payment placed automatically immediately user clicks submit button confirmation screen paylater checkout paylater checkout means user redirected back site clicking continue confirmation screen payment created yet 15 minutes complete checkout order place payment create paylater checkout set create checkout successful get back simply append resulting uri send user http request purchaseorder object errors retrieve checkout response fetch existing checkout get status details http request response parameters returns checkout additional information complete paylater checkout successful get back otherwise might get error like one finish paylater checkout attempt create payment http request response parameters funding sources dwolla accounts funding sources linked bank accounts line credit funds added bank funding source \\( \\) user account vice versa funds withdrawn user account balance bank funding source payments funded real time funding source user account balance fisync enabled bank account line clear instantly hand transactions funded ach bank funding sources require 2 5 business days funds made available recipient ach funding sources added verified via api important note id funding source arbitrary string identifer bank account number means need worry protecting standard would sensitive information like bank account number funding source types funding source resource list funding sources response enumerate user funding sources endpoint requires oauth access token scope http request request parameters following querystring parameters optional filtering funding sources limit results query funding sources particular user receive payment helpful instance user account trying send money opted accept payments funded via ach funding source another case select merchant accounts ability receive credit funded transaction credit would appear list funding sources filtered provide params request example want see funding sources user account id 812 713 9234 accept errors get funding source response look particular funding source funding source id endpoint includes additional parameter funding source type dwolla account balance funding source available funds returned otherwise ach fisync funding sources endpoint requires oauth access token scope http request errors withdraw funding source response withdraw funds user account balance one user bank funding sources new transaction type created result endpoint requires oauth access token scope http request request parameters errors add money funding source response add funds user bank funding source user dwolla account balance new transaction type created result endpoint requires oauth access token scope http request request parameters errors add new funding source response add new ach bank account funding source authenticated user created funding source need verified used two micro deposits made amounts must verified using verify endpoint manually user www dwolla com endpoint requires oauth access token scope http request request parameters errors verify funding source response verify amounts 2 micro deposits sent funding source endpoint requires oauth access token scope http request request parameters errors transactions movement money whether payment fee withdrawal adding funds dwolla balance recorded individual transaction instance adding money funding source dwolla account balance creates type transactions work payment sent 2 transactions created least one created credit recipient account balance another one debit sender account balance simple example let say bob sends 5 alice account balance action two created transaction credits alice account 5 transaction deducts 5 bob account important keep mind bob looks payment see credit transaction id called sender transaction id similarly alice looks payment see different transaction id call recipient transaction id additional transactions particular payment additional transactions created payment bank sourced fund payment facilitator fee learn correlate sender recipient transaction id guide transaction types transaction statuses initial transaction state real time \\( e g balance fisync credit \\) funded transfers always processed transaction resource list user transactions response retrieve transaction history authenticated user endpoint requires oauth access token scope http request example get latest 200 transactions type request parameters errors list app transactions response list transactions application created facilitated http request example get latest 200 transactions type request parameters get specific transaction response look particular transaction id \\( either sender recipient read transaction ids \\) either oauth access token supplied api application facilitated transaction supply application key secret instead endpoint take either oauth access token scope api application http request fetch transaction belongs authorized user fetch transaction belongs application errors search transactions response search user transactions filtering results based amount range date range transaction type transaction status individual name business name dwolla id email address phone number endpoint requires oauth access token scope http request fetch transaction belongs authorized user optional querystring parameters response scheduled payments payments scheduled created future date 3 years future scheduled payment created transaction created \\( thus funds transferred \\) scheduled payments one time recurring options recurring payments flexible create recurring payment pays weekly monthly daily every 2 weeks every week tuesdays fridays every 12th 18th 26th month error creating transaction scheduled payment bank sourced payments supported time scheduled payment resource create scheduled payment response create new scheduled payment behalf authorized user initial must fund payment bank funding source allows scheduling one time payment recurring payments use object endpoint requires oauth access token scope http request recurrence object errors list scheduled payments list authorized user scheduled payments created application endpoint requires oauth access token scope http request optional parameters response retrieve scheduled payment retrieve scheduled payment id endpoint requires oauth access token scope http request edit scheduled payment edit amount response edit existing scheduled payment partial editing allowed supply field \\( \\) change along sender pin note field cannot modified need change recurrence scheduled payment delete create new one endpoint requires oauth access token scope http request errors delete scheduled payment successful response contains id deleted scheduled payment delete pending scheduled payment created application status must cannot delete scheduled payment endpoint requires oauth access token scope http request querystring params errors delete scheduled payments successful response contains json array ids scheduled payments deleted delete authorized user pending scheduled payments created application delete scheduled payments endpoint requires oauth access token scope http request querystring params transaction stats response transaction statistics retrieved authenticated user currently report contains count transactions sum transactions given period time endpoint requires oauth access token scope http request request parameters errors users dwolla users looked via api account types get basic account info successful receive response retrieve basic information dwolla user given dwolla id email address http request must dwolla id email address example lookup user email response errors get full account info successful receive response retrieve information authorized user endpoint requires oauth access token scope http request response get email address successful receive response retrieve email address authorized user endpoint requires oauth access token scope http request response get avatar retrieve avatar image dwolla user given dwolla id requires authentication return 220px x 220px png file http request find nearby businesses successful receive response retrieve list dwolla business accounts \\( spots \\) near given location http request response errors find users nearby successful receive response retrieve list dwolla users near given location users must opt allowing location seen enabling setting dwolla mobile app example \\( web app \\) http request response errors contacts dwolla user user sends money receives money becomes user contact resource get user contacts successful receive response use following endpoint fetch authorized user contacts endpoint requires oauth access token scope http request optional paramters balance response fetch user account balance endpoint requires oauth access token scope http request masspay masspay allows easily send 5 000 payments single api request payments funded single user specified funding source processed asynchronously upon submission masspay queued processed service processes processed one ofter average rate 0 5 sec item therefore expect 1000 item masspay job completed 8 minutes masspay offers significant advantage repeatedly calling send endpoint individual transaction fact bank funded masspay job incurs single withdrawal bank account fund entire batch payments alternative approach incurs withdrawal bank funding source individual payment used approach reported incurring fees financial institutions excessive ach transactions create job response create new masspay job endpoint requires oauth access token scope http request request parameters items payment created masspay job represented json object following properties errors list jobs response list user existing masspay jobs endpoint requires oauth access token scope http request optionally provide querystring parameters limit number results returned offset results number items example retrieve first 20 results first 5 set results errors retrieve job response look particular masspay job id endpoint requires oauth access token scope http request errors list job items response retrieve items particular masspay job endpoint requires oauth access token scope http request optionally provide querystring parameters limit number results returned offset results number items example retrieve first 20 results first 5 set results item statuses response contain item corresponds success fail particular transaction masspay job item contain status either errors retrieve job item response retrieve particular masspay job item job id item id endpoint requires oauth access token scope http request errors refund response commercial non profit government type accounts refund payments received limit window time payment refunded individual accounts currently cannot refund payments refund creates new transaction refund amount total payment amount plus facilitator fees assumed sender refund api requires recipient transaction id provided endpoint requires oauth access token scope http request request parameters response parameters errors money requests money requests sent dwolla user another dwolla user phone number email address money request essentially invoice requesting payment recipient request money requests fulfilled amount request greater whenever payer decides fulfilled requestfulfilled webhook notification sent money requests also cancelled either sender request recipient request cancelled requestcancelled webhook notification sent money requests expire money request statuses money request resource create money request successful receive response send money request authorized user destination dwolla user email address phone number endpoint requires oauth access token scope http request errors list money requests successful receive response list authorized user pending requests endpoint requires oauth access token scope http request request parameters retrieve money request successful receive response retrieve single money request id endpoint requires oauth access token scope http request errors fulfill money request successful receive response fulfill authorized user pending money request request must status endpoint requires oauth access token scope http request errors cancel money request cancel money request authorized user created received request must status successful recieve response endpoint requires oauth access token scope http request account settings oauth scope set retrieve user account preferences currently account feature enable disable user via api auto withdrawal auto withdrawal enabled user payments received user automatically withdrawn bank funding source choice get auto withdrawal status enabled get disabled get response determine whether auto withdrawal enabled authorized user endpoint requires oauth access token scope http request enable disable auto withdrawal enabled get response enable disable auto withdrawal authorized user endpoint requires oauth access token scope http request json php ruby python node js", 
    "descr3": "dwolla let 's talk menu products developers log sign let 's talk guides resources api docs sdks raw php ruby python javascript language raw php ruby python javascript product access api transfer options get help sandbox environment introduction welcome dwolla access api documentation connect software banking infrastructure access api white label design however co branded experiences capabilities continue migrated legacy api v1 \\( longer supported \\) information transitioning v1 access api see migration guide making requests requests supply header requests must specify header request response bodies json encoded requests must made https non secure requests met redirect \\( http 302 \\) https equivalent uri copyauthorization requests require either oauth access token oauth access tokens passed via http header requests require client id client secret sent using content type via json body content type api host production https api dwolla com sandbox https api sandbox dwolla com idempotency key prevent operation performed dwolla supports passing header unique key value multiple idempotency key result multiple resources created example request initiate transfer fails due network connection issue reattempt request idempotency key guarantee single transfer created reattempt request value receive original response recommended use random value idempotency key like uuid \\( e \\) idempotency keys intented prevent conflicts short period time therefore keys expire 24 hours dwolla server still processing original receive error response subsequent request example transfer using idempotency keycopyerrors error responses use http status codes indicate type error json response body contain top level error code message detailed description error errors contain media type closely align spec example http 401 errorcopycommon errors following errors common across api endpoints validation errors responses top level error code returned possible correct specific problem request response include message validation error \\( \\) present see embedded errors list details least one possibly detailed error present list embedded errors multiple errors represented collection embedded error objects embedded json object field json pointer specific field request problem human readable description problem detailed error code one following values required invalid valid value field invalidformat chars amount field instance duplicate customer specified email already exists readonly field allowed modified notallowed value valid exists allowed used restricted account customer restricted activity insufficientfunds used source destination fields transfer endpoint requiresfundingsource used destination field transfer endpoint indicate customer needs bank filetoolarge used document upload example http 400 validation errorcopylinks relationships available actions resource represented links resources attribute minimum resources link indicates url resource links give url follow access related resources example customer resource link followed list customer available funding sources responses contain collection resources pagination links copytools following section outline development tools take advantage assist integration dwolla api available tools help improve testing development workflow well aide solving difficult problem \\( e g ui generation \\) integrating dwolla application dwolla hal forms dwolla hal forms extension hal spec created describe dwolla represents forms api extension starts media type media type used profile link part header request conjunction dwolla hal style media type including two media type identifiers accept header api knows looking form given resource example accept header value primary benefit ability dynamically generate ui based state particular resource application easily transition state without knowing dwolla business rules information needs included actual request transition state link relation returned resource application follow link making get request resource including header shown response include simple json response body contains information http method message content type request parameters used sending request dwolla api note currently forms returned creating editing customers looking forward expanding across existing future endpoints reference spec information properties returned dwolla hal forms response read blog post one developers building functionality sdk support dwolla access api officially maintained software packages make easier developers get started making requests api section provide basic instructions install packages get running recommend use posix standardized shell development machine assume already familiar set tools required specific technical ecosystem officially maintained sdks available ruby node js python php java sdks autogenerated swagger codegen versioned accordance api schema endpoint grouping assigned class operation use make request choose environment target \\( e g production vs sandbox \\) providing sdk different api host value libraries actively maintained therefore encourage community contribution api hosts rubydwollav2 ruby \\( recommended \\) available rubygems source code available github page information available project readme installationcopyquickstart let fetch page customers copydwollaswagger ruby available rubygems source code available github page information available project readme installationcopyquickstart let list objects copypythondwollav2 python \\( recommended \\) available pypi source code available github page information available project readme installationcopyquickstart let list objects copydwollaswagger python available pypi source code available github page information available project readme installationcopyquickstart let list objects copyphp available packagist source code available github page information available project readme installationcopyquickstart let list objects copyjava actively maintained dwolla however source code available github page community contribution encouraged information available project readme installation required install source please installed path copyquickstart let list objects copyjavascript available npm source code available github page information available project readme installationcopyquickstart let fetch page customers copy authorization dwolla utilizes oauth 2 protocol facilitate authorization oauth authorization framework enables third party application obtain access protected resources \\( transfers funding sources customers etc \\) dwolla api access dwolla api granted application either behalf user behalf application section covers application auth meant server server applications using access api creating application get started making oauth requests need first register application dwolla logging navigating applications page application registered obtain \\( aka client credentials \\) used identify application calling dwolla api sandbox environment provides created application signed account learn getting started guide remember client secret kept secret sure store client credentials securely token lifetime access tokens short lived 1 hour refresh authorization application access token application simply exchange client credentials new app access token invalidate previous token application authorization client credentials flow used application needs obtain permission act behalf application exchange application access token application access token used make calls dwolla api behalf application example create webhook subscription retrieve events make calls access api customer related endpoints primary reason obtaining application access token managing webhooks events however dwolla modified grant type allowing applications access access api customer related endpoints using application access token http request production sandbox including header request sent token endpoint following parameters request parameters response parameters requestcopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript successful responsecopy root root serves entry point api providing application ability fetch discover resources available based oauth provided request user account access token provided request api return links resources belong dwolla account user \\( e accounts customers \\) alternatively application access token provided request api return links resources belong dwolla application \\( e events webhook subscriptions \\) http request request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript accounts represents access api partner dwolla account established dwolla com migrating transfer user accounts access api customers dwolla offers seamless process migrating existing transfer user accounts managed via oauth platform access api customers user account maintain existing functionality dwolla com act separate access api customer upon completion migration learn upgrading access api please contact sales account links copyretrieve account details section shows retrieve basic account information belonging authorized user account http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript create funding source account section details add bank account dwolla account bank account status upon creation dwolla account eligible transfer money bank credit union account need verify ownership account via micro deposit verification information micro deposit verification reference funding source verification resource article http request request parameters errors request responsecopylist funding sources account retrieve list funding sources belong account default funding sources returned unless querystring parameter set request http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list search transfers account section covers retrieve account list transfers transaction search supported passing optional querystring parameters represents term search endpoint requires oauth account access token scope http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list mass payments account section covers retrieve account list previously created mass payments mass payments returned ordered date created recent mass payments appearing first http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript customers customer represents individual business intend transact programmatically created managed dwolla account via api order dwolla create manage customers application must obtain permission dwolla enabled production section outlines functionality access api premium product approved partners may access production learn entering access api agreement please contact sales verified unverified customers transfer money least one party must complete identity verification process either sender receiver decision party completes process based business model may want parties complete identity verification process cases customer sending funds receiving funds account customer remain unverified account already verified however need transfer funds customers least one need verified information access api account types reference account types resource article receive receive customers restricted payouts business model receive customer maintains limited functionality api eligible receive transfers attached bank account dwolla created migrating dwolla user accounts access api customers dwolla offers seamless process migrating existing user accounts managed via oauth platform access api customers user account maintain existing functionality dwolla com act separate access api customer upon completion migration learn upgrading access api please contact sales customer links customer resource customer statuses copycreate customer section details create new customer create need provide customer full name email address require additional information give dwolla ability confirm identity individual business verified customers include type businesses dwolla need verify information business authorized representative business provide customer full name value applicable information verified customers reference customer verification resource article endpoint requires oauth account access token scope http request request parameters unverified customer request parameters verified customer additional request parameters verified customer type business request parameters receive errors unverified customercopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript verified customercopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript receive customercopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list business classifications retrieve list industry classifications identify customer business industry classification required dwolla verifying order better analyze nature business http request request responsecopyretrieve business classification section shows retrieve business classification list industry classifications industry classification id needed order verify customer http request request parameters request responsecopyupdate customer endpoint used facilitate following use cases update customer information upgrade customer customer suspend customer deactivate customer update verified customer information verification http request update customer information limited set information updated existing created customer note customer information cannot updated status request parameters unverified customer request parameters verified customer request parameters verified customer type business addition table business verified customers update following fields upgrade unverified customer verified customer unverified customer upgraded verified customer supplying necessary information required create verified customer reference table required information suspend customer unverified verified customers suspended specifying status request need contact dwolla unsuspend customer request parameters deactivate customer unverified verified customers deactivated specifying status request customer cannot deactivated following conditions true customer verification status customer transfers funds available customer \\( verified customers \\) request parameters retry verification verified customer status information may miskeyed one opportunity correct mistakes using endpoint time need provide customer full ssn additional attempt fails resulting status either customer must retry state copyrequest responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript try customer retry state copyrequest parameters retry verified customer errors list search customers section outlines retrieve list created customers http request request parameters request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve customer section shows retrieve customer belonging authorized user account id part location resource developer pass either entire resource make request http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript create demand transfer authorization section outlines create demand bank transfer authorization customer demand authorization allows customers authorize dwolla transfer variable amounts bank account using ach later point time products services delivered demand authorization supplied along customer bank details creating new customer funding source demand authorization enabled application customer presented text add bank account screen user interface \\( ui \\) giving authorization dwolla future variable payments note demand payments come part access api requires additional approval getting started please contact sales information enabling http request http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript create funding source customer two methods available adding bank credit union account customer either collect customer bank account information pass dwolla via new customer funding source endpoint send customer instant account verification \\( iav \\) flow add verify bank account within seconds dwolla account access api customer eligible transfer money bank credit union account need verify ownership account either via instant account verification \\( iav \\) micro deposits information bank account verification reference funding source verification resource article new funding source customer create new funding source customer customers maximum 6 funding sources http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript instant account verification \\( iav \\) iav simple secure process requires server side client side interaction server requests single use token used represent customer adding verifying bank client side implementation includes dwolla js library page used render iav flow copygenerate iav token get single use iav token customer http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript initiate iav flow initiate instant account verification customer dwolla js javascript library gives ability render iav flow within specified container call function pass following arguments container want iav render customer single use iav token callback handle initiate http request asking dwolla load iav specified container customer successfully completes iav flow dwolla sends response includes either error link newly created verified funding source resource usage configurationinclude dwolla js development version production \\( minified \\) version configure dwolla jscopyexamplecopyresponse copyerrors list funding sources customer retrieve list funding sources belong customer default funding sources returned unless querystring parameter set request http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list search transfers customer section details retrieve customer list transfers transaction search supported passing optional querystring parameters represents term search http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list mass payments customer section covers retrieve verified customer list previously created mass payments mass payments returned ordered date created recent mass payments appearing first http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript documents verified customers type status require photos identifying documents uploaded manual review order verified currently sdk support document upload exists ruby node js python upload document using languages must use external http library information handling customer verifiation status reference customer verification resource article document resource copycreate document create document customer pending verification uploading photo document requires multipart form data post request file must either 10mb size http request request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list documents section contains information retrieve list documents belong customer http request request parameters request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve document section contains information retrieve document id http request request parameters request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript funding sources add retrieve ach bank account information via funding sources customers maximum 6 funding sources funding sources created accounts customers resources funding source resource copyretrieve funding source section covers retrieve funding source id http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript update funding source section covers update funding source optional attributes updated funding source status choose update name name routingnumber name accountnumber three attributes attribute updated remains prior update including funding source id attribute updated funding source either status http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve funding source balance section covers retrieve funding source funding source either type http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript initiate micro deposits section covers initiate micro deposits bank verification reference funding source verification resource article information micro deposit method bank account verification http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript verify micro deposits section covers verify micro deposits bank verification reference funding source verification resource article information micro deposit method bank account verification http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve micro deposits details section shows retrieve status micro deposits check micro deposits eligible verification status micro deposits object returned response body includes ach return code description http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript remove funding source remove funding source id removed funding source soft deleted still accessed retrieved http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript transfers transfer represents money transferred transfers available resources transfer resource copyamount json object initiate transfer section covers initiate transfer either dwolla account access api customer resource endpoint requires oauth account access token scope http request request parameters source destination types facilitator fee facilitator fee feature allowing flat rate amount removed payment fee sent creator dwolla application fee affect original payment amount exists separate transfer resource unique transfer id within transfer request specify optional request parameter array fee objects represent many unique fee transfers information collecting fees payments reference facilitator fee resource article fee json object fee object example copyhttp status error codes request response \\( using day ach \\) reference example shows request looks like sending transfer please note example using day clearing access api customer bank account part dwolla access api copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve transfer section covers retrieve transfer belonging account customer id endpoint requires oauth account access token scope http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list fees transfer section outlines retrieve fees charged created transfer fees visible charged fee well dwolla involved receiving fee endpoint requires oauth account access token scope http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve transfer failure reason bank transfer fails account customer dwolla returns link retrieving transfer id failure link used retrieve ach return code description reference list possible failure codes descriptions shown transfer failures resource article note transfer fails bank account automatically removed dwolla system ach return codes except endpoint requires oauth account access token scope http request request parameters request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript cancel transfer bank transfer eligible cancellation dwolla returns link getting transfer id cancel link used trigger cancellation preventing bank transfer processing bank transfer cancellable 4pm ct business day transfer initiated prior 4pm ct transfer initiated 4pm ct cancelled anytime 4pm ct following business day endpoint requires oauth account access token scope http request request parameters request responsecopy masspay dwolla masspay allows easily send 5 000 payments one api request payments funded single user specified funding source processed asynchronously upon submission mass payment initially pending processed service processes mass payment processed one rate 0 5 sec 1 sec item therefore expect 1000 item masspay completed 8 16 minutes masspay offers significant advantage repeatedly calling transfers endpoint individual transaction benefit fact bank funded masspay incurs single ach debit bank account fund entire batch payments alternative approach incur debit bank funding source individual payment used approach reported incurring fees financial institutions excessive ach transactions mass payment resource copyinitiate mass payment section covers initiate mass payment partner dwolla account verified customer resource mass payment contains list representing individual payments optionally mass payments contain mass payment well items contained mass payment used pass along additional information mass payment item respectively deferred mass payment mass payment created status allows create mass payment defer processing later time trigger processing deferred mass payment update mass payment status deferred mass payment cancelled updating mass payment status http request request parameters source destination values mass payment item item object example copyhttp status error codes request response \\( masspayment account customers \\) copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve mass payment section outlines retrieve mass payment id mass payments status upon creation move finally service runs recommended retrieve list mass payment items mass payment status determine items failed process successfully http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript update mass payment section covers update mass payment status triggers processing created deferred mass payment cancels created deferred mass payment http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list items mass payment mass payment contains list payments called distinct transfer creates item contain status either depending whether payment created dwolla service mass payment item status indication transfer successfully created mass payment items returned object list http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve mass payment item section covers retrieve mass payment item unique identifier item contain mass payment item belongs transfer created item destination user http request request parameters http status error codes request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript events state resource changes dwolla creates new event resource record change event created webhook created deliver event urls specified active webhook subscriptions events resource copyevent topics \\( partner dwolla account \\) event topics \\( customers \\) list events retrieve list events application http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve event section covers retrieve event id http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript webhook subscriptions create webhook subscription receive requests dwolla \\( called webhooks \\) events associated application occur webhooks sent url provide creating webhook subscription refer events section list events trigger webhooks automatic pause webhook subscription dwolla automatically pause subscribed webhook endpoints longer reachable webhook subscription paused 400 consecutive failures help us ensure unavailable endpoints cause delays issues delivery notifications api partners webhook subscriptions unpaused calling endpoint acknowledgement retries application receives webhook respond http 2xx status code indicate successful receipt dwolla receives status code greater http 400 application fails respond within 20 seconds attempt another attempt made dwolla attempt delivery 8 times course 72 hours according backoff schedule webhook successfully received would like information call retrieve webhook id webhook subscription resource create webhook subscription section details create webhook subscription deliver webhooks specified url endpoint requires oauth application access token http request request parameters request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retrieve webhook subscription section details retrieve webhook subscription id endpoint requires oauth application access token http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript update webhook subscription section details pause webhook subscription webhook subscription paused dwolla continue create webhooks send subscribed webhook url useful webhook endpoint unavailable want temporarily disable webhook requests endpoint requires oauth application access token http request request parameters request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list webhook subscriptions section covers retrieve list webhook subscriptions belong application endpoint requires oauth application access token http request request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript delete webhook subscription delete webhook subscription stop receiving webhooks url specified using sdk request successful unless exception thrown stating otherwise endpoint requires oauth application access token http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list webhooks webhook subscription section covers view fired webhooks webhook subscription endpoint requires oauth application access token http request request parameters request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript webhooks new event created active webhook subscription new webhook created order deliver event attempted deliveries recorded webhook property attempt includes recorded request response delivery attempt webhooks sent asynchronously guaranteed delivered order recommend applications protect duplicated events making event processing idempotent note webhooks containing event fired application valid refresh token dwolla user account event created webhook resource attempts json object request response json object retrieve webhook section covers retrieve single webhook endpoint requires oauth application access token http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript retry webhook section details retry webhook id endpoint requires oauth application access token http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript list retries webhook section covers retrieve webhook retries id endpoint requires oauth application access token http request request parameters errors request responsecopy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript copy raw php ruby python javascript products access api transfer features bank transfers mass payments day ach white label dashboard admin instant bank account verification account sign log support security privacy legal case studies demand payouts ad platform marketplace payouts subscription billing rental collection savings tool investment platform b2b disbursements learn us let 's talk developer docs community updates press careers financial institutions play important role dwolla network dwolla inc agent veridian credit union compass bank funds associated account dwolla network held pooled accounts veridian credit union compass bank funds eligible individual insurance including fdic insurance may eligible share insurance national credit union share insurance fund dwolla inc operator software platform communicates user instructions funds transfers veridian credit union compass bank 2016 dwolla inc dwolla inc agent financial institution partner \\( \\)", 
    "descr2": "dwollacrqfrtufwsfuzzrxu contact sales menu products developers log sign let 's talk dwolla ach api documentation mariah young june 20 2016 twitter facebook facebook back posts products access api transfer features bank transfers mass payments day ach white label dashboard admin instant bank account verification account sign log support security privacy legal case studies demand payouts ad platform marketplace payouts subscription billing investment platform b2b disbursements learn us let 's talk developer docs blog press careers financial institutions play important role dwolla network dwolla inc agent veridian credit union compass bank funds associated account dwolla network held pooled accounts veridian credit union compass bank funds eligible individual insurance including fdic insurance may eligible share insurance national credit union share insurance fund dwolla inc operator software platform communicates user instructions funds transfers veridian credit union compass bank 2017 dwolla inc dwolla inc agent financial institution partner \\( \\)", 
    "descr1": "dwollacrqfrtufwsfuzzrxu contact sales menu products developers log sign let 's talk dwolla open sourced developer documentation portal ben milne february 16 2016 twitter facebook facebook dwolla developer docs gotten pretty darn good discovered really cool things working well wanted make best practices available anyone might find useful open sourced three repositories github today hope helpful developers building top dwolla apis make easier suggest changes docs developer portal one challenges past producing intuitive experience developer documentation code needed section getting started guides sdks technical documentation typically needs function bit differently content made supporting element primary portal see live docs https developers dwolla com find github repo https github com dwolla open source developer portal v1 documentation powered slate made great deal changes v1 documentation largely focused oauth api developers building dwolla com platform applications see live docs https docs dwolla com find github repo https github com dwolla v1 payment api v2 documentation powered slate made even changes one live inside primary developer portal currently v2 documentation largely focused white label ach integrations see live docs https docsv2 dwolla com find github repo https github com dwolla v2 ach api docs changes like see made \\? go github profile submit feedback pull requests interested learning ach api implementing custom white label integrations contact integration specialist get started sandbox environment interested business could utilizing access api within platform application \\? reach sales team back posts products access api transfer features bank transfers mass payments day ach white label dashboard admin instant bank account verification account sign log support security privacy legal case studies demand payouts ad platform marketplace payouts subscription billing investment platform b2b disbursements learn us let 's talk developer docs blog press careers financial institutions play important role dwolla network dwolla inc agent veridian credit union compass bank funds associated account dwolla network held pooled accounts veridian credit union compass bank funds eligible individual insurance including fdic insurance may eligible share insurance national credit union share insurance fund dwolla inc operator software platform communicates user instructions funds transfers veridian credit union compass bank 2017 dwolla inc dwolla inc agent financial institution partner \\( \\)", 
    "crawled_date": "2017-06-10T13:59:47.703224"
  }, 
  "45": {
    "api_url": "merchantwaresolutions.com", 
    "progweb_url": "https://www.programmableweb.com/api/merchantware", 
    "progweb_date": "10.10.2012", 
    "progweb_descr": "Merchant Warehouse is a payment processing provider offering the MerchantWare suite. The suite is a web-based payment gateway and virtual terminal that lets merchants securely process transactions and manage their merchant account. MerchantWare supports batch processing and multiple user login access for enhanced account and user management, virtual terminal back-up capabilities, advanced transaction reporting and more.  The API allows merchants to integrate payment processing functionality into their own software products and POS systems. Interested developers should contact the provider for more information.", 
    "api_name": "MerchantWARE", 
    "progweb_cat": "Payments,Messaging", 
    "crawled_date": "2017-06-10T13:59:38.017994"
  }, 
  "42": {
    "api_url": "ixaris.com", 
    "progweb_url": "https://www.programmableweb.com/api/ixaris-opn", 
    "progweb_date": "12.10.2010", 
    "progweb_descr": "Ixaris Opn is a platform for external financial networks and allows third-party financial institutions to provide payment services through publicly-available APIs. For developers, Ixaris makes complex global payments easy. Full documentation is not yet available.", 
    "api_name": "Ixaris Opn", 
    "progweb_cat": "Payments", 
    "crawled_date": "2017-06-10T13:59:47.715436"
  }, 
  "43": {
    "link1": "http://www.accumulus.com/content/terms-use", 
    "api_url": "accumulus.com", 
    "link2": "http://www.accumulus.com/content/plug-customer-portal", 
    "progweb_url": "https://www.programmableweb.com/api/accumulus", 
    "progweb_date": "12.14.2010", 
    "progweb_descr": "Accumulus is a subscription billing service that lets developers fully automate customer onboarding, cancellation and change processes. The entire billing process is available via the Accumulus API, including customers, signups, subscriptions and payment methods. The service also includes means of tracking very basic usage, so that developers can later query utilization based usage for a particular customer.", 
    "api_name": "Accumulus", 
    "progweb_cat": "Payments,Billing", 
    "descr2": "menu homeoverviewsolutionsdevelopercontactabout us plug customer portal contact us getting started plug customer portal utilized via single sign stand alone please note examples omit required javascript libraries css files brevity full example available single sign example single sign mode user logged via external means single sign token obtained via accumulus api utilized provide access end user information body div class acc portal token obtained via api br body obtaining access token plug portal utilizes customer access token obtained via api accumulus api obtaining token described obtaining token plug customer portal make sure specify ajax parameter set true requesting token refer respective sdk documentation using sdk instead rest based interface accumulus login example plug customer portal require user log credentials stored accumulus configured shown body div class acc portal headertext customer portal tenantid testinc loginscreen true body configuration plug customer portal configured show components turn components component inside plug customer portal shown hidden individually following example shows remove profile usage related components portal div class acc portal token obtained via api headertext customer portal showbalance true showprofile false showstatementhistory true showpaymentmethods true showsubscriptionlist true showusagebalances false showusagehistory false showmakepayment false default portal message portal component shows default empty content area first instantiated customized show message instead following example shows display contents html file default content area div class acc portal headertext customer portal token obtained via api emptywidgetareaurl https myserver mymessage html custom logo header portal component configured show company logo following example shows display company logo left header text div class acc portal headertext customer portal token obtained via api companylogourl https myserver mylogo png component specific configuration usage balances usage balances component customer value transformation handler configured order alter quantity data shown example alters quantity custom usage type support time append word hours head script type text javascript function formatquantityhandler \\( type value \\) \\( type 'support time' value 0 \\) value hours' return value head body div class acc portal headertext customer portal token obtained via api usagebalances formatquantityhandler formatquantityhandler body usage history filter usage history component several configuration parameters exist control usage records shown many shown one page take parameter indicates many usage records show single page fromdatetime parameter indicates date show usage data \\( day going back time \\) body div class acc portal headertext customer portal token obtained via api usagehistory take 5 usagehistory fromdatetime 12 12 2013 body using individual components besides using plug portal entirely also possible use component individually using single sign token following examples demonstrate include individual components within html page optional configuration parameters balance div class acc balance token obtained via api onservererror errorhandler showheader true div profile profile oncustomeredit profile onpasswordchange options allow specifying handler called customer information edited password changed div class acc profile token obtained via api onservererror errorhandler showheader true profile oncustomeredit customeredithandler profile onpasswordchange passwordchangehandler div payment method list options paymentmethods showcreditcards paymentmethods showbankaccounts paymentmethods showbillingagreements either true false specify sections show showcreditcards true default div class acc payment methods token obtained via api onservererror errorhandler showheader true paymentmethods showccaddressfields true paymentmethods showcreditcards true paymentmethods showbankaccounts true paymentmethods showbillingagreements true paymentmethods confirmurl conformation url paymentmethods cancelurl cancellation url div statement history div class acc statement history token obtained via api onservererror errorhandler showheader true div subscription list subscriptionlist cancelsubscription option set true false specify subscription cancellation allowed via component div class acc subscription list token obtained via api onservererror errorhandler showheader true subscriptionlist cancelsubscription false div usage balances div class acc usage balances token obtained via api onservererror errorhandler showheader true usagebalances formatquantityhandler formatquantityhandler div usage history div class acc usage history token obtained via api onservererror errorhandler usagehistory take 10 usagehistory fromdatetime 10 29 2014 div make payment div class acc make payment token obtained via api div related topics localization theming javascript css dependencies custom error handling get started today contact us companycontact us news privacy policy terms use team overviewpricing signup activation customer engagment integration payment processing provisioning renewals upsales reporting scaling tax compliance usage metering developerplug signup plug self service portal api external systems notifications provisioning resourceschoosing merchant account understanding payment gateways 1 503 770 0265 info accumulus comsupport accumulus com copyright 2009 2014 accumulus corporation rights reserved accumulus trademark accumulus corporation names brands may claimed property respective owners", 
    "descr1": "menu homeoverviewsolutionsdevelopercontactabout us terms use contact us version 1 0 2march 6 2012this terms use agreement \\( agreement \\) contract \\( customer user \\) accumulus corporation \\( accumulus us \\) applies accumulus customer account \\( account \\) use accumulus' programs web sites services \\( services \\) using accumulus services agree bound terms conditions agreement accumulus' privacy policy may amended time time future \\( see modifications \\) must read agree accept terms conditions contained agreement also agree accept comply terms conditions accumulus partner service provider effect time access partner service provider product website service services including limited paypal \\( https www paypal com cgi bin webscr \\? cmd p gen ua ua outside \\) financial institution 1 license1 1 accumulus hereby grants non exclusive non transferable worldwide right use services solely internal business purposes subject terms conditions agreement rights expressly granted reserved accumulus licensors 1 2 may access services direct competitor accumulus except accumulus' prior written consent addition may access services purposes monitoring availability performance functionality benchmarking competitive purposes 1 3 shall \\( \\) license sublicense sell resell transfer assign distribute otherwise commercially exploit make available third party services way \\( ii \\) modify make derivative works based upon services \\( iii \\) create internet links services frame mirror content server wireless internet based device \\( iv \\) reverse engineer access services order \\( \\) build competitive product service \\( b \\) build product using similar ideas features functions graphics services \\( c \\) copy ideas features functions graphics services 2 customer account2 1 password confidentialitywhen registering new account us enter confidential password account via web interface users account also receive confidential passwords users shall maintain security confidentiality passwords shall share password others agree notify us immediately reason suspect unauthorized use account 2 2 identity authenticationyou authorize accumulus directly third parties make inquiries consider necessary validate identity may include asking information requiring take steps confirm ownership email address financial instruments ordering credit report verifying information third party databases sources 2 3 credit report authorizationwhen open account providing accumulus written instructions obtain personal business credit report credit bureau accumulus may obtain credit report open account time thereafter accumulus reasonably believes may increased level risk associated account increased level risk includes limited high number chargebacks reversals suspicious activity associated account 2 4 privacyprotecting privacy important accumulus please review accumulus privacy policy order better understand commitment maintaining privacy well use disclosure information 2 5 termination2 5 1 termination usyou agree acknowledge may sole option cancel services terminate agreement cause time without notice notice choose give may provided written e mail electronic form notwithstanding may terminate agreement immediately cause agree purposes agreement actions failure act user account attributed good cause shall include limited behavior towards employees customers offensive abusive violent threatening disruptive fail provide unable validate correct accurate contact information require customers fail cooperate provide information connection investigation undertaken local state federal authorities equivalent governmental agency determine payment mechanism provided likely likely used fraudulent manner oryou violate provision agreement terms conditions posted us breach representations warranties made hereunder 2 5 2 termination youyou may close account time emailing support accumulus com upon account closure cancel pending transactions remain liable obligations related account even account closed 2 6 refunds2 6 1 subscription feessubscription fees prepaid terminate account unused prepaid subscription period fees refunded pro rated daily basis 2 6 2 transaction feestransaction fees prepaid therefore refundable account termination 3 assignmentyou may transfer assign rights obligations agreement without accumulus' prior written consent accumulus reserves right transfer assign agreement right obligation agreement time 4 hold harmlessyou agree protect defend indemnify hold us harmless claims causes action liabilities judgments penalties losses costs damages expenses \\( including attorneys' fees related costs expenses litigation arbitration trial appeal whether litigation arbitration instituted \\) suffered incurred us including without limitation claim personal injury property damage arising \\( \\) agreement \\( ii \\) services provided us \\( iii \\) use services \\( iv \\) violation federal state local laws statutes rules regulations purposes agreement indemnified parties shall include accumulus corporation owners affiliates subsidiaries parents shareholders members successors assigns representatives franchisees officers directors agents attorneys employees 5 disclaimer warranties limitation liabilityyou agree services provided basis without warranties whether expressed implied implied warranties including warranties fitness merchantability correctness completeness currency otherwise disclaimed special incidental consequential exemplary damages arising agreement services hereby excluded full extent permitted law shall liable indirect incidental special consequential punitive damages whether action arising breach contract tort cause even advised possibility damages represent warrant services meet expectations requirements services provided securely without errors services provided available basis make warranties services timely available times particular period time without interruptions customer use operation services website owned controlled us customer's sole discretion risk responsible damage resulting customer computer systems results use website jurisdictions allow limitation exclusion liability incidental consequential damages limitation exclusion may apply 6 service revisions errataaccumulus' services could include technical typographical photographic errors accumulus warrant services accurate complete current accumulus may make changes services time without notice accumulus however make commitment update services 7 third party programs services web sitesaccumulus responsible content third party web site containing links accumulus' web sites third party web site 's inclusion link accumulus web site imply endorsement accumulus third party web site accumulus warrant make representations concerning accuracy likely results reliability third party web sites linked accumulus' web sites use third party web sites user 's risk accumulus responsible content third party program consuming accumulus' web services third party program 's use accumulus web services imply endorsement accumulus third party program accumulus warrant make representations concerning accuracy likely results reliability third party programs consuming accumulus' web services use third party programs user 's risk 8 representations warrantieseach party represents warrants legal power authority enter agreement accumulus represents warrants provide services manner consistent general industry standards reasonably applicable provision thereof services perform substantially accordance online accumulus documentation normal use circumstances represent warrant falsely identified provided false information gain access services billing information correct accessing accessed services commit illegal acts violate sections 1 2 1 3 agreement acknowledge breach representations warranties shall entitle us injunctive relief \\( monetary damages sufficient remedy \\) well available monetary damages attorneys' fees costs 9 modificationsaccumulus may revise agreement services time without prior notice posting revised version terms use agreement website \\( www accumulus com \\) using accumulus' services agreeing bound current version terms use agreement 10 governing lawany claim relating accumulus corporation 's web site shall governed laws state oregon without regard conflict law provisions 11 severabilityin event provision modification agreement shall deemed illegal invalid otherwise unenforceable provision shall considered deleted agreement provisions agreement remaining portion provision deemed illegal invalid unenforceable part shall continue full force effect 12 non waiverif party agreement fails enforce provision agreement fails exercise right time failure shall operate waiver thereof 13 assignmentyou may assign agreement without prior written approval agreement may assigned us without consent 14 entire agreementthis agreement pages referred herein contain entire agreement relative protection information exchanged hereunder supersede prior contemporaneous oral written understandings agreements regarding issue agreement shall modified amended except expressly provided herein written instrument executed parties get started today contact us companycontact us news privacy policy terms use team overviewpricing signup activation customer engagment integration payment processing provisioning renewals upsales reporting scaling tax compliance usage metering developerplug signup plug self service portal api external systems notifications provisioning resourceschoosing merchant account understanding payment gateways 1 503 770 0265 info accumulus comsupport accumulus com copyright 2009 2014 accumulus corporation rights reserved accumulus trademark accumulus corporation names brands may claimed property respective owners", 
    "crawled_date": "2017-06-10T13:59:47.706679"
  }, 
  "40": {
    "link5": "https://www.sagepay.co.uk/about-us/policies/amex-documentation", 
    "link4": "https://www.sagepay.co.uk/support/find-an-integration-document/server-integration-documents", 
    "link1": "https://www.sagepay.co.uk/file/12236/download-document/DIRECT_Integration_and_Protocol_Guidelines_010814.pdf", 
    "api_url": "sagepay.co.uk", 
    "link3": "https://www.sagepay.co.uk/support/integration-kits-protocols-document", 
    "link2": "http://integrations.sagepay.co.uk/", 
    "progweb_url": "https://www.programmableweb.com/api/sagepay-reporting-and-admin", 
    "progweb_date": "11.18.2010", 
    "progweb_descr": "The SagePay Reporting and Admin API allows back-office systems to interact with the Sage Pay payment systems in the same manner as a person with a web browser might use our My Sage Pay administration area. The API uses the same user accounts and privilege system as My Sage Pay, and will allow account administration and reporting functions, but with a finer degree of granularity than the My Sage Pay Screens, with all messages in real-time in a consistent XML format. SagePay offers secure online payment solutions for over 30,000 businesses. Full documentation for the API is not publicly available.", 
    "api_name": "SagePay Reporting and Admin", 
    "progweb_cat": "Payments", 
    "descr5": "skip main content mysagepaylogin uk ireland stay search contact us resume application mysagepay login products online start accepting payments securely online phone easy use payment gateway service set fees contracts face face accept chip pin card payments store premise using wide range stand alone integrated terminals phone process mail orders payments phone securely using intuitive web based virtual terminal interface invoice allow customers pay bill either online phone using debit credit card products browse entire payments product range large business solutions partners find partner 've successfully matched multiple businesses different types partners find become partner pride dedicated community partners find join find integration ready integrate website \\? integrate major ecommerce platforms business insights white papers sage pay switching sage pay news press customers testimonials case studies events sage blog start guides videos support business support support team available 24 7 year round help resolve issue business may facing quickly possible partners developers need help \\? partner support team available 24 7 year round resolving issue business may facing quickly possible online shoppers charged paying item online \\? want find staying safe shopping online \\? help us careers sage pay media centre contact us find us get started call 0845 111 4466 calls cost 2 pence per minute plus phone company 's access charge menu mysagepay login get started products products online face face telephone einvoice large business solutions partners partners find partner become partner find integration business insights business insights sage pay white papers customer stories switching sage pay news press events startup guides videos support support business support partners developers online shoppers us careers sagepay media centre find us contact us us corporate solutions contact us herehome us amex documentation amex documentation terms conditions american express card acceptanceseptember 2015 version 3 gross terms conditions american express euro transaction capabilities november 2015 version 1 products online payments telephone payments face face payments invoice payments support business support partner support system monitor sagepay login sage pay partner network business insight large business solutions sage blog follow us clicktale 2016 sage pay europe limited rights reserved sage pay part sage group visit sage com terms use policies cookies policy contact us feedback", 
    "descr4": "skip main content mysagepaylogin uk ireland stay search contact us resume application mysagepay login products online start accepting payments securely online phone easy use payment gateway service set fees contracts face face accept chip pin card payments store premise using wide range stand alone integrated terminals phone process mail orders payments phone securely using intuitive web based virtual terminal interface invoice allow customers pay bill either online phone using debit credit card products browse entire payments product range large business solutions partners find partner 've successfully matched multiple businesses different types partners find become partner pride dedicated community partners find join find integration ready integrate website \\? integrate major ecommerce platforms business insights white papers sage pay switching sage pay news press customers testimonials case studies events sage blog start guides videos support business support support team available 24 7 year round help resolve issue business may facing quickly possible partners developers need help \\? partner support team available 24 7 year round resolving issue business may facing quickly possible online shoppers charged paying item online \\? want find staying safe shopping online \\? help us careers sage pay media centre contact us find us get started call 0845 111 4466 calls cost 2 pence per minute plus phone company 's access charge menu mysagepay login get started products products online face face telephone einvoice large business solutions partners partners find partner become partner find integration business insights business insights sage pay white papers customer stories switching sage pay news press events startup guides videos support support business support partners developers online shoppers us careers sagepay media centre find us contact us us corporate solutions contact us herehome support server integration kits protocols documents server integration kits protocols documents server integration kits protocols documents 's everything need integrate payment solution using server integration option question n't hesitate get touch 're help 24 7 step 1 integrate sage pay ecommerce site protocol documents please begin following instructions outlined protocol documents server integration protocol guidelines additional server features protocol guidelines \\( optional \\) instructions additional features \\( optional \\) single click purchases \\( token system \\) give shoppers option store card details \\( token \\) payment system n't enter next purchase ideal businesses lot repeat customers see pricingtoken system integration protocol guidelines local european payments accept giropay sofort payments customers based germany austria netherlands local european payments instructions integration kits web application examples demonstrate usage protocol documents listed java net php customise checkout pages \\( optional \\) templates useful wish customise look feel checkout pages v3 custom checkout templates important pages sage pay mobile optimised payment pages files relate standard sage pay customised checkout pages download official logos graphics download sage pay logo payment type graphics checkout pages including logos bottom checkout pages give website credibility find logo customised reporting admin api \\( optional \\) api allows back office systems interact payment gateway instead using reporting admin portal called mysagepay customised reporting admin api step 2 test integration upon completion integration need test attempting process transaction refund test server online guide available walk step process testing integration error codes \\? 're struggling error code message try searching website search error code step 3 're set 've processed successful test transaction refund trigger generated automatically notify us account switched test live shortly vendor receive email confirming account switched merchant account \\( \\) account already verified sage pay vendor able process live transactions immediately otherwise feel free get touch 24 7 customer support team check status account system monitor check status system online system monitor basics get help terminology error codes error codes support forum speak online community developers sage pay forum 24 7 support 's get touch us 0845 111 4455 sagepay support email us \\( calls cost 2 pence per minute plus phone company access charge \\) feedback products online payments telephone payments face face payments invoice payments support business support partner support system monitor sagepay login sage pay partner network business insight large business solutions sage blog follow us clicktale 2016 sage pay europe limited rights reserved sage pay part sage group visit sage com terms use policies cookies policy contact us feedback", 
    "descr3": "skip main content mysagepaylogin uk ireland stay search contact us resume application mysagepay login products online start accepting payments securely online phone easy use payment gateway service set fees contracts face face accept chip pin card payments store premise using wide range stand alone integrated terminals phone process mail orders payments phone securely using intuitive web based virtual terminal interface invoice allow customers pay bill either online phone using debit credit card products browse entire payments product range large business solutions partners find partner 've successfully matched multiple businesses different types partners find become partner pride dedicated community partners find join find integration ready integrate website \\? integrate major ecommerce platforms business insights white papers sage pay switching sage pay news press customers testimonials case studies events sage blog start guides videos support business support support team available 24 7 year round help resolve issue business may facing quickly possible partners developers need help \\? partner support team available 24 7 year round resolving issue business may facing quickly possible online shoppers charged paying item online \\? want find staying safe shopping online \\? help us careers sage pay media centre contact us find us get started call 0845 111 4466 calls cost 2 pence per minute plus phone company 's access charge menu mysagepay login get started products products online face face telephone einvoice large business solutions partners partners find partner become partner find integration business insights business insights sage pay white papers customer stories switching sage pay news press events startup guides videos support support business support partners developers online shoppers us careers sagepay media centre find us contact us us corporate solutions contact us herehome support sage pay integration kits protocols sage pay integration kits protocols let us help find kits protocols documents need get started sage pay sage pay integration kits protocols integration option interested \\? select integration option obtain documents necessary successfully start accepting payments online sage pay read integration methods integration methods comparison system monitor check status system online system monitor basics get help terminology error codes error codes support forum speak online community developers sage pay forum 24 7 support 's get touch us 0845 111 4455 sagepay support email us \\( calls cost 2 pence per minute plus phone company access charge \\) feedback products online payments telephone payments face face payments invoice payments support business support partner support system monitor sagepay login sage pay partner network business insight large business solutions sage blog follow us clicktale 2016 sage pay europe limited rights reserved sage pay part sage group visit sage com terms use policies cookies policy contact us feedback", 
    "descr2": "skip main content mysagepaylogin search contact us resume application mysagepay login filter coderuby php javascript curl getting startedoverviewdrop checkout integrationown form integrationpaymentguidesoverview3 securetokensrepeatsdeferredrefundsvoidsauthentication credentialssandbox testingapi reference gabby colarusso sr software engineer fortress gb i'm sold sage pay open apis make payments integration easy test drive newly refurbished open api show p font size 24px important text align center margin bottom 30px pi valuables div text align center padding 30px min height 365px padding top 55px padding bottom 0 pi valuables div color 4178be important font size 18px important pi valuables div p max width 80 margin left auto margin right auto margin bottom 25px font size 18px important line height 1 2 color 626262 pi valuable pi valuables div h3 font size 24px margin bottom 25px margin top 35px color 626262 pi valuables row margin right 15px margin left 15px pi valuables div first child border bottom 2px solid e9e9e9 border right 2px solid e9e9e9 pi valuables div nth child \\( 2 \\) border bottom 2px solid e9e9e9 border left 2px solid e9e9e9 pi valuables div nth child \\( 3 \\) border top 2px solid e9e9e9 border right 2px solid e9e9e9 pi valuables div nth child \\( 4 \\) border top 2px solid e9e9e9 border left 2px solid e9e9e9 media \\( max width 1199px \\) pi valuables div text align center padding 30px min height 376px media \\( max width 768px \\) pi valuables div border 0 none important pi valuables div p max width 95 get started sage pay lets integrate online checkout 3 easy steps click get started get started additional integration follow implementation guides get running 3 secure tokens repeat payments refund voids view guides api reference require customisation additional options check full api reference view api reference test sandbox use one sandbox accounts try api today learn log post comments accept payments way accept payments way sage pay allows accept payments minutes using simple drop checkout customising payment page form integration drop checkout drop checkout integration provides flexible form enables seamless integration payment pages get started form integration form integration provides complete control checkout experience whilst keeping pci requirements minimum get started log post comments help need need support \\? try make documentation straight forward possible understand always case need integration support feel free get touch development support team contact support developer \\? whilst try make sage pay integration simple seamless possible advanced custom integrations require developer implement developer house speak us finding sage pay developer assist speak us help need know afford downtime online payments world class support guidance get running quickly possible log post comments find information watch video find sage pay pi simplify online payments process accepting payments online minutes log post comments features pricing getting started follow us youtube facebook twitter linkedin rss google 2016 sage pay europe limited rights reserved sage pay part sage group visit sage com terms use policies cookies policy feedback contact us", 
    "descr1": "sage pay direct integration protocol guideline 3 00 published 01 08 2014 sage pay direct integration protocol guidelines 3 00 page 2 71 document details 4 version history 4 legal notice 4 1 0 introduction 5 2 0 overview direct integration 6 2 1 non 3d secure transactions 6 2 2 3d secure transactions 7 2 3 direct paypal 8 3 0 direct integration detail \\( none paypal \\) 9 step 1 customer orders site 9 step 2 server registers payment sage pay 10 step 3 sage pay checks 3d secure enrolment 12 step 4 sage pay replies registration post 13 step 5 redirect customer issuing bank 14 step 6 3d authe nticaiton site called back 16 step 7 site posts 3d secure results sage pay 17 step 8 sage pay servers request card authorisation 18 step 9 sage pay reply post 19 step 10 sage pay sends settlement batch files 20 4 0 direct integration \\( paypal \\) 21 4 1 direct paypal message flow 23 5 0 integrating sage pay direct 24 6 0 testing test server \\( stage 1 \\) 25 6 1 registering payment 25 6 1 1 3d authenticated transactions 26 6 1 2 test card numbers 26 6 2 direct paypal transactions 29 6 3 accessing mysagepay test 31 6 4 refunding transaction 33 7 0 additional transaction types 34 7 1 deferred transactions 34 7 2 repeat payments 35 7 3 authenticate authorise 35 7 4 refunds voids 36 8 0 applying surcharges 37 9 0 sage 50 accounts software integration 38 10 0 going live \\( stage 2 \\) 39 table contents sage pay direct integration protocol guidelines 3 00 page 3 71 11 0 congratulations live sage pay direct 40 12 0 character sets encoding 41 appendix direct protocol 42 a1 submit transaction registration post 42 a1 1 surchargexml 51 a1 2 basket 52 a1 3 basketxml 53 a1 4 customerxml 59 a2 sage pay response transaction registration callback posts 60 a3 sage pay response transaction registration post \\( 3d secure \\) 65 a4 3d authentication results post terminal url sage pay \\( 3d secure \\) 66 a5 sage pay response transaction registration post \\( paypal \\) 67 a6 sage pay callback paypal authentication \\( paypal \\) 68 a7 complete paypal transaction \\( paypal \\) 70 13 0 urls 71 sage pay direct integration protocol guidelines 3 00 page 4 71 version history date change page 19 0 7 2013 document published added expiry date returned field basket xml includes discounts llowed characters bankauthcode alphanumeric 64 56 64 16 09 201 3 new screenshots references sage pay website updated european payment information updated removed reference laser cards surcharge xml clearer added storetoken field 37 49 01 08 2014 rebranded included additional fields financial institutions \\( mcc 6012 \\) information pre authorisations sage software 3d secure simulation xml snippets moved sagepay com updated test cards added ppro paypal indicators basket xml amendments 50 34 38 27 27 53 legal notice permitted use manual purpose whilst ha taken care preparation manual make representation warranty \\( express implied \\) \\( fullest extent permitted law \\) accept responsibility liability accuracy completeness information containe within manual accordingly unlikely event identify errors omissions inaccuracies within manual would really appreciate yo u could please send details us using contact details website www sagepay com may update manual time without notice please ensure always use latest version manual publish website www sagepay com integrating payment gateway copyright sage pay europe limited 201 4 rights reserved document details sage pay direct integration protocol guidelines 3 00 page 5 71 guide contains essential information user implement sage pay using direct integration direct integration provides secure simple means authorising credit debit card transactions website direct designed enable take payment secure servers pass across us autho risation secure storage server server session involve redirecting customer sage pay hosted pages enables white label payment process customer never leaves site \\( unless using paypal 3d secure authentication processes \\) necessarily know sage pay authorising transaction behalf \\( although practice many merchants choose tell customers case concerns card data security \\) use direct method need 128 bit ssl certificate secure payment pages obtained number sources including verisign also need able make https posts scripts server \\( using som ething like openssl linux platforms winhttp object win32 \\) hosting third party company recommend talk requirements committing use direct cannot install certificate pa yment pages would recommend using sage pay server integration instead cannot perform https posts scripts would recommend sage pay form integration wish support 3d secure \\( verified visa mastercard securecod e amex safe \\) direct provides wrapper systems removing need purchase support merchant plug customer issuing bank nd send results 3d authentication back sage pay complete payment process like non 3d secure direct transactions customer never directed sage pay leave site authenticate bank n return site finished document explains web servers communicate sage pay using direct method explains h ow integrate test live environments also contains complete payment protoco l appendix since card data collected via site obliged comply payment card industry data security standard \\( pci dss \\) working data security partner trustw ave set program sage pay customers make pci dss compliance easy cost effective information please visit sagepay com indicates additional information specific european payment method transactions indicates additional information specific paypal transactions 1 0 introduction sage pay direct integration protocol guidelines 3 00 page 6 71 direct payment requests simple interaction customer entirely customer select items services purchase fill shopping basket ready pay first collect name billing delivery address contact details \\( telephone number email addres forth \\) perhaps allow sign quicker purchases future total contents basket summarise contents asking continue scripts store everything transacti customer database future reference need store card details sage pay hold securely present customers payment page secured 128 bit ssl certificate th page ask customer cardholder name appears card card type \\( visa mastercard american express etc \\) full card number without spaces separators expiry date card verification value \\( called cvv cv2 value extra three digits signature strip cards 4 numbers printed front american express card \\) stored database \\) page submitted script server retrieves pre validates values \\( checking fields present expiry dates past card number field contains numbers etc \\) constructing https p ost containing unique reference transaction vendortxcode \\( stored alongside order details database \\) correctly formatted data form https post sent sage pay gateway 2 1 non 3d ecure transactions sage pay validates data sent us checking come valid source required information present creating transaction database securely hold data passed us contacting bank authorisation replying real time response part https post practice takes 2 3 seconds complete script server initiated post simply reads response post determine whether transaction authorised updates database transaction reference values authorisation code \\( appropriate \\) displaying either completion page customer error page explain ing payment accepted database contain necessary information transaction basket contents customer need store card details transaction ids passed direct system enable perform actions card \\( refunds additional payments cancellations \\) allows certain even server compromised card details gleaned databas e 2 0 overview direct ntegration sage pay direct integration protocol guidelines 3 00 page 7 71 following sections explain integration process detail direct payment protocol attached appendix providing detailed breakdown contents https message sent servers nd payment transaction related posts refund repeat payments release abort mechanisms deferred transactions 2 2 3d secure ransactions direct payments 3d authentication little complicated customer forwarded card issuer authenticate card authorisation occur must 3d secure active accoun process type transaction contact support sagepay com information setting \\( depending merchant acquirer account maybe set 3d need en able mysagepay admin area covered later \\) process obtaining 3d secured authorisation begins manner non authenticated transactions customer fills shopping basket site collect details present payment page secured 128 bit ssl certificate page posts script site pre validates data formats normal server side direct transaction registration post \\( see appendix a1 \\) sent sage pay non authenticated direct transaction information post us validated ip address list data checked range errors everything appears order rather imme diately sending card details acquiring bank authorisation details instead used send query 3d secure directory servers check see card card issuer enrolled 3d secure scheme card issuer part scheme direct checks 3d secure rule base \\( modify mysagepay screens \\) determine wish proceed authorisation circumstances card issuer part scheme rule base allows authorisation proceed card details sent acquiring bank results process returned site response object post \\( like non 3d authenticated direct transaction additional 3dsecurestatus field informing results card lookup \\) authorisation cannot proceed rules allow rejected messa ge sent back response object post outlining reason transaction rejection however card issuer part 3d secure scheme direct attempt obtain authorisation acquiring bank inste ad formats encrypts 3d secure request message called pareq replies direct post response object message unique transaction code called md url 3d secure authentication pages ssuing bank \\( field called acsurl \\) store md value wish acsurl pareq values never stored database server creates simple automatically submitted html form posts user md th e pa req fields across acsurl along additional field called termurl points page site bank return customer authenticated sage pay direct integration protocol guidelines 3 00 page 8 71 eir card details payment page clicked submit find transferred card issuer validate 3d secure credentials user completed 3d authentication issuing bank redirect customer back script site pointed termurl user returns site along md transaction results authentication encrypted field called pares like direct takes care decrypting ecoding information termurl page simply needs format server side https post containing md pares fields \\( correctly url encoded \\) send direct need store md pares fields databa se direct examines pares determine authentication successful retrieves details original direct post goes obtain authorisation acquiring bank replies results response object termurl post format non 3d secured transaction two additional fields store \\( 3dsecurestatus cavv value unique value indicates authentication successful \\) direct examines pares finds authentication successful checks 3d secure rule base determine wish proceed like original transaction registration post wish obtain authorisations non 3d authenticated transactions direct requests authorisation acquiring bank replies normal direct returns rejected message obtain authorisation termurl update database results uthorisation \\( lack thereof \\) display completion page customer although complex non 3d authenticated direct transaction process remove huge amount complexity involved using merchant plug mo reover transactions fully authenticate offer protection liability shift card related misuse extremely valuable sell products services likely attract fraud 2 3 direct paypal sage pay integrated w ith paypal express checkout giving opportunity add paypal payment option payment pages facility available merchants certified paypal business account holder already paypal business accou nt apply contacting sales sagepay com additional service included package additional cost \\( standard paypal transaction fees apply \\) sage pay charge sta ndard transaction rates according sage pay package choose support paypal express checkout using direct method involves little integration work site nothing complex currently required 3d authentication initial server server post sage pay redirection paypal logon url call back servers sage pay additional server server post confirm transaction complete process sage pay direct integration protocol guidelines 3 00 page 9 71 step 1 customer orders site payment begins customer ordering goods services site process simple selecting item drop list involve large shopping basket containing multiple items discounts delivery charges interaction customer entirely direct system puts requirement collect specific set info rmation stage generally good idea identify customer name email address delivery billing address telephone number also helpful server record ip address customer accessing system store details database present 128 bit ssl secured payment page customer enter card billing address detai ls page contain following fields cardholder name appears card card type \\( visa mc mcdebit delta maestro uke amex dc jcb \\) full card number without spaces separators expiry date card verification value \\( called cvv cv2 value extra three digits signature strip cards 4 numbers printed front american express card \\) asked stored database \\) wish provide list box expiry date please aware visa issue cards valid 20 years 3 0 direct integration detail \\( non e paypal \\) sage pay direct integration protocol guidelines 3 00 page 10 71 step 2 se rver registers payment sage p ay customer decided proceed script web server construct payment registration message \\( see appendix a1 \\) post via https direct payment url post contains vendor name \\( assigned sage pay account created \\) unique reference payment \\( field called vendortxcode must ensure completely unique value transaction \\) message also contains amount currency payment billing delivery address details customer specify brief description goods bought appear reports plus entire basket contents wish card details passed dedicated fi elds whose format found appendix a1 also pass contact numbers email addresses flags bypass force fraud checking transaction 3d secure reference numbers ids checks carried message posted directly servers across 128 bit encrypted intercept message would able read using direct method assured information send us cannot tampered understood anyone us script sends payment registration message request object https post response fr om direct \\( see steps 4 9 \\) response object post receipt post sage pay gateway begins validating contents first checks ensure required fields present format correct present reply status malformed generated statusdetail field containing human readable error message stating f ield missing normally happens development stage whilst refining integration sage pay direct integration protocol guidelines 3 00 page 11 71 fields present information fields validated vendor field checked pre registered set ip ddresses direct ensure post came recognised source currency transaction validated accepted merchant accounts vendortxcode checked ensure used amount fiel validated flag fields checked fact every field checked ensure passed valid data information incorrect reply status invalid returned human readable error message statusdetail explaining invalid receive either malformed invalid message use detailed response statusdetail error message help debug scripts receive messages live environment infor customer problem registering transaction flag error back office systems help debug email sage pay support team \\( support sagepay com \\) help debugging issues ntegrat ion k provide contain scripts variety languages illustrate compose send message server downloaded sagepay com transaction registered sage pay gateway new transaction code generated unique across vendors using sage pay systems unique code vpstxid u nique reference transaction returned response part remembered number allow us immediately find transaction query sage pay account set 3d secure 3d authentication active transaction next step system obtain authorisation skip ahead tep 8 however 3d secure activ e account continue tep 3 sage pay direct integration protocol guidelines 3 00 page 12 71 step 3 sage pay checks 3d secure enrolment sage pay gateway sends card details provided post sage pay 3d secure merchant plug \\( mpi \\) formats verification request called vereq sent 3d secure directory servers query whether card card issuer part 3d secure scheme servers send verification response v eres back sage pay mpi decoded informed inclusion exclusion card card issuer part scheme mpi error occurs server check 3d secure rule base determine autho risation occur information regarding 3d secure rule bases please refer sage pay fraud prevention advice guide downloaded sagepay com default account rule base established transactions cannot 3d authenticated still forwarded acquiring bank authorisation rule base rejects transaction due criteria reached ga teway replies status rejected statusdetail indicating 3dsecurestatus field contain results 3d secure lookup rejected transactions never authorised page explaining transaction aborted rule base allow authorisation occur non 3d uthenticated transactions sage pay gateway continues though 3d secure active account jump ahead tep 8 card card issuer part scheme sage pay gateway continues 3 authentication replying post status 3dauth sage pay direct integration protocol guidelines 3 00 page 13 71 step 4 sage pay replies registration post sage pay servers store information transaction registration post secure database replying \\( se e appendix a3 \\) status field set 3dauth statusdetail informing redirect customer issuing bank complete 3d authentication unique identifier transaction called md passed along preformatted encrypted field called pareq 3d begin 3d authentication process pareq created encrypted sage pay mpi attempt modify 3d secure authentication step fail turn fail transaction field called acsurl \\( access control server url \\) contains fully qualified address secure mo dule provided directory service \\( see step 3 \\) last field 3dsecurestatus field always contain ok transactions ready 3d authentication need store values database store md value wish acsurl pareq values never stored values need used next step redirect customer issuing bank discarded first step direct transaction complete registered 3d secure transaction sage pay stored payment details replied everything need send customer 3d authe ntication next parts process steps 5 6 bank sage pay direct integration protocol guidelines 3 00 page 14 71 step 5 redirect cu stomer issuing bank registration page code server check status field 3dauth status found build simple auto submitting form \\( see example \\) sends md p req additional field termu rl address specified acsurl send form effect redirecting authentication site whilst sending site information required perf orm authentication termu rl field fully qualified url points page servers customer sent 3d au thentication completed \\( see tep 6 \\) example code page included integration kits provided sage pay see example asp code u sing iframe values red extracted sage pay response built script user javascript enabled simply redirect issuing bank site presented message noscript section need click go issuing bank stage customer left site must wait sent back suing bank acsurl commonly use inline frame redirect visa recommend using inline frames continuity customer experience remem ber add code support iframe incapable browsers \\( ee \\) sage pay direct integration protocol guidelines 3 00 page 15 71 iframe src 3dredirect asp name 3diframe width 100 height 500 frameborder 0 'non iframe browser support response write script language javascript function onloadevent \\( \\) document form submit \\( \\) script response write html head title 3d secure verification title head response write body onload onloadevent \\( \\) response write form name form action stracsurl method post response write input type hidden name pareq value strpareq response write input type hidden name termurl value stryoursitefqdn strvirtualdir 3dcallback asp \\? vendortxcode strvendortxc ode response write input type hidden name md value strmd response write noscript response write center p please click button authenticate card p input type submit value go p center response write noscript response write form body html iframe forward pareq field acsurl please ensure pass pareq value send field called pareq acsurl pages case sensitive sage pay direct integration protocol guidelines 3 00 page 16 71 step 6 3d authenticaiton site called back customer completes 3d complete \\( either successfully \\) bank redirect customer back page supplied termurl field sent step 5 along redirection two fields also sent md value uniquely identify transaction called back p res authentication like pareq value se nt site sage pay step 5 store p res field database also strongly encrypted sage pay mpi decode attempt modify authentication process fail stage customer back site completion information 3d authentication process need send sage pay decode results appropriate obtain card authorisation acquiring bank sage pay direct integration protocol guidelines 3 00 page 17 71 step 7 site posts 3d secure r esults sage pay code termurl call back page format simple https server side post sends sage pay direct 3d callback page post needs contain md pares fields sent back site cardhol issuing bank \\( suitably url encoded safe transit across web \\) information necessary sage pay system use values retrieve transaction information originally supplied decoded pares indica tes 3d authentication successful sage pay gateway goes obtain authorisation system examines 3d secure rule base see authentication attempted default 3d authentication failures sent authorisation message types refer fraud prevention guide available sagepay com information transactions sent authorisation ret urned rejected status similarly note step 5 authentication \\( pares \\) returned issuing bank field called pares \\) must forward value sage pay field called pares sage pay direct integration protocol guidelines 3 00 page 18 71 step 8 sage pay servers request card authorisation sage pay servers format bank specific authorisation message \\( including 3d secure authentication values appropriate \\) pass merchant acquirer private banking network request normally answered within second either authorisation code declined message obtained directly issuing bank ac quiring bank real time process happens whilst script server waiting response servers depending response acquirer sage pay gateway prepares either ok response uthorisation c ode tauthed response bank declined transaction error something gone wrong \\( rarely receive since normally indicate issue bank connectivity \\) avs cv2 fraud checks performed results compared rulebases set \\( refer fraud prevention guide available sagepay com \\) bank authorised transaction card failed fr aud screening rules set sa ge pay immediately reverse authorisation bank requesting shadow card transaction cleared prepares rejected response card issuing banks may decline reversal leave authorisation shadow card 10 working days transaction never settled sage pay appear failed transaction mysagepay however may appear customer funds ha taken unt il bank clears shadow automatically period time dictated sage pay direct integration protocol guidelines 3 00 page 19 71 step 9 sage pay reply post irrespective status returned sage pay gateway always replies response section post server sent us either response transaction registration post non 3d authenticated transactions response ter minal url post 3d authentication attempted transaction registered successfully always receive vpstxid unique transaction reference mentioned also receive securitykey 10 digit alphanumeric code th used digitally signing transaction whilst used direct transaction messages need know value wish refund transaction perform automated actions using sage pay direct interface herefore value stored alongside vpstxid order details vendortxcode database transaction authorised status field contains ok also receive field called txauthno txauthno field es contain actual authorisation code sent bank \\( returned bankauthcode field \\) contains instead unique reference number authorisation call vpsauthcode transaction id sent bank durin g settlement \\( cannot use vendortxcode long might contain unacceptable characters \\) bank use value refer transaction need contact store value database along values returned txauthno field present transaction authorised bank messages authorisation failures one type another \\( see appendix a2 full details fields errors returned \\) inform customer payment accepted receive ok tatus txauthno display completion page customer thanking ord er stored relevant transaction ids database payment processing complete sage pay direct integration protocol guidelines 3 00 page 20 71 step 1 0 sage pay sends settlement batch files per day 12 01am sage pay system b atches authorised transactions acqui rer creates acquirer specific settlement file transactions merchants use rchant acquirer included file every transaction \\( excluding paypal european payment methods tr ansactions \\) occurred 00 00 00am 11 59 59pm previous day included files uploaded directly acquiring banks private secure connection process requires input site contents batches confirmation th eir delivery found settlement section mysagepay sage pay monitors processes ensure files submitted successfully support department correct problem ensure file sent corr ectly evening soon reasonably possible ensuring funds available vendors expediently acquirers send summary information back sag e pay confirm receipt file later detailed information rejections errors transactions rejected contact make aware possible resubmit settlement f unds deposited paypal business account immediately settlement process withdraw transfer funds electronically specifie bank account although paypal transactions included settlement reports displayed within mysagepay paypal transactions se ttled sage pay directly banks recommend log paypal admin area obtain report paypal transactions sage pay direct integration protocol guidelines 3 00 page 21 71 steps involved using paypal direct detailed summarised end diagram 1 customer shops site fills shopping basket items 2 point customer wishes check enter address customer details site optionally allow customer select pay either paypal another express checkout option presented similar example \\( available \\) optional may wish offer paypal payment method alongside card types \\( address details collected \\) customer selects button process jumps section 6 3 since customer sel ected button \\( option \\) site presents normal customer detail entry screens requesting name em ail address billing address following format name \\( compulsory 32 chars max \\) street \\( compulsory 100 char max \\) street2 \\( optional 100 chars max \\) city \\( compulsory 40 chars max \\) zip \\( compulsory 20 chars max \\) country \\( compulsory 2 digit iso 3166 1 code \\) state \\( compulsory us addresses \\) phone \\( optional 20 characters \\) structure required allow paypal validate addresses held database 4 onc e customer entered address details select card type normal direct payment addition paypal logo sage pay perspective process almost identical 4 0 direct integration \\( paypal \\) sage pay direct integration protocol guidelines 3 00 page 22 71 5 customer selects method paypal normal direct process 3d uthe ntication continues point onwards detailed direct payment process e customer enters card number expiry date cv2 etc full server server post sent 6 customer selected paypal either mark e xpress checkout new process begins stage direct registration message \\( see appendix a1 \\) sent cardtype field set paypal \\( card details sent \\) mark implementati ons also require full b illing xxxx delivery xxxx sections completed detailed express checkouts leave empty post also includes paypalcallbackurl field points script site handle completion process \\( expl ained stage 11 \\) 7 information posted direct transaction registration url post validated normal fields validated information correct sage pay servers construct message end paypal serve express checkouts collected customer details pages first message sent ensure customer enters address reach paypal screens mark checkouts already address information p rovided therefore customer option select alternative address paypal screens 8 paypal servers respond sage pay unique token transaction updated sage pay database record token transaction returning direct respo nse servers \\( appendix a5 \\) 9 paypalredirecturl value returned direct response \\( appendix a5 \\) 10 customer logs paypal selects chosen payment method express checkouts also enter select delivery address mark address selection disabled 11 shopper confirms details paypal screens paypal exchange information sage pay direct builds response message containing fields listed appendix 6 paypalcallbackurl \\( p rovided part original direct post appendix a1 \\) url also 12 site check information message determine wish proceed transaction addressstatus unconfirmed payerstatus unverified example may wish continue without paypal seller protection wish proceed build direct paypal cap ture message accept field set \\( appendix 7 \\) post direct paypal completion url redirect customer back select different payment method stage begin direct process gain 13 wish proceed store delivery address details database \\( differ supplied \\) build direct paypal capture message accept field set yes \\( appendix a7 \\) post direct paypal completion url sage pay direct integration protocol guidelines 3 00 page 23 71 14 direct validate post correct forward paypal 15 paypal complete transaction return details direct sage pay update transaction required ids bui ld completion response 16 direct replies post sent paypal completion ur l direct c ompletion message \\( appendix a2 \\) 17 display completion page customer 4 1 direct paypal message flow diagram shows message customer flow direct paypal payment sage pay direct integration protocol guidelines 3 00 page 24 71 linking website sage pay direct involves creating one script \\( modifying example provided integration kits \\) registers transaction servers processes response send back wish support 3d secure authentication also need create modify second script handle call back issuing bank wish inte grate paypal additional coding also required redirect paypal logon url call back servers sage pay additional server server post confirm transaction complete process stage 1 possible outcomes exact copy live site without banks attached simulated 3d secure environment authorisati ons test server simulated user experience identical live version mysagepay also runs familiarise features available mysagepay ystem viewing test transactions https test sagepay com mysagepay transactions scripts sent test site https test sagepay com gateway service vspdirect register vsp 3d secure callback posts sent following url https test sagepay com gateway service direct3dc allback vsp paypal completion posts sent following url https test sagepay com gateway service complete vsp stage 2 happily processing end end trans actions test server see test signup merchant account details confirmed account set live servers need redirect scripts send transactions live service send payment using credit card void mysagepay service de online mysagepay ystem viewing live transactions https live sagepay com mysagepay transactions scripts sent live site https live sagepay com gateway service vspdirect register vsp 3d secure callback posts sent following url https live sagepay com gateway service direct3dcallback vsp paypal completion posts sent following url https live sagepay com gateway se rvice complete vsp 5 0 integrating sage pay direct sage pay direct integration protocol guidelines 3 00 page 25 71 test server exact copy live system without banks attached means get true user experience without fear money taken cards test ing order test test server need test server account set sage pay support team test account set submitted sage pay application apply online https sup port sagepay com apply often applying trade online takes merchant account assigned acquirer may wish ensure set wheels motion begin integration sage pay ensure support team set account test server vendor name online application form within 48 hours submitting completed application form however issued different passwords security purposes support team let know retrieve passwords use mysagepay view transactions link site test server need change tran saction registration script send message test server url direct integrated payment method many kits done simply changing strconnectto string includes file developing scri pts test site url payment registration https test sagepay com gateway service vspdirect register vsp transaction types final vspdirect register vsp section would changed refund vsp release vsp void vsp etc please refer server direct shared protocols guide 6 1 registering payment plan implement protocol entirely stall appropriate integration kit worked example platform downloaded sagepay com kits quite run box provide specific details site configuration files transaction occur provide end end examples registering transactions handling notification posts configuration includes file detailed kit instructions locate transaction registration script \\( called transactionregistration \\) script provides worked example construct transaction registration post \\( see appendix a1 \\) read response comes back \\( appendix a2 \\) plan implement 3d secure authentication kit also provides terminal url example page mplements section a3 attached protocol check script sending transactions sage pay test server live site execute script may need develop simple payment page allows ou enter card details passes script page included kit use script send 6 0 testing test server \\( stage 1 \\) sage pay direct integration protocol guidelines 3 00 page 26 71 payment registration test server may wish modify script stage echo results post scr een file examine status statusdetail reply fields check errors script successfully register payment receive status ok ensure code stores vpstxid securitykey txauthno fields alongside uniquely generated vendortxcode order details database may wish store 3dsecurestatus field plan support 3d secure script redirect customer completion page thankin g order real world bank either authorise transaction \\( ok response \\) fail \\( notatuhed response \\) sage pay may reverse authorisation fraud screening rules met \\( rejected response \\) sh ould make sure code handle message appropriately normally notauthed messages would prompt user try another card rejected messages would ask check address cv2 details correct resubmit try another c ard may wish store vpstxid securitykey failed transaction vendortxcode generate new vendortxcode retry attempt wish keep history failed transactions well successful one test type error message \\( malformed invalid error \\) payment script check message types handled correctly malformed messages occur development post may incorrectly formatted invalid messages avoided pre validating user input case error code present customer page saying online payment currently available offering alternative contact telephone number payment request come back later 6 1 1 3d authenticated transactions plan support 3d secure go test scripts handle messages send transaction registration post rather receiving ok sta tus script receive 3dauth status instead simulated md pareq acsurl provided ensure script builds simple automatically submitting html form code redirects browser 3d authentication page need ensure terminal url provided points fully q ualified url callback page provided script begin https \\( since terminal url must secured \\) provide full path page terminal url code \\( normally page called 3dcallback kits \\) mo dified store result fields database \\( transaction registration code step 3 \\) including 3dsecurestatus field 3d authenticated transactions cavv field \\( unique signature validated 3d secure transaction \\) direct customer relevant completion page depending status transaction like non authenticated transactions status ok redirect user success page error n otauthed rejected malformed invalid various error handling pages 6 1 2 test card numbers sage pay direct integration protocol guidelines 3 00 page 27 71 always receive ok response authorisation code test server using one test cards listed valid card numbers declined allowing test failure pages use address postcode security code listed transaction still authorise receive notmatched messages avs cv2 checks allowing test rule bases fraud specific code different cards visa mastercard simulate possible 3d secure responses billing address 1 88 billing post code 412 security code 123 valid date past expiry date date future payment method card number cardtype response 3d secure response \\( veres \\) visa 4929 0000 0000 6 visa visa 4929 0000 0555 9 visa n visa 4929 0000 0001 4 visa u visa 4929 0000 0002 2 visa e visa corporate 4484 0000 0000 2 visa n visa debit 4462 0000 0000 0003 delta visa electron 4917 3000 0000 0008 uke mastercard 5404 0000 0000 0001 mc mastercard 5404 0000 0000 0043 mc n mastercard 5404 0000 0000 0084 mc u mastercard 5404 0000 0000 0068 mc e debit mastercard 5573 4700 0000 0001 mcdebit maestro \\( uk issued \\) 6759 0000 0000 5 maestro maestro \\( g erman ssued \\) 6705 0000 0000 8 maestro maestro \\( irish issued \\) 6777 0000 0000 7 maestro maestro \\( spanish issued \\) 6766 0000 0000 0 maestro american express 3742 0000 0000 004 amex n diners club discover 3600 0000 0000 08 dc n jcb 3569 9900 0000 0009 jcb n paypal use paypal sandbox paypal n 3d secure response \\( veres \\) enrolled return status 3dauth 3dsecurestatus ok n enrolled return 3dsecurestatus noauth u unable verify enrolment return 3dsecurestatus cantauth e e rror occurred verification return 3dsecurestatus error 3d secure set test account use mysagepay switch checks stage simulate verification authentication process sage pay direct integration protocol guidelines 3 00 page 28 71 successfully password field enter values \\( without quotes \\) password field simulate possible 3d secure responses 06 cardholder enrolled w ill return 3dsecurestatus attemptonly u n 06 authentication available w ill return 3dsecurestatus incomplete e n 06 e rror occurred authentication w ill return 3dsecurestatus error phrase fail authentication allowing test rules nd 3d secure response handling process continue per live servers authorisation stage simulated sage pay direct integration protocol guidelines 3 00 page 29 71 6 2 direct paypal transactions begin test paypal integration happy site correctly send process messages exchanged site standard direct transaction paypal available used within sage pay test environment allowing test integration ensure working smoothly without use real live paypal account order test paypal integration sage pay need create account login http developer paypal com sandbox accounts must create personal \\( buyer account \\) business \\( merchant account \\) given email address accounts create need log business \\( merchant account \\) api access add following third party permission username grant available permissions ppdev 1256915571 biz api1 sagepay com \\( please note different live api account \\) test paypal integr ation need log test mysagepay add email address corresponds business \\( merchant account \\) created whichever option choose either express checkout mark send transaction registration po st cardtype set paypal status ppredirect simulated paypalredirecturl provided sage pay response transaction registration post code store vpstxid provided basketxml information shown along company logo login using personal \\( buyer account \\) previously created complete transaction process paypal sage pay direct integration protocol guidelines 3 00 page 30 71 sage pay send message paypalcallbackurl along customer must ensure script handle payaplok status opportunity accept transaction based payerstatus addressstatus \\( result fields dictate transaction eligible paypal seller protection \\) also modify amount 15 original value \\( delivery price changes result address selected \\) wish proceed transaction send post paypal completion url value yes accept field \\( see appendix 7 \\) return status ok final response servers addressstatus unconfirmed payerstatus unverified may wish continue wish proceed would still need send post sage pay servers complete transaction enter value accept fiel cancel transaction \\( see appendix a7 \\) return status notauthed final response servers receive final response direct \\( see appendix a2 \\) redirect customer relevant completion page site depending status transaction like standard transactions status ok redirect user success page error notauthed rejected malformed invalid various error handling pages sage pay direct integration protocol guidelines 3 00 page 31 71 6 3 accessing mysagepay test test server version mysagepay available whilst using test account view transactions refund payments release deferred payments void transactions etc familiarise system test server go live know use system live servers user guide mysagepay found test server mysagepay found https test sagepay com mysagepay log mysagepay screens asked vendor name username password first time log need system administrator ven dor name field enter vendor name set application process used throughout development unique sage pay identifier username field enter vendor name password field enter mysagepay admin password supplied sage pay test account set administrator access settings tab cannot whilst logged administrator view transactions take mo payments online terminal use f unctions protect administrator account need create new u sers others c lick ing presented th e following screen set log credentials account privileges sage pay direct integration protocol guidelines 3 00 page 32 71 created new user click sign button sign back time entering vendor name vendor name field username account created username field password account created password field logged using account view test transactions use additional functions lock account use administrator account unlo ck use lost password link sign screen happen lock administrator account need contact sage pay unlock send email unlock sagepay com stating vendor name merchant number account need reminding unique account passwords send email request password retrieval link stating vendor name merchant number account detailed inf ormation using mysagepay found play system comfortable cannot inadvertently charge anyone damage anything whilst test ser ver sage pay direct integration protocol guidelines 3 00 page 33 71 6 4 refunding transaction set account live need refund one test transactions already performed integrating server direct shared protocol available sagepay com submitting refund post alternatively w hilst signed mysagepay user privileges refund transaction select transactions tab click successful transaction prompted screen enter password also opportunity set description refund modify amount cannot refund ori ginal amount mysagepay also available mobile devices following features currently available list transactions \\( including status \\) transaction details account activity monitoring sage pay news alert notifications sage pay support access sage pay direct integration protocol guidelines 3 00 page 34 71 sage pay supports number additional methods registering transaction completing payment 7 1 deferred transactions default payment transaction type used gain authorisation bank settle transaction early following morning committing funds taken cases may wish take funds card imme money ready ship goods type transaction called deferred transaction registered n exactly way payment simply need change script send txtype deferred register transaction instead payment deferred transactions sent bank completion following morning fact hey sent release either sending release post servers using server direct shared p rotocol \\( available sagepay com \\) logging mysagepay release amount including amount original deferred transaction unable fulfil order also abort deferred transactions simil ar manner customer never charged deferred transactions work well situations matter days customer ordering ready ship ideally deferred transaction released within 6 days shadow may disappear cardholders account settle available funds meantime regularly requir e longer 6 days fulfil orders consider using authenticate authorise instead deferred payments deferred transactions remain available release 30 days time automatically abort ed sage pay system settlement guaranteed occur within 4 days transaction type may charged higher fee acquirer deferred transactions contact mer chant bank information pre authorisations unlike normal sage pay deferred account paypal deferred transaction order simply registered paypal account successful authorisation deferred transaction confirms availability funds place funds hold release deferred paypal transaction paypal applies best efforts capture funds time possibility funds available recommend ship goods obtaining successful release 7 0 additional transaction types sage pay direct integration protocol guidelines 3 00 page 35 71 7 2 repeat payments al ready successfully authorised payment released deferred authorise charge additional amount card using repeat transaction type without need store card details wish regularly repeat payments example monthly subscriptions ensure merchant number bank supports recurring functionality \\( sometimes called continuou authority \\) repeat payments cannot 3d secured cv2 checks performed unless supply value sage pay authorised store cv2 numbers may better make use authenticate authorise need vary transact ion amount regular basis repeat using mysagepay using repeat different amount currency supply alternative delivery address details sage pay gateway archives transactions older 2 years old prevents subsequent authorisations made therefore recommend repeat last successful authorised transaction repeat paypal transaction initial transaction setup paypal reference transaction billingagreement set 1 need request appr oval paypal enable reference transactions account request approval live pa ypal account contact paypal customer support repeat paypal transactions using mysagepay need submit repeat request using shared protocol 7 3 authenticate authorise authenticate authorise methods specifically use merchants either u nable fulfil majority orders less 6 days sometimes fulfil 30 days know exact amount transaction time order placed example items shipped priced weight items affected foreign exchange rates unlike normal payment deferred transactions authenticate transactions obtain authorisation time order placed instead card cardholder va lidated using 3d secure mechanism provided card schemes card issuing banks view later authoris e site register transaction txtype authenticate redirect customer sage pay payment pages en ter payment details sage pay verify card number contact 3d secure directories check card part scheme card details simply held safely sage pay notificationurl sent status registered also happens 3d secure active account used apply3dsecure flag turn passed authentication rule base consulted check proceed authorisation way notificationurl sent status rejected failed authentication proceed notificationurl sent status registered customer passed authentication bank cavv ucaf value returned status authenticated cavv value returned store wish sage pay direct integration protocol guidelines 3 00 page 36 71 authentication status simply held sage pay 90 days \\( limit set card schemes 30 days international maestro cards \\) awaiting authorise cancel via mysagepay using server direct shared protocol charge customer ready fulfil order need authorise transaction authorise amount 115 value original authentication use number authorise requests original authentication long total value authorisations exceed 115 limit requests inside 90 days limit transactions processed sage pay stage acquiring bank contacted auth orisation code avs cv2 checks performed stage ru les applied normal allows greater flexibility partial shipments variable purchase values authenticate transaction authenticated \\( opposed simply registered \\) authorisations fully 3d secured completed authorisations wish take cancel authenticat prevent authorisations made card happe ns automatically 90 days use authenticate authorise transaction type transaction ever registered \\( transaction never 3d secured \\) 7 4 refunds voids payment authorise repeat transaction authorised deferred transaction release w ill settled acquiring bank early next morning charge process exact amount depending type card details merchant agreement wish cancel payment settled bank f ollowing morning void transaction using mysagepay using server direct shared protocol prevent ever settled thus saving transaction charges customer ever charged void ed trans actions never reactivated use functionality carefully transaction settled longer void wish return funds customer need perform refund mysagepay using server direct shared protocol refund amount value original transaction even send multiple refunds transaction long total value refunds exceed valu e original transaction sage pay gateway archives transactions older 2 years old therefore recommend check date orig inal transaction wish refund processing cannot void paypal transaction able refund paypal transaction sage pay direct integration protocol guidelines 3 00 page 37 71 ability apply surcharges based currency payment type selected wi provide financial benefit transferring cost transactions customer ability pass surcharge values \\( fixed amount percentage \\) transactions except paypal example credit card fixed fee 2 00 2 different surcharges set payment type currency combination accept please note responsibility ensure surcharges set comply laws within country works set default surcharges payment types currencies wish apply mysagepay customers select goods wish purchase website select payment type complete transaction alternatively use surchargex ml \\( see appendix a1 1 \\) send surcharge values override defaults payment type selected sent surchargexml default mysagepay applied information please contact support team support sagepay com 8 0 applying surcharges sage pay direct integration protocol guidelines 3 00 page 38 71 possible integrate sage pay account sage accounting products ensure reconcile transactions account within financial software learn integration options available version sage accounts integrate sage pay please visit sagepay com email tellmemore sagepay com wish link transaction specific product record done basket field transaction registration post please note following integration currently available using basketxml fields order download transactions affect product record first entry basket line needs product code item within square brackets example 4 pr001 pioneer nsdv99 dvd surround sound system 1 424 68 74 32 499 00 499 00 pr002 donnie nemo 2 11 05 1 94 12 99 25 98 delivery 000 000 000 000 4 99 transaction basket field containing items imported sage 50 accounts invoice created produc codes pr001 pr002 pr003 updated relevant activity stock levels reduced accordingly information basket field please see appendix a1 2 9 0 sage 50 accounts software integration sage pay direct integration protocol guidelines 3 00 page 39 71 sage pay receives application account created details sent bank confirmation bank expected confirm merchant details within 3 5 working days direct debit \\( filled application \\) confirmation merchant details reach sage pay account become live automatically start billed using gateway mean immediately able use live account must ensure completed stage 1 testing test server granted access live account information testing found sagepay com nb without confirmation bank without direct debit submission sage pay able set account live charged sage pay account valid direct debit details confir mation merchant details bank live account active point website transaction registratio n scripts following url https live sagepay com gateway service vspdirect register vsp \\( transaction types vspdirect register vsp section would changed refund vsp void vsp release vsp etc \\) 3d secure callback url becomes https live sagepay com gateway service direct3dcallback vsp paypal completion url becomes https live sagepay com gateway service complete vsp run end end transaction site ordering something relatively inexpensive site paying using valid credit debit card receive authorisation code everything working correctly shou ld log ysagepay live server https live sagepay com mysagepay worth noting none users set mysagepay system test server migrated across live many companies use third party web designers help design site create users testing would necessarily like live environment need recreate valid users live system first log described 6 3 logged locate test transaction void charged stage process complete 10 0 going live \\( stage 2 \\) sage pay direct integration protocol guidelines 3 00 page 40 71 well done hopefully process getting painless hassle free possible contact us tran saction queries arise help need mysagepay best ways reach us best department contact require information additional services email tellmemo sagepay com query regarding sage pay invoice email finance sagepay com question transaction issues settlement files problems p ayment pages mysagepay screens general question online payments fraud email support sagepay com sage pay vendor name included mail suggestions future enhancements system additional functionality feedback sagepay com comments take comments board designing upgrades although may able answer every mail get call 0845 111 44 55 type enquiry email address added group mail list used alert upgrades pending events also always check system availability current issues sage pay monitor page www sagepay com support system monitor thanks choosing sage pay wish every success e commerce venture 11 0 congratulations live sage pay direct sage pay direct integration protocol guidelines 3 00 page 41 71 transactions simple synchronous https posts sent script servers sage pay gateway script reading response component post determine success failure posts sent using https compa tible objects \\( curl php httpwebrequest net apache httpcomponents java \\) data sent url encoded name value pairs separated characters sent sage pay server url service name set message ype question following sections detail contents posts responses server format size field given along accepted values characters legend explains symbols 12 0 character sets encoding letters \\( z z \\) caret plus numbers square brackets parentheses accented characters asterisk semi colon ampersand apostrophe \\( single quote \\) pipe sign slash backslash exclamation mark colon hyphen space comma underscore tilde curly brackets full stop period equals quotes dollar valid 2 letter us states hash question mark date format yyyy mm dd iso 639 2 \\( 2 letter language codes \\) valid base64 characters \\( z z 0 9 \\) true false iso 3166 1 \\( 2 letter country codes \\) new line \\( carriage return line feed \\) rfc 5321 5322 \\( see also rfc 3696 \\) compliant email addresses iso 4217 \\( 3 letter currency codes \\) rfc 1738 compliant http \\( \\) url non compliant characters including spaces url encoded valid html active content script filtered includes valid letters numbers punctuation accented characters sage pay direct integration protocol guidelines 3 00 page 42 71 a1 submit transaction registration post performed via https post request sent initial sage pay payment url service vsp direct register vsp details url encoded name value request format name mandatory format max length allowed values description vpsprotocol yes 4 chars 3 00 version protocol integrating default incorrect value taken 3 00 txtype yes 15 chars payment deferred authenticate see different transaction types value uppercase vendor yes 15 chars used authenticate site contain sage pay vendor name supplied sage pay account created vendortxcode yes 40 chars reference code transaction site provide completely unique vendortxcode transaction amount yes 0 01 100 000 00 amount transaction containing minor digits formatted 2 decimal places appropriate e g 5 10 3 29 values 3 235 rejected minimum minor unit currencies like jpy 1 amounts must uk currency format period must used indicate decimal place comma must used separate groups thousands currency yes 3 chars iso 4217 examples gbp eur usd currency transaction performed must supported one sage pay merchant accounts transaction rejected appendix direct protocol sage pay direct integration protocol guidelines 3 00 page 43 71 description yes 100 chars free text description goods services purchased displayed sage pay server payment page cu stomer enters card details cardholder yes 50 chars name displayed card required cardtype paypal cardnumber yes 20 chars full card number required required cardtype paypal expirydate yes 4 chars expiry date card format mmyy required cardtype paypal cv2 4 chars extra security 3 digits signature strip card extra 4 digits front american express cards avs cv2 account field becomes compulsory required cardtype paypal cardtype yes 15 chars visa mc mcdebit delta maestro uke amex dc jcb laser paypal visa visa mc mastercard mcdebit debit mastercard delta visa debit maestro domestic international issued maestro uke visa electron amex american express dc diners club international discover jcb japan credit bureau laser laser \\( withdrawn 28th february 2014 \\) paypal value upp ercase token 38 chars token provided token registration phase billingsurname yes 20 chars customer billing details mandatory fields must contain value apart sage pay direct integration protocol guidelines 3 00 page 44 71 billingfirstnames yes 20 chars billingpostcode billingpostcode blank countries postcodes \\( e g ireland \\) required countries providing blank field information required cause error billingstate becomes mandatory billingcountry set us billingaddress1 yes 100 chars billingaddress2 100 chars billingcity yes 40 chars billingpostcode yes 10 chars billingcountry yes 2 chars iso 3166 examples gb ie de billingstate 2 chars examples al ms ny billingphone 20 chars deliverysurname yes 20 chars customer delivery details mandatory fields must contain value apart deliverypostcode deliverypostcode blank countries postcodes \\( e g ireland \\) required countries providing blank field information required cause error deliverystate becomes mandatory deliverycountry set us deliveryfirstnames yes 20 chars deliveryaddress1 yes 100 chars deliveryaddress2 100 chars deliverycity yes 40 chars deliverypostcode yes 10 chars deliverycountry yes 2 chars iso 3166 examples gb ie de sage pay direct integration protocol guidelines 3 00 page 45 71 deliverystate 2 chars examples al ms ny deliveryphone 20 chars paypalcallbackurl 255 chars must begin http https fully qualified domain name url customers redirected upon completion paypal transaction required cardtype paypal customeremail 255 chars examples mail1 com mail2 com customers email address wish use multiple email addresses add using \\( colon \\) character separator current version server integration method send confirmation emails customer field provided records basket 7500 chars see a1 2 order informati displayed mysagepay field supplied basketxml field supplied giftaidpayment flag 0 \\( default \\) 1 setting field means customer ticked box site indicate wish donate tax 0 transaction gift aid charitable donation \\( default \\) 1 payment gift aid charitable donation customer agreed donate tax use vendor account gift aid ena bled sage pay direct integration protocol guidelines 3 00 page 46 71 applyavscv2 flag 0 \\( default \\) 1 2 3 using flag fine tune avs cv2 checks useful circumstances direct trusted customer contact established wish override default security checks 0 avs cv2 enabled check rules apply use rules \\( default \\) 1 force avs cv2 checks even enabled account rules apply use rules 2 force avs cv2 checks even enabl ed account 3 force avs cv2 checks even enabled field ignored paypal transactions clientipaddress 15 chars ip address client connecting server making paym ent full ip address obtain server scripts attempt geolocate ip address reports fraud screening sage pay direct integration protocol guidelines 3 00 page 47 71 apply3dsecure flag 0 \\( default \\) 1 2 3 using flag fine tune 3d secure checks useful circumstances direct trusted customer contact established wish override default security checks 0 3d secure checks possible rules allow perform checks apply authorisation rules \\( default \\) 1 force 3d secure checks transaction possible apply rules authorisation 2 perform 3d secure checks transaction always authorise 3 force 3d secure checks transaction possible always obtain auth code irrespective rule base field ignored paypal transactions accounttype 1 char e \\( default \\) c optional flag used tell sage pay gateway merchant account use omitted system use e c default e use e commerce merchant account \\( default \\) use mail order telephone order account \\( present \\) c use continuous authority merchan account \\( present \\) field ignored paypal transactions sage pay direct integration protocol guidelines 3 00 page 48 71 billingagreement flag 0 1 wish register transaction first series regular payments field set 1 paypal account set use via sage pay field necessary omitted set 0 0 normal paypal transaction first series payments \\( default \\) 1 first ser ies paypal payments subsequent payments taken using txtype repeat field required non paypal transactions need contact paypal directly order apply reference transactions service confirmed bef ore attempting pass billingagreement field value 1 successful repeat payments createtoken flag 0 \\( default \\) 1 use flag indicate wish token generated stored database returned future use 0 create token payment \\( default \\) 1 create token payment successful return token sage pay direct integration protocol guidelines 3 00 page 49 71 store token flag 0 \\( default \\) 1 use flag indicate wish store token used future use 0 store token \\( default \\) 1 store token three failed attempts successful authorisation store token repeatedly value 1 must passed every use token basketxml 20000 chars see a1 3 flexible version current basket field used instead basket field field supplied basket field supplied customerxml 2000 chars see a1 4 used supply information customer purposes fraud screening surchargexml 800 chars see a1 1 use field override current surcharge settings fixed amount surcharges set different payment types vendordata 200 chars use field pass data wish displa yed transaction mysagepay referrerid 40 char used send unique reference partner referred vendor sage pay language 2 chars iso 639 2 examples en de fr language customer sees payment pages determined code sent supplied language default shoppers browser used language supported language supported templates used currently supported languages default templates french german spanish portuguese dutch english sage pay direct integration protocol guidelines 3 00 page 50 71 website 100 chars reference website transaction came field useful f transactions originate one website supplying information enable reporting performed website firecipientacctnumber 10 chars either first 6 last 4 characters primary recipient pan \\( spaces \\) primary recipient account card contain 10 characters account number \\( alphanumeric \\) unless account number less 10 characters long case account number pres ent entirety field required uk merchants merchant category code 6012 \\( financial institutions \\) firecipientsurname 20 chars surname primary recipient special characters apostroph es hyphens permitted field required uk merchants merchant category code 6012 \\( financial institutions \\) firecipientpostcode post code primary recipient field required uk merchants merchant category code 6012 \\( financial institutions \\) firecipientdob date birth primary r ecipient format yyyymmdd field required uk merchants merchant category code 6012 \\( financial institutions \\) sage pay direct integration protocol guidelines 3 00 page 51 71 a1 1 surchargexml use field override default surcharge mysagepay current transaction set different surcharge value payment type \\( except paypal \\) value either percentage fixed amount surcharge amount payment type selected included surcharge xml default value pay ment type used mysagepay wish remove surcharge value currently set mysag epay payment type send payment type surcharge va lue 0 surcharge xml xml tags follow order stated table surcharge xml elements node element mandatory format max length allowed values description surcharges node root element surcharge elements yes xml container element least one must occur xml file multiple surcharge elements must unique paymenttype yes 15 chars visa mc mcdebit delta maestro uke amex dc jcb visa visa mc mastercard mcdebit debit mastercard delta visa debit maestro domestic international issued maestro uke visa electron amex american express dc diners club international discover jcb japan credit bureau value uppercase yes unless fixed element supplied maximum 3 digits 2 decimal places percentage transaction amount included surcharge transaction payment type element yes unless fixed element supplied amount surcharge containing minor digits formatted 2 decimal places appro priate e g 5 10 3 29 values 3 235 rejected minimum minor unit currencies like jpy 1 amounts must uk currency format period must used indicate decimal place comma must used separ ate groups thousands view example surcharge xml snippets sagepay com sage pay direct integration protocol guidelines 3 00 page 52 71 a1 2 basket shopping basket contents passed single colon delimited field following format number lines detail basket field item 1 description quantity item 1 unit cost item 1 without tax tax applied item 1 cost item 1 including tax total cost item 1 \\( quantity x cost including tax \\) item 2 description quantity item 2 cost item including tax total cost item line breaks included readability line breaks nee ded separ ators colons total number items ordered total number rows basket information example 6 items ordered \\( 1 vd player 5 dvds \\) number lines detail 4 \\( dvd player two lines dvds one line delivery \\) example items quantity item value item tax item total line total pioneer nsdv99 dvd surround sound system 1 424 68 74 32 499 00 499 00 3 11 91 2 08 13 99 41 97 finding nemo 2 11 05 1 94 12 99 25 98 delivery 4 99 4 pioneer nsdv99 dvd cut 3 11 91 2 08 13 99 41 97 finding nemo 2 11 05 1 94 12 99 25 98 delivery 4 99 wish leave field empty must still include colon e g dvd player 1 199 99 199 9 sage pay direct integration protocol guidelines 3 00 page 53 71 a1 3 basketxml basket passed xml document extra information used 1 displaying customer paying using paypal 2 displaying mysagepay give detail transaction 3 displaying payment page possible send throu gh delivery charge one discounts discount order level rather item level fixed amount discount however add multiple discounts order 4 accurate fraud screening red extra information f fraud screening supplied includes details items ordered also shipping details recipient details information supplied sent red enable perform accurate fraud screening 5 supplying trips information however information use acquiring bank elavon trips information supplied includes details airlines tours cruises hotels car rental acquiring bank elavon nformation sent daily settlement file nb please note customer buying one service \\( e one following airlines tour cruises hotels car rental \\) need send information thr ough separate transactions validation performed totals basket transaction fail following amounts add unitgrossamount unitnetamount unittaxamount totalgrossamount unitgrossamount x quan tity amount \\( sent transaction registration \\) totalgrossamount deliverygrossamount fixed \\( discounts \\) basket field basketxml field optional basket information supplied cannot pass basket th e basketxml field one needs passed xml tags follow order stated table sage pay direct integration protocol guidelines 3 00 page 54 71 basket xml elements node element mandatory format max length allowed values description basket node root element basket elements 16 chars id seller using phone payment xml container element many items like basketxml holding different item recipient sum totalgrossamount item elements deliverygrossamount amount must match amount field sent transaction yes 100 chars description item 12 chars item sku unique product identifier code 12 chars item product code yes 12 chars quantity item ordered yes 14 chars cost item tax containing minor digits formatted 2 decimal places appropriate e g 5 10 3 29 values 3 235 rejected minimum minor unit currencies like jpy 1 amounts must uk currency format period must used indicate decimal place comma must used separate groups thousands yes 14 chars amount tax item containing minor digits formatted 2 decimal places appropriate e g 5 10 3 2 9 values 3 235 rejected minimum minor unit currencies like jpy 1 amounts must uk currency format period must used indicate decimal place comma must used separate groups thousands yes 14 chars unitnetamount unittaxamount yes 14 chars unitgrossamount x quantity sage pay direct integration protocol guidelines 3 00 page 55 71 20 chars first name recipient item recipientlname 20 chars last name recipient item 1 char middle initial recipient item 4 chars salutation recipient item 45 chars email recipient item 20 chars phone number recipient item 100 chars first address line recipient item 100 chars second address line recipient item 40 chars city recipient item 2 chars us 2 letter code state recipient item 2 chars 2 letter country code \\( iso 3166 \\) recipient item 9 chars postcode recipient item 19 chars shipping item number 160 chars gift message associated item 14 chars cost delivery tax containing minor digits formatted 2 decimal places appropriate e g 5 10 3 29 values 3 235 rejected minimum minor unit currencies like jpy 1 amounts must uk currency format per iod must used indicate decimal place comma must used separate groups thousands sage pay direct integration protocol guidelines 3 00 page 56 71 14 chars amount tax delivery containing minor digits formatted 2 decimal places appropriate e g 5 10 3 29 values 3 235 rejected minimum minor unit currencies like jpy 1 amounts must uk currency format period must used indicate decimal place comma must used separate groups thousands 14 chars deliverynetamount deliverytaxamount root element discount elements yes multiple discount elements yes 14 chars zero greater amount discount monetary value discount value sent subtracted overall total 100 chars description discount appear payment pages mysagepay paypal checkout pages appropriate 16 chars ship customer id 1 char c low cost designated customer international military n next day overnight p store pickup 2 day service w 3 day service shipping method used 20 chars fax number used provide hotel information settlement one hotel element sage pay direct integration protocol guidelines 3 00 page 57 71 yes check date hotel yes check date hotel yes 3 chars number people hotel booking 10 chars folio reference number hotel n flag indicate whether guest confirmed reservation confirmed reservation n unconfirmed reservation yes 15 chars daily room rate hotel yes 20 chars name guest used provide cruise information settlement one cruise element yes start date cruise yes end date cruise used provide car rental information settlement one car rental element yes check date car rental yes check date car rental used provide tour operator information settlement one tour operator element yes check date tour operator yes check date tour operator used provide airline information settlement one airline element yes 11 chars airline ticket number yes 3 chars iata airline code agentcode yes 8 chars iata agent code yes 26 chars agency name 6 chars flight number yes 0 1 true false sage pay direct integration protocol guidelines 3 00 page 58 71 yes 29 chars name passenger yes 3 chars iata airport code yes contains elements detailing segment least one segment element must supplied airline element supply 4 segments carriercode yes 3 chars iata carrier code yes 3 chars class service yes 0 1 true false indicate stopover yes departure date segment destination yes 3 chars iata airport code destination 6 chars fare basis code 20 chars airline customer code 15 chars airline invoice number 15 chars diners customer reference include 5 elements view example basket xml snippets sagepay com sage pay direct integration protocol guidelines 3 00 page 59 71 a1 4 customerxml extra fields detailed passed xml document accurate fraud screening xml tags follow order stated table customer xml elements node element mandatory format max length allowed values description customer node root element customer elements 1 char middle initial customer 19 chars date birth customer 19 chars work phone number customer mobile number customer whether customer previous customer new 16 chars min value 0 number days since card first seen 1 char id customer view example customer xml snippets sagepay com sage pay direct integration protocol guidelines 3 00 page 60 71 a2 age pay response transaction r egistration c allback post plain text response part post originated servers a1 encoding name value pairs separ ated carriage return linefeeds \\( crlf \\) response form name mandatory format max length allowed values description vpsprotocol yes 4 chars 3 00 protocol version used system supplied 1 status yes 15 chars ok notauthed rejected authenticated registered 3dauth ppredirect malformed invalid error status ok statusdetail field give information problem ok process executed without error notauthed sage pay gateway could authorise transaction details provided customer incorrect insufficient funds availab le however transaction completed lso returned paypal transactions response paypal completion post \\( accept sent complete paypal transaction see appendix a8 \\) rejected sage pay system rejected transaction bec ause fraud screening rules set account note bank may authorised transaction rule bases avs cv2 3d secure caused transaction rejected authenticated 3d secure checks performed successfully card details secured sage pay returned txtype authenticate registered 3d secure checks failed sage pay direct integration protocol guidelines 3 00 page 61 71 performed card details still secured sage pay returned txtype authenticate 3daut h customer needs directed card issuer 3d authentication go appendix a3 ppredirect customer needs redirected paypal go appendix a6 malformed input message missing fields badly formatted normally occur development invalid transaction registered although post format valid information supplied invalid e g incorrect vendor name currency error problem occurred sage pay prevented transaction registration please notify sage pay status error seen together vendor vendortxcode statusdetail statusdetail yes 255 chars human readable text providing extra detail status message always check statusdetail status ok vpstxid yes 38 chars sage pay id uniquely identify transaction system present status ok sage pay direct integration protocol guidelines 3 00 page 62 71 securitykey yes 10 chars security key sage pay uses generate md5 hash sign notification message \\( b3 \\) signature called vpssignature value used allow detection tampering notifications sage pay gateway must kept secret customer held database present status ok txauthno 10 chars sage pay unique authorisation code successfully authorised transaction present status ok avscv2 yes 50 chars allmatch security code match address match data matches data checked response avs cv2 checks provided vendor info backward compatibility banks rules set mysagepay accept reject transaction based values detailed results split next three fields present status 3dauth uthenticated ppredirect registered addressresult yes 20 chars notprovided notchecked matched notmatch ed address numeric avs cv2 checks present status 3dauth uthenticated ppredirect registered postcoderesult yes 20 chars notprovided notchecked matched notmatched postcode avs cv2 checks present status 3dauth uthenticated ppredirect registered cv2result yes 20 chars notprovided notchecked matched notmatched code avs cv2 checks present status 3dauth uthenticated ppredirect registered 3dsecurestatus yes 50 chars ok notchecked notauthed incomplete field details results 3d secure checks \\( appropriate \\) ok 3d secure checks carried user sage pay direct integration protocol guidelines 3 00 page 63 71 error attemptonly noauth cantauth malformed invalid authenticated correctly notchecked 3d secure checks performed indicates 3d secure either switched account level disabled transaction registration setting like apply3dsecure 2 notauthed 3d secure authentication checked user failed authentication incomplete 3d secure authentication unable complete authentication occurred error authentication could attempted due data errors service unavailability one parties involved check attemptonly cardholder attempted authenticate themselve process complete cavv returned therefore liability shift may occur non maestro cards check merchant agreement noauth means card 3d secure scheme cantauth normally means card issuer part scheme malformed invalid statuses indicate problem creating receiving 3d secure data occur live environment sage pay direct integration protocol guidelines 3 00 page 64 71 cavv 32 chars encoded result code 3d secure checks \\( cavv ucaf \\) present 3dsecurestatus field ok attemptonly token 38 chars token generated sage pay fraudresponse 10 chars accept challenge deny notchecked accept means red recommends transaction accepted deny means red recommends transaction rejected challenge means red recommends transaction reviewed elected transactions either automatically accepted automatically denied vendor level please contact sage pay wish change behaviour require transactio ns notchecked means red perform fraud checking particular transaction declinecode 2 chars decline code bank codes specific bank please contact description code e g 00 expiryd ate yes 4 chars expiry date card used format mmyy bankauthcode 6 chars authorisation code returned bank e g t99777 surcharge 0 01 100 000 00 returns surcharge amount charged present surcharge applied transaction sage pay direct integration protocol guidelines 3 00 page 65 71 a3 sage pay response transaction registration post \\( 3d secure \\) 3d authentication available account card card issuer \\( \\) part scheme plain text response part post originated servers a1 encoding name value fields separated carriage return linefeeds \\( crlf \\) response form name mandatory format max length allowed values description status yes 15 chars 3 dauth 3 dauth returned 3d authentication available account directory services issued url progress statusdetail yes 255 chars human readable text providing extra detail status message always check statusdetail status ok 3dsecurestatus yes 20 chars ok ok status 3dauth returned stage value receive 3dsecurestatus ok md yes 35 chars unique reference 3d authentication attempt acsurl yes 7500 chars fully qualified url points 3d authentication pareq yes 7500 chars base64 encoded encrypted message passed issuing bank part 3d authentication forwarding value acsurl pass field called pareq \\( note lower case \\) avoids issues case sensitive acsurl code point server builds auto submitting form sends pareq md additional field termurl address specified acsurl authetnication site results sent termurl encryoted field called pares forward sage pay appendix a4 sage pay direct integration protocol guidelines 3 00 page 66 71 a4 3d authentication results post terminal url sage pay \\( 3d secure \\) performed via https post request sent direct 3d secure callback url details characters request format name mandatory format max length allowed values description md yes 35 chars unique reference 3d authentication attempt match md value passed back site response transaction registration post par es yes 7500 chars base64 encoded encrypted message sent back issuing bank terminal url end 3d authentication process field must passed back direct along md field allow sage pay mpi decode result receive value back issuing bank field called pares passed sage pay pares response 3d callback service identical initial registration post see appendix a2 sage pay direct integration protocol guidelines 3 00 page 67 71 a5 sage pay response transaction registration post \\( paypal \\) supplied paypal cardtype a1 paypal active account response returned server encoding name value f ields separated carriage return linefeeds \\( crlf \\) response form name mandatory format max length allowed values description vpsprotocol yes 4 chars 3 00 protocol version used system supplied 1 status yes 15 chars ppredirect 3 dauth returned 3d authentication available account directory services issued url progress statusdetail yes 255 chars human readable text providing extra detail status message vpstxid yes 38 chars sage pay id uniquely identify transaction system paypalredirecturl yes 255 chars fully qualified domain name url redirect customer contains paypal token stripped sage pay direct integration protocol guidelines 3 00 page 68 71 a6 sage pay callback paypal authentication \\( paypal \\) redirecting customer paypalredirecturl step a6 message sent paypalcallbackurl along customer completed paypal authentication payment method selection provides relevant information transaction allow decide wish proceed payment \\( see a8 \\) informat ion form request format name mandatory format max length allowed values description vpsprotocol yes 4 chars 3 00 protocol version used system supplied 1 status yes 15 chars paypalok malformed invalid error paypalok customer selected payment type transaction ready taken malformed input message missing fields badly formatted normally occur development vendor integration invalid transaction registered although post format valid information supplied invalid e g incorrect vendor name currency error problem occurred sage pay prevented transaction completion please notify sage pay status error seen together vendortxcode st atusdetail text statusdetail yes 255 chars human readable text providing extra detail status message vpstxid yes 38 chars sage pay id uniquely identify transaction system sage pay direct integration protocol guidelines 3 00 page 69 71 payerstatus yes 255 chars verified unverified verified lets members know customer confirmed paypal member current active bank accou nt also means transaction may eligible paypal seller protection contact paypal information deliverysurname yes 20 chars customer modified delivery details whilst fields otherwise delivery details supplied registration post returned deliveryfirstnames yes 20 chars deliveryaddress1 yes 100 chars deliveryaddress2 100 chars deliverycity yes 40 chars deliverypostcode yes 10 chars deliverycountry yes 2 chars deliverystate 2 chars examples al ms ny deliveryphone 20 chars addressstatus yes 20 chars none confirmed unconfirmed confirmed buyer 's confirmed address checked credit card billing address maintained credit card company verified paypal also means transaction may eligible paypal seller protection contact paypal information customeremail yes 255 chars examples mail1 com mail2 com payerid yes 15 chars unique paypal user reference id sage pay direct integration protocol guidelines 3 00 page 70 71 a7 complete paypal transaction \\( paypal \\) wish complete paypal transaction must send completion post sage pay servers performed via https post request sent direct paypal completion url details url encoded nam e value fields separated b characters request format name mandatory format max length allowed values description vpsprotocol yes 4 chars 3 00 protocol version used system supplied 1 txtype yes 15 chars complete vpstxid yes 38 chars sage pay id uniquely identify transaction system amount yes 0 01 100 000 00 amount transaction containing minor digits formatted 2 decimal places appropriate e g 5 10 3 29 values 3 235 r ejected minimum minor unit currencies like jpy 1 amount vary original post a1 15 original amount \\( example delivery prices change result address selected \\) amounts must uk currency format period must used indicate decimal place comma must used separate groups thousands accept yes 3 chars yes yes wish proceed paypal transaction wish cancel based information returned response completion post identical initial registration post see appendix a2 sage pay direct integration protocol guidelines 3 00 page 71 71 table shows complete set web addresses \\( urls \\) send transaction registration post post environment url registration test https test sagepay com gateway service vspdirect register vsp registration live https live sagepay com gateway service vspdirect register vsp 3d secure callback test https test sagepay com gateway service direct3dcallback vsp 3d secure callback live https live sagepay com gateway service direct3dcallback vsp paypal completion test https test sagepay com gateway service complete vsp paypal completion live https live sagepay com gateway service complete vsp please ensure firewalls allow outbound inbound port 443 \\( https \\) access order communicate servers \\( test live \\) 13 0 urls", 
    "crawled_date": "2017-06-10T13:59:47.720097"
  }, 
  "41": {
    "link5": "https://developer.paypal.com/docs/classic/archive/", 
    "link4": "https://developer.paypal.com/docs/accept-payments/", 
    "link1": "https://developer.paypal.com/docs/api/", 
    "api_url": "paypal.com", 
    "link3": "https://developer.paypal.com/docs/", 
    "link2": "https://developer.paypal.com/docs/classic/api/", 
    "progweb_url": "https://www.programmableweb.com/api/paypal-adaptive-payments", 
    "progweb_date": "12.03.2010", 
    "progweb_descr": "The PayPal X Adaptive Payments API enable developers to build apps that process transactions by interacting with PayPal. Developers can control the entire transaction within a single interface, which allows payments on multiple platforms, including web, mobile, and others. Adaptive Payments make it possible to create ongoing relationships with customers so they don't have to request user's permission for every single transaction. Adaptive Payments API allows payments to be made in different ways; either directly to the receiver, to multiple receivers, or to two+ receivers in a row (chained payments).", 
    "api_name": "PayPal Adaptive Payments", 
    "progweb_cat": "Payments,eCommerce", 
    "descr5": "docs api reference support log dashboard back docs documentation archive documentation page created previous versions paypal products content files might reflect current product functionality table contents account authentication adaptive accounts adaptive payments paypal buttons images express checkout invoicing order management instant payment notification \\( ipn \\) order management \\( ipn pdt \\) mass payments payflow paypal payments standard permissions latest documentation see nvp soap api documentation account authentication account authentication service getting started guide adaptive accounts adaptive accounts developer guide adaptive payments adaptive payments developer guide note see adaptive payments developer documentation latest documentation documentation provided html format paypal buttons images paypal buttons images express checkout merchant api reference archive getbillingagreementcustomerdetails \\( nvp soap \\) api operation deprecated starting version 54 0 later api setcustomerbillingagreement \\( nvp soap \\) api operation deprecated starting version 54 0 later api invoicing adaptive invoicing developer guide invoicing user 's guide invoicing service api guide note see invoicing developer documentation latest documentation documentation provided html format order management instant payment notification \\( ipn \\) instant payment notification guide order management order management integration guide mass payments mass payments user guide payflow note see payflow gateway development integration guides latest documentation payflow gateway developer guide pdf latest payflow gateway integration information see html version guide payflow link payflow link user 's guide payflow link fraud protection services user 's guide payflow link recurring billing service user 's guide payflow pro payflow pro developer 's guide payflow pro reporting developer 's guide website payments pro payflow edition website payments pro payflow edition developer 's guide website payments pro payflow edition fraud protection services user 's guide website payments pro payflow edition recurring billing service user 's guide paypal payments pro payflow edition recurring payments developer 's guide website payments pro payflow edition reporting developer 's guide website payments pro payflow edition xmlpay developer 's guide paypal payments standard paypal payments standard integration guide subscriptions recurring payments guide permissions permissions service guide note see permissions developer documentation latest documentation documentation provided html format docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr4": "docs api reference support log dashboard back docs accept payments paypal offers variety products solutions accepting payments choose solution best requirements whether goal get running quickly possible develop fully customized payment experience braintree direct braintree direct suitable type integration whether want quick easy payment solution completely customized payment experience drop ui available braintree direct enables start accepting payments little effort want build checkout experience braintree direct simplifies payment method details token never need worry method users choose pay learn get started braintree direct payment buttons paypal makes easy accept payments website whether mobile device tablet pc copy paste short html snippet website add payment button single item shopping cart see add payment buttons website information payments rest api payments rest api provides easy secure way accept online mobile payments take advantage great benefits paypal enabling customers make payments clicks payments made paypal credit cards depending country accept immediate payment authorize payment capture later payments overview explains get started payments rest api find detailed information paypal paypal sdks enable ios android apps interact credit card swipers merchants process person credit card transactions using mobile app native libraries paypal sdks enable interact paypal hardware also process card present transactions get started see integrating paypal sdks express checkout express checkout fast easy way buyers pay paypal express checkout makes easier buyers pay online enables accept paypal retaining control buyer overall checkout flow typical checkout flow buyer must provide shipping information billing payment information checking shopping cart page express checkout buyer check pay without entering shipping billing information paypal provides stored information simplifies expedites checkout process increase sales 18 percent learn see express checkout integration guide shopping carts paypal partners provide third party shopping carts allow seamlessly accept paypal payments whether need complete online store want add shopping cart existing website several options available paypal partners meet needs learn see using shopping carts already integrated third party shopping cart solution looking support search browse articles within shopping cart section paypal technical support faq paypal payments pro payflow gateway paypal payments pro customizable solution enables merchants keep buyers website entire checkout payment process merchants host customized checkout pages send transactions paypal paypal host checkout pages also manage security sales authorizations paypal payments pro accept paypal paypal credit payments well credit debit card payments paypal payments pro also includes optimized mobile checkout experience details see paypal payments pro payflow gateway secure open gateway utilized internally paypal payments pro services provides features including api allows merchants create host customized checkout pages paypal hosted checkout page using payflow gateway shared api merchants connect online store major payment processor bank card association choose connect directly paypal get started see payflow gateway website payments pro website payments pro legacy paypal product based soap nvp technology enables merchants accept credit debit cards paypal payments directly website using two paypal api based solutions direct payment express checkout payments immediate authorized later capture also recurring payments website payments pro also includes additional paypal solutions tools virtual terminal fraud management filters reference transactions mobile sdk paypal mobile sdks enable native apps easily accept paypal credit card payments native libraries paypal mobile sdks enable build fast responsive apps single payments \\( paypal credit card \\) future payments \\( paypal \\) learn get started paypal mobile sdks docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr3": "docs api reference support log dashboard paypal developer documentation view featured docs use documentation site learn implement paypal payment services choose solution bests suits needs featured documentation select docs find specific document express checkout simple way add paypal web app checkout web mobile web integration mobile app integration paypal payments standard ready made way accept cards paypal website payment buttons custom flexible way accept cards paypal app website braintree direct paypal payments pro store accept contactless payments chip mag stripe cards person paypal paydiant marketplace process split chained payments providers braintree marketplace invoicing create send manage professional customized invoices rest invoicing payouts send money hundreds recipients simultaneously payouts mass pay find looking \\? view product docs sdk libraries mobile sdks ios braintree android braintree ios paypal android paypal overview rest server sdks java php node python ruby net overview nvp soap api sdks java php ruby net overview third party products services shopping carts accept payments third party shopping cart software bigcommerce magento shopify stores specialty platforms alternative ways sell online specialty platforms marketplaces e junkie swappa jvzoo platforms financial management ready made solutions billing invoicing accounting xero aria quickbooks management ready start development \\? sign log using paypal account get credentials set test accounts sign log docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr2": "docs api reference support log dashboard view referencenvp soap apisapi referenceexpress checkoutendpointsoperations \\( alphabetical \\) operations \\( feature \\) payflow gatewayendpointsparametersadvanced parametersadditional featureswebsite payments proendpointsoperations \\( alphabetical \\) operations \\( feature \\) additional featureshosted solution \\( outside us \\) mass paymentsendpointsoperationadaptive accountsendpointsoperations \\( alphabetical \\) invoicingendpointsoperations \\( alphabetical \\) permissions serviceendpointsoperations \\( alphabetical \\) button managerendpointsoperations \\( alphabetical \\) nvp soap apps 101get startednvp basicssoap basicscredentialsendpointscurrency codescountry codesstate province codeslocale codesresponse codesapi error codes10000 100991000110002100031000410005100061000710008100091001010011100141006910100 1019910101101021010310200 102991020110202102031020410205102061020710209102101021110212102131021410215102161021710218102191022010300 10399103011030310304103051030610307103081030910310103111031210313103141031710320103211032710400 10499104001040110402104041040510406104071040810409104101041110412104131041410415104161041710418104191042010421104241042510426104271042810429104301043110432104331043410435104361043710438104391044010441104421044310444104451044610448104491045210457104581045910460104611046210463104641046510467104681046910470104711047210473104741047510476104771047810479104801048110482104851048610500 1059910500105011050210504105051050710508105091051010511105121051310519105201052110523105251052610527105341053510536105371053810539105401054110542105441054510546105471054810549105501055210553105541055510556105571055810560105611056210563105641056510566105671057010571105741057510576105771057810600 1069910600106011060210603106041060510606106071060810609106101061110612106131061410615106161061710618106191062010621106221062310624106251062610627106281062910630106311063210633106341063510700 1079910701107021070310704107051070610707107081070910710107111071210713107141071510716107171071810719107201072110722107231072410725107261072710728107291073010731107321073310734107351073610744107451074610747107481075010751107521075410755107561075810759107601076110762107631076410800 108991080011000 110991100111002110681108411089110911109411300 113991130211400 1149911401114031140411406114071145011451114521145311454114551145611457114581145911500 1159911501115021150311504115051150611507115081150911510115111151211514115151151611517115181151911520115211152211523115241153111543115441154611547115481155011551115521155311554115551155611557115581156011561115621156411567115681156911570115711157611577115781157911581115821158311584115851158611587115901159211600 11699116011160211603116041160711610116111161211614116151161611800 1189911800118011180211803118041180511806118071181011811118121181311814118151182011821118221182311824118251182611827118281182911830118311183211900 11999119001199612000 12099120001200112100 121991210912124121251212612200 1229912200122011220212203122041220512206122071220812300 123991230213100 1319913100131011310213103131041310513106131071310813109131101311113112131131311413115131161312213200 132991320013500 13599135131353113600 136991360113602136061360713700 13799137011375114001 14099140011400215001 1509915001150021500315004150051500615007150081500915010150111501217000 1709917004170051700617200 1729917200172031720418000 180991801419000 190991906581000 81099810008100181002810038100481100 8119981100811018110281103811048110581106811078110881109811108111181112811138111481115811168111781118811198112081121811228112381124811258112681127811288112981130811318113281133811348113581136811378113881139811408114181142811438114481145811468114781148811498115081200 812998120081201812038120581206812078120881209812108121181212812138121481215812198122081221812228122381224812258122681227812298123081232812348123581236812378123881239812438124481245812478124881249812508125199900 9999999998dodirectpayment processor response codesmasspay failed transactions ipn reason codessdksrelease notesadaptive accountsversion 1 2 0version 1 0 4version 1 0 3earlier versionsexpress checkout direct payment mass pay button managerversion 204version 203version 202version 201version 200version 124version 123version 122version 121version 120version 119version 117version 116version 115version 114version 113version 112version 111version 109version 108version 106version 104version 98version 94version 93version 92earlier nvp api versionsearlier soap api versionsinvoicing legacy apiversion 1 12 0version 1 11 0version 1 10 0version 1 8 0version 1 7 0version 1 6 0payflow apipermissions serviceversion 84 0version 74 0website payments pro hosted solution nvp soap api reference learn paypal name value pair \\( nvp \\) soap api endpoints operations express checkout express checkout commonly used paypal payments api payments made paypal hosted checkout page endpoint send api calls depends whether making nvp soap call use api make sure correct api credentials express checkout endpoints express checkout operations nvp soap nvp soap nvp nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap express checkout operations feature payflow gateway payflow gateway secure open payment gateway supports preferred integration method products paypal payments propaypal payments advanced paypal acquirer merchant bank payflow propayflow link choose processing platform merchant bank choose paypal host payment pages total control payment process website matter product select payflow gateway enables accept debit credit card payments paypal express checkout paypal credit \\( formerly bill later \\) payments within one api payflow gateway endpoints endpoint send api calls depends whether making live test call gateway transactions require user data parameters set account paypal manager payflow gateway parameters paypal host payment pages see configuring hosted checkout pages direct api calls click following api reference links payflow basic transaction parameters payflow credit card transaction parameters note transparent redirect information see pci compliance without hosted pages payflow gateway advanced parameters processors requiring additional parameters purchasing card level 2 3 transaction parameters telecheck parameters payflow gateway additional features payflow also offers following features fraud protection service recurring billing website payments pro note website payments pro deprecated replaced paypal payments pro website payments pro still supported existing merchants website payments pro endpoints endpoint send api calls depends whether making nvp soap call use api make sure correct api credentials website payments pro operations nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap website payments pro operations feature website payments pro additional features website payments pro also offers fraud management filters recurring payments website payments pro hosted solution \\( outside us \\) product merchants developers want integrate paypal 's hosted solution add transaction processing websites solution available australia france hong kong italy japan spain uk see integration guide country mass payments merchants use mass payments send money instantly 250 recipients send payments multiple recipients merchants need recipient 's paypal account email address payment amount currency code merchants manually upload file listing payments create programmatically using api send mass payments manually see using mass payments paypal account mass payments endpoints endpoint send api calls depends whether making nvp soap call use api make sure correct api credentials mass payments operation nvp soap adaptive accounts adaptive accounts api allows create manage paypal accounts paypal users make api call see adaptive accounts api call headers endpoints adaptive accounts endpoints make adaptive accounts api calls include api credentials sandbox testing specify adaptive accounts operations addbankaccount addpaymentcard checkcompliancestatus createaccount getuseragreement setfundingsourceconfirmed updatecompliancestatus invoicing use invoicing service api create send manage invoices using paypal invoicing endpoints make api calls invoicing service include api credentials sandbox testing specify invoicing operations cancelinvoice createandsendinvoice createinvoice deleteinvoice generateinvoicenumber getinvoicedetails markinvoiceaspaid markinvoiceasrefunded markinvoiceasunpaid remindinvoice searchinvoices sendinvoice updateinvoice permissions service permissions service enables obtain permission execute paypal api operations behalf paypal account holders permissions service endpoints make api calls permissions service include api credentials sandbox testing specify permissions service operations cancelpermissions getaccesstoken getadvancedpersonaldata getbasicpersonaldata getpermissions requestpermissions button manager advanced paypal button manipulation use api modify paypal buttons directly using html code see paypal button html variables reference paypal button image reference button manager endpoints send api calls one following endpoints depending whether making nvp soap call make sure correct api credentials use api button manager operations nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap nvp soap additional information api credentials paypal name value pair api basics paypal soap api basics paypal developer documentation paypal credit \\( formerly bill later \\) api error codes user parameter data paypal manager docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "descr1": "docs api reference support log dashboard view reference rest apis api reference billing agreements api billing plans api identity api invoicing api payment experience api payments api payouts api vault api webhooks api overview authentication headers first rest call errors release notes sdks sdk quickstart service integrations rest api reference billing agreements api use billing plans billing agreements create agreement recurring credit card bank card paypal payment goods services create agreement reference active billing plan agreement inherits information also supply customer payment information optionally override referenced plan 's merchant preferences shipping fee tax information information see billing plans agreements billing agreements \\( resource group \\) use resource create agreement update agreement show agreement details cancel agreements also set bill balance agreement activate agreement suspend agreement list agreement transactions execute agreements create agreement post v1 payments billing agreements creates billing agreement json request body include object name description start date id plan base agreement customer shipping address information successful request returns http status code json response body shows billing agreement details update agreement patch v1 payments billing agreements updates details billing agreement id details include description shipping address start date successful request returns http status code json response body show agreement details get v1 payments billing agreements shows details billing agreement id successful request returns http status code json response body shows billing agreement details bill agreement balance post v1 payments billing agreements bill balance bills balance agreement id json request body include optional note describes reason billing action agreement amount currency successful request returns http status code json response body cancel agreement post v1 payments billing agreements cancel cancels billing agreement id json request body include object optional note describes reason cancellation agreement amount currency successful request returns http status code json response body activate agreement post v1 payments billing agreements activate activates suspended billing agreement id json request body include object note describes reason activation agreement amount currency successful request returns http status code json response body set agreement balance post v1 payments billing agreements set balance sets balance agreement id json request body specify balance currency type value successful request returns http status code json response body suspend agreement post v1 payments billing agreements suspend suspends billing agreement id successful request returns http status code json response body list agreement transactions get v1 payments billing agreements transactions lists transactions agreement id filter transactions appear response specify optional start end date query parameters successful request returns http status code json response body lists transactions details execute agreement post v1 payments billing agreements agreement execute executes billing agreement id customer approval successful request returns http status code json response body shows billing agreement details billing plans api use billing plans billing agreements create agreement recurring credit card bank card paypal payment goods services billing plan includes payment definitions details plan must include least one regular payment definition optionally trial payment definition definition determines often long customer charged plan specify type indicates whether payment definitions plan fixed infinite number payment cycles plan also defines merchant preferences including much costs set agreement urls customer approve cancel agreement action customer 's initial payment fails default plan active create activate update information see billing plans agreements billing plans \\( resource group \\) use resource create update show details list plans create plan post v1 payments billing plans creates billing plan json request body include plan details plan must include least one regular payment definition optionally trial payment definition payment definition specifies billing period determines often long customer charged plan specify fixed infinite number payment cycles payment definition optionally specify shipping fee tax amounts successful request returns http status code json response body shows plan details default state new plan create agreement plan must activate plan updating update plan patch v1 payments billing plans updates fields billing plan id json request body include patch object specifies operation perform one fields update new value updated field successful request returns http status code json response body show plan details get v1 payments billing plans shows details billing plan id successful request returns http status code json response body shows plan details list plans get v1 payments billing plans lists billing plans filter plans appear response specify one optional query pagination parameters successful request returns http status code json response body lists plans details identity api log paypal \\( formerly paypal access \\) commerce identity solution enables customers sign web site quickly securely using paypal login credentials log paypal utilizes latest security standards n't worry storing user data system information learn log paypal get user information get v1 identity openidconnect userinfo retrieve user profile attributes invoicing api use invoicing api create draft invoices send invoices manage invoices use invoices track payments send invoice invoice moves draft payable state paypal emails link invoice paypal website customer customers paypal account log pay paypal alternatively customers pay check debit card credit card information see invoicing overview invoices \\( resource group \\) use resource create update send invoices invoice reminders also generate invoice qr codes invoice numbers search list show invoice details delete draft invoices cancel sent invoices mark invoices fully partially paid refunded delete external payment refund invoice create invoice post v1 invoicing invoices creates draft invoice optionally create invoice template create invoice template invoice populated predefined data source template contains move invoice draft payable state must send invoice json request body include invoice details including merchant information object must include array note merchant specified invoice must paypal account good standing successful request returns http status code json response body shows invoice details send invoice post v1 invoicing invoices send sends invoice id customer note send invoice cannot resend optionally set query parameter also send merchant invoice update notification successful request returns http status code json response body update invoice put v1 invoicing invoices fully updates invoice id json request body include complete object call support partial updates successful request returns http status code json response body shows invoice details send invoice reminder post v1 invoicing invoices remind sends reminder payer invoice id json request body include object defines subject reminder details successful request returns http status code json response body delete draft invoice delete v1 invoicing invoices deletes draft invoice id deletes invoices draft state invoices already sent cancel invoice delete draft invoice longer use show details however reuse invoice number successful request returns http status code json response body cancel sent invoice post v1 invoicing invoices cancel cancels sent invoice id optionally sends notification cancellation payer merchant cc emails successful request returns http status code json response body mark invoice paid post v1 invoicing invoices record payment marks status invoice id paid include payment detail object defines payment method details json request body successful request returns http status code json response body mark invoice refunded post v1 invoicing invoices record refund marks status invoice id refunded json request body include payment detail object defines payment method details successful request returns http status code json response body list merchant invoices get v1 invoicing invoices lists merchant invoices filter invoices appear response specify one optional query parameters successful request returns http status code json response body lists invoices details search invoices post v1 invoicing search lists invoices match search criteria json request body include object specifies search criteria successful request returns http status code json response body lists invoices match search criteria show invoice details get v1 invoicing invoices shows details invoice id successful request returns http status code json response body shows invoice details generate qr code get v1 invoicing invoices qr code generates qr code invoice id qr code png image base64 encoded format corresponds invoice id generate qr code invoice add paper pdf invoice customer uses mobile device scan qr code redirected paypal mobile payment flow pay online paypal credit card get qr code must create invoice specify recipient email address object use customer email address want email invoice send invoice move invoice draft payable state specify recipient email address invoice emailed successful request returns http status code json response body shows qr code png image generate invoice number post v1 invoicing invoices next invoice number generates next invoice number available merchant successful request returns http status code json response body shows next invoice number templates \\( resource group \\) create template invoice enables create invoices predefined data use resource create list show details update delete templates note also use template settings dashboard create template invoice create template post v1 invoicing templates creates invoice template create invoice template invoice populated predefined data source template contains note use template settings dashboard instead api create invoice template update template put v1 invoicing templates updates template id json request body specify complete object update method support partial updates successful request returns http status code json response body shows template details list templates get v1 invoicing templates lists merchant created templates list shows emails addresses phone numbers merchant profile successful request returns http status code json response body lists invoices show template details get v1 invoicing templates shows details template id successful request returns http status code json response body shows template details delete template delete v1 invoicing templates deletes template id successful request returns http status code json response body payment experience api use payment experience api create seamless payment experience profiles information create paypal payment web experience profile see payment experience web profiles web profiles \\( resource group \\) use resource create show details list update partially update delete web experience profiles create web experience profile post v1 payment experience web profiles creates web experience profile json request body specify profile name details show web experience profile details get v1 payment experience web profiles shows details web experience profile id list web experience profiles get v1 payment experience web profiles lists web experience profiles merchant subject update web experience profile put v1 payment experience web profiles updates web experience profile id json request body specify profile details request omits profile parameters previously set values parameters removed partially update web experience profile patch v1 payment experience web profiles partially updates web experience profile id json request body specify patch object path profile location update needed new value complete operation delete web experience profile delete v1 payment experience web profiles deletes web experience profile id payments api use payments rest api easily securely accept online mobile payments payments namespace contains resource collections payments sales refunds authorizations captures orders enable customers make paypal credit card payments clicks depending country accept immediate payment authorize payment capture later show details completed payments refunds authorizations make full partial refunds also void authorize authorizations information see payments overview payments \\( resource group \\) use resource create sale authorized payment order sale direct credit card payment stored credit card payment paypal payment authorized payment places funds hold captured later order purchase customer approved funds placed hold also use resource execute approved paypal payments show details update list payments information see also payments create payment post v1 payments payment creates sale authorized payment captured later order create sale authorization order include payment details json request body set include payer transaction details paypal payments redirect urls combination determines type payment created information see payments rest api notes countries restrict direct credit card payment related features authorizations guaranteed three days though attempt capture authorization 29 days three day honor period authorization expires reauthorize payment execute approved paypal payment post v1 payments payment execute executes paypal payment customer approved optionally update one transactions execute payment successful request returns http status code json response body shows details executed payment important call works customer approved payment information learn paypal payments show payment details get v1 payments payment shows details payment id yet complete example shows details payment created approved failed successful request returns http status code json response body shows payment details update payment patch v1 payments payment partially updates payment id update amount shipping address invoice id custom data cannot update payment payment executes successful request returns http status code json response body shows payment details list payments get v1 payments payment lists payments created create payment call state list shows payments made merchant makes call filter payments appear response specify one optional query pagination parameters see filtering pagination successful request returns http status code json response body lists payments payment details sales \\( resource group \\) sale completed payment use resource show sale details refund sale information see also refund payments show sale details get v1 payments sale shows details sale id returns sales created rest api successful request returns http status code json response body shows sale details refund sale post v1 payments sale refund refunds sale id full refund include empty payload json request body partial refund include object json request body successful request returns http status code json response body shows details refunded sale refunds \\( resource group \\) use resource show details refund direct captured payments show refund details get v1 payments refund shows details refund id successful request returns http status code json response body shows refund details authorizations \\( resource group \\) use resource related sub resources act previously created authorization show details capture void reauthorize authorization show authorization details get v1 payments authorization shows details authorization id successful request returns http status code json response body shows authorization details capture authorization post v1 payments authorization capture captures processes authorization id use call original payment call must specify intent successful request returns http status code json response body shows details captured authorization void authorization post v1 payments authorization void voids cancels authorization id cannot void fully captured authorization successful request returns http status code json response body shows details voided authorization authorize payment post v1 payments authorization reauthorize authorizes paypal account payment authorization id ensure funds still available authorize payment initial three day honor period supports request parameter authorize payment four 29 days three day honor period original authorization expires 30 days passed original authorization must create new authorization instead authorized payment new three day honor period authorize transaction 115 originally authorized amount exceed increase 75 usd successful request returns http status code json response body shows details authorized authorization captures \\( resource group \\) use resource sub resources show details refund captured payments show captured payment details get v1 payments capture shows details captured payment id successful request returns http status code json response body shows details captured payment refund captured payment post v1 payments capture refund refunds captured payment id json request body include object successful request returns http status code json response body shows details captured payment orders \\( resource group \\) use resource authorize capture void show details order note cannot refund order directly instead must refund completed payment order integration information see orders refund payment information see also orders show order details get v1 payments orders shows details order id successful request returns http status code json response body shows details voided authorization authorize order post v1 payments orders authorize authorizes order id json request body include object successful request returns http status code json response body shows details authorized order capture order post v1 payments orders capture captures payment order id use call original payment call must specify intent json request body include payment amount indicate whether capture final capture authorization successful request returns http status code json response body shows details captured order void order post v1 payments orders void voids cancels order id cannot void order payment already partially fully captured successful request returns http status code json response body shows details voided order payouts api use payouts api make paypal payments multiple paypal accounts single api call specify recipients using paypal email addresses phone numbers encrypted paypal account numbers payouts api fast convenient way send commissions rebates rewards general disbursements payouts appear mass payments sender 's paypal account provided mass payment reports important use payouts api request access account alternatively contact account manager paypal customer support must paypal business account payouts api uses iso 8601 date time format information payouts api see payouts deprecation notice synchronous mode soon deprecated longer available new integrations continues supported existing integrations synchronous mode payout immediately returns results payout payouts \\( resource group \\) use resource create payouts show batch payout details create payouts post v1 payments payouts make payouts one paypal accounts show batch payout details get v1 payments payouts periodically shows latest status batch payout along transaction status data individual items payout item \\( resource group \\) use resource show details payout item cancel unclaimed payout item deprecation notice synchronous mode soon deprecated longer available new integrations continues supported existing integrations synchronous mode payout immediately returns results payout show payout item details get v1 payments payouts item shows details payout item review current status previously unclaimed pending payout item cancel unclaimed payout item post v1 payments payouts item cancel cancels unclaimed transaction one claims unclaimed item within 30 days funds automatically returned sender cancel unclaimed item automatic 30 day refund vault api merchants use vault api securely store customer credit cards paypal vault rather server use api store customer credit card api returns id vaulted card take payment vaulted card specify id vaulted card instead credit card details information see vault overview notes paypal validate credit card information store vault direct credit card payment related features restricted countries credit cards \\( resource group \\) use resource store credit card vault delete show details list update vaulted cards store credit card post v1 vault credit cards stores credit card details paypal vault use vaulted card make payment specify id vaulted card object include store credit card must include id object also use id vaulted credit card show details update delete vaulted card list vaulted credit cards get v1 vault credit cards lists vaulted credit cards filter cards response specify one optional query parameters show vaulted credit card details get v1 vault credit cards shows details vaulted credit card id update vaulted credit card patch v1 vault credit cards updates information vaulted credit card id json request body specify values update delete vaulted credit card delete v1 vault credit cards deletes vaulted credit card id webhooks api paypal rest apis use webhooks event notification webhooks http callbacks receive notification messages events configure webhook listener app create webhook subscribes webhook listener app events namespace contains resource collections webhooks webhooks \\( resource group \\) use resource create show details list update delete webhooks create webhook post v1 notifications webhooks subscribes webhook listener events successful request returns http status code json response body object includes webhook id later use show webhook details get v1 notifications webhooks shows details webhook id list webhooks get v1 notifications webhooks lists webhooks update webhook patch v1 notifications webhooks updates webhook id supports operation delete webhook delete v1 notifications webhooks deletes webhook id webhook event notifications \\( resource group \\) use resource show event notification details list event notifications resend notification event show event notification details get v1 notifications webhooks events shows details event notification id list event notifications get v1 notifications webhooks events lists webhook event notifications specify one optional query parameters filter response resend event notification post v1 notifications webhooks events resend resends event notification event id webhook events \\( resource group \\) use resource list events webhooks subscribe resource list event subscriptions webhook list available events get v1 notifications webhooks event types lists events app subscribe list webhook events see webhook events list event subscriptions webhook get v1 notifications webhooks event types lists event subscriptions webhook id simulate webhook event \\( resource group \\) use resource use sample payload simulate webhook event events call generates serve validate connection listener url show webhook events look note also use webhooks simulator simulate webhook events simulate webhook event post v1 notifications simulate event simulates webhook event simulate event specify sample payload request send mock event data url configured listen notification messages mock events serve validate connection listener url show webhook events look verify webhook signature \\( resource group \\) use resource verify webhook signature verify webhook signature post v1 notifications verify webhook signature verifies webhook signature docs express checkout payment buttons braintree sdk docs support faq merchant support account support community resources github partners demo portal blog family braintree venmo paydiant xoom privacy legal contact copyright 1999 2017 paypal rights reserved", 
    "crawled_date": "2017-06-10T13:59:47.718127"
  }, 
  "5": {
    "link1": "http://dexterityventures.com/docs/DVI-Data-Terms.pdf", 
    "api_url": "dexterityventures.com", 
    "link3": "http://dev.dexterityventures.com/", 
    "link2": "http://www.dexterityventures.com/GIVE_api.aspx", 
    "progweb_url": "https://www.programmableweb.com/api/dvi-give", 
    "progweb_date": "05.25.2015", 
    "progweb_descr": "The DVI Give API facilitates charitable giving by allowing end users to search for and access information about charities from third part applications. Users can even make donations through the API and immediately receive a tax receipt. DVI (Dexterity Ventures Inc.) is an organization that provides donation tools for businesses who want to incorporate charitable giving into their products or online presence.", 
    "api_name": "DVI Give", 
    "progweb_cat": "Charity,Charity", 
    "descr3": "", 
    "descr2": "", 
    "descr1": "", 
    "crawled_date": "2017-06-10T13:59:26.472022"
  }
}
